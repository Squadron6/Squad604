typedef char *__builtin_va_list;
extern "C" {
    typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
    typedef typeof (sizeof(int)) size_t;
    typedef unsigned char __u_char;
    typedef unsigned short __u_short;
    typedef unsigned int __u_int;
    typedef unsigned long __u_long;
    typedef signed char __int8_t;
    typedef unsigned char __uint8_t;
    typedef short __int16_t;
    typedef unsigned short __uint16_t;
    typedef int __int32_t;
    typedef unsigned int __uint32_t;
    typedef long long __int64_t;
    typedef unsigned long long __uint64_t;
    typedef long long __quad_t;
    typedef unsigned long long __u_quad_t;
    typedef __u_quad_t __dev_t;
    typedef unsigned int __uid_t;
    typedef unsigned int __gid_t;
    typedef unsigned long __ino_t;
    typedef __u_quad_t __ino64_t;
    typedef unsigned int __mode_t;
    typedef unsigned int __nlink_t;
    typedef long __off_t;
    typedef __quad_t __off64_t;
    typedef int __pid_t;
    struct {
        int __val[2];
    };
    typedef struct __fsid_t __fsid_t;
    typedef long __clock_t;
    typedef unsigned long __rlim_t;
    typedef __u_quad_t __rlim64_t;
    typedef unsigned int __id_t;
    typedef long __time_t;
    typedef unsigned int __useconds_t;
    typedef long __suseconds_t;
    typedef int __daddr_t;
    typedef long __swblk_t;
    typedef int __key_t;
    typedef int __clockid_t;
    typedef void *__timer_t;
    typedef long __blksize_t;
    typedef long __blkcnt_t;
    typedef __quad_t __blkcnt64_t;
    typedef unsigned long __fsblkcnt_t;
    typedef __u_quad_t __fsblkcnt64_t;
    typedef unsigned long __fsfilcnt_t;
    typedef __u_quad_t __fsfilcnt64_t;
    typedef int __ssize_t;
    typedef __off64_t __loff_t;
    typedef __quad_t *__qaddr_t;
    typedef char *__caddr_t;
    typedef int __intptr_t;
    typedef unsigned int __socklen_t;
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef __off_t off_t;
    typedef __off64_t off64_t;
    typedef __ssize_t ssize_t;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
extern "C" {
    typedef __u_char u_char;
    typedef __u_short u_short;
    typedef __u_int u_int;
    typedef __u_long u_long;
    typedef __quad_t quad_t;
    typedef __u_quad_t u_quad_t;
    typedef __fsid_t fsid_t;
    typedef __loff_t loff_t;
    typedef __ino_t ino_t;
    typedef __ino64_t ino64_t;
    typedef __dev_t dev_t;
    typedef __gid_t gid_t;
    typedef __mode_t mode_t;
    typedef __nlink_t nlink_t;
    typedef __uid_t uid_t;
    typedef __pid_t pid_t;
    typedef __id_t id_t;
    typedef __daddr_t daddr_t;
    typedef __caddr_t caddr_t;
    typedef __key_t key_t;
    typedef __clock_t clock_t;
    typedef __time_t time_t;
    typedef __clockid_t clockid_t;
    typedef __timer_t timer_t;
    typedef __useconds_t useconds_t;
    typedef __suseconds_t suseconds_t;
    typedef unsigned long ulong;
    typedef unsigned short ushort;
    typedef unsigned int uint;
    typedef signed char int8_t;
    typedef short int16_t;
    typedef int int32_t;
    typedef long long int64_t;
    typedef unsigned char u_int8_t;
    typedef unsigned short u_int16_t;
    typedef unsigned int u_int32_t;
    typedef unsigned long long u_int64_t;
    typedef int register_t;
    typedef int __sig_atomic_t;
    struct {
        unsigned long __val[32];
    };
    typedef struct __sigset_t __sigset_t;
    typedef __sigset_t sigset_t;
    struct timespec {
        struct timespec;
        __time_t tv_sec;
        long tv_nsec;
    };
    struct timeval {
        struct timeval;
        __time_t tv_sec;
        __suseconds_t tv_usec;
    };
    typedef long __fd_mask;
    struct {
        __fd_mask fds_bits[32];
    };
    typedef struct fd_set fd_set;
    typedef __fd_mask fd_mask;
    extern "C" {
        extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
        extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
    }
    extern "C" {
        extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
        extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
        extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
    }
    typedef __blksize_t blksize_t;
    typedef __blkcnt_t blkcnt_t;
    typedef __fsblkcnt_t fsblkcnt_t;
    typedef __fsfilcnt_t fsfilcnt_t;
    typedef __blkcnt64_t blkcnt64_t;
    typedef __fsblkcnt64_t fsblkcnt64_t;
    typedef __fsfilcnt64_t fsfilcnt64_t;
    typedef unsigned long pthread_t;
    union {
        char __size[36];
        long __align;
    };
    typedef union pthread_attr_t pthread_attr_t;
    struct __pthread_internal_slist {
        struct __pthread_internal_slist;
        struct __pthread_internal_slist *__next;
    };
    typedef struct __pthread_internal_slist __pthread_slist_t;
    union {
        struct __pthread_mutex_s {
            struct __pthread_mutex_s;
            int __lock;
            unsigned int __count;
            int __owner;
            int __kind;
            unsigned int __nusers;
            union {
                int __spins;
                __pthread_slist_t __list;
            } ;
            ;
            ;
        };
        struct __pthread_mutex_s __data;
        char __size[24];
        long __align;
    };
    typedef union pthread_mutex_t pthread_mutex_t;
    union {
        char __size[4];
        long __align;
    };
    typedef union pthread_mutexattr_t pthread_mutexattr_t;
    union {
        struct {
            int __lock;
            unsigned int __futex;
            unsigned long long __total_seq;
            unsigned long long __wakeup_seq;
            unsigned long long __woken_seq;
            void *__mutex;
            unsigned int __nwaiters;
            unsigned int __broadcast_seq;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
        char __size[48];
        long long __align;
    };
    typedef union pthread_cond_t pthread_cond_t;
    union {
        char __size[4];
        long __align;
    };
    typedef union pthread_condattr_t pthread_condattr_t;
    typedef unsigned int pthread_key_t;
    typedef int pthread_once_t;
    union {
        struct {
            int __lock;
            unsigned int __nr_readers;
            unsigned int __readers_wakeup;
            unsigned int __writer_wakeup;
            unsigned int __nr_readers_queued;
            unsigned int __nr_writers_queued;
            unsigned char __flags;
            unsigned char __shared;
            unsigned char __pad1;
            unsigned char __pad2;
            int __writer;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
        char __size[32];
        long __align;
    };
    typedef union pthread_rwlock_t pthread_rwlock_t;
    union {
        char __size[8];
        long __align;
    };
    typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
    typedef volatile int pthread_spinlock_t;
    union {
        char __size[20];
        long __align;
    };
    typedef union pthread_barrier_t pthread_barrier_t;
    union {
        char __size[4];
        int __align;
    };
    typedef union pthread_barrierattr_t pthread_barrierattr_t;
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef int intptr_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
extern "C" {
    struct {
        long long quot;
        long long rem;
    };
    typedef struct imaxdiv_t imaxdiv_t;
    extern intmax_t imaxabs(intmax_t __n) throw();
    extern imaxdiv_t imaxdiv(intmax_t __numer, intmax_t __denom) throw();
    extern intmax_t strtoimax(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern uintmax_t strtoumax(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern intmax_t wcstoimax(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern uintmax_t wcstoumax(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
}
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0xa0f08a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0xa0f0900 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0xa0f0960 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0xa0f09c0 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0xa0f0b60 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0xa0f0bc0 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0xa0f0c20 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
typedef unsigned int wint_t;
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa6615b0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa661304 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa202040 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc> class allocator;
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4bf8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa1e4be0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa1e4ba0 <col:9> 'char_type':'char' lvalue ParmVar 0xa1e36d0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e4bd0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa1e4bb8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3760 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4ca8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa1e4c98 <col:9, col:24>
    (BinaryOperator 0xa1e4c80 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e4c50 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c40 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c0c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3880 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4c70 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c60 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c24 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa1e38d0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4d58 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa1e4d48 <col:9, col:23>
    (BinaryOperator 0xa1e4d30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e4d00 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4cf0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cbc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e39f0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4d20 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4d10 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cd4 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa1e3a40 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e4e80 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa1e4e70 <col:9, col:48>
    (CallExpr 0xa1e4df8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa1e4de8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4d6c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa1e4e30 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e20 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d84 <col:33> 'const char_type *' lvalue ParmVar 0xa1e3b40 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e50 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e40 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d9c <col:39> 'const char_type *' lvalue ParmVar 0xa1e3b90 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e60 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e4db4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3bd0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e5018 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa1e5008 <col:9, col:36>
    (CallExpr 0xa1e4fd8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa1e4fc8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4f74 <col:16> 'unsigned int (const char *)' lvalue Function 0xa1e4ea0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa1e4ff8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e4f8c <col:33> 'const char_type *' lvalue ParmVar 0xa1e3d10 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e68f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa1e68e8 <col:9, col:77>
    (CXXStaticCastExpr 0xa1e68d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa1e6848 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa1e6838 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e67b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa1e6650 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6880 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6870 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e67cc <col:63> 'const char_type *' lvalue ParmVar 0xa1e3e30 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa1e68a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6890 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e67e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa1e3ec0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa1e68b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e67fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3e70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6a48 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa1e6a38 <col:9, col:74>
    (CXXStaticCastExpr 0xa1e6a20 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6998 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa1e6988 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e690c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e69d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e69c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6924 <col:58> 'char_type *' lvalue ParmVar 0xa1e40f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e69f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e69e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e693c <col:64> 'const char_type *' lvalue ParmVar 0xa1e4140 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6a00 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6954 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4180 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6ce8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa1e6cd8 <col:9, col:73>
    (CXXStaticCastExpr 0xa1e6cc0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6c38 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa1e6c28 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6bc4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e6c70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bdc <col:57> 'char_type *' lvalue ParmVar 0xa1e42c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e6c90 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c80 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bf4 <col:63> 'const char_type *' lvalue ParmVar 0xa1e4310 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6ca0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6c0c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4350 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e6e38 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa1e6e28 <col:9, col:71>
    (CXXStaticCastExpr 0xa1e6e10 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6d88 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa1e6d78 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6cfc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa1b88e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6dc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6db0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6d14 <col:57> 'char_type *' lvalue ParmVar 0xa1e4430 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa1e6de0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6dd0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e6d2c <col:62> 'char_type':'char' lvalue ParmVar 0xa1e44b0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa1e6df0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6d44 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4470 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1e6eb8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa1e6ea8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1e6e90 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa1e6e80 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa1e6e70 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa1e6e4c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa1e4640 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1e6f70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa1e6f60 <col:9, col:69>
    (CXXStaticCastExpr 0xa1e6f48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa1e6f38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa1e6f18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa1e6f08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa1e6ef8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa1e6ecc <col:65> 'const char_type':'const char' lvalue ParmVar 0xa1e4760 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1e7000 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa1e6ff0 <col:9, col:24>
    (BinaryOperator 0xa1e6fd8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e6fb8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f84 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa1e4880 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1e6fc8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f9c <col:24> 'const int_type':'const int' lvalue ParmVar 0xa1e48d0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1e7078 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa1e7068 <col:9, col:56>
    (CXXStaticCastExpr 0xa1e7050 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa1e7030 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa1e7018 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1e71d8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa1e71c8 <col:9, col:37>
    (ConditionalOperator 0xa1e71a8 <col:16, col:37> 'int'
      (ParenExpr 0xa1e7150 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa1e7138 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa1e7128 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa1e708c <col:17> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &'))
          (CallExpr 0xa1e7108 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa1e70f8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1e70a4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa1e4a10 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa1e7168 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa1e7198 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e7180 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e96e8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa1e96d0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa1e9690 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa1e7590 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e96c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa1e96a8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e83b0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9778 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa1e9768 <col:9, col:24>
    (BinaryOperator 0xa1e9750 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e9730 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e96fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e84d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e9740 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9714 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8520 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9808 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa1e97f8 <col:9, col:23>
    (BinaryOperator 0xa1e97e0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e97c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e978c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8640 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e97d0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e97a4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8690 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9970 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa1e9960 <col:9, col:39>
    (CallExpr 0xa1e9908 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa1e98f8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e989c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa1116a0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0a20 'wmemcmp')))
      (ImplicitCastExpr 0xa1e9930 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9854 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8790 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9940 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e986c <col:30> 'const char_type *' lvalue ParmVar 0xa1e87e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9950 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9884 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8820 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e9a78 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa1e9a68 <col:9, col:26>
    (CallExpr 0xa1e9a38 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa1e9a28 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e99d4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0xa110fe0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa1d0470 'wcslen')))
      (ImplicitCastExpr 0xa1e9a58 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e99bc <col:23> 'const char_type *' lvalue ParmVar 0xa1e8930 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e9bb8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa1e9ba8 <col:9, col:37>
    (ImplicitCastExpr 0xa1e9b98 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa1e9b40 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa1e9b30 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e9b10 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa1114f0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0e80 'wmemchr')))
        (ImplicitCastExpr 0xa1e9b68 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e9ac8 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8a30 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa1e9b78 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1e9ae0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8ac0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa1e9b88 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9af8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8a70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9d20 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa1e9d10 <col:9, col:40>
    (CallExpr 0xa1e9cb8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9ca8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9c4c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa111a00 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0b00 'wmemmove')))
      (ImplicitCastExpr 0xa1e9ce0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c04 <col:25> 'char_type *' lvalue ParmVar 0xa1e8c20 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c1c <col:31> 'const char_type *' lvalue ParmVar 0xa1e8c70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9d00 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9c34 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8cb0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9e60 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa1e9e50 <col:9, col:39>
    (CallExpr 0xa1e9df8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9de8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9db4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0xa111850 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa1d0a90 'wmemcpy')))
      (ImplicitCastExpr 0xa1e9e20 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d6c <col:24> 'char_type *' lvalue ParmVar 0xa1e8dc0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9e30 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d84 <col:30> 'const char_type *' lvalue ParmVar 0xa1e8e10 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9e40 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9d9c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8e50 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e9fc0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa1e9fb0 <col:9, col:37>
    (CallExpr 0xa1e9f58 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9f48 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9ef4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa111bc0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0b70 'wmemset')))
      (ImplicitCastExpr 0xa1e9f80 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9eac <col:24> 'char_type *' lvalue ParmVar 0xa1e8f30 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa1e9f90 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9ec4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa1e8fb0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa1e9fa0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9edc <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8f70 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1ea040 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa1ea030 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa1ea018 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa1ea008 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa1e9ff8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9fe0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9120 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1ea0c0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa1ea0b0 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa1ea098 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa1ea088 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa1ea078 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1ea060 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e9240 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1ea150 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa1ea140 <col:9, col:24>
    (BinaryOperator 0xa1ea128 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1ea108 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0d4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9360 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1ea118 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0ec <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e93c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1ea1c8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa1ea1b8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1ea1a0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa1ea180 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa1ea168 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1eaa38 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa1ea390 <col:9, col:46>
    (ConditionalOperator 0xa1ea370 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa1ea2e8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa1ea2d8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1ea1dc <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa1e9460 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa1ea1f4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa1ea310 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa1ea278 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa1ea268 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1ea20c <col:33> 'int_type (void)' lvalue CXXMethod 0xa1e9500 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa1ea360 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1ea320 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa1ea350 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea338 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa363058 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa363048 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa662110 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa662100 <col:9, col:29>
    (ImplicitCastExpr 0xa6620f0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa6620d0 <col:17, col:29> 'char *' lvalue ._M_p 0xa3635e0
        (MemberExpr 0xa6620b0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa363610
          (CXXThisExpr 0xa661f90 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa661f78 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa661f68 <col:9, col:59>
    (UnaryOperator 0xa661f50 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa661f38 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa661f20 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa661f08 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa661ef0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa661ed0 <col:44, col:52> 'char *'
                (MemberExpr 0xa661eb0 <col:44> '<bound member function type>' ->_M_data 0xa363690
                  (CXXThisExpr 0xa661ea0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa6618c8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa6618b8 <col:9, col:26>
    (ImplicitCastExpr 0xa6618a8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa661888 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa383590
        (ImplicitCastExpr 0xa661878 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa661840 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa661820 <col:16> '<bound member function type>' ->_M_rep 0xa363960
              (CXXThisExpr 0xa6616f8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa6616e0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa6616d0 <col:9, col:32>
    (BinaryOperator 0xa6616b8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa661688 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa661668 <col:16, col:22> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa661658 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa6616a8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa6627b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662238 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa6621e0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa6621d0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662164 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa6621b0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662190 <col:13, col:19> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa662180 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa662208 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa6621f8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662228 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6627a0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa662790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa662778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa662730 <col:9, col:17> 'char *'
          (MemberExpr 0xa662710 <col:9> '<bound member function type>' ->_M_data 0xa363690
            (CXXThisExpr 0xa662700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa662768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66274c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa661118 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa660f78 <line:180:4, col:62>
    0xa660da0 "void *__p =
      (CXXReinterpretCastExpr 0xa660f60 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa660f48 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa660ef0 <col:41> 'size_type []' lvalue Var 0xa3ab430 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa661108 <line:181:4, col:39>
    (UnaryOperator 0xa6610f0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa6610d8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa6610c8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa6610ac <col:36> 'void *' lvalue Var 0xa660da0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0xa664da0 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa664d90 <col:11, col:38>
    (BinaryOperator 0xa664d78 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0xa664d68 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0xa664d48 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0xa3aac00
          (ImplicitCastExpr 0xa664d38 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa664d28 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0xa30a9c0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0xa665620 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa665608 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0xa6655e8 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
      (ImplicitCastExpr 0xa6655d8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0xa6655c8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0xa30ab58 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa6655b0 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa665590 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa664ff0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa664fa8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa664f98 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30acf0 <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa664fd0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa664f80 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa664e00 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa664f68 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa664f48 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa664f38 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa664f20 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa664fe0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30add8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa665570 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0xa665030 <line:207:8, col:30> 'void'
        (MemberExpr 0xa665010 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0xa3ab770
          (CXXThisExpr 0xa665000 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0xa6650b8 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0xa665070 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
          (ImplicitCastExpr 0xa665060 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa665050 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0xa6650a8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa665090 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
      (CallExpr 0xa665548 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0xa665538 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa665518 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0xa6653d8 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0xa665390 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0xa665370 <col:28, col:34> '<bound member function type>' ->_M_refdata 0xa3aba10
              (CXXThisExpr 0xa665360 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0xa6653c8 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa6653ac <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0xa665500 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0xa3ab2a0 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0xa6656d0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa6656c0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa6656a8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa665690 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa665680 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa30b0b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa660d88 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa660d68 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa660a90 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa660a48 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa660a38 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30b3ac <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa660a70 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa660a20 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa660880 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa660a08 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa6609e8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa6609d8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6609a0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa660a80 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30d4e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa660d50 <line:236:6, line:245:6>
      (NullStmt 0xa30d520 <line:238:67>)
      (IfStmt 0xa660d30 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa660b88 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa660b60 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa660b50 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa30d550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa660b38 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa660b18 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
                (ImplicitCastExpr 0xa660b08 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa660ae0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa30d5e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa30d5d0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa30d628 <col:16> 'int' 0))
        (CompoundStmt 0xa660d18 <line:241:3, line:244:3>
          (NullStmt 0xa30d6a8 <line:242:63>)
          (CXXMemberCallExpr 0xa660cf8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa660cc0 <col:5> '<bound member function type>' ->_M_destroy 0xa3ac270
              (CXXThisExpr 0xa660ba0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa660ce0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa3ac150 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa65ffe0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa388608 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa3885f8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa660820 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa660810 <col:9, col:29>
    (ImplicitCastExpr 0xa660800 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa6607e0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa388b90
        (MemberExpr 0xa6607c0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
          (CXXThisExpr 0xa6606a0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa660688 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa660678 <col:9, col:59>
    (UnaryOperator 0xa660660 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa660648 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa660630 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa660618 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa660600 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa6605e0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa6605c0 <col:44> '<bound member function type>' ->_M_data 0xa388c40
                  (CXXThisExpr 0xa6605b0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa65ff30 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa65ff10 <col:9, col:51> 'void'
    (CXXTemporary 0xa65fe90)
    (CXXMemberCallExpr 0xa65fea8 <col:9, col:51> 'void'
      (MemberExpr 0xa65fe0c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa3ac1a0
        (CXXMemberCallExpr 0xa65fde0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa65fdc0 <col:9> '<bound member function type>' ->_M_rep 0xa388f30
            (ImplicitCastExpr 0xa65fe00 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa65fca0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa65ff00 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa65fef0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa65fe98 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa65fe90)
            (CXXMemberCallExpr 0xa65fe60 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa65fe40 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa3a09e0
                (ImplicitCastExpr 0xa65fe80 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa65fe30 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa662a60 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa662a50 <col:9, col:26>
    (ImplicitCastExpr 0xa662a40 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa662a20 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
        (ImplicitCastExpr 0xa662a10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa6629f0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa6629d0 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa6628b0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0xa664cd0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa664cc0 <col:9, col:26>
    (ImplicitCastExpr 0xa664cb0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa664c90 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0xa3aabd0
        (ImplicitCastExpr 0xa664c80 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa664c60 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa664c40 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa664b18 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa662898 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa662888 <col:9, col:32>
    (BinaryOperator 0xa662870 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa662840 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa662820 <col:16, col:22> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662810 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa662860 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa663100 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662b88 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa662b30 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa662b20 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662ab4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa662b00 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662ae0 <col:13, col:19> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662ad0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa662b58 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa662b48 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662b78 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6630f0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa6630e0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa6630c8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa663080 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa663060 <col:9> '<bound member function type>' ->_M_data 0xa388c40
            (CXXThisExpr 0xa663050 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa6630b8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66309c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0xa663a70 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa3161e8 <line:998:32>)
  (ReturnStmt 0xa663a60 <line:999:2, col:51>
    (CXXMemberCallExpr 0xa663a28 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa663a04 <col:9, col:15> '<bound member function type>' ->append 0xa392a80
        (CXXThisExpr 0xa663648 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa663a50 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6636a8 <col:22> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))
      (CallExpr 0xa663998 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa663988 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa66392c <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa1e89b0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa6639b8 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa66394c <col:47> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0xa664af8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa663ca8 <line:1044:2, col:42>
    0xa663bb0 "const size_type __len =
      (BinaryOperator 0xa663c90 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0xa663c80 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3164e8 <col:26> 'int' 1))
        (CXXMemberCallExpr 0xa663c50 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0xa663c30 <col:30, col:36> '<bound member function type>' ->size 0xa38fe30
            (ImplicitCastExpr 0xa663c70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663c20 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0xa664038 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa663f78 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0xa663d80 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0xa663d70 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa663cf4 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0xa663d40 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0xa663d20 <col:14, col:20> '<bound member function type>' ->capacity 0xa390790
            (ImplicitCastExpr 0xa663d60 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663d10 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0xa663f30 <col:34, col:57> '_Bool'
        (MemberExpr 0xa663f0c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0xa3ab690
          (ImplicitCastExpr 0xa663f68 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0xa663ee0 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0xa663ec0 <col:34> '<bound member function type>' ->_M_rep 0xa388f30
                (ImplicitCastExpr 0xa663f00 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa663d98 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0xa664008 <line:1046:4, col:23> 'void'
      (MemberExpr 0xa663fd0 <col:4, col:10> '<bound member function type>' ->reserve 0xa390970
        (CXXThisExpr 0xa663fc0 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa664028 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa663ff0 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0xa6648e8 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0xa6648d8 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa66487c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0xa664850 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0xa6647c0 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0xa6647a0 <col:22> '<bound member function type>' ->_M_data 0xa388c40
          (ImplicitCastExpr 0xa6647e0 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664790 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0xa664820 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0xa664800 <col:32, col:38> '<bound member function type>' ->size 0xa38fe30
          (ImplicitCastExpr 0xa664840 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa6647f0 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664910 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0xa664864 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0xa393380 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0xa664ac8 <line:1048:2, col:44> 'void'
    (MemberExpr 0xa664a8c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0xa3ab950
      (CXXMemberCallExpr 0xa664a60 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0xa664a40 <col:2> '<bound member function type>' ->_M_rep 0xa388f30
          (ImplicitCastExpr 0xa664a80 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664920 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664ae8 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa664aac <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa663630 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa663620 <col:9, col:24>
    (ImplicitCastExpr 0xa663610 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa6635f0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa6635d0 <col:16> '<bound member function type>' ->_M_data 0xa388c40
          (CXXThisExpr 0xa6635c0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa6612f0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa6612e0 <col:9, col:16>
    (CXXConstructExpr 0xa6612b8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa6612a8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa661298 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa661250 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
            (CXXThisExpr 0xa661130 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa678cb8 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa678c68 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa678a20 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa678a10 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa6789f0 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0xa678750 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0xa678c50 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa678c40 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa678c1c <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0xa678ba0 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0xa678788 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa678738 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0xa6784f8 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa6784e8 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa6784c4 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0xa1490c0 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0xa678720 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0xa678710 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0xa6786ec <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0xa678670 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0xa143300 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0xa143268 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0xa143240 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0xa1432e0 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0xa1432b8 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0xa144e80 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0xa145310 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0xa1459b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa145960 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0xa145660 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0xa1459b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa145960 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa15de48 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa146bc0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147228 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1471d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa1487c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa147b00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa15f408 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa146bc0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147848 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1477f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa146f18 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa146ec0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa148de8 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa148d90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa149408 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1493b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147538 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1474e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa149718 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1496c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa1490f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1490a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14aae8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14aa90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14a7d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14a780 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14a4c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14a470 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa148ad8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa148a80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa15ee98 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa146bc0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0xa146bc0 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa146f18 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa146ec0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147228 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1471d0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147538 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1474e0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa147848 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1477f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa1487c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa147b00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa148ad8 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa148a80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa148de8 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa148d90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa1490f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1490a0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa149408 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1493b0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa149718 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa1496c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14a4c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14a470 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14a7d8 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14a780 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0xa14aae8 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14aa90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14c4b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14c460 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14b148 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14b0f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa6786a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14adf0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14c1a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14c150 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0xa14adf0 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14b148 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14b0f0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14c1a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14c150 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0xa14c4b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14c460 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0xa678bd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14c7c0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0xa14c7c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0xa14cbe0 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0xa6770f8 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa14dc20 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0xa14dc20 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0xa14e1a0 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa1505b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa150560 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa1508c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa150870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0xa150260 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa1505b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa150560 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0xa1508c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa150870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa151d88 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa151d30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa1523a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa152350 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa152098 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa152040 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0xa151a30 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa151d88 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa151d30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa152098 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa152040 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0xa1523a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa152350 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0xa1526b0 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0xa15c9a8 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0xa15c998 <col:7, col:23>
    (BinaryOperator 0xa15c980 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0xa15c94c <col:14> '_Type *' lvalue ParmVar 0xa15c820 '__ptr' '_Type *')
      (IntegerLiteral 0xa15c968 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0xa15d3a0 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0xa15d390 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa15d380 <col:14> '_Bool' false)))

;
    template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0xa15d4c0 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0xa47bc30 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa47bc18 <col:3, col:68> 'int'
    (ConditionalOperator 0xa47bbf8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa47ba50 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa47ba38 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa47ba28 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa47ba10 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa47ba00 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0xa165208 <col:37, col:40> 'int'
                  (UnaryOperator 0xa1651f0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa1651d8 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa165240 <col:44> 'int' 0)))
      (BinaryOperator 0xa47bba0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa47bb90 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa47ba80 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa47ba70 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0xa165288 <col:33> 'int' 1))))
        (ParenExpr 0xa47bb78 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa47bb60 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa47bac8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa47baa0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0xa47bab8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa1652e0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa47bb50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa47bb38 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa47bb20 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa47bb10 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa47baf8 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0xa47bae8 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0xa165350 <col:37, col:40> 'int'
                          (UnaryOperator 0xa165338 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0xa165320 <col:39> 'int' 1))))))
                  (IntegerLiteral 0xa165388 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa47bbe8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa47bbd0 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0xa47bbc0 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0xa165418 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0xa47bfd0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0xa47bfb8 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa47bf98 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa47bcf0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa47bcd8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa47bcc8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa47bcb0 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0xa47bca0 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0xa1654f8 <col:37, col:40> 'int'
                  (UnaryOperator 0xa1654e0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa1654c8 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa165530 <col:44> 'int' 0)))
      (ParenExpr 0xa47bf28 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa47bf10 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa47bef8 <col:5, col:56> 'int'
            (BinaryOperator 0xa47bee0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa47bec8 <col:6, col:50> 'int'
                (BinaryOperator 0xa47beb0 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa47be98 <col:7, col:45> 'int'
                    (BinaryOperator 0xa47be80 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa47be70 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa47bd20 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0xa47bd10 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0xa165578 <col:13> 'int' 1))))
                      (ParenExpr 0xa47be58 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa47be40 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa47be18 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa47be00 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa47bd68 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa47bd40 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0xa47bd58 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0xa1655d0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa47bdf0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa47bdd8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa47bdc0 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa47bdb0 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa47bd98 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0xa47bd88 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0xa165640 <col:37, col:40> 'int'
                                            (UnaryOperator 0xa165628 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0xa165610 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0xa165678 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa47be30 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0xa1656f0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0xa165768 <col:49> 'int' 1)))
              (IntegerLiteral 0xa1657b0 <col:55> 'int' 1)))
          (IntegerLiteral 0xa1657f8 <col:60> 'int' 1)))
      (UnaryOperator 0xa47bf80 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa47bf70 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa47bf58 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0xa47bf48 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0xa165840 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa47c080 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa47c068 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa47c058 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa47c040 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0xa47c030 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0xa165938 <col:37, col:40> 'int'
            (UnaryOperator 0xa165920 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa165908 <col:39> 'int' 1))))))
    (IntegerLiteral 0xa165970 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa47c1e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa47c1c8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa47c1b0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa47c118 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa47c0f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0xa47c108 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa165a28 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa47c1a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa47c188 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa47c170 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa47c160 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa47c148 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0xa47c138 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0xa165a98 <col:37, col:40> 'int'
                    (UnaryOperator 0xa165a80 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa165a68 <col:39> 'int' 1))))))
            (IntegerLiteral 0xa165ad0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0xa3118b8 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0xa311898 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0xa311750 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa311738 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa311720 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0xa165208 <col:37, col:40> 'int'
            (UnaryOperator 0xa1651f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa1651d8 <col:39> 'int' 1))))
        (IntegerLiteral 0xa165240 <col:44> 'int' 0)))
    (BinaryOperator 0xa311860 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0xa311770 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0xa165288 <col:33> 'int' 1))
      (ParenExpr 0xa311848 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa311830 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa3117b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa311790 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0xa3117a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1652e0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa311820 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa311808 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa3117f0 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa3117d8 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0xa165350 <col:37, col:40> 'int'
                    (UnaryOperator 0xa165338 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa165320 <col:39> 'int' 1))))
                (IntegerLiteral 0xa165388 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0xa311880 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0xa165418 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0xa311bc8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0xa311ba8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0xa311960 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa311948 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa311930 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0xa1654f8 <col:37, col:40> 'int'
            (UnaryOperator 0xa1654e0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa1654c8 <col:39> 'int' 1))))
        (IntegerLiteral 0xa165530 <col:44> 'int' 0)))
    (ParenExpr 0xa311b58 <line:51:4, col:61> 'int'
      (BinaryOperator 0xa311b40 <col:5, col:60> 'int' '+'
        (ParenExpr 0xa311b28 <col:5, col:56> 'int'
          (BinaryOperator 0xa311b10 <col:6, col:55> 'int' '<<'
            (ParenExpr 0xa311af8 <col:6, col:50> 'int'
              (BinaryOperator 0xa311ae0 <col:7, col:49> 'int' '-'
                (ParenExpr 0xa311ac8 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0xa311ab0 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0xa311980 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0xa165578 <col:13> 'int' 1))
                    (ParenExpr 0xa311a98 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa311a80 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa311a58 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa311a40 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa3119c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa3119a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0xa3119b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa1655d0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa311a30 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa311a18 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa311a00 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa3119e8 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0xa165640 <col:37, col:40> 'int'
                                      (UnaryOperator 0xa165628 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0xa165610 <col:39> 'int' 1))))
                                  (IntegerLiteral 0xa165678 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0xa311a70 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa1656f0 <col:43> 'int' 1))))))
                (IntegerLiteral 0xa165768 <col:49> 'int' 1)))
            (IntegerLiteral 0xa1657b0 <col:55> 'int' 1)))
        (IntegerLiteral 0xa1657f8 <col:60> 'int' 1)))
    (UnaryOperator 0xa311b90 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0xa311b78 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0xa165840 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0xa311c60 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa311c48 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa311c30 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0xa165938 <col:37, col:40> 'int'
        (UnaryOperator 0xa165920 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0xa165908 <col:39> 'int' 1))))
    (IntegerLiteral 0xa165970 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa311da0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa311d88 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa311d70 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa311cf8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa311cd0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0xa311ce8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa165a28 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa311d60 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa311d48 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa311d30 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa311d18 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0xa165a98 <col:37, col:40> 'int'
                (UnaryOperator 0xa165a80 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0xa165a68 <col:39> 'int' 1))))
            (IntegerLiteral 0xa165ad0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0xa3ca348 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0xa3ca328 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0xa3ca1a0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa3ca188 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa3ca160 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa3ca150 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0xa165208 <col:37, col:40> 'int'
              (UnaryOperator 0xa1651f0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0xa1651d8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa3ca178 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa165240 <col:44> 'int' 0))))
    (BinaryOperator 0xa3ca2e0 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0xa3ca1d0 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa3ca1c0 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa165288 <col:33> 'int' 1)))
      (ParenExpr 0xa3ca2c8 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0xa3ca2b0 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0xa3ca218 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa3ca1f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0xa3ca208 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1652e0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa3ca2a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0xa3ca288 <col:31, col:45> '_Bool'
              (BinaryOperator 0xa3ca270 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0xa3ca248 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0xa3ca238 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0xa165350 <col:37, col:40> 'int'
                      (UnaryOperator 0xa165338 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0xa165320 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0xa3ca260 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0xa165388 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0xa3ca310 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa3ca300 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa165418 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0xa3ca6d8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0xa3ca6b8 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0xa3ca410 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0xa3ca3f8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0xa3ca3d0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0xa3ca3c0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0xa1654f8 <col:37, col:40> 'int'
              (UnaryOperator 0xa1654e0 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0xa1654c8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0xa3ca3e8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa165530 <col:44> 'int' 0))))
    (ParenExpr 0xa3ca658 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0xa3ca640 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0xa3ca618 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0xa3ca600 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0xa3ca5e8 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0xa3ca5d0 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0xa3ca5a8 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0xa3ca590 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0xa3ca440 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0xa3ca430 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0xa165578 <col:13> 'int' 1)))
                    (ParenExpr 0xa3ca578 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0xa3ca560 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0xa3ca538 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0xa3ca520 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0xa3ca488 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa3ca460 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0xa3ca478 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa1655d0 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0xa3ca510 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0xa3ca4f8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0xa3ca4e0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0xa3ca4b8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0xa3ca4a8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0xa165640 <col:37, col:40> 'int'
                                        (UnaryOperator 0xa165628 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0xa165610 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0xa3ca4d0 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0xa165678 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0xa3ca550 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa1656f0 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0xa3ca5c0 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0xa165768 <col:49> 'int' 1))))
            (IntegerLiteral 0xa1657b0 <col:55> 'int' 1)))
        (ImplicitCastExpr 0xa3ca630 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa1657f8 <col:60> 'int' 1))))
    (UnaryOperator 0xa3ca6a0 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0xa3ca688 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0xa3ca678 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0xa165840 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0xa3ca790 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa3ca778 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0xa3ca750 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0xa3ca740 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0xa165938 <col:37, col:40> 'int'
          (UnaryOperator 0xa165920 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0xa165908 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0xa3ca768 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0xa165970 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0xa3ca8f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa3ca8d8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa3ca8c0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa3ca828 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa3ca800 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0xa3ca818 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa165a28 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa3ca8b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa3ca898 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa3ca880 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0xa3ca858 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0xa3ca848 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0xa165a98 <col:37, col:40> 'int'
                  (UnaryOperator 0xa165a80 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa165a68 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0xa3ca870 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0xa165ad0 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0xa52c180 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa52c168 <col:3, col:68> 'int'
    (ConditionalOperator 0xa52c148 <line:42:31, line:47:67> 'int'
      (ParenExpr 0xa52bfa0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa52bf88 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa52bf78 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa52bf60 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa52bf50 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0xa165208 <col:37, col:40> 'int'
                  (UnaryOperator 0xa1651f0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa1651d8 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa165240 <col:44> 'int' 0)))
      (BinaryOperator 0xa52c0f0 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0xa52c0e0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0xa52bfd0 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa52bfc0 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0xa165288 <col:33> 'int' 1))))
        (ParenExpr 0xa52c0c8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0xa52c0b0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0xa52c018 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0xa52bff0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0xa52c008 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa1652e0 <col:22> 'int' 8)))
            (ImplicitCastExpr 0xa52c0a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0xa52c088 <col:31, col:45> '_Bool'
                (BinaryOperator 0xa52c070 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0xa52c060 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0xa52c048 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0xa52c038 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0xa165350 <col:37, col:40> 'int'
                          (UnaryOperator 0xa165338 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0xa165320 <col:39> 'int' 1))))))
                  (IntegerLiteral 0xa165388 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0xa52c138 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0xa52c120 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0xa52c110 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0xa165418 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0xa52c520 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0xa52c508 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0xa52c4e8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0xa52c240 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0xa52c228 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0xa52c218 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0xa52c200 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0xa52c1f0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0xa1654f8 <col:37, col:40> 'int'
                  (UnaryOperator 0xa1654e0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa1654c8 <col:39> 'int' 1))))))
          (IntegerLiteral 0xa165530 <col:44> 'int' 0)))
      (ParenExpr 0xa52c478 <line:51:4, col:61> 'int'
        (BinaryOperator 0xa52c460 <col:5, col:60> 'int' '+'
          (ParenExpr 0xa52c448 <col:5, col:56> 'int'
            (BinaryOperator 0xa52c430 <col:6, col:55> 'int' '<<'
              (ParenExpr 0xa52c418 <col:6, col:50> 'int'
                (BinaryOperator 0xa52c400 <col:7, col:49> 'int' '-'
                  (ParenExpr 0xa52c3e8 <col:7, col:45> 'int'
                    (BinaryOperator 0xa52c3d0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0xa52c3c0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0xa52c270 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0xa52c260 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0xa165578 <col:13> 'int' 1))))
                      (ParenExpr 0xa52c3a8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0xa52c390 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0xa52c368 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0xa52c350 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0xa52c2b8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0xa52c290 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0xa52c2a8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0xa1655d0 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0xa52c340 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0xa52c328 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0xa52c310 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0xa52c300 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0xa52c2e8 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0xa52c2d8 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0xa165640 <col:37, col:40> 'int'
                                            (UnaryOperator 0xa165628 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0xa165610 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0xa165678 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0xa52c380 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0xa1656f0 <col:43> 'int' 1))))))
                  (IntegerLiteral 0xa165768 <col:49> 'int' 1)))
              (IntegerLiteral 0xa1657b0 <col:55> 'int' 1)))
          (IntegerLiteral 0xa1657f8 <col:60> 'int' 1)))
      (UnaryOperator 0xa52c4d0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0xa52c4c0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0xa52c4a8 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0xa52c498 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0xa165840 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0xa52c5d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0xa52c5b8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0xa52c5a8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0xa52c590 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0xa52c580 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0xa165938 <col:37, col:40> 'int'
            (UnaryOperator 0xa165920 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa165908 <col:39> 'int' 1))))))
    (IntegerLiteral 0xa165970 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0xa52c730 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0xa52c718 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0xa52c700 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0xa52c668 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa52c640 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0xa52c658 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa165a28 <col:22> 'int' 8)))
      (ImplicitCastExpr 0xa52c6f0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0xa52c6d8 <col:31, col:45> '_Bool'
          (BinaryOperator 0xa52c6c0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0xa52c6b0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0xa52c698 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0xa52c688 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0xa165a98 <col:37, col:40> 'int'
                    (UnaryOperator 0xa165a80 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0xa165a68 <col:39> 'int' 1))))))
            (IntegerLiteral 0xa165ad0 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0xa165470 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0xa165450 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0xa165270 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa165258 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa165228 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa165208 <col:37, col:40> 'int'
            (UnaryOperator 0xa1651f0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa1651d8 <col:39> 'int' 1))))
        (IntegerLiteral 0xa165240 <col:44> 'int' 0)))
    (BinaryOperator 0xa165400 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0xa1652a8 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0xa165288 <col:33> 'int' 1))
      (ParenExpr 0xa1653e8 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0xa1653d0 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0xa165308 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1652c8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0xa1652f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1652e0 <col:22> 'int' 8)))
          (ParenExpr 0xa1653b8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0xa1653a0 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0xa165370 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0xa165350 <col:37, col:40> 'int'
                  (UnaryOperator 0xa165338 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0xa165320 <col:39> 'int' 1))))
              (IntegerLiteral 0xa165388 <col:44> 'int' 0))))))
    (CStyleCastExpr 0xa165438 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0xa165418 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0xa1658b0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0xa165890 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0xa165560 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa165548 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa165518 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa1654f8 <col:37, col:40> 'int'
            (UnaryOperator 0xa1654e0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa1654c8 <col:39> 'int' 1))))
        (IntegerLiteral 0xa165530 <col:44> 'int' 0)))
    (ParenExpr 0xa165828 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0xa165810 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0xa1657e0 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0xa1657c8 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0xa165798 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0xa165780 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0xa165750 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0xa165738 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0xa165598 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0xa165578 <col:13> 'int' 1))
                    (ParenExpr 0xa165720 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0xa165708 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0xa1656d8 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0xa1656c0 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0xa1655f8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0xa1655b8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0xa1655e8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0xa1655d0 <col:22> 'int' 8)))
                            (ParenExpr 0xa1656a8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0xa165690 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0xa165660 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0xa165640 <col:37, col:40> 'int'
                                    (UnaryOperator 0xa165628 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0xa165610 <col:39> 'int' 1))))
                                (IntegerLiteral 0xa165678 <col:44> 'int' 0)))))
                        (IntegerLiteral 0xa1656f0 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0xa165768 <col:49> 'int' 1)))
            (IntegerLiteral 0xa1657b0 <col:55> 'int' 1)))
        (IntegerLiteral 0xa1657f8 <col:60> 'int' 1)))
    (UnaryOperator 0xa165878 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0xa165860 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0xa165840 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0xa1659a0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0xa165988 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0xa165958 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0xa165938 <col:37, col:40> 'int'
        (UnaryOperator 0xa165920 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0xa165908 <col:39> 'int' 1))))
    (IntegerLiteral 0xa165970 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0xa165b30 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0xa165b18 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0xa165a50 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0xa165a10 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0xa165a40 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa165a28 <col:22> 'int' 8)))
    (ParenExpr 0xa165b00 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0xa165ae8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0xa165ab8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0xa165a98 <col:37, col:40> 'int'
            (UnaryOperator 0xa165a80 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0xa165a68 <col:39> 'int' 1))))
        (IntegerLiteral 0xa165ad0 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0xa1673b8 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0xa1673a0 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0xa167388 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0xa167378 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0xa166ef8 <col:4> 'int' 2))
      (BinaryOperator 0xa167360 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0xa167320 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0xa167310 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0xa1672e0 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0xa1672c0 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0xa1670a0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0xa1670c8 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0xa1672a0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0xa167248 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0xa167270 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0xa167288 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0xa1672f8 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0xa167350 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0xa167338 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0xa167408 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0xa167c30 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0xa167c10 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0xa167590 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0xa1675b8 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0xa167bf0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0xa167b98 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0xa167bc0 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0xa167bd8 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0xa167fb0 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0xa167f90 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0xa167dc0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0xa167de8 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0xa167f70 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0xa167f18 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0xa167f40 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0xa167f58 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0xa169420 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0xa169410 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0xa1693f8 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0xa1693d0 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0xa1693b8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0xa169358 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0xa16930c <col:61> '_Tp' lvalue ParmVar 0xa1691c0 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0xa169848 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0xa169778 <line:127:7, col:37>
    0xa169710 "_Tp __tmp =
      (ParenExpr 0xa169760 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0xa169744 <line:127:33> '_Tp' lvalue ParmVar 0xa169580 '__a' '_Tp &'))")
  (BinaryOperator 0xa1697d0 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0xa169788 <line:128:7> '_Tp' lvalue ParmVar 0xa169580 '__a' '_Tp &')
    (ParenExpr 0xa1697b8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0xa1697a0 <line:128:27> '_Tp' lvalue ParmVar 0xa1695d0 '__b' '_Tp &')))
  (BinaryOperator 0xa169830 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0xa1697e8 <line:129:7> '_Tp' lvalue ParmVar 0xa1695d0 '__b' '_Tp &')
    (ParenExpr 0xa169818 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0xa169800 <line:129:27> '_Tp' lvalue Var 0xa169710 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0xa16e3f8 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0xa16e3d0 <line:138:7, line:139:25>
    (DeclStmt 0xa16e248 <line:138:12, col:26>
      0xa169c50 "size_t __n =
        (ImplicitCastExpr 0xa16e238 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa169c88 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa16e298 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0xa16e288 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa16e258 <col:28> 'size_t':'unsigned int' lvalue Var 0xa169c50 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0xa16e270 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0xa1698e0 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0xa16e2c8 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa16e2b0 <col:41> 'size_t':'unsigned int' lvalue Var 0xa169c50 '__n' 'size_t':'unsigned int'))
    (CallExpr 0xa16e3a8 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa16e2e0 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa169c10 0xa1696d0)
      (ArraySubscriptExpr 0xa16e348 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa16e318 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0xa169a30 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0xa16e330 <col:11> 'size_t':'unsigned int' lvalue Var 0xa169c50 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0xa16e390 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0xa16e35c <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0xa169b10 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0xa16e374 <col:21> 'size_t':'unsigned int' lvalue Var 0xa169c50 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0xa16ef70 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0xa16ef80 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0xa16e990 '__a' 'const _T1 &')
), second((DeclRefExpr 0xa16efd8 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0xa16ea20 '__b' 'const _T2 &')
) (CompoundStmt 0xa16f030 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0xa16f058 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0xa16f040 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0xa16edc0 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0xa16f0e0 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0xa16f0c8 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0xa16edc0 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0xa16f160 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa16fb58 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0xa16fb48 <col:7, col:58>
    (BinaryOperator 0xa16fb30 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa16fa08 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0xa16f9d0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900)
        (CXXDependentScopeMemberExpr 0xa16f948 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa16f930 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16f690 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa16f998 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa16f97c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16f800 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0xa16fb08 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa16fad0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900)
        (CXXDependentScopeMemberExpr 0xa16fa48 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa16fa2c <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16f690 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa16fa98 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0xa16fa7c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16f800 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa170358 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0xa170348 <line:208:7, line:209:62>
    (BinaryOperator 0xa170330 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa1700a8 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa170070 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
        (CXXDependentScopeMemberExpr 0xa16ffe8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa16ffd0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fd50 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0xa170038 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa17001c <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fec0 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0xa170318 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0xa170300 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0xa1701e8 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0xa1701d0 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0xa1701a8 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0xa170170 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
                (CXXDependentScopeMemberExpr 0xa1700e8 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0xa1700cc <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fec0 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0xa170138 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa17011c <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fd50 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0xa1702d8 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa1702a0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
            (CXXDependentScopeMemberExpr 0xa170218 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0xa1701fc <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fd50 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0xa170268 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0xa17024c <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0xa16fec0 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa170d80 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0xa170d70 <col:7, col:26>
    (UnaryOperator 0xa170d58 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa170d40 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa170d18 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa170ce0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900)
          (DeclRefExpr 0xa170cb0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa170a30 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa170cc8 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0xa170ba0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa1712a0 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0xa171290 <col:7, col:20>
    (CXXOperatorCallExpr 0xa171268 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa171230 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
      (DeclRefExpr 0xa171200 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0xa1710f0 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0xa171218 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0xa170f80 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa1717f0 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0xa1717e0 <col:7, col:25>
    (UnaryOperator 0xa1717c8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa1717b0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa171788 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa171750 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
          (DeclRefExpr 0xa171720 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa171610 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa171738 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0xa1714a0 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0xa1727c0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0xa1727b0 <col:7, col:25>
    (UnaryOperator 0xa172798 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa172780 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa172758 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa172720 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0)
          (DeclRefExpr 0xa1726f0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0xa172470 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0xa172708 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0xa1725e0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0xa172c78 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0xa172c68 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0xa172c48 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0xa172c18 <col:29> '_T1' lvalue ParmVar 0xa172970 '__x' '_T1')
      (DeclRefExpr 0xa172c30 <col:34> '_T2' lvalue ParmVar 0xa1729b0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0xa5b47d0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0xa5b7120 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0xa17a540 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0xa17a530 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0xa17a518 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0xa65f9a8 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa65f998 <col:9, col:16>
    (ImplicitCastExpr 0xa65f988 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0xa65f96c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa6774d0 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0xa17aa08 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0xa17a9f8 <col:9, col:16>
    (DeclRefExpr 0xa17a9e0 <col:16> '_Iterator' lvalue ParmVar 0xa17a8c0 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0xa17b6f0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0xa17b6e0 <col:9, col:26>
    (CallExpr 0xa17b6c0 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa17b688 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0xa17b670 <col:16> '_Iterator' lvalue ParmVar 0xa17b550 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa17bd88 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0xa17bc30 <line:78:7, col:72>
    0xa17bbe0 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0xa17bc18 <col:71> 'int' 0)")
  (WhileStmt 0xa17bd48 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa17bca8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa17bc70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80)
      (DeclRefExpr 0xa17bc40 <col:14> '_InputIterator' lvalue ParmVar 0xa17b910 '__first' '_InputIterator')
      (DeclRefExpr 0xa17bc58 <col:25> '_InputIterator' lvalue ParmVar 0xa17b950 '__last' '_InputIterator'))
    (CompoundStmt 0xa17bd30 <line:80:2, line:83:2>
      (UnaryOperator 0xa17bce8 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa17bccc <col:6> '_InputIterator' lvalue ParmVar 0xa17b910 '__first' '_InputIterator'))
      (UnaryOperator 0xa17bd18 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa17bcfc <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa17bbe0 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0xa17bd78 <line:84:7, col:14>
    (DeclRefExpr 0xa17bd5c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa17bbe0 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0xa17c120 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0xa17c110 <line:95:7, col:23>
    (BinaryOperator 0xa17c0f8 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0xa17c0c4 <col:14> '_RandomAccessIterator' lvalue ParmVar 0xa17bf20 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0xa17c0dc <col:23> '_RandomAccessIterator' lvalue ParmVar 0xa17bee0 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa1807c0 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0xa1807b0 <line:115:7, line:116:42>
    (CallExpr 0xa180788 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0xa180698 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17bac0 0xa17c090)
      (DeclRefExpr 0xa1806d0 <col:30> '_InputIterator' lvalue ParmVar 0xa17c270 '__first' '_InputIterator')
      (DeclRefExpr 0xa1806e8 <col:39> '_InputIterator' lvalue ParmVar 0xa17c2b0 '__last' '_InputIterator')
      (CallExpr 0xa180768 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa180718 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17a400)
        (DeclRefExpr 0xa18074c <col:34> '_InputIterator' lvalue ParmVar 0xa17c270 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0xa180b28 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0xa180b10 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0xa180ac8 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0xa180a94 <col:14> '_Distance' lvalue ParmVar 0xa180900 '__n' '_Distance'))
    (UnaryOperator 0xa180af8 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa180adc <col:4> '_InputIterator' lvalue ParmVar 0xa1808c0 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0xa180fc8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0xa180fa8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa180e60 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa180e28 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0)
      (DeclRefExpr 0xa180df4 <col:11> '_Distance' lvalue ParmVar 0xa180c60 '__n' '_Distance')
      (IntegerLiteral 0xa180e10 <col:17> 'int' 0))
    (WhileStmt 0xa180f00 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0xa180eb8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0xa180e84 <col:16> '_Distance' lvalue ParmVar 0xa180c60 '__n' '_Distance'))
      (UnaryOperator 0xa180ee8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa180ecc <col:6> '_BidirectionalIterator' lvalue ParmVar 0xa180c20 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0xa180f90 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0xa180f48 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa180f14 <col:16> '_Distance' lvalue ParmVar 0xa180c60 '__n' '_Distance'))
      (UnaryOperator 0xa180f78 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa180f5c <col:6> '_BidirectionalIterator' lvalue ParmVar 0xa180c20 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0xa1812e8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0xa1812c8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa181294 <col:7> '_RandomAccessIterator' lvalue ParmVar 0xa1810c0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0xa1812ac <col:14> '_Distance' lvalue ParmVar 0xa181100 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0xa182498 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0xa182340 <line:173:7, col:74>
    0xa1822f0 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0xa182324 <col:71> '_Distance' lvalue ParmVar 0xa181420 '__n' '_Distance')")
  (CallExpr 0xa182470 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa182378 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180a60 0xa180dc0 0xa181260)
    (DeclRefExpr 0xa1823b4 <col:22> '_InputIterator' lvalue ParmVar 0xa1813e0 '__i' '_InputIterator &')
    (DeclRefExpr 0xa1823cc <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0xa1822f0 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0xa182450 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa182400 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17a400)
      (DeclRefExpr 0xa182434 <col:57> '_InputIterator' lvalue ParmVar 0xa1813e0 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0xa186200 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0xa186210 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0xa183cd0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0xa186270 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0xa186298 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0xa186280 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa183e10 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0xa186310 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0xa186370 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa186338 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0xa186320 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0xa184070 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0xa1863d0 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0xa186458 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0xa186448 <col:9, col:16>
    (MemberExpr 0xa186424 <col:16> 'const _Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa1863f8 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0xa186550 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0xa1864e8 <line:158:2, col:27>
    0xa186480 "_Iterator __tmp =
      (MemberExpr 0xa1864c8 <col:20> 'const _Iterator' lvalue ->current 0xa182f20
        (CXXThisExpr 0xa1864b8 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0xa186540 <line:159:2, col:12>
    (UnaryOperator 0xa186528 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0xa186510 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa1864f8 <col:12> '_Iterator' lvalue Var 0xa186480 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0xa1865f8 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0xa1865e8 <col:9, col:29>
    (UnaryOperator 0xa1865d0 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0xa1865b8 <col:17, col:29> '<dependent type>'
        (CallExpr 0xa186598 <col:18, col:28> '<dependent type>'
          (MemberExpr 0xa186578 <col:18, col:26> '<bound member function type>' ->operator* 0xa1842c0
            (CXXThisExpr 0xa186568 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0xa186690 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0xa186640 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa186620 <col:4> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa186610 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa186680 <line:180:2, col:10>
    (UnaryOperator 0xa186668 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa186658 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0xa186790 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0xa186710 <line:191:2, col:32>
    0xa1866b0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0xa1866f8 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa1866e8 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0xa186750 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa186730 <col:4> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa186720 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa186780 <line:193:2, col:9>
    (DeclRefExpr 0xa186764 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0xa1866b0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0xa186830 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0xa1867e0 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa1867c0 <col:4> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa1867b0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa186820 <line:205:2, col:10>
    (UnaryOperator 0xa186808 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1867f8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0xa186930 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0xa1868b0 <line:216:2, col:32>
    0xa186850 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0xa186898 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa186888 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0xa1868f0 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa1868d0 <col:4> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa1868c0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0xa186920 <line:218:2, col:9>
    (DeclRefExpr 0xa186904 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0xa186850 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0xa1869e8 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0xa1869d8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa1869b8 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0xa1869a0 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0xa186968 <col:33> 'const _Iterator' lvalue ->current 0xa182f20
          (CXXThisExpr 0xa186958 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0xa186988 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa1846f0 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0xa186aa0 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0xa186a48 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa186a10 <col:2> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa186a00 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0xa186a30 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa184800 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0xa186a90 <line:239:2, col:10>
    (UnaryOperator 0xa186a78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa186a68 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0xa186b50 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0xa186b40 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa186b20 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0xa186b08 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0xa186ad0 <col:33> 'const _Iterator' lvalue ->current 0xa182f20
          (CXXThisExpr 0xa186ac0 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0xa186af0 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa184910 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0xa186c08 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0xa186bb0 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa186b78 <col:2> '_Iterator' lvalue ->current 0xa182f20
      (CXXThisExpr 0xa186b68 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0xa186b98 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa1849d0 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0xa186bf8 <line:260:2, col:10>
    (UnaryOperator 0xa186be0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa186bd0 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0xa186cb8 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0xa186ca8 <col:9, col:29>
    (UnaryOperator 0xa186c90 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0xa186c78 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0xa186c60 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0xa186c30 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0xa186c20 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0xa186c44 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0xa184aa0 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa188aa0 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0xa188a90 <col:7, col:37>
    (CXXOperatorCallExpr 0xa188a68 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa187120 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa187010 0xa16f900)
      (CallExpr 0xa187090 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa187058 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa187040 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa186e10 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa187100 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1870c8 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa1870ac <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa186f10 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa188f40 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0xa188f30 <col:7, col:36>
    (CXXOperatorCallExpr 0xa188f08 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa188ed0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa188dc0 0xa16ffa0)
      (CallExpr 0xa188e40 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa188e08 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa188df0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa188ce0 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa188eb0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa188e78 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa188e5c <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa188be0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa189360 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0xa189350 <col:7, col:26>
    (UnaryOperator 0xa189338 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa189320 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa1892f8 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa1892c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa187010 0xa16f900)
          (DeclRefExpr 0xa189290 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189080 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa1892a8 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189180 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa189750 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0xa189740 <col:7, col:20>
    (CXXOperatorCallExpr 0xa189718 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa1896e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa188dc0 0xa16ffa0)
      (DeclRefExpr 0xa1896b0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa1895a0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0xa1896c8 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa1894a0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa189bd0 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0xa189bc0 <col:7, col:25>
    (UnaryOperator 0xa189ba8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa189b90 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa189b68 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa189b30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa188dc0 0xa16ffa0)
          (DeclRefExpr 0xa189b00 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189990 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa189b18 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189890 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa189ff0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0xa189fe0 <col:7, col:25>
    (UnaryOperator 0xa189fc8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa189fb0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa189f88 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa189f50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa188dc0 0xa16ffa0)
          (DeclRefExpr 0xa189f20 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189d10 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0xa189f38 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa189e10 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0xa18a5c0 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0xa18a5b0 <col:7, col:36>
    (CXXOperatorCallExpr 0xa18a588 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa18a550 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440)
      (CallExpr 0xa18a4c0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a488 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa18a470 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa18a330 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0xa18a530 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18a4f8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa18a4dc <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa18a230 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0xa18ae08 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0xa18adf8 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0xa18add8 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0xa18adb0 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa18ad78 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440)
        (CallExpr 0xa18ad40 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa18ad08 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0xa18acf0 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0xa18a8b0 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0xa18ad5c <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0xa18a7b0 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18b378 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0xa18b368 <col:7, col:37>
    (CXXOperatorCallExpr 0xa18b340 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa18b300 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b1f0 0xa187010 0xa16f900)
      (CallExpr 0xa18b270 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18b238 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa18b220 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18afa0 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0xa18b2e0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18b2a8 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa18b28c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18b0f0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18b878 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0xa18b868 <col:7, col:36>
    (CXXOperatorCallExpr 0xa18b840 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa18b800 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b6f0 0xa188dc0 0xa16ffa0)
      (CallExpr 0xa18b770 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18b738 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa18b720 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18b610 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0xa18b7e0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18b7a8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa18b78c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18b510 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18c348 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0xa18c338 <col:7, col:26>
    (UnaryOperator 0xa18c320 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa18c308 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa18c2e0 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa18c2a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b1f0 0xa187010 0xa16f900)
          (DeclRefExpr 0xa18bc20 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18ba10 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0xa18bc38 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18bb10 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18c798 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0xa18c788 <col:7, col:20>
    (CXXOperatorCallExpr 0xa18c760 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa18c720 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b6f0 0xa188dc0 0xa16ffa0)
      (DeclRefExpr 0xa18c6f0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18c5e0 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0xa18c708 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18c4e0 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18cc18 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0xa18cc08 <col:7, col:25>
    (UnaryOperator 0xa18cbf0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa18cbd8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa18cbb0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa18cb70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b6f0 0xa188dc0 0xa16ffa0)
          (DeclRefExpr 0xa18cb40 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18ca30 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0xa18cb58 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18c930 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18d098 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0xa18d088 <col:7, col:25>
    (UnaryOperator 0xa18d070 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa18d058 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa18d030 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa18cff0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18b6f0 0xa188dc0 0xa16ffa0)
          (DeclRefExpr 0xa18cfc0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18cdb0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0xa18cfd8 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18ceb0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0xa18dce0 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0xa18dcd0 <col:7, col:36>
    (CXXOperatorCallExpr 0xa18dca8 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa18dc70 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18db60 0xa18a440)
      (CallExpr 0xa18dbe0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18dba8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0xa18db90 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0xa18da50 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0xa18dc50 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa18dc18 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0xa18dbfc <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0xa18d950 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0xa18f0d0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa18f0b4 <col:58> '_Container' lvalue ParmVar 0xa18e550 '__x' '_Container &'))
) (CompoundStmt 0xa18f130 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa18f230 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0xa18f1d8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa18f188 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0xa18f168 <col:2> '_Container *' lvalue ->container 0xa18e470
        (CXXThisExpr 0xa18f158 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0xa18f1bc <col:23> 'typename _Container::const_reference' lvalue ParmVar 0xa18e700 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0xa18f220 <line:426:2, col:10>
    (UnaryOperator 0xa18f208 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa18f1f8 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0xa18f280 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0xa18f270 <col:9, col:17>
    (UnaryOperator 0xa18f258 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa18f248 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0xa18f2d0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0xa18f2c0 <col:9, col:17>
    (UnaryOperator 0xa18f2a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa18f298 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0xa18f320 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0xa18f310 <col:9, col:17>
    (UnaryOperator 0xa18f2f8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa18f2e8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0xa18f688 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0xa18f678 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0xa18f658 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0xa18f640 <col:47> '_Container' lvalue ParmVar 0xa18f450 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0xa190bb0 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa190b94 <col:68> '_Container' lvalue ParmVar 0xa18fb90 '__x' '_Container &'))
) (CompoundStmt 0xa190c10 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa190d10 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0xa190cb8 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa190c68 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0xa190c48 <col:2> '_Container *' lvalue ->container 0xa18fab0
        (CXXThisExpr 0xa190c38 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0xa190c9c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0xa18fd00 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0xa190d00 <line:516:2, col:10>
    (UnaryOperator 0xa190ce8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa190cd8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0xa190d60 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0xa190d50 <col:9, col:17>
    (UnaryOperator 0xa190d38 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa190d28 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0xa190db0 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0xa190da0 <col:9, col:17>
    (UnaryOperator 0xa190d88 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa190d78 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0xa190e00 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0xa190df0 <col:9, col:17>
    (UnaryOperator 0xa190dd8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa190dc8 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0xa191168 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0xa191158 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0xa191138 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0xa191120 <col:48> '_Container' lvalue ParmVar 0xa190f30 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0xa192830 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0xa192814 <col:20> '_Container' lvalue ParmVar 0xa191730 '__x' '_Container &'))
), iter((DeclRefExpr 0xa192888 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0xa1917b0 '__i' 'typename _Container::iterator')
) (CompoundStmt 0xa1928e0 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0xa192aa8 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0xa192a10 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0xa192918 <col:2> 'typename _Container::iterator' lvalue ->iter 0xa191650
      (CXXThisExpr 0xa192908 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0xa1929e8 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa192968 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0xa192948 <col:9> '_Container *' lvalue ->container 0xa191590
          (CXXThisExpr 0xa192938 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0xa1929b0 <col:27> 'typename _Container::iterator' lvalue ->iter 0xa191650
        (CXXThisExpr 0xa1929a0 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0xa1929d0 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0xa191930 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0xa192a58 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa192a38 <col:4> 'typename _Container::iterator' lvalue ->iter 0xa191650
      (CXXThisExpr 0xa192a28 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0xa192a98 <line:628:2, col:10>
    (UnaryOperator 0xa192a80 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa192a70 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0xa192b00 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0xa192af0 <col:9, col:17>
    (UnaryOperator 0xa192ad8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa192ac8 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0xa192b50 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0xa192b40 <col:9, col:17>
    (UnaryOperator 0xa192b28 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa192b18 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0xa192ba0 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0xa192b90 <col:9, col:17>
    (UnaryOperator 0xa192b78 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa192b68 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0xa193050 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0xa193040 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0xa193020 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0xa192f70 <line:679:42> '_Container' lvalue ParmVar 0xa192d30 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0xa193000 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0xa192fe4 <col:37> '_Iterator' lvalue ParmVar 0xa192d70 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0xa195b88 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0xa195be0 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0xa195bf0 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0xa1942f0 '__i' 'const _Iterator &')
) (CompoundStmt 0xa195c50 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0xa195cb0 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa195c78 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0xa195c60 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0xa194a10 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0xa195d10 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0xa195db0 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0xa195da0 <col:9, col:17>
    (UnaryOperator 0xa195d88 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0xa195d64 <col:17> 'const _Iterator' lvalue ->_M_current 0xa193450
        (CXXThisExpr 0xa195d38 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0xa195e08 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0xa195df8 <col:9, col:16>
    (MemberExpr 0xa195dd8 <col:16> 'const _Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa195dc8 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0xa195ea0 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0xa195e50 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0xa195e30 <col:4> '_Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa195e20 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0xa195e90 <line:743:2, col:10>
    (UnaryOperator 0xa195e78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa195e68 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0xa195f50 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0xa195f40 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa195f20 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0xa195f08 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0xa195ed0 <col:34> '_Iterator' lvalue ->_M_current 0xa193450
          (CXXThisExpr 0xa195ec0 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0xa195fe8 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0xa195f98 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0xa195f78 <col:4> '_Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa195f68 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0xa195fd8 <line:755:2, col:10>
    (UnaryOperator 0xa195fc0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa195fb0 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0xa196098 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0xa196088 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa196068 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0xa196050 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0xa196018 <col:34> '_Iterator' lvalue ->_M_current 0xa193450
          (CXXThisExpr 0xa196008 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0xa196120 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0xa196110 <col:9, col:30>
    (ArraySubscriptExpr 0xa1960f8 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0xa1960c0 <col:16> 'const _Iterator' lvalue ->_M_current 0xa193450
        (CXXThisExpr 0xa1960b0 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0xa1960e0 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa1955d0 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0xa1961d8 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0xa196180 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa196148 <col:9> '_Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa196138 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0xa196168 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa1956f0 '__n' 'const difference_type &'))
  (ReturnStmt 0xa1961c8 <col:28, col:36>
    (UnaryOperator 0xa1961b0 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1961a0 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0xa196288 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0xa196278 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa196258 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0xa196240 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0xa196208 <col:34> 'const _Iterator' lvalue ->_M_current 0xa193450
          (CXXThisExpr 0xa1961f8 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0xa196228 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa195810 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0xa196340 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0xa1962e8 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa1962b0 <col:9> '_Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa1962a0 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0xa1962d0 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa195930 '__n' 'const difference_type &'))
  (ReturnStmt 0xa196330 <col:28, col:36>
    (UnaryOperator 0xa196318 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa196308 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0xa1963f0 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0xa1963e0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa1963c0 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0xa1963a8 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0xa196370 <col:34> 'const _Iterator' lvalue ->_M_current 0xa193450
          (CXXThisExpr 0xa196360 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0xa196390 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0xa195a10 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0xa196448 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0xa196438 <col:9, col:16>
    (MemberExpr 0xa196418 <col:16> 'const _Iterator' lvalue ->_M_current 0xa193450
      (CXXThisExpr 0xa196408 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa196b80 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0xa196b70 <col:7, col:41>
    (CXXOperatorCallExpr 0xa196b48 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa196b10 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa196a00)
      (CallExpr 0xa196a80 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa196a48 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa196a30 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa196720 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa196af0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa196ab8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa196a9c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa196900 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa197190 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0xa197180 <col:7, col:41>
    (CXXOperatorCallExpr 0xa197158 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa197120 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa197010 0xa196a00)
      (CallExpr 0xa197090 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa197058 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa197040 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa196da0 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa197100 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1970c8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa1970ac <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa196f10 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa198210 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0xa198200 <col:7, col:41>
    (CXXOperatorCallExpr 0xa1981d8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa1981a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa198090)
      (CallExpr 0xa198110 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1980d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1980c0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa1973e0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa198180 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa198148 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa19812c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa197fb0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa1987e0 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0xa1987d0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa1987a8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa198770 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa198660 0xa198090)
      (CallExpr 0xa1986e0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1986a8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa198690 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa198410 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa198750 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa198718 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa1986fc <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa198580 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa198e00 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0xa198df0 <col:7, col:40>
    (CXXOperatorCallExpr 0xa198dc8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa198d90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa198c80)
      (CallExpr 0xa198d00 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa198cc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa198cb0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa198a30 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa198d70 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa198d38 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa198d1c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa198ba0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa199a00 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0xa1999f0 <col:7, col:40>
    (CXXOperatorCallExpr 0xa1999c8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa199990 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa199880 0xa198c80)
      (CallExpr 0xa199900 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1998c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa1998b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa199630 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa199970 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa199938 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa19991c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa1997a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa19a020 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0xa19a010 <col:7, col:40>
    (CXXOperatorCallExpr 0xa199fe8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa199fb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa199ea0)
      (CallExpr 0xa199f20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa199ee8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa199ed0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa199c50 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa199f90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa199f58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa199f3c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa199dc0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa19aa18 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0xa19aa08 <col:7, col:40>
    (CXXOperatorCallExpr 0xa19a9e0 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa19a9a8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19a470 0xa199ea0)
      (CallExpr 0xa19a918 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19a4b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19a4a0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19a220 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa19a988 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19a950 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa19a934 <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19a390 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa19b030 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0xa19b020 <col:7, col:41>
    (CXXOperatorCallExpr 0xa19aff8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa19afc0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19aeb0)
      (CallExpr 0xa19af30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19aef8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19aee0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa19ac60 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa19afa0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19af68 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa19af4c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa19add0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa19b600 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0xa19b5f0 <col:7, col:41>
    (CXXOperatorCallExpr 0xa19b5c8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa19b590 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19b480 0xa19aeb0)
      (CallExpr 0xa19b500 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19b4c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19b4b0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19b230 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa19b570 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19b538 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa19b51c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19b3a0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa19c270 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0xa19c260 <col:7, col:41>
    (CXXOperatorCallExpr 0xa19c238 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa19c200 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19c0f0)
      (CallExpr 0xa19c170 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19c138 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19c120 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa19b850 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa19c1e0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19c1a8 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa19c18c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa19c010 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa19c840 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0xa19c830 <col:7, col:41>
    (CXXOperatorCallExpr 0xa19c808 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0xa19c7d0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19c6c0 0xa19c0f0)
      (CallExpr 0xa19c740 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19c708 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19c6f0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19c470 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa19c7b0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19c778 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa19c75c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19c5e0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0xa19d418 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0xa19d408 <col:7, col:40>
    (CXXOperatorCallExpr 0xa19d3e0 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa19d3a8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19ce60)
      (CallExpr 0xa19cee0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19cea8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19ce90 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0xa19cbe0 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0xa19d388 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19d350 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa19cefc <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0xa19cd50 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0xa19db60 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0xa19db50 <col:7, col:40>
    (CXXOperatorCallExpr 0xa19db28 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa19daf0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19d9e0 0xa19ce60)
      (CallExpr 0xa19da60 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19da28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa19da10 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19d760 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0xa19dad0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa19da98 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa19da7c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19d8d0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0xa19f978 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0xa19e330 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0xa19e310 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0xa19e2e8 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa19e2b0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19e0f0)
        (CallExpr 0xa19e278 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa19e240 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0xa19e228 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0xa19dfc0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0xa19e294 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0xa19de50 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa1a08a0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0xa1a0878 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0xa1a07e0 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0xa1696d0 0xa169c10)
    (UnaryOperator 0xa1a0830 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0818 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa1a0660 '__a' '_ForwardIterator1'))
    (UnaryOperator 0xa1a0860 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0844 <col:23> '_ForwardIterator2' lvalue ParmVar 0xa1a06a0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa1a0378 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0xa1a01b0 <line:87:11, line:88:24>
    0xa1a0180 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0xa1a0260 <line:89:11, col:50>
    0xa1a01e0 "_ValueType1 __tmp =
      (ParenExpr 0xa1a0248 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0xa1a0230 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1a0214 <col:46> '_ForwardIterator1' lvalue ParmVar 0xa19feb0 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0xa1a02e8 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0xa1a0288 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0270 <col:12> '_ForwardIterator1' lvalue ParmVar 0xa19feb0 '__a' '_ForwardIterator1'))
    (ParenExpr 0xa1a02d0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0xa1a02b8 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1a029c <col:33> '_ForwardIterator2' lvalue ParmVar 0xa19fef0 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0xa1a0360 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0xa1a0318 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0300 <col:12> '_ForwardIterator2' lvalue ParmVar 0xa19fef0 '__b' '_ForwardIterator2'))
    (ParenExpr 0xa1a0348 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0xa1a032c </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0xa1a01e0 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa1a08a0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0xa1a0878 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0xa1a07e0 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0xa1696d0 0xa169c10)
    (UnaryOperator 0xa1a0830 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0818 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa1a0660 '__a' '_ForwardIterator1'))
    (UnaryOperator 0xa1a0860 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa1a0844 <col:23> '_ForwardIterator2' lvalue ParmVar 0xa1a06a0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0xa1a4498 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0xa1a3930 <line:120:7, line:121:13>
    0xa1a3900 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0xa1a3ac0 <line:122:7, line:123:13>
    0xa1a3a90 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0xa1a3bf0 <line:135:7, line:136:17>
    0xa1a3bc0 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0xa1a3d40 <line:137:7, line:138:17>
    0xa1a3d10 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0xa1a4470 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa1a4418 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa1a443c <col:12> '_ForwardIterator1' lvalue ParmVar 0xa1a36c0 '__a' '_ForwardIterator1')
    (DeclRefExpr 0xa1a4454 <col:17> '_ForwardIterator2' lvalue ParmVar 0xa1a3700 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0xa159da0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0xa159b78 <line:167:56>)
  (ForStmt 0xa159d50 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa159bf8 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa159bb8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa159b84 <col:14> '_ForwardIterator1' lvalue ParmVar 0xa1a4580 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0xa159b9c <col:26> '_ForwardIterator1' lvalue ParmVar 0xa1a45c0 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0xa159c80 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0xa159c38 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa159c1c <col:37> '_ForwardIterator1' lvalue ParmVar 0xa1a4580 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0xa159c68 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa159c4c <col:49> '_ForwardIterator2' lvalue ParmVar 0xa1a4600 '__first2' '_ForwardIterator2')))
    (CallExpr 0xa159d28 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa159cc0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a37e0)
      (DeclRefExpr 0xa159cf4 <col:17> '_ForwardIterator1' lvalue ParmVar 0xa1a4580 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0xa159d0c <col:27> '_ForwardIterator2' lvalue ParmVar 0xa1a4600 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0xa159d90 <line:171:7, col:14>
    (DeclRefExpr 0xa159d74 <col:14> '_ForwardIterator2' lvalue ParmVar 0xa1a4600 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0xa15a0d8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0xa15a090 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa15a040 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa15a000 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (DeclRefExpr 0xa159fd0 <col:11> 'const _Tp' lvalue ParmVar 0xa159ea0 '__b' 'const _Tp &')
      (DeclRefExpr 0xa159fe8 <col:17> 'const _Tp' lvalue ParmVar 0xa159e50 '__a' 'const _Tp &'))
    (ReturnStmt 0xa15a080 <line:193:2, col:9>
      (DeclRefExpr 0xa15a064 <col:9> 'const _Tp' lvalue ParmVar 0xa159ea0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa15a0c8 <line:194:7, col:14>
    (DeclRefExpr 0xa15a0ac <col:14> 'const _Tp' lvalue ParmVar 0xa159e50 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0xa15a3e8 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0xa15a3a0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa15a350 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa15a310 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (DeclRefExpr 0xa15a2e0 <col:11> 'const _Tp' lvalue ParmVar 0xa15a180 '__a' 'const _Tp &')
      (DeclRefExpr 0xa15a2f8 <col:17> 'const _Tp' lvalue ParmVar 0xa15a1d0 '__b' 'const _Tp &'))
    (ReturnStmt 0xa15a390 <line:216:2, col:9>
      (DeclRefExpr 0xa15a374 <col:9> 'const _Tp' lvalue ParmVar 0xa15a1d0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa15a3d8 <line:217:7, col:14>
    (DeclRefExpr 0xa15a3bc <col:14> 'const _Tp' lvalue ParmVar 0xa15a180 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0xa15a7a8 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0xa15a760 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0xa15a710 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0xa15a6c4 <col:11> '_Compare' lvalue ParmVar 0xa15a570 '__comp' '_Compare')
      (DeclRefExpr 0xa15a6dc <col:18> 'const _Tp' lvalue ParmVar 0xa15a530 '__b' 'const _Tp &')
      (DeclRefExpr 0xa15a6f4 <col:23> 'const _Tp' lvalue ParmVar 0xa15a4e0 '__a' 'const _Tp &'))
    (ReturnStmt 0xa15a750 <line:237:2, col:9>
      (DeclRefExpr 0xa15a734 <col:9> 'const _Tp' lvalue ParmVar 0xa15a530 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa15a798 <line:238:7, col:14>
    (DeclRefExpr 0xa15a77c <col:14> 'const _Tp' lvalue ParmVar 0xa15a4e0 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0xa1a8968 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0xa1a8920 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0xa1a88d0 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0xa15aa54 <col:11> '_Compare' lvalue ParmVar 0xa15a930 '__comp' '_Compare')
      (DeclRefExpr 0xa15aa6c <col:18> 'const _Tp' lvalue ParmVar 0xa15a8a0 '__a' 'const _Tp &')
      (DeclRefExpr 0xa15aa84 <col:23> 'const _Tp' lvalue ParmVar 0xa15a8f0 '__b' 'const _Tp &'))
    (ReturnStmt 0xa1a8910 <line:258:2, col:9>
      (DeclRefExpr 0xa1a88f4 <col:9> 'const _Tp' lvalue ParmVar 0xa15a8f0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0xa1a8958 <line:259:7, col:14>
    (DeclRefExpr 0xa1a893c <col:14> 'const _Tp' lvalue ParmVar 0xa15a8a0 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0xa65f958 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa65f948 <col:7, col:55>
    (CallExpr 0xa65f918 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa65f908 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa65f8ac <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0xa677570 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0xa65f938 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa65f8cc <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa677680 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0xa1a91f0 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0xa1a91e0 <col:7, col:55>
    (CallExpr 0xa1a91c0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9180 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1a91a4 <col:51> '_Iterator' lvalue ParmVar 0xa1a8f80 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0xa1a9ca0 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0xa1a9c90 <col:7, col:55>
    (CallExpr 0xa1a9c70 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1a9c30 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1a9c54 <col:51> '_Iterator' lvalue ParmVar 0xa1a9810 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1ac1f8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0xa1abdc0 <line:326:4, col:68>
    0xa1abd90 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0xa1ac1a8 <line:327:4, line:332:6>
    (DeclStmt 0xa1abeb8 <line:327:8, col:40>
      0xa1abdf0 "_Distance __n =
        (CXXOperatorCallExpr 0xa1abe90 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa1abe58 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa1abe24 <col:24> '_II' lvalue ParmVar 0xa1aa870 '__last' '_II')
          (DeclRefExpr 0xa1abe3c <col:33> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1abf38 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa1abef8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1abec8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa1abdf0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0xa1abee0 <col:48> 'int' 0))
    (UnaryOperator 0xa1abf78 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa1abf5c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa1abdf0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0xa1ac188 <line:328:6, line:332:6>
      (BinaryOperator 0xa1ac110 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0xa1abfa8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1abf8c <col:9> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI'))
        (UnaryOperator 0xa1abfd8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1abfbc <col:21> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II')))
      (UnaryOperator 0xa1ac140 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ac128 <col:10> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II'))
      (UnaryOperator 0xa1ac170 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ac154 <col:10> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI'))))
  (ReturnStmt 0xa1ac1e8 <line:333:4, col:11>
    (DeclRefExpr 0xa1ac1cc <col:11> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1aa4b8 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0xa1aa468 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1aa350 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1aa310 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1aa2e0 <col:11> '_II' lvalue ParmVar 0xa1aa0f0 '__first' '_II')
      (DeclRefExpr 0xa1aa2f8 <col:22> '_II' lvalue ParmVar 0xa1aa130 '__last' '_II'))
    (BinaryOperator 0xa1aa3d8 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0xa1aa390 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1aa374 <col:32> '_OI' lvalue ParmVar 0xa1aa170 '__result' '_OI'))
      (UnaryOperator 0xa1aa3c0 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1aa3a4 <col:44> '_II' lvalue ParmVar 0xa1aa0f0 '__first' '_II')))
    (BinaryOperator 0xa1aa450 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0xa1aa408 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1aa3f0 <col:7> '_OI' lvalue ParmVar 0xa1aa170 '__result' '_OI'))
      (UnaryOperator 0xa1aa438 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1aa41c <col:19> '_II' lvalue ParmVar 0xa1aa0f0 '__first' '_II'))))
  (ReturnStmt 0xa1aa4a8 <line:300:4, col:11>
    (DeclRefExpr 0xa1aa48c <col:11> '_OI' lvalue ParmVar 0xa1aa170 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1ac1f8 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0xa1abdc0 <line:326:4, col:68>
    0xa1abd90 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0xa1ac1a8 <line:327:4, line:332:6>
    (DeclStmt 0xa1abeb8 <line:327:8, col:40>
      0xa1abdf0 "_Distance __n =
        (CXXOperatorCallExpr 0xa1abe90 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa1abe58 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa1abe24 <col:24> '_II' lvalue ParmVar 0xa1aa870 '__last' '_II')
          (DeclRefExpr 0xa1abe3c <col:33> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1abf38 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa1abef8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1abec8 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa1abdf0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0xa1abee0 <col:48> 'int' 0))
    (UnaryOperator 0xa1abf78 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa1abf5c <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0xa1abdf0 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0xa1ac188 <line:328:6, line:332:6>
      (BinaryOperator 0xa1ac110 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0xa1abfa8 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1abf8c <col:9> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI'))
        (UnaryOperator 0xa1abfd8 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1abfbc <col:21> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II')))
      (UnaryOperator 0xa1ac140 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ac128 <col:10> '_II' lvalue ParmVar 0xa1aa830 '__first' '_II'))
      (UnaryOperator 0xa1ac170 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ac154 <col:10> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI'))))
  (ReturnStmt 0xa1ac1e8 <line:333:4, col:11>
    (DeclRefExpr 0xa1ac1cc <col:11> '_OI' lvalue ParmVar 0xa1aa8b0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0xa1acfb8 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0xa1aca18 <line:364:4, col:43>
    0xa1ac950 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0xa1ac9f0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ac9b8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1ac984 <col:27> 'const _Tp *' lvalue ParmVar 0xa1ac740 '__last' 'const _Tp *')
        (DeclRefExpr 0xa1ac99c <col:36> 'const _Tp *' lvalue ParmVar 0xa1ac6f0 '__first' 'const _Tp *'))")
  (IfStmt 0xa1accd8 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1aca50 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1aca40 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0xa1aca28 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0xa1ac950 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0xa1accb0 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0xa1acbf4 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0xa1acc0c <col:24> '_Tp *' lvalue ParmVar 0xa1ac7d0 '__result' '_Tp *')
      (DeclRefExpr 0xa1acc24 <col:34> 'const _Tp *' lvalue ParmVar 0xa1ac6f0 '__first' 'const _Tp *')
      (BinaryOperator 0xa1acc98 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa1acc48 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0xa1acc88 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa1acc78 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0xa1acc60 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0xa1ac950 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa1acfa8 <line:367:4, col:22>
    (CXXOperatorCallExpr 0xa1acd60 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1acd28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
      (DeclRefExpr 0xa1accf4 <col:11> '_Tp *' lvalue ParmVar 0xa1ac7d0 '__result' '_Tp *')
      (DeclRefExpr 0xa1acd0c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0xa1ac950 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1adde8 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0xa1ad3d0 <line:375:7, col:68>
    0xa1ad3a0 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0xa1ad560 <line:376:7, col:68>
    0xa1ad530 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0xa1ad6b0 <line:377:7, col:73>
    0xa1ad680 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0xa1adb40 <line:378:7, line:381:58>
    0xa1ad6d0 "const bool __simple =
      (ParenExpr 0xa1adb28 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0xa1adb10 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0xa1ad968 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0xa1ad848 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0xa1ad728 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0xa1ad820 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa1ad940 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa1adae8 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa1addd8 <line:383:7, line:384:70>
    (CallExpr 0xa1addb0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1add40 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1add64 <col:45> '_II' lvalue ParmVar 0xa1ad0e0 '__first' '_II')
      (DeclRefExpr 0xa1add7c <col:54> '_II' lvalue ParmVar 0xa1ad120 '__last' '_II')
      (DeclRefExpr 0xa1add94 <col:62> '_OI' lvalue ParmVar 0xa1ad160 '__result' '_OI'))))

;
    template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4bf8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa1e4be0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa1e4ba0 <col:9> 'char_type':'char' lvalue ParmVar 0xa1e36d0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e4bd0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa1e4bb8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3760 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4ca8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa1e4c98 <col:9, col:24>
    (BinaryOperator 0xa1e4c80 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e4c50 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c40 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c0c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3880 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4c70 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c60 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c24 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa1e38d0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4d58 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa1e4d48 <col:9, col:23>
    (BinaryOperator 0xa1e4d30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e4d00 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4cf0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cbc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e39f0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4d20 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4d10 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cd4 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa1e3a40 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e4e80 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa1e4e70 <col:9, col:48>
    (CallExpr 0xa1e4df8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa1e4de8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4d6c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa1e4e30 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e20 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d84 <col:33> 'const char_type *' lvalue ParmVar 0xa1e3b40 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e50 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e40 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d9c <col:39> 'const char_type *' lvalue ParmVar 0xa1e3b90 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e60 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e4db4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3bd0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e5018 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa1e5008 <col:9, col:36>
    (CallExpr 0xa1e4fd8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa1e4fc8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4f74 <col:16> 'unsigned int (const char *)' lvalue Function 0xa1e4ea0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa1e4ff8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e4f8c <col:33> 'const char_type *' lvalue ParmVar 0xa1e3d10 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e68f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa1e68e8 <col:9, col:77>
    (CXXStaticCastExpr 0xa1e68d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa1e6848 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa1e6838 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e67b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa1e6650 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6880 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6870 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e67cc <col:63> 'const char_type *' lvalue ParmVar 0xa1e3e30 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa1e68a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6890 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e67e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa1e3ec0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa1e68b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e67fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3e70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6a48 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa1e6a38 <col:9, col:74>
    (CXXStaticCastExpr 0xa1e6a20 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6998 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa1e6988 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e690c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e69d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e69c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6924 <col:58> 'char_type *' lvalue ParmVar 0xa1e40f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e69f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e69e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e693c <col:64> 'const char_type *' lvalue ParmVar 0xa1e4140 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6a00 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6954 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4180 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6ce8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa1e6cd8 <col:9, col:73>
    (CXXStaticCastExpr 0xa1e6cc0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6c38 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa1e6c28 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6bc4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e6c70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bdc <col:57> 'char_type *' lvalue ParmVar 0xa1e42c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e6c90 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c80 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bf4 <col:63> 'const char_type *' lvalue ParmVar 0xa1e4310 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6ca0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6c0c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4350 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e6e38 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa1e6e28 <col:9, col:71>
    (CXXStaticCastExpr 0xa1e6e10 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6d88 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa1e6d78 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6cfc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa1b88e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6dc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6db0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6d14 <col:57> 'char_type *' lvalue ParmVar 0xa1e4430 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa1e6de0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6dd0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e6d2c <col:62> 'char_type':'char' lvalue ParmVar 0xa1e44b0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa1e6df0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6d44 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4470 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1e6eb8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa1e6ea8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1e6e90 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa1e6e80 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa1e6e70 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa1e6e4c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa1e4640 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1e6f70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa1e6f60 <col:9, col:69>
    (CXXStaticCastExpr 0xa1e6f48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa1e6f38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa1e6f18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa1e6f08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa1e6ef8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa1e6ecc <col:65> 'const char_type':'const char' lvalue ParmVar 0xa1e4760 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1e7000 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa1e6ff0 <col:9, col:24>
    (BinaryOperator 0xa1e6fd8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e6fb8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f84 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa1e4880 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1e6fc8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f9c <col:24> 'const int_type':'const int' lvalue ParmVar 0xa1e48d0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1e7078 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa1e7068 <col:9, col:56>
    (CXXStaticCastExpr 0xa1e7050 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa1e7030 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa1e7018 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1e71d8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa1e71c8 <col:9, col:37>
    (ConditionalOperator 0xa1e71a8 <col:16, col:37> 'int'
      (ParenExpr 0xa1e7150 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa1e7138 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa1e7128 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa1e708c <col:17> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &'))
          (CallExpr 0xa1e7108 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa1e70f8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1e70a4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa1e4a10 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa1e7168 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa1e7198 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e7180 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &')))))


    }
template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e96e8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa1e96d0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa1e9690 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa1e7590 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e96c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa1e96a8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e83b0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9778 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa1e9768 <col:9, col:24>
    (BinaryOperator 0xa1e9750 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e9730 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e96fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e84d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e9740 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9714 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8520 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9808 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa1e97f8 <col:9, col:23>
    (BinaryOperator 0xa1e97e0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e97c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e978c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8640 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e97d0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e97a4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8690 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9970 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa1e9960 <col:9, col:39>
    (CallExpr 0xa1e9908 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa1e98f8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e989c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa1116a0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0a20 'wmemcmp')))
      (ImplicitCastExpr 0xa1e9930 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9854 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8790 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9940 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e986c <col:30> 'const char_type *' lvalue ParmVar 0xa1e87e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9950 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9884 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8820 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e9a78 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa1e9a68 <col:9, col:26>
    (CallExpr 0xa1e9a38 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa1e9a28 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e99d4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0xa110fe0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa1d0470 'wcslen')))
      (ImplicitCastExpr 0xa1e9a58 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e99bc <col:23> 'const char_type *' lvalue ParmVar 0xa1e8930 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e9bb8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa1e9ba8 <col:9, col:37>
    (ImplicitCastExpr 0xa1e9b98 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa1e9b40 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa1e9b30 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e9b10 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa1114f0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0e80 'wmemchr')))
        (ImplicitCastExpr 0xa1e9b68 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e9ac8 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8a30 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa1e9b78 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1e9ae0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8ac0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa1e9b88 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9af8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8a70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9d20 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa1e9d10 <col:9, col:40>
    (CallExpr 0xa1e9cb8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9ca8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9c4c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa111a00 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0b00 'wmemmove')))
      (ImplicitCastExpr 0xa1e9ce0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c04 <col:25> 'char_type *' lvalue ParmVar 0xa1e8c20 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c1c <col:31> 'const char_type *' lvalue ParmVar 0xa1e8c70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9d00 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9c34 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8cb0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9e60 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa1e9e50 <col:9, col:39>
    (CallExpr 0xa1e9df8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9de8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9db4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0xa111850 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa1d0a90 'wmemcpy')))
      (ImplicitCastExpr 0xa1e9e20 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d6c <col:24> 'char_type *' lvalue ParmVar 0xa1e8dc0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9e30 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d84 <col:30> 'const char_type *' lvalue ParmVar 0xa1e8e10 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9e40 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9d9c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8e50 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e9fc0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa1e9fb0 <col:9, col:37>
    (CallExpr 0xa1e9f58 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9f48 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9ef4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa111bc0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0b70 'wmemset')))
      (ImplicitCastExpr 0xa1e9f80 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9eac <col:24> 'char_type *' lvalue ParmVar 0xa1e8f30 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa1e9f90 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9ec4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa1e8fb0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa1e9fa0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9edc <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8f70 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1ea040 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa1ea030 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa1ea018 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa1ea008 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa1e9ff8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9fe0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9120 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1ea0c0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa1ea0b0 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa1ea098 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa1ea088 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa1ea078 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1ea060 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e9240 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1ea150 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa1ea140 <col:9, col:24>
    (BinaryOperator 0xa1ea128 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1ea108 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0d4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9360 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1ea118 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0ec <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e93c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1ea1c8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa1ea1b8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1ea1a0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa1ea180 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa1ea168 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1eaa38 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa1ea390 <col:9, col:46>
    (ConditionalOperator 0xa1ea370 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa1ea2e8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa1ea2d8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1ea1dc <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa1e9460 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa1ea1f4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa1ea310 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa1ea278 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa1ea268 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1ea20c <col:33> 'int_type (void)' lvalue CXXMethod 0xa1e9500 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa1ea360 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1ea320 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa1ea350 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea338 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1b06d8 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0xa1b06c8 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0xa1b06a8 <line:420:14, line:422:39> '_OI'
      (CallExpr 0xa1b0680 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b0480 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0xa1ad280)
        (CallExpr 0xa1b0550 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b0500 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b0534 <col:64> '_II' lvalue ParmVar 0xa1b0280 '__first' '_II'))
        (CallExpr 0xa1b05d8 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b0588 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b05bc <col:29> '_II' lvalue ParmVar 0xa1b02d0 '__last' '_II'))
        (CallExpr 0xa1b0660 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b0610 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b0644 <col:29> '_OI' lvalue ParmVar 0xa1b0310 '__result' '_OI'))))))

;
    template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0xa1b0c78 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0xa1b0958 <line:450:54>)
  (ReturnStmt 0xa1b0c68 <line:452:7, line:454:18>
    (ParenExpr 0xa1b0c50 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0xa1b0c28 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b0a88 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0xa1aec90 0xa1af840 0xa1b0140 0xa1b0400)
        (CallExpr 0xa1b0b68 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b0b18 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9b40)
          (DeclRefExpr 0xa1b0b4c <col:27> '_II' lvalue ParmVar 0xa1b07b0 '__first' '_II'))
        (CallExpr 0xa1b0bf0 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b0ba0 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9b40)
          (DeclRefExpr 0xa1b0bd4 <col:55> '_II' lvalue ParmVar 0xa1b07f0 '__last' '_II'))
        (DeclRefExpr 0xa1b0c10 <line:454:9> '_OI' lvalue ParmVar 0xa1b0830 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b2ce8 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa1b2938 <line:529:4, col:55>
    0xa1b2900 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0xa1b2c98 <line:530:4, line:531:23>
    (BinaryOperator 0xa1b2b10 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa1b2948 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0xa1b29c8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b2990 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1b2960 <col:15> '_BI1' lvalue ParmVar 0xa1b2690 '__last' '_BI1')
        (DeclRefExpr 0xa1b2978 <col:24> '_BI1' lvalue ParmVar 0xa1b2650 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b2b98 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b2b58 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1b2b28 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0xa1b2b40 <col:39> 'int' 0))
    (UnaryOperator 0xa1b2bd8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa1b2bbc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0xa1b2c80 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa1b2c20 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2c08 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b2bec <col:9> '_BI2' lvalue ParmVar 0xa1b26d0 '__result' '_BI2')))
      (UnaryOperator 0xa1b2c68 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2c50 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b2c34 <col:23> '_BI1' lvalue ParmVar 0xa1b2690 '__last' '_BI1')))))
  (ReturnStmt 0xa1b2cd8 <line:532:4, col:11>
    (DeclRefExpr 0xa1b2cbc <col:11> '_BI2' lvalue ParmVar 0xa1b26d0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b22d8 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0xa1b2298 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b21c8 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b2188 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1b1290 <col:11> '_BI1' lvalue ParmVar 0xa1b10d0 '__first' '_BI1')
      (DeclRefExpr 0xa1b12a8 <col:22> '_BI1' lvalue ParmVar 0xa1b1110 '__last' '_BI1'))
    (BinaryOperator 0xa1b2280 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa1b2220 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2208 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b21ec <col:9> '_BI2' lvalue ParmVar 0xa1b1150 '__result' '_BI2')))
      (UnaryOperator 0xa1b2268 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2250 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b2234 <col:23> '_BI1' lvalue ParmVar 0xa1b1110 '__last' '_BI1')))))
  (ReturnStmt 0xa1b22c8 <line:503:4, col:11>
    (DeclRefExpr 0xa1b22ac <col:11> '_BI2' lvalue ParmVar 0xa1b1150 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b2ce8 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0xa1b2938 <line:529:4, col:55>
    0xa1b2900 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0xa1b2c98 <line:530:4, line:531:23>
    (BinaryOperator 0xa1b2b10 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa1b2948 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0xa1b29c8 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b2990 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1b2960 <col:15> '_BI1' lvalue ParmVar 0xa1b2690 '__last' '_BI1')
        (DeclRefExpr 0xa1b2978 <col:24> '_BI1' lvalue ParmVar 0xa1b2650 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b2b98 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b2b58 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1b2b28 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0xa1b2b40 <col:39> 'int' 0))
    (UnaryOperator 0xa1b2bd8 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0xa1b2bbc <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0xa1b2900 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0xa1b2c80 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0xa1b2c20 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2c08 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b2bec <col:9> '_BI2' lvalue ParmVar 0xa1b26d0 '__result' '_BI2')))
      (UnaryOperator 0xa1b2c68 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0xa1b2c50 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0xa1b2c34 <col:23> '_BI1' lvalue ParmVar 0xa1b2690 '__last' '_BI1')))))
  (ReturnStmt 0xa1b2cd8 <line:532:4, col:11>
    (DeclRefExpr 0xa1b2cbc <col:11> '_BI2' lvalue ParmVar 0xa1b26d0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0xa1b3d98 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0xa1b3b38 <line:559:4, col:43>
    0xa1b3a70 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0xa1b3b10 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b3ad8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1b3aa4 <col:27> 'const _Tp *' lvalue ParmVar 0xa1b38b0 '__last' 'const _Tp *')
        (DeclRefExpr 0xa1b3abc <col:36> 'const _Tp *' lvalue ParmVar 0xa1b3860 '__first' 'const _Tp *'))")
  (IfStmt 0xa1b3cd8 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1b3b70 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa1b3b60 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0xa1b3b48 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0xa1b3a70 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0xa1b3cb0 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0xa1b3b7c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0xa1b3c00 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b3bc8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1b3b94 <col:24> '_Tp *' lvalue ParmVar 0xa1b3920 '__result' '_Tp *')
        (DeclRefExpr 0xa1b3bac <col:35> 'const ptrdiff_t':'const int' lvalue Var 0xa1b3a70 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0xa1b3c24 <col:41> 'const _Tp *' lvalue ParmVar 0xa1b3860 '__first' 'const _Tp *')
      (BinaryOperator 0xa1b3c98 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0xa1b3c48 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0xa1b3c88 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa1b3c78 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0xa1b3c60 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0xa1b3a70 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa1b3d88 <line:562:4, col:22>
    (CXXOperatorCallExpr 0xa1b3d60 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b3d28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa1b3cf4 <col:11> '_Tp *' lvalue ParmVar 0xa1b3920 '__result' '_Tp *')
      (DeclRefExpr 0xa1b3d0c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0xa1b3a70 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b4ef8 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0xa1b4180 <line:570:7, col:69>
    0xa1b4150 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0xa1b42b0 <line:571:7, col:69>
    0xa1b4280 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0xa1b43e0 <line:572:7, col:74>
    0xa1b43b0 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0xa1b47c0 <line:573:7, line:576:58>
    0xa1b4400 "const bool __simple =
      (ParenExpr 0xa1b47a8 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0xa1b4790 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0xa1b4638 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0xa1b4548 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0xa1b4458 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0xa1b4520 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa1b4610 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa1b4768 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa1b4ee8 <line:578:7, line:581:18>
    (CallExpr 0xa1b4ec0 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1b4e50 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1b4e74 <col:59> '_BI1' lvalue ParmVar 0xa1b3ec0 '__first' '_BI1')
      (DeclRefExpr 0xa1b4e8c <line:580:10> '_BI1' lvalue ParmVar 0xa1b3f00 '__last' '_BI1')
      (DeclRefExpr 0xa1b4ea4 <line:581:10> '_BI2' lvalue ParmVar 0xa1b3f40 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b5478 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0xa1b5468 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0xa1b5448 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0xa1b5420 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b5220 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0xa1b4030)
        (CallExpr 0xa1b52f0 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b52a0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b52d4 <col:24> '_BI1' lvalue ParmVar 0xa1b5030 '__first' '_BI1'))
        (CallExpr 0xa1b5378 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b5328 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b535c <col:52> '_BI1' lvalue ParmVar 0xa1b5070 '__last' '_BI1'))
        (CallExpr 0xa1b5400 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b53b0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1b53e4 <col:24> '_BI2' lvalue ParmVar 0xa1b50b0 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0xa1b59f8 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0xa1b56f8 <line:621:54>)
  (ReturnStmt 0xa1b59e8 <line:623:7, line:625:18>
    (ParenExpr 0xa1b59d0 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0xa1b59a8 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0xa1b5818 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0xa1b51a0)
        (CallExpr 0xa1b58e8 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b5898 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9b40)
          (DeclRefExpr 0xa1b58cc <col:27> '_BI1' lvalue ParmVar 0xa1b5550 '__first' '_BI1'))
        (CallExpr 0xa1b5970 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0xa1b5920 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9b40)
          (DeclRefExpr 0xa1b5954 <col:55> '_BI1' lvalue ParmVar 0xa1b5590 '__last' '_BI1'))
        (DeclRefExpr 0xa1b5990 <line:625:9> '_BI2' lvalue ParmVar 0xa1b55d0 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa1b7798 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0xa1b7770 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b76b8 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b7678 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1b7644 <col:14> '_ForwardIterator' lvalue ParmVar 0xa1b7430 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa1b765c <col:25> '_ForwardIterator' lvalue ParmVar 0xa1b7470 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa1b76f8 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1b76dc <col:35> '_ForwardIterator' lvalue ParmVar 0xa1b7430 '__first' '_ForwardIterator'))
    (BinaryOperator 0xa1b7758 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa1b7728 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1b770c <col:3> '_ForwardIterator' lvalue ParmVar 0xa1b7430 '__first' '_ForwardIterator'))
      (DeclRefExpr 0xa1b773c <col:13> 'const _Tp' lvalue ParmVar 0xa1b74e0 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa65fc08 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa65fa30 <line:685:7, col:32>
    0xa65f9d0 "const int __tmp =
      (ImplicitCastExpr 0xa65fa20 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa65fa04 <col:25> 'const int':'const int' lvalue ParmVar 0xa65f610 '__value' 'const int &'))")
  (ForStmt 0xa65fbe0 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa65fad0 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0xa65fab0 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa65fa7c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa65f560 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0xa65fac0 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa65fa94 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa65f5a0 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0xa65fb00 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0xa65fae8 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa65f560 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0xa65fb90 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0xa65fb40 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa65fb30 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0xa65fb14 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa65f560 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0xa65fb80 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0xa65fb70 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa65fb54 <col:13> 'const int':'const int' lvalue Var 0xa65f9d0 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa1b7ec0 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0xa1b7d60 <line:685:7, col:32>
    0xa1b7d10 "const _Tp __tmp =
      (DeclRefExpr 0xa1b7d44 <col:25> 'const _Tp' lvalue ParmVar 0xa1b7ba0 '__value' 'const _Tp &')")
  (ForStmt 0xa1b7e98 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b7de0 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b7da0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1b7d70 <col:14> '_ForwardIterator' lvalue ParmVar 0xa1b7af0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa1b7d88 <col:25> '_ForwardIterator' lvalue ParmVar 0xa1b7b30 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa1b7e20 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1b7e04 <col:35> '_ForwardIterator' lvalue ParmVar 0xa1b7af0 '__first' '_ForwardIterator'))
    (BinaryOperator 0xa1b7e80 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa1b7e50 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1b7e34 <col:3> '_ForwardIterator' lvalue ParmVar 0xa1b7af0 '__first' '_ForwardIterator'))
      (DeclRefExpr 0xa1b7e64 <col:13> 'const _Tp' lvalue Var 0xa1b7d10 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0xa1b8b70 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0xa1b88a0 <line:696:7, col:28>
    0xa1b8850 "const _Tp __tmp =
      (DeclRefExpr 0xa1b8884 <col:25> 'const _Tp' lvalue ParmVar 0xa1b82b0 '__c' 'const _Tp &')")
  (CallExpr 0xa1b8b48 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0xa1b8a44 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0xa1b88e0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0xa1b8a5c <col:24> '_Tp *' lvalue ParmVar 0xa1b81f0 '__first' '_Tp *')
    (CXXStaticCastExpr 0xa1b8aa0 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0xa1b8a74 <col:60> 'const _Tp' lvalue Var 0xa1b8850 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0xa1b8b20 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b8ae8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa1b8ab8 <col:10> '_Tp *' lvalue ParmVar 0xa1b8240 '__last' '_Tp *')
      (DeclRefExpr 0xa1b8ad0 <col:19> '_Tp *' lvalue ParmVar 0xa1b81f0 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0xa65f820 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0xa1b8e58 <line:720:54>)
  (CallExpr 0xa65f7f8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0xa65f7e8 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa65f7a4 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa65f6a0 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0xa1b7cd0 '__fill_a')))
    (CallExpr 0xa677818 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa677808 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6777a8 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa677700 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0xa1a9090 '__niter_base')))
      (ImplicitCastExpr 0xa677838 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa676c34 <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa5baa60 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0xa677900 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0xa6778f0 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6778c8 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0xa677700 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0xa1a9090 '__niter_base')))
      (ImplicitCastExpr 0xa677920 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0xa67787c <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0xa5baaa0 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0xa67792c <line:723:7> 'const int':'const int' lvalue ParmVar 0xa5bab30 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0xa1b9018 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0xa1b8e58 <line:720:54>)
  (CallExpr 0xa1b8ff0 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0xa1b8e88 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b7610 0xa1b7cd0 0xa1b8810)
    (CallExpr 0xa1b8f30 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b8ee0 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
      (DeclRefExpr 0xa1b8f14 <col:39> '_ForwardIterator' lvalue ParmVar 0xa1b8c50 '__first' '_ForwardIterator'))
    (CallExpr 0xa1b8fb8 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b8f68 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
      (DeclRefExpr 0xa1b8f9c <col:67> '_ForwardIterator' lvalue ParmVar 0xa1b8c90 '__last' '_ForwardIterator'))
    (DeclRefExpr 0xa1b8fd8 <line:723:7> 'const _Tp' lvalue ParmVar 0xa1b8d00 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa1b9f90 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0xa1b9f40 <line:731:7, line:733:13>
    (DeclStmt 0xa1b9dc0 <line:731:12, col:45>
      0xa1b9d70 "decltype(__n + 0) __niter =
        (DeclRefExpr 0xa1b9da4 <col:42> '_Size' lvalue ParmVar 0xa1b9450 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1b9e40 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa1b9e00 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1b9dd0 <col:5> 'decltype(__n + 0)' lvalue Var 0xa1b9d70 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0xa1b9de8 <col:15> 'int' 0))
    (BinaryOperator 0xa1b9ec8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0xa1b9e80 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa1b9e64 <col:20> 'decltype(__n + 0)' lvalue Var 0xa1b9d70 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0xa1b9eb0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1b9e94 <col:31> '_OutputIterator' lvalue ParmVar 0xa1b9410 '__first' '_OutputIterator')))
    (BinaryOperator 0xa1b9f28 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa1b9ef8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1b9ee0 <col:3> '_OutputIterator' lvalue ParmVar 0xa1b9410 '__first' '_OutputIterator'))
      (DeclRefExpr 0xa1b9f0c <col:13> 'const _Tp' lvalue ParmVar 0xa1b94e0 '__value' 'const _Tp &')))
  (ReturnStmt 0xa1b9f80 <line:734:7, col:14>
    (DeclRefExpr 0xa1b9f64 <col:14> '_OutputIterator' lvalue ParmVar 0xa1b9410 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa1ba890 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0xa1ba5b0 <line:742:7, col:32>
    0xa1ba560 "const _Tp __tmp =
      (DeclRefExpr 0xa1ba594 <col:25> 'const _Tp' lvalue ParmVar 0xa1ba3f0 '__value' 'const _Tp &')")
  (ForStmt 0xa1ba840 <line:743:7, line:745:13>
    (DeclStmt 0xa1ba6c0 <line:743:12, col:45>
      0xa1ba670 "decltype(__n + 0) __niter =
        (DeclRefExpr 0xa1ba6a4 <col:42> '_Size' lvalue ParmVar 0xa1ba380 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1ba740 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa1ba700 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1ba6d0 <col:5> 'decltype(__n + 0)' lvalue Var 0xa1ba670 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0xa1ba6e8 <col:15> 'int' 0))
    (BinaryOperator 0xa1ba7c8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0xa1ba780 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0xa1ba764 <col:20> 'decltype(__n + 0)' lvalue Var 0xa1ba670 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0xa1ba7b0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ba794 <col:31> '_OutputIterator' lvalue ParmVar 0xa1ba340 '__first' '_OutputIterator')))
    (BinaryOperator 0xa1ba828 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0xa1ba7f8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa1ba7e0 <col:3> '_OutputIterator' lvalue ParmVar 0xa1ba340 '__first' '_OutputIterator'))
      (DeclRefExpr 0xa1ba80c <col:13> 'const _Tp' lvalue Var 0xa1ba560 '__tmp' 'const _Tp')))
  (ReturnStmt 0xa1ba880 <line:746:7, col:14>
    (DeclRefExpr 0xa1ba864 <col:14> '_OutputIterator' lvalue ParmVar 0xa1ba340 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0xa1bb290 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0xa1bb1c8 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0xa1bb0c8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b7610 0xa1b7cd0 0xa1b8810)
    (DeclRefExpr 0xa1bb104 <col:21> '_Tp *' lvalue ParmVar 0xa1bac50 '__first' '_Tp *')
    (CXXOperatorCallExpr 0xa1bb188 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa1bb150 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
      (DeclRefExpr 0xa1bb11c <col:30> '_Tp *' lvalue ParmVar 0xa1bac50 '__first' '_Tp *')
      (DeclRefExpr 0xa1bb134 <col:40> '_Size' lvalue ParmVar 0xa1bac90 '__n' '_Size'))
    (DeclRefExpr 0xa1bb1ac <col:45> 'const _Tp' lvalue ParmVar 0xa1bad00 '__c' 'const _Tp &'))
  (ReturnStmt 0xa1bb280 <line:755:7, col:24>
    (CXXOperatorCallExpr 0xa1bb258 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa1bb220 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
      (DeclRefExpr 0xa1bb1f0 <col:14> '_Tp *' lvalue ParmVar 0xa1bac50 '__first' '_Tp *')
      (DeclRefExpr 0xa1bb208 <col:24> '_Size' lvalue ParmVar 0xa1bac90 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0xa1bb738 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0xa1bb728 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0xa1bb708 <col:14, col:75> '_OI'
      (CallExpr 0xa1bb6e0 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa1bb5e8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b9610 0xa1ba520 0xa1bb070)
        (CallExpr 0xa1bb690 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa1bb640 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
          (DeclRefExpr 0xa1bb674 <col:52> '_OI' lvalue ParmVar 0xa1bb3c0 '__first' '_OI'))
        (DeclRefExpr 0xa1bb6b0 <col:62> '_Size' lvalue ParmVar 0xa1bb400 '__n' '_Size')
        (DeclRefExpr 0xa1bb6c8 <col:67> 'const _Tp' lvalue ParmVar 0xa1bb470 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0xa1bddc0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0xa1bddb0 <line:804:4, line:805:30>
    (UnaryOperator 0xa1bdd98 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0xa1bdd70 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0xa1bdc44 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa1bdc5c <col:29> 'const _Tp *' lvalue ParmVar 0xa1bd8a0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa1bdc74 <col:39> 'const _Tp *' lvalue ParmVar 0xa1bd940 '__first2' 'const _Tp *')
        (BinaryOperator 0xa1bdd58 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0xa1bdc98 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0xa1bdd40 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0xa1bdd18 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa1bdce0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa1bdcb0 <col:11> 'const _Tp *' lvalue ParmVar 0xa1bd8f0 '__last1' 'const _Tp *')
              (DeclRefExpr 0xa1bdcc8 <col:21> 'const _Tp *' lvalue ParmVar 0xa1bd8a0 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa1bbf00 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0xa1bbeb8 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1bbce0 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa1bbca0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1bbc70 <col:11> '_II1' lvalue ParmVar 0xa1bba80 '__first1' '_II1')
      (DeclRefExpr 0xa1bbc88 <col:23> '_II1' lvalue ParmVar 0xa1bbac0 '__last1' '_II1'))
    (BinaryOperator 0xa1bbd68 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0xa1bbd20 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1bbd04 <col:34> '_II1' lvalue ParmVar 0xa1bba80 '__first1' '_II1'))
      (UnaryOperator 0xa1bbd50 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1bbd34 <col:46> '_II2' lvalue ParmVar 0xa1bbb00 '__first2' '_II2')))
    (IfStmt 0xa1bbe98 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0xa1bbe60 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0xa1bbe48 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa1bbe20 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0xa1bbde0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0)
            (UnaryOperator 0xa1bbd98 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1bbd80 <col:13> '_II1' lvalue ParmVar 0xa1bba80 '__first1' '_II1'))
            (UnaryOperator 0xa1bbdc8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1bbdac <col:26> '_II2' lvalue ParmVar 0xa1bbb00 '__first2' '_II2')))))
      (ReturnStmt 0xa1bbe88 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0xa1bbe78 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0xa1bbef0 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0xa1bbee0 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0xa1bddc0 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0xa1bddb0 <line:804:4, line:805:30>
    (UnaryOperator 0xa1bdd98 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0xa1bdd70 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0xa1bdc44 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa1bdc5c <col:29> 'const _Tp *' lvalue ParmVar 0xa1bd8a0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa1bdc74 <col:39> 'const _Tp *' lvalue ParmVar 0xa1bd940 '__first2' 'const _Tp *')
        (BinaryOperator 0xa1bdd58 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0xa1bdc98 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0xa1bdd40 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0xa1bdd18 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa1bdce0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa1bdcb0 <col:11> 'const _Tp *' lvalue ParmVar 0xa1bd8f0 '__last1' 'const _Tp *')
              (DeclRefExpr 0xa1bdcc8 <col:21> 'const _Tp *' lvalue ParmVar 0xa1bd8a0 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa1bede8 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0xa1be190 <line:813:7, col:69>
    0xa1be160 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa1be2c0 <line:814:7, col:69>
    0xa1be290 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0xa1bec20 <line:815:7, line:818:58>
    0xa1be2e0 "const bool __simple =
      (ParenExpr 0xa1bec08 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0xa1bebf0 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0xa1be608 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0xa1be518 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0xa1be420 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0xa1be4f0 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0xa1be5e0 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa1bebc8 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa1bedd8 <line:820:7, col:71>
    (CallExpr 0xa1bedb0 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1bed40 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1bed64 <col:44> '_II1' lvalue ParmVar 0xa1bdea0 '__first1' '_II1')
      (DeclRefExpr 0xa1bed7c <col:54> '_II1' lvalue ParmVar 0xa1bdee0 '__last1' '_II1')
      (DeclRefExpr 0xa1bed94 <col:63> '_II2' lvalue ParmVar 0xa1bdf20 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0xa1c0af8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0xa1c0798 <line:846:4, line:847:34>
    0xa1c06d0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0xa1c0770 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0738 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c0704 <col:16> '_RAI1' lvalue ParmVar 0xa1bf9f0 '__last1' '_RAI1')
        (DeclRefExpr 0xa1c071c <col:26> '_RAI1' lvalue ParmVar 0xa1bf9b0 '__first1' '_RAI1'))")
  (DeclStmt 0xa1c0978 <line:848:4, line:849:34>
    0xa1c08b0 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0xa1c0950 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0918 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c08e4 <col:16> '_RAI2' lvalue ParmVar 0xa1bfa70 '__last2' '_RAI2')
        (DeclRefExpr 0xa1c08fc <col:26> '_RAI2' lvalue ParmVar 0xa1bfa30 '__first2' '_RAI2'))")
  (ReturnStmt 0xa1c0ae8 <line:850:4, col:52>
    (ConditionalOperator 0xa1c0ac8 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0xa1c09f8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c09b8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
        (DeclRefExpr 0xa1c0988 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa1c08b0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0xa1c09a0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0xa1c06d0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0xa1c0a88 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0a50 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (DeclRefExpr 0xa1c0a1c <col:31> '_RAI1' lvalue ParmVar 0xa1bf9b0 '__first1' '_RAI1')
        (DeclRefExpr 0xa1c0a34 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa1c08b0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0xa1c0aac <col:52> '_RAI1' lvalue ParmVar 0xa1bf9f0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0xa1c0b38 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0xa1c0b28 <col:11, col:18>
    (CXXBoolLiteralExpr 0xa1c0b18 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0xa1bf5d8 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0xa1bf5c8 <col:11, col:18>
    (DeclRefExpr 0xa1bf5b0 <col:18> '_II1' lvalue ParmVar 0xa1bf1f0 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0xa1bf698 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0xa1bf688 <col:11, col:29>
    (CXXOperatorCallExpr 0xa1bf660 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa1bf620 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1bf5ec <col:18> '_II' lvalue ParmVar 0xa1bf430 '__first' '_II')
      (DeclRefExpr 0xa1bf604 <col:29> '_II' lvalue ParmVar 0xa1bf470 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0xa1c0af8 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0xa1c0798 <line:846:4, line:847:34>
    0xa1c06d0 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0xa1c0770 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0738 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c0704 <col:16> '_RAI1' lvalue ParmVar 0xa1bf9f0 '__last1' '_RAI1')
        (DeclRefExpr 0xa1c071c <col:26> '_RAI1' lvalue ParmVar 0xa1bf9b0 '__first1' '_RAI1'))")
  (DeclStmt 0xa1c0978 <line:848:4, line:849:34>
    0xa1c08b0 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0xa1c0950 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0918 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c08e4 <col:16> '_RAI2' lvalue ParmVar 0xa1bfa70 '__last2' '_RAI2')
        (DeclRefExpr 0xa1c08fc <col:26> '_RAI2' lvalue ParmVar 0xa1bfa30 '__first2' '_RAI2'))")
  (ReturnStmt 0xa1c0ae8 <line:850:4, col:52>
    (ConditionalOperator 0xa1c0ac8 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0xa1c09f8 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c09b8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
        (DeclRefExpr 0xa1c0988 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa1c08b0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0xa1c09a0 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0xa1c06d0 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0xa1c0a88 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c0a50 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (DeclRefExpr 0xa1c0a1c <col:31> '_RAI1' lvalue ParmVar 0xa1bf9b0 '__first1' '_RAI1')
        (DeclRefExpr 0xa1c0a34 <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0xa1c08b0 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0xa1c0aac <col:52> '_RAI1' lvalue ParmVar 0xa1bf9f0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0xa1c0b38 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0xa1c0b28 <col:11, col:18>
    (CXXBoolLiteralExpr 0xa1c0b18 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0xa1c3870 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0xa1c31f8 <line:897:4, col:44>
    0xa1c3130 "const size_t __len1 =
      (CXXOperatorCallExpr 0xa1c31d0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c3198 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c3164 <col:26> 'const _Tp *' lvalue ParmVar 0xa1c2ef0 '__last1' 'const _Tp *')
        (DeclRefExpr 0xa1c317c <col:36> 'const _Tp *' lvalue ParmVar 0xa1c2ea0 '__first1' 'const _Tp *'))")
  (DeclStmt 0xa1c32d8 <line:898:4, col:44>
    0xa1c3210 "const size_t __len2 =
      (CXXOperatorCallExpr 0xa1c32b0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c3278 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c3244 <col:26> 'const _Up *' lvalue ParmVar 0xa1c2fb0 '__last2' 'const _Up *')
        (DeclRefExpr 0xa1c325c <col:36> 'const _Up *' lvalue ParmVar 0xa1c2f60 '__first2' 'const _Up *'))")
  (DeclStmt 0xa1c3718 <line:899:4, line:900:32>
    0xa1c3300 "const int __result =
      (CallExpr 0xa1c36f0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0xa1c3334 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa1c334c <col:42> 'const _Tp *' lvalue ParmVar 0xa1c2ea0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa1c3364 <col:52> 'const _Up *' lvalue ParmVar 0xa1c2f60 '__first2' 'const _Up *')
        (CallExpr 0xa1c36c8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0xa1c36b8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1c3658 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0xa1c35b0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0xa159fa0 'min')))
          (DeclRefExpr 0xa1c33d0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa1c3130 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0xa1c33e8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0xa1c3210 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0xa1c3860 <line:901:4, col:51>
    (ConditionalOperator 0xa1c3840 <col:11, col:51> '_Bool'
      (BinaryOperator 0xa1c3768 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa1c3758 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1c3728 <col:11> 'const int' lvalue Var 0xa1c3300 '__result' 'const int'))
        (IntegerLiteral 0xa1c3740 <col:23> 'int' 0))
      (BinaryOperator 0xa1c37c0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0xa1c37b0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1c3780 <col:27> 'const int' lvalue Var 0xa1c3300 '__result' 'const int'))
        (IntegerLiteral 0xa1c3798 <col:38> 'int' 0))
      (BinaryOperator 0xa1c3828 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0xa1c3808 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1c37d8 <col:42> 'const size_t':'const unsigned int' lvalue Var 0xa1c3130 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa1c3818 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1c37f0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0xa1c3210 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa1c2848 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0xa1c1df0 <line:872:2, col:70>
    0xa1c1dc0 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0xa1c1f80 <line:873:2, col:70>
    0xa1c1f50 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0xa1c21a0 <line:874:2, col:59>
    0xa1c2170 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0xa1c22c0 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0xa1c21b0 <line:876:2> '_II1' lvalue ParmVar 0xa1c1aa0 '__last1' '_II1')
    (CallExpr 0xa1c2290 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1c2208 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1c222c <col:35> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1')
      (DeclRefExpr 0xa1c2244 <col:45> '_II1' lvalue ParmVar 0xa1c1aa0 '__last1' '_II1')
      (DeclRefExpr 0xa1c225c <line:877:7> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2')
      (DeclRefExpr 0xa1c2274 <col:17> '_II2' lvalue ParmVar 0xa1c1b20 '__last2' '_II2')))
  (ForStmt 0xa1c26c8 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa1c2410 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1c2348 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c2308 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1c22d8 <col:9> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1')
        (DeclRefExpr 0xa1c22f0 <col:21> '_II1' lvalue ParmVar 0xa1c1aa0 '__last1' '_II1'))
      (CallExpr 0xa1c23e8 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1c2390 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1c23b4 <col:51> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2')
        (DeclRefExpr 0xa1c23cc <col:61> '_II2' lvalue ParmVar 0xa1c1b20 '__last2' '_II2')))
    (BinaryOperator 0xa1c2488 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0xa1c2440 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c2428 <col:9> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1'))
      (UnaryOperator 0xa1c2470 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c2454 <col:21> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2')))
    (CompoundStmt 0xa1c26b0 <line:880:4, line:885:4>
      (IfStmt 0xa1c2588 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1c2540 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c2500 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
          (UnaryOperator 0xa1c24b8 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c24a0 <col:11> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1'))
          (UnaryOperator 0xa1c24e8 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c24cc <col:23> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2')))
        (ReturnStmt 0xa1c2578 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0xa1c2568 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0xa1c2690 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1c2648 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c2608 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
          (UnaryOperator 0xa1c25c0 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c25a4 <col:11> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2'))
          (UnaryOperator 0xa1c25f0 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c25d4 <col:23> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1')))
        (ReturnStmt 0xa1c2680 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0xa1c2670 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0xa1c2838 <line:886:2, col:44>
    (BinaryOperator 0xa1c2820 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1c2760 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c2720 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0)
        (DeclRefExpr 0xa1c26ec <col:9> '_II1' lvalue ParmVar 0xa1c1a60 '__first1' '_II1')
        (DeclRefExpr 0xa1c2704 <col:21> '_II1' lvalue ParmVar 0xa1c1aa0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0xa1c27f8 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c27b8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1c2784 <col:32> '_II2' lvalue ParmVar 0xa1c1ae0 '__first2' '_II2')
        (DeclRefExpr 0xa1c279c <col:44> '_II2' lvalue ParmVar 0xa1c1b20 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0xa1c3870 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0xa1c31f8 <line:897:4, col:44>
    0xa1c3130 "const size_t __len1 =
      (CXXOperatorCallExpr 0xa1c31d0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c3198 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c3164 <col:26> 'const _Tp *' lvalue ParmVar 0xa1c2ef0 '__last1' 'const _Tp *')
        (DeclRefExpr 0xa1c317c <col:36> 'const _Tp *' lvalue ParmVar 0xa1c2ea0 '__first1' 'const _Tp *'))")
  (DeclStmt 0xa1c32d8 <line:898:4, col:44>
    0xa1c3210 "const size_t __len2 =
      (CXXOperatorCallExpr 0xa1c32b0 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c3278 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa1c3244 <col:26> 'const _Up *' lvalue ParmVar 0xa1c2fb0 '__last2' 'const _Up *')
        (DeclRefExpr 0xa1c325c <col:36> 'const _Up *' lvalue ParmVar 0xa1c2f60 '__first2' 'const _Up *'))")
  (DeclStmt 0xa1c3718 <line:899:4, line:900:32>
    0xa1c3300 "const int __result =
      (CallExpr 0xa1c36f0 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0xa1c3334 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0xa1c334c <col:42> 'const _Tp *' lvalue ParmVar 0xa1c2ea0 '__first1' 'const _Tp *')
        (DeclRefExpr 0xa1c3364 <col:52> 'const _Up *' lvalue ParmVar 0xa1c2f60 '__first2' 'const _Up *')
        (CallExpr 0xa1c36c8 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0xa1c36b8 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa1c3658 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0xa1c35b0 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0xa159fa0 'min')))
          (DeclRefExpr 0xa1c33d0 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa1c3130 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0xa1c33e8 <col:24> 'const size_t':'const unsigned int' lvalue Var 0xa1c3210 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0xa1c3860 <line:901:4, col:51>
    (ConditionalOperator 0xa1c3840 <col:11, col:51> '_Bool'
      (BinaryOperator 0xa1c3768 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa1c3758 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1c3728 <col:11> 'const int' lvalue Var 0xa1c3300 '__result' 'const int'))
        (IntegerLiteral 0xa1c3740 <col:23> 'int' 0))
      (BinaryOperator 0xa1c37c0 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0xa1c37b0 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1c3780 <col:27> 'const int' lvalue Var 0xa1c3300 '__result' 'const int'))
        (IntegerLiteral 0xa1c3798 <col:38> 'int' 0))
      (BinaryOperator 0xa1c3828 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0xa1c3808 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1c37d8 <col:42> 'const size_t':'const unsigned int' lvalue Var 0xa1c3130 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa1c3818 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1c37f0 <col:51> 'const size_t':'const unsigned int' lvalue Var 0xa1c3210 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa1c5128 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0xa1c3c80 <line:910:7, col:69>
    0xa1c3c50 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa1c4800 <line:911:7, col:69>
    0xa1c47d0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0xa1c4f48 <line:912:7, line:917:34>
    0xa1c4820 "const bool __simple =
      (ParenExpr 0xa1c4f30 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0xa1c4f18 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0xa1c4e28 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0xa1c4d40 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0xa1c4c00 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0xa1c4aa8 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0xa1c4960 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0xa1c4a80 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0xa1c4be8 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0xa1c4bc0 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0xa1c4d28 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0xa1c4d00 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0xa1c4e00 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0xa1c4ef0 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0xa1c5118 <line:919:7, line:920:29>
    (CallExpr 0xa1c50e8 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1c5060 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1c5084 <col:61> '_II1' lvalue ParmVar 0xa1c3950 '__first1' '_II1')
      (DeclRefExpr 0xa1c509c <col:71> '_II1' lvalue ParmVar 0xa1c3990 '__last1' '_II1')
      (DeclRefExpr 0xa1c50b4 <line:920:12> '_II2' lvalue ParmVar 0xa1c39d0 '__first2' '_II2')
      (DeclRefExpr 0xa1c50cc <col:22> '_II2' lvalue ParmVar 0xa1c3a10 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0xa1c5f70 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0xa1c5530 <line:939:7, line:940:12>
    0xa1c5500 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0xa1c5660 <line:941:7, line:942:15>
    0xa1c5630 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0xa1c5670 <line:947:67>)
  (DeclStmt 0xa1c59b8 <line:949:7, col:59>
    0xa1c56a0 "_DistanceType __len =
      (CallExpr 0xa1c5990 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c5928 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
        (DeclRefExpr 0xa1c595c <col:43> '_ForwardIterator' lvalue ParmVar 0xa1c5210 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa1c5974 <col:52> '_ForwardIterator' lvalue ParmVar 0xa1c5250 '__last' '_ForwardIterator'))")
  (WhileStmt 0xa1c5f30 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1c5a38 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c59f8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa1c59c8 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c56a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0xa1c59e0 <col:22> 'int' 0))
    (CompoundStmt 0xa1c5f10 <line:952:2, line:964:2>
      (DeclStmt 0xa1c5af0 <line:953:4, col:37>
        0xa1c5a70 "_DistanceType __half =
          (BinaryOperator 0xa1c5ad8 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0xa1c5aa4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c56a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0xa1c5ac0 <col:36> 'int' 1))")
      (DeclStmt 0xa1c5b60 <line:954:4, col:39>
        0xa1c5b10 "_ForwardIterator __middle =
          (DeclRefExpr 0xa1c5b44 <col:32> '_ForwardIterator' lvalue ParmVar 0xa1c5210 '__first' '_ForwardIterator')")
      (CallExpr 0xa1c5c00 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c5b98 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa181520)
        (DeclRefExpr 0xa1c5bcc <col:17> '_ForwardIterator' lvalue Var 0xa1c5b10 '__middle' '_ForwardIterator')
        (DeclRefExpr 0xa1c5be4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c5a70 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0xa1c5ef0 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa1c5cb0 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa1c5c70 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
          (UnaryOperator 0xa1c5c40 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c5c24 <col:9> '_ForwardIterator' lvalue Var 0xa1c5b10 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0xa1c5c54 <col:20> 'const _Tp' lvalue ParmVar 0xa1c52c0 '__val' 'const _Tp &'))
        (CompoundStmt 0xa1c5e88 <line:957:6, line:961:6>
          (BinaryOperator 0xa1c5d08 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0xa1c5cd4 <col:8> '_ForwardIterator' lvalue ParmVar 0xa1c5210 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa1c5cec <col:18> '_ForwardIterator' lvalue Var 0xa1c5b10 '__middle' '_ForwardIterator'))
          (UnaryOperator 0xa1c5d38 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa1c5d20 <col:10> '_ForwardIterator' lvalue ParmVar 0xa1c5210 '__first' '_ForwardIterator'))
          (BinaryOperator 0xa1c5e70 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0xa1c5d4c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c56a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0xa1c5e48 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0xa1c5e10 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (CXXOperatorCallExpr 0xa1c5dd0 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0xa1c5d98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (DeclRefExpr 0xa1c5d64 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c56a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0xa1c5d7c <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c5a70 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0xa1c5df8 <col:33> 'int' 1))))
        (BinaryOperator 0xa1c5ed8 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0xa1c5ea4 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c56a0 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0xa1c5ebc <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0xa1c5a70 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0xa1c5f60 <line:965:7, col:14>
    (DeclRefExpr 0xa1c5f44 <col:14> '_ForwardIterator' lvalue ParmVar 0xa1c5210 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0xa1c6390 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0xa1c6158 <line:974:7, col:16>
    0xa1c6120 "_Size __k")
  (ForStmt 0xa1c62c8 <line:975:7, line:976:4>
    (BinaryOperator 0xa1c6198 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0xa1c6168 <col:12> '_Size' lvalue Var 0xa1c6120 '__k' '_Size')
      (IntegerLiteral 0xa1c6180 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1c6220 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c61e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1c61b0 <col:21> '_Size' lvalue ParmVar 0xa1c6000 '__n' '_Size')
      (IntegerLiteral 0xa1c61c8 <col:28> 'int' 0))
    (CompoundAssignOperator 0xa1c6278 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa1c6244 <col:31> '_Size' lvalue ParmVar 0xa1c6000 '__n' '_Size')
      (IntegerLiteral 0xa1c6260 <col:39> 'int' 1))
    (UnaryOperator 0xa1c62b0 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa1c6298 <col:4> '_Size' lvalue Var 0xa1c6120 '__k' '_Size')))
  (ReturnStmt 0xa1c6380 <line:977:7, col:20>
    (CXXOperatorCallExpr 0xa1c6358 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c6320 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa1c62ec <col:14> '_Size' lvalue Var 0xa1c6120 '__k' '_Size')
      (IntegerLiteral 0xa1c6308 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0xa1c6700 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0xa1c66f0 <col:5, col:63>
    (ImplicitCastExpr 0xa1c66e0 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0xa1c66c8 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0xa1c6518 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0xa1c64d8 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1c6498 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0xa1c64c8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1c64b0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa1c6508 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa1c64f0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0xa1c66b8 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0xa1c6678 <col:46, col:63> 'int'
            (ImplicitCastExpr 0xa1c6668 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1c6620 <col:46> 'int (unsigned int)' lvalue Function 0xa1c6530 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0xa1c66a8 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa1c6698 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0xa1c6638 <col:60> 'int' lvalue ParmVar 0xa1c63c0 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0xa1c70c0 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0xa1c70b0 <col:5, col:64>
    (ImplicitCastExpr 0xa1c70a0 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0xa1c7088 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0xa1c6888 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0xa1c6848 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1c6808 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0xa1c6838 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1c6820 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa1c6878 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa1c6860 <col:42> 'int' 1)))
        (ImplicitCastExpr 0xa1c7078 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0xa1c7038 <col:46, col:64> 'int'
            (ImplicitCastExpr 0xa1c7028 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1c6fe0 <col:46> 'int (unsigned long)' lvalue Function 0xa1c68c0 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0xa1c7068 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0xa1c7058 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0xa1c6ff8 <col:61> 'long' lvalue ParmVar 0xa1c6730 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0xa1c7450 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0xa1c7440 <col:5, col:70>
    (ImplicitCastExpr 0xa1c7430 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0xa1c7418 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0xa1c7248 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0xa1c7208 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa1c71c8 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0xa1c71f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa1c71e0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0xa1c7238 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa1c7220 <col:47> 'int' 1)))
        (ImplicitCastExpr 0xa1c7408 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0xa1c73c8 <col:51, col:70> 'int'
            (ImplicitCastExpr 0xa1c73b8 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1c7370 <col:51> 'int (unsigned long long)' lvalue Function 0xa1c7280 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0xa1c73f8 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0xa1c73e8 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0xa1c7388 <col:67> 'long long' lvalue ParmVar 0xa1c70f0 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0xa1c7908 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0xa1c76d8 <line:1018:56>)
  (ReturnStmt 0xa1c78f8 <line:1020:7, line:1022:37>
    (CallExpr 0xa1c78d0 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c7700 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1be040)
      (CallExpr 0xa1c77a0 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c7750 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c7784 <col:49> '_II1' lvalue ParmVar 0xa1c7530 '__first1' '_II1'))
      (CallExpr 0xa1c7828 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c77d8 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c780c <col:28> '_II1' lvalue ParmVar 0xa1c7570 '__last1' '_II1'))
      (CallExpr 0xa1c78b0 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c7860 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c7894 <col:28> '_II2' lvalue ParmVar 0xa1c75b0 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0xa1c7ed0 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0xa1c7c48 <line:1048:56>)
  (ForStmt 0xa1c7e88 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1c7cc8 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c7c88 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
      (DeclRefExpr 0xa1c7c54 <col:14> '_IIter1' lvalue ParmVar 0xa1c7a30 '__first1' '_IIter1')
      (DeclRefExpr 0xa1c7c6c <col:26> '_IIter1' lvalue ParmVar 0xa1c7a70 '__last1' '_IIter1'))
    (BinaryOperator 0xa1c7d50 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0xa1c7d08 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c7cec <col:37> '_IIter1' lvalue ParmVar 0xa1c7a30 '__first1' '_IIter1'))
      (UnaryOperator 0xa1c7d38 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c7d1c <col:49> '_IIter2' lvalue ParmVar 0xa1c7ab0 '__first2' '_IIter2')))
    (IfStmt 0xa1c7e68 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0xa1c7e30 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0xa1c7e10 <col:7, col:47> '_Bool'
          (CallExpr 0xa1c7de8 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0xa1c7d70 <col:12> '_BinaryPredicate' lvalue ParmVar 0xa1c7af0 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0xa1c7da0 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1c7d88 <col:27> '_IIter1' lvalue ParmVar 0xa1c7a30 '__first1' '_IIter1'))
            (UnaryOperator 0xa1c7dd0 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa1c7db4 <col:38> '_IIter2' lvalue ParmVar 0xa1c7ab0 '__first2' '_IIter2')))))
      (ReturnStmt 0xa1c7e58 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0xa1c7e48 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0xa1c7ec0 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0xa1c7eb0 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0xa1c8ef0 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0xa1c8ae0 <line:1077:7, col:69>
    0xa1c8ab0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0xa1c8c10 <line:1078:7, col:69>
    0xa1c8be0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0xa1c8c20 <line:1083:56>)
  (NullStmt 0xa1c8c30 <line:1084:56>)
  (ReturnStmt 0xa1c8ee0 <line:1086:7, line:1089:33>
    (CallExpr 0xa1c8eb0 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa1c8c58 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1c3b30)
      (CallExpr 0xa1c8cf8 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c8ca8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c8cdc <col:67> '_II1' lvalue ParmVar 0xa1c87e0 '__first1' '_II1'))
      (CallExpr 0xa1c8d80 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c8d30 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c8d64 <col:25> '_II1' lvalue ParmVar 0xa1c8820 '__last1' '_II1'))
      (CallExpr 0xa1c8e08 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c8db8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c8dec <col:25> '_II2' lvalue ParmVar 0xa1c8860 '__first2' '_II2'))
      (CallExpr 0xa1c8e90 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c8e40 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1a9090)
        (DeclRefExpr 0xa1c8e74 <col:25> '_II2' lvalue ParmVar 0xa1c88a0 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0xa1ca1a0 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0xa1c93c0 <line:1110:7, col:75>
    0xa1c9390 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0xa1c94f0 <line:1111:7, col:75>
    0xa1c94c0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0xa1c9700 <line:1112:7, col:64>
    0xa1c96d0 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0xa1c9710 <line:1117:56>)
  (NullStmt 0xa1c9720 <line:1118:56>)
  (BinaryOperator 0xa1c9c68 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0xa1c972c <col:7> '_II1' lvalue ParmVar 0xa1c9070 '__last1' '_II1')
    (CallExpr 0xa1c9c38 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa1c9bb0 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0xa1c9bd4 <col:40> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1')
      (DeclRefExpr 0xa1c9bec <col:50> '_II1' lvalue ParmVar 0xa1c9070 '__last1' '_II1')
      (DeclRefExpr 0xa1c9c04 <col:59> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2')
      (DeclRefExpr 0xa1c9c1c <col:69> '_II2' lvalue ParmVar 0xa1c90f0 '__last2' '_II2')))
  (ForStmt 0xa1ca020 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa1c9db8 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1c9cf0 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1c9cb0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1c9c80 <col:14> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1')
        (DeclRefExpr 0xa1c9c98 <col:26> '_II1' lvalue ParmVar 0xa1c9070 '__last1' '_II1'))
      (CallExpr 0xa1c9d90 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa1c9d38 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa1c9d5c <col:56> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2')
        (DeclRefExpr 0xa1c9d74 <col:66> '_II2' lvalue ParmVar 0xa1c90f0 '__last2' '_II2')))
    (BinaryOperator 0xa1c9e30 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0xa1c9de8 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c9dd0 <col:7> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1'))
      (UnaryOperator 0xa1c9e18 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1c9dfc <col:19> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2')))
    (CompoundStmt 0xa1ca008 <line:1123:2, line:1128:2>
      (IfStmt 0xa1c9f08 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0xa1c9ec0 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0xa1c9e48 <col:8> '_Compare' lvalue ParmVar 0xa1c9130 '__comp' '_Compare')
          (UnaryOperator 0xa1c9e78 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c9e60 <col:16> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1'))
          (UnaryOperator 0xa1c9ea8 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c9e8c <col:27> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2')))
        (ReturnStmt 0xa1c9ef8 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0xa1c9ee8 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0xa1c9fe8 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0xa1c9fa0 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0xa1c9f24 <col:8> '_Compare' lvalue ParmVar 0xa1c9130 '__comp' '_Compare')
          (UnaryOperator 0xa1c9f58 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c9f3c <col:16> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2'))
          (UnaryOperator 0xa1c9f88 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1c9f6c <col:27> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1')))
        (ReturnStmt 0xa1c9fd8 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0xa1c9fc8 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0xa1ca190 <line:1129:7, col:49>
    (BinaryOperator 0xa1ca178 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1ca0b8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ca078 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0)
        (DeclRefExpr 0xa1ca044 <col:14> '_II1' lvalue ParmVar 0xa1c9030 '__first1' '_II1')
        (DeclRefExpr 0xa1ca05c <col:26> '_II1' lvalue ParmVar 0xa1c9070 '__last1' '_II1'))
      (CXXOperatorCallExpr 0xa1ca150 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ca110 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1ca0dc <col:37> '_II2' lvalue ParmVar 0xa1c90b0 '__first2' '_II2')
        (DeclRefExpr 0xa1ca0f4 <col:49> '_II2' lvalue ParmVar 0xa1c90f0 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0xa1ca8d8 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0xa1ca558 <line:1156:56>)
  (WhileStmt 0xa1ca758 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0xa1ca6c8 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1ca5d8 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ca598 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1ca564 <col:14> '_InputIterator1' lvalue ParmVar 0xa1ca360 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa1ca57c <col:26> '_InputIterator1' lvalue ParmVar 0xa1ca3a0 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0xa1ca6a0 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa1ca660 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0)
        (UnaryOperator 0xa1ca618 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1ca5fc <col:38> '_InputIterator1' lvalue ParmVar 0xa1ca360 '__first1' '_InputIterator1'))
        (UnaryOperator 0xa1ca648 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa1ca62c <col:51> '_InputIterator2' lvalue ParmVar 0xa1ca3e0 '__first2' '_InputIterator2'))))
    (CompoundStmt 0xa1ca740 <line:1159:9, line:1162:9>
      (UnaryOperator 0xa1ca6f8 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ca6e0 <col:6> '_InputIterator1' lvalue ParmVar 0xa1ca360 '__first1' '_InputIterator1'))
      (UnaryOperator 0xa1ca728 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1ca70c <col:6> '_InputIterator2' lvalue ParmVar 0xa1ca3e0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0xa1ca8c8 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0xa1ca8a8 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0xa1ca878 <col:53> '_InputIterator1' lvalue ParmVar 0xa1ca360 '__first1' '_InputIterator1')
      (DeclRefExpr 0xa1ca890 <col:63> '_InputIterator2' lvalue ParmVar 0xa1ca3e0 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0xa1cb438 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0xa1cb0b8 <line:1191:56>)
  (WhileStmt 0xa1cb2b8 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0xa1cb228 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa1cb138 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0xa1cb0f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0)
        (DeclRefExpr 0xa1cb0c4 <col:14> '_InputIterator1' lvalue ParmVar 0xa1caae0 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa1cb0dc <col:26> '_InputIterator1' lvalue ParmVar 0xa1cab20 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0xa1cb208 <col:37, col:77> '_Bool'
        (CallExpr 0xa1cb1e0 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0xa1cb168 <col:42> '_BinaryPredicate' lvalue ParmVar 0xa1caf30 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0xa1cb198 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1cb180 <col:57> '_InputIterator1' lvalue ParmVar 0xa1caae0 '__first1' '_InputIterator1'))
          (UnaryOperator 0xa1cb1c8 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa1cb1ac <col:68> '_InputIterator2' lvalue ParmVar 0xa1caef0 '__first2' '_InputIterator2')))))
    (CompoundStmt 0xa1cb2a0 <line:1194:9, line:1197:9>
      (UnaryOperator 0xa1cb258 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1cb240 <col:6> '_InputIterator1' lvalue ParmVar 0xa1caae0 '__first1' '_InputIterator1'))
      (UnaryOperator 0xa1cb288 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa1cb26c <col:6> '_InputIterator2' lvalue ParmVar 0xa1caef0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0xa1cb428 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0xa1cb408 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0xa1cb3d8 <col:53> '_InputIterator1' lvalue ParmVar 0xa1caae0 '__first1' '_InputIterator1')
      (DeclRefExpr 0xa1cb3f0 <col:63> '_InputIterator2' lvalue ParmVar 0xa1caef0 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0xa1d1940 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0xa1d1930 <col:5, col:55>
    (CallExpr 0xa1d18f8 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0xa1d18e8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d1888 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0xa1d0cc0 'wcschr')))
      (CXXConstCastExpr 0xa1d1858 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa1d1848 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d1820 <col:46> 'wchar_t *' lvalue ParmVar 0xa1d16c0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa1d1920 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1d1870 <col:52> 'wchar_t' lvalue ParmVar 0xa1d1700 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0xa1d1be0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0xa1d1bd0 <col:5, col:58>
    (CallExpr 0xa1d1b98 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0xa1d1b88 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d1b28 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0xa110b30 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0xa1d0d30 'wcspbrk')))
      (CXXConstCastExpr 0xa1d1af8 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa1d1ae8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d1ac0 <col:47> 'wchar_t *' lvalue ParmVar 0xa1d1970 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0xa1d1bc0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa1d1b10 <col:54> 'const wchar_t *' lvalue ParmVar 0xa1d19c0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0xa1d1e30 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0xa1d1e20 <col:5, col:56>
    (CallExpr 0xa1d1de8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0xa1d1dd8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d1db8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa1104f0 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0xa1d0da0 'wcsrchr')))
      (CXXConstCastExpr 0xa1d1d88 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa1d1d78 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d1d50 <col:47> 'wchar_t *' lvalue ParmVar 0xa1d1c10 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa1d1e10 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1d1da0 <col:53> 'wchar_t' lvalue ParmVar 0xa1d1c50 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0xa1d2090 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0xa1d2080 <col:5, col:57>
    (CallExpr 0xa1d2048 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0xa1d2038 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d2018 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0xa110ca0 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0xa1d0e10 'wcsstr')))
      (CXXConstCastExpr 0xa1d1fe8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa1d1fd8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d1fb0 <col:46> 'wchar_t *' lvalue ParmVar 0xa1d1e60 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0xa1d2070 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa1d2000 <col:53> 'const wchar_t *' lvalue ParmVar 0xa1d1eb0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0xa1d23c0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0xa1d23b0 <col:5, col:61>
    (CallExpr 0xa1d2368 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0xa1d2358 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d22f8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa1114f0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0e80 'wmemchr')))
      (CXXConstCastExpr 0xa1d22b0 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0xa1d22a0 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d2278 <col:47> 'wchar_t *' lvalue ParmVar 0xa1d20c0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0xa1d2390 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1d22c8 <col:53> 'wchar_t' lvalue ParmVar 0xa1d2100 '__c' 'wchar_t'))
      (ImplicitCastExpr 0xa1d23a0 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1d22e0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0xa1d2140 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0xa1d4148 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0xa1d41e0 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0xa1d41f0 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0xa1d38c0 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0xa1d4290 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0xa1d5188 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0xa1d5178 <col:36, col:43>
    (MemberExpr 0xa1d5154 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0xa1d3770
      (CXXThisExpr 0xa1d42b8 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0xa1d5200 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0xa1d51e8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0xa1d51b0 <col:9> '_StateT' lvalue ->_M_state 0xa1d37b0
      (CXXThisExpr 0xa1d51a0 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa1d51d0 <col:20> '_StateT' lvalue ParmVar 0xa1d3ab0 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0xa1d5258 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0xa1d5248 <col:9, col:16>
    (MemberExpr 0xa1d5228 <col:16> 'const _StateT' lvalue ->_M_state 0xa1d37b0
      (CXXThisExpr 0xa1d5218 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0xa1d5310 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0xa1d52b8 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa1d5280 <col:2> 'streamoff':'long long' lvalue ->_M_off 0xa1d3770
      (CXXThisExpr 0xa1d5270 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa1d52a0 <col:12> 'streamoff':'long long' lvalue ParmVar 0xa1d3c40 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa1d5300 <line:158:2, col:10>
    (UnaryOperator 0xa1d52e8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d52d8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0xa1d53c8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0xa1d5370 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa1d5338 <col:2> 'streamoff':'long long' lvalue ->_M_off 0xa1d3770
      (CXXThisExpr 0xa1d5328 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0xa1d5358 <col:12> 'streamoff':'long long' lvalue ParmVar 0xa1d3d70 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa1d53b8 <line:169:2, col:10>
    (UnaryOperator 0xa1d53a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa1d5390 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0xa1d54f8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0xa1d5470 <line:181:2, col:19>
    0xa1d53f0 "fpos<_StateT> __pos =
      (ParenListExpr 0xa1d5450 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0xa1d5438 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1d5428 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0xa1d54b0 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa1d5480 <col:2> 'fpos<_StateT>' lvalue Var 0xa1d53f0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0xa1d5498 <col:11> 'streamoff':'long long' lvalue ParmVar 0xa1d3e40 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa1d54e8 <line:183:2, col:9>
    (DeclRefExpr 0xa1d54d0 <col:9> 'fpos<_StateT>' lvalue Var 0xa1d53f0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0xa1d5628 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0xa1d55a0 <line:195:2, col:19>
    0xa1d5520 "fpos<_StateT> __pos =
      (ParenListExpr 0xa1d5580 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0xa1d5568 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa1d5558 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0xa1d55e0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa1d55b0 <col:2> 'fpos<_StateT>' lvalue Var 0xa1d5520 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0xa1d55c8 <col:11> 'streamoff':'long long' lvalue ParmVar 0xa1d3f50 '__off' 'streamoff':'long long'))
  (ReturnStmt 0xa1d5618 <line:197:2, col:9>
    (DeclRefExpr 0xa1d5600 <col:9> 'fpos<_StateT>' lvalue Var 0xa1d5520 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0xa1d5738 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0xa1d5728 <col:9, col:33>
    (CXXOperatorCallExpr 0xa1d5700 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa1d56c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (MemberExpr 0xa1d5658 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0xa1d3770
        (CXXThisExpr 0xa1d5648 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0xa1d5690 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa1d5678 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0xa1d4040 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0xa1d5b68 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0xa1d5b58 <col:7, col:49>
    (BinaryOperator 0xa1d5b40 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0xa1d5ae0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0xa1d5ac8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0xa1d5890 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0xa1d5b20 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0xa1d5b08 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0xa1d5990 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0xa1d5f58 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0xa1d5f48 <col:7, col:49>
    (BinaryOperator 0xa1d5f30 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0xa1d5ed0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0xa1d5eb8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0xa1d5ca0 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0xa1d5f10 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0xa1d5ef8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0xa1d5da0 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0f9928 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0xa0f9910 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0xa0f98e0 <col:9> 'char_type':'_CharT' lvalue ParmVar 0xa1d7ca0 '__c1' 'char_type &')
    (DeclRefExpr 0xa0f98f8 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa1d7d10 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0f99e0 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0xa0f99d0 <col:9, col:24>
    (CXXOperatorCallExpr 0xa0f99a8 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f9970 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa196a00 0xa197010)
      (DeclRefExpr 0xa0f993c <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa1d7e30 '__c1' 'const char_type &')
      (DeclRefExpr 0xa0f9954 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0xa1d7e80 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa0f9a98 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0xa0f9a88 <col:9, col:23>
    (CXXOperatorCallExpr 0xa0f9a60 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f9a28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa198c80 0xa199880)
      (DeclRefExpr 0xa0f99f4 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0xa0f8180 '__c1' 'const char_type &')
      (DeclRefExpr 0xa0f9a0c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0xa0f81d0 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa0f9af8 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0xa0f9ae8 <col:9, col:42>
    (CXXStaticCastExpr 0xa0f9ad0 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0xa0f9aac <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0f8de0 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa0f9b58 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0xa0f9b48 <col:9, col:41>
    (CXXStaticCastExpr 0xa0f9b30 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0xa0f9b0c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0xa0f8f00 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa0f9c10 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0xa0f9c00 <col:9, col:24>
    (CXXOperatorCallExpr 0xa0f9bd8 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa0f9ba0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa196a00 0xa197010)
      (DeclRefExpr 0xa0f9b6c <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0f9020 '__c1' 'const int_type &')
      (DeclRefExpr 0xa0f9b84 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0f9070 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0xa0f9c88 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0xa0f9c78 <col:9, col:56>
    (CXXStaticCastExpr 0xa0f9c60 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0xa0f9c40 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa0f9c28 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa0f9de8 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0xa0f9dd8 <col:9, col:72>
    (ConditionalOperator 0xa0f9db8 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0xa0f9d30 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0xa0f9d08 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0xa0f9c9c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa0f9690 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0xa0f9cb4 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0f97c0 '__c' 'const int_type &')
          (CallExpr 0xa0f9ce8 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0xa0f9ccc <col:34> 'int_type (void)' lvalue CXXMethod 0xa0f9750 'eof' 'int_type (void)'))))
      (DeclRefExpr 0xa0f9d44 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0xa0f97c0 '__c' 'const int_type &')
      (CallExpr 0xa0f9d98 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0xa0f9d5c <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0xa0f8fa0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0xa0f9d80 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa0fa530 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0xa0fa4e0 <line:148:7, line:152:11>
    (DeclStmt 0xa0fa1f0 <line:148:12, col:31>
      0xa0fa190 "std::size_t __i =
        (ImplicitCastExpr 0xa0fa1e0 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa0fa1c8 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa0fa250 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0xa0fa230 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0fa200 <col:33> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0xa0fa240 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa0fa218 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0xa0fa060 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0xa0fa280 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa0fa268 <col:46> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0xa0fa4c0 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0xa0fa340 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0xa0fa294 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0f8230 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa0fa2e0 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fa2ac <col:9> 'const char_type *' lvalue ParmVar 0xa0f9fb0 '__s1' 'const char_type *')
          (DeclRefExpr 0xa0fa2c4 <col:14> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0xa0fa328 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0xa0fa2f4 <col:20> 'const char_type *' lvalue ParmVar 0xa0fa000 '__s2' 'const char_type *')
          (DeclRefExpr 0xa0fa30c <col:25> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0xa0fa398 <line:150:4, col:12>
        (UnaryOperator 0xa0fa380 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0xa0fa368 <col:12> 'int' 1)))
      (IfStmt 0xa0fa4a0 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0xa0fa450 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0xa0fa3a8 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0f8230 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0xa0fa3f0 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa0fa3c0 <col:14> 'const char_type *' lvalue ParmVar 0xa0fa000 '__s2' 'const char_type *')
            (DeclRefExpr 0xa0fa3d8 <col:19> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0xa0fa438 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa0fa404 <col:25> 'const char_type *' lvalue ParmVar 0xa0f9fb0 '__s1' 'const char_type *')
            (DeclRefExpr 0xa0fa41c <col:30> 'std::size_t':'unsigned int' lvalue Var 0xa0fa190 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0xa0fa490 <line:152:4, col:11>
          (IntegerLiteral 0xa0fa478 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0xa0fa520 <line:153:7, col:14>
    (IntegerLiteral 0xa0fa508 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0xa1e0330 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0xa1e01e0 <line:161:7, col:26>
    0xa1e0180 "std::size_t __i =
      (ImplicitCastExpr 0xa1e01d0 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1e01b8 <col:25> 'int' 0))")
  (WhileStmt 0xa1e02e0 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0xa1e0298 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0xa1e0270 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0xa1e01f0 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0f8100 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa1e0238 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e0208 <col:18> 'const char_type *' lvalue ParmVar 0xa1e0060 '__p' 'const char_type *')
          (DeclRefExpr 0xa1e0220 <col:22> 'std::size_t':'unsigned int' lvalue Var 0xa1e0180 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0xa1e0258 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0xa1e02c8 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa1e02ac <col:11> 'std::size_t':'unsigned int' lvalue Var 0xa1e0180 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0xa1e0320 <line:164:7, col:14>
    (ImplicitCastExpr 0xa1e0310 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa1e02f4 <col:14> 'std::size_t':'unsigned int' lvalue Var 0xa1e0180 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0xa1e0bc8 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0xa1e0b78 <line:172:7, line:174:24>
    (DeclStmt 0xa1e0970 <line:172:12, col:31>
      0xa1e0910 "std::size_t __i =
        (ImplicitCastExpr 0xa1e0960 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa1e0948 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0xa1e09d0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0xa1e09b0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e0980 <col:33> 'std::size_t':'unsigned int' lvalue Var 0xa1e0910 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0xa1e09c0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e0998 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0xa1e0660 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0xa1e0a00 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0xa1e09e8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0xa1e0910 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0xa1e0b58 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0xa1e0a90 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0xa1e0a14 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0xa0f8100 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0xa1e0a60 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0xa1e0a2c <col:16> 'const char_type *' lvalue ParmVar 0xa1e0600 '__s' 'const char_type *')
          (DeclRefExpr 0xa1e0a44 <col:20> 'std::size_t':'unsigned int' lvalue Var 0xa1e0910 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0xa1e0a74 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0xa1e06b0 '__a' 'const char_type &'))
      (ReturnStmt 0xa1e0b48 <line:174:11, col:24>
        (CXXOperatorCallExpr 0xa1e0b20 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa1e0ae8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19e0f0)
          (DeclRefExpr 0xa1e0ab4 <col:18> 'const char_type *' lvalue ParmVar 0xa1e0600 '__s' 'const char_type *')
          (DeclRefExpr 0xa1e0acc <col:24> 'std::size_t':'unsigned int' lvalue Var 0xa1e0910 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0xa1e0bb8 <line:175:7, col:14>
    (IntegerLiteral 0xa1e0ba0 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa1e1280 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0xa1e1270 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0xa1e1258 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0xa1e1208 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0xa1e115c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0xa1e1174 <col:53> 'char_type *' lvalue ParmVar 0xa1e0e60 '__s1' 'char_type *')
        (DeclRefExpr 0xa1e118c <col:59> 'const char_type *' lvalue ParmVar 0xa1e0eb0 '__s2' 'const char_type *')
        (BinaryOperator 0xa1e11f0 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0xa1e11e0 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa1e11a4 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0xa1e0f10 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa1e11c8 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0xa1e1968 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0xa1e1918 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0xa1e1820 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920)
    (DeclRefExpr 0xa1e1854 <col:17> 'const char_type *' lvalue ParmVar 0xa1e1570 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0xa1e18d8 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa1e18a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa19e0f0)
      (DeclRefExpr 0xa1e186c <col:23> 'const char_type *' lvalue ParmVar 0xa1e1570 '__s2' 'const char_type *')
      (DeclRefExpr 0xa1e1884 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0xa1e15d0 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0xa1e18fc <col:35> 'char_type *' lvalue ParmVar 0xa1e1520 '__s1' 'char_type *'))
  (ReturnStmt 0xa1e1958 <line:194:7, col:14>
    (DeclRefExpr 0xa1e1940 <col:14> 'char_type *' lvalue ParmVar 0xa1e1520 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0xa1e2fe0 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0xa1e1f70 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa1e1ef0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1bb590)
    (DeclRefExpr 0xa1e1f24 <col:19> 'char_type *' lvalue ParmVar 0xa1e1c00 '__s' 'char_type *')
    (DeclRefExpr 0xa1e1f3c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0xa1e1c60 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0xa1e1f54 <col:29> 'char_type':'_CharT' lvalue ParmVar 0xa1e1ca0 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0xa1e2fd0 <line:204:7, col:14>
    (DeclRefExpr 0xa1e2fb8 <col:14> 'char_type *' lvalue ParmVar 0xa1e1c00 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4bf8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa1e4be0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa1e4ba0 <col:9> 'char_type':'char' lvalue ParmVar 0xa1e36d0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e4bd0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa1e4bb8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3760 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4ca8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa1e4c98 <col:9, col:24>
    (BinaryOperator 0xa1e4c80 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e4c50 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c40 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c0c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3880 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4c70 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c60 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c24 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa1e38d0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4d58 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa1e4d48 <col:9, col:23>
    (BinaryOperator 0xa1e4d30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e4d00 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4cf0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cbc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e39f0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4d20 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4d10 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cd4 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa1e3a40 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e4e80 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa1e4e70 <col:9, col:48>
    (CallExpr 0xa1e4df8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa1e4de8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4d6c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa1e4e30 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e20 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d84 <col:33> 'const char_type *' lvalue ParmVar 0xa1e3b40 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e50 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e40 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d9c <col:39> 'const char_type *' lvalue ParmVar 0xa1e3b90 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e60 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e4db4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3bd0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e5018 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa1e5008 <col:9, col:36>
    (CallExpr 0xa1e4fd8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa1e4fc8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4f74 <col:16> 'unsigned int (const char *)' lvalue Function 0xa1e4ea0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa1e4ff8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e4f8c <col:33> 'const char_type *' lvalue ParmVar 0xa1e3d10 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e68f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa1e68e8 <col:9, col:77>
    (CXXStaticCastExpr 0xa1e68d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa1e6848 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa1e6838 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e67b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa1e6650 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6880 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6870 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e67cc <col:63> 'const char_type *' lvalue ParmVar 0xa1e3e30 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa1e68a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6890 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e67e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa1e3ec0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa1e68b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e67fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3e70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6a48 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa1e6a38 <col:9, col:74>
    (CXXStaticCastExpr 0xa1e6a20 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6998 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa1e6988 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e690c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e69d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e69c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6924 <col:58> 'char_type *' lvalue ParmVar 0xa1e40f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e69f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e69e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e693c <col:64> 'const char_type *' lvalue ParmVar 0xa1e4140 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6a00 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6954 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4180 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6ce8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa1e6cd8 <col:9, col:73>
    (CXXStaticCastExpr 0xa1e6cc0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6c38 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa1e6c28 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6bc4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e6c70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bdc <col:57> 'char_type *' lvalue ParmVar 0xa1e42c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e6c90 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c80 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bf4 <col:63> 'const char_type *' lvalue ParmVar 0xa1e4310 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6ca0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6c0c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4350 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e6e38 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa1e6e28 <col:9, col:71>
    (CXXStaticCastExpr 0xa1e6e10 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6d88 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa1e6d78 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6cfc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa1b88e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6dc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6db0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6d14 <col:57> 'char_type *' lvalue ParmVar 0xa1e4430 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa1e6de0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6dd0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e6d2c <col:62> 'char_type':'char' lvalue ParmVar 0xa1e44b0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa1e6df0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6d44 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4470 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1e6eb8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa1e6ea8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1e6e90 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa1e6e80 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa1e6e70 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa1e6e4c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa1e4640 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1e6f70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa1e6f60 <col:9, col:69>
    (CXXStaticCastExpr 0xa1e6f48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa1e6f38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa1e6f18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa1e6f08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa1e6ef8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa1e6ecc <col:65> 'const char_type':'const char' lvalue ParmVar 0xa1e4760 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1e7000 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa1e6ff0 <col:9, col:24>
    (BinaryOperator 0xa1e6fd8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e6fb8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f84 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa1e4880 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1e6fc8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f9c <col:24> 'const int_type':'const int' lvalue ParmVar 0xa1e48d0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1e7078 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa1e7068 <col:9, col:56>
    (CXXStaticCastExpr 0xa1e7050 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa1e7030 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa1e7018 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1e71d8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa1e71c8 <col:9, col:37>
    (ConditionalOperator 0xa1e71a8 <col:16, col:37> 'int'
      (ParenExpr 0xa1e7150 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa1e7138 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa1e7128 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa1e708c <col:17> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &'))
          (CallExpr 0xa1e7108 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa1e70f8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1e70a4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa1e4a10 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa1e7168 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa1e7198 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e7180 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &')))))


    }
template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e96e8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa1e96d0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa1e9690 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa1e7590 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e96c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa1e96a8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e83b0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9778 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa1e9768 <col:9, col:24>
    (BinaryOperator 0xa1e9750 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e9730 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e96fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e84d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e9740 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9714 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8520 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9808 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa1e97f8 <col:9, col:23>
    (BinaryOperator 0xa1e97e0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e97c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e978c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8640 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e97d0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e97a4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8690 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9970 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa1e9960 <col:9, col:39>
    (CallExpr 0xa1e9908 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa1e98f8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e989c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa1116a0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0a20 'wmemcmp')))
      (ImplicitCastExpr 0xa1e9930 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9854 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8790 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9940 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e986c <col:30> 'const char_type *' lvalue ParmVar 0xa1e87e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9950 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9884 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8820 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e9a78 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa1e9a68 <col:9, col:26>
    (CallExpr 0xa1e9a38 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa1e9a28 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e99d4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0xa110fe0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa1d0470 'wcslen')))
      (ImplicitCastExpr 0xa1e9a58 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e99bc <col:23> 'const char_type *' lvalue ParmVar 0xa1e8930 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e9bb8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa1e9ba8 <col:9, col:37>
    (ImplicitCastExpr 0xa1e9b98 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa1e9b40 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa1e9b30 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e9b10 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa1114f0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0e80 'wmemchr')))
        (ImplicitCastExpr 0xa1e9b68 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e9ac8 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8a30 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa1e9b78 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1e9ae0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8ac0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa1e9b88 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9af8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8a70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9d20 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa1e9d10 <col:9, col:40>
    (CallExpr 0xa1e9cb8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9ca8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9c4c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa111a00 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0b00 'wmemmove')))
      (ImplicitCastExpr 0xa1e9ce0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c04 <col:25> 'char_type *' lvalue ParmVar 0xa1e8c20 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c1c <col:31> 'const char_type *' lvalue ParmVar 0xa1e8c70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9d00 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9c34 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8cb0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9e60 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa1e9e50 <col:9, col:39>
    (CallExpr 0xa1e9df8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9de8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9db4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0xa111850 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa1d0a90 'wmemcpy')))
      (ImplicitCastExpr 0xa1e9e20 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d6c <col:24> 'char_type *' lvalue ParmVar 0xa1e8dc0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9e30 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d84 <col:30> 'const char_type *' lvalue ParmVar 0xa1e8e10 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9e40 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9d9c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8e50 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e9fc0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa1e9fb0 <col:9, col:37>
    (CallExpr 0xa1e9f58 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9f48 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9ef4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa111bc0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0b70 'wmemset')))
      (ImplicitCastExpr 0xa1e9f80 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9eac <col:24> 'char_type *' lvalue ParmVar 0xa1e8f30 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa1e9f90 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9ec4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa1e8fb0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa1e9fa0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9edc <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8f70 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1ea040 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa1ea030 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa1ea018 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa1ea008 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa1e9ff8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9fe0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9120 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1ea0c0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa1ea0b0 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa1ea098 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa1ea088 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa1ea078 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1ea060 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e9240 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1ea150 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa1ea140 <col:9, col:24>
    (BinaryOperator 0xa1ea128 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1ea108 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0d4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9360 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1ea118 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0ec <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e93c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1ea1c8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa1ea1b8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1ea1a0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa1ea180 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa1ea168 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1eaa38 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa1ea390 <col:9, col:46>
    (ConditionalOperator 0xa1ea370 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa1ea2e8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa1ea2d8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1ea1dc <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa1e9460 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa1ea1f4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa1ea310 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa1ea278 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa1ea268 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1ea20c <col:33> 'int_type (void)' lvalue CXXMethod 0xa1e9500 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa1ea360 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1ea320 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa1ea350 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea338 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4bf8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0xa1e4be0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0xa1e4ba0 <col:9> 'char_type':'char' lvalue ParmVar 0xa1e36d0 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e4bd0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa1e4bb8 <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3760 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4ca8 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0xa1e4c98 <col:9, col:24>
    (BinaryOperator 0xa1e4c80 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e4c50 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c40 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c0c <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e3880 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4c70 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4c60 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4c24 <col:24> 'const char_type':'const char' lvalue ParmVar 0xa1e38d0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e4d58 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0xa1e4d48 <col:9, col:23>
    (BinaryOperator 0xa1e4d30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e4d00 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4cf0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cbc <col:16> 'const char_type':'const char' lvalue ParmVar 0xa1e39f0 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0xa1e4d20 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa1e4d10 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa1e4cd4 <col:23> 'const char_type':'const char' lvalue ParmVar 0xa1e3a40 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e4e80 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0xa1e4e70 <col:9, col:48>
    (CallExpr 0xa1e4df8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0xa1e4de8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4d6c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0xa1bdae0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0xa1e4e30 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e20 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d84 <col:33> 'const char_type *' lvalue ParmVar 0xa1e3b40 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e50 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0xa1e4e40 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e4d9c <col:39> 'const char_type *' lvalue ParmVar 0xa1e3b90 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0xa1e4e60 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e4db4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3bd0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e5018 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0xa1e5008 <col:9, col:36>
    (CallExpr 0xa1e4fd8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0xa1e4fc8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e4f74 <col:16> 'unsigned int (const char *)' lvalue Function 0xa1e4ea0 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0xa1e4ff8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e4f8c <col:33> 'const char_type *' lvalue ParmVar 0xa1e3d10 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e68f8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0xa1e68e8 <col:9, col:77>
    (CXXStaticCastExpr 0xa1e68d0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0xa1e6848 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0xa1e6838 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e67b4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0xa1e6650 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6880 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6870 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e67cc <col:63> 'const char_type *' lvalue ParmVar 0xa1e3e30 '__s' 'const char_type *')))
        (ImplicitCastExpr 0xa1e68a0 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6890 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e67e4 <col:68> 'const char_type':'const char' lvalue ParmVar 0xa1e3ec0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0xa1e68b0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e67fc <col:73> 'size_t':'unsigned int' lvalue ParmVar 0xa1e3e70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6a48 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0xa1e6a38 <col:9, col:74>
    (CXXStaticCastExpr 0xa1e6a20 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6998 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0xa1e6988 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e690c <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1aca90 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e69d0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e69c0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6924 <col:58> 'char_type *' lvalue ParmVar 0xa1e40f0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e69f0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e69e0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e693c <col:64> 'const char_type *' lvalue ParmVar 0xa1e4140 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6a00 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6954 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4180 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e6ce8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0xa1e6cd8 <col:9, col:73>
    (CXXStaticCastExpr 0xa1e6cc0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6c38 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0xa1e6c28 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6bc4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa1e6c70 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c60 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bdc <col:57> 'char_type *' lvalue ParmVar 0xa1e42c0 '__s1' 'char_type *')))
        (ImplicitCastExpr 0xa1e6c90 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa1e6c80 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6bf4 <col:63> 'const char_type *' lvalue ParmVar 0xa1e4310 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0xa1e6ca0 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6c0c <col:69> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4350 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e6e38 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0xa1e6e28 <col:9, col:71>
    (CXXStaticCastExpr 0xa1e6e10 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0xa1e6d88 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0xa1e6d78 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e6cfc <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0xa1b88e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0xa1e6dc0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0xa1e6db0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa1e6d14 <col:57> 'char_type *' lvalue ParmVar 0xa1e4430 '__s' 'char_type *')))
        (ImplicitCastExpr 0xa1e6de0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa1e6dd0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0xa1e6d2c <col:62> 'char_type':'char' lvalue ParmVar 0xa1e44b0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0xa1e6df0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e6d44 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0xa1e4470 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1e6eb8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0xa1e6ea8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1e6e90 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0xa1e6e80 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0xa1e6e70 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa1e6e4c <col:39> 'const int_type':'const int' lvalue ParmVar 0xa1e4640 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1e6f70 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0xa1e6f60 <col:9, col:69>
    (CXXStaticCastExpr 0xa1e6f48 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0xa1e6f38 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0xa1e6f18 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa1e6f08 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa1e6ef8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa1e6ecc <col:65> 'const char_type':'const char' lvalue ParmVar 0xa1e4760 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1e7000 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0xa1e6ff0 <col:9, col:24>
    (BinaryOperator 0xa1e6fd8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e6fb8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f84 <col:16> 'const int_type':'const int' lvalue ParmVar 0xa1e4880 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1e6fc8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e6f9c <col:24> 'const int_type':'const int' lvalue ParmVar 0xa1e48d0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1e7078 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0xa1e7068 <col:9, col:56>
    (CXXStaticCastExpr 0xa1e7050 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0xa1e7030 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0xa1e7018 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1e71d8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0xa1e71c8 <col:9, col:37>
    (ConditionalOperator 0xa1e71a8 <col:16, col:37> 'int'
      (ParenExpr 0xa1e7150 <col:16, col:29> '_Bool'
        (BinaryOperator 0xa1e7138 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0xa1e7128 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa1e708c <col:17> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &'))
          (CallExpr 0xa1e7108 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0xa1e70f8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1e70a4 <col:24> 'int_type (void)' lvalue CXXMethod 0xa1e4a10 'eof' 'int_type (void)')))))
      (IntegerLiteral 0xa1e7168 <col:33> 'int' 0)
      (ImplicitCastExpr 0xa1e7198 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa1e7180 <col:37> 'const int_type':'const int' lvalue ParmVar 0xa1e4a80 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e96e8 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0xa1e96d0 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0xa1e9690 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0xa1e7590 '__c1' 'char_type &')
    (ImplicitCastExpr 0xa1e96c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa1e96a8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e83b0 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9778 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0xa1e9768 <col:9, col:24>
    (BinaryOperator 0xa1e9750 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1e9730 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e96fc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e84d0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e9740 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9714 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8520 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0xa1e9808 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0xa1e97f8 <col:9, col:23>
    (BinaryOperator 0xa1e97e0 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0xa1e97c0 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e978c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8640 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0xa1e97d0 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e97a4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8690 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9970 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0xa1e9960 <col:9, col:39>
    (CallExpr 0xa1e9908 <col:16, col:39> 'int'
      (ImplicitCastExpr 0xa1e98f8 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e989c <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa1116a0 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0a20 'wmemcmp')))
      (ImplicitCastExpr 0xa1e9930 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9854 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8790 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9940 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e986c <col:30> 'const char_type *' lvalue ParmVar 0xa1e87e0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9950 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9884 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8820 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0xa1e9a78 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0xa1e9a68 <col:9, col:26>
    (CallExpr 0xa1e9a38 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0xa1e9a28 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e99d4 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0xa110fe0 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0xa1d0470 'wcslen')))
      (ImplicitCastExpr 0xa1e9a58 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e99bc <col:23> 'const char_type *' lvalue ParmVar 0xa1e8930 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0xa1e9bb8 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0xa1e9ba8 <col:9, col:37>
    (ImplicitCastExpr 0xa1e9b98 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0xa1e9b40 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0xa1e9b30 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1e9b10 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa1114f0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0e80 'wmemchr')))
        (ImplicitCastExpr 0xa1e9b68 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa1e9ac8 <col:24> 'const char_type *' lvalue ParmVar 0xa1e8a30 '__s' 'const char_type *'))
        (ImplicitCastExpr 0xa1e9b78 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1e9ae0 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e8ac0 '__a' 'const char_type &'))
        (ImplicitCastExpr 0xa1e9b88 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9af8 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8a70 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9d20 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0xa1e9d10 <col:9, col:40>
    (CallExpr 0xa1e9cb8 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9ca8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9c4c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0xa111a00 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0xa1d0b00 'wmemmove')))
      (ImplicitCastExpr 0xa1e9ce0 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c04 <col:25> 'char_type *' lvalue ParmVar 0xa1e8c20 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9cf0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9c1c <col:31> 'const char_type *' lvalue ParmVar 0xa1e8c70 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9d00 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9c34 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8cb0 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0xa1e9e60 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0xa1e9e50 <col:9, col:39>
    (CallExpr 0xa1e9df8 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9de8 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9db4 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0xa111850 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0xa1d0a90 'wmemcpy')))
      (ImplicitCastExpr 0xa1e9e20 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d6c <col:24> 'char_type *' lvalue ParmVar 0xa1e8dc0 '__s1' 'char_type *'))
      (ImplicitCastExpr 0xa1e9e30 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9d84 <col:30> 'const char_type *' lvalue ParmVar 0xa1e8e10 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0xa1e9e40 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9d9c <col:36> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8e50 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0xa1e9fc0 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0xa1e9fb0 <col:9, col:37>
    (CallExpr 0xa1e9f58 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0xa1e9f48 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1e9ef4 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0xa111bc0 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0xa1d0b70 'wmemset')))
      (ImplicitCastExpr 0xa1e9f80 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa1e9eac <col:24> 'char_type *' lvalue ParmVar 0xa1e8f30 '__s' 'char_type *'))
      (ImplicitCastExpr 0xa1e9f90 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa1e9ec4 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0xa1e8fb0 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0xa1e9fa0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1e9edc <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa1e8f70 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0xa1ea040 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0xa1ea030 <col:9, col:29>
    (CXXFunctionalCastExpr 0xa1ea018 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0xa1ea008 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0xa1e9ff8 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa1e9fe0 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9120 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0xa1ea0c0 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0xa1ea0b0 <col:9, col:28>
    (CXXFunctionalCastExpr 0xa1ea098 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0xa1ea088 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa1ea078 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa1ea060 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0xa1e9240 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0xa1ea150 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0xa1ea140 <col:9, col:24>
    (BinaryOperator 0xa1ea128 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0xa1ea108 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0d4 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9360 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0xa1ea118 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea0ec <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e93c0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0xa1ea1c8 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0xa1ea1b8 <col:9, col:42>
    (CXXStaticCastExpr 0xa1ea1a0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0xa1ea180 </usr/include/wchar.h:119:15, col:27> 'unsigned int'
        (IntegerLiteral 0xa1ea168 <col:16> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0xa1eaa38 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0xa1ea390 <col:9, col:46>
    (ConditionalOperator 0xa1ea370 <col:16, col:46> 'unsigned int'
      (CallExpr 0xa1ea2e8 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0xa1ea2d8 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1ea1dc <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0xa1e9460 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0xa1ea1f4 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0xa1ea310 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0xa1ea278 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0xa1ea268 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa1ea20c <col:33> 'int_type (void)' lvalue CXXMethod 0xa1e9500 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0xa1ea360 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa1ea320 <col:42> 'int' 0))
      (ImplicitCastExpr 0xa1ea350 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1ea338 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0xa1e9570 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0xa1eaf50 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0xa1eb530 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0xa1f2e10 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0xa1f4288 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0xa1f4278 <col:61, col:68>
    (ImplicitCastExpr 0xa1f4268 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa1f424c <col:68> 'void *' lvalue ParmVar 0xa1f4100 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0xa1f4468 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0xa1f4458 <col:63, col:70>
    (ImplicitCastExpr 0xa1f4448 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0xa1f442c <col:70> 'void *' lvalue ParmVar 0xa1f4320 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0xa1f4630 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0xa1f47b0 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0xa1f68b0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0xa1f68c0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0xa1f68e0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0xa1f68b0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0xa1f68c0 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0xa1f68d0 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0xa1f68e0 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0xa1f6988 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0xa1f6978 <col:38, col:65>
    (CallExpr 0xa1f6958 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0xa1f6908 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
      (DeclRefExpr 0xa1f693c <col:62> '_Tp' lvalue ParmVar 0xa1f56f0 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0xa1f6a38 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0xa1f6a28 <col:44, col:71>
    (CallExpr 0xa1f6a08 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0xa1f69b8 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
      (DeclRefExpr 0xa1f69ec <col:68> 'const _Tp' lvalue ParmVar 0xa1f5830 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0xa1f68a0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0xa1f6888 <col:45> 'int' 0))
) (CompoundStmt 0xa1f6d90 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0xa1f6bd8 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa1f6b28 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa1f6af0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa199ea0 0xa19a470)
      (DeclRefExpr 0xa1f6a4c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa1f5960 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa1f6ad0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa1f6a98 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa1f6a88 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0xa1f6bb8 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0xa1f6ba8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1f6b70 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0xa13d870 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa1f6d80 <line:92:2, col:60>
    (CXXStaticCastExpr 0xa1f6d68 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0xa1f6d38 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0xa1f6d28 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1f6cd0 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0xa1f32d0 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0xa1f6cb8 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0xa1f6ca8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa1f6c6c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa1f5960 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0xa1f6c90 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0xa1f6e38 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0xa1f6e18 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa1f6dc0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1f3540 0xa1f3e40 0xa1f4580)
    (DeclRefExpr 0xa1f6dfc <col:27> 'pointer':'_Tp *' lvalue ParmVar 0xa1f6410 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0xa1f6ef8 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0xa1f6ee8 <col:9, col:39>
    (BinaryOperator 0xa1f6ed0 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0xa1f6e98 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0xa1f6e88 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0xa1f6e70 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0xa1f6e58 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0xa1f6eb8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0xa1f6fb0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0xa1f6f70 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0xa1f6f38 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0xa1f6f0c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0xa1f6620 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0xa1f6f50 <col:32> 'const _Tp' lvalue ParmVar 0xa1f6670 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0xa1f7038 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0xa1f7018 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0xa1f6fe8 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0xa1f6fc4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0xa1f6780 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa1f8610 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0xa1f8600 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1f85f0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0xa1f8980 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0xa1f8970 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1f8960 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa6615b0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa661304 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa202040 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa6615b0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa661304 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa202040 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0xa1fb038 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0xa1fab50 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0xa1fb0a0 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa1fb500 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0xa1fb4f0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1fb4e0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa1fb890 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0xa1fb880 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1fb870 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0xa1fbc60 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0xa1fbc50 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1fbc40 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0xa1fbfd0 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0xa1fbfc0 <col:7, col:14>
    (CXXBoolLiteralExpr 0xa1fbfb0 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa6615b0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa661304 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa202040 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa202660 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0xa202ab0 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0xa203120 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0xa203100 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa203048 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0xa203000 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1fbf80 0xa1fbc10 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80)
      (DeclRefExpr 0xa202fd0 <col:6> '_Alloc' lvalue ParmVar 0xa202e80 '__one' '_Alloc &')
      (DeclRefExpr 0xa202fe8 <col:15> '_Alloc' lvalue ParmVar 0xa202ed0 '__two' '_Alloc &'))
    (CallExpr 0xa2030d8 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa203070 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa1696d0 0xa169c10)
      (DeclRefExpr 0xa2030a8 <col:9> '_Alloc' lvalue ParmVar 0xa202e80 '__one' '_Alloc &')
      (DeclRefExpr 0xa2030c0 <col:16> '_Alloc' lvalue ParmVar 0xa202ed0 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0xa203190 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0xa203600 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0xa2035f0 <col:9, col:16>
    (CXXBoolLiteralExpr 0xa2035e0 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0xa203be0 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0xa203bd0 <col:9, col:25>
    (CXXOperatorCallExpr 0xa203ba8 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa203b60 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1fbf80 0xa1fbc10 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80)
      (DeclRefExpr 0xa203b30 <col:16> 'const _Alloc' lvalue ParmVar 0xa2039e0 '__one' 'const _Alloc &')
      (DeclRefExpr 0xa203b48 <col:25> 'const _Alloc' lvalue ParmVar 0xa203a30 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0xa20a498 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa203c60 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0xa20a4a8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa203cb8 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0xa20a4b8 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a128 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0xa20a4c8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a178 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0xa20a4d8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a1c8 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0xa20a4e8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a218 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0xa20a4f8 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a268 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0xa20a508 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a2b8 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0xa20a518 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a308 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0xa20a528 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a358 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0xa20a538 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a3a8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0xa20a548 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a3f8 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0xa20a558 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa20a448 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0xa20fc00 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0xa20bd08 <line:75:5, col:54>
    0xa20bc00 "__c_locale __old =
      (CallExpr 0xa20bcd8 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0xa20bcc8 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa20bc58 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa20b750 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0xa20bcf8 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0xa20bc78 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0xa20b950 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0xa20bd58 <line:88:5, col:29>
    0xa20bd20 "__builtin_va_list __args")
  (CallExpr 0xa20bf58 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0xa20bf48 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa20bec4 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0xa20bdf0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0xa20bedc <col:24> '__builtin_va_list':'char *' lvalue Var 0xa20bd20 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0xa20bef4 <col:32> 'const char *' lvalue ParmVar 0xa20bac0 '__fmt' 'const char *'))
  (DeclStmt 0xa20f958 <line:92:5, col:72>
    0xa20bf90 "const int __ret =
      (CallExpr 0xa20f8d8 <col:23, col:71> 'int'
        (ImplicitCastExpr 0xa20f8c8 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa20f810 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0xa20bfd0 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0xa20f908 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0xa20f828 <col:43> 'char *' lvalue ParmVar 0xa20b9e0 '__out' 'char *'))
        (ImplicitCastExpr 0xa20f928 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa20f918 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa20f840 <col:50> 'const int' lvalue ParmVar 0xa20ba30 '__size' 'const int')))
        (ImplicitCastExpr 0xa20f938 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa20f858 <col:58> 'const char *' lvalue ParmVar 0xa20bac0 '__fmt' 'const char *'))
        (ImplicitCastExpr 0xa20f948 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0xa20f870 <col:65> '__builtin_va_list':'char *' lvalue Var 0xa20bd20 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0xa20fb08 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0xa20faf8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa20fa84 <col:5> 'void (__builtin_va_list &)' lvalue Function 0xa20f9b0 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0xa20fa9c <col:22> '__builtin_va_list':'char *' lvalue Var 0xa20bd20 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0xa20fb98 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0xa20fb88 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0xa20fb4c <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0xa20b750 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0xa20fbb8 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0xa20fb6c <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0xa20bc00 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0xa20fbf0 <line:108:5, col:12>
    (ImplicitCastExpr 0xa20fbe0 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0xa20fbc4 <col:12> 'const int' lvalue Var 0xa20bf90 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0xa2208e8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21a220 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21a200 <col:24, col:76> 'int'
      (BinaryOperator 0xa21a068 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21a038 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21a020 <line:50:22> 'int' 0))
        (IntegerLiteral 0xa21a050 <line:45:32> 'int' 8))
      (ParenExpr 0xa21a128 <col:36, col:54> 'int'
        (BinaryOperator 0xa21a110 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21a0e0 <col:37, col:48> 'int'
            (BinaryOperator 0xa21a0c8 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21a080 <col:38> 'int' 1)
              (ParenExpr 0xa21a0b0 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21a098 <line:50:22> 'int' 0))))
          (IntegerLiteral 0xa21a0f8 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21a1e8 <col:58, col:76> 'int'
        (BinaryOperator 0xa21a1d0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21a1a0 <col:59, col:70> 'int'
            (BinaryOperator 0xa21a188 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21a140 <col:60> 'int' 1)
              (ParenExpr 0xa21a170 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21a158 <line:50:22> 'int' 0))))
          (IntegerLiteral 0xa21a1b8 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0xa2208f8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21a478 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21a458 <col:24, col:76> 'int'
      (BinaryOperator 0xa21a2c0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21a290 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21a278 <line:51:22> 'int' 1))
        (IntegerLiteral 0xa21a2a8 <line:45:32> 'int' 8))
      (ParenExpr 0xa21a380 <col:36, col:54> 'int'
        (BinaryOperator 0xa21a368 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21a338 <col:37, col:48> 'int'
            (BinaryOperator 0xa21a320 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21a2d8 <col:38> 'int' 1)
              (ParenExpr 0xa21a308 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21a2f0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0xa21a350 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21a440 <col:58, col:76> 'int'
        (BinaryOperator 0xa21a428 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21a3f8 <col:59, col:70> 'int'
            (BinaryOperator 0xa21a3e0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21a398 <col:60> 'int' 1)
              (ParenExpr 0xa21a3c8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21a3b0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0xa21a410 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0xa220908 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21a6c8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21a6a8 <col:24, col:76> 'int'
      (BinaryOperator 0xa21a510 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21a4e0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21a4c8 <line:52:22> 'int' 2))
        (IntegerLiteral 0xa21a4f8 <line:45:32> 'int' 8))
      (ParenExpr 0xa21a5d0 <col:36, col:54> 'int'
        (BinaryOperator 0xa21a5b8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21a588 <col:37, col:48> 'int'
            (BinaryOperator 0xa21a570 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21a528 <col:38> 'int' 1)
              (ParenExpr 0xa21a558 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21a540 <line:52:22> 'int' 2))))
          (IntegerLiteral 0xa21a5a0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21a690 <col:58, col:76> 'int'
        (BinaryOperator 0xa21a678 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21a648 <col:59, col:70> 'int'
            (BinaryOperator 0xa21a630 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21a5e8 <col:60> 'int' 1)
              (ParenExpr 0xa21a618 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21a600 <line:52:22> 'int' 2))))
          (IntegerLiteral 0xa21a660 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0xa220918 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21a918 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21a8f8 <col:24, col:76> 'int'
      (BinaryOperator 0xa21a760 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21a730 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21a718 <line:53:22> 'int' 3))
        (IntegerLiteral 0xa21a748 <line:45:32> 'int' 8))
      (ParenExpr 0xa21a820 <col:36, col:54> 'int'
        (BinaryOperator 0xa21a808 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21a7d8 <col:37, col:48> 'int'
            (BinaryOperator 0xa21a7c0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21a778 <col:38> 'int' 1)
              (ParenExpr 0xa21a7a8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21a790 <line:53:22> 'int' 3))))
          (IntegerLiteral 0xa21a7f0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21a8e0 <col:58, col:76> 'int'
        (BinaryOperator 0xa21a8c8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21a898 <col:59, col:70> 'int'
            (BinaryOperator 0xa21a880 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21a838 <col:60> 'int' 1)
              (ParenExpr 0xa21a868 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21a850 <line:53:22> 'int' 3))))
          (IntegerLiteral 0xa21a8b0 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0xa220928 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21ab68 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21ab48 <col:24, col:76> 'int'
      (BinaryOperator 0xa21a9b0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21a980 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21a968 <line:54:23> 'int' 4))
        (IntegerLiteral 0xa21a998 <line:45:32> 'int' 8))
      (ParenExpr 0xa21aa70 <col:36, col:54> 'int'
        (BinaryOperator 0xa21aa58 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21aa28 <col:37, col:48> 'int'
            (BinaryOperator 0xa21aa10 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21a9c8 <col:38> 'int' 1)
              (ParenExpr 0xa21a9f8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21a9e0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0xa21aa40 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21ab30 <col:58, col:76> 'int'
        (BinaryOperator 0xa21ab18 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21aae8 <col:59, col:70> 'int'
            (BinaryOperator 0xa21aad0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21aa88 <col:60> 'int' 1)
              (ParenExpr 0xa21aab8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21aaa0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0xa21ab00 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0xa220938 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21adb8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21ad98 <col:24, col:76> 'int'
      (BinaryOperator 0xa21ac00 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21abd0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21abb8 <line:55:22> 'int' 5))
        (IntegerLiteral 0xa21abe8 <line:45:32> 'int' 8))
      (ParenExpr 0xa21acc0 <col:36, col:54> 'int'
        (BinaryOperator 0xa21aca8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21ac78 <col:37, col:48> 'int'
            (BinaryOperator 0xa21ac60 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21ac18 <col:38> 'int' 1)
              (ParenExpr 0xa21ac48 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21ac30 <line:55:22> 'int' 5))))
          (IntegerLiteral 0xa21ac90 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21ad80 <col:58, col:76> 'int'
        (BinaryOperator 0xa21ad68 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21ad38 <col:59, col:70> 'int'
            (BinaryOperator 0xa21ad20 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21acd8 <col:60> 'int' 1)
              (ParenExpr 0xa21ad08 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21acf0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0xa21ad50 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0xa220948 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21b008 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21afe8 <col:24, col:76> 'int'
      (BinaryOperator 0xa21ae50 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21ae20 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21ae08 <line:56:22> 'int' 6))
        (IntegerLiteral 0xa21ae38 <line:45:32> 'int' 8))
      (ParenExpr 0xa21af10 <col:36, col:54> 'int'
        (BinaryOperator 0xa21aef8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21aec8 <col:37, col:48> 'int'
            (BinaryOperator 0xa21aeb0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21ae68 <col:38> 'int' 1)
              (ParenExpr 0xa21ae98 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21ae80 <line:56:22> 'int' 6))))
          (IntegerLiteral 0xa21aee0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21afd0 <col:58, col:76> 'int'
        (BinaryOperator 0xa21afb8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21af88 <col:59, col:70> 'int'
            (BinaryOperator 0xa21af70 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21af28 <col:60> 'int' 1)
              (ParenExpr 0xa21af58 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21af40 <line:56:22> 'int' 6))))
          (IntegerLiteral 0xa21afa0 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0xa220958 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21b258 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21b238 <col:24, col:76> 'int'
      (BinaryOperator 0xa21b0a0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21b070 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21b058 <line:57:22> 'int' 7))
        (IntegerLiteral 0xa21b088 <line:45:32> 'int' 8))
      (ParenExpr 0xa21b160 <col:36, col:54> 'int'
        (BinaryOperator 0xa21b148 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21b118 <col:37, col:48> 'int'
            (BinaryOperator 0xa21b100 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21b0b8 <col:38> 'int' 1)
              (ParenExpr 0xa21b0e8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21b0d0 <line:57:22> 'int' 7))))
          (IntegerLiteral 0xa21b130 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21b220 <col:58, col:76> 'int'
        (BinaryOperator 0xa21b208 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21b1d8 <col:59, col:70> 'int'
            (BinaryOperator 0xa21b1c0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21b178 <col:60> 'int' 1)
              (ParenExpr 0xa21b1a8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21b190 <line:57:22> 'int' 7))))
          (IntegerLiteral 0xa21b1f0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0xa220968 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21b4a8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21b488 <col:24, col:76> 'int'
      (BinaryOperator 0xa21b2f0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21b2c0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21b2a8 <line:58:22> 'int' 8))
        (IntegerLiteral 0xa21b2d8 <line:45:32> 'int' 8))
      (ParenExpr 0xa21b3b0 <col:36, col:54> 'int'
        (BinaryOperator 0xa21b398 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21b368 <col:37, col:48> 'int'
            (BinaryOperator 0xa21b350 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21b308 <col:38> 'int' 1)
              (ParenExpr 0xa21b338 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21b320 <line:58:22> 'int' 8))))
          (IntegerLiteral 0xa21b380 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21b470 <col:58, col:76> 'int'
        (BinaryOperator 0xa21b458 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21b428 <col:59, col:70> 'int'
            (BinaryOperator 0xa21b410 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21b3c8 <col:60> 'int' 1)
              (ParenExpr 0xa21b3f8 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21b3e0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0xa21b440 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0xa220978 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21b6f8 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21b6d8 <col:24, col:76> 'int'
      (BinaryOperator 0xa21b540 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21b510 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21b4f8 <line:59:22> 'int' 9))
        (IntegerLiteral 0xa21b528 <line:45:32> 'int' 8))
      (ParenExpr 0xa21b600 <col:36, col:54> 'int'
        (BinaryOperator 0xa21b5e8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21b5b8 <col:37, col:48> 'int'
            (BinaryOperator 0xa21b5a0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21b558 <col:38> 'int' 1)
              (ParenExpr 0xa21b588 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21b570 <line:59:22> 'int' 9))))
          (IntegerLiteral 0xa21b5d0 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21b6c0 <col:58, col:76> 'int'
        (BinaryOperator 0xa21b6a8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21b678 <col:59, col:70> 'int'
            (BinaryOperator 0xa21b660 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21b618 <col:60> 'int' 1)
              (ParenExpr 0xa21b648 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21b630 <line:59:22> 'int' 9))))
          (IntegerLiteral 0xa21b690 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0xa220988 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa21b948 <col:23, col:77> 'int'
    (ConditionalOperator 0xa21b928 <col:24, col:76> 'int'
      (BinaryOperator 0xa21b790 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21b760 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21b748 <line:60:22> 'int' 10))
        (IntegerLiteral 0xa21b778 <line:45:32> 'int' 8))
      (ParenExpr 0xa21b850 <col:36, col:54> 'int'
        (BinaryOperator 0xa21b838 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21b808 <col:37, col:48> 'int'
            (BinaryOperator 0xa21b7f0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21b7a8 <col:38> 'int' 1)
              (ParenExpr 0xa21b7d8 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21b7c0 <line:60:22> 'int' 10))))
          (IntegerLiteral 0xa21b820 <line:45:53> 'int' 8)))
      (ParenExpr 0xa21b910 <col:58, col:76> 'int'
        (BinaryOperator 0xa21b8f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa21b8c8 <col:59, col:70> 'int'
            (BinaryOperator 0xa21b8b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa21b868 <col:60> 'int' 1)
              (ParenExpr 0xa21b898 <col:65, col:69> 'int'
                (IntegerLiteral 0xa21b880 <line:60:22> 'int' 10))))
          (IntegerLiteral 0xa21b8e0 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0xa220998 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0xa220890 <col:23, col:77> 'int'
    (ConditionalOperator 0xa220870 <col:24, col:76> 'int'
      (BinaryOperator 0xa21b9e0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0xa21b9b0 <col:24, col:28> 'int'
          (IntegerLiteral 0xa21b998 <line:61:22> 'int' 11))
        (IntegerLiteral 0xa21b9c8 <line:45:32> 'int' 8))
      (ParenExpr 0xa220798 <col:36, col:54> 'int'
        (BinaryOperator 0xa220780 <col:37, col:53> 'int' '<<'
          (ParenExpr 0xa21ba58 <col:37, col:48> 'int'
            (BinaryOperator 0xa21ba40 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0xa21b9f8 <col:38> 'int' 1)
              (ParenExpr 0xa21ba28 <col:43, col:47> 'int'
                (IntegerLiteral 0xa21ba10 <line:61:22> 'int' 11))))
          (IntegerLiteral 0xa220768 <line:45:53> 'int' 8)))
      (ParenExpr 0xa220858 <col:58, col:76> 'int'
        (BinaryOperator 0xa220840 <col:59, col:75> 'int' '>>'
          (ParenExpr 0xa220810 <col:59, col:70> 'int'
            (BinaryOperator 0xa2207f8 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0xa2207b0 <col:60> 'int' 1)
              (ParenExpr 0xa2207e0 <col:65, col:69> 'int'
                (IntegerLiteral 0xa2207c8 <line:61:22> 'int' 11))))
          (IntegerLiteral 0xa220828 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa44b1e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa44b1c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa44b138 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa44b1b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa44b1a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa44b190 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa44b168 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa44b150 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa44d668 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d650 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d678 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d6a0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d688 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa44d6c8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d6b0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d6d8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d700 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d6e8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa44d7f0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa44d7e0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d7b0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d790 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44ca20
        (CXXThisExpr 0xa44d728 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d7d0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d778 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bc90 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44d900 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa44d8f0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44d8a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44d888 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44cb50
        (CXXThisExpr 0xa44d808 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d8d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d858 <col:33> 'char_type *' lvalue ParmVar 0xa44bdd0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44d8e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d870 <col:39> 'const char_type *' lvalue ParmVar 0xa44be40 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa44d9e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa44d9d0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d9a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d980 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cc10
        (CXXThisExpr 0xa44d918 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d9c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d968 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bf50 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44daf0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa44dae0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44da98 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44da78 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cd40
        (CXXThisExpr 0xa44d9f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dac0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da48 <col:33> 'char_type *' lvalue ParmVar 0xa44c020 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44dad0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da60 <col:39> 'const char_type *' lvalue ParmVar 0xa44c070 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa44dd88 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa44dc50 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44db68 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44db58 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa44db34 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
          (CXXThisExpr 0xa44db08 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa44dc40 <line:868:4, col:51>
      (ImplicitCastExpr 0xa44dc30 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44dc18 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa44dc08 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44db88 <col:11> 'char [256]' lvalue ->_M_widen 0xa44aef0
              (CXXThisExpr 0xa44db78 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44dbf0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44dbe0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44dbd0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa44dba8 <col:47> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa44dca0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa44dc80 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa44d3b0
      (CXXThisExpr 0xa44dc70 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa44dd78 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa44dd48 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa44dd28 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44ce00
        (CXXThisExpr 0xa44dcc0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dd68 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44dd10 <col:24> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa44e1c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa44dfb0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa44de10 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa44de00 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44ddf0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa44ddb8 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dda8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa44ddd8 <col:21> 'int' 1))
    (CompoundStmt 0xa44df98 <line:895:4, line:898:4>
      (CallExpr 0xa44dee8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44ded8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44de28 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44df20 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44df10 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44de40 <col:23> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa44df40 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44df30 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa44de58 <col:29> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa44df50 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44dec0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44dea0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de70 <col:35> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa44deb0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de88 <col:42> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))))
      (ReturnStmt 0xa44df88 <line:897:6, col:13>
        (ImplicitCastExpr 0xa44df78 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa44df5c <col:13> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa44e088 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa44e020 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44e010 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44e000 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44dfe0 <col:7> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dfd0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44e068 <line:900:4, col:18> 'void'
      (MemberExpr 0xa44e048 <col:4> '<bound member function type>' ->_M_widen_init 0xa44d3b0
        (CXXThisExpr 0xa44e038 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44e1b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa44e160 <col:9, col:40> 'const char *'
      (MemberExpr 0xa44e140 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44cf80
        (CXXThisExpr 0xa44e0a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44e188 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e0f8 <col:24> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa44e198 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e110 <col:30> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa44e1a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44e128 <col:36> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa44e710 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa44e398 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e2b0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44e2a0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e288 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa44e278 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e1f8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e1e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e260 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e250 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e240 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e218 <col:43> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa44e388 <line:926:4, col:52>
      (ImplicitCastExpr 0xa44e378 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e360 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa44e350 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e2d0 <col:11> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e2c0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e338 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e328 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e318 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e2f0 <col:48> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa44e4f0 <line:927:2, col:43>
    0xa44e3c0 "const char __t =
      (CXXMemberCallExpr 0xa44e4a8 <col:19, col:42> 'char'
        (MemberExpr 0xa44e488 <col:19> '<bound member function type>' ->do_narrow 0xa44d0a0
          (CXXThisExpr 0xa44e478 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa44e4d0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa44e448 <col:29> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa44e4e0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e460 <col:34> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char')))")
  (IfStmt 0xa44e6b8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa44e570 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa44e540 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e530 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e500 <col:6> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
      (ImplicitCastExpr 0xa44e560 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e550 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e518 <col:13> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char'))))
    (BinaryOperator 0xa44e6a0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa44e660 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa44e650 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa44e5d0 <col:4> 'char [256]' lvalue ->_M_narrow 0xa44afe0
            (CXXThisExpr 0xa44e5c0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa44e638 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa44e628 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa44e618 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa44e5f0 <col:41> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa44e690 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44e674 <col:49> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa44e700 <line:930:2, col:9>
    (ImplicitCastExpr 0xa44e6f0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa44e6d4 <col:9> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa44ec10 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa44e9c8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e830 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa44e7e8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa44e7d8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e730 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa44e810 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa44e7b0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa44e7a0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa44e790 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa44e758 <col:23> 'char' lvalue ->_M_narrow_ok 0xa44b020
                  (CXXThisExpr 0xa44e748 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa44e778 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa44e820 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa44e7c8 <col:42> '_Bool' true))))
    (CompoundStmt 0xa44e9b0 <line:960:4, line:963:4>
      (CallExpr 0xa44e900 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44e8f0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e83c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44e938 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44e928 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa44e854 <col:23> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))
        (ImplicitCastExpr 0xa44e958 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44e948 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44e86c <col:29> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa44e968 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44e8d8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44e8b8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e884 <col:35> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa44e8c8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e89c <col:42> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa44e9a0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa44e990 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa44e974 <col:13> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa44eaa0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa44ea38 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44ea28 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44ea18 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44e9f8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa44b020
            (CXXThisExpr 0xa44e9e8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44ea80 <line:965:4, col:19> 'void'
      (MemberExpr 0xa44ea60 <col:4> '<bound member function type>' ->_M_narrow_init 0xa44d330
        (CXXThisExpr 0xa44ea50 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44ec00 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa44eb90 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa44eb70 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa44d260
        (CXXThisExpr 0xa44eac0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44ebc0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb10 <col:25> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebd0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb28 <col:31> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebe0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44eb40 <col:37> 'char' lvalue ParmVar 0xa44c610 '__dfault' 'char'))
      (ImplicitCastExpr 0xa44ebf0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa44eb58 <col:47> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa44ec80 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa44ec70 <col:9, col:16>
    (ImplicitCastExpr 0xa44ec60 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa44ec40 <col:16> 'const mask *const' lvalue ->_M_table 0xa44ad90
        (CXXThisExpr 0xa44ec30 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa450df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa450de0 <col:9, col:16>
    (ImplicitCastExpr 0xa450dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa450db4 <col:16> 'char' lvalue ParmVar 0xa44cdb0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa450f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa450ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa450eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa450f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa450ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa450e1c <col:19> 'char_type *' lvalue ParmVar 0xa44cf20 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa450f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa450f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa450e34 <col:27> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa450f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa450ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa450e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e4c <col:33> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa450e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e64 <col:40> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))))
  (ReturnStmt 0xa450f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa450f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa450f3c <col:9> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa450fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa450fb8 <col:9, col:16>
    (ImplicitCastExpr 0xa450fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa450f90 <col:16> 'char_type':'char' lvalue ParmVar 0xa44d000 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa451150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa4510a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa451090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa4510d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa4510c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa450ff4 <col:19> 'char *' lvalue ParmVar 0xa44d200 '__dest' 'char *')))
    (ImplicitCastExpr 0xa4510f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa4510e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa45100c <col:27> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa451108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa451078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa451058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa451024 <col:33> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa451068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa45103c <col:40> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa451140 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa451130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa451114 <col:9> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa4574b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa4574e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa22a268 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0xa22bdb8 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa22d0f0 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0xa22cd40 <line:46:7, col:66>
    0xa22cd10 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa22ce30 <line:47:7, col:62>
    0xa22ce00 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa22cf88 <line:49:7, col:62>
    0xa22ce50 "const streamsize __put =
      (CallExpr 0xa22cf60 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa22cef8 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0xa22ced8 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa22cea0 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa22ce84 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa22c9d0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0xa22cf2c <col:53> 'const _CharT *' lvalue ParmVar 0xa22ca40 '__s' 'const _CharT *')
        (DeclRefExpr 0xa22cf44 <col:58> 'streamsize':'int' lvalue ParmVar 0xa22caa0 '__n' 'streamsize':'int'))")
  (IfStmt 0xa22d0d0 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0xa22cfe8 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0xa22cfc8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa22cf98 <col:11> 'const streamsize':'const int' lvalue Var 0xa22ce50 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa22cfd8 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa22cfb0 <col:20> 'streamsize':'int' lvalue ParmVar 0xa22caa0 '__n' 'streamsize':'int')))
    (CallExpr 0xa22d0b0 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa22d018 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa22d000 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa22c9d0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0xa22d088 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0xa22dbc0 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0xa22d5a0 <line:58:7, col:66>
    0xa22d570 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa22d660 <line:59:7, col:62>
    0xa22d630 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa22d728 <line:61:7, col:38>
    0xa22d680 "const _CharT __c =
      (CallExpr 0xa22d708 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa22d6d0 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0xa22d6b4 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa22d2f0 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0xa22db98 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa22d778 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0xa22d768 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa22d738 <col:14> 'streamsize':'int' lvalue ParmVar 0xa22d330 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa22d750 <col:20> 'int' 0))
    (UnaryOperator 0xa22d7a8 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0xa22d790 <col:25> 'streamsize':'int' lvalue ParmVar 0xa22d330 '__n' 'streamsize':'int'))
    (CompoundStmt 0xa22db80 <line:63:2, line:70:2>
      (DeclStmt 0xa22d968 <line:64:4, col:70>
        0xa22d850 "const typename _Traits::int_type __put =
          (CallExpr 0xa22d948 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa22d8f8 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0xa22d8d8 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa22d8a0 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0xa22d884 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa22d2f0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0xa22d92c <col:66> 'const _CharT' lvalue Var 0xa22d680 '__c' 'const _CharT'))")
      (IfStmt 0xa22db60 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0xa22da48 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa22d9a0 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa22d9c4 <col:29> 'const typename _Traits::int_type' lvalue Var 0xa22d850 '__put' 'const typename _Traits::int_type')
          (CallExpr 0xa22da28 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa22da00 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0xa22db48 <line:66:6, line:69:6>
          (CallExpr 0xa22db20 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa22da88 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa22da6c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa22d2f0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa22daf8 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0xa22db40 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0xa2335a0 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0xa232810 <line:78:7, col:66>
    0xa2327e0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0xa2328d0 <line:79:7, col:62>
    0xa2328a0 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0xa2329d0 <line:81:7, col:52>
    0xa232960 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0xa2329b0 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0xa232994 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0xa233558 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0xa2329e0 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0xa232960 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0xa233538 <line:83:2, line:110:2>
      (IfStmt 0xa233308 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa2329f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa2332e8 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0xa232ab8 <line:86:8, col:44>
            0xa232a10 "const streamsize __w =
              (CallExpr 0xa232a98 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa232a60 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa232a44 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0xa233240 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0xa232b18 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa232af8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa232ac8 <col:12> 'const streamsize':'const int' lvalue Var 0xa232a10 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0xa232b08 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa232ae0 <col:18> 'streamsize':'int' lvalue ParmVar 0xa232520 '__n' 'streamsize':'int')))
            (CompoundStmt 0xa233178 <line:88:3, line:98:3>
              (DeclStmt 0xa232d50 <line:89:5, line:91:32>
                0xa232b40 "const bool __left =
                  (ParenExpr 0xa232d38 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0xa232d10 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0xa232cc8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
                      (ParenExpr 0xa232c68 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0xa232c50 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0xa232bc8 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0xa232b90 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0xa232b74 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0xa232c28 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0xa232ca0 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0xa232e80 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0xa232d88 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa232d78 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa232d60 <col:10> 'const _Bool' lvalue Var 0xa232b40 '__left' 'const _Bool')))
                (CallExpr 0xa232e58 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa232da0 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa22d430)
                  (DeclRefExpr 0xa232dd4 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa232e40 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa232e20 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa232dec <col:29> 'const streamsize':'const int' lvalue Var 0xa232a10 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa232e30 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa232e04 <col:35> 'streamsize':'int' lvalue ParmVar 0xa232520 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0xa232fb8 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0xa232ef0 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa232eb8 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0xa232e9c <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0xa232f90 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa232f10 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa22cbc0)
                  (DeclRefExpr 0xa232f44 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0xa232f5c <col:30> 'const _CharT *' lvalue ParmVar 0xa2324e0 '__s' 'const _CharT *')
                  (DeclRefExpr 0xa232f74 <col:35> 'streamsize':'int' lvalue ParmVar 0xa232520 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0xa233158 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0xa233060 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0xa232fd4 <col:9> 'const _Bool' lvalue Var 0xa232b40 '__left' 'const _Bool')
                  (CallExpr 0xa233040 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa233008 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0xa232fec <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0xa233130 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa233078 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa22d430)
                  (DeclRefExpr 0xa2330ac <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0xa233118 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0xa2330f8 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa2330c4 <col:29> 'const streamsize':'const int' lvalue Var 0xa232a10 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0xa233108 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa2330dc <col:35> 'streamsize':'int' lvalue ParmVar 0xa232520 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0xa233218 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa233198 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0xa22cbc0)
              (DeclRefExpr 0xa2331cc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0xa2331e4 <col:26> 'const _CharT *' lvalue ParmVar 0xa2324e0 '__s' 'const _CharT *')
              (DeclRefExpr 0xa2331fc <col:31> 'streamsize':'int' lvalue ParmVar 0xa232520 '__n' 'streamsize':'int')))
          (CallExpr 0xa2332c8 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa233278 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa23325c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa2332b0 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa233418 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa233328 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa233400 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0xa2333d0 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa233350 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa233338 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa2333a8 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0xa2333f0 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0xa233518 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa233438 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa233500 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0xa2334e0 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa233460 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa233448 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa2334b8 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa233590 <line:111:7, col:14>
    (DeclRefExpr 0xa233574 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa232470 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa235470 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0xa235460 <col:9, col:22>
    (CXXOperatorCallExpr 0xa235438 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa235400 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
      (DeclRefExpr 0xa2353d0 <col:16> 'const _Tp' lvalue ParmVar 0xa235260 '__x' 'const _Tp &')
      (DeclRefExpr 0xa2353e8 <col:22> 'const _Tp' lvalue ParmVar 0xa2352b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa235a50 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0xa235a40 <col:9, col:22>
    (CXXOperatorCallExpr 0xa235a18 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa2359e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa2359b0 <col:16> 'const _Tp' lvalue ParmVar 0xa235860 '__x' 'const _Tp &')
      (DeclRefExpr 0xa2359c8 <col:22> 'const _Tp' lvalue ParmVar 0xa2358b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa235fe8 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0xa235fd8 <col:9, col:22>
    (BinaryOperator 0xa235fc0 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0xa235f90 <col:16> 'const _Tp' lvalue ParmVar 0xa235e40 '__x' 'const _Tp &')
      (DeclRefExpr 0xa235fa8 <col:22> 'const _Tp' lvalue ParmVar 0xa235e90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa236578 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0xa236568 <col:9, col:22>
    (BinaryOperator 0xa236550 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0xa236520 <col:16> 'const _Tp' lvalue ParmVar 0xa2363d0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa236538 <col:22> 'const _Tp' lvalue ParmVar 0xa236420 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa239088 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0xa239078 <col:9, col:22>
    (BinaryOperator 0xa239060 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0xa239030 <col:16> 'const _Tp' lvalue ParmVar 0xa238ee0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa239048 <col:22> 'const _Tp' lvalue ParmVar 0xa238f30 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0xa239620 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0xa239610 <col:9, col:17>
    (CXXOperatorCallExpr 0xa2395f0 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa2395b8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa2395a0 <col:17> 'const _Tp' lvalue ParmVar 0xa239480 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa239c90 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0xa239c80 <col:9, col:23>
    (CXXOperatorCallExpr 0xa239c58 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa239c10 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (DeclRefExpr 0xa239be0 <col:16> 'const _Tp' lvalue ParmVar 0xa239a70 '__x' 'const _Tp &')
      (DeclRefExpr 0xa239bf8 <col:23> 'const _Tp' lvalue ParmVar 0xa239ac0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23a280 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0xa23a270 <col:9, col:23>
    (CXXOperatorCallExpr 0xa23a248 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa23a200 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80)
      (DeclRefExpr 0xa23a1d0 <col:16> 'const _Tp' lvalue ParmVar 0xa23a080 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23a1e8 <col:23> 'const _Tp' lvalue ParmVar 0xa23a0d0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23a868 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0xa23a858 <col:9, col:22>
    (CXXOperatorCallExpr 0xa23a830 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa23a7f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa23a7c0 <col:16> 'const _Tp' lvalue ParmVar 0xa23a670 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23a7d8 <col:22> 'const _Tp' lvalue ParmVar 0xa23a6c0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23d038 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0xa23d028 <col:9, col:22>
    (CXXOperatorCallExpr 0xa23d000 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa23cfc0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (DeclRefExpr 0xa23cf90 <col:16> 'const _Tp' lvalue ParmVar 0xa23ac50 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23cfa8 <col:22> 'const _Tp' lvalue ParmVar 0xa23ce90 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23d618 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0xa23d608 <col:9, col:23>
    (CXXOperatorCallExpr 0xa23d5e0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa23d5a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90)
      (DeclRefExpr 0xa23d570 <col:16> 'const _Tp' lvalue ParmVar 0xa23d420 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23d588 <col:23> 'const _Tp' lvalue ParmVar 0xa23d470 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23dbf8 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0xa23dbe8 <col:9, col:23>
    (CXXOperatorCallExpr 0xa23dbc0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa23db80 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10)
      (DeclRefExpr 0xa23db50 <col:16> 'const _Tp' lvalue ParmVar 0xa23da00 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23db68 <col:23> 'const _Tp' lvalue ParmVar 0xa23da50 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23e188 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0xa23e178 <col:9, col:23>
    (BinaryOperator 0xa23e160 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0xa23e130 <col:16> 'const _Tp' lvalue ParmVar 0xa23dfe0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23e148 <col:23> 'const _Tp' lvalue ParmVar 0xa23e030 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa23e718 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0xa23e708 <col:9, col:23>
    (BinaryOperator 0xa23e6f0 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0xa23e6c0 <col:16> 'const _Tp' lvalue ParmVar 0xa23e570 '__x' 'const _Tp &')
      (DeclRefExpr 0xa23e6d8 <col:23> 'const _Tp' lvalue ParmVar 0xa23e5c0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0xa23ec70 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0xa23ec60 <col:9, col:17>
    (UnaryOperator 0xa23ec48 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa23ec30 <col:17> 'const _Tp' lvalue ParmVar 0xa23eb10 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa2416e8 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0xa2416d8 <col:9, col:22>
    (BinaryOperator 0xa2416c0 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0xa241690 <col:16> 'const _Tp' lvalue ParmVar 0xa241540 '__x' 'const _Tp &')
      (DeclRefExpr 0xa2416a8 <col:22> 'const _Tp' lvalue ParmVar 0xa241590 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa241c78 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0xa241c68 <col:9, col:22>
    (BinaryOperator 0xa241c50 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0xa241c20 <col:16> 'const _Tp' lvalue ParmVar 0xa241ad0 '__x' 'const _Tp &')
      (DeclRefExpr 0xa241c38 <col:22> 'const _Tp' lvalue ParmVar 0xa241b20 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0xa242208 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0xa2421f8 <col:9, col:22>
    (BinaryOperator 0xa2421e0 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0xa2421b0 <col:16> 'const _Tp' lvalue ParmVar 0xa242060 '__x' 'const _Tp &')
      (DeclRefExpr 0xa2421c8 <col:22> 'const _Tp' lvalue ParmVar 0xa2420b0 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0xa2429c4 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0xa242740 '__x' 'const _Predicate &')
) (CompoundStmt 0xa242a20 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0xa242af8 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0xa242ae8 <col:9, col:28>
    (UnaryOperator 0xa242ad0 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa242ab0 <col:17, col:28> '<dependent type>'
        (MemberExpr 0xa242a74 <col:17> 'const _Predicate' lvalue ->_M_pred 0xa2426a0
          (CXXThisExpr 0xa242a48 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0xa242a94 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0xa2428c0 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0xa242e58 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0xa242e48 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0xa242e28 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0xa242e10 <col:39> 'const _Predicate' lvalue ParmVar 0xa242c20 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0xa245648 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0xa245310 '__x' 'const _Predicate &')
) (CompoundStmt 0xa2456a0 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0xa245798 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0xa245788 <col:9, col:33>
    (UnaryOperator 0xa245770 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0xa245748 <col:17, col:33> '<dependent type>'
        (MemberExpr 0xa2456f4 <col:17> 'const _Predicate' lvalue ->_M_pred 0xa245270
          (CXXThisExpr 0xa2456c8 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0xa245714 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0xa245490 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0xa24572c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0xa245540 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0xa245af8 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0xa245ae8 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0xa245ac8 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0xa245ab0 <col:40> 'const _Predicate' lvalue ParmVar 0xa2458c0 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0xa2463e8 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0xa2463f8 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0xa2461c0 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0xa246450 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0xa246510 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0xa246500 <col:9, col:26>
    (CallExpr 0xa2464e0 <col:16, col:26> '<dependent type>'
      (MemberExpr 0xa2464a4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0xa246050
        (CXXThisExpr 0xa246478 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0xa2464c4 <col:23> '_Arg' lvalue ParmVar 0xa2462e0 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0xa246a20 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0xa246a10 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0xa2469f0 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0xa2469d8 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0xa246780 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0xa248548 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0xa248558 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa2482e0 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0xa2485b0 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0xa248690 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0xa248680 <col:9, col:31>
    (CallExpr 0xa248658 <col:16, col:31> '<dependent type>'
      (MemberExpr 0xa248604 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0xa247070
        (CXXThisExpr 0xa2485d8 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0xa248624 <col:23> '_Arg1' lvalue ParmVar 0xa248400 '__x' '_Arg1')
      (DeclRefExpr 0xa24863c <col:28> '_Arg2' lvalue ParmVar 0xa248440 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0xa248ce8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0xa248cd8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0xa248cb8 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0xa248ca0 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0xa2489e0 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0xa249318 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0xa249308 <col:9, col:16>
    (DeclRefExpr 0xa2492f0 <col:16> '_Tp' lvalue ParmVar 0xa249090 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0xa249358 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0xa249348 <col:9, col:16>
    (DeclRefExpr 0xa24932c <col:16> 'const _Tp' lvalue ParmVar 0xa2491d0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0xa249b80 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0xa249b70 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa249b38 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa249b20 <col:16> '_Pair' lvalue ParmVar 0xa249800 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0xa249bf8 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0xa249be8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa249bb0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa249b94 <col:16> 'const _Pair' lvalue ParmVar 0xa2499b0 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0xa1a4cb0 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0xa1a4ca0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa1a4c68 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa1a4c50 <col:16> '_Pair' lvalue ParmVar 0xa24a0a0 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0xa1a4d28 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0xa1a4d18 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0xa1a4ce0 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0xa1a4cc4 <col:16> 'const _Pair' lvalue ParmVar 0xa1a4ae0 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa1a55c0 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa1a52d0 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa1a5620 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0xa1a5718 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0xa1a5708 <col:9, col:29>
    (CallExpr 0xa1a56e8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa1a56d0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa1a56b8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa1a5630 <col:17> '_Tp *' lvalue ParmVar 0xa1a5400 '__p' '_Tp *')
          (MemberExpr 0xa1a5694 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa1a5590
            (CXXThisExpr 0xa1a5668 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa1a5f90 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa1a5ca0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa1a5ff0 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0xa1a60e8 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0xa1a60d8 <col:9, col:29>
    (CallExpr 0xa1a60b8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0xa1a60a0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa1a6088 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa1a6000 <col:17> 'const _Tp *' lvalue ParmVar 0xa1a5dd0 '__p' 'const _Tp *')
          (MemberExpr 0xa1a6064 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa1a5f60
            (CXXThisExpr 0xa1a6038 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0xa1a6920 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa1a6630 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0xa1a6980 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0xa1a6a78 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0xa1a6a68 <col:9, col:28>
    (CallExpr 0xa1a6a48 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa1a6a30 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa1a6a18 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa1a6990 <col:17> '_Tp' lvalue ParmVar 0xa1a6760 '__r' '_Tp &')
          (MemberExpr 0xa1a69f4 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0xa1a68f0
            (CXXThisExpr 0xa1a69c8 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0xa253a40 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa253750 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0xa253aa0 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0xa253b98 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0xa253b88 <col:9, col:28>
    (CallExpr 0xa253b68 <col:16, col:28> '<dependent type>'
      (ParenExpr 0xa253b50 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa253b38 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa253ab0 <col:17> 'const _Tp' lvalue ParmVar 0xa253880 '__r' 'const _Tp &')
          (MemberExpr 0xa253b14 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0xa253a10
            (CXXThisExpr 0xa253ae8 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa2545c0 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa254250 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa254620 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0xa254730 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0xa254720 <col:9, col:32>
    (CallExpr 0xa254700 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa2546d0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa2546b8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa254630 <col:17> '_Tp *' lvalue ParmVar 0xa254380 '__p' '_Tp *')
          (MemberExpr 0xa254694 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa254590
            (CXXThisExpr 0xa254668 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa2546e4 <col:29> '_Arg' lvalue ParmVar 0xa2543c0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa255160 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa254df0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa2551c0 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0xa255838 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0xa255828 <col:9, col:32>
    (CallExpr 0xa255808 <col:16, col:32> '<dependent type>'
      (ParenExpr 0xa255270 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0xa255258 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0xa2551d0 <col:17> 'const _Tp *' lvalue ParmVar 0xa254f20 '__p' 'const _Tp *')
          (MemberExpr 0xa255234 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa255130
            (CXXThisExpr 0xa255208 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa2557f0 <col:29> '_Arg' lvalue ParmVar 0xa254f60 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0xa256200 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa255e90 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0xa256260 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0xa256370 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0xa256360 <col:9, col:31>
    (CallExpr 0xa256340 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa256310 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa2562f8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa256270 <col:17> '_Tp' lvalue ParmVar 0xa255fc0 '__r' '_Tp &')
          (MemberExpr 0xa2562d4 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0xa2561d0
            (CXXThisExpr 0xa2562a8 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa256324 <col:28> '_Arg' lvalue ParmVar 0xa256000 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0xa256ce0 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa256970 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0xa256d40 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0xa256e50 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0xa256e40 <col:9, col:31>
    (CallExpr 0xa256e20 <col:16, col:31> '<dependent type>'
      (ParenExpr 0xa256df0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0xa256dd8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0xa256d50 <col:17> 'const _Tp' lvalue ParmVar 0xa256aa0 '__r' 'const _Tp &')
          (MemberExpr 0xa256db4 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0xa256cb0
            (CXXThisExpr 0xa256d88 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0xa256e04 <col:28> '_Arg' lvalue ParmVar 0xa256ae0 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0xa257350 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0xa257340 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0xa257320 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa257308 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa2570b0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa258c88 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0xa258c78 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0xa258c58 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0xa258c40 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa2575b0 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0xa259180 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0xa259170 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0xa259150 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa259138 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0xa258ee0 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0xa259680 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0xa259670 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0xa259650 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0xa259638 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0xa2593e0 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa259cc8 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0xa259cb8 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0xa259c98 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa259c80 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa2599c0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa25a308 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0xa25a2f8 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0xa25a2d8 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa25a2c0 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa25a000 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0xa25a948 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0xa25a938 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0xa25a918 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa25a900 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0xa25a640 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0xa25b9d8 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0xa25b9c8 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0xa25b9a8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0xa25b990 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0xa25b6d0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0xa25c5b4 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0xa25c0b0 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa25c608 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa25c140 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0xa25c660 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa25c758 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0xa25c748 <col:9, col:29>
    (CallExpr 0xa25c720 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa25c6b4 <col:16> 'const _Operation' lvalue ->op 0xa25bf80
        (CXXThisExpr 0xa25c688 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa25c6e8 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa25c010
        (CXXThisExpr 0xa25c6d8 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa25c708 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa25c2e0 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0xa25c820 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0xa25c810 <col:9, col:29>
    (CallExpr 0xa25c7e8 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa25c780 <col:16> 'const _Operation' lvalue ->op 0xa25bf80
        (CXXThisExpr 0xa25c770 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0xa25c7b0 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0xa25c010
        (CXXThisExpr 0xa25c7a0 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0xa25c7d0 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0xa25c4a0 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa25cd70 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0xa25cc10 <line:129:7, col:66>
    0xa25cbe0 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0xa25cd60 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0xa25cd40 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0xa25ccd0 <col:36> 'const _Operation' lvalue ParmVar 0xa25c9b0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa25cd20 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0xa25cd08 <col:53> 'const _Tp' lvalue ParmVar 0xa25ca20 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0xa2615e4 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0xa25d380 '__x' 'const _Operation &')
), value((DeclRefExpr 0xa261638 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0xa25d410 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0xa261690 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa261788 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0xa261778 <col:9, col:29>
    (CallExpr 0xa261750 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa2616e4 <col:16> 'const _Operation' lvalue ->op 0xa25d250
        (CXXThisExpr 0xa2616b8 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa261704 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0xa25d5b0 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0xa261730 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa25d2e0
        (CXXThisExpr 0xa261720 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0xa261850 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0xa261840 <col:9, col:29>
    (CallExpr 0xa261818 <col:16, col:29> '<dependent type>'
      (MemberExpr 0xa2617b0 <col:16> 'const _Operation' lvalue ->op 0xa25d250
        (CXXThisExpr 0xa2617a0 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0xa2617d0 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0xa2614d0 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0xa2617f8 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0xa25d2e0
        (CXXThisExpr 0xa2617e8 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0xa261da0 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0xa261c40 <line:164:7, col:67>
    0xa261c10 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0xa261d90 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0xa261d70 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0xa261d00 <col:36> 'const _Operation' lvalue ParmVar 0xa2619e0 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0xa261d50 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0xa261d38 <col:53> 'const _Tp' lvalue ParmVar 0xa261a50 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0xa2755d0 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0xa275630 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0xa275690 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0xa2756f0 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0xa275750 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0xa2757b0 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0xa275810 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0xa275870 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0xa2758d0 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0xa275930 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0xa275990 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0xa281428 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa281294 <col:26> 'int' EnumConstant 0xa2811a0 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0xa281438 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2812e4 <col:29> 'int' EnumConstant 0xa2811e0 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0xa281448 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa281334 <col:30> 'int' EnumConstant 0xa281220 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0xa281458 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa281384 <col:27> 'int' EnumConstant 0xa2812b0 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0xa281468 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2813d4 <col:29> 'int' EnumConstant 0xa2811a0 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0xa2815f8 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa281514 <col:30> 'int' EnumConstant 0xa2814e0 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0xa281608 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2815a4 <col:29> 'int' EnumConstant 0xa281570 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0xa2818a8 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa281854 <col:31> 'int' EnumConstant 0xa2817a0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
extern "C" {
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0xa1258b8 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa2ab424 <col:26> 'int' EnumConstant 0xa2ab3f0 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0xa1258c8 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa125528 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0xa1254f4 <line:468:33> 'int' EnumConstant 0xa125140 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0xa125510 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0xa2c3c78 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa125ab8 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0xa2c3c88 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa125cc8 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0xa1d8748 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0xa1d86b0 <line:242:3, line:251:13>
    0xa1d85f0 "static void *const __gthread_active_ptr =
      (UnaryOperator 0xa1d8698 <line:243:7, <scratch space>:98:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0xa1d8680 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:98:1> 'void *' <BitCast>
          (UnaryOperator 0xa1d8658 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:98:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0xa1d8624 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0xa2d37f0 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0xa1d8738 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0xa1d8728 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0xa1d8710 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0xa1d86f0 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa1d86c0 <col:10> 'void *const' lvalue Var 0xa1d85f0 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0xa1d8700 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0xa1d86d8 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0xa1d8b48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0xa1d8b38 <line:663:3, col:68>
    (CallExpr 0xa1d8ac8 <<scratch space>:99:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0xa1d8ab8 <<scratch space>:99:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d8a5c <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0xa2d2e80 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0xa1d8af8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0xa1d8a04 <col:36> '__gthread_t *' lvalue ParmVar 0xa1d87a0 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0xa1d8b08 </usr/include/clang/3.0/include/stddef.h:47:14> 'const pthread_attr_t *' <NullToPointer>
        (GNUNullExpr 0xa1d8a20 <col:14> 'int'))
      (ImplicitCastExpr 0xa1d8b18 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa1d8a2c <col:54> 'void *(*)(void *)' lvalue ParmVar 0xa1d8850 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0xa1d8b28 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0xa1d8a44 <col:62> 'void *' lvalue ParmVar 0xa1d88a0 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0xa1d8dd0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0xa1d8dc0 <line:669:3, col:57>
    (CallExpr 0xa1d8d78 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0xa1d8d68 <<scratch space>:100:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d8d0c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0xa2d3120 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0xa1d8da0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1d8cdc <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0xa1d8b70 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa1d8db0 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0xa1d8cf4 <col:46> 'void **' lvalue ParmVar 0xa1d8bc0 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0xa1d8fa8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0xa1d8f98 <line:675:3, col:46>
    (CallExpr 0xa1d8f68 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0xa1d8f58 <<scratch space>:101:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d8f24 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0xa2d3660 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0xa1d8f88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1d8f0c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0xa1d8df0 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0xa1d9220 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0xa1d9210 <line:681:3, col:45>
    (CallExpr 0xa1d91c8 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0xa1d91b8 <<scratch space>:102:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d915c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0xa2d3350 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0xa1d91f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1d912c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0xa1d8fd0 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0xa1d9200 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa1d9144 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0xa1d9010 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0xa1d93d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0xa1d93c8 <line:687:3, col:34>
    (CallExpr 0xa1d93a8 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0xa1d9398 <<scratch space>:103:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d9344 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0xa2d3520 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0xa1d9558 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0xa1d9548 <line:693:3, col:33>
    (CallExpr 0xa1d9528 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0xa1d9518 <<scratch space>:104:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d94e4 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0xa2d39c0 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0xa1d9950 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0xa1d9930 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1d97b8 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1d9798 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1d9788 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1d976c <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1d98e0 <line:700:5, col:50>
      (CallExpr 0xa1d9898 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0xa1d9888 <<scratch space>:105:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1d982c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0xa2d28a0 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0xa1d98c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0xa1d97fc <col:36> '__gthread_once_t *' lvalue ParmVar 0xa1d95b0 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0xa1d98d0 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0xa1d9814 <col:44> 'void (*)(void)' lvalue ParmVar 0xa1d9650 '__func' 'void (*)(void)'))))
    (ReturnStmt 0xa1d9920 <line:702:5, col:13>
      (UnaryOperator 0xa1d9908 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0xa1d98f0 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0xa1d9c70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0xa1d9c60 <line:708:3, col:53>
    (CallExpr 0xa1d9c18 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0xa1d9c08 <<scratch space>:106:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d9bac <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0xa2d5010 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0xa1d9c40 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0xa1d9b7c <col:40> '__gthread_key_t *' lvalue ParmVar 0xa1d99b0 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0xa1d9c50 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0xa1d9b94 <col:47> 'void (*)(void *)' lvalue ParmVar 0xa1d9a60 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0xa1d9e48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0xa1d9e38 <line:714:3, col:45>
    (CallExpr 0xa1d9e08 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0xa1d9df8 <<scratch space>:107:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d9dc4 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0xa2d5210 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa1d9e28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1d9dac <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa1d9c90 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0xa1da068 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0xa1da058 <line:720:3, col:46>
    (CallExpr 0xa1da028 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0xa1da018 <<scratch space>:108:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1d9fdc <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0xa2d2ab0 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0xa1da048 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1d9fc4 <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa1d9e70 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0xa1da2f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0xa1da2e0 <line:726:3, col:53>
    (CallExpr 0xa1da298 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0xa1da288 <<scratch space>:109:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1da22c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0xa2d2c50 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0xa1da2c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa1da1fc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0xa1da090 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0xa1da2d0 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0xa1da214 <col:48> 'const void *' lvalue ParmVar 0xa1da0e0 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0xa1da600 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0xa1da5e0 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1da4b8 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1da498 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1da488 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1da46c <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1da5a8 <line:733:5, col:52>
      (CallExpr 0xa1da578 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0xa1da568 <<scratch space>:110:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1da514 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa2d44c0 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa1da598 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa1da4fc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa1da350 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa1da5d0 <line:735:5, col:12>
      (IntegerLiteral 0xa1da5b8 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa1da8a0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0xa1da880 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1da778 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1da758 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1da748 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1da72c <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1da848 <line:742:5, col:49>
      (CallExpr 0xa1da818 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0xa1da808 <<scratch space>:111:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1da7d4 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa2d3b40 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa1da838 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa1da7bc <col:42> '__gthread_mutex_t *' lvalue ParmVar 0xa1da630 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa1da870 <line:744:5, col:12>
      (IntegerLiteral 0xa1da858 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa1dab40 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0xa1dab20 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1daa18 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1da9f8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1da9e8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1da9cc <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1daae8 <line:751:5, col:52>
      (CallExpr 0xa1daab8 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0xa1daaa8 <<scratch space>:112:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1daa74 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa2d3d30 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa1daad8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa1daa5c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0xa1da8d0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa1dab10 <line:753:5, col:12>
      (IntegerLiteral 0xa1daaf8 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa1daed8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0xa1daeb8 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1dad58 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1dad38 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1dad28 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1dad0c <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1dae80 <line:763:5, col:69>
      (CallExpr 0xa1dae38 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0xa1dae28 <<scratch space>:113:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1dadcc <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0xa2d3f00 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0xa1dae60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa1dad9c <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa1dab70 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0xa1dae70 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0xa1dadb4 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0xa1dabf0 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0xa1daea8 <line:765:5, col:12>
      (IntegerLiteral 0xa1dae90 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0xa1db170 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0xa1db150 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1db048 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1db028 <col:7, col:27> 'int'
        (ImplicitCastExpr 0xa1db018 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1daffc <col:7> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1db118 <line:774:5, col:51>
      (CallExpr 0xa1db0e8 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0xa1db0d8 <<scratch space>:114:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1db0a4 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0xa2d4130 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0xa1db108 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0xa1db08c <col:44> '__gthread_mutex_t *' lvalue ParmVar 0xa1daf00 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0xa1db140 <line:776:5, col:12>
      (IntegerLiteral 0xa1db128 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa1db388 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0xa1db378 <line:805:3, col:39>
    (CallExpr 0xa1db348 <col:10, col:39> 'int'
      (ImplicitCastExpr 0xa1db338 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1db304 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa1da690 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa1db368 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1db2ec <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1db1d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa1db530 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0xa1db520 <line:811:3, col:42>
    (CallExpr 0xa1db4f0 <col:10, col:42> 'int'
      (ImplicitCastExpr 0xa1db4e0 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1db4c4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa1da930 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa1db510 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1db4ac <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1db3b0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa1db7a0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0xa1db790 <line:820:3, col:59>
    (CallExpr 0xa1db748 <col:10, col:59> 'int'
      (ImplicitCastExpr 0xa1db738 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1db6fc <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa1dac70 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa1db770 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1db6cc <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1db560 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa1db780 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa1db6e4 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0xa1db5b0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa1db950 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0xa1db940 <line:828:3, col:41>
    (CallExpr 0xa1db910 <col:10, col:41> 'int'
      (ImplicitCastExpr 0xa1db900 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1db8e4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0xa1daf60 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa1db930 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1db8cc <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1db7d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0xa1dbb88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0xa1dbb78 <line:834:3, col:50>
    (CallExpr 0xa1dbb48 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0xa1dbb38 <<scratch space>:115:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1dbae4 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0xa2d46b0 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa1dbb68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dbacc <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa1db9b0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0xa1dbd48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0xa1dbd38 <line:840:3, col:47>
    (CallExpr 0xa1dbd08 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0xa1dbcf8 <<scratch space>:116:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1dbcc4 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0xa2d4850 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa1dbd28 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dbcac <col:41> '__gthread_cond_t *' lvalue ParmVar 0xa1dbbb0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0xa1dd850 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0xa1dd840 <line:846:3, col:54>
    (CallExpr 0xa1dd7f8 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0xa1dbf68 <<scratch space>:117:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1dbf0c <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0xa2d4a30 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0xa1dd820 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dbedc <col:39> '__gthread_cond_t *' lvalue ParmVar 0xa1dbd70 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa1dd830 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dbef4 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0xa1dbdc0 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa1ddb70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0xa1ddb60 <line:853:3, col:74>
    (CallExpr 0xa1ddb08 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0xa1ddaf8 <<scratch space>:118:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1dda9c <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0xa2d4c20 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0xa1ddb30 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dda54 <col:44> '__gthread_cond_t *' lvalue ParmVar 0xa1dd880 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa1ddb40 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dda6c <col:52> '__gthread_mutex_t *' lvalue ParmVar 0xa1dd8d0 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0xa1ddb50 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa1dda84 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0xa1dd920 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0xa1ddde0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0xa1dddd0 <line:860:3, col:46>
    (CallExpr 0xa1ddd88 <col:10, col:46> 'int'
      (ImplicitCastExpr 0xa1ddd78 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1ddd3c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0xa1dbe40 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0xa1dddb0 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1ddd0c <col:31> '__gthread_cond_t *' lvalue ParmVar 0xa1ddba0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa1dddc0 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1ddd24 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1ddbf0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0xa1de0e0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0xa1de0d0 <line:868:3, col:66>
    (CallExpr 0xa1de078 <col:10, col:66> 'int'
      (ImplicitCastExpr 0xa1de068 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1de02c <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0xa1dd9b0 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0xa1de0a0 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1ddfe4 <col:36> '__gthread_cond_t *' lvalue ParmVar 0xa1dde10 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0xa1de0b0 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0xa1ddffc <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0xa1dde60 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0xa1de0c0 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0xa1de014 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0xa1ddeb0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0xa1de2a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0xa1de298 <line:874:3, col:48>
    (CallExpr 0xa1de268 <<scratch space>:119:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0xa1de258 <<scratch space>:119:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1de224 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0xa2d4e70 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0xa1de288 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0xa1de20c <col:42> '__gthread_cond_t *' lvalue ParmVar 0xa1de110 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa1de808 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0xa1de7f8 <col:5, col:45>
    (CallExpr 0xa1de628 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0xa1de7e8 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1de7b4 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0xa1de690 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0xa1de650 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa1de5c4 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0xa1de3f0 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0xa1de7a8 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0xa1de5dc <col:40> 'int' lvalue ParmVar 0xa1de440 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0xa1deb80 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0xa1de9e0 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0xa1deb70 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa1deb54 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0xa1dea30 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0xa1dea08 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0xa1de9a0 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0xa1de830 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0xa1deb48 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1de9b8 <col:33> 'int' lvalue ParmVar 0xa1de880 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa1dee68 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0xa1ded98 <line:66:5, col:35>
    0xa1ded10 "_Atomic_word __result =
      (ImplicitCastExpr 0xa1ded88 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0xa1ded70 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0xa1ded60 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa1ded44 <col:30> '_Atomic_word *' lvalue ParmVar 0xa1debd0 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0xa1dee10 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa1dedd0 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa1dedc0 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa1deda8 <col:6> '_Atomic_word *' lvalue ParmVar 0xa1debd0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa1dee00 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1dede4 <col:15> 'int' lvalue ParmVar 0xa1dec20 '__val' 'int')))
  (ReturnStmt 0xa1dee58 <line:68:5, col:12>
    (ImplicitCastExpr 0xa1dee48 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0xa1dee30 <col:12> '_Atomic_word':'int' lvalue Var 0xa1ded10 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0xa1df080 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0xa1df060 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0xa1df020 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0xa1df010 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa1deff8 <col:6> '_Atomic_word *' lvalue ParmVar 0xa1deea0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0xa1df050 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa1df034 <col:15> 'int' lvalue ParmVar 0xa1deef0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa1df510 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0xa1df4f0 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1df288 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1df268 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa1df258 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1df23c <col:9> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0xa1df3c0 <line:81:7, col:45>
      (CallExpr 0xa1df368 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa1df358 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1df2fc <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0xa1de4c0 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0xa1df3a0 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0xa1df390 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0xa1df2cc <col:33> '_Atomic_word *' lvalue ParmVar 0xa1df0b0 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0xa1df3b0 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1df2e4 <col:40> 'int' lvalue ParmVar 0xa1df100 '__val' 'int'))))
    (ReturnStmt 0xa1df4e0 <line:83:7, col:52>
      (CallExpr 0xa1df498 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa1df488 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1df434 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1deca0 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0xa1df4c0 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa1df404 <col:40> '_Atomic_word *' lvalue ParmVar 0xa1df0b0 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0xa1df4d0 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0xa1df41c <col:47> 'int' lvalue ParmVar 0xa1df100 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0xa2e6ef0 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0xa2e6ed0 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0xa1df718 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa1df6f8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0xa1df6e8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa1df6cc <col:9> 'int (void)' lvalue Function 0xa1d8580 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0xa2e6d68 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0xa2e6d58 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa1df78c <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0xa1de920 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0xa2e6da0 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0xa2e6d90 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0xa1df75c <col:20> '_Atomic_word *' lvalue ParmVar 0xa1df540 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0xa2e6db0 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0xa1df774 <col:27> 'int' lvalue ParmVar 0xa1df590 '__val' 'int')))
    (CallExpr 0xa2e6e88 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0xa2e6e78 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa2e6e24 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0xa1def90 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0xa2e6eb0 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0xa2e6df4 <col:27> '_Atomic_word *' lvalue ParmVar 0xa1df540 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0xa2e6ec0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0xa2e6e0c <col:34> 'int' lvalue ParmVar 0xa1df590 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa363058 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa363048 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa662110 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa662100 <col:9, col:29>
    (ImplicitCastExpr 0xa6620f0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa6620d0 <col:17, col:29> 'char *' lvalue ._M_p 0xa3635e0
        (MemberExpr 0xa6620b0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa363610
          (CXXThisExpr 0xa661f90 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa661f78 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa661f68 <col:9, col:59>
    (UnaryOperator 0xa661f50 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa661f38 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa661f20 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa661f08 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa661ef0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa661ed0 <col:44, col:52> 'char *'
                (MemberExpr 0xa661eb0 <col:44> '<bound member function type>' ->_M_data 0xa363690
                  (CXXThisExpr 0xa661ea0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa6618c8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa6618b8 <col:9, col:26>
    (ImplicitCastExpr 0xa6618a8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa661888 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa383590
        (ImplicitCastExpr 0xa661878 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa661840 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa661820 <col:16> '<bound member function type>' ->_M_rep 0xa363960
              (CXXThisExpr 0xa6616f8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa6616e0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa6616d0 <col:9, col:32>
    (BinaryOperator 0xa6616b8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa661688 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa661668 <col:16, col:22> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa661658 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa6616a8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa6627b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662238 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa6621e0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa6621d0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662164 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa6621b0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662190 <col:13, col:19> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa662180 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa662208 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa6621f8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662228 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6627a0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa662790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa662778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa662730 <col:9, col:17> 'char *'
          (MemberExpr 0xa662710 <col:9> '<bound member function type>' ->_M_data 0xa363690
            (CXXThisExpr 0xa662700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa662768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66274c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa661118 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa660f78 <line:180:4, col:62>
    0xa660da0 "void *__p =
      (CXXReinterpretCastExpr 0xa660f60 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa660f48 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa660ef0 <col:41> 'size_type []' lvalue Var 0xa3ab430 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa661108 <line:181:4, col:39>
    (UnaryOperator 0xa6610f0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa6610d8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa6610c8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa6610ac <col:36> 'void *' lvalue Var 0xa660da0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0xa664da0 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa664d90 <col:11, col:38>
    (BinaryOperator 0xa664d78 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0xa664d68 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0xa664d48 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0xa3aac00
          (ImplicitCastExpr 0xa664d38 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa664d28 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0xa30a9c0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0xa665620 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa665608 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0xa6655e8 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
      (ImplicitCastExpr 0xa6655d8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0xa6655c8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0xa30ab58 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa6655b0 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa665590 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa664ff0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa664fa8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa664f98 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30acf0 <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa664fd0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa664f80 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa664e00 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa664f68 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa664f48 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa664f38 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa664f20 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa664fe0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30add8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa665570 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0xa665030 <line:207:8, col:30> 'void'
        (MemberExpr 0xa665010 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0xa3ab770
          (CXXThisExpr 0xa665000 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0xa6650b8 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0xa665070 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
          (ImplicitCastExpr 0xa665060 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa665050 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0xa6650a8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa665090 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
      (CallExpr 0xa665548 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0xa665538 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa665518 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0xa6653d8 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0xa665390 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0xa665370 <col:28, col:34> '<bound member function type>' ->_M_refdata 0xa3aba10
              (CXXThisExpr 0xa665360 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0xa6653c8 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa6653ac <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0xa665500 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0xa3ab2a0 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0xa6656d0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa6656c0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa6656a8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa665690 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa665680 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa30b0b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa660d88 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa660d68 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa660a90 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa660a48 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa660a38 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30b3ac <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa660a70 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa660a20 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa660880 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa660a08 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa6609e8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa6609d8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6609a0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa660a80 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30d4e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa660d50 <line:236:6, line:245:6>
      (NullStmt 0xa30d520 <line:238:67>)
      (IfStmt 0xa660d30 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa660b88 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa660b60 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa660b50 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa30d550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa660b38 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa660b18 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
                (ImplicitCastExpr 0xa660b08 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa660ae0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa30d5e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa30d5d0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa30d628 <col:16> 'int' 0))
        (CompoundStmt 0xa660d18 <line:241:3, line:244:3>
          (NullStmt 0xa30d6a8 <line:242:63>)
          (CXXMemberCallExpr 0xa660cf8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa660cc0 <col:5> '<bound member function type>' ->_M_destroy 0xa3ac270
              (CXXThisExpr 0xa660ba0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa660ce0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa3ac150 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa65ffe0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa388608 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa3885f8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa660820 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa660810 <col:9, col:29>
    (ImplicitCastExpr 0xa660800 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa6607e0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa388b90
        (MemberExpr 0xa6607c0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
          (CXXThisExpr 0xa6606a0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa660688 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa660678 <col:9, col:59>
    (UnaryOperator 0xa660660 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa660648 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa660630 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa660618 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa660600 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa6605e0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa6605c0 <col:44> '<bound member function type>' ->_M_data 0xa388c40
                  (CXXThisExpr 0xa6605b0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa65ff30 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa65ff10 <col:9, col:51> 'void'
    (CXXTemporary 0xa65fe90)
    (CXXMemberCallExpr 0xa65fea8 <col:9, col:51> 'void'
      (MemberExpr 0xa65fe0c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa3ac1a0
        (CXXMemberCallExpr 0xa65fde0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa65fdc0 <col:9> '<bound member function type>' ->_M_rep 0xa388f30
            (ImplicitCastExpr 0xa65fe00 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa65fca0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa65ff00 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa65fef0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa65fe98 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa65fe90)
            (CXXMemberCallExpr 0xa65fe60 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa65fe40 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa3a09e0
                (ImplicitCastExpr 0xa65fe80 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa65fe30 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa662a60 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa662a50 <col:9, col:26>
    (ImplicitCastExpr 0xa662a40 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa662a20 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
        (ImplicitCastExpr 0xa662a10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa6629f0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa6629d0 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa6628b0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0xa664cd0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa664cc0 <col:9, col:26>
    (ImplicitCastExpr 0xa664cb0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa664c90 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0xa3aabd0
        (ImplicitCastExpr 0xa664c80 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa664c60 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa664c40 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa664b18 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa662898 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa662888 <col:9, col:32>
    (BinaryOperator 0xa662870 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa662840 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa662820 <col:16, col:22> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662810 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa662860 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa663100 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662b88 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa662b30 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa662b20 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662ab4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa662b00 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662ae0 <col:13, col:19> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662ad0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa662b58 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa662b48 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662b78 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6630f0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa6630e0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa6630c8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa663080 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa663060 <col:9> '<bound member function type>' ->_M_data 0xa388c40
            (CXXThisExpr 0xa663050 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa6630b8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66309c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0xa663a70 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa3161e8 <line:998:32>)
  (ReturnStmt 0xa663a60 <line:999:2, col:51>
    (CXXMemberCallExpr 0xa663a28 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa663a04 <col:9, col:15> '<bound member function type>' ->append 0xa392a80
        (CXXThisExpr 0xa663648 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa663a50 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6636a8 <col:22> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))
      (CallExpr 0xa663998 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa663988 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa66392c <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa1e89b0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa6639b8 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa66394c <col:47> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0xa664af8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa663ca8 <line:1044:2, col:42>
    0xa663bb0 "const size_type __len =
      (BinaryOperator 0xa663c90 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0xa663c80 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3164e8 <col:26> 'int' 1))
        (CXXMemberCallExpr 0xa663c50 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0xa663c30 <col:30, col:36> '<bound member function type>' ->size 0xa38fe30
            (ImplicitCastExpr 0xa663c70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663c20 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0xa664038 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa663f78 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0xa663d80 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0xa663d70 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa663cf4 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0xa663d40 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0xa663d20 <col:14, col:20> '<bound member function type>' ->capacity 0xa390790
            (ImplicitCastExpr 0xa663d60 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663d10 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0xa663f30 <col:34, col:57> '_Bool'
        (MemberExpr 0xa663f0c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0xa3ab690
          (ImplicitCastExpr 0xa663f68 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0xa663ee0 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0xa663ec0 <col:34> '<bound member function type>' ->_M_rep 0xa388f30
                (ImplicitCastExpr 0xa663f00 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa663d98 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0xa664008 <line:1046:4, col:23> 'void'
      (MemberExpr 0xa663fd0 <col:4, col:10> '<bound member function type>' ->reserve 0xa390970
        (CXXThisExpr 0xa663fc0 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa664028 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa663ff0 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0xa6648e8 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0xa6648d8 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa66487c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0xa664850 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0xa6647c0 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0xa6647a0 <col:22> '<bound member function type>' ->_M_data 0xa388c40
          (ImplicitCastExpr 0xa6647e0 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664790 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0xa664820 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0xa664800 <col:32, col:38> '<bound member function type>' ->size 0xa38fe30
          (ImplicitCastExpr 0xa664840 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa6647f0 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664910 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0xa664864 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0xa393380 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0xa664ac8 <line:1048:2, col:44> 'void'
    (MemberExpr 0xa664a8c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0xa3ab950
      (CXXMemberCallExpr 0xa664a60 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0xa664a40 <col:2> '<bound member function type>' ->_M_rep 0xa388f30
          (ImplicitCastExpr 0xa664a80 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664920 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664ae8 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa664aac <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa663630 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa663620 <col:9, col:24>
    (ImplicitCastExpr 0xa663610 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa6635f0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa6635d0 <col:16> '<bound member function type>' ->_M_data 0xa388c40
          (CXXThisExpr 0xa6635c0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa6612f0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa6612e0 <col:9, col:16>
    (CXXConstructExpr 0xa6612b8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa6612a8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa661298 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa661250 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
            (CXXThisExpr 0xa661130 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa30a858 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa30a7e0 <line:180:4, col:62>
    0xa30a750 "void *__p =
      (CXXReinterpretCastExpr 0xa30a7c8 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0xa30a7a0 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0xa30a784 <col:41> 'size_type []' lvalue Var 0xa2e8660 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa30a848 <line:181:4, col:39>
    (UnaryOperator 0xa30a830 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0xa30a818 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0xa30a7f0 <col:36> 'void *' lvalue Var 0xa30a750 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0xa30a960 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0xa30a950 <col:11, col:38>
    (CXXOperatorCallExpr 0xa30a928 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa30a8e8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (CXXDependentScopeMemberExpr 0xa30a898 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa30a888 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa30a8d0 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0xa30aa50 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa30aa40 <col:11, col:38>
    (CXXOperatorCallExpr 0xa30aa18 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa30a9d8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (CXXDependentScopeMemberExpr 0xa30a988 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa30a978 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0xa30a9c0 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0xa30aaf8 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0xa30aae0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa30aa78 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa30aa68 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0xa30aac8 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0xa30aab0 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0xa30ab88 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa30ab70 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa30ab20 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa30ab10 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0xa30ab58 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa30b088 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa30b068 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0xa30ade8 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa30acf0 <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa30adb0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa30ad68 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80)
        (CXXThisExpr 0xa30ad08 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa30ad50 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa30ad30 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa30ad18 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2e86f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa30add8 <col:50> '_Bool' false))
    (CompoundStmt 0xa30b048 <line:206:6, line:212:6>
      (CallExpr 0xa30ae58 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30ae20 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa30ae10 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0xa30aed8 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa30ae88 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0xa30ae78 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa30aebc <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2e8970 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa30b020 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30af38 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0xa30aff0 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0xa30afb8 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30af80 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0xa30af70 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0xa30afd4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2e8970 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa30b004 <col:53> 'const _CharT' lvalue Var 0xa2e85d0 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0xa30b160 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa30b150 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa30b138 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0xa30b100 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa30b0c8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CXXThisExpr 0xa30b0a0 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0xa30b0b0 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0xa30b398 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0xa30b388 <line:222:4, line:223:46>
    (ConditionalOperator 0xa30b368 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0xa30b298 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0xa30b280 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0xa30b1c8 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0xa30b1a8 <col:13, col:26> '<dependent type>'
              (MemberExpr 0xa30b188 <col:13> '<bound member function type>' ->_M_is_leaked 0xa2e8780
                (CXXThisExpr 0xa30b178 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0xa30b258 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0xa30b210 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
            (DeclRefExpr 0xa30b1dc <col:31> 'const _Alloc' lvalue ParmVar 0xa2e8b80 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0xa30b1f4 <col:43> 'const _Alloc' lvalue ParmVar 0xa2e8bd0 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0xa30b2e0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0xa30b2c0 <col:14> '<bound member function type>' ->_M_refcopy 0xa2ec4b0
          (CXXThisExpr 0xa30b2b0 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0xa30b348 <col:29, col:46> '<dependent type>'
        (MemberExpr 0xa30b310 <col:29> '<bound member function type>' ->_M_clone 0xa2ec600
          (CXXThisExpr 0xa30b300 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa30b330 <col:38> 'const _Alloc' lvalue ParmVar 0xa2e8b80 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0xa30d790 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa30d770 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0xa30d4f8 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa30b3ac <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa30d4c0 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa30b428 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80)
        (CXXThisExpr 0xa30b3c8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa30b410 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa30b3f0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa30b3d8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2e86f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa30d4e8 <col:50> '_Bool' false))
    (CompoundStmt 0xa30d758 <line:236:6, line:245:6>
      (NullStmt 0xa30d520 <line:238:67>)
      (IfStmt 0xa30d738 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa30d680 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0xa30d640 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10)
          (CallExpr 0xa30d600 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0xa30d550 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0xa30d5b8 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0xa30d580 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0xa30d570 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0xa30d5e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa30d5d0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa30d628 <col:16> 'int' 0))
        (CompoundStmt 0xa30d720 <line:241:3, line:244:3>
          (NullStmt 0xa30d6a8 <line:242:63>)
          (CallExpr 0xa30d700 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0xa30d6c8 <col:5> '<bound member function type>' ->_M_destroy 0xa2ec430
              (CXXThisExpr 0xa30d6b8 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0xa30d6e8 <col:16> 'const _Alloc' lvalue ParmVar 0xa2ec290 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0xa30da28 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0xa30d9a8 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0xa30d8a0 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0xa30d7a4 <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa30d868 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa30d820 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80)
        (CXXThisExpr 0xa30d7c0 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0xa30d808 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0xa30d7e8 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0xa30d7d0 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2e86f0 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0xa30d890 <col:50> '_Bool' false))
    (CallExpr 0xa30d980 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0xa30d8e8 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0xa1df5f0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0xa30d950 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0xa30d918 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa30d908 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0xa30d968 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0xa30da18 <line:258:4, col:22>
    (CallExpr 0xa30d9f8 <col:11, col:22> '<dependent type>'
      (MemberExpr 0xa30d9d8 <col:11> '<bound member function type>' ->_M_refdata 0xa2e8af0
        (CXXThisExpr 0xa30d9c8 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0xa30a440 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0xa30da40 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0xa2ec830 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0xa30da98 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0xa2ec7e0 '__dat' '_CharT *')
) (CompoundStmt 0xa30daf0 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa2eca50 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0xa2eca18 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0xa30dbb0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa30dba0 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0xa30db68 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0xa30db44 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa2ecac0
        (CXXThisExpr 0xa30db18 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0xa30dc88 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0xa30dc78 <col:9, col:39>
    (ParenExpr 0xa30dc60 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0xa30dc48 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa30dbf8 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0xa30dbd8 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa2ecac0
            (CXXThisExpr 0xa30dbc8 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa30dc2c <col:36> '_CharT *' lvalue ParmVar 0xa2ecbb0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0xa30ddd8 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa30ddc8 <col:9, col:59>
    (UnaryOperator 0xa30ddb0 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0xa30dd98 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0xa30dd80 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0xa30dd38 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0xa30dd20 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0xa30dcf0 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0xa30dcb0 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0xa30de98 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0xa30de88 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0xa30de68 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa30de48 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa30de08 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0xa30e020 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0xa30e010 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0xa30dff0 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa30dfc8 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa30df90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa30df08 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0xa30dec8 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0xa30df70 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30df38 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa30df28 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0xa30e168 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0xa30e148 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0xa30e0e0 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0xa30e0c0 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30e088 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0xa30e068 <col:7, col:14> '<dependent type>'
            (MemberExpr 0xa30e048 <col:7> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa30e038 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa30e128 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0xa30e108 <col:4> '<bound member function type>' ->_M_leak_hard 0xa2f1bf0
        (CXXThisExpr 0xa30e0f8 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0xa30e390 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0xa30e348 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa30e240 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa30e200 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa30e17c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ecf10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa30e1e0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa30e1a8 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0xa30e198 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa30e318 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0xa30e308 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa30e2cc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa30e338 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa30e2b8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa30e29c </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0xa2ecf60 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0xa30e380 <line:319:2, col:9>
    (DeclRefExpr 0xa30e364 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ecf10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0xa30e6c8 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0xa30e6a8 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa30e5c0 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0xa30e580 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (CXXOperatorCallExpr 0xa30e540 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa30e508 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CallExpr 0xa30e3f0 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30e3b8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa30e3a8 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0xa30e4f0 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0xa30e4c8 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa30e490 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (CallExpr 0xa30e458 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa30e420 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa30e410 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa30e474 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed070 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0xa30e564 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed0b0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa30e678 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0xa30e668 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa30e64c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa30e698 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa30e638 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa30e61c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0xa2ed100 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0xa30e9e8 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0xa30e888 <line:333:2, col:54>
    0xa30e6f0 "const bool __testoff =
      (CXXOperatorCallExpr 0xa30e860 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa30e820 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
        (DeclRefExpr 0xa30e724 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed280 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa30e7f8 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa30e7c0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa30e788 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa30e750 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa30e740 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0xa30e7a4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed240 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0xa30e9d8 <line:334:2, col:44>
    (ConditionalOperator 0xa30e9b8 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0xa30e9a8 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa30e898 <col:9> 'const _Bool' lvalue Var 0xa30e6f0 '__testoff' 'const _Bool'))
      (DeclRefExpr 0xa30e8b0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed280 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa30e980 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa30e948 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CallExpr 0xa30e910 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa30e8d8 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa30e8c8 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa30e92c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed240 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0xa30ee30 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0xa30ee20 <line:341:2, line:342:58>
    (ParenExpr 0xa30ee08 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0xa30edf0 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0xa30eb80 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa30eae0 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0xa30eaf8 <col:32> 'const _CharT *' lvalue ParmVar 0xa2ed3c0 '__s' 'const _CharT *')
          (CallExpr 0xa30eb60 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0xa30eb20 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0xa30edc8 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0xa30ec60 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0xa30ed88 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa30ed50 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
            (CallExpr 0xa30ecc8 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0xa30ec88 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0xa30ed30 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa30ecf8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa30ece8 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0xa30edac <col:54> 'const _CharT *' lvalue ParmVar 0xa2ed3c0 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa30f0a0 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0xa30f080 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa30eec0 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa30ee78 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (DeclRefExpr 0xa30ee44 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed570 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa30ee60 <col:13> 'int' 1))
    (CallExpr 0xa30ef98 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa30ef10 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa30ef50 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa30ef34 <col:25> '_CharT *' lvalue ParmVar 0xa2ed4e0 '__d' '_CharT *'))
      (UnaryOperator 0xa30ef80 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa30ef64 <col:31> 'const _CharT *' lvalue ParmVar 0xa2ed530 '__s' 'const _CharT *')))
    (CallExpr 0xa30f058 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa30efe8 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa30f00c <col:22> '_CharT *' lvalue ParmVar 0xa2ed4e0 '__d' '_CharT *')
      (DeclRefExpr 0xa30f024 <col:27> 'const _CharT *' lvalue ParmVar 0xa2ed530 '__s' 'const _CharT *')
      (DeclRefExpr 0xa30f03c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed570 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0xa30f310 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0xa30f2f0 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa30f130 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa30f0e8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (DeclRefExpr 0xa30f0b4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed740 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa30f0d0 <col:13> 'int' 1))
    (CallExpr 0xa30f208 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa30f180 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa30f1c0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa30f1a4 <col:25> '_CharT *' lvalue ParmVar 0xa2ed6b0 '__d' '_CharT *'))
      (UnaryOperator 0xa30f1f0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa30f1d4 <col:31> 'const _CharT *' lvalue ParmVar 0xa2ed700 '__s' 'const _CharT *')))
    (CallExpr 0xa30f2c8 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa30f258 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa30f27c <col:22> '_CharT *' lvalue ParmVar 0xa2ed6b0 '__d' '_CharT *')
      (DeclRefExpr 0xa30f294 <col:27> 'const _CharT *' lvalue ParmVar 0xa2ed700 '__s' 'const _CharT *')
      (DeclRefExpr 0xa30f2ac <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed740 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0xa3105c0 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0xa3105a0 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa30f3a0 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0xa30f358 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (DeclRefExpr 0xa30f324 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed860 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa30f340 <col:13> 'int' 1))
    (CallExpr 0xa30f460 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa30f3f0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0xa30f430 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa30f414 <col:25> '_CharT *' lvalue ParmVar 0xa2ed820 '__d' '_CharT *'))
      (DeclRefExpr 0xa30f444 <col:30> '_CharT' lvalue ParmVar 0xa2ed8a0 '__c' '_CharT'))
    (CallExpr 0xa310578 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa310508 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0xa31052c <col:24> '_CharT *' lvalue ParmVar 0xa2ed820 '__d' '_CharT *')
      (DeclRefExpr 0xa310544 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2ed860 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31055c <col:34> '_CharT' lvalue ParmVar 0xa2ed8a0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0xa3107f0 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0xa3107c8 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa310650 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa310608 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80)
      (DeclRefExpr 0xa3105d4 <col:11> '_Iterator' lvalue ParmVar 0xa2eda80 '__k1' '_Iterator')
      (DeclRefExpr 0xa3105ec <col:19> '_Iterator' lvalue ParmVar 0xa2edac0 '__k2' '_Iterator'))
    (BinaryOperator 0xa3106d8 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0xa310690 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa310674 <col:27> '_Iterator' lvalue ParmVar 0xa2eda80 '__k1' '_Iterator'))
      (UnaryOperator 0xa3106c0 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa3106a4 <col:35> '_CharT *' lvalue ParmVar 0xa2eda40 '__p' '_CharT *')))
    (CallExpr 0xa3107a0 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa310718 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0xa310758 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa31073c <col:27> '_CharT *' lvalue ParmVar 0xa2eda40 '__p' '_CharT *'))
      (UnaryOperator 0xa310788 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa31076c <col:33> '_Iterator' lvalue ParmVar 0xa2eda80 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0xa310970 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0xa310948 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa310808 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa2f1850 0xa2f1670 0xa2edf30 0xa2edd70 0xa2edbe0)
    (DeclRefExpr 0xa31084c <col:23> '_CharT *' lvalue ParmVar 0xa2edc30 '__p' '_CharT *')
    (CallExpr 0xa3108b8 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa310880 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa310864 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2edc70 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa310928 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3108f0 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa3108d4 <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2edcb0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa310af0 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0xa310ac8 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0xa310988 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0xa2f1850 0xa2f1670 0xa2edf30 0xa2edd70 0xa2edbe0)
    (DeclRefExpr 0xa3109cc <col:23> '_CharT *' lvalue ParmVar 0xa2eddf0 '__p' '_CharT *')
    (CallExpr 0xa310a38 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa310a00 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0xa3109e4 <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2ede30 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0xa310aa8 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa310a70 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa310a54 <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2ede70 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa310c08 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0xa310be0 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa310b04 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa310b1c <col:17> '_CharT *' lvalue ParmVar 0xa2edfb0 '__p' '_CharT *')
    (DeclRefExpr 0xa310b34 <col:22> '_CharT *' lvalue ParmVar 0xa2ee000 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0xa310bb8 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa310b80 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa310b4c <col:28> '_CharT *' lvalue ParmVar 0xa2ee050 '__k2' '_CharT *')
      (DeclRefExpr 0xa310b64 <col:35> '_CharT *' lvalue ParmVar 0xa2ee000 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa310d20 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0xa310cf8 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0xa310c1c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0xa310c34 <col:17> '_CharT *' lvalue ParmVar 0xa2f16f0 '__p' '_CharT *')
    (DeclRefExpr 0xa310c4c <col:22> 'const _CharT *' lvalue ParmVar 0xa2f1740 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0xa310cd0 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa310c98 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa310c64 <col:28> 'const _CharT *' lvalue ParmVar 0xa2f1790 '__k2' 'const _CharT *')
      (DeclRefExpr 0xa310c7c <col:35> 'const _CharT *' lvalue ParmVar 0xa2f1740 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0xa312258 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0xa310e50 <line:403:2, col:58>
    0xa310d60 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0xa310e30 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0xa310e08 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa310dd0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa310da0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f18d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa310db8 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f1910 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0xa312238 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa311eb8 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa311e78 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (DeclRefExpr 0xa310e60 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa310d60 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0xa311e58 <col:12, col:46> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
    (ReturnStmt 0xa311fa0 <line:406:4, col:45>
      (ImplicitCastExpr 0xa311f90 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0xa311f70 <col:11, col:45> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int')))
    (IfStmt 0xa312218 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa3120c0 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa312080 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0)
        (DeclRefExpr 0xa311fb0 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa310d60 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0xa312060 <col:17, col:51> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int'))
      (ReturnStmt 0xa3121b0 <line:408:4, col:45>
        (ImplicitCastExpr 0xa3121a0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0xa312180 <col:11, col:45> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int')))
      (ReturnStmt 0xa312208 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0xa3121e8 <col:11, col:18> 'int'
          (DeclRefExpr 0xa3121cc <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0xa310d60 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0xa3122f0 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0xa3122e0 <col:9, col:35>
    (CallExpr 0xa3122c0 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa312298 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0xa312378 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa312340 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0xa312320 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0xa312304 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2f1c70 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0xa3123a0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0xa312400 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa30a458 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a478 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a498 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a4b8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a4d8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa314810 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0xa3147f0 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa312460 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0xa312440 <col:9, col:16> '<dependent type>'
        (MemberExpr 0xa312420 <col:9> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa312410 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa3147d0 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3124a8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0xa312498 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa3148b8 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0xa3148a8 <col:9, col:34>
    (CallExpr 0xa314888 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa314838 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa314828 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31486c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f2bd0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0xa314960 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0xa314950 <col:9, col:32>
    (CallExpr 0xa314930 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3148e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3148d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa314914 <col:29> 'const _CharT *' lvalue ParmVar 0xa2f2cf0 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0xa314a50 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0xa3149f0 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa314988 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa314978 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa3149c0 <col:15> 'int' 1)
    (DeclRefExpr 0xa3149d8 <col:18> '_CharT' lvalue ParmVar 0xa2f2e00 '__c' '_CharT'))
  (ReturnStmt 0xa314a40 <line:562:2, col:10>
    (UnaryOperator 0xa314a28 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa314a18 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0xa314b60 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0xa314a98 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0xa314a78 <col:2> '<bound member function type>' ->_M_leak 0xa2ecea0
      (CXXThisExpr 0xa314a68 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa314b50 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0xa314b30 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa314b10 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa314ad0 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0xa314c20 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0xa314c10 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa314bf0 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0xa314bd0 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa314b90 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0xa314df8 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0xa314c68 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0xa314c48 <col:2> '<bound member function type>' ->_M_leak 0xa2ecea0
      (CXXThisExpr 0xa314c38 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa314de8 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0xa314dc8 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa314da0 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa314d68 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa314ce0 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa314ca0 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0xa314d48 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa314d10 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa314d00 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0xa314f80 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0xa314f70 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0xa314f50 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa314f28 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa314ef0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa314e68 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa314e28 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0xa314ed0 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa314e98 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa314e88 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0xa315038 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0xa315028 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa315008 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa314fe8 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa314fb0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa314fa0 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa3150f0 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0xa3150e0 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0xa3150c0 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa3150a0 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa315068 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa315058 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0xa3151a8 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0xa315198 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa315178 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa315158 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa315120 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa315110 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa315260 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0xa315250 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa315230 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa315210 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3151d8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0xa3151c8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0xa315310 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa315300 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa3152c8 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa3152a8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa315288 <col:16> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa315278 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0xa3153c0 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0xa3153b0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa315378 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa315358 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa315338 <col:16> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa315328 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0xa315440 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0xa315430 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0xa3153f8 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0xa315500 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0xa3154d8 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa315468 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa315458 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa31549c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f6250 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa3154c0 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0xa3155b0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa3155a0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0xa315568 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0xa315548 <col:16, col:23> '<dependent type>'
        (MemberExpr 0xa315528 <col:16> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa315518 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0xa30a4f0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0xa3156b8 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0xa315690 <col:9, col:37> '<dependent type>'
    (MemberExpr 0xa3155d8 <col:9> '<bound member function type>' ->_M_mutate 0xa2f1b60
      (CXXThisExpr 0xa3155c8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa3155f8 <col:19> 'int' 0)
    (CallExpr 0xa315658 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa315620 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0xa315610 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0xa315678 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0xa3157d0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa3157c0 <col:9, col:32>
    (CXXOperatorCallExpr 0xa315798 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa315750 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (CallExpr 0xa315718 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3156e0 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa3156d0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0xa315738 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0xa3158a8 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0xa3157e8 <line:819:40>)
  (ReturnStmt 0xa315898 <line:820:2, col:24>
    (ArraySubscriptExpr 0xa315880 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa315848 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa315808 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa315864 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f6560 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0xa3159e0 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0xa3158c0 <line:837:40>)
  (NullStmt 0xa3158d0 <line:839:42>)
  (CallExpr 0xa315910 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0xa3158f0 <col:2> '<bound member function type>' ->_M_leak 0xa2ecea0
      (CXXThisExpr 0xa3158e0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa3159d0 <line:841:2, col:24>
    (ArraySubscriptExpr 0xa3159b8 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0xa315980 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa315940 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa31599c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f6690 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa315cd0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa315c00 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa315ac0 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa315a80 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90)
      (DeclRefExpr 0xa315a00 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f67a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa315a60 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa315a28 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa315a18 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa315bd0 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa315bc0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa315bf0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa315cc0 <line:859:2, col:22>
    (ArraySubscriptExpr 0xa315ca8 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa315c70 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa315c30 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa315c8c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f67a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0xa315fa8 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0xa315e88 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa315d90 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa315d50 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90)
      (DeclRefExpr 0xa315ce8 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f6860 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa315d30 <col:13, col:18> '<dependent type>'
        (MemberExpr 0xa315d10 <col:13> '<bound member function type>' ->size 0xa2f3480
          (CXXThisExpr 0xa315d00 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0xa315e58 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0xa315e48 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315e2c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa315e78 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315e18 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315dec </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0xa315ed8 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0xa315eb8 <col:2> '<bound member function type>' ->_M_leak 0xa2ecea0
      (CXXThisExpr 0xa315ea8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0xa315f98 <line:913:2, col:22>
    (ArraySubscriptExpr 0xa315f80 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0xa315f48 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa315f08 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa315f64 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f6860 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa316058 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0xa316048 <col:9, col:34>
    (CallExpr 0xa316028 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa315fd8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa315fc8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31600c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f6930 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0xa316100 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0xa3160f0 <col:9, col:32>
    (CallExpr 0xa3160d0 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa316080 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa316070 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa3160b4 <col:29> 'const _CharT *' lvalue ParmVar 0xa2f6a10 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0xa3161d0 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0xa316178 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa316128 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa316118 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa31615c <col:18> '_CharT' lvalue ParmVar 0xa2f6ae0 '__c' '_CharT'))
  (ReturnStmt 0xa3161c0 <line:944:2, col:10>
    (UnaryOperator 0xa3161a8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa316198 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0xa316320 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa3161e8 <line:998:32>)
  (ReturnStmt 0xa316310 <line:999:2, col:51>
    (CallExpr 0xa3162e8 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa316208 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3161f8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31623c <col:22> 'const _CharT *' lvalue ParmVar 0xa2f6fc0 '__s' 'const _CharT *')
      (CallExpr 0xa3162c8 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa316278 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3162ac <col:47> 'const _CharT *' lvalue ParmVar 0xa2f6fc0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa316490 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0xa316480 <col:11, col:69>
    (CallExpr 0xa316450 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa316348 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa316338 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa3163b0 <col:32, col:40> '<dependent type>'
        (MemberExpr 0xa316390 <col:32> '<bound member function type>' ->_M_iend 0xa2ece20
          (CXXThisExpr 0xa316380 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa316400 <col:43, col:51> '<dependent type>'
        (MemberExpr 0xa3163e0 <col:43> '<bound member function type>' ->_M_iend 0xa2ece20
          (CXXThisExpr 0xa3163d0 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa31641c <col:54> '_InputIterator' lvalue ParmVar 0xa2f7240 '__first' '_InputIterator')
      (DeclRefExpr 0xa316434 <col:63> '_InputIterator' lvalue ParmVar 0xa2f7280 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0xa317778 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa3165c8 <line:1044:2, col:42>
    0xa3164b0 "const size_type __len =
      (CXXOperatorCallExpr 0xa3165a0 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa316568 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (IntegerLiteral 0xa3164e8 <col:26> 'int' 1)
        (CallExpr 0xa316548 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa316510 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa316500 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa317508 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa316768 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa316698 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa316658 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
        (DeclRefExpr 0xa3165d8 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3164b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa316638 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa316600 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0xa3165f0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa316748 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa316710 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0xa3166f0 <col:34, col:41> '<dependent type>'
            (MemberExpr 0xa3166d0 <col:34> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa3166c0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0xa3174e8 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa316790 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa316780 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa3174d0 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3164b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0xa317690 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa317550 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0xa317660 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0xa3175d8 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa317598 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0xa317640 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa317608 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa3175f8 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa317674 <col:47> '_CharT' lvalue ParmVar 0xa2f73c0 '__c' '_CharT'))
  (CallExpr 0xa317758 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa317708 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa3176e8 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa3176c8 <col:2> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa3176b8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa31773c <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3164b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa317a50 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0xa317a40 <line:1090:9, line:1092:34>
    (CallExpr 0xa317a18 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3177a8 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa317798 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa317948 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa317910 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa317830 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3177f8 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa3177dc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f75a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa3178e8 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa317868 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa31784c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f75a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa31789c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f75e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa3178b4 <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0xa3179f0 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa317988 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa31796c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f75a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3179bc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f75e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa3179d4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f7620 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0xa317ba0 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0xa317a68 <line:1119:32>)
  (ReturnStmt 0xa317b90 <line:1120:2, col:51>
    (CallExpr 0xa317b68 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa317a88 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa317a78 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa317abc <col:22> 'const _CharT *' lvalue ParmVar 0xa2f7820 '__s' 'const _CharT *')
      (CallExpr 0xa317b48 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa317af8 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0xa317b2c <col:47> 'const _CharT *' lvalue ParmVar 0xa2f7820 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0xa317d00 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0xa317cf0 <col:9, col:67>
    (CallExpr 0xa317cc0 <col:16, col:67> '<dependent type>'
      (MemberExpr 0xa317bc8 <col:16> '<bound member function type>' ->_M_replace_aux 0xa301790
        (CXXThisExpr 0xa317bb8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0xa317c08 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa317bf0 <col:41> 'int' 0))
      (CallExpr 0xa317c70 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa317c38 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0xa317c28 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa317c8c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f78f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa317ca4 <col:64> '_CharT' lvalue ParmVar 0xa2f7930 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa317e70 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0xa317e60 <col:11, col:71>
    (CallExpr 0xa317e30 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa317d28 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0xa317d18 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa317d90 <col:32, col:42> '<dependent type>'
        (MemberExpr 0xa317d70 <col:32> '<bound member function type>' ->_M_ibegin 0xa2ecda0
          (CXXThisExpr 0xa317d60 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa317de0 <col:45, col:53> '<dependent type>'
        (MemberExpr 0xa317dc0 <col:45> '<bound member function type>' ->_M_iend 0xa2ece20
          (CXXThisExpr 0xa317db0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0xa317dfc <col:56> '_InputIterator' lvalue ParmVar 0xa2f7a60 '__first' '_InputIterator')
      (DeclRefExpr 0xa317e14 <col:65> '_InputIterator' lvalue ParmVar 0xa2f7aa0 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0xa317f60 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0xa317f30 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa317e98 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa317e88 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa317ecc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2f7bc0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa317ee4 <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2f7bc0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa317efc <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f7c00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa317f14 <col:38> '_CharT' lvalue ParmVar 0xa2f7c40 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0xa318050 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0xa318020 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa317f88 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa317f78 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa317fbc <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2f7dd0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa317fd4 <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2f7dd0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0xa317fec <col:35> '_InputIterator' lvalue ParmVar 0xa2f7e10 '__beg' '_InputIterator')
    (DeclRefExpr 0xa318004 <col:42> '_InputIterator' lvalue ParmVar 0xa2f7e50 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa3181d0 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0xa3181c0 <col:9, col:70>
    (CallExpr 0xa318190 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa318078 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa318068 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa3180ac <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2f7fb0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa3180c4 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f8000 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0xa318100 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa3180e8 <col:54> 'int' 0))
      (CallExpr 0xa318170 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa318138 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0xa31811c <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2f8000 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0xa3184b8 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0xa3184a8 <line:1243:9, line:1245:35>
    (CallExpr 0xa318480 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3181f8 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3181e8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31822c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb190 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa3183b0 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa318378 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa318298 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa318260 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0xa318244 <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fb1e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa318350 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3182d0 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa3182b4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fb1e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa318304 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb220 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa31831c <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0xa318458 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3183f0 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa3183d4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fb1e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa318424 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb220 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa31843c <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb260 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0xa318620 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0xa3184d0 <line:1284:32>)
  (ReturnStmt 0xa318610 <line:1285:2, col:58>
    (CallExpr 0xa3185e8 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3184f0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa3184e0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa318524 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb570 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31853c <col:29> 'const _CharT *' lvalue ParmVar 0xa2fb5c0 '__s' 'const _CharT *')
      (CallExpr 0xa3185c8 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa318578 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3185ac <col:54> 'const _CharT *' lvalue ParmVar 0xa2fb5c0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0xa3187b8 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0xa3187a8 <line:1306:9, line:1307:32>
    (CallExpr 0xa318778 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0xa318648 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0xa301790
        (CXXThisExpr 0xa318638 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa3186e0 <col:31, col:69> '<dependent type>'
        (MemberExpr 0xa318678 <col:31> '<bound member function type>' ->_M_check 0xa2ed000
          (CXXThisExpr 0xa318668 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa318698 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb6d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa3186b0 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0xa318728 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0xa318710 <col:20> 'int' 0))
      (DeclRefExpr 0xa318744 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb710 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31875c <col:29> '_CharT' lvalue ParmVar 0xa2fb750 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0xa318bd8 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0xa3187d0 <line:1324:66>)
  (DeclStmt 0xa3188f0 <line:1325:2, col:43>
    0xa3187f0 "const size_type __pos =
      (CXXOperatorCallExpr 0xa3188c8 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa318890 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa318824 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fb890 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa318870 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa318850 <col:32> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa318840 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa3189e0 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0xa318910 <col:2> '<bound member function type>' ->_M_replace_aux 0xa301790
      (CXXThisExpr 0xa318900 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa318930 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3187f0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa318968 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa318950 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0xa3189a8 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa318990 <col:48> 'int' 1))
    (DeclRefExpr 0xa3189c4 <col:52> '_CharT' lvalue ParmVar 0xa2fb8d0 '__c' '_CharT'))
  (CallExpr 0xa318a98 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa318a60 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa318a40 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa318a20 <col:2> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa318a10 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa318bc8 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0xa318ba8 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa318b80 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa318b48 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa318b10 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa318ad0 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa318b2c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3187f0 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0xa30a508 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0xa30a520 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0xa318df8 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0xa318d98 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0xa318c10 <line:1348:2> '<bound member function type>' ->_M_mutate 0xa2f1b60
      (CXXThisExpr 0xa318c00 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa318ca8 <col:12, col:49> '<dependent type>'
      (MemberExpr 0xa318c40 <col:12> '<bound member function type>' ->_M_check 0xa2ed000
        (CXXThisExpr 0xa318c30 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa318c60 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb9e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa318c78 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0xa318d30 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0xa318ce0 <col:5> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa318cd0 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa318d00 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fb9e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa318d18 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fba20 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0xa318d78 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa318d60 <col:37> 'int' 0)))
  (ReturnStmt 0xa318de8 <line:1350:2, col:10>
    (UnaryOperator 0xa318dd0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa318dc0 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0xa3191f8 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0xa318e10 <line:1365:32>)
  (DeclStmt 0xa318f30 <line:1366:2, col:50>
    0xa318e30 "const size_type __pos =
      (CXXOperatorCallExpr 0xa318f08 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa318ed0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa318e64 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fbb30 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa318eb0 <col:39, col:49> '<dependent type>'
          (MemberExpr 0xa318e90 <col:39> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa318e80 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0xa319008 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0xa318f50 <col:2> '<bound member function type>' ->_M_mutate 0xa2f1b60
      (CXXThisExpr 0xa318f40 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa318f70 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa318e30 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0xa318fa8 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa318f90 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0xa318fe8 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa318fd0 <col:43> 'int' 0)))
  (CallExpr 0xa3190b8 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa319080 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0xa319060 <col:2, col:9> '<dependent type>'
        (MemberExpr 0xa319040 <col:2> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa319030 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0xa3191e8 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0xa3191c8 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0xa3191a0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa319168 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa319130 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa3190f0 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa31914c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa318e30 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa3193b8 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0xa3193a8 <col:9, col:71>
    (CallExpr 0xa319378 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa319230 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa319220 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa319264 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fbd90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31927c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fbdd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa3192e8 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3192b0 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa319294 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fbe20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa319358 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa319320 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa319304 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fbe20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0xa31a450 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0xa31a440 <line:1425:9, line:1427:37>
    (CallExpr 0xa31a410 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3193e0 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3193d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa319414 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fbf60 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31942c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fbfa0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa31a340 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa31a308 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0)
        (CallExpr 0xa319498 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa319460 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa319444 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fbff0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0xa31a2e0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa31a260 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa31a248 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fbff0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0xa31a294 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc030 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0xa31a2ac <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0xa31a3e8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31a380 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa31a364 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fbff0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa31a3b4 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc030 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa31a3cc <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc070 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0xa31a5d8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0xa31a468 <line:1468:32>)
  (ReturnStmt 0xa31a5c8 <line:1469:2, col:65>
    (CallExpr 0xa31a598 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31a488 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31a478 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31a4bc <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc3d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31a4d4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc410 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31a4ec <col:36> 'const _CharT *' lvalue ParmVar 0xa2fc460 '__s' 'const _CharT *')
      (CallExpr 0xa31a578 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31a528 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31a55c <col:61> 'const _CharT *' lvalue ParmVar 0xa2fc460 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa31a7c0 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0xa31a7b0 <line:1490:9, line:1491:42>
    (CallExpr 0xa31a780 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0xa31a600 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0xa301790
        (CXXThisExpr 0xa31a5f0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31a6a0 <col:31, col:70> '<dependent type>'
        (MemberExpr 0xa31a630 <col:31> '<bound member function type>' ->_M_check 0xa2ed000
          (CXXThisExpr 0xa31a620 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa31a650 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc5a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa31a668 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0xa31a728 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0xa31a6d8 <col:10> '<bound member function type>' ->_M_limit 0xa2ed320
          (CXXThisExpr 0xa31a6c8 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa31a6f8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc5a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa31a710 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc5e0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa31a74c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fc620 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31a764 <col:39> '_CharT' lvalue ParmVar 0xa2fc660 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa31a970 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0xa31a960 <col:9, col:71>
    (CallExpr 0xa31a930 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31a7e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31a7d8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31a81c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fc7a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa31a834 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fc7e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0xa31a8a0 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31a868 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa31a84c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fc830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa31a910 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31a8d8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0xa31a8bc <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa2fc830 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0xa31aba8 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0xa31a988 <line:1528:27>)
  (ReturnStmt 0xa31ab98 <line:1529:2, col:64>
    (CallExpr 0xa31ab68 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31a9a8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31a998 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31aa80 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa31aa48 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31a9dc <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fc970 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31aa28 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa31aa08 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31a9f8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31ab10 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31aad8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31aaa4 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fc9b0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31aabc <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fc970 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa31ab34 <col:56> 'const _CharT *' lvalue ParmVar 0xa2fca00 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31ab4c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fca40 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0xa31ad30 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0xa31abc0 <line:1548:32>)
  (ReturnStmt 0xa31ad20 <line:1549:2, col:64>
    (CallExpr 0xa31acf0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31abe0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31abd0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31ac14 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcb80 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa31ac2c <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcbc0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa31ac44 <col:35> 'const _CharT *' lvalue ParmVar 0xa2fcc10 '__s' 'const _CharT *')
      (CallExpr 0xa31acd0 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31ac80 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31acb4 <col:60> 'const _CharT *' lvalue ParmVar 0xa2fcc10 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0xa31af50 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0xa31ad48 <line:1570:27>)
  (ReturnStmt 0xa31af40 <line:1571:2, col:65>
    (CallExpr 0xa31af10 <col:9, col:65> '<dependent type>'
      (MemberExpr 0xa31ad68 <col:9> '<bound member function type>' ->_M_replace_aux 0xa301790
        (CXXThisExpr 0xa31ad58 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31ae28 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa31adf0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31ad88 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcd50 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31add0 <col:31, col:41> '<dependent type>'
          (MemberExpr 0xa31adb0 <col:31> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31ada0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31aeb8 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa31ae80 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31ae4c <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcd90 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31ae64 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcd50 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa31aedc <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa2fcdd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31aef4 <col:62> '_CharT' lvalue ParmVar 0xa2fce10 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0xa31b250 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0xa31af68 <line:1594:29>)
  (NullStmt 0xa31af78 <line:1595:46>)
  (DeclStmt 0xa31b120 <line:1596:4, col:72>
    0xa31b0f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0xa31b240 <line:1597:4, col:66>
    (CallExpr 0xa31b210 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa31b140 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa31b180 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcfa0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa31b198 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa2fcfe0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0xa31b1b0 <col:43> '_InputIterator' lvalue ParmVar 0xa2fd020 '__k1' '_InputIterator')
      (DeclRefExpr 0xa31b1c8 <col:49> '_InputIterator' lvalue ParmVar 0xa2fd060 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0xa31b1f8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0xa31b518 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0xa31b270 <line:1606:27>)
  (NullStmt 0xa31b280 <line:1607:44>)
  (ReturnStmt 0xa31b508 <line:1608:2, line:1609:26>
    (CallExpr 0xa31b4d8 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31b2a0 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31b290 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31b378 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b340 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b2d4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300850 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31b320 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa31b300 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31b2f0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31b408 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b3d0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b39c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300890 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31b3b4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300850 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa31b42c <line:1609:9> '_CharT *' lvalue ParmVar 0xa3008e0 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0xa31b4b0 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b478 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b444 <col:15> '_CharT *' lvalue ParmVar 0xa300930 '__k2' '_CharT *')
        (DeclRefExpr 0xa31b45c <col:22> '_CharT *' lvalue ParmVar 0xa3008e0 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0xa31b7e0 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0xa31b538 <line:1617:27>)
  (NullStmt 0xa31b548 <line:1618:44>)
  (ReturnStmt 0xa31b7d0 <line:1619:2, line:1620:26>
    (CallExpr 0xa31b7a0 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31b568 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31b558 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31b640 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b608 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b59c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300a70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31b5e8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa31b5c8 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31b5b8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31b6d0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b698 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b664 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300ab0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31b67c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300a70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa31b6f4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0xa300b00 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0xa31b778 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b740 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b70c <col:15> 'const _CharT *' lvalue ParmVar 0xa300b50 '__k2' 'const _CharT *')
        (DeclRefExpr 0xa31b724 <col:22> 'const _CharT *' lvalue ParmVar 0xa300b00 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0xa31bb00 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0xa31b800 <line:1627:27>)
  (NullStmt 0xa31b810 <line:1628:44>)
  (ReturnStmt 0xa31baf0 <line:1629:2, line:1630:33>
    (CallExpr 0xa31bac0 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31b830 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31b820 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31b908 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b8d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b864 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300c90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31b8b0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa31b890 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31b880 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31b998 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31b960 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31b92c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300cd0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31b944 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300c90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa31ba10 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31b9d8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa31b9bc <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300d10 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa31ba98 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa31ba60 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31ba2c <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300d50 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31ba44 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300d10 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0xa31be20 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0xa31bb20 <line:1638:27>)
  (NullStmt 0xa31bb30 <line:1639:44>)
  (ReturnStmt 0xa31be10 <line:1640:2, line:1641:33>
    (CallExpr 0xa31bde0 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31bb50 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31bb40 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31bc28 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa31bbf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31bb84 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300e90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31bbd0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0xa31bbb0 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31bba0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31bcb8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31bc80 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31bc4c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300ed0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31bc64 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300e90 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0xa31bd30 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31bcf8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa31bcdc <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300f10 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0xa31bdb8 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa31bd80 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31bd4c <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300f50 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31bd64 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa300f10 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa31c038 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0xa31c028 <col:11, col:76>
    (CallExpr 0xa31bff8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0xa31be50 <col:18> '<bound member function type>' ->_M_replace_aux 0xa301790
        (CXXThisExpr 0xa31be40 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa31bf10 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31bed8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31be70 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa301120 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa31beb8 <col:40, col:50> '<dependent type>'
          (MemberExpr 0xa31be98 <col:40> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa31be88 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa31bfa0 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa31bf68 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa31bf34 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa301160 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa31bf4c <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa301120 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0xa31bfc4 <col:66> '_Integer' lvalue ParmVar 0xa3011a0 '__n' '_Integer')
      (DeclRefExpr 0xa31bfdc <col:71> '_Integer' lvalue ParmVar 0xa3011e0 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0xa31dae8 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0xa31c170 <line:1690:11, col:80>
    0xa31c140 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0xa31dad8 <line:1691:11, col:56>
    (CallExpr 0xa31daa8 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa31c180 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0xa3044b0 0xa304380 0xa302530 0xa3022a0)
      (DeclRefExpr 0xa31c1c0 <col:31> '_InIterator' lvalue ParmVar 0xa301a10 '__beg' '_InIterator')
      (DeclRefExpr 0xa31c1d8 <col:38> '_InIterator' lvalue ParmVar 0xa301a50 '__end' '_InIterator')
      (DeclRefExpr 0xa31c1f0 <col:45> 'const _Alloc' lvalue ParmVar 0xa301aa0 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa31c228 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0xa31dbb8 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0xa31dba8 <line:1700:11, line:1701:19>
    (CallExpr 0xa31db80 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0xa31db00 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0xa302020 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0xa31db38 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa31db18 <col:60> '_Integer' lvalue ParmVar 0xa301ca0 '__beg' '_Integer'))
      (DeclRefExpr 0xa31db50 <line:1701:9> '_Integer' lvalue ParmVar 0xa301ce0 '__end' '_Integer')
      (DeclRefExpr 0xa31db68 <col:16> 'const _Alloc' lvalue ParmVar 0xa301d30 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa31dc90 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0xa31dc80 <col:9, col:44>
    (CallExpr 0xa31dc58 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0xa31dbd0 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0xa3044b0 0xa304380 0xa302530 0xa3022a0)
      (DeclRefExpr 0xa31dc10 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa301ed0 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa31dc28 <col:36> '_CharT' lvalue ParmVar 0xa301f10 '__c' '_CharT')
      (DeclRefExpr 0xa31dc40 <col:41> 'const _Alloc' lvalue ParmVar 0xa301f60 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0xa31ded0 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0xa31ddd0 <line:1711:4, col:69>
    0xa31dda0 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0xa31dec0 <line:1712:4, col:58>
    (CallExpr 0xa31de90 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa31dde0 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0xa301e90 0xa301c00)
      (DeclRefExpr 0xa31de18 <col:28> '_InIterator' lvalue ParmVar 0xa3020f0 '__beg' '_InIterator')
      (DeclRefExpr 0xa31de30 <col:35> '_InIterator' lvalue ParmVar 0xa302130 '__end' '_InIterator')
      (DeclRefExpr 0xa31de48 <col:42> 'const _Alloc' lvalue ParmVar 0xa302180 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0xa31de78 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa30a538 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0xa31df68 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa31df58 <col:9, col:24>
    (CallExpr 0xa31df38 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa31def8 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0xa31e000 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0xa31dff0 <col:9, col:24>
    (CallExpr 0xa31dfd0 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0xa31df90 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0xa31e058 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa31e048 <col:9, col:16>
    (MemberExpr 0xa31e028 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0xa2ecac0
      (CXXThisExpr 0xa31e018 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa30a550 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0xa31e1e8 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0xa31e1d8 <col:9, col:60>
    (CallExpr 0xa31e1b0 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e080 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e070 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31e108 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e0d0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e0b4 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa304be0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31e124 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa304c20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e190 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e158 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e13c <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa304be0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa30a568 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0xa31e350 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0xa31e200 <line:1826:32>)
  (ReturnStmt 0xa31e340 <line:1827:2, col:56>
    (CallExpr 0xa31e318 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e220 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e210 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31e254 <col:20> 'const _CharT *' lvalue ParmVar 0xa304d40 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31e26c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa304d80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e2f8 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e2a8 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31e2dc <col:52> 'const _CharT *' lvalue ParmVar 0xa304d40 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa30a580 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa30a598 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31e4e0 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0xa31e4d0 <col:9, col:61>
    (CallExpr 0xa31e4a8 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e378 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e368 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31e400 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e3c8 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e3ac <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa304ff0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31e41c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305030 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e488 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e450 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e434 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa304ff0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa30a5b0 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31e648 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0xa31e4f8 <line:1884:32>)
  (ReturnStmt 0xa31e638 <line:1885:2, col:57>
    (CallExpr 0xa31e610 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e518 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e508 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31e54c <col:21> 'const _CharT *' lvalue ParmVar 0xa305270 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31e564 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3052b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e5f0 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e5a0 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31e5d4 <col:53> 'const _CharT *' lvalue ParmVar 0xa305270 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa30a5c8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa30a5e0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0xa31e7d8 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0xa31e7c8 <col:9, col:69>
    (CallExpr 0xa31e7a0 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e670 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e660 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31e6f8 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e6c0 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e6a4 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3054a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31e714 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3054e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e780 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e748 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0xa31e72c <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3054a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa30a5f8 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0xa31e940 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0xa31e7f0 <line:1942:32>)
  (ReturnStmt 0xa31e930 <line:1943:2, col:65>
    (CallExpr 0xa31e908 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e810 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e800 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31e844 <col:29> 'const _CharT *' lvalue ParmVar 0xa305720 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31e85c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305760 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31e8e8 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31e898 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31e8cc <col:61> 'const _CharT *' lvalue ParmVar 0xa305720 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa30a610 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0xa31ea08 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0xa31e9f8 <col:9, col:37>
    (CallExpr 0xa31e9d0 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31e968 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31e958 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31e99c <col:27> '_CharT' lvalue ParmVar 0xa305830 '__c' '_CharT')
      (DeclRefExpr 0xa31e9b4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305870 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa30a628 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31eb98 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0xa31eb88 <col:9, col:68>
    (CallExpr 0xa31eb60 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31ea30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31ea20 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31eab8 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31ea80 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0xa31ea64 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa305950 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31ead4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305990 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31eb40 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31eb08 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0xa31eaec <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa305950 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa30a640 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31ed00 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0xa31ebb0 <line:2003:32>)
  (ReturnStmt 0xa31ecf0 <line:2004:2, col:64>
    (CallExpr 0xa31ecc8 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31ebd0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31ebc0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31ec04 <col:28> 'const _CharT *' lvalue ParmVar 0xa305bd0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31ec1c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305c10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31eca8 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31ec58 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31ec8c <col:60> 'const _CharT *' lvalue ParmVar 0xa305bd0 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa30a658 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31edc8 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0xa31edb8 <col:9, col:38>
    (CallExpr 0xa31ed90 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31ed28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31ed18 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31ed5c <col:28> '_CharT' lvalue ParmVar 0xa305ce0 '__c' '_CharT')
      (DeclRefExpr 0xa31ed74 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305d20 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0xa30a670 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0xa31ef58 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0xa31ef48 <col:9, col:73>
    (CallExpr 0xa31ef20 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31edf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31ede0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31ee78 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31ee40 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa31ee24 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa305e00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31ee94 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa305e40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31ef00 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31eec8 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0xa31eeac <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa305e00 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0xa30a688 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0xa31f0c0 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0xa31ef70 <line:2065:32>)
  (ReturnStmt 0xa31f0b0 <line:2066:2, col:69>
    (CallExpr 0xa31f088 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31ef90 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31ef80 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31efc4 <col:33> 'const _CharT *' lvalue ParmVar 0xa306080 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31efdc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3060c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31f068 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f018 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31f04c <col:65> 'const _CharT *' lvalue ParmVar 0xa306080 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa30a6a0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0xa30a6b8 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31f250 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0xa31f240 <col:9, col:72>
    (CallExpr 0xa31f218 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31f0e8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa31f0d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31f170 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f138 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0xa31f11c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3062b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0xa31f18c <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa309470 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31f1f8 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f1c0 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa31f1a4 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3062b0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0xa30a6d0 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31f3b8 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0xa31f268 <line:2124:32>)
  (ReturnStmt 0xa31f3a8 <line:2125:2, col:68>
    (CallExpr 0xa31f380 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa31f288 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa31f278 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa31f2bc <col:32> 'const _CharT *' lvalue ParmVar 0xa3096b0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa31f2d4 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3096f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa31f360 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f310 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0xa31f344 <col:64> 'const _CharT *' lvalue ParmVar 0xa3096b0 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa30a6e8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0xa30a700 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0xa30a718 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa31f4f0 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0xa31f4e0 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0xa31f4b8 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0xa31f3e8 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa31f3d8 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0xa31f478 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0xa31f410 <col:8> '<bound member function type>' ->_M_check 0xa2ed000
          (CXXThisExpr 0xa31f400 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa31f430 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3098d0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa31f448 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0xa31f49c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa309910 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa321698 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0xa31f5b0 <line:2174:2, col:39>
    0xa31f510 "const size_type __size =
      (CallExpr 0xa31f590 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f558 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa31f548 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa31f678 <line:2175:2, col:40>
    0xa31f5d0 "const size_type __osize =
      (CallExpr 0xa31f658 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f620 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa31f604 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa309a30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa31f770 <line:2176:2, col:51>
    0xa31f690 "const size_type __len =
      (CallExpr 0xa31f748 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa31f6e0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa31f718 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa31f510 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa31f730 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa31f5d0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa31f940 <line:2178:2, col:64>
    0xa31f790 "int __r =
      (CallExpr 0xa31f918 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa31f7e8 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0xa31f870 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0xa31f830 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0xa31f8e0 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa31f8a8 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0xa31f88c <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa309a30 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa31f8fc <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa31f690 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa31fa40 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0xa31f988 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa31f978 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa31f968 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0xa31f950 <col:7> 'int' lvalue Var 0xa31f790 '__r' 'int'))))
    (BinaryOperator 0xa31fa28 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0xa31f99c <col:4> 'int' lvalue Var 0xa31f790 '__r' 'int')
      (CallExpr 0xa31fa00 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0xa31f9b4 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa31f9cc <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa31f510 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa31f9e4 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa31f5d0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa31fa88 <line:2181:2, col:9>
    (ImplicitCastExpr 0xa31fa78 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0xa31fa5c <col:9> 'int' lvalue Var 0xa31f790 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa322030 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0xa321f70 <line:2308:7, col:57>
    0xa321f00 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa321f50 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa321f34 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa321a80 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa321fe8 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa321f98 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa321f80 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa321f00 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa321fcc <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa321c30 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa322020 <line:2310:7, col:14>
    (DeclRefExpr 0xa322008 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa321f00 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa323320 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0xa323260 <line:2345:7, col:57>
    0xa3231f0 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0xa323240 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa323224 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa322eb0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa3232d8 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa323288 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa323270 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa3231f0 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa3232bc <col:20> 'const _CharT *' lvalue ParmVar 0xa322f20 '__rhs' 'const _CharT *'))
  (ReturnStmt 0xa323310 <line:2347:7, col:14>
    (DeclRefExpr 0xa3232f8 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa3231f0 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0xa323cd8 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0xa323a40 <line:2360:7, col:66>
    0xa323a10 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa323b30 <line:2361:7, col:61>
    0xa323b00 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa323bc0 <line:2362:7, col:33>
    0xa323b50 "__string_type __str =
      (ParenListExpr 0xa323ba0 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa323b84 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa323700 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0xa323c88 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa323be8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa323bd0 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa323b50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa323c50 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa323c38 <col:32> 'int' 1))
    (DeclRefExpr 0xa323c6c <col:36> '_CharT' lvalue ParmVar 0xa323740 '__rhs' '_CharT'))
  (ReturnStmt 0xa323cc8 <line:2364:7, col:14>
    (DeclRefExpr 0xa323cac <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa323b50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa324388 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0xa324378 <col:7, col:38>
    (CXXOperatorCallExpr 0xa324350 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa324300 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (CallExpr 0xa3242c8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa324278 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa324260 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa323f80 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3242ac <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa324130 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa3242e8 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0xa3250e8 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0xa3250d8 <line:2435:7, line:2437:24>
    (ParenExpr 0xa3250c0 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0xa3250a8 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa324e00 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0xa324db0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
          (CallExpr 0xa324d20 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa324ce8 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0xa324cd0 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0xa324940 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0xa324d90 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa324d58 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0xa324d3c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0xa324b90 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0xa325090 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0xa325068 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa324ef0 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0xa324f68 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa324f30 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa324f14 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0xa324940 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa324fd8 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa324fa0 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0xa324f84 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0xa324b90 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0xa325048 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa325010 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa324ff4 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0xa324940 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa325640 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0xa325630 <col:7, col:38>
    (CXXOperatorCallExpr 0xa325608 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa3255b0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3254e0 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (CallExpr 0xa325578 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa325528 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa325510 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3253e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32555c <col:28> 'const _CharT *' lvalue ParmVar 0xa325230 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa325598 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa325bd0 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0xa325bc0 <col:7, col:38>
    (CXXOperatorCallExpr 0xa325b98 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa325b40 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa325a70 0xa3254e0 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
      (CallExpr 0xa325b08 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa325ab8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa325aa0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa325900 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa325aec <col:28> 'const _CharT *' lvalue ParmVar 0xa325970 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa325b28 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa326220 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0xa326210 <col:7, col:30>
    (UnaryOperator 0xa3261f8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa3261e0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa3261b8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa326160 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa325a70 0xa3254e0 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
          (DeclRefExpr 0xa326130 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa325e70 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa326148 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa326020 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa326720 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0xa326710 <col:7, col:30>
    (UnaryOperator 0xa3266f8 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa3266e0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa3266b8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa326660 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa325a70 0xa3254e0 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
          (DeclRefExpr 0xa326630 <col:16> 'const _CharT *' lvalue ParmVar 0xa326370 '__lhs' 'const _CharT *')
          (DeclRefExpr 0xa326648 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa326520 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa326c30 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0xa326c20 <col:7, col:30>
    (UnaryOperator 0xa326c08 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0xa326bf0 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0xa326bc8 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa326b70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa325a70 0xa3254e0 0xa324ca0 0xa324230 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840)
          (DeclRefExpr 0xa326b40 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3269c0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0xa326b58 <col:25> 'const _CharT *' lvalue ParmVar 0xa326a30 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa3272a8 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0xa327298 <col:7, col:37>
    (CXXOperatorCallExpr 0xa327270 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa327230 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa327160 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (CallExpr 0xa3271f8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3271a8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa327190 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa326ed0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3271dc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa327080 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa327218 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa327800 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0xa3277f0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa3277c8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa327780 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3276b0 0xa327160 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (CallExpr 0xa327748 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3276f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa3276e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa327540 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32772c <col:28> 'const _CharT *' lvalue ParmVar 0xa3275b0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa327768 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa327d28 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0xa327d18 <col:7, col:37>
    (CXXOperatorCallExpr 0xa327cf0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa327cb0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0)
      (CallExpr 0xa327c78 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa327c28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa327c10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa327b00 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa327c5c <col:28> 'const _CharT *' lvalue ParmVar 0xa327950 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa327c98 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa328398 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0xa328388 <col:7, col:37>
    (CXXOperatorCallExpr 0xa328360 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa328320 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa328250 0xa1711d0 0xa189680 0xa18c6c0)
      (CallExpr 0xa3282e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa328298 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa328280 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa327fc0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3282cc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa328170 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa328308 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa3288d0 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0xa3288c0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa328898 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa328850 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa328780 0xa328250 0xa1711d0 0xa189680 0xa18c6c0)
      (CallExpr 0xa328818 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3287c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa3287b0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa328630 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3287fc <col:28> 'const _CharT *' lvalue ParmVar 0xa3286a0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa328838 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa328e00 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0xa328df0 <col:7, col:37>
    (CXXOperatorCallExpr 0xa328dc8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa328d80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa327be0 0xa3276b0 0xa327160 0xa16ffa0 0xa188dc0 0xa18b6f0)
      (CallExpr 0xa328d48 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa328cf8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa328ce0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa328bd0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa328d2c <col:28> 'const _CharT *' lvalue ParmVar 0xa328a20 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa328d68 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa329478 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0xa329468 <col:7, col:38>
    (CXXOperatorCallExpr 0xa329440 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa329400 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa329330 0xa1716f0 0xa189ad0 0xa18cb10)
      (CallExpr 0xa3293c8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa329378 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa329360 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3290a0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa3293ac <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa329250 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa3293e8 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa329a00 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0xa3299f0 <col:7, col:38>
    (CXXOperatorCallExpr 0xa3299c8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa329980 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3298b0 0xa329330 0xa1716f0 0xa189ad0 0xa18cb10)
      (CallExpr 0xa329948 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3298f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa3298e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa329760 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32992c <col:28> 'const _CharT *' lvalue ParmVar 0xa3297d0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa329968 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa329f28 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0xa329f18 <col:7, col:38>
    (CXXOperatorCallExpr 0xa329ef0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa329eb0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90)
      (CallExpr 0xa329e78 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa329e28 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa329e10 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa329d00 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa329e5c <col:28> 'const _CharT *' lvalue ParmVar 0xa329b50 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa329e98 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa32a598 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0xa32a588 <col:7, col:38>
    (CXXOperatorCallExpr 0xa32a560 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa32a520 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa32a450 0xa1726c0 0xa189ef0 0xa18cf90)
      (CallExpr 0xa32a4e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32a498 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa32a480 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32a1c0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32a4cc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32a370 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0xa32a508 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0xa32aad0 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0xa32aac0 <col:7, col:38>
    (CXXOperatorCallExpr 0xa32aa98 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa32aa50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa32a980 0xa32a450 0xa1726c0 0xa189ef0 0xa18cf90)
      (CallExpr 0xa32aa18 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32a9c8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa32a9b0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32a830 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32a9fc <col:28> 'const _CharT *' lvalue ParmVar 0xa32a8a0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0xa32aa38 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa32b000 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0xa32aff0 <col:7, col:38>
    (CXXOperatorCallExpr 0xa32afc8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa32af80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa329de0 0xa3298b0 0xa329330 0xa1716f0 0xa189ad0 0xa18cb10)
      (CallExpr 0xa32af48 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32aef8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa32aee0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32add0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa32af2c <col:28> 'const _CharT *' lvalue ParmVar 0xa32ac20 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0xa32af68 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa32b628 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0xa32b608 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa32b5b8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa32b5a0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32b2c0 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa32b5ec <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32b470 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa32ce38 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0xa32ce28 <line:2697:7, col:63>
    (CallExpr 0xa32ce00 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa32ccd0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
      (DeclRefExpr 0xa32cd04 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa32c9a0 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0xa32cd70 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32cd38 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0xa32cd1c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32cb50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa32cde0 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32cda8 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0xa32cd8c <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32cb50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa32dc68 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0xa32dc58 <col:7, col:51>
    (CallExpr 0xa32dc30 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0xa32db40 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa32db10 0xa32d4c0)
      (DeclRefExpr 0xa32db78 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa32d830 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0xa32db90 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa32d9e0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0xa32dc10 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa32dbc0 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa32dba8 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa32d830 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0xa32dbf8 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0xa32fa80 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0xa32fa50 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0xa32fa28 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa32f9f0 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (ParenExpr 0xa32f9c0 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0xa32f9a8 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0xa32f970 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa32f948 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa32f910 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa32f8d8 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0xa32f8f8 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0xa32f990 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0xa32f9d8 <col:72> 'int' 1)))
  (IntegerLiteral 0xa32fa68 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0xa32fed0 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0xa333900 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0xa332988 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0xa3315f8 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa331518 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa3314c0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa33148c <col:6> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')
        (DeclRefExpr 0xa3314a4 <col:15> '_InIterator' lvalue ParmVar 0xa331220 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa3315d0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa331578 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa33153c <col:24> 'const _Alloc' lvalue ParmVar 0xa331290 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa331560 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa3316a0 <line:84:4, col:37>
      (CallExpr 0xa331680 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa331648 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa331628 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa331610 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2f1c70 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa332a58 <line:87:2, col:19>
    0xa332a20 "_CharT __buf[128]")
  (DeclStmt 0xa332ac0 <line:88:2, col:21>
    0xa332a70 "size_type __len =
      (IntegerLiteral 0xa332aa8 <col:20> 'int' 0)")
  (WhileStmt 0xa332da8 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0xa332c88 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa332b58 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa332b00 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
        (DeclRefExpr 0xa332ad0 <col:9> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')
        (DeclRefExpr 0xa332ae8 <col:18> '_InIterator' lvalue ParmVar 0xa331220 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa332c60 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa332c18 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (DeclRefExpr 0xa332b7c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa332c00 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0xa332bc8 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0xa332bb0 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0xa332b94 <col:42> '_CharT [128]' lvalue Var 0xa332a20 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0xa332be8 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0xa332d90 <line:90:4, line:93:4>
      (BinaryOperator 0xa332d48 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0xa332d00 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa332ca0 <col:6> '_CharT [128]' lvalue Var 0xa332a20 '__buf' '_CharT [128]')
          (UnaryOperator 0xa332ce8 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa332cb8 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa332d30 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa332d14 <col:24> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')))
      (UnaryOperator 0xa332d78 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa332d60 <col:8> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator'))))
  (DeclStmt 0xa332ee8 <line:94:2, col:55>
    0xa332dd0 "std::basic_string::_Rep *__r =
      (CallExpr 0xa332ec0 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa332e28 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa332e4c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa332e88 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa332e70 <col:47> 'int' 0))
        (DeclRefExpr 0xa332ea4 <col:51> 'const _Alloc' lvalue ParmVar 0xa331290 '__a' 'const _Alloc &'))")
  (CallExpr 0xa332fb0 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0xa332ef8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0xa332f60 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa332f28 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa332f10 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0xa332f7c <col:29> '_CharT [128]' lvalue Var 0xa332a20 '__buf' '_CharT [128]')
    (DeclRefExpr 0xa332f94 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa3336f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa332fd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa3336e0 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0xa3336c8 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa333070 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa333018 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
          (DeclRefExpr 0xa332fe8 <col:13> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')
          (DeclRefExpr 0xa333000 <col:22> '_InIterator' lvalue ParmVar 0xa331220 '__end' '_InIterator'))
        (CompoundStmt 0xa3336a8 <line:99:8, line:110:8>
          (IfStmt 0xa333540 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa333158 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa333100 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
              (DeclRefExpr 0xa333094 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0xa3330c8 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0xa3330ac <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0xa333520 <line:101:5, line:107:5>
              (DeclStmt 0xa333308 <line:103:7, col:63>
                0xa333190 "std::basic_string::_Rep *__another =
                  (CallExpr 0xa3332e0 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa3331e8 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0xa333288 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0xa333240 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                      (DeclRefExpr 0xa33320c <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0xa333228 <col:49> 'int' 1))
                    (DeclRefExpr 0xa3332ac <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0xa3332c4 <col:59> 'const _Alloc' lvalue ParmVar 0xa331290 '__a' 'const _Alloc &'))")
              (CallExpr 0xa333428 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0xa333318 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0xa333380 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa333348 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa333330 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0xa333190 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0xa3333f0 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3333b8 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0xa33339c <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0xa33340c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0xa3334b8 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa333468 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa333450 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0xa33349c <col:23> 'const _Alloc' lvalue ParmVar 0xa331290 '__a' 'const _Alloc &'))
              (BinaryOperator 0xa333508 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa3334d8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0xa3334f0 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0xa333190 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0xa333660 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0xa333618 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0xa3335b0 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa333578 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0xa33355c <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0xa333600 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0xa3335cc <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0xa333648 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa33362c <col:33> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')))
          (UnaryOperator 0xa333690 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa333678 <col:5> '_InIterator' lvalue ParmVar 0xa3311e0 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0xa3337d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa333718 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3337c0 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0xa333790 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa333740 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa333728 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa333774 <col:22> 'const _Alloc' lvalue ParmVar 0xa331290 '__a' 'const _Alloc &'))
      (NullStmt 0xa3337b0 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0xa333860 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa333810 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa3337f4 <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa333844 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa332a70 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa3338f0 <line:118:2, col:25>
    (CallExpr 0xa3338d0 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa333898 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa333880 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa332dd0 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0xa334a48 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0xa3341d0 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0xa334118 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa334038 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0xa333fe0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa333fac <col:6> '_InIterator' lvalue ParmVar 0xa333d00 '__beg' '_InIterator')
        (DeclRefExpr 0xa333fc4 <col:15> '_InIterator' lvalue ParmVar 0xa333d40 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0xa3340f0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa334098 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa33405c <col:24> 'const _Alloc' lvalue ParmVar 0xa333db0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa334080 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0xa3341c0 <line:130:4, col:37>
      (CallExpr 0xa3341a0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa334168 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0xa334148 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0xa334130 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2f1c70 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0xa334478 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0xa334330 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0xa334260 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa334210 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0xa15c920 0xa15d350)
        (DeclRefExpr 0xa334248 <col:35> '_InIterator' lvalue ParmVar 0xa333d00 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0xa334308 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa3342b0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
        (DeclRefExpr 0xa334280 <col:45> '_InIterator' lvalue ParmVar 0xa333d00 '__beg' '_InIterator')
        (DeclRefExpr 0xa334298 <col:54> '_InIterator' lvalue ParmVar 0xa333d40 '__end' '_InIterator')))
    (CallExpr 0xa334448 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0xa334438 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa33441c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dae0 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa334468 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa334408 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0xa3343c0 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0xa3345a8 <line:136:2, line:137:22>
    0xa3344a0 "const size_type __dnew =
      (CXXStaticCastExpr 0xa334590 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0xa334560 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa3344f8 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
          (DeclRefExpr 0xa33452c <col:64> '_InIterator' lvalue ParmVar 0xa333d00 '__beg' '_InIterator')
          (DeclRefExpr 0xa334544 <line:137:15> '_InIterator' lvalue ParmVar 0xa333d40 '__end' '_InIterator')))")
  (DeclStmt 0xa3346e8 <line:139:2, col:56>
    0xa3345d0 "std::basic_string::_Rep *__r =
      (CallExpr 0xa3346c0 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa334628 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0xa33464c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3344a0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa334688 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa334670 <col:48> 'int' 0))
        (DeclRefExpr 0xa3346a4 <col:52> 'const _Alloc' lvalue ParmVar 0xa333db0 '__a' 'const _Alloc &'))")
  (IfStmt 0xa334830 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3346f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa334818 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0xa3347f0 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa334708 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0xa2edbe0 0xa2edd70 0xa2edf30 0xa2f1670 0xa2f1850)
        (CallExpr 0xa3347a0 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa334768 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa33474c <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0xa3345d0 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0xa3347bc <col:39> '_InIterator' lvalue ParmVar 0xa333d00 '__beg' '_InIterator')
        (DeclRefExpr 0xa3347d4 <col:46> '_InIterator' lvalue ParmVar 0xa333d40 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0xa334910 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa334850 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3348f8 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0xa3348c8 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa334878 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa334860 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0xa3345d0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0xa3348ac <col:22> 'const _Alloc' lvalue ParmVar 0xa333db0 '__a' 'const _Alloc &'))
      (NullStmt 0xa3348e8 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0xa3349a8 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa334948 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0xa33492c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0xa3345d0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa334990 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3344a0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa334a38 <line:148:2, col:25>
    (CallExpr 0xa334a18 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3349e0 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0xa3349c8 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0xa3345d0 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0xa335598 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0xa335220 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0xa335168 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa335088 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa335030 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa334ffc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa334df0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa335018 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0xa335140 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa3350e8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
        (DeclRefExpr 0xa3350ac <col:23> 'const _Alloc' lvalue ParmVar 0xa334ea0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0xa3350d0 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0xa335210 <line:158:2, col:35>
      (CallExpr 0xa3351f0 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3351b8 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0xa335198 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0xa335180 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2f1c70 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0xa335368 <line:161:7, col:58>
    0xa335250 "std::basic_string::_Rep *__r =
      (CallExpr 0xa335340 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa3352a8 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa3352cc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa334df0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa335308 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa3352f0 <col:50> 'int' 0))
        (DeclRefExpr 0xa335324 <col:54> 'const _Alloc' lvalue ParmVar 0xa334ea0 '__a' 'const _Alloc &'))")
  (IfStmt 0xa335470 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0xa335378 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa334df0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa335448 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa335390 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa2ed960 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0xa3353f8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3353c0 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa3353a8 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa335250 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0xa335414 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa334df0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa33542c <col:36> '_CharT' lvalue ParmVar 0xa334e30 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0xa3354f8 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3354a8 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa33548c <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa335250 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa3354dc <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa334df0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0xa335588 <line:166:7, col:30>
    (CallExpr 0xa335568 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa335530 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa335518 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa335250 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0xa335d48 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa335c08 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0xa335be8 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa335bb0 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa335b94 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa335aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0xa335cb8 <col:43, col:71> '_Alloc'
    (CallExpr 0xa335c98 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa335c60 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0xa335c48 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa335aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0xa335d28 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa335cf0 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0xa335cd4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa335aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0xa335dc0 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa335d88 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0xa335d6c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa335aa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0xa335e20 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0xa3364f0 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0xa336458 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (CXXUnresolvedConstructExpr 0xa3364a0 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0xa3364c0 <col:45, col:52> '_CharT')
  (DeclRefExpr 0xa3364d8 <col:55> 'const _Alloc' lvalue ParmVar 0xa336330 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa336518 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0xa336330 '__a' 'const _Alloc &')
) (CompoundStmt 0xa336570 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0xa30a458 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0xa337050 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0xa336bf0 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (CXXOperatorCallExpr 0xa336df8 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa336db0 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
    (CallExpr 0xa336c80 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa336c48 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa336c30 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa336a60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa336d88 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa336cb8 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa336c9c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa336a60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa336cec <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa336aa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa336d50 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa337008 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa336fc0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
    (CXXOperatorCallExpr 0xa336f80 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa336f38 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
      (CallExpr 0xa336e70 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa336e38 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa336e1c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa336a60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa336f10 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa336ea8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa336e8c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa336a60 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa336edc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa336aa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa336ef4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa336ae0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa336fa4 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa336aa0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0xa337038 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0xa337080 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0xa3370e0 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0xa337c10 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0xa337800 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (CXXOperatorCallExpr 0xa3379c0 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0xa337978 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
    (CallExpr 0xa337890 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa337858 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0xa337840 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3375d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0xa337950 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3378c8 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa3378ac <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3375d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa3378fc <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa337610 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0xa337914 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0xa337bd0 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0xa337b88 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
    (CXXOperatorCallExpr 0xa337b48 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa337b00 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
      (CallExpr 0xa337a38 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa337a00 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0xa3379e4 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3375d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0xa337ad8 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa337a70 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa337a54 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3375d0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa337aa4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa337610 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa337abc <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa337650 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0xa337b6c <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa337610 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa337bf4 <col:20> 'const _Alloc' lvalue ParmVar 0xa3376c0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa337c38 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0xa3376c0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa337c90 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a478 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0xa3384a0 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0xa338390 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (DeclRefExpr 0xa3383d0 <col:32> 'const _CharT *' lvalue ParmVar 0xa3381a0 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0xa338460 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0xa338418 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
    (DeclRefExpr 0xa3383e8 <col:37> 'const _CharT *' lvalue ParmVar 0xa3381a0 '__s' 'const _CharT *')
    (DeclRefExpr 0xa338400 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3381e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0xa338484 <col:48> 'const _Alloc' lvalue ParmVar 0xa338250 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa3384c8 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0xa338250 '__a' 'const _Alloc &')
) (CompoundStmt 0xa338520 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a498 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0xa338e48 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0xa338be8 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (DeclRefExpr 0xa338c28 <col:32> 'const _CharT *' lvalue ParmVar 0xa338a50 '__s' 'const _CharT *')
  (ConditionalOperator 0xa338e10 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0xa338c40 <line:215:37> 'const _CharT *' lvalue ParmVar 0xa338a50 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0xa338d48 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa338d00 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
      (DeclRefExpr 0xa338c58 <col:43> 'const _CharT *' lvalue ParmVar 0xa338a50 '__s' 'const _CharT *')
      (CallExpr 0xa338ce0 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa338c90 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0xa338cc4 <col:69> 'const _CharT *' lvalue ParmVar 0xa338a50 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0xa338de8 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa338da0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
      (DeclRefExpr 0xa338d6c <col:11> 'const _CharT *' lvalue ParmVar 0xa338a50 '__s' 'const _CharT *')
      (DeclRefExpr 0xa338d84 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0xa338e2c <col:23> 'const _Alloc' lvalue ParmVar 0xa338ac0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa338e70 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0xa338ac0 '__a' 'const _Alloc &')
) (CompoundStmt 0xa338ed0 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a4b8 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0xa339628 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0xa3395a0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (DeclRefExpr 0xa3395e0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3393b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0xa3395f8 <col:37> '_CharT' lvalue ParmVar 0xa3393f0 '__c' '_CharT')
  (DeclRefExpr 0xa339610 <col:42> 'const _Alloc' lvalue ParmVar 0xa339460 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa339650 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0xa339460 '__a' 'const _Alloc &')
) (CompoundStmt 0xa3396b0 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0xa30a4d8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0xa339eb8 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0xa339e30 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0xa3022a0 0xa331420 0xa333f40 0xa334f60)
  (DeclRefExpr 0xa339e70 <col:32> '_InputIterator' lvalue ParmVar 0xa339be0 '__beg' '_InputIterator')
  (DeclRefExpr 0xa339e88 <col:39> '_InputIterator' lvalue ParmVar 0xa339c20 '__end' '_InputIterator')
  (DeclRefExpr 0xa339ea0 <col:46> 'const _Alloc' lvalue ParmVar 0xa339c90 '__a' 'const _Alloc &'))
, (DeclRefExpr 0xa339ee0 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0xa339c90 '__a' 'const _Alloc &')
) (CompoundStmt 0xa339f40 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa33ac00 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0xa33aba8 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa33a790 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa33a738 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
      (CallExpr 0xa33a6a8 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa33a688 <col:11> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa33a678 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa33a718 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33a6e0 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0xa33a6c4 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33a3f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa33ab88 <line:247:2, line:253:2>
      (DeclStmt 0xa33a860 <line:249:4, col:52>
        0xa33a7c0 "const allocator_type __a =
          (CallExpr 0xa33a840 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33a808 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0xa33a7f8 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa33aa30 <line:250:4, col:71>
        0xa33a8a0 "_CharT *__tmp =
          (CallExpr 0xa33aa08 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33a948 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0xa33a928 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33a8f0 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa33a8d4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33a3f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0xa33a97c <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0xa33a7c0 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0xa33a9e8 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33a9b0 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0xa33a994 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33a3f0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0xa33aae0 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33aa90 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33aa70 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33aa50 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33aa40 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33aac4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa33a7c0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa33ab68 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa33ab10 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa33ab50 <col:12> '_CharT *' lvalue Var 0xa33a8a0 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0xa33abf0 <line:254:7, col:15>
    (UnaryOperator 0xa33abd8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33abc8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0xa33bc60 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0xa33b3a8 <line:262:46>)
  (CallExpr 0xa33b498 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0xa33b3c8 <col:7> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa33b3b8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0xa33b430 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa33b3f8 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa33b3e8 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa33b44c <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa33b464 <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0xa33bc40 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0xa33b5d0 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0xa33b508 <col:11, col:26> '<dependent type>'
        (MemberExpr 0xa33b4d0 <col:11> '<bound member function type>' ->_M_disjunct 0xa2ed460
          (CXXThisExpr 0xa33b4c0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa33b4f0 <col:23> 'const _CharT *' lvalue ParmVar 0xa33b0e0 '__s' 'const _CharT *'))
      (CallExpr 0xa33b5b0 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33b578 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0xa33b558 <col:31, col:38> '<dependent type>'
            (MemberExpr 0xa33b538 <col:31> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33b528 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa33b720 <line:265:2, col:61>
      (CallExpr 0xa33b6f0 <col:9, col:61> '<dependent type>'
        (MemberExpr 0xa33b5f8 <col:9> '<bound member function type>' ->_M_replace_safe 0xa301940
          (CXXThisExpr 0xa33b5e8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa33b638 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa33b620 <col:35> 'int' 0))
        (CallExpr 0xa33b6a0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33b668 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa33b658 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa33b6bc <col:53> 'const _CharT *' lvalue ParmVar 0xa33b0e0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa33b6d4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa33bc20 <line:267:2, line:276:2>
      (DeclStmt 0xa33b860 <line:269:4, col:43>
        0xa33b740 "const size_type __pos =
          (CXXOperatorCallExpr 0xa33b838 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa33b800 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa33b774 <col:28> 'const _CharT *' lvalue ParmVar 0xa33b0e0 '__s' 'const _CharT *')
            (CallExpr 0xa33b7e0 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0xa33b7a0 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0xa33bb08 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa33b8e8 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa33b8a0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
          (DeclRefExpr 0xa33b870 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33b740 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa33b888 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa33b9c8 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0xa33b90c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa33b978 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa33b938 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa33b994 <col:25> 'const _CharT *' lvalue ParmVar 0xa33b0e0 '__s' 'const _CharT *')
          (DeclRefExpr 0xa33b9ac <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa33bae8 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0xa33b9f0 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33b740 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0xa33bac0 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0xa33ba08 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed7a0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0xa33ba70 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0xa33ba30 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa33ba8c <col:25> 'const _CharT *' lvalue ParmVar 0xa33b0e0 '__s' 'const _CharT *')
            (DeclRefExpr 0xa33baa4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0xa33bbc8 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33bb78 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33bb58 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33bb38 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33bb28 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33bbac <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33b120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0xa33bc10 <line:275:4, col:12>
        (UnaryOperator 0xa33bbf8 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa33bbe8 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0xa33cb78 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0xa33cb20 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33c3d8 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33c110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa33caf8 <line:285:2, line:292:2>
      (CallExpr 0xa33c4a8 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0xa33c400 <col:4> '<bound member function type>' ->_M_check_length 0xa2ed1c0
          (CXXThisExpr 0xa33c3f0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa33c440 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa33c428 <col:30> 'int' 0))
        (DeclRefExpr 0xa33c45c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33c110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa33c474 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa33c608 <line:287:4, col:46>
        0xa33c4e0 "const size_type __len =
          (CXXOperatorCallExpr 0xa33c5e0 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa33c598 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (DeclRefExpr 0xa33c514 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33c110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33c578 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33c540 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa33c530 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa33c848 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0xa33c7b0 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa33c6e0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa33c698 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa33c618 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33c4e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33c678 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33c640 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa33c630 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa33c790 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33c758 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa33c738 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa33c718 <col:36> '<bound member function type>' ->_M_rep 0xa2eccf0
                  (CXXThisExpr 0xa33c708 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa33c828 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33c7d8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33c7c8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa33c80c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33c4e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa33ca10 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0xa33c864 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa2ed960 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0xa33c9b8 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa33c958 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa33c8d0 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa33c890 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa33c938 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33c900 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0xa33c8f0 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33c9dc <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33c110 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa33c9f4 <col:45> '_CharT' lvalue ParmVar 0xa33c150 '__c' '_CharT'))
      (CallExpr 0xa33cad8 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33ca88 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33ca68 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33ca48 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33ca38 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33cabc <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33c4e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa33cb68 <line:293:7, col:15>
    (UnaryOperator 0xa33cb50 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33cb40 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0xa33de58 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0xa33d318 <line:301:46>)
  (IfStmt 0xa33de00 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33d324 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33d090 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa33ddd8 <line:303:2, line:319:2>
      (CallExpr 0xa33d3f8 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0xa33d350 <col:4> '<bound member function type>' ->_M_check_length 0xa2ed1c0
          (CXXThisExpr 0xa33d340 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0xa33d390 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa33d378 <col:30> 'int' 0))
        (DeclRefExpr 0xa33d3ac <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33d090 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0xa33d3c4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0xa33d558 <line:305:4, col:46>
        0xa33d430 "const size_type __len =
          (CXXOperatorCallExpr 0xa33d530 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa33d4e8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (DeclRefExpr 0xa33d464 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33d090 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33d4c8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33d490 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa33d480 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa33db40 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0xa33d700 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa33d630 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa33d5e8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa33d568 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33d430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33d5c8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33d590 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa33d580 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa33d6e0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33d6a8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa33d688 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa33d668 <col:36> '<bound member function type>' ->_M_rep 0xa2eccf0
                  (CXXThisExpr 0xa33d658 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0xa33db28 <line:307:6, line:316:6>
          (IfStmt 0xa33db08 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0xa33d760 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0xa33d728 <col:12> '<bound member function type>' ->_M_disjunct 0xa2ed460
                (CXXThisExpr 0xa33d718 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa33d748 <col:24> 'const _CharT *' lvalue ParmVar 0xa33d050 '__s' 'const _CharT *'))
            (CallExpr 0xa33d7e0 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33d790 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa33d780 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0xa33d7c4 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33d430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0xa33dae8 <line:311:3, line:315:3>
              (DeclStmt 0xa33d930 <line:312:5, col:44>
                0xa33d810 "const size_type __off =
                  (CXXOperatorCallExpr 0xa33d908 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0xa33d8d0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                    (DeclRefExpr 0xa33d844 <col:29> 'const _CharT *' lvalue ParmVar 0xa33d050 '__s' 'const _CharT *')
                    (CallExpr 0xa33d8b0 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0xa33d870 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0xa33d9a0 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa33d950 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa33d940 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa33d984 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33d430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0xa33dad0 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa33d9c0 <col:5> 'const _CharT *' lvalue ParmVar 0xa33d050 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0xa33daa8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa33da60 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                  (CallExpr 0xa33da28 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0xa33d9e8 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa33da44 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33d810 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0xa33dcf0 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0xa33db5c <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa33dc98 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa33dc50 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa33dbc8 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa33db88 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa33dc30 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33dbf8 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa33dbe8 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33dcbc <col:38> 'const _CharT *' lvalue ParmVar 0xa33d050 '__s' 'const _CharT *')
        (DeclRefExpr 0xa33dcd4 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33d090 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa33ddb8 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33dd68 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33dd48 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33dd28 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33dd18 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33dd9c <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33d430 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa33de48 <line:320:7, col:15>
    (UnaryOperator 0xa33de30 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33de20 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa33ed60 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0xa33e658 <line:328:7, col:44>
    0xa33e5b0 "const size_type __size =
      (CallExpr 0xa33e638 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33e600 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa33e5e4 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33e320 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0xa33ed08 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33e668 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e5b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa33ece8 <line:330:2, line:336:2>
      (DeclStmt 0xa33e7b8 <line:331:4, col:49>
        0xa33e690 "const size_type __len =
          (CXXOperatorCallExpr 0xa33e790 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0xa33e748 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (DeclRefExpr 0xa33e6c4 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e5b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33e728 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33e6f0 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0xa33e6e0 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa33e9f8 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0xa33e960 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa33e890 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa33e848 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa33e7c8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e690 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33e828 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33e7f0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa33e7e0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa33e940 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33e908 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa33e8e8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa33e8c8 <col:36> '<bound member function type>' ->_M_rep 0xa2eccf0
                  (CXXThisExpr 0xa33e8b8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa33e9d8 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33e988 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33e978 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa33e9bc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e690 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa33ec00 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0xa33ea14 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa33eb50 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa33eb08 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa33ea80 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa33ea40 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa33eae8 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33eab0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa33eaa0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa33ebc8 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33eb90 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0xa33eb74 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33e320 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa33ebe4 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e5b0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa33ecc8 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33ec78 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33ec58 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33ec38 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33ec28 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33ecac <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33e690 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa33ed50 <line:337:7, col:15>
    (UnaryOperator 0xa33ed38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33ed28 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0xa33fe58 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0xa33f5d8 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa33f558 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa33f53c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33f220 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa33f58c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f260 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa33f5a4 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0xa33f6c0 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0xa33f5fc <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f2a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa33f698 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa33f630 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa33f614 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33f220 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa33f664 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f260 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa33f67c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f2a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0xa33fe00 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0xa33f6d8 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f2a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa33fde0 <line:348:2, line:354:2>
      (DeclStmt 0xa33f828 <line:349:4, col:46>
        0xa33f700 "const size_type __len =
          (CXXOperatorCallExpr 0xa33f800 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa33f7b8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (DeclRefExpr 0xa33f734 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f2a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33f798 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33f760 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa33f750 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0xa33fa68 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0xa33f9d0 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa33f900 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa33f8b8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa33f838 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33f700 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa33f898 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa33f860 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0xa33f850 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0xa33f9b0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33f978 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0xa33f958 <col:36, col:43> '<dependent type>'
                (MemberExpr 0xa33f938 <col:36> '<bound member function type>' ->_M_rep 0xa2eccf0
                  (CXXThisExpr 0xa33f928 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0xa33fa48 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa33f9f8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa33f9e8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa33fa2c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33f700 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa33fcf8 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0xa33fa84 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0xa33fbc0 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa33fb78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa33faf0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa33fab0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0xa33fb58 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33fb20 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0xa33fb10 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa33fcb8 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa33fc70 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa33fc38 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa33fc00 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0xa33fbe4 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa33f220 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa33fc54 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f260 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa33fcdc <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa33f2a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa33fdc0 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa33fd70 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa33fd50 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa33fd30 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa33fd20 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa33fda4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa33f700 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa33fe48 <line:355:7, col:15>
    (UnaryOperator 0xa33fe30 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa33fe20 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0xa341670 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0xa340660 <line:363:47>)
  (CallExpr 0xa3406e8 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0xa340680 <col:8> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa340670 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa3406a0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa340310 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa3406b8 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0xa3407c8 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0xa340720 <col:8> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa340710 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0xa340760 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0xa340748 <col:34> 'int' 0))
    (DeclRefExpr 0xa34077c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa340794 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0xa341650 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0xa340900 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa340838 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa340800 <col:12> '<bound member function type>' ->_M_disjunct 0xa2ed460
          (CXXThisExpr 0xa3407f0 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa340820 <col:24> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *'))
      (CallExpr 0xa3408e0 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3408a8 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa340888 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa340868 <col:32> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa340858 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa340a28 <line:367:10, col:62>
      (CallExpr 0xa3409f8 <col:17, col:62> '<dependent type>'
        (MemberExpr 0xa340928 <col:17> '<bound member function type>' ->_M_replace_safe 0xa301940
          (CXXThisExpr 0xa340918 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa340948 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa340310 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa3409a8 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa340968 <col:50> 'int' 0))
        (DeclRefExpr 0xa3409c4 <col:54> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
        (DeclRefExpr 0xa3409dc <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa341628 <line:369:10, line:386:10>
      (DeclStmt 0xa340b60 <line:371:12, col:51>
        0xa340a40 "const size_type __off =
          (CXXOperatorCallExpr 0xa340b38 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa340b00 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa340a74 <col:36> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
            (CallExpr 0xa340ae0 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0xa340aa0 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0xa340be8 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0xa340b80 <col:12> '<bound member function type>' ->_M_mutate 0xa2f1b60
          (CXXThisExpr 0xa340b70 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa340ba0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa340310 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0xa340bb8 <col:29> 'int' 0)
        (DeclRefExpr 0xa340bd0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0xa340d20 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0xa340c10 <col:12> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0xa340cf8 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa340cb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (CallExpr 0xa340c78 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa340c38 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa340c94 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa340a40 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa340ea0 <line:374:12, col:43>
        0xa340d70 "_CharT *__p =
          (CXXOperatorCallExpr 0xa340e78 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa340e30 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CallExpr 0xa340df8 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0xa340db8 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa340e14 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa340310 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0xa3415d0 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa340fb0 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa340f68 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
          (CXXOperatorCallExpr 0xa340f28 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa340ee0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (DeclRefExpr 0xa340eb0 <col:16> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
            (DeclRefExpr 0xa340ec8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa340f4c <col:30> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *'))
        (CallExpr 0xa341038 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0xa340fd4 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0xa340fec <col:22> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
          (DeclRefExpr 0xa341004 <col:27> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
          (DeclRefExpr 0xa34101c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa3415b0 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa3410d8 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa341090 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
            (DeclRefExpr 0xa341060 <col:21> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
            (DeclRefExpr 0xa341078 <col:28> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *'))
          (CallExpr 0xa3411e8 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0xa3410fc <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0xa341114 <col:22> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
            (CXXOperatorCallExpr 0xa3411a8 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0xa341160 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (DeclRefExpr 0xa34112c <col:27> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
              (DeclRefExpr 0xa341144 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa3411cc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0xa341590 <line:380:14, line:384:14>
            (DeclStmt 0xa3412e8 <line:381:9, col:44>
              0xa341220 "const size_type __nleft =
                (CXXOperatorCallExpr 0xa3412c0 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa341288 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (DeclRefExpr 0xa341254 <col:35> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
                  (DeclRefExpr 0xa34126c <col:41> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *'))")
            (CallExpr 0xa341358 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0xa3412f8 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0xa341310 <col:24> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
              (DeclRefExpr 0xa341328 <col:29> 'const _CharT *' lvalue ParmVar 0xa340380 '__s' 'const _CharT *')
              (DeclRefExpr 0xa341340 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341220 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0xa341568 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0xa341380 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0xa341410 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0xa3413c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                (DeclRefExpr 0xa341398 <col:24> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
                (DeclRefExpr 0xa3413b0 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341220 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa3414b0 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa341468 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                (DeclRefExpr 0xa341434 <col:39> '_CharT *' lvalue Var 0xa340d70 '__p' '_CharT *')
                (DeclRefExpr 0xa34144c <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa341540 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa341508 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (DeclRefExpr 0xa3414d4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3403c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa3414ec <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341220 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0xa341618 <line:385:12, col:20>
        (UnaryOperator 0xa341600 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa3415f0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa342378 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0xa341e48 <line:395:28>)
  (DeclStmt 0xa341f28 <line:400:8, col:49>
    0xa341e60 "const size_type __size =
      (CXXOperatorCallExpr 0xa341f00 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa341ec8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa341e94 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa341bc0 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa341eac <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa341b80 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0xa342358 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0xa341f38 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341e60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa342310 <line:402:3, line:407:3>
      (DeclStmt 0xa342060 <line:403:5, col:50>
        0xa341f60 "const size_type __pos =
          (CXXOperatorCallExpr 0xa342038 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0xa342000 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa341f94 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa341b80 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0xa341fe0 <col:39, col:49> '<dependent type>'
              (MemberExpr 0xa341fc0 <col:39> '<bound member function type>' ->_M_ibegin 0xa2ecda0
                (CXXThisExpr 0xa341fb0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0xa342110 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0xa342080 <col:5> '<bound member function type>' ->_M_mutate 0xa2f1b60
          (CXXThisExpr 0xa342070 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa3420a0 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341f60 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa3420b8 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341e60 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0xa3420f0 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0xa3420d8 <col:40> 'int' 0)))
      (CallExpr 0xa3421c0 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa342188 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0xa342168 <col:5, col:12> '<dependent type>'
            (MemberExpr 0xa342148 <col:5> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa342138 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0xa342300 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0xa3422e0 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0xa3422b8 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0xa342270 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CallExpr 0xa342238 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0xa3421f8 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa342254 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa341f60 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0xa342348 <line:409:3, col:10>
      (DeclRefExpr 0xa342330 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa341b80 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa343c98 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0xa342bc0 <line:418:48>)
  (CallExpr 0xa342c50 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0xa342be0 <col:8> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa342bd0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa342c00 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa342c18 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0xa342d18 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa342c74 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa342cf0 <col:15, col:35> '<dependent type>'
      (MemberExpr 0xa342ca0 <col:15> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa342c90 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa342cc0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa342cd8 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0xa342dc8 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0xa342d40 <col:8> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa342d30 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa342d60 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa342d78 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa342d90 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0xa342e38 <line:422:8, col:19>
    0xa342e00 "bool __left")
  (IfStmt 0xa343c78 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0xa342f58 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0xa342e90 <col:12, col:27> '<dependent type>'
        (MemberExpr 0xa342e58 <col:12> '<bound member function type>' ->_M_disjunct 0xa2ed460
          (CXXThisExpr 0xa342e48 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa342e78 <col:24> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *'))
      (CallExpr 0xa342f38 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa342f00 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0xa342ee0 <col:32, col:39> '<dependent type>'
            (MemberExpr 0xa342ec0 <col:32> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa342eb0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0xa343030 <line:424:10, col:55>
      (CallExpr 0xa343000 <col:17, col:55> '<dependent type>'
        (MemberExpr 0xa342f80 <col:17> '<bound member function type>' ->_M_replace_safe 0xa301940
          (CXXThisExpr 0xa342f70 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa342fa0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa342fb8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa342fd0 <col:46> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa342fe8 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0xa343c58 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0xa343498 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0xa343278 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0xa343260 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0xa343040 <col:18> '_Bool' lvalue Var 0xa342e00 '__left' '_Bool')
            (CXXOperatorCallExpr 0xa343238 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa3431f0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
              (CXXOperatorCallExpr 0xa3430d0 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa343088 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                (DeclRefExpr 0xa343058 <col:27> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *')
                (DeclRefExpr 0xa343070 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0xa3431c8 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0xa343180 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                (CallExpr 0xa343148 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0xa343108 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa343164 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0xa343470 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa343428 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
          (CXXOperatorCallExpr 0xa3433e8 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0xa3433a0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CXXOperatorCallExpr 0xa343360 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa343318 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CallExpr 0xa3432e0 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0xa3432a0 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa3432fc <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa343384 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa34340c <col:34> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *')))
      (CompoundStmt 0xa343a50 <line:427:3, line:434:3>
        (DeclStmt 0xa3435e0 <line:429:5, col:38>
          0xa3434c0 "size_type __off =
            (CXXOperatorCallExpr 0xa3435b8 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0xa343580 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa3434f4 <col:23> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *')
              (CallExpr 0xa343560 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa343520 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0xa343710 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0xa343700 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3435f0 <col:5> '_Bool' lvalue Var 0xa342e00 '__left' '_Bool'))
          (DeclRefExpr 0xa343608 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3434c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0xa3436e8 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0xa3436c8 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa343620 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3434c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0xa3436a0 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa343668 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (DeclRefExpr 0xa343638 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0xa343650 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0xa3437a8 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0xa343740 <col:5> '<bound member function type>' ->_M_mutate 0xa2f1b60
            (CXXThisExpr 0xa343730 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa343760 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa343778 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa343790 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa3439f0 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0xa3437d0 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa3438b8 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa343870 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CallExpr 0xa343838 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0xa3437f8 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa343854 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa3439b0 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa343968 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CallExpr 0xa343930 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0xa3438f0 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa34394c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3434c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa3439d4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0xa343a40 <line:433:5, col:13>
          (UnaryOperator 0xa343a28 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0xa343a18 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0xa343c40 <line:436:3, line:440:3>
        (DeclStmt 0xa343b08 <line:438:5, col:40>
          0xa343a80 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0xa343ae8 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0xa343ab4 <col:30> 'const _CharT *' lvalue ParmVar 0xa3428e0 '__s' 'const _CharT *')
              (DeclRefExpr 0xa343acc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0xa343c30 <line:439:5, col:62>
          (CallExpr 0xa343c00 <col:12, col:62> '<dependent type>'
            (MemberExpr 0xa343b28 <col:12> '<bound member function type>' ->_M_replace_safe 0xa301940
              (CXXThisExpr 0xa343b18 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0xa343b48 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342830 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa343b60 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342870 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0xa343bc8 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa343b90 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0xa343b78 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa343a80 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0xa343be4 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa342920 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0xa3444c0 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0xa3443a8 <line:448:7, line:449:65>
    0xa3441c0 "const size_type __size =
      (CXXOperatorCallExpr 0xa344380 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa344338 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (UnaryExprOrTypeTraitExpr 0xa344200 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0xa344320 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0xa3442e8 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0xa3442c0 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa344278 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CXXDependentScopeMemberExpr 0xa344228 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa344218 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0xa344260 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa344308 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0xa344498 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa344410 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0xa3443f0 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0xa3443d8 <col:24> 'const _Alloc' lvalue ParmVar 0xa3440a0 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0xa344468 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0xa344448 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0xa344480 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3441c0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0xa344c70 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0xa344a40 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa344a08 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0xa3449b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
      (CallExpr 0xa344920 <col:11, col:18> '<dependent type>'
        (MemberExpr 0xa344900 <col:11> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa3448f0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0xa344978 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0xa344958 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0xa34493c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0xa2f1c70 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0xa344a30 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0xa344ba8 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0xa344ae8 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa344ab0 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa344a90 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa344a70 <col:11> '<bound member function type>' ->_M_rep 0xa2eccf0
            (CXXThisExpr 0xa344a60 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa344b80 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0xa344b18 <col:2> '<bound member function type>' ->_M_mutate 0xa2f1b60
        (CXXThisExpr 0xa344b08 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0xa344b38 <col:12> 'int' 0)
      (IntegerLiteral 0xa344b50 <col:15> 'int' 0)
      (IntegerLiteral 0xa344b68 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0xa344c50 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa344c18 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa344bf8 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa344bd8 <col:7> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa344bc8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0xa3464f8 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0xa345230 <line:472:7, col:48>
    0xa345190 "const size_type __old_size =
      (CallExpr 0xa345210 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3451d8 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa3451c8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa3453a0 <line:473:7, col:64>
    0xa345250 "const size_type __new_size =
      (CXXOperatorCallExpr 0xa345378 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa345340 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CXXOperatorCallExpr 0xa345300 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa3452b8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (DeclRefExpr 0xa345284 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa345190 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa34529c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345080 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa345324 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345040 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa345500 <line:474:7, col:63>
    0xa3453c0 "const size_type __how_much =
      (CXXOperatorCallExpr 0xa3454d8 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa3454a0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CXXOperatorCallExpr 0xa345460 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0xa345428 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa3453f4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa345190 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa34540c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa345484 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345040 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa346418 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0xa3456a8 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa3455d8 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa345590 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
        (DeclRefExpr 0xa345510 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa345250 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa345570 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa345538 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0xa345528 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa345688 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa345650 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0xa345630 <col:44, col:51> '<dependent type>'
            (MemberExpr 0xa345610 <col:44> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa345600 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa345f80 <line:477:2, line:490:2>
      (DeclStmt 0xa345758 <line:479:4, col:46>
        0xa3456d0 "const allocator_type __a =
          (CallExpr 0xa345738 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa345718 <col:31> '<bound member function type>' ->get_allocator 0xa3049b0
              (CXXThisExpr 0xa345708 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa3458d0 <line:480:4, col:66>
        0xa345780 "std::basic_string::_Rep *__r =
          (CallExpr 0xa3458a8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3457d8 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa34580c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa345250 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0xa345870 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa345838 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0xa345828 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa34588c <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0xa3456d0 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0xa345a30 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0xa3458e0 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa345a08 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0xa3458f8 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0xa345960 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa345928 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa345910 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa345780 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0xa3459d0 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0xa345990 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa3459ec <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0xa345dc0 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0xa345a4c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3453c0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0xa345d98 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0xa345a64 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa345bd8 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa345b90 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CXXOperatorCallExpr 0xa345b50 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0xa345b08 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CallExpr 0xa345ad0 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa345a98 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0xa345a7c <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa345780 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0xa345aec <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa345b74 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345080 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa345d58 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0xa345d10 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CXXOperatorCallExpr 0xa345cd0 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa345c88 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CallExpr 0xa345c50 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0xa345c10 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa345c6c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa345cf4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345040 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa345d7c <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3453c0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0xa345e80 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa345e30 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa345e10 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa345df0 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa345de0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa345e64 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa3456d0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa345f60 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa345eb0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa345f40 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa345f08 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0xa345ef0 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0xa345780 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0xa3463f8 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0xa346070 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0xa345fa8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3453c0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa346048 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa345ff0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
          (DeclRefExpr 0xa345fc0 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345040 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa345fd8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345080 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0xa3463e0 <line:492:2, line:496:2>
        (CallExpr 0xa3463b8 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0xa346088 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed7a0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0xa3461f8 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa3461b0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CXXOperatorCallExpr 0xa346170 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa346128 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CallExpr 0xa3460f0 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0xa3460b0 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa34610c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa346194 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345080 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0xa346378 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0xa346330 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
            (CXXOperatorCallExpr 0xa3462f0 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0xa3462a8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (CallExpr 0xa346270 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0xa346230 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa34628c <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa346314 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa345040 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa34639c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3453c0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0xa3464d8 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa346488 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0xa346468 <col:7, col:14> '<dependent type>'
        (MemberExpr 0xa346448 <col:7> '<bound member function type>' ->_M_rep 0xa2eccf0
          (CXXThisExpr 0xa346438 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0xa3464bc <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa345250 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0xa30a4f0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0xa347140 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0xa347120 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0xa346b20 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0xa346a50 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0xa3469f8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
        (DeclRefExpr 0xa346974 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa346890 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa3469d8 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3469a0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa346990 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa346b00 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa346ac8 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0xa346aa8 <col:40, col:47> '<dependent type>'
            (MemberExpr 0xa346a88 <col:40> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa346a78 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0xa3470f8 <line:506:9, line:514:9>
      (IfStmt 0xa346cc0 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa346c00 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa346bb8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
          (DeclRefExpr 0xa346b38 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa346890 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa346b98 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa346b60 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0xa346b50 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa346ca8 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0xa346c24 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa346890 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0xa346c88 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa346c50 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa346c40 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0xa346d78 <line:510:4, col:46>
        0xa346cf0 "const allocator_type __a =
          (CallExpr 0xa346d58 <col:31, col:45> '<dependent type>'
            (MemberExpr 0xa346d38 <col:31> '<bound member function type>' ->get_allocator 0xa3049b0
              (CXXThisExpr 0xa346d28 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0xa346fa0 <line:511:4, col:65>
        0xa346dc0 "_CharT *__tmp =
          (CallExpr 0xa346f78 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa346e48 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0xa346e28 <col:20, col:27> '<dependent type>'
                (MemberExpr 0xa346e08 <col:20> '<bound member function type>' ->_M_rep 0xa2eccf0
                  (CXXThisExpr 0xa346df8 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0xa346e7c <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0xa346cf0 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0xa346f50 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0xa346f18 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa346e94 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa346890 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0xa346ef8 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa346ec0 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0xa346eb0 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0xa347050 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa347000 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0xa346fe0 <col:4, col:11> '<dependent type>'
            (MemberExpr 0xa346fc0 <col:4> '<bound member function type>' ->_M_rep 0xa2eccf0
              (CXXThisExpr 0xa346fb0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0xa347034 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0xa346cf0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0xa3470d8 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0xa347080 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0xa3470c0 <col:12> '_CharT *' lvalue Var 0xa346dc0 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0xa3480e8 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0xa347718 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0xa347650 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa347618 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0xa3475f8 <col:11, col:18> '<dependent type>'
          (MemberExpr 0xa3475d8 <col:11> '<bound member function type>' ->_M_rep 0xa2eccf0
            (CXXThisExpr 0xa3475c8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0xa3476f8 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3476c0 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0xa3476a0 <col:2, col:9> '<dependent type>'
          (MemberExpr 0xa347680 <col:2> '<bound member function type>' ->_M_rep 0xa2eccf0
            (CXXThisExpr 0xa347670 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0xa3478c8 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0xa3477e0 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3477a8 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0xa347788 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa347750 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa347734 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0xa3478a8 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa347870 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0xa347850 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa347818 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0xa3477fc <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0xa3480c8 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa347a18 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa3479c0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
      (CallExpr 0xa347930 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3478f8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa3478e8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa3479a0 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa347968 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0xa34794c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0xa347c90 <line:527:2, line:531:2>
      (DeclStmt 0xa347b18 <line:528:4, col:29>
        0xa347a70 "_CharT *__tmp =
          (CallExpr 0xa347af8 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0xa347ab8 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0xa347be8 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa347b38 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa347bc8 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa347b90 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0xa347b78 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0xa347c70 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa347c20 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0xa347c08 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0xa347c54 <col:16> '_CharT *' lvalue Var 0xa347a70 '__tmp' '_CharT *')))
    (CompoundStmt 0xa3480a8 <line:534:2, line:541:2>
      (DeclStmt 0xa347e30 <line:535:4, line:536:29>
        0xa347cc0 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0xa347e08 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa347d28 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0xa347d08 <col:30> '<bound member function type>' ->_M_ibegin 0xa2ecda0
                (CXXThisExpr 0xa347cf8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa347d78 <col:43, col:51> '<dependent type>'
              (MemberExpr 0xa347d58 <col:43> '<bound member function type>' ->_M_iend 0xa2ece20
                (CXXThisExpr 0xa347d48 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa347de8 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa347db0 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0xa347d94 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0xa347ff8 <line:537:4, line:538:31>
        0xa347e50 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0xa347fd0 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0xa347ed8 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa347ea0 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0xa347e84 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa347f48 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa347f10 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa347ef4 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa347fb0 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa347f78 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0xa347f68 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0xa348048 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0xa348018 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa348008 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa34802c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa347e50 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0xa348090 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa348060 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3474e0 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0xa348078 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa347cc0 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0xa34aa40 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0xa349b38 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa349a38 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa3499f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
      (DeclRefExpr 0xa3499c0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa3499d8 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa32f870 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa349b08 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0xa349af8 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa349adc <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa349b28 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa349ac8 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0xa349a94 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0xa349bb0 <line:578:7, col:40>
    0xa349b60 "const size_type __pagesize =
      (IntegerLiteral 0xa349b98 <col:36> 'int' 4096)")
  (DeclStmt 0xa349c70 <line:579:7, col:63>
    0xa349bd0 "const size_type __malloc_header_size =
      (BinaryOperator 0xa349c58 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0xa349c48 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa349c08 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0xa349c30 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0xa349e80 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0xa349df0 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa349cf8 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa349cb0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
        (DeclRefExpr 0xa349c80 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa349c98 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348670 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa349dc8 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa349d80 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (DeclRefExpr 0xa349d1c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa349d68 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0xa349d38 <col:55> 'int' 2)
          (DeclRefExpr 0xa349d50 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348670 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0xa349e68 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0xa349e08 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0xa349e50 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0xa349e20 <col:15> 'int' 2)
        (DeclRefExpr 0xa349e38 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348670 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0xa34a068 <line:593:7, col:74>
    0xa349eb0 "size_type __size =
      (CXXOperatorCallExpr 0xa34a040 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0xa349ff8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (BinaryOperator 0xa349fc0 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0xa349f88 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0xa349f60 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa349f18 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
              (DeclRefExpr 0xa349ee4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0xa349f00 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0xa349fa8 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0xa349fe0 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0xa34a158 <line:595:7, col:65>
    0xa34a080 "const size_type __adj_size =
      (CXXOperatorCallExpr 0xa34a130 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa34a0e8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (DeclRefExpr 0xa34a0b4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa349eb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa34a0cc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa349bd0 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa34a738 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0xa34a2a8 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa34a1e0 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa34a198 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
        (DeclRefExpr 0xa34a168 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34a080 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa34a180 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa349b60 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0xa34a280 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa34a238 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
        (DeclRefExpr 0xa34a204 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa34a21c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348670 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0xa34a718 <line:597:2, line:604:2>
      (DeclStmt 0xa34a3c8 <line:598:4, col:66>
        0xa34a2d0 "const size_type __extra =
          (CXXOperatorCallExpr 0xa34a3a0 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa34a368 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa34a304 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa349b60 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0xa34a350 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0xa34a31c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34a080 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa34a334 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa349b60 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0xa34a440 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa34a3d8 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0xa34a428 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0xa34a3f0 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34a2d0 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0xa34a410 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0xa34a548 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa34a4d8 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa34a490 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (DeclRefExpr 0xa34a460 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa34a478 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa32f870 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa34a530 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0xa34a4fc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa34a514 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa32f870 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0xa34a700 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0xa34a564 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa349eb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0xa34a6d8 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa34a690 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
          (BinaryOperator 0xa34a658 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0xa34a620 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0xa34a5f8 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0xa34a5b0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
                (DeclRefExpr 0xa34a57c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0xa34a598 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0xa34a640 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0xa34a678 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0xa34a858 <line:608:7, col:65>
    0xa34a770 "void *__place =
      (CallExpr 0xa34a838 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34a7e8 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0xa34a7c8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0xa34a7b0 <col:40> 'const _Alloc' lvalue ParmVar 0xa3486e0 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0xa34a81c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa349eb0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa34a918 <line:609:7, col:37>
    0xa34a880 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0xa34a8d8 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0xa34a8b4 <col:24> 'void *' lvalue Var 0xa34a770 '__place' 'void *'))")
  (BinaryOperator 0xa34a990 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa34a940 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa34a928 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa34a880 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0xa34a974 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa348630 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0xa34a9f8 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34a9c0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa34a9a8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa34a880 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0xa34aa30 <line:619:7, col:14>
    (DeclRefExpr 0xa34aa14 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa34a880 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0xa30a440 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0xa34b520 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0xa34b0e8 <line:628:7, col:64>
    0xa34afe0 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0xa34b0c0 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa34b078 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (CXXDependentScopeMemberExpr 0xa34b028 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0xa34b018 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa34b05c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34ae90 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa34b228 <line:629:7, line:630:15>
    0xa34b110 "std::basic_string::_Rep *__r =
      (CallExpr 0xa34b200 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0xa34b164 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0xa348900 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0xa34b184 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34afe0 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0xa34b1b0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0xa34b1a0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0xa34b1e4 <line:630:7> 'const _Alloc' lvalue ParmVar 0xa34ae50 '__alloc' 'const _Alloc &'))")
  (IfStmt 0xa34b3c8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa34b248 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0xa34b238 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0xa34b3a0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0xa34b27c <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0xa34b2e8 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34b2b0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa34b294 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0xa34b110 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0xa34b338 <col:29, col:40> '<dependent type>'
        (MemberExpr 0xa34b318 <col:29> '<bound member function type>' ->_M_refdata 0xa2e8af0
          (CXXThisExpr 0xa34b308 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0xa34b368 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0xa34b358 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0xa34b480 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34b400 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa34b3e4 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0xa34b110 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0xa34b448 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0xa34b438 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0xa34b510 <line:635:7, col:30>
    (CallExpr 0xa34b4f0 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa34b4b8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa34b4a0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0xa34b110 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0xa34bea0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0xa34bac0 <line:643:7, col:44>
    0xa34ba20 "const size_type __size =
      (CallExpr 0xa34baa0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34ba68 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa34ba58 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0xa34bb60 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0xa34bae0 <col:7> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa34bad0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa34bb00 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34ba20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34bb18 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34b8c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa34bb30 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0xa34be80 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa34bc00 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa34bbb8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa34bb88 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34ba20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa34bba0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34b8c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0xa34bd18 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa34bc38 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa34bc28 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa34bcd8 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa34bca0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa34bc6c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34b8c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa34bc84 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34ba20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa34bcfc <col:29> '_CharT' lvalue ParmVar 0xa34b900 '__c' '_CharT'))
    (IfStmt 0xa34be60 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa34bdb8 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa34bd70 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (DeclRefExpr 0xa34bd3c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34b8c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa34bd54 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34ba20 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0xa34be40 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34bdf0 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0xa34bde0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa34be24 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34b8c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0xa34ccd8 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0xa34c858 <line:659:2, col:36>
    0xa34c7d0 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0xa34c838 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0xa34c804 <col:25> '_InputIterator' lvalue ParmVar 0xa34c420 '__k1' '_InputIterator')
        (DeclRefExpr 0xa34c81c <col:31> '_InputIterator' lvalue ParmVar 0xa34c460 '__k2' '_InputIterator'))")
  (DeclStmt 0xa34c938 <line:660:2, col:36>
    0xa34c870 "const size_type __n1 =
      (CXXOperatorCallExpr 0xa34c910 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa34c8d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa34c8a4 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa34c3e0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0xa34c8bc <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa34c3a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0xa34ca80 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0xa34c958 <col:2> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa34c948 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa34c978 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34c870 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0xa34c9e0 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa34c9a8 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0xa34c990 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34c7d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0xa34ca40 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0xa34ccc8 <line:662:2, line:663:21>
    (CallExpr 0xa34cc98 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0xa34cab8 <line:662:9> '<bound member function type>' ->_M_replace_safe 0xa301940
        (CXXThisExpr 0xa34caa8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0xa34cb78 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa34cb40 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa34cad8 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0xa34c3a0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0xa34cb20 <col:32, col:42> '<dependent type>'
          (MemberExpr 0xa34cb00 <col:32> '<bound member function type>' ->_M_ibegin 0xa2ecda0
            (CXXThisExpr 0xa34caf0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa34cb9c <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa34c870 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0xa34cc08 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34cbd0 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0xa34cbb4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34c7d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0xa34cc78 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34cc40 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa34cc24 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34c7d0 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0xa34d868 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0xa34d5c8 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0xa34d500 <col:7> '<bound member function type>' ->_M_check_length 0xa2ed1c0
      (CXXThisExpr 0xa34d4f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa34d520 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d1d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34d538 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d210 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa34d590 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0xa34d668 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0xa34d600 <col:7> '<bound member function type>' ->_M_mutate 0xa3450e0
      (CXXThisExpr 0xa34d5f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa34d620 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d190 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34d638 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d1d0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34d650 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d210 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa34d810 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0xa34d690 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d210 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa34d7e8 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0xa34d6a8 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0xa2ed960 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0xa34d790 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa34d748 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (CallExpr 0xa34d710 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0xa34d6d0 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa34d72c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d190 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa34d7b4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34d210 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa34d7cc <col:38> '_CharT' lvalue ParmVar 0xa34d250 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0xa34d858 <line:676:7, col:15>
    (UnaryOperator 0xa34d840 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa34d830 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0xa34e348 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0xa34e148 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0xa34e0e0 <col:7> '<bound member function type>' ->_M_mutate 0xa3450e0
      (CXXThisExpr 0xa34e0d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa34e100 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34dd40 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34e118 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34dd80 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0xa34e130 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34de30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0xa34e2f0 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0xa34e170 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34de30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa34e2c8 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0xa34e188 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0xa34e270 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0xa34e228 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa322590 0xa322ae0 0xa323060 0xa323880)
        (CallExpr 0xa34e1f0 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa34e1b0 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa34e20c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34dd40 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa34e294 <col:30> 'const _CharT *' lvalue ParmVar 0xa34ddf0 '__s' 'const _CharT *')
      (DeclRefExpr 0xa34e2ac <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa34de30 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa34e338 <line:688:7, col:15>
    (UnaryOperator 0xa34e320 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa34e310 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa34ef58 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0xa34e8e0 <line:696:39>)
  (DeclStmt 0xa34ea80 <line:697:7, col:66>
    0xa34ea50 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa34eb40 <line:698:7, col:62>
    0xa34eb10 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa34ec30 <line:699:7, col:55>
    0xa34eb70 "const __size_type __len =
      (CallExpr 0xa34ec10 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa34ebd0 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0xa34ebf4 <col:49> 'const _CharT *' lvalue ParmVar 0xa34e5c0 '__lhs' 'const _CharT *'))")
  (DeclStmt 0xa34ec88 <line:700:7, col:26>
    0xa34ec50 "__string_type __str")
  (CallExpr 0xa34ede0 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34ecb0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34ec98 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34ec50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa34edb8 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa34ed70 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa322ae0 0xa323060)
      (DeclRefExpr 0xa34ece4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa34eb70 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0xa34ed50 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34ed18 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa34ecfc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa34e770 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0xa34ee80 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34ee18 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34ee00 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34ec50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa34ee4c <col:20> 'const _CharT *' lvalue ParmVar 0xa34e5c0 '__lhs' 'const _CharT *')
    (DeclRefExpr 0xa34ee64 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa34eb70 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0xa34ef10 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34eec0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34eea4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34ec50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa34eef4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa34e770 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa34ef48 <line:704:7, col:14>
    (DeclRefExpr 0xa34ef30 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34ec50 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0xa34fb08 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0xa34f670 <line:711:7, col:66>
    0xa34f640 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa34f730 <line:712:7, col:62>
    0xa34f700 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa34f788 <line:713:7, col:26>
    0xa34f750 "__string_type __str")
  (DeclStmt 0xa34f868 <line:714:7, col:45>
    0xa34f7c0 "const __size_type __len =
      (CallExpr 0xa34f848 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa34f810 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa34f7f4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa34f370 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0xa34f968 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34f890 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34f878 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34f750 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0xa34f940 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa34f8f8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
      (DeclRefExpr 0xa34f8c4 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa34f7c0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0xa34f8e0 <col:29> 'int' 1)))
  (CallExpr 0xa34fa30 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34f9a0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34f988 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34f750 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0xa34f9f8 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0xa34f9e0 <col:32> 'int' 1))
    (DeclRefExpr 0xa34fa14 <col:36> '_CharT' lvalue ParmVar 0xa34f1c0 '__lhs' '_CharT'))
  (CallExpr 0xa34fac0 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa34fa70 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa34fa54 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34f750 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0xa34faa4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa34f370 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0xa34faf8 <line:718:7, col:14>
    (DeclRefExpr 0xa34fae0 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0xa34f750 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0xa30a538 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0xa350680 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0xa3503c8 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0xa350360 <col:7> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa350350 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa350380 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3500c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa350398 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0xa350490 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa3503ec <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350080 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa350468 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa350418 <col:13> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa350408 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa350438 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3500c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa350450 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350080 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0xa3504a8 <line:728:46>)
  (IfStmt 0xa350638 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0xa3504b4 <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350080 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa350610 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0xa3504cc <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0xa2ed630 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0xa3504e4 <col:10> '_CharT *' lvalue ParmVar 0xa350040 '__s' '_CharT *')
      (CXXOperatorCallExpr 0xa3505d0 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa350588 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
        (CallExpr 0xa350550 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0xa350510 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa35056c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3500c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0xa3505f4 <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350080 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0xa350670 <line:732:7, col:14>
    (DeclRefExpr 0xa350654 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350080 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa351980 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0xa350ec0 <line:740:46>)
  (DeclStmt 0xa350f80 <line:741:7, col:44>
    0xa350ee0 "const size_type __size =
      (CallExpr 0xa350f60 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa350f28 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa350f18 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa351048 <line:742:7, col:39>
    0xa350fa0 "const _CharT *__data =
      (CallExpr 0xa351028 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0xa350fe8 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0xa351208 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3510e0 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa351088 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
      (DeclRefExpr 0xa351058 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0xa351070 <col:18> 'int' 0))
    (ReturnStmt 0xa3511f8 <line:745:2, col:35>
      (ConditionalOperator 0xa3511d8 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0xa351180 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa351138 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
          (DeclRefExpr 0xa351104 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa35111c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa350ee0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa3511a4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa3511bc <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0xa351938 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3512a0 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa351258 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
      (DeclRefExpr 0xa351224 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa35123c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa350ee0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa351920 <line:748:2, line:754:2>
      (ForStmt 0xa3518f8 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3513b8 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa351370 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
          (DeclRefExpr 0xa3512c4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa351348 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa351310 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa3512dc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa350ee0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa3512f4 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0xa3513f8 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa3513dc <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0xa3518d8 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0xa351898 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0xa351500 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa351438 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0xa3514a0 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0xa35146c <col:26> 'const _CharT *' lvalue Var 0xa350fa0 '__data' 'const _CharT *')
                (DeclRefExpr 0xa351484 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0xa3514e8 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa3514b4 <col:41> 'const _CharT *' lvalue ParmVar 0xa350bb0 '__s' 'const _CharT *')
                (IntegerLiteral 0xa3514d0 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0xa351870 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa351818 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
              (CallExpr 0xa3517d8 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa351548 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa351680 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0xa351638 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
                  (CXXOperatorCallExpr 0xa3515f8 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0xa3515b0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
                    (DeclRefExpr 0xa35157c <col:27> 'const _CharT *' lvalue Var 0xa350fa0 '__data' 'const _CharT *')
                    (DeclRefExpr 0xa351594 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0xa351620 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0xa351720 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0xa3516d8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
                  (DeclRefExpr 0xa3516a4 <col:6> 'const _CharT *' lvalue ParmVar 0xa350bb0 '__s' 'const _CharT *')
                  (IntegerLiteral 0xa3516c0 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0xa3517b0 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa351778 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (DeclRefExpr 0xa351744 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350c30 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0xa351760 <col:21> 'int' 1)))
              (IntegerLiteral 0xa351800 <col:27> 'int' 0)))
          (ReturnStmt 0xa3518c8 <line:753:8, col:15>
            (DeclRefExpr 0xa3518b0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa350bf0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa351970 <line:755:7, col:14>
    (DeclRefExpr 0xa351954 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0xa30a580 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0xa352808 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0xa3521c0 <line:763:7, col:29>
    0xa352170 "size_type __ret =
      (DeclRefExpr 0xa3521a4 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0xa352280 <line:764:7, col:44>
    0xa3521e0 "const size_type __size =
      (CallExpr 0xa352260 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa352228 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa352218 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa3527c0 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa352308 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa3522c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa352290 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa351ee0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa3522a8 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3521e0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa3527a0 <line:766:2, line:772:2>
      (DeclStmt 0xa352408 <line:767:4, col:36>
        0xa352360 "const _CharT *__data =
          (CallExpr 0xa3523e8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa3523a8 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0xa3524e8 <line:768:4, col:40>
        0xa352420 "const size_type __n =
          (CXXOperatorCallExpr 0xa3524c0 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0xa352488 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa352454 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa3521e0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa35246c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa351ee0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0xa352698 <line:769:4, col:67>
        0xa352510 "const _CharT *__p =
          (CallExpr 0xa352670 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa352568 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0xa352618 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa3525d0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
              (DeclRefExpr 0xa35259c <col:42> 'const _CharT *' lvalue Var 0xa352360 '__data' 'const _CharT *')
              (DeclRefExpr 0xa3525b4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa351ee0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa35263c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa352420 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0xa352654 <col:63> '_CharT' lvalue ParmVar 0xa351ea0 '__c' '_CharT'))")
      (IfStmt 0xa352780 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0xa3526a8 <line:770:8> 'const _CharT *' lvalue Var 0xa352510 '__p' 'const _CharT *')
        (BinaryOperator 0xa352768 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0xa3526c0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa352170 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0xa352740 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa352708 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa3526d8 <col:14> 'const _CharT *' lvalue Var 0xa352510 '__p' 'const _CharT *')
            (DeclRefExpr 0xa3526f0 <col:20> 'const _CharT *' lvalue Var 0xa352360 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa3527f8 <line:773:7, col:14>
    (DeclRefExpr 0xa3527dc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa352170 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa353798 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0xa353040 <line:781:46>)
  (DeclStmt 0xa353100 <line:782:7, col:44>
    0xa353060 "const size_type __size =
      (CallExpr 0xa3530e0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3530a8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa353098 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa353750 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa353188 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0xa353140 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
      (DeclRefExpr 0xa353110 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352db0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa353128 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa353060 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa353730 <line:784:2, line:793:2>
      (BinaryOperator 0xa353310 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa3531ac <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352d70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa3532e8 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0xa3531e0 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
          (CXXUnresolvedConstructExpr 0xa3532b0 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0xa353288 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa353250 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (DeclRefExpr 0xa353220 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa353060 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0xa353238 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352db0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0xa3532cc <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352d70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0xa3533e8 <line:786:4, col:36>
        0xa353340 "const _CharT *__data =
          (CallExpr 0xa3533c8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0xa353388 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0xa353718 <line:787:4, line:792:22>
        (CompoundStmt 0xa353630 <line:788:6, line:791:6>
          (IfStmt 0xa353610 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa3535c0 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0xa353568 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
              (CallExpr 0xa353528 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa353420 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0xa3534d0 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa353488 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
                  (DeclRefExpr 0xa353454 <col:33> 'const _CharT *' lvalue Var 0xa353340 '__data' 'const _CharT *')
                  (DeclRefExpr 0xa35346c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352d70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa3534f4 <col:49> 'const _CharT *' lvalue ParmVar 0xa352d30 '__s' 'const _CharT *')
                (DeclRefExpr 0xa35350c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352db0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0xa353550 <col:62> 'int' 0))
            (ReturnStmt 0xa353600 <line:790:3, col:10>
              (DeclRefExpr 0xa3535e4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352d70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa3536f0 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa3536a8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa353678 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa353644 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa352d70 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa353690 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa353788 <line:794:7, col:14>
    (DeclRefExpr 0xa35376c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0xa30a5c8 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa354458 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0xa354000 <line:802:7, col:38>
    0xa353f60 "size_type __size =
      (CallExpr 0xa353fe0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa353fa8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa353f98 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa354410 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0xa354010 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa3543f8 <line:804:2, line:810:2>
      (IfStmt 0xa354128 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3540b8 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa354070 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa354040 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa354028 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa354054 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa353cd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa354110 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa3540dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa3540f4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa353cd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0xa3543d0 <line:807:4, line:809:15>
        (UnaryOperator 0xa354160 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa354144 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa354220 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa3541d8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa3541a8 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa354174 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa3541c0 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0xa3543b0 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0xa354360 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa354270 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0xa354330 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0xa3542f8 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0xa3542b8 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa354314 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0xa354344 <col:45> '_CharT' lvalue ParmVar 0xa353c90 '__c' '_CharT'))
          (ReturnStmt 0xa3543a0 <line:809:8, col:15>
            (DeclRefExpr 0xa354384 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa353f60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0xa354448 <line:811:7, col:14>
    (DeclRefExpr 0xa35442c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa355060 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0xa354c90 <line:819:46>)
  (ForStmt 0xa355010 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa354da8 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0xa354c9c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa354a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0xa354d80 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa354d38 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (DeclRefExpr 0xa354cb4 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3549c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0xa354d18 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa354ce0 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0xa354cd0 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0xa354dd8 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa354dc0 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3549c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa354ff8 <line:821:2, line:825:2>
      (DeclStmt 0xa354f88 <line:822:4, col:69>
        0xa354e00 "const _CharT *__p =
          (CallExpr 0xa354f60 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa354e58 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0xa354e8c <col:42> 'const _CharT *' lvalue ParmVar 0xa354980 '__s' 'const _CharT *')
            (DeclRefExpr 0xa354ea4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa354a00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0xa354f48 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0xa354f10 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0xa354ed0 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa354f2c <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3549c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0xa354fd8 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0xa354f98 <line:823:8> 'const _CharT *' lvalue Var 0xa354e00 '__p' 'const _CharT *')
        (ReturnStmt 0xa354fc8 <line:824:6, col:13>
          (DeclRefExpr 0xa354fb0 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3549c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0xa355050 <line:826:7, col:14>
    (DeclRefExpr 0xa355034 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa355df0 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0xa355890 <line:834:46>)
  (DeclStmt 0xa355950 <line:835:7, col:38>
    0xa3558b0 "size_type __size =
      (CallExpr 0xa355930 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3558f8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa3558e8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa355da8 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0xa355990 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa355960 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa355978 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa355600 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0xa355d90 <line:837:2, line:846:2>
      (IfStmt 0xa355ac0 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa355a50 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa355a08 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa3559d8 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa3559a8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa3559ec <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3555c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa355aa8 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa355a74 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa355a8c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3555c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa355d78 <line:840:4, line:845:24>
        (CompoundStmt 0xa355c80 <line:841:6, line:844:6>
          (IfStmt 0xa355c60 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0xa355c10 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa355b08 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa355b3c <col:30> 'const _CharT *' lvalue ParmVar 0xa355580 '__s' 'const _CharT *')
              (DeclRefExpr 0xa355b54 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa355600 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0xa355bf8 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0xa355bc0 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0xa355b80 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa355bdc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0xa355c50 <line:843:3, col:10>
              (DeclRefExpr 0xa355c38 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0xa355d50 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa355cf8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
          (UnaryOperator 0xa355cc8 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0xa355c94 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa3558b0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0xa355ce0 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa355de0 <line:847:7, col:14>
    (DeclRefExpr 0xa355dc4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa356950 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0xa356620 <line:855:46>)
  (ForStmt 0xa356900 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3566f8 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa3566b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa35662c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa356690 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa356658 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa356648 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa356738 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa35671c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa3568e0 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0xa3568a0 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0xa356878 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa356770 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3567a4 <col:25> 'const _CharT *' lvalue ParmVar 0xa356310 '__s' 'const _CharT *')
          (DeclRefExpr 0xa3567bc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356390 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0xa356860 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0xa356828 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa3567e8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa356844 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0xa3568d0 <line:858:4, col:11>
        (DeclRefExpr 0xa3568b4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa356940 <line:859:7, col:14>
    (DeclRefExpr 0xa356924 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0xa30a6a0 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0xa357410 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0xa3573c0 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3571d0 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa357188 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa357108 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356e80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0xa357168 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa357130 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0xa357120 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0xa357210 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3571f4 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356e80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0xa3573a0 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0xa357360 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0xa357338 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa357248 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0xa357308 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0xa3572d0 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0xa357290 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa3572ec <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356e80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa35731c <col:41> '_CharT' lvalue ParmVar 0xa356e40 '__c' '_CharT')))
      (ReturnStmt 0xa357390 <line:869:4, col:11>
        (DeclRefExpr 0xa357374 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa356e80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0xa357400 <line:870:7, col:14>
    (DeclRefExpr 0xa3573e4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0xa3580d0 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0xa357c40 <line:878:46>)
  (DeclStmt 0xa357d00 <line:879:7, col:38>
    0xa357c60 "size_type __size =
      (CallExpr 0xa357ce0 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa357ca8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa357c98 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa358088 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0xa357d10 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa358070 <line:881:2, line:890:2>
      (IfStmt 0xa357e28 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa357db8 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa357d70 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa357d40 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa357d28 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa357d54 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa357970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa357e10 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa357ddc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa357df4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa357970 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa358058 <line:884:4, line:889:19>
        (CompoundStmt 0xa357ff8 <line:885:6, line:888:6>
          (IfStmt 0xa357fd8 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0xa357f98 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0xa357f70 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa357e68 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa357e9c <col:31> 'const _CharT *' lvalue ParmVar 0xa357930 '__s' 'const _CharT *')
                (DeclRefExpr 0xa357eb4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3579b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0xa357f58 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0xa357f20 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0xa357ee0 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa357f3c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0xa357fc8 <line:887:3, col:10>
              (DeclRefExpr 0xa357fac <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa358040 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa35800c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa357c60 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa3580c0 <line:891:7, col:14>
    (DeclRefExpr 0xa3580a4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0xa30a6e8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa2ec9e0 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0xa358ce8 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0xa358930 <line:899:7, col:38>
    0xa358890 "size_type __size =
      (CallExpr 0xa358910 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3588d8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0xa3588c8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0xa358ca0 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0xa358940 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0xa358c88 <line:901:2, line:910:2>
      (IfStmt 0xa358a58 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa3589e8 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa3589a0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (UnaryOperator 0xa358970 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa358958 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0xa358984 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa358600 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0xa358a40 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0xa358a0c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0xa358a24 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa358600 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0xa358c70 <line:904:4, line:909:19>
        (CompoundStmt 0xa358c10 <line:905:6, line:908:6>
          (IfStmt 0xa358bf0 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0xa358bb0 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0xa358b88 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa358a98 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0xa358b58 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa358b20 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0xa358ae0 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0xa358b3c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0xa358b6c <col:48> '_CharT' lvalue ParmVar 0xa3585c0 '__c' '_CharT')))
            (ReturnStmt 0xa358be0 <line:907:3, col:10>
              (DeclRefExpr 0xa358bc4 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0xa358c58 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0xa358c24 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0xa358890 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0xa358cd8 <line:911:7, col:14>
    (DeclRefExpr 0xa358cbc <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa330530 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0xa3598d0 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0xa359290 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0xa359220 <col:7> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa359210 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa359240 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359080 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa359258 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa359358 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0xa3592b4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3590c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa359330 <col:13, col:32> '<dependent type>'
      (MemberExpr 0xa3592e0 <col:13> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa3592d0 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa359300 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359080 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa359318 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3590c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa359428 <line:921:7, col:45>
    0xa359380 "const size_type __osize =
      (CallExpr 0xa359408 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3593d0 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0xa3593b4 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa359110 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa359520 <line:922:7, col:53>
    0xa359440 "const size_type __len =
      (CallExpr 0xa3594f8 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa359490 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa3594c8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3590c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa3594e0 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa359380 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa359778 <line:923:7, col:77>
    0xa359540 "int __r =
      (CallExpr 0xa359750 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa359598 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa3596a0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa359658 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
          (CallExpr 0xa359620 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa3595e0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa35963c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359080 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0xa359718 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3596e0 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa3596c4 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa359110 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0xa359734 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa359440 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa359878 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0xa3597c0 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa3597b0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3597a0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa359788 <col:12> 'int' lvalue Var 0xa359540 '__r' 'int'))))
    (BinaryOperator 0xa359860 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0xa3597d4 <col:2> 'int' lvalue Var 0xa359540 '__r' 'int')
      (CallExpr 0xa359838 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0xa3597ec <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa359804 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa3590c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35981c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa359380 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa3598c0 <line:926:7, col:14>
    (ImplicitCastExpr 0xa3598b0 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa359894 <col:14> 'int' lvalue Var 0xa359540 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0xa35a6c8 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0xa359f28 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0xa359eb8 <col:7> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa359ea8 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa359ed8 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359c80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa359ef0 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0xa359fe8 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa359f68 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0xa359f4c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa359d10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0xa359f9c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa359fb4 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa35a0b0 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0xa35a00c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359cc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa35a088 <col:14, col:35> '<dependent type>'
      (MemberExpr 0xa35a038 <col:14> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa35a028 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa35a058 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359c80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa35a070 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359cc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0xa35a188 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0xa35a0c8 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa35a160 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35a0f8 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0xa35a0e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa359d10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0xa35a12c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa35a144 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa35a290 <line:939:7, col:51>
    0xa35a1b0 "const size_type __len =
      (CallExpr 0xa35a268 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa35a200 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa35a238 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359cc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35a250 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa35a570 <line:940:7, line:941:39>
    0xa35a2b0 "int __r =
      (CallExpr 0xa35a548 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35a308 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa35a410 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa35a3c8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
          (CallExpr 0xa35a390 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa35a350 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa35a3ac <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359c80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0xa35a508 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0xa35a4c0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
          (CallExpr 0xa35a488 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35a450 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa35a434 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa359d10 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0xa35a4a4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d50 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa35a52c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35a1b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa35a670 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0xa35a5b8 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35a5a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa35a598 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa35a580 <col:12> 'int' lvalue Var 0xa35a2b0 '__r' 'int'))))
    (BinaryOperator 0xa35a658 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa35a5cc <col:2> 'int' lvalue Var 0xa35a2b0 '__r' 'int')
      (CallExpr 0xa35a630 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa35a5e4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa35a5fc <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359cc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35a614 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa359d90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa35a6b8 <line:944:7, col:14>
    (ImplicitCastExpr 0xa35a6a8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa35a68c <col:14> 'int' lvalue Var 0xa35a2b0 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0xa35b120 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0xa35abb8 <line:952:37>)
  (DeclStmt 0xa35ac70 <line:953:7, col:44>
    0xa35abd0 "const size_type __size =
      (CallExpr 0xa35ac50 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ac18 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa35ac08 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0xa35ad58 <line:954:7, col:57>
    0xa35ac90 "const size_type __osize =
      (CallExpr 0xa35ad38 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ace8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa35ad1c <col:53> 'const _CharT *' lvalue ParmVar 0xa35aaa0 '__s' 'const _CharT *'))")
  (DeclStmt 0xa35ae50 <line:955:7, col:56>
    0xa35ad70 "const size_type __len =
      (CallExpr 0xa35ae28 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa35adc0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa35adf8 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35abd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35ae10 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35ac90 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa35afc8 <line:956:7, col:60>
    0xa35ae70 "int __r =
      (CallExpr 0xa35afa0 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35aec8 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0xa35af50 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0xa35af10 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa35af6c <col:49> 'const _CharT *' lvalue ParmVar 0xa35aaa0 '__s' 'const _CharT *')
        (DeclRefExpr 0xa35af84 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35ad70 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa35b0c8 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0xa35b010 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35b000 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa35aff0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa35afd8 <col:12> 'int' lvalue Var 0xa35ae70 '__r' 'int'))))
    (BinaryOperator 0xa35b0b0 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0xa35b024 <col:2> 'int' lvalue Var 0xa35ae70 '__r' 'int')
      (CallExpr 0xa35b088 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0xa35b03c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa35b054 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35abd0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35b06c <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35ac90 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa35b110 <line:959:7, col:14>
    (ImplicitCastExpr 0xa35b100 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa35b0e4 <col:14> 'int' lvalue Var 0xa35ae70 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0xa35bd38 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0xa35b6a0 <line:967:37>)
  (CallExpr 0xa35b730 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0xa35b6c0 <col:7> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa35b6b0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa35b6e0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b4c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa35b6f8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa35b7f8 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa35b754 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b500 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa35b7d0 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa35b780 <col:14> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa35b770 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa35b7a0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b4c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa35b7b8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b500 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa35b8e8 <line:970:7, col:57>
    0xa35b820 "const size_type __osize =
      (CallExpr 0xa35b8c8 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35b878 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0xa35b8ac <col:53> 'const _CharT *' lvalue ParmVar 0xa35b570 '__s' 'const _CharT *'))")
  (DeclStmt 0xa35b9e0 <line:971:7, col:54>
    0xa35b900 "const size_type __len =
      (CallExpr 0xa35b9b8 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa35b950 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa35b988 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b500 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35b9a0 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35b820 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa35bbe0 <line:972:7, col:68>
    0xa35ba00 "int __r =
      (CallExpr 0xa35bbb8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35ba58 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa35bb60 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa35bb18 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
          (CallExpr 0xa35bae0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa35baa0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa35bafc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b4c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa35bb84 <col:57> 'const _CharT *' lvalue ParmVar 0xa35b570 '__s' 'const _CharT *')
        (DeclRefExpr 0xa35bb9c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35b900 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa35bce0 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0xa35bc28 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35bc18 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa35bc08 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa35bbf0 <col:12> 'int' lvalue Var 0xa35ba00 '__r' 'int'))))
    (BinaryOperator 0xa35bcc8 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0xa35bc3c <col:2> 'int' lvalue Var 0xa35ba00 '__r' 'int')
      (CallExpr 0xa35bca0 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0xa35bc54 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa35bc6c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35b500 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35bc84 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35b820 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa35bd28 <line:975:7, col:14>
    (ImplicitCastExpr 0xa35bd18 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa35bcfc <col:14> 'int' lvalue Var 0xa35ba00 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0xa35c8b8 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0xa35c300 <line:984:47>)
  (CallExpr 0xa35c390 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0xa35c320 <col:7> '<bound member function type>' ->_M_check 0xa2ed000
      (CXXThisExpr 0xa35c310 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa35c340 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0xa35c358 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0xa35c458 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0xa35c3b4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c120 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0xa35c430 <col:14, col:34> '<dependent type>'
      (MemberExpr 0xa35c3e0 <col:14> '<bound member function type>' ->_M_limit 0xa2ed320
        (CXXThisExpr 0xa35c3d0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa35c400 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0xa35c418 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c120 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0xa35c560 <line:987:7, col:51>
    0xa35c480 "const size_type __len =
      (CallExpr 0xa35c538 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa35c4d0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
        (DeclRefExpr 0xa35c508 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c120 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35c520 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c1d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0xa35c760 <line:988:7, col:68>
    0xa35c580 "int __r =
      (CallExpr 0xa35c738 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35c5d8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa35c6e0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0xa35c698 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa34f490 0xa34e890 0xa18a9d0 0xa321d70 0xa323880 0xa323060)
          (CallExpr 0xa35c660 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0xa35c620 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa35c67c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c0e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0xa35c704 <col:57> 'const _CharT *' lvalue ParmVar 0xa35c190 '__s' 'const _CharT *')
        (DeclRefExpr 0xa35c71c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0xa35c480 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0xa35c860 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0xa35c7a8 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa35c798 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa35c788 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0xa35c770 <col:12> 'int' lvalue Var 0xa35c580 '__r' 'int'))))
    (BinaryOperator 0xa35c848 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0xa35c7bc <col:2> 'int' lvalue Var 0xa35c580 '__r' 'int')
      (CallExpr 0xa35c820 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0xa35c7d4 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0xa2f19b0 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0xa35c7ec <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c120 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0xa35c804 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0xa35c1d0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0xa35c8a8 <line:991:7, col:14>
    (ImplicitCastExpr 0xa35c898 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa35c87c <col:14> 'int' lvalue Var 0xa35c580 '__r' 'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0xa35efa0 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0xa35d050 <line:1000:7, col:61>
    0xa35d020 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa35d1f0 <line:1001:7, col:66>
    0xa35d1c0 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa35d2e0 <line:1002:7, col:67>
    0xa35d2b0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa35d3a0 <line:1003:7, col:60>
    0xa35d370 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa35d460 <line:1004:7, col:61>
    0xa35d430 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa35d550 <line:1005:7, col:44>
    0xa35d520 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa35d640 <line:1006:7, col:69>
    0xa35d610 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0xa35d6c0 <line:1008:7, col:34>
    0xa35d670 "__size_type __extracted =
      (IntegerLiteral 0xa35d6a8 <col:33> 'int' 0)")
  (DeclStmt 0xa35d800 <line:1009:7, col:63>
    0xa35d780 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa35d7d8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa35d910 <line:1010:7, col:58>
    0xa35d890 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa35d8f0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa35d8c4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa35d8e0 <col:52> '_Bool' false))")
  (IfStmt 0xa35edc8 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0xa35d920 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0xa35d890 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa35eda8 <line:1012:2, line:1058:2>
      (IfStmt 0xa35eb78 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa35d938 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa35eb38 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0xa35d998 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35d960 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa35d948 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35cdb0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa35da68 <line:1017:8, col:25>
            0xa35da30 "_CharT __buf[128]")
          (DeclStmt 0xa35dad0 <line:1018:8, col:29>
            0xa35da80 "__size_type __len =
              (IntegerLiteral 0xa35dab8 <col:28> 'int' 0)")
          (DeclStmt 0xa35db98 <line:1019:8, col:43>
            0xa35daf0 "const streamsize __w =
              (CallExpr 0xa35db78 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa35db40 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa35db24 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa35dd08 <line:1020:8, line:1021:51>
            0xa35dbb0 "const __size_type __n =
              (ConditionalOperator 0xa35dce8 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0xa35dc28 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0xa35dc18 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa35dbe4 <col:32> 'const streamsize':'const int' lvalue Var 0xa35daf0 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0xa35dc00 <col:38> 'int' 0))
                (CXXStaticCastExpr 0xa35dc60 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0xa35dc40 <col:67> 'const streamsize':'const int' lvalue Var 0xa35daf0 '__w' 'const streamsize':'const int'))
                (CallExpr 0xa35dcc8 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa35dc90 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0xa35dc78 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35cdb0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0xa35dea8 <line:1022:8, col:73>
            0xa35dd70 "const __ctype_type &__ct =
              (CallExpr 0xa35de88 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa35ddb0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa224b10)
                (CallExpr 0xa35de68 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa35de30 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa35de18 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa35df88 <line:1023:8, col:47>
            0xa35dee0 "const __int_type __eof =
              (CallExpr 0xa35df68 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa35df40 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa35e0a0 <line:1024:8, col:46>
            0xa35dfa0 "__int_type __c =
              (CallExpr 0xa35e080 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa35e048 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa35e028 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa35dff0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa35dfd4 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa35e8a8 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0xa35e390 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0xa35e208 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa35e128 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa35e0e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                  (DeclRefExpr 0xa35e0b0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35d670 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa35e0c8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35dbb0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa35e1f0 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa35e1c8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa35e170 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa35e194 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa35dfa0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa35e1ac <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa35dee0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa35e378 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0xa35e350 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa35e238 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa35e220 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa35dd70 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0xa35e2a8 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0xa35e330 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa35e2f0 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa35e314 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa35dfa0 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0xa35e888 <line:1030:3, line:1039:3>
              (IfStmt 0xa35e630 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa35e498 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0xa35e440 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
                  (DeclRefExpr 0xa35e3a8 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35da80 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0xa35e428 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0xa35e3f0 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0xa35e3d8 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0xa35e3c0 <col:25> '_CharT [128]' lvalue Var 0xa35da30 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0xa35e410 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0xa35e618 <line:1032:7, line:1035:7>
                  (CallExpr 0xa35e5a8 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa35e4d8 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa35e4bc <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35cdb0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0xa35e50c <col:22> '_CharT [128]' lvalue Var 0xa35da30 '__buf' '_CharT [128]')
                    (BinaryOperator 0xa35e590 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0xa35e558 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0xa35e540 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0xa35e524 <col:36> '_CharT [128]' lvalue Var 0xa35da30 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0xa35e578 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0xa35e600 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0xa35e5cc <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35da80 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0xa35e5e8 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0xa35e748 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0xa35e6b0 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0xa35e64c <col:5> '_CharT [128]' lvalue Var 0xa35da30 '__buf' '_CharT [128]')
                  (UnaryOperator 0xa35e698 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa35e664 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35da80 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0xa35e728 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa35e6e8 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa35e70c <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa35dfa0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa35e778 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa35e760 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35d670 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa35e870 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa35e78c <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa35dfa0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa35e850 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa35e818 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa35e7f8 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa35e7c0 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa35e7a4 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0xa35e940 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35e8d8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa35e8bc <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35cdb0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0xa35e90c <col:21> '_CharT [128]' lvalue Var 0xa35da30 '__buf' '_CharT [128]')
            (DeclRefExpr 0xa35e924 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35da80 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0xa35ea90 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0xa35e9e8 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa35e990 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa35e9b4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa35dfa0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa35e9cc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa35dee0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa35ea70 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa35ea0c <col:3> 'typename __ios_base::iostate' lvalue Var 0xa35d780 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa35ea48 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0xa35eb18 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35eac8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa35eaac <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa35eb00 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa35ec88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa35eb98 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa35ec70 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0xa35ec40 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35ebc0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa35eba8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa35ec18 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa35ec60 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0xa35ed88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa35eca8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa35ed70 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0xa35ed50 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35ecd0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa35ecb8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa35ed28 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa35ee98 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0xa35ee00 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa35ede4 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35d670 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa35ee78 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa35ee14 <col:2> 'typename __ios_base::iostate' lvalue Var 0xa35d780 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa35ee50 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa35ef58 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0xa35eeb4 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0xa35d780 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa35ef38 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa35eee8 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa35eecc <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa35ef1c <col:16> 'typename __ios_base::iostate' lvalue Var 0xa35d780 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa35ef90 <line:1064:7, col:14>
    (DeclRefExpr 0xa35ef74 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35cc00 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0xa360e88 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0xa35f7b0 <line:1072:7, col:61>
    0xa35f780 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa35f950 <line:1073:7, col:66>
    0xa35f920 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0xa35fa10 <line:1074:7, col:67>
    0xa35f9e0 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0xa35fab0 <line:1075:7, col:60>
    0xa35fa80 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa35fb70 <line:1076:7, col:61>
    0xa35fb40 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0xa35fbf0 <line:1078:7, col:34>
    0xa35fba0 "__size_type __extracted =
      (IntegerLiteral 0xa35fbd8 <col:33> 'int' 0)")
  (DeclStmt 0xa35fcb8 <line:1079:7, col:47>
    0xa35fc10 "const __size_type __n =
      (CallExpr 0xa35fc98 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa35fc60 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa35fc44 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35f4b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0xa35fdd0 <line:1080:7, col:63>
    0xa35fd50 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0xa35fda8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0xa35fec0 <line:1081:7, col:57>
    0xa35fe40 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa35fea0 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa35fe74 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa35fe90 <col:52> '_Bool' true))")
  (IfStmt 0xa360cb0 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0xa35fed0 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0xa35fe40 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa360c90 <line:1083:2, line:1122:2>
      (IfStmt 0xa360a60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa35fee8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa360a38 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0xa35ff48 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa35ff10 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa35fef8 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35f4b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0xa360050 <line:1087:8, col:65>
            0xa35ff90 "const __int_type __idelim =
              (CallExpr 0xa360030 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa35fff0 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0xa360014 <col:57> '_CharT' lvalue ParmVar 0xa35f4f0 '__delim' '_CharT'))")
          (DeclStmt 0xa360110 <line:1088:8, col:47>
            0xa360070 "const __int_type __eof =
              (CallExpr 0xa3600f0 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa3600c8 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0xa360230 <line:1089:8, col:46>
            0xa360130 "__int_type __c =
              (CallExpr 0xa360210 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3601d8 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0xa3601b8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa360180 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0xa360164 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0xa360680 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0xa360468 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0xa360398 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa3602b8 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa360270 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                  (DeclRefExpr 0xa360240 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35fba0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0xa360258 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa35fc10 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0xa360380 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa360358 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa360300 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa360324 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0xa36033c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa360070 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0xa360450 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0xa360428 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa3603d0 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3603f4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0xa36040c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa35ff90 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0xa360660 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0xa360518 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa360480 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa35f4b0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0xa3604f8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa3604b8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa3604dc <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0xa360550 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa360538 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35fba0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0xa360648 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0xa360564 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0xa360628 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa3605f0 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0xa3605d0 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa360598 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0xa36057c <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0xa360a18 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0xa360718 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa3606c0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3606e4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0xa3606fc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa360070 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0xa3607a0 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa36073c <col:3> 'typename __ios_base::iostate' lvalue Var 0xa35fd50 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0xa360778 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0xa3609f8 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0xa360840 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa3607e8 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa36080c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa360130 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0xa360824 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa35ff90 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0xa360960 <line:1103:3, line:1106:3>
                (UnaryOperator 0xa360880 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa360864 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35fba0 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0xa360940 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa360908 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0xa3608e8 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa3608b0 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0xa360894 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0xa3609d8 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa360978 <col:3> 'typename __ios_base::iostate' lvalue Var 0xa35fd50 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0xa3609b0 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa360b70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa360a80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa360b58 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0xa360b28 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa360aa8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa360a90 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa360b00 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0xa360b48 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0xa360c70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa360b90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa360c58 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0xa360c38 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa360bb8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa360ba0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0xa360c10 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa360d80 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0xa360ce8 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa360ccc <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0xa35fba0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0xa360d60 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0xa360cfc <col:2> 'typename __ios_base::iostate' lvalue Var 0xa35fd50 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0xa360d38 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0xa360e40 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0xa360d9c <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0xa35fd50 '__err' 'typename __ios_base::iostate')
    (CallExpr 0xa360e20 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa360dd0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa360db4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa360e04 <col:16> 'typename __ios_base::iostate' lvalue Var 0xa35fd50 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa360e78 <line:1127:7, col:14>
    (DeclRefExpr 0xa360e5c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa35f300 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa363058 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa363048 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0xa662110 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa662100 <col:9, col:29>
    (ImplicitCastExpr 0xa6620f0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0xa6620d0 <col:17, col:29> 'char *' lvalue ._M_p 0xa3635e0
        (MemberExpr 0xa6620b0 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0xa363610
          (CXXThisExpr 0xa661f90 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0xa661f78 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa661f68 <col:9, col:59>
    (UnaryOperator 0xa661f50 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0xa661f38 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa661f20 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0xa661f08 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0xa661ef0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa661ed0 <col:44, col:52> 'char *'
                (MemberExpr 0xa661eb0 <col:44> '<bound member function type>' ->_M_data 0xa363690
                  (CXXThisExpr 0xa661ea0 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa6618c8 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa6618b8 <col:9, col:26>
    (ImplicitCastExpr 0xa6618a8 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa661888 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa383590
        (ImplicitCastExpr 0xa661878 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa661840 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0xa661820 <col:16> '<bound member function type>' ->_M_rep 0xa363960
              (CXXThisExpr 0xa6616f8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa6616e0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa6616d0 <col:9, col:32>
    (BinaryOperator 0xa6616b8 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa661688 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa661668 <col:16, col:22> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa661658 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0xa6616a8 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa6627b0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662238 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa6621e0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa6621d0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662164 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa6621b0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662190 <col:13, col:19> '<bound member function type>' ->size 0xa36a920
          (CXXThisExpr 0xa662180 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0xa662208 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa6621f8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662228 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6627a0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa662790 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0xa662778 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0xa662730 <col:9, col:17> 'char *'
          (MemberExpr 0xa662710 <col:9> '<bound member function type>' ->_M_data 0xa363690
            (CXXThisExpr 0xa662700 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0xa662768 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66274c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa36be80 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0xa661118 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0xa660f78 <line:180:4, col:62>
    0xa660da0 "void *__p =
      (CXXReinterpretCastExpr 0xa660f60 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0xa660f48 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0xa660ef0 <col:41> 'size_type []' lvalue Var 0xa3ab430 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0xa661108 <line:181:4, col:39>
    (UnaryOperator 0xa6610f0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0xa6610d8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0xa6610c8 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0xa6610ac <col:36> 'void *' lvalue Var 0xa660da0 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const (CompoundStmt 0xa664da0 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0xa664d90 <col:11, col:38>
    (BinaryOperator 0xa664d78 <col:18, col:38> '_Bool' '>'
      (ImplicitCastExpr 0xa664d68 <col:18, col:24> '_Atomic_word':'int' <LValueToRValue>
        (MemberExpr 0xa664d48 <col:18, col:24> 'const _Atomic_word':'const int' lvalue ->_M_refcount 0xa3aac00
          (ImplicitCastExpr 0xa664d38 <col:18> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa664d28 <col:18> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
      (IntegerLiteral 0xa30a9c0 <col:38> 'int' 0))))


            void _M_set_leaked();
            void _M_set_sharable() (CompoundStmt 0xa665620 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0xa665608 <col:11, col:31> '_Atomic_word':'int' lvalue '='
    (MemberExpr 0xa6655e8 <col:11, col:17> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
      (ImplicitCastExpr 0xa6655d8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
        (CXXThisExpr 0xa6655c8 <col:11> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
    (IntegerLiteral 0xa30ab58 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0xa6655b0 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0xa665590 <line:204:4, line:212:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa664ff0 <line:204:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa664fa8 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa664f98 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30acf0 <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa664fd0 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa664f80 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa664e00 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa664f68 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa664f48 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa664f38 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa664f20 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa664fe0 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30add8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa665570 <line:206:6, line:212:6>
      (CXXMemberCallExpr 0xa665030 <line:207:8, col:30> 'void'
        (MemberExpr 0xa665010 <col:8, col:14> '<bound member function type>' ->_M_set_sharable 0xa3ab770
          (CXXThisExpr 0xa665000 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
      (BinaryOperator 0xa6650b8 <line:208:8, col:26> 'size_type':'unsigned int' lvalue '='
        (MemberExpr 0xa665070 <col:8, col:14> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
          (ImplicitCastExpr 0xa665060 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
            (CXXThisExpr 0xa665050 <col:8> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
        (ImplicitCastExpr 0xa6650a8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa665090 <col:26> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
      (CallExpr 0xa665548 <line:209:8, col:64> 'void'
        (ImplicitCastExpr 0xa665538 <col:8, col:21> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa665518 <col:8, col:21> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
        (ArraySubscriptExpr 0xa6653d8 <col:28, col:50> 'wchar_t':'wchar_t' lvalue
          (CXXMemberCallExpr 0xa665390 <col:28, col:45> 'wchar_t *'
            (MemberExpr 0xa665370 <col:28, col:34> '<bound member function type>' ->_M_refdata 0xa3aba10
              (CXXThisExpr 0xa665360 <col:28> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)))
          (ImplicitCastExpr 0xa6653c8 <col:47> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa6653ac <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa3ab900 '__n' 'size_type':'unsigned int')))
        (DeclRefExpr 0xa665500 <col:53> 'const wchar_t':'const wchar_t' lvalue Var 0xa3ab2a0 '_S_terminal' 'const wchar_t':'const wchar_t')))
    <<<NULL>>>))


            wchar_t *_M_refdata() throw() (CompoundStmt 0xa6656d0 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0xa6656c0 <col:4, col:45>
    (CXXReinterpretCastExpr 0xa6656a8 <col:11, col:45> 'wchar_t *' reinterpret_cast<wchar_t *> <BitCast>
      (BinaryOperator 0xa665690 <col:37, col:44> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' '+'
        (CXXThisExpr 0xa665680 <col:37> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
        (IntegerLiteral 0xa30b0b0 <col:44> 'int' 1)))))


            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0xa660d88 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0xa660d68 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0xa660a90 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa660a48 <col:8, col:55> 'long'
        (ImplicitCastExpr 0xa660a38 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa30b3ac <col:8> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa660a70 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0xa660a20 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0xa660880 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0xa660a08 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0xa6609e8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0xa6609d8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6609a0 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0xa3ab5b0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0xa660a80 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa30d4e8 <col:50> '_Bool' false))))
    (CompoundStmt 0xa660d50 <line:236:6, line:245:6>
      (NullStmt 0xa30d520 <line:238:67>)
      (IfStmt 0xa660d30 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0xa660b88 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0xa660b60 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0xa660b50 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa30d550 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0xa660b38 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0xa660b18 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3aac00
                (ImplicitCastExpr 0xa660b08 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0xa660ae0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0xa30d5e8 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0xa30d5d0 <col:10> 'int' 1)))
          (IntegerLiteral 0xa30d628 <col:16> 'int' 0))
        (CompoundStmt 0xa660d18 <line:241:3, line:244:3>
          (NullStmt 0xa30d6a8 <line:242:63>)
          (CXXMemberCallExpr 0xa660cf8 <line:243:5, col:19> 'void'
            (MemberExpr 0xa660cc0 <col:5> '<bound member function type>' ->_M_destroy 0xa3ac270
              (CXXThisExpr 0xa660ba0 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0xa660ce0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0xa3ac150 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0xa65ffe0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0xa388608 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0xa3885f8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0xa2eca30 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0xa2eca18 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0xa660820 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0xa660810 <col:9, col:29>
    (ImplicitCastExpr 0xa660800 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0xa6607e0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0xa388b90
        (MemberExpr 0xa6607c0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
          (CXXThisExpr 0xa6606a0 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0xa660688 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0xa660678 <col:9, col:59>
    (UnaryOperator 0xa660660 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0xa660648 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0xa660630 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0xa660618 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0xa660600 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0xa6605e0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0xa6605c0 <col:44> '<bound member function type>' ->_M_data 0xa388c40
                  (CXXThisExpr 0xa6605b0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0xa30dd68 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0xa30dd50 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0xa65ff30 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0xa65ff10 <col:9, col:51> 'void'
    (CXXTemporary 0xa65fe90)
    (CXXMemberCallExpr 0xa65fea8 <col:9, col:51> 'void'
      (MemberExpr 0xa65fe0c <col:9, col:19> '<bound member function type>' ->_M_dispose 0xa3ac1a0
        (CXXMemberCallExpr 0xa65fde0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0xa65fdc0 <col:9> '<bound member function type>' ->_M_rep 0xa388f30
            (ImplicitCastExpr 0xa65fe00 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa65fca0 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0xa65ff00 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0xa65fef0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0xa65fe98 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0xa65fe90)
            (CXXMemberCallExpr 0xa65fe60 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0xa65fe40 <col:30, col:36> '<bound member function type>' ->get_allocator 0xa3a09e0
                (ImplicitCastExpr 0xa65fe80 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa65fe30 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0xa662a60 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0xa662a50 <col:9, col:26>
    (ImplicitCastExpr 0xa662a40 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa662a20 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0xa3aaa80
        (ImplicitCastExpr 0xa662a10 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa6629f0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa6629d0 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa6628b0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const (CompoundStmt 0xa664cd0 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0xa664cc0 <col:9, col:26>
    (ImplicitCastExpr 0xa664cb0 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0xa664c90 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_capacity 0xa3aabd0
        (ImplicitCastExpr 0xa664c80 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0xa664c60 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0xa664c40 <col:16> '<bound member function type>' ->_M_rep 0xa388f30
              (CXXThisExpr 0xa664b18 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0xa662898 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0xa662888 <col:9, col:32>
    (BinaryOperator 0xa662870 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0xa662840 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0xa662820 <col:16, col:22> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662810 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0xa662860 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa315738 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0xa663100 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0xa662b88 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0xa662b30 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0xa662b20 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa662ab4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0xa662b00 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0xa662ae0 <col:13, col:19> '<bound member function type>' ->size 0xa38fe30
          (CXXThisExpr 0xa662ad0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0xa662b58 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0xa662b48 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa315ba4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa662b78 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa315b90 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa315b60 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0xa6630f0 <line:859:2, col:22>
    (ImplicitCastExpr 0xa6630e0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0xa6630c8 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0xa663080 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0xa663060 <col:9> '<bound member function type>' ->_M_data 0xa388c40
            (CXXThisExpr 0xa663050 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0xa6630b8 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa66309c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa391390 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s) (CompoundStmt 0xa663a70 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0xa3161e8 <line:998:32>)
  (ReturnStmt 0xa663a60 <line:999:2, col:51>
    (CXXMemberCallExpr 0xa663a28 <col:9, col:51> 'class std::basic_string<wchar_t>' lvalue
      (MemberExpr 0xa663a04 <col:9, col:15> '<bound member function type>' ->append 0xa392a80
        (CXXThisExpr 0xa663648 <col:9> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa663a50 <col:22> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6636a8 <col:22> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))
      (CallExpr 0xa663998 <col:27, col:50> 'size_t':'unsigned int'
        (ImplicitCastExpr 0xa663988 <col:27, col:40> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa66392c <col:27, col:40> 'size_t (const char_type *)' lvalue CXXMethod 0xa1e89b0 'length' 'size_t (const char_type *)'))
        (ImplicitCastExpr 0xa6639b8 <col:47> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa66394c <col:47> 'const wchar_t *' lvalue ParmVar 0xa392c10 '__s' 'const wchar_t *'))))))


        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c) (CompoundStmt 0xa664af8 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0xa663ca8 <line:1044:2, col:42>
    0xa663bb0 "const size_type __len =
      (BinaryOperator 0xa663c90 <col:26, col:41> 'unsigned int' '+'
        (ImplicitCastExpr 0xa663c80 <col:26> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3164e8 <col:26> 'int' 1))
        (CXXMemberCallExpr 0xa663c50 <col:30, col:41> 'size_type':'unsigned int'
          (MemberExpr 0xa663c30 <col:30, col:36> '<bound member function type>' ->size 0xa38fe30
            (ImplicitCastExpr 0xa663c70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663c20 <col:30> 'class std::basic_string<wchar_t> *' this)))))")
  (IfStmt 0xa664038 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0xa663f78 <line:1045:6, col:57> '_Bool' '||'
      (BinaryOperator 0xa663d80 <col:6, col:29> '_Bool' '>'
        (ImplicitCastExpr 0xa663d70 <col:6> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa663cf4 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))
        (CXXMemberCallExpr 0xa663d40 <col:14, col:29> 'size_type':'unsigned int'
          (MemberExpr 0xa663d20 <col:14, col:20> '<bound member function type>' ->capacity 0xa390790
            (ImplicitCastExpr 0xa663d60 <col:14> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0xa663d10 <col:14> 'class std::basic_string<wchar_t> *' this)))))
      (CXXMemberCallExpr 0xa663f30 <col:34, col:57> '_Bool'
        (MemberExpr 0xa663f0c <col:34, col:44> '<bound member function type>' ->_M_is_shared 0xa3ab690
          (ImplicitCastExpr 0xa663f68 <col:34, col:41> 'const struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' <NoOp>
            (CXXMemberCallExpr 0xa663ee0 <col:34, col:41> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
              (MemberExpr 0xa663ec0 <col:34> '<bound member function type>' ->_M_rep 0xa388f30
                (ImplicitCastExpr 0xa663f00 <col:34> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0xa663d98 <col:34> 'class std::basic_string<wchar_t> *' this))))))))
    (CXXMemberCallExpr 0xa664008 <line:1046:4, col:23> 'void'
      (MemberExpr 0xa663fd0 <col:4, col:10> '<bound member function type>' ->reserve 0xa390970
        (CXXThisExpr 0xa663fc0 <col:4> 'class std::basic_string<wchar_t> *' this))
      (ImplicitCastExpr 0xa664028 <col:18> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa663ff0 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int')))
    <<<NULL>>>)
  (CallExpr 0xa6648e8 <line:1047:2, col:50> 'void'
    (ImplicitCastExpr 0xa6648d8 <col:2, col:15> 'void (*)(char_type &, const char_type &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa66487c <col:2, col:15> 'void (char_type &, const char_type &)' lvalue CXXMethod 0xa1e8450 'assign' 'void (char_type &, const char_type &)'))
    (ArraySubscriptExpr 0xa664850 <col:22, col:44> 'wchar_t':'wchar_t' lvalue
      (CXXMemberCallExpr 0xa6647c0 <col:22, col:30> 'wchar_t *'
        (MemberExpr 0xa6647a0 <col:22> '<bound member function type>' ->_M_data 0xa388c40
          (ImplicitCastExpr 0xa6647e0 <col:22> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664790 <col:22> 'class std::basic_string<wchar_t> *' this))))
      (CXXMemberCallExpr 0xa664820 <col:32, col:43> 'size_type':'unsigned int'
        (MemberExpr 0xa664800 <col:32, col:38> '<bound member function type>' ->size 0xa38fe30
          (ImplicitCastExpr 0xa664840 <col:32> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa6647f0 <col:32> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664910 <col:47> 'const char_type':'const wchar_t' lvalue <NoOp>
      (DeclRefExpr 0xa664864 <col:47> 'wchar_t':'wchar_t' lvalue ParmVar 0xa393380 '__c' 'wchar_t':'wchar_t')))
  (CXXMemberCallExpr 0xa664ac8 <line:1048:2, col:44> 'void'
    (MemberExpr 0xa664a8c <col:2, col:12> '<bound member function type>' ->_M_set_length_and_sharable 0xa3ab950
      (CXXMemberCallExpr 0xa664a60 <col:2, col:9> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
        (MemberExpr 0xa664a40 <col:2> '<bound member function type>' ->_M_rep 0xa388f30
          (ImplicitCastExpr 0xa664a80 <col:2> 'const class std::basic_string<wchar_t> *' <NoOp>
            (CXXThisExpr 0xa664920 <col:2> 'class std::basic_string<wchar_t> *' this)))))
    (ImplicitCastExpr 0xa664ae8 <col:39> 'size_type':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa664aac <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa663bb0 '__len' 'const size_type':'const unsigned int'))))


        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0xa663630 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0xa663620 <col:9, col:24>
    (ImplicitCastExpr 0xa663610 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0xa6635f0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0xa6635d0 <col:16> '<bound member function type>' ->_M_data 0xa388c40
          (CXXThisExpr 0xa6635c0 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0xa6612f0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0xa6612e0 <col:9, col:16>
    (CXXConstructExpr 0xa6612b8 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0xa6612a8 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0xa661298 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0xa661250 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0xa388bc0
            (CXXThisExpr 0xa661130 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0xa3ae9b8 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0xa3aea60 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aea48 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0xa3aea18 <col:36> 'long' 1)
    (IntegerLiteral 0xa3aea30 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0xa3aeb00 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aeae8 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa3aeab8 <col:37> 'long' 1)
    (IntegerLiteral 0xa3aead0 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0xa3aeba0 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aeb88 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0xa3aeb58 <col:37> 'long' 1)
    (IntegerLiteral 0xa3aeb70 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0xa3aec40 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aec28 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0xa3aebf8 <col:35> 'long' 1)
    (IntegerLiteral 0xa3aec10 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0xa3aece0 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aecc8 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa3aec98 <col:38> 'long' 1)
    (IntegerLiteral 0xa3aecb0 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0xa3aed80 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0xa3aed68 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0xa3aed38 <col:38> 'long' 1)
    (IntegerLiteral 0xa3aed50 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0xa3aef40 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0xa3aef28 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0xa3aeee8 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0xa3aeea8 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0xa3aee68 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0xa3aee28 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0xa3aee08 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa3aedd4 <col:35> 'const category':'const int' lvalue Var 0xa3ae9e0 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0xa3aee18 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0xa3aedec <col:43> 'const category':'const int' lvalue Var 0xa3aea80 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0xa3aee58 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0xa3aee40 <col:53> 'const category':'const int' lvalue Var 0xa3aeb20 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0xa3aee98 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0xa3aee80 <col:9> 'const category':'const int' lvalue Var 0xa3aebc0 'time' 'const category':'const int')))
      (ImplicitCastExpr 0xa3aeed8 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0xa3aeec0 <col:17> 'const category':'const int' lvalue Var 0xa3aec60 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0xa3aef18 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0xa3aef00 <col:28> 'const category':'const int' lvalue Var 0xa3aed00 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0xa3b4ea0 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0xa3b4e90 <col:7, col:41>
    (UnaryOperator 0xa3b4e78 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0xa3b4e60 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0xa3b4e40 <col:16, col:40> '_Bool'
          (MemberExpr 0xa3b4e08 <col:16, col:30> '<bound member function type>' ->operator== 0xa3b3e30
            (CXXThisExpr 0xa3b4df8 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0xa3b4e28 <col:33> 'const class std::locale' lvalue ParmVar 0xa3b3eb0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0xa3b48f8 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3b48a0 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0xa3b4870 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0xa3b4888 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0xa3b6010 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3b5ff8 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0xa3b60b0 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0xa3b60a0 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0xa3b6090 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa3b6044 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0xa3b5360 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0xa3b6060 <col:61> 'int' 1)
  (IntegerLiteral 0xa3b6078 <col:65> 'int' 0))
) (CompoundStmt 0xa3b60f0 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0xa3b6038 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa3b6020 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0xa3b6220 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0xa3b61f8 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa3b61e8 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3b6124 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa1df5f0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa3b61b8 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa3b6194 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3b5130
        (CXXThisExpr 0xa3b6168 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0xa3b61d0 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0xa3b6478 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0xa3b6238 <line:407:60>)
  (IfStmt 0xa3b6458 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b6350 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0xa3b6310 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa3b6300 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b6268 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa3b62b8 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa3b6298 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3b5130
            (CXXThisExpr 0xa3b6288 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0xa3b62e8 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa3b62d0 <col:65> 'int' 1)))
      (IntegerLiteral 0xa3b6338 <col:71> 'int' 1))
    (CompoundStmt 0xa3b6438 <line:409:2, line:415:2>
      (NullStmt 0xa3b6368 <line:410:63>)
      (IfStmt 0xa3b63d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b6378 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3b63c0 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0xa3b63a8 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa3b6398 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa3b6388 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0xa3b6418 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b63f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b6408 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0xa3b6e40 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0xa3b9d48 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0xa3b9d20 <col:7, col:55> 'void'
    (ImplicitCastExpr 0xa3b9d10 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3b9c8c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0xa1df5f0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa3b9ce0 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa3b9cc0 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3b75a0
        (CXXThisExpr 0xa3b9cb0 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0xa3b9cf8 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0xa3b9fa0 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0xa3b9d60 <line:516:60>)
  (IfStmt 0xa3b9f80 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0xa3b9e78 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0xa3b9e38 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa3b9e28 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3b9d90 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa3b9de0 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa3b9dc0 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3b75a0
            (CXXThisExpr 0xa3b9db0 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0xa3b9e10 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0xa3b9df8 <col:65> 'int' 1)))
      (IntegerLiteral 0xa3b9e60 <col:71> 'int' 1))
    (CompoundStmt 0xa3b9f60 <line:518:2, line:524:2>
      (NullStmt 0xa3b9e90 <line:519:63>)
      (IfStmt 0xa3b9f00 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b9ea0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa3b9ee8 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0xa3b9ed0 <col:8, col:15> 'void'
            (ImplicitCastExpr 0xa3b9ec0 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0xa3b9eb0 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0xa3b9f40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa3b9f20 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa3b9f30 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0xa3ba618 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0xa3ba008 <line:541:7, col:24>
    0xa3b9fc0 "bool __ret =
      (CXXBoolLiteralExpr 0xa3b9ff8 <col:20> '_Bool' true)")
  (IfStmt 0xa3ba5c0 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0xa3ba098 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa3ba088 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0xa3ba070 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0xa3ba060 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0xa3ba028 <col:11> 'char **' lvalue ->_M_names 0xa3b76c0
              (CXXThisExpr 0xa3ba018 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0xa3ba048 <col:20> 'int' 1))))
    (ForStmt 0xa3ba598 <line:544:2, line:545:66>
      (DeclStmt 0xa3ba110 <line:544:7, col:21>
        0xa3ba0b0 "size_t __i =
          (ImplicitCastExpr 0xa3ba100 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa3ba0e8 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0xa3ba1f0 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0xa3ba1e0 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa3ba120 <col:23> '_Bool' lvalue Var 0xa3b9fc0 '__ret' '_Bool'))
        (BinaryOperator 0xa3ba1c8 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0xa3ba1a8 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3ba138 <col:32> 'size_t':'unsigned int' lvalue Var 0xa3ba0b0 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0xa3ba1b8 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0xa3ba190 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0xa3ba180 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0xa3ba150 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0xa3b48c0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0xa3ba168 <col:59> 'int' 1)))))
      (UnaryOperator 0xa3ba220 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0xa3ba208 <col:64> 'size_t':'unsigned int' lvalue Var 0xa3ba0b0 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0xa3ba580 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0xa3ba234 <col:4> '_Bool' lvalue Var 0xa3b9fc0 '__ret' '_Bool')
        (BinaryOperator 0xa3ba568 <col:12, col:66> '_Bool' '=='
          (CallExpr 0xa3ba4e8 <col:12, col:61> 'int'
            (ImplicitCastExpr 0xa3ba4d8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa3ba364 <col:12> 'int (const char *, const char *)' lvalue Function 0xa3ba250 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0xa3ba520 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa3ba510 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa3ba3e8 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0xa3ba3c8 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0xa3ba390 <col:29> 'char **' lvalue ->_M_names 0xa3b76c0
                      (CXXThisExpr 0xa3ba380 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0xa3ba3d8 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3ba3b0 <col:38> 'size_t':'unsigned int' lvalue Var 0xa3ba0b0 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0xa3ba540 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0xa3ba530 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0xa3ba4a8 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0xa3ba498 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0xa3ba410 <col:44> 'char **' lvalue ->_M_names 0xa3b76c0
                      (CXXThisExpr 0xa3ba400 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0xa3ba480 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa3ba460 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa3ba430 <col:53> 'size_t':'unsigned int' lvalue Var 0xa3ba0b0 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0xa3ba470 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa3ba448 <col:59> 'int' 1)))))))
          (IntegerLiteral 0xa3ba550 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa3ba608 <line:546:7, col:14>
    (ImplicitCastExpr 0xa3ba5f8 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa3ba5dc <col:14> '_Bool' lvalue Var 0xa3b9fc0 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0xa3ba710 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0xa3ba6e8 <col:9, col:46> '<dependent type>'
    (MemberExpr 0xa3ba648 <col:9> '<bound member function type>' ->_M_install_facet 0xa3b9900
      (CXXThisExpr 0xa3ba638 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0xa3ba6b8 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0xa3ba690 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0xa3ba6cc <col:39> '_Facet *' lvalue ParmVar 0xa3b9a00 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0xa3bc030 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3bc018 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa3bc064 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0xa3bb010 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa3bc158 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa3bc148 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3bc0f8 <col:44> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0xa3bc1c0 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa3bc058 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3bc040 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa3bc1d0 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0xa3bb160 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0xa3bc2e8 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0xa3bc2d8 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3bc268 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0xa3b57c0 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0xa3bc280 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa3bb120 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0xa3bc350 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa3bc460 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0xa3bc450 <col:9, col:59>
    (CallExpr 0xa3bc420 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3bc388 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3bc378 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa3bc3bc <col:33> 'const _CharT *' lvalue ParmVar 0xa3bb2a0 '__lo1' 'const _CharT *')
      (DeclRefExpr 0xa3bc3d4 <col:40> 'const _CharT *' lvalue ParmVar 0xa3bb2f0 '__hi1' 'const _CharT *')
      (DeclRefExpr 0xa3bc3ec <col:47> 'const _CharT *' lvalue ParmVar 0xa3bb340 '__lo2' 'const _CharT *')
      (DeclRefExpr 0xa3bc404 <col:54> 'const _CharT *' lvalue ParmVar 0xa3bb390 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa3bc528 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0xa3bc518 <col:9, col:45>
    (CallExpr 0xa3bc4f0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3bc488 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3bc478 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa3bc4bc <col:35> 'const _CharT *' lvalue ParmVar 0xa3bb4e0 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa3bc4d4 <col:41> 'const _CharT *' lvalue ParmVar 0xa3bb530 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa3bc5f0 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0xa3bc5e0 <col:9, col:40>
    (CallExpr 0xa3bc5b8 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3bc550 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3bc540 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0xa3bc584 <col:30> 'const _CharT *' lvalue ParmVar 0xa3bb650 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa3bc59c <col:36> 'const _CharT *' lvalue ParmVar 0xa3bb6a0 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0xa3bc688 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0xa3bc668 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0xa3bc604 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0xa3b58e0 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0xa3bc648 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0xa3baf30
      (CXXThisExpr 0xa3bc638 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0xa3bc8d8 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa3c0a10 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3c09f8 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0xa3c0ab0 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0xa3c0840 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa3c0f10 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0xa3c0ef0 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0xa3c0d20 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0xa3c0be0 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0xa3c0b80 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa3c0b70 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3c0b1c <col:6> 'int (const char *, const char *)' lvalue Function 0xa3ba250 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa3c0ba8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa3c0b34 <col:23> 'const char *' lvalue ParmVar 0xa3c0800 '__s' 'const char *'))
          (ImplicitCastExpr 0xa3c0bb8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa3c0b4c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa3c0bc8 <col:36> 'int' 0))
      (BinaryOperator 0xa3c0d08 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0xa3c0ca8 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa3c0c98 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3c0bf8 <col:9> 'int (const char *, const char *)' lvalue Function 0xa3ba250 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa3c0cd0 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa3c0c10 <col:26> 'const char *' lvalue ParmVar 0xa3c0800 '__s' 'const char *'))
          (ImplicitCastExpr 0xa3c0ce0 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa3c0c70 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa3c0cf0 <col:43> 'int' 0)))
    (CompoundStmt 0xa3c0ed8 <line:808:4, line:811:4>
      (CallExpr 0xa3c0de8 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c0d68 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c0d58 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa3c0db0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c0da0 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0xa3c0eb0 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c0e18 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c0e08 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0xa3c0e60 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa3c0e50 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0xa3c0e94 <col:58> 'const char *' lvalue ParmVar 0xa3c0800 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0xa3c0f28 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0xa3c17c8 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0xa3c13e0 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0xa3c12b8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa3b46d0
      (CXXThisExpr 0xa3c12a8 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0xa3c13a0 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0xa3c1358 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0xa3c1320 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0xa3c1310 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c12f0 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
              (DeclRefExpr 0xa3c12d8 <col:28> 'const class std::locale' lvalue ParmVar 0xa3c10a0 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0xa3c1368 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa3c1338 <col:45> 'int' 1))))
  (IfStmt 0xa3c1528 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c13f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa3c1510 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0xa3c14e8 <col:4, col:46> '<dependent type>'
        (MemberExpr 0xa3c1444 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0xa3b9900
          (ImplicitCastExpr 0xa3c1438 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c1418 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa3b46d0
              (CXXThisExpr 0xa3c1408 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0xa3c14b8 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa3c1490 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0xa3c14cc <col:43> '_Facet *' lvalue ParmVar 0xa3c1110 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0xa3c1600 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c1548 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3c15e8 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0xa3c15b8 <line:52:4, col:33> 'void'
        (MemberExpr 0xa3c1594 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0xa3b8c40
          (ImplicitCastExpr 0xa3c1588 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c1568 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa3b46d0
              (CXXThisExpr 0xa3c1558 <col:4> 'class std::locale *' this)))))
      (NullStmt 0xa3c15d8 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa3c16d0 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0xa3c16c0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0xa3c16a8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0xa3c1698 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0xa3c165c <col:17, col:26> 'char **' lvalue ->_M_names 0xa3b76c0
            (ImplicitCastExpr 0xa3c1650 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa3c1630 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa3b46d0
                (CXXThisExpr 0xa3c1620 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0xa3c1680 <col:35> 'int' 0))))
  (BinaryOperator 0xa3c17b0 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0xa3c1770 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0xa3c1760 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0xa3c1724 <col:7, col:16> 'char **' lvalue ->_M_names 0xa3b76c0
          (ImplicitCastExpr 0xa3c1718 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c16f8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0xa3b46d0
              (CXXThisExpr 0xa3c16e8 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0xa3c1748 <col:25> 'int' 0))
    (ImplicitCastExpr 0xa3c17a0 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0xa3c1788 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0xa3c1e28 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0xa3c1af8 <line:64:7, col:44>
    0xa3c19c0 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0xa3c1ab8 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0xa3c1a70 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0xa3c1a38 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0xa3c1a28 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa3c1a08 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0xa3b46d0
                (CXXThisExpr 0xa3c19f8 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0xa3c1a80 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa3c1a50 <col:42> 'int' 1)))")
  (IfStmt 0xa3c1c40 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c1b08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa3c1c28 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0xa3c1c00 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0xa3c1b3c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0xa3b9770
          (ImplicitCastExpr 0xa3c1b30 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa3c1b18 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa3c19c0 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0xa3c1b74 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
          (DeclRefExpr 0xa3c1b5c <col:28> 'const class std::locale' lvalue ParmVar 0xa3c1870 '__other' 'const class std::locale &'))
        (UnaryOperator 0xa3c1be8 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0xa3c1bc0 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0xa3c1d00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c1c60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3c1ce8 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0xa3c1cb8 <line:71:4, col:31> 'void'
        (MemberExpr 0xa3c1c94 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0xa3b8c40
          (ImplicitCastExpr 0xa3c1c88 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0xa3c1c70 <col:4> 'class std::locale::_Impl *' lvalue Var 0xa3c19c0 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0xa3c1cd8 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0xa3c1e18 <line:74:7, col:26>
    (ExprWithCleanups 0xa3c1df8 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0xa3c1d80)
      (CXXConstructExpr 0xa3c1dd0 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0xa3c1dc0 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0xa3c1db0 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0xa3c1d98 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa3c1d88 <col:14, col:21> 'class std::locale' (CXXTemporary 0xa3c1d80)
                (CXXConstructExpr 0xa3c1d50 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0xa3c1d40 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0xa3c1d28 <col:21> 'class std::locale::_Impl *' lvalue Var 0xa3c19c0 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0xa3c2b50 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0xa3c2530 <line:83:7, col:50>
    0xa3c2500 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0xa3c2690 <line:84:7, col:73>
    0xa3c25a0 "const __collate_type &__collate =
      (CallExpr 0xa3c2670 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c25e0 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa3ba9f0)
        (UnaryOperator 0xa3c2658 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0xa3c2648 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0xa3c2b40 <line:85:7, line:86:50>
    (ParenExpr 0xa3c2b28 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0xa3c2b00 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c2ab8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3c2a70 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c26b8 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c26a0 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0xa3c25a0 '__collate' 'const __collate_type &'))
          (CallExpr 0xa3c2740 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c2708 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa3c26ec <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c20e0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa3c2888 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c2840 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
            (CallExpr 0xa3c27b0 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c2778 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0xa3c275c <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c20e0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa3c2820 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c27e8 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0xa3c27cc <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c20e0 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0xa3c2900 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c28c8 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa3c28ac <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c2290 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0xa3c2a48 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c2a00 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
            (CallExpr 0xa3c2970 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c2938 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0xa3c291c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c2290 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0xa3c29e0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c29a8 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0xa3c298c <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa3c2290 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0xa3c2aa0 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0xa3c3090 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0xa3c2db0 <line:94:7, col:44>
    0xa3c2cd0 "const size_t __i =
      (CallExpr 0xa3c2d90 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c2d58 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa3c2d30 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa3c2ee0 <line:95:7, col:64>
    0xa3c2e30 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa3c2ed0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa3c2eac <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa3b7600
          (ImplicitCastExpr 0xa3c2ea0 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c2e7c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
              (DeclRefExpr 0xa3c2e64 <col:40> 'const class std::locale' lvalue ParmVar 0xa3c2be0 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0xa3c3080 <line:96:7, line:98:53>
    (ParenExpr 0xa3c3068 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0xa3c3050 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0xa3c2f90 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0xa3c2f70 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa3c2ef0 <col:15> 'const size_t':'const unsigned int' lvalue Var 0xa3c2cd0 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0xa3c2f80 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0xa3c2f4c <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa3b7640
              (ImplicitCastExpr 0xa3c2f40 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0xa3c2f20 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
                  (DeclRefExpr 0xa3c2f08 <col:21> 'const class std::locale' lvalue ParmVar 0xa3c2be0 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0xa3c3038 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0xa3c2ff8 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa3c2fd8 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa3c2fa8 <col:39> 'const class locale::facet **' lvalue Var 0xa3c2e30 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa3c2fe8 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3c2fc0 <col:48> 'const size_t':'const unsigned int' lvalue Var 0xa3c2cd0 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0xa3c3728 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0xa3c3340 <line:108:7, col:44>
    0xa3c3260 "const size_t __i =
      (CallExpr 0xa3c3320 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c32e8 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0xa3c32c0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0xa3c3440 <line:109:7, col:64>
    0xa3c3390 "const locale::facet **__facets =
      (ImplicitCastExpr 0xa3c3430 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa3c340c <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0xa3b7600
          (ImplicitCastExpr 0xa3c3400 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa3c33dc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
              (DeclRefExpr 0xa3c33c4 <col:40> 'const class std::locale' lvalue ParmVar 0xa3c3120 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa3c3640 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0xa3c35a8 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0xa3c34f0 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0xa3c34d0 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa3c3450 <col:11> 'const size_t':'const unsigned int' lvalue Var 0xa3c3260 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0xa3c34e0 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0xa3c34ac <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0xa3b7640
            (ImplicitCastExpr 0xa3c34a0 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0xa3c3480 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
                (DeclRefExpr 0xa3c3468 <col:18> 'const class std::locale' lvalue ParmVar 0xa3c3120 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0xa3c3590 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa3c3580 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa3c3570 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0xa3c3558 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0xa3c3538 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0xa3c3508 <col:52> 'const class locale::facet **' lvalue Var 0xa3c3390 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0xa3c3548 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3c3520 <col:61> 'const size_t':'const unsigned int' lvalue Var 0xa3c3260 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0xa3c3620 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0xa3c3610 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3c35f4 <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0xa13d930 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa3c3718 <line:113:7, col:56>
    (CXXDynamicCastExpr 0xa3c3700 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0xa3c36d8 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0xa3c36c8 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa3c36b0 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa3c3690 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa3c365c <col:43> 'const class locale::facet **' lvalue Var 0xa3c3390 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa3c36a0 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa3c3674 <col:52> 'const size_t':'const unsigned int' lvalue Var 0xa3c3260 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0xa3c3ab0 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0xa3c3aa0 <col:7, col:14>
    (IntegerLiteral 0xa3c3a88 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0xa3c3eb8 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0xa3c3ea8 <col:7, col:14>
    (ImplicitCastExpr 0xa3c3e98 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa3c3e80 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0xa3c7f20 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0xa3c4358 <line:140:7, col:44>
    0xa3c42d0 "const string_type __one =
      (ParenListExpr 0xa3c4338 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa3c4304 <col:31> 'const _CharT *' lvalue ParmVar 0xa3c40a0 '__lo1' 'const _CharT *')
        (DeclRefExpr 0xa3c431c <col:38> 'const _CharT *' lvalue ParmVar 0xa3c40f0 '__hi1' 'const _CharT *'))")
  (DeclStmt 0xa3c43f8 <line:141:7, col:44>
    0xa3c4370 "const string_type __two =
      (ParenListExpr 0xa3c43d8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa3c43a4 <col:31> 'const _CharT *' lvalue ParmVar 0xa3c4140 '__lo2' 'const _CharT *')
        (DeclRefExpr 0xa3c43bc <col:38> 'const _CharT *' lvalue ParmVar 0xa3c4190 '__hi2' 'const _CharT *'))")
  (DeclStmt 0xa3c44c8 <line:143:7, col:40>
    0xa3c4420 "const _CharT *__p =
      (CallExpr 0xa3c44a8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c4470 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c4454 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c42d0 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa3c4678 <line:144:7, col:59>
    0xa3c44f0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa3c4650 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c4608 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (CallExpr 0xa3c4578 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c4540 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c4524 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c42d0 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa3c45e8 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c45b0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c4594 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c42d0 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa3c4748 <line:145:7, col:40>
    0xa3c46a0 "const _CharT *__q =
      (CallExpr 0xa3c4728 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c46f0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c46d4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c4370 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa3c48f8 <line:146:7, col:59>
    0xa3c4770 "const _CharT *__qend =
      (CXXOperatorCallExpr 0xa3c48d0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c4888 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (CallExpr 0xa3c47f8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c47c0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c47a4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c4370 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa3c4868 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c4830 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c4814 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c4370 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0xa3c7ef8 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0xa3c7ec8 <line:152:2, line:168:2>
      (DeclStmt 0xa3c49e0 <line:153:4, col:42>
        0xa3c4920 "const int __res =
          (CallExpr 0xa3c49b8 <col:22, col:41> '<dependent type>'
            (MemberExpr 0xa3c4968 <col:22> '<bound member function type>' ->_M_compare 0xa3c39f0
              (CXXThisExpr 0xa3c4958 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0xa3c4988 <col:33> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *')
            (DeclRefExpr 0xa3c49a0 <col:38> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *'))")
      (IfStmt 0xa3c4a60 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0xa3c4a18 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa3c4a08 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3c49f0 <col:8> 'const int' lvalue Var 0xa3c4920 '__res' 'const int')))
        (ReturnStmt 0xa3c4a50 <line:155:6, col:13>
          (ImplicitCastExpr 0xa3c4a40 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3c4a24 <col:13> 'const int' lvalue Var 0xa3c4920 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0xa3c7900 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa3c4a7c <col:4> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *')
        (CallExpr 0xa3c78e0 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c7890 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3c78c4 <col:39> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0xa3c7a50 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa3c7920 <col:4> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *')
        (CallExpr 0xa3c7a30 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c79e0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3c7a14 <col:39> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *')))
      (IfStmt 0xa3c7e18 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0xa3c7bd0 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa3c7af8 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c7aa0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
            (DeclRefExpr 0xa3c7a70 <col:8> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *')
            (DeclRefExpr 0xa3c7a88 <col:15> 'const _CharT *' lvalue Var 0xa3c44f0 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0xa3c7ba8 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c7b50 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
            (DeclRefExpr 0xa3c7b1c <col:25> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *')
            (DeclRefExpr 0xa3c7b34 <col:32> 'const _CharT *' lvalue Var 0xa3c4770 '__qend' 'const _CharT *')))
        (ReturnStmt 0xa3c7c00 <line:160:6, col:13>
          (IntegerLiteral 0xa3c7be8 <col:13> 'int' 0))
        (IfStmt 0xa3c7df8 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa3c7c98 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c7c40 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
            (DeclRefExpr 0xa3c7c10 <col:13> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *')
            (DeclRefExpr 0xa3c7c28 <col:20> 'const _CharT *' lvalue Var 0xa3c44f0 '__pend' 'const _CharT *'))
          (ReturnStmt 0xa3c7cf0 <line:162:6, col:14>
            (UnaryOperator 0xa3c7cd8 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0xa3c7cc0 <col:14> 'int' 1)))
          (IfStmt 0xa3c7dd8 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa3c7d88 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa3c7d30 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
              (DeclRefExpr 0xa3c7d00 <col:13> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *')
              (DeclRefExpr 0xa3c7d18 <col:20> 'const _CharT *' lvalue Var 0xa3c4770 '__qend' 'const _CharT *'))
            (ReturnStmt 0xa3c7dc8 <line:164:6, col:13>
              (IntegerLiteral 0xa3c7db0 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0xa3c7e68 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa3c7e34 <col:4> 'const _CharT *' lvalue Var 0xa3c4420 '__p' 'const _CharT *'))
      (UnaryOperator 0xa3c7eb0 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0xa3c7e7c <col:4> 'const _CharT *' lvalue Var 0xa3c46a0 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa3c9320 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0xa3c84a8 <line:176:7, col:24>
    0xa3c8470 "string_type __ret")
  (DeclStmt 0xa3c8548 <line:179:7, col:42>
    0xa3c84c0 "const string_type __str =
      (ParenListExpr 0xa3c8528 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0xa3c84f4 <col:31> 'const _CharT *' lvalue ParmVar 0xa3c8220 '__lo' 'const _CharT *')
        (DeclRefExpr 0xa3c850c <col:37> 'const _CharT *' lvalue ParmVar 0xa3c8270 '__hi' 'const _CharT *'))")
  (DeclStmt 0xa3c8618 <line:181:7, col:40>
    0xa3c8570 "const _CharT *__p =
      (CallExpr 0xa3c85f8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3c85c0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0xa3c85a4 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c84c0 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0xa3c87c8 <line:182:7, col:59>
    0xa3c8640 "const _CharT *__pend =
      (CXXOperatorCallExpr 0xa3c87a0 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0xa3c8758 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (CallExpr 0xa3c86c8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c8690 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c8674 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c84c0 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0xa3c8738 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3c8700 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0xa3c86e4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0xa3c84c0 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0xa3c88f0 <line:184:7, col:39>
    0xa3c87e0 "size_t __len =
      (BinaryOperator 0xa3c88d8 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0xa3c88a8 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0xa3c8880 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa3c8848 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa3c8814 <col:23> 'const _CharT *' lvalue ParmVar 0xa3c8270 '__hi' 'const _CharT *')
            (DeclRefExpr 0xa3c882c <col:30> 'const _CharT *' lvalue ParmVar 0xa3c8220 '__lo' 'const _CharT *')))
        (IntegerLiteral 0xa3c88c0 <col:38> 'int' 2))")
  (DeclStmt 0xa3c89c8 <line:186:7, col:38>
    0xa3c8930 "_CharT *__c =
      (CXXNewExpr 0xa3c8988 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0xa3c8964 <col:32> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0xa3c9220 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c89d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa3c9208 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0xa3c91e0 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0xa3c91b0 <line:194:6, line:214:6>
          (DeclStmt 0xa3c8ac8 <line:196:8, col:52>
            0xa3c89f0 "size_t __res =
              (CallExpr 0xa3c8aa0 <col:23, col:51> '<dependent type>'
                (MemberExpr 0xa3c8a38 <col:23> '<bound member function type>' ->_M_transform 0xa3c3de0
                  (CXXThisExpr 0xa3c8a28 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0xa3c8a58 <col:36> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *')
                (DeclRefExpr 0xa3c8a70 <col:41> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *')
                (DeclRefExpr 0xa3c8a88 <col:46> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0xa3c8de8 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0xa3c8b28 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0xa3c8b08 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3c8ad8 <col:12> 'size_t':'unsigned int' lvalue Var 0xa3c89f0 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa3c8b18 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa3c8af0 <col:21> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0xa3c8dc8 <line:200:3, line:205:3>
              (BinaryOperator 0xa3c8bc0 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0xa3c8b40 <col:5> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0xa3c8ba8 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa3c8b88 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa3c8b58 <col:13> 'size_t':'unsigned int' lvalue Var 0xa3c89f0 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0xa3c8b98 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa3c8b70 <col:21> 'int' 1))))
              (BinaryOperator 0xa3c8c50 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0xa3c8bf0 <col:5, col:15> 'void'
                  (DeclRefExpr 0xa3c8bd8 <col:15> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *'))
                (BinaryOperator 0xa3c8c38 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0xa3c8c08 <col:20> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *')
                  (IntegerLiteral 0xa3c8c20 <col:26> 'int' 0)))
              (BinaryOperator 0xa3c8ce0 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0xa3c8c68 <col:5> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *')
                (CXXNewExpr 0xa3c8ca0 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0xa3c8c80 <col:22> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0xa3c8db0 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa3c8cf8 <col:5> 'size_t':'unsigned int' lvalue Var 0xa3c89f0 '__res' 'size_t':'unsigned int')
                (CallExpr 0xa3c8d88 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0xa3c8d20 <col:13> '<bound member function type>' ->_M_transform 0xa3c3de0
                    (CXXThisExpr 0xa3c8d10 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0xa3c8d40 <col:26> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *')
                  (DeclRefExpr 0xa3c8d58 <col:31> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *')
                  (DeclRefExpr 0xa3c8d70 <col:36> 'size_t':'unsigned int' lvalue Var 0xa3c87e0 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0xa3c8e88 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c8e20 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa3c8e04 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa3c8470 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0xa3c8e54 <col:21> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *')
            (DeclRefExpr 0xa3c8e6c <col:26> 'size_t':'unsigned int' lvalue Var 0xa3c89f0 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0xa3c8fe0 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa3c8eac <col:8> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *')
            (CallExpr 0xa3c8fc0 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3c8f70 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0xa3c8fa4 <col:43> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *')))
          (IfStmt 0xa3c90b8 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa3c9088 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0xa3c9030 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
              (DeclRefExpr 0xa3c9000 <col:12> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *')
              (DeclRefExpr 0xa3c9018 <col:19> 'const _CharT *' lvalue Var 0xa3c8640 '__pend' 'const _CharT *'))
            (BreakStmt 0xa3c90b0 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa3c9108 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa3c90d4 <col:8> 'const _CharT *' lvalue Var 0xa3c8570 '__p' 'const _CharT *'))
          (CallExpr 0xa3c9190 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3c9138 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa3c911c <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0xa3c8470 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0xa3c9178 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0xa3c92a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa3c9240 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa3c9290 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0xa3c9268 <line:218:4, col:14> 'void'
        (DeclRefExpr 0xa3c9250 <col:14> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *'))
      (NullStmt 0xa3c9280 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0xa3c92e0 <line:222:7, col:17> 'void'
    (DeclRefExpr 0xa3c92c4 <col:17> '_CharT *' lvalue Var 0xa3c8930 '__c' '_CharT *'))
  (ReturnStmt 0xa3c9310 <line:224:7, col:14>
    (DeclRefExpr 0xa3c92f8 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0xa3c8470 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0xa3cac00 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0xa3c9710 <line:232:7, col:30>
    0xa3c96b0 "unsigned long __val =
      (ImplicitCastExpr 0xa3c9700 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0xa3c96e8 <col:29> 'int' 0))")
  (ForStmt 0xa3cab68 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa3c9798 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa3c9750 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa3c9720 <col:14> 'const _CharT *' lvalue ParmVar 0xa3c9530 '__lo' 'const _CharT *')
      (DeclRefExpr 0xa3c9738 <col:21> 'const _CharT *' lvalue ParmVar 0xa3c9580 '__hi' 'const _CharT *'))
    (UnaryOperator 0xa3c97d8 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa3c97bc <col:29> 'const _CharT *' lvalue ParmVar 0xa3c9530 '__lo' 'const _CharT *'))
    (BinaryOperator 0xa3cab50 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0xa3c97ec <line:234:2> 'unsigned long' lvalue Var 0xa3c96b0 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0xa3cab28 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa3caae0 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (UnaryOperator 0xa3c9820 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa3c9804 <col:5> 'const _CharT *' lvalue ParmVar 0xa3c9530 '__lo' 'const _CharT *'))
        (ParenExpr 0xa3caac8 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0xa3caab0 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0xa3c9890 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0xa3c9878 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0xa3c9868 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa3c9834 <col:14> 'unsigned long' lvalue Var 0xa3c96b0 '__val' 'unsigned long'))
                (IntegerLiteral 0xa3c9850 <col:23> 'int' 7)))
            (ParenExpr 0xa3caa98 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0xa3caa80 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0xa3caa38 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0xa3c98a4 <col:9> 'unsigned long' lvalue Var 0xa3c96b0 '__val' 'unsigned long'))
                (ParenExpr 0xa3caa20 <col:18, line:237:17> 'int'
                  (BinaryOperator 0xa3caa08 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0xa3ca9f8 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa3ca9bc <line:236:19, line:237:5> 'const int' lvalue Var 0xa3ca7b0 '__digits' 'const int'))
                    (IntegerLiteral 0xa3ca9e0 <col:16> 'int' 7))))))))))
  (ReturnStmt 0xa3cabf0 <line:238:7, col:37>
    (CXXStaticCastExpr 0xa3cabd8 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0xa3cabc8 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0xa3cabb8 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0xa3cab8c <col:32> 'unsigned long' lvalue Var 0xa3c96b0 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0xa3cddb8 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd400 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa3cd3d0 <col:23> 'long' 1)
    (IntegerLiteral 0xa3cd3e8 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0xa3cddc8 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd488 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cd458 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cd470 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0xa3cddd8 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd508 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa3cd4d8 <col:20> 'long' 1)
    (IntegerLiteral 0xa3cd4f0 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0xa3cdde8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd588 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cd558 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cd570 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0xa3cddf8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd608 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa3cd5d8 <col:22> 'long' 1)
    (IntegerLiteral 0xa3cd5f0 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0xa3cde08 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd688 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0xa3cd658 <col:19> 'long' 1)
    (IntegerLiteral 0xa3cd670 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0xa3cde18 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd708 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cd6d8 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cd6f0 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0xa3cde28 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd788 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa3cd758 <col:20> 'long' 1)
    (IntegerLiteral 0xa3cd770 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0xa3cde38 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd808 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0xa3cd7d8 <col:24> 'long' 1)
    (IntegerLiteral 0xa3cd7f0 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0xa3cde48 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd888 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0xa3cd858 <col:22> 'long' 1)
    (IntegerLiteral 0xa3cd870 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0xa3cde58 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd908 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa3cd8d8 <col:23> 'long' 1)
    (IntegerLiteral 0xa3cd8f0 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0xa3cde68 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cd988 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa3cd958 <col:21> 'long' 1)
    (IntegerLiteral 0xa3cd970 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0xa3cde78 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cda08 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa3cd9d8 <col:20> 'long' 1)
    (IntegerLiteral 0xa3cd9f0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0xa3cde88 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cda88 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa3cda58 <col:21> 'long' 1)
    (IntegerLiteral 0xa3cda70 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0xa3cde98 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cdb08 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0xa3cdad8 <col:23> 'long' 1)
    (IntegerLiteral 0xa3cdaf0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0xa3cdea8 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cdbb8 <col:25, col:46> 'long' '|'
    (BinaryOperator 0xa3cdb88 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0xa3cdb54 <col:25> 'long' EnumConstant 0xa3cd6a0 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa3cdb6c <col:35> 'long' EnumConstant 0xa3cd7a0 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa3cdba0 <col:46> 'long' EnumConstant 0xa3cd620 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0xa3cdeb8 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cdc68 <col:23, col:41> 'long' '|'
    (BinaryOperator 0xa3cdc38 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0xa3cdc04 <col:23> 'long' EnumConstant 0xa3cd4a0 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0xa3cdc1c <col:32> 'long' EnumConstant 0xa3cd720 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0xa3cdc50 <col:41> 'long' EnumConstant 0xa3cd5a0 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0xa3cdec8 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cdce8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0xa3cdcb4 <col:24> 'long' EnumConstant 0xa3cd820 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0xa3cdccc <col:40> 'long' EnumConstant 0xa3cd520 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0xa3cded8 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cdd68 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa3cdd38 <col:29> 'long' 1)
    (IntegerLiteral 0xa3cdd50 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3ce120 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0xa3ce110 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3ce0f8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa3ce0e0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa3ce068 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce058 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce048 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce020 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cdef0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa3ce0c8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce0b8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce0a8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce080 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cdf30 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3ce350 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0xa3ce340 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3ce328 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa3ce310 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa3ce298 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce288 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce278 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce250 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce140 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa3ce2f8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce2e8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce2d8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce2b0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce180 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3ce580 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0xa3ce570 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3ce558 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0xa3ce540 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa3ce4c8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce4b8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce4a8 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce480 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce370 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0xa3ce528 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce518 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce508 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce4e0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce3b0 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0xa3ce730 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0xa3ce720 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa3ce708 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0xa3ce6f0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa3ce6d8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3ce6c8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3ce6b8 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa3ce690 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce5a0 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3cee30 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0xa3cee20 <col:5, col:24>
    (ImplicitCastExpr 0xa3cee10 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa3cedf8 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa3ce8c8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce780 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa3ce978 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa3ce968 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3ce930 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce1e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa3ce910 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3ce8e0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce780 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa3ce920 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3ce8f8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ce7c0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3cf058 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0xa3cf048 <col:5, col:24>
    (ImplicitCastExpr 0xa3cf038 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa3cf020 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa3cef68 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cee60 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa3ceff8 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa3cefe8 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3cefd0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa3cefb0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3cef80 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cee60 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa3cefc0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3cef98 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3ceea0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0xa3cf278 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0xa3cf268 <col:5, col:24>
    (ImplicitCastExpr 0xa3cf258 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0xa3cf240 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0xa3cf188 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cf080 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0xa3cf218 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa3cf208 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3cf1f0 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce410 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa3cf1d0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3cf1a0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cf080 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0xa3cf1e0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa3cf1b8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3cf0c0 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0xa3cf678 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf320 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cf2f0 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cf308 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0xa3cf688 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf3a8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cf378 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cf390 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0xa3cf698 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf428 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cf3f8 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cf410 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0xa3cf6a8 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf4a8 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0xa3cf478 <col:17> 'long' 1)
    (IntegerLiteral 0xa3cf490 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0xa3cf6b8 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf528 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0xa3cf4f8 <col:18> 'long' 1)
    (IntegerLiteral 0xa3cf510 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0xa3cf6c8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf5a8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0xa3cf578 <col:20> 'long' 1)
    (IntegerLiteral 0xa3cf590 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0xa3cf6d8 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3cf628 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0xa3cf5f8 <col:29> 'long' 1)
    (IntegerLiteral 0xa3cf610 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa3cf920 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0xa3cf910 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3cf8f8 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa3cf8e0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0xa3cf868 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cf858 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cf848 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cf820 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cf6f0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa3cf8c8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cf8b8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cf8a8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cf880 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cf730 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa3cfb50 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0xa3cfb40 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3cfb28 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa3cfb10 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0xa3cfa98 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cfa88 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cfa78 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cfa50 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cf940 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa3cfaf8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cfae8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cfad8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cfab0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cf980 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0xa3cfd80 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0xa3cfd70 <col:5, col:71>
    (CXXFunctionalCastExpr 0xa3cfd58 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0xa3cfd40 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0xa3cfcc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cfcb8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cfca8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cfc80 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cfb70 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0xa3cfd28 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cfd18 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cfd08 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cfce0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cfbb0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0xa3cff30 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0xa3cff20 <col:5, col:48>
    (CXXFunctionalCastExpr 0xa3cff08 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0xa3cfef0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0xa3cfed8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3cfec8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3cfeb8 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0xa3cfe90 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cfda0 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa3d2080 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0xa3d2070 <col:5, col:24>
    (ImplicitCastExpr 0xa3d2060 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa3d2048 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa3d1f58 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cff80 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa3d2008 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa3d1ff8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d1fc0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa3d1fa0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d1f70 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cff80 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa3d1fb0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d1f88 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3cffc0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa3d22a8 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0xa3d2298 <col:5, col:24>
    (ImplicitCastExpr 0xa3d2288 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa3d2270 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa3d21b8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d20b0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa3d2248 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa3d2238 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d2220 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf7b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa3d2200 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d21d0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d20b0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa3d2210 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d21e8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d20f0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0xa3d24c8 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0xa3d24b8 <col:5, col:24>
    (ImplicitCastExpr 0xa3d24a8 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0xa3d2490 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0xa3d23d8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d22d0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0xa3d2468 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa3d2458 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d2440 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cfc10 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa3d2420 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d23f0 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d22d0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0xa3d2430 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa3d2408 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0xa3d2310 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0xa3d2798 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3d2540 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0xa3d27a8 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3d25c8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa3d2598 <col:21> 'long' 1)
    (IntegerLiteral 0xa3d25b0 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0xa3d27b8 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3d2648 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa3d2618 <col:21> 'long' 1)
    (IntegerLiteral 0xa3d2630 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0xa3d27c8 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3d26c8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0xa3d2698 <col:21> 'long' 1)
    (IntegerLiteral 0xa3d26b0 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0xa3d27d8 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3d2748 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa3d2718 <col:28> 'long' 1)
    (IntegerLiteral 0xa3d2730 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d2a20 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0xa3d2a10 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa3d29f8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa3d29e0 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0xa3d2968 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2958 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2948 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2920 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d27f0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa3d29c8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d29b8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d29a8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2980 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2830 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d2c50 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0xa3d2c40 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa3d2c28 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa3d2c10 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0xa3d2b98 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2b88 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2b78 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2b50 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2a40 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa3d2bf8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2be8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2bd8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2bb0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2a80 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d2e80 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0xa3d2e70 <col:5, col:70>
    (CXXFunctionalCastExpr 0xa3d2e58 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0xa3d2e40 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0xa3d2dc8 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2db8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2da8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2d80 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2c70 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0xa3d2e28 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2e18 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2e08 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2de0 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2cb0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0xa3d3030 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0xa3d3020 <col:5, col:47>
    (CXXFunctionalCastExpr 0xa3d3008 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0xa3d2ff0 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0xa3d2fd8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0xa3d2fc8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa3d2fb8 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa3d2f90 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d2ea0 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d32f0 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0xa3d32e0 <col:5, col:24>
    (ImplicitCastExpr 0xa3d32d0 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa3d32b8 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa3d31c8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3080 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa3d3278 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa3d3268 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d3230 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2ae0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa3d3210 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d31e0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3080 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa3d3220 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d31f8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d30c0 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d3518 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0xa3d3508 <col:5, col:24>
    (ImplicitCastExpr 0xa3d34f8 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa3d34e0 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa3d3428 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3320 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa3d34b8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa3d34a8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d3490 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d28b0 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa3d3470 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d3440 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3320 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa3d3480 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d3458 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3360 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0xa3d3738 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0xa3d3728 <col:5, col:24>
    (ImplicitCastExpr 0xa3d3718 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0xa3d3700 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa3d3648 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3540 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0xa3d36d8 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0xa3d36c8 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa3d36b0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2d10 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0xa3d3690 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d3660 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3540 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0xa3d36a0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa3d3678 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0xa3d3580 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0xa3d3928 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3d37b0 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0xa3d3938 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3d3808 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0xa3d3948 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3d3858 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0xa3d3958 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa3d38d8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0xa3d38a8 <col:28> 'long' 1)
    (IntegerLiteral 0xa3d38c0 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0xa3d40b4 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd420 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0xa3d4114 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd4a0 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0xa3d4174 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd520 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0xa3d41d4 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd5a0 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0xa3d4234 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd620 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0xa3d4294 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd6a0 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0xa3d42f4 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd720 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0xa3d4354 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd7a0 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0xa3d43b4 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd820 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0xa3d4414 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd8a0 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0xa3d4474 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd920 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0xa3d44d4 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cd9a0 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0xa3d4534 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cda20 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0xa3d4594 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cdaa0 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0xa3d45f4 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cdb20 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0xa3d4654 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cdbd0 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0xa3d46b4 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cdc80 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0xa3d4714 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0xa3cdd00 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0xa3d47c4 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0xa3d25e0 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0xa3d4824 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0xa3d2660 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0xa3d4884 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0xa3d26e0 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0xa3d48e4 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0xa3d2560 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0xa3d4994 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf340 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0xa3d49f4 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf3c0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0xa3d4a54 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf440 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0xa3d4ab4 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf4c0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0xa3d4b14 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf540 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0xa3d4b74 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0xa3cf5c0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0xa3d4c24 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa3d37d0 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0xa3d4c84 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa3d3820 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0xa3d4ce4 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0xa3d3870 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0xa3daeb0 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0xa3dae98 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0xa3d5840 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0xa3daef0 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0xa3daed8 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0xa3d57a0 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0xa3daf30 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0xa3daf18 <col:46> 'int' lvalue ParmVar 0xa3d57f0 '__index' 'int'))
), _M_refcount((IntegerLiteral 0xa3daf58 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0xa3daf98 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0xa3db088 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0xa3db060 <col:28, col:76> 'void'
    (ImplicitCastExpr 0xa3db050 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3dafcc <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0xa1df5f0 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0xa3db020 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0xa3db000 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3d5740
        (CXXThisExpr 0xa3daff0 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0xa3db038 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0xa3db2c8 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0xa3db0a0 <line:481:62>)
  (DeclStmt 0xa3db1e0 <line:482:9, col:77>
    0xa3db0c0 "int __res =
      (CallExpr 0xa3db1b8 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0xa3db1a8 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3db10c <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0xa1df160 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0xa3db160 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0xa3db140 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0xa3d5740
            (CXXThisExpr 0xa3db130 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0xa3db190 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0xa3db178 <col:75> 'int' 1)))")
  (IfStmt 0xa3db270 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0xa3db230 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0xa3db220 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0xa3db1f0 <col:13> 'int' lvalue Var 0xa3db0c0 '__res' 'int'))
      (IntegerLiteral 0xa3db208 <col:22> 'int' 0))
    (CompoundStmt 0xa3db258 <line:484:11, line:486:11>
      (NullStmt 0xa3db248 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0xa3db2b8 <line:487:9, col:16>
    (ImplicitCastExpr 0xa3db2a8 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0xa3db28c <col:16> 'int' lvalue Var 0xa3db0c0 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0xa3db300 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0xa3db2e8 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0xa3db340 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0xa3db328 <col:40> 'int' 0))
) (CompoundStmt 0xa3db370 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0xa3d9578 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa3d9520 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0xa3db408 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0xa3db3f8 <col:7, col:14>
    (ImplicitCastExpr 0xa3db3e8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0xa3db3c4 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
        (CXXThisExpr 0xa3db398 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0xa3db560 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0xa3db4a8 <line:565:7, col:32>
    0xa3db430 "fmtflags __old =
      (ImplicitCastExpr 0xa3db498 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa3db478 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
          (CXXThisExpr 0xa3db468 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa3db510 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0xa3db4c8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
      (CXXThisExpr 0xa3db4b8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa3db500 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3db4e8 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3d9e20 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3db550 <line:567:7, col:14>
    (ImplicitCastExpr 0xa3db540 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3db528 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa3db430 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0xa3db718 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0xa3db608 <line:581:7, col:32>
    0xa3db590 "fmtflags __old =
      (ImplicitCastExpr 0xa3db5f8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa3db5d8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
          (CXXThisExpr 0xa3db5c8 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa3db6b8 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa3db6a8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3db670 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce860 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa3db628 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
      (CXXThisExpr 0xa3db618 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa3db660 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3db648 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3d9f10 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3db708 <line:583:7, col:14>
    (ImplicitCastExpr 0xa3db6f8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3db6dc <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa3db590 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0xa3dba48 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0xa3db7b8 <line:598:7, col:32>
    0xa3db740 "fmtflags __old =
      (ImplicitCastExpr 0xa3db7a8 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0xa3db788 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
          (CXXThisExpr 0xa3db778 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0xa3db8b0 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa3db8a0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3db888 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cef00 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa3db7d8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
      (CXXThisExpr 0xa3db7c8 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa3db868 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa3db858 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3db820 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce620 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa3db810 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa3db7f8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3da010 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0xa3db9e8 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa3db9d8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3db9c0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce860 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa3db8e8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
      (CXXThisExpr 0xa3db8d8 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0xa3db9a8 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0xa3db980 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa3db970 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa3db958 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa3db938 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa3db908 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3d9fd0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa3db948 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa3db920 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3da010 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0xa3dba38 <line:601:7, col:14>
    (ImplicitCastExpr 0xa3dba28 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dba0c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0xa3db740 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0xa3dbb58 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0xa3dbb30 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0xa3dbb20 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa3dbb08 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cef00 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0xa3dba78 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0xa3d5430
      (CXXThisExpr 0xa3dba68 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0xa3dbae8 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa3dbad8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa3dbac0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce620 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0xa3dbab0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa3dba98 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa3da100 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0xa3dbbc0 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0xa3dbbb0 <col:7, col:14>
    (ImplicitCastExpr 0xa3dbba0 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa3dbb80 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0xa3d53b0
        (CXXThisExpr 0xa3dbb70 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0xa3dbd10 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0xa3dbc58 <line:633:7, col:38>
    0xa3dbbe0 "streamsize __old =
      (ImplicitCastExpr 0xa3dbc48 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa3dbc28 <col:26> 'streamsize':'int' lvalue ->_M_precision 0xa3d53b0
          (CXXThisExpr 0xa3dbc18 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa3dbcc0 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa3dbc78 <col:7> 'streamsize':'int' lvalue ->_M_precision 0xa3d53b0
      (CXXThisExpr 0xa3dbc68 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa3dbcb0 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3dbc98 <col:22> 'streamsize':'int' lvalue ParmVar 0xa3da2d0 '__prec' 'streamsize':'int')))
  (ReturnStmt 0xa3dbd00 <line:635:7, col:14>
    (ImplicitCastExpr 0xa3dbcf0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3dbcd8 <col:14> 'streamsize':'int' lvalue Var 0xa3dbbe0 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0xa3dbd80 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0xa3dbd70 <col:7, col:14>
    (ImplicitCastExpr 0xa3dbd60 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0xa3dbd40 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0xa3d53f0
        (CXXThisExpr 0xa3dbd30 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0xa3dbed0 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0xa3dbe18 <line:656:7, col:34>
    0xa3dbda0 "streamsize __old =
      (ImplicitCastExpr 0xa3dbe08 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0xa3dbde8 <col:26> 'streamsize':'int' lvalue ->_M_width 0xa3d53f0
          (CXXThisExpr 0xa3dbdd8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0xa3dbe80 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0xa3dbe38 <col:7> 'streamsize':'int' lvalue ->_M_width 0xa3d53f0
      (CXXThisExpr 0xa3dbe28 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0xa3dbe70 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3dbe58 <col:18> 'streamsize':'int' lvalue ParmVar 0xa3da440 '__wide' 'streamsize':'int')))
  (ReturnStmt 0xa3dbec0 <line:658:7, col:14>
    (ImplicitCastExpr 0xa3dbeb0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa3dbe98 <col:14> 'streamsize':'int' lvalue Var 0xa3dbda0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0xa3dae88 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0xa3dbf58 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0xa3dbf48 <col:7, col:14>
    (CXXConstructExpr 0xa3dbf20 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0xa3dbf00 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa3d98a0
        (CXXThisExpr 0xa3dbef0 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0xa3dbfb0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0xa3dbfa0 <col:7, col:14>
    (MemberExpr 0xa3dbf80 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0xa3d98a0
      (CXXThisExpr 0xa3dbf70 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0xa3dc238 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0xa3dc1e0 <line:744:7, line:745:47>
    0xa3dbfe0 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa3dc1c0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa3dc098 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0xa3dc080 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa3dc060 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa3dc014 <col:25> 'int' lvalue ParmVar 0xa3da8a0 '__ix' 'int'))
            (ImplicitCastExpr 0xa3dc070 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa3dc040 <col:32> 'int' lvalue ->_M_word_size 0xa3d96b0
                (CXXThisExpr 0xa3dc030 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa3dc118 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa3dc0f8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa3dc0c0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
              (CXXThisExpr 0xa3dc0b0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa3dc108 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3dc0e0 <col:14> 'int' lvalue ParmVar 0xa3da8a0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa3dc188 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa3dc140 <col:22> '<bound member function type>' ->_M_grow_words 0xa3d9830
            (CXXThisExpr 0xa3dc130 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa3dc1b0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3dc160 <col:36> 'int' lvalue ParmVar 0xa3da8a0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa3dc178 <col:42> '_Bool' true)))")
  (ReturnStmt 0xa3dc228 <line:746:7, col:21>
    (MemberExpr 0xa3dc208 <col:14, col:21> 'long' lvalue ._M_iword 0xa3d5e00
      (DeclRefExpr 0xa3dc1f0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa3dbfe0 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0xa3dc4b8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0xa3dc460 <line:765:7, line:766:48>
    0xa3dc260 "std::ios_base::_Words &__word =
      (ConditionalOperator 0xa3dc440 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0xa3dc318 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0xa3dc300 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0xa3dc2e0 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0xa3dc294 <col:25> 'int' lvalue ParmVar 0xa3da9a0 '__ix' 'int'))
            (ImplicitCastExpr 0xa3dc2f0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0xa3dc2c0 <col:32> 'int' lvalue ->_M_word_size 0xa3d96b0
                (CXXThisExpr 0xa3dc2b0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0xa3dc398 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0xa3dc378 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0xa3dc340 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
              (CXXThisExpr 0xa3dc330 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0xa3dc388 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3dc360 <col:14> 'int' lvalue ParmVar 0xa3da9a0 '__ix' 'int')))
        (CXXMemberCallExpr 0xa3dc408 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0xa3dc3c0 <col:22> '<bound member function type>' ->_M_grow_words 0xa3d9830
            (CXXThisExpr 0xa3dc3b0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0xa3dc430 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0xa3dc3e0 <col:36> 'int' lvalue ParmVar 0xa3da9a0 '__ix' 'int'))
          (CXXBoolLiteralExpr 0xa3dc3f8 <col:42> '_Bool' false)))")
  (ReturnStmt 0xa3dc4a8 <line:767:7, col:21>
    (MemberExpr 0xa3dc488 <col:14, col:21> 'void *' lvalue ._M_pword 0xa3d5dc0
      (DeclRefExpr 0xa3dc470 <col:14> 'struct std::ios_base::_Words' lvalue Var 0xa3dc260 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0xa3dc6d8 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0xa3dc680 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa3dc65c <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa3dc5c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dc4e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dc6a0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dc63c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4080 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dc6c8 <line:799:5, col:12>
    (DeclRefExpr 0xa3dc6ac <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dc4e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0xa3dc898 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0xa3dc840 <line:806:5, col:38> 'void'
    (MemberExpr 0xa3dc7dc <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa3dc7c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dc700 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dc860 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dc81c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4080 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dc888 <line:807:5, col:12>
    (DeclRefExpr 0xa3dc86c <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dc700 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0xa3dca98 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0xa3dca40 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa3dca1c <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa3dc984 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dc8c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dca60 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dc9fc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d43e0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dca88 <line:815:5, col:12>
    (DeclRefExpr 0xa3dca6c <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dc8c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0xa3dcc58 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0xa3dcc00 <line:822:5, col:37> 'void'
    (MemberExpr 0xa3dcb9c <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa3dcb84 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dcac0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dcc20 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dcbdc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d43e0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dcc48 <line:823:5, col:12>
    (DeclRefExpr 0xa3dcc2c <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dcac0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0xa3dce58 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0xa3dce00 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa3dcddc <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa3dcd44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dcc80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dce20 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dcdbc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4440 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dce48 <line:831:5, col:12>
    (DeclRefExpr 0xa3dce2c <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dcc80 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0xa3dd018 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0xa3dcfc0 <line:838:5, col:38> 'void'
    (MemberExpr 0xa3dcf5c <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa3dcf44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dce80 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dcfe0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dcf9c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4440 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dd008 <line:839:5, col:12>
    (DeclRefExpr 0xa3dcfec <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dce80 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0xa3dd218 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0xa3dd1c0 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa3dd19c <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa3dd104 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dd040 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dd1e0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dd17c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d44a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dd208 <line:847:5, col:12>
    (DeclRefExpr 0xa3dd1ec <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dd040 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0xa3dd3d8 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0xa3dd380 <line:854:5, col:36> 'void'
    (MemberExpr 0xa3dd31c <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa3dd304 <col:5> 'class std::ios_base' lvalue ParmVar 0xa3dd240 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa3dd3a0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa3dd35c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d44a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa3dd3c8 <line:855:5, col:12>
    (DeclRefExpr 0xa3dd3ac <col:12> 'class std::ios_base' lvalue ParmVar 0xa3dd240 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0xa24c958 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0xa24c900 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24c8dc <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa24c844 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24c780 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24c920 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24c8bc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4500 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24c948 <line:863:5, col:12>
    (DeclRefExpr 0xa24c92c <col:12> 'class std::ios_base' lvalue ParmVar 0xa24c780 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0xa24cb18 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0xa24cac0 <line:870:5, col:35> 'void'
    (MemberExpr 0xa24ca5c <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa24ca44 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24c980 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24cae0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24ca9c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4500 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24cb08 <line:871:5, col:12>
    (DeclRefExpr 0xa24caec <col:12> 'class std::ios_base' lvalue ParmVar 0xa24c980 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0xa24cd18 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0xa24ccc0 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24cc9c <col:5, col:12> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa24cc04 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24cb40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24cce0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24cc7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d45c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24cd08 <line:879:5, col:12>
    (DeclRefExpr 0xa24ccec <col:12> 'class std::ios_base' lvalue ParmVar 0xa24cb40 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0xa24ced8 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0xa24ce80 <line:886:5, col:38> 'void'
    (MemberExpr 0xa24ce1c <col:5, col:12> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa24ce04 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24cd40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24cea0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24ce5c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d45c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24cec8 <line:887:5, col:12>
    (DeclRefExpr 0xa24ceac <col:12> 'class std::ios_base' lvalue ParmVar 0xa24cd40 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0xa24d0d8 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0xa24d080 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24d05c <col:6, col:13> '<bound member function type>' .setf 0xa3d9f60
      (DeclRefExpr 0xa24cfc4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa24cf00 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24d0a0 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d03c <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4560 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24d0c8 <line:895:6, col:13>
    (DeclRefExpr 0xa24d0ac <col:13> 'class std::ios_base' lvalue ParmVar 0xa24cf00 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0xa24d298 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0xa24d240 <line:902:6, col:37> 'void'
    (MemberExpr 0xa24d1dc <col:6, col:13> '<bound member function type>' .unsetf 0xa3da1a0
      (DeclRefExpr 0xa24d1c4 <col:6> 'class std::ios_base' lvalue ParmVar 0xa24d100 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24d260 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d21c <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4560 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24d288 <line:903:6, col:13>
    (DeclRefExpr 0xa24d26c <col:13> 'class std::ios_base' lvalue ParmVar 0xa24d100 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0xa24d4f0 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0xa24d480 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24d45c <col:6, col:13> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24d384 <col:6> 'class std::ios_base' lvalue ParmVar 0xa24d2c0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24d4a8 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d3fc <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4200 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24d4b8 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d43c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4620 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24d4e0 <line:912:6, col:13>
    (DeclRefExpr 0xa24d4c4 <col:13> 'class std::ios_base' lvalue ParmVar 0xa24d2c0 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0xa24d750 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0xa24d6e0 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24d6bc <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24d5e4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24d520 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24d708 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d65c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4260 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24d718 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d69c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4620 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24d740 <line:920:5, col:12>
    (DeclRefExpr 0xa24d724 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24d520 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0xa24d9b0 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0xa24d940 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24d91c <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24d844 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24d780 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24d968 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d8bc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4320 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24d978 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24d8fc <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4620 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24d9a0 <line:928:5, col:12>
    (DeclRefExpr 0xa24d984 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24d780 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0xa24dc10 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0xa24dba0 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24db7c <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24daa4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24d9e0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24dbc8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24db1c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d40e0 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24dbd8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24db5c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24dc00 <line:937:5, col:12>
    (DeclRefExpr 0xa24dbe4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24d9e0 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0xa24de70 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0xa24de00 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24dddc <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24dd04 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24dc40 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24de28 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24dd7c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24de38 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24ddbc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24de60 <line:945:5, col:12>
    (DeclRefExpr 0xa24de44 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24dc40 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0xa24e0d0 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0xa24e060 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24e03c <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24df64 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24dea0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24e088 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24dfdc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24e098 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24e01c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24e0c0 <line:953:5, col:12>
    (DeclRefExpr 0xa24e0a4 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24dea0 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0xa24e330 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0xa24e2c0 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24e29c <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24e1c4 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24e100 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24e2e8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24e23c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4140 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24e2f8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24e27c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d46e0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24e320 <line:962:5, col:12>
    (DeclRefExpr 0xa24e304 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24e100 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0xa24e590 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0xa24e520 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa24e4fc <col:5, col:12> '<bound member function type>' .setf 0xa3da090
      (DeclRefExpr 0xa24e424 <col:5> 'class std::ios_base' lvalue ParmVar 0xa24e360 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa24e548 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24e49c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4380 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0xa24e558 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa24e4dc <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d46e0 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa24e580 <line:970:5, col:12>
    (DeclRefExpr 0xa24e564 <col:12> 'class std::ios_base' lvalue ParmVar 0xa24e360 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0xa3fa428 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0xa3fa650 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0xa3fa500 <line:208:2, col:30>
    0xa3fa440 "std::locale __tmp =
      (ParenListExpr 0xa3fa4e0 <col:14, col:29> 'class std::locale'
        (CallExpr 0xa3fa4c0 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fa488 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fa478 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0xa3fa570 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa3fa520 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0xa3fa510 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fa554 <col:14> 'const class std::locale' lvalue ParmVar 0xa3f25f0 '__loc' 'const class std::locale &'))
  (BinaryOperator 0xa3fa5d8 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0xa3fa5a0 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0xa3f24d0
      (CXXThisExpr 0xa3fa590 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fa5c0 <col:18> 'const class std::locale' lvalue ParmVar 0xa3f25f0 '__loc' 'const class std::locale &'))
  (ReturnStmt 0xa3fa640 <line:211:2, col:9>
    (CXXConstructExpr 0xa3fa618 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa3fa608 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa3fa5f0 <col:9> 'class std::locale' lvalue Var 0xa3fa440 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0xa3fa6c8 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0xa3fa6b8 <col:9, col:16>
    (MemberExpr 0xa3fa698 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0xa3f24d0
      (CXXThisExpr 0xa3fa688 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa3fa790 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0xa3fa780 <col:9, col:37>
    (CallExpr 0xa3fa758 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fa6f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fa6e0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fa724 <col:29> 'char_type *' lvalue ParmVar 0xa3f2730 '__s' 'char_type *')
      (DeclRefExpr 0xa3fa73c <col:34> 'streamsize':'int' lvalue ParmVar 0xa3f2770 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3fa060 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3fa050 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3fa038 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3fa018 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3f9fb4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3fa028 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3f9ff4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3fa870 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0xa3fa860 <col:9, col:50>
    (CallExpr 0xa3fa838 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fa7b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fa7a8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fa7ec <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa3f28b0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa3fa804 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa3f2940 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0xa3fa81c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f29d0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa3fa150 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3fa140 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3fa128 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3fa108 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa0a4 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3fa118 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa0e4 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3fa938 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0xa3fa928 <col:9, col:42>
    (CallExpr 0xa3fa900 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fa898 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fa888 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fa8cc <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa3f2b10 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0xa3fa8e4 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa3f2b80 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0xa3fa9c8 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0xa3fa9b8 <col:19, col:37>
    (CallExpr 0xa3fa998 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fa960 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fa950 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0xa3fac50 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0xa3fab58 <line:265:2, col:55>
    0xa3fa9f0 "const streamsize __ret =
      (CXXOperatorCallExpr 0xa3fab30 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa3faaf8 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CallExpr 0xa3faa70 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3faa38 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0xa3faa28 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3faad8 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3faaa0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa3faa90 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0xa3fac40 <line:266:2, col:41>
    (ConditionalOperator 0xa3fac20 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0xa3fac10 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa3fac00 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa3fab68 <col:9> 'const streamsize':'const int' lvalue Var 0xa3fa9f0 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0xa3fab80 <col:17> 'const streamsize':'const int' lvalue Var 0xa3fa9f0 '__ret' 'const streamsize':'const int')
      (CallExpr 0xa3fabe0 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3faba8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fab98 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0xa3faf78 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0xa3fad20 <line:279:2, col:37>
    0xa3fac70 "int_type __ret =
      (CallExpr 0xa3fad00 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3facc8 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0xa3faf30 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0xa3fae70 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0xa3fad30 <line:280:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0xa3fae48 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0xa3fae20 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fad68 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0xa3fade8 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3fadb0 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0xa3fada0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa3fae04 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fac70 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0xa3fae60 <col:22> '_Bool' true))
    (BinaryOperator 0xa3faf18 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa3fae94 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fac70 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3faef8 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3faec0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3faeb0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0xa3faf68 <line:283:2, col:9>
    (DeclRefExpr 0xa3faf4c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fac70 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0xa3fb418 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0xa3fafd8 <line:297:2, col:16>
    0xa3fafa0 "int_type __ret")
  (IfStmt 0xa3fb3d0 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0xa3fb150 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa3fafe8 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa3fb118 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb0d0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3fb048 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb010 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fb000 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3fb0b0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb078 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fb068 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa3fb140 <col:53> '_Bool' true))
    (CompoundStmt 0xa3fb320 <line:299:4, line:302:4>
      (BinaryOperator 0xa3fb288 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa3fb174 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fafa0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa3fb268 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb1b0 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa3fb250 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa3fb230 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3fb1f8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa3fb1e8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa3fb300 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fb2b0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fb2a0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa3fb2e8 <col:18> 'int' 1)))
    (BinaryOperator 0xa3fb3b8 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0xa3fb338 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fafa0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fb398 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fb360 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fb350 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa3fb408 <line:305:2, col:9>
    (DeclRefExpr 0xa3fb3ec <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fafa0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0xa3fb820 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0xa3fb478 <line:319:2, col:16>
    0xa3fb440 "int_type __ret")
  (IfStmt 0xa3fb7d8 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0xa3fb5f0 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa3fb488 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa3fb5b8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fb570 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3fb4e8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb4b0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fb4a0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3fb550 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb518 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fb508 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa3fb5e0 <col:53> '_Bool' true))
    (BinaryOperator 0xa3fb728 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0xa3fb614 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb440 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fb708 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fb650 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0xa3fb6f0 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0xa3fb6d0 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3fb698 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa3fb688 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0xa3fb7c0 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa3fb740 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb440 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fb7a0 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fb768 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fb758 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa3fb810 <line:324:2, col:9>
    (DeclRefExpr 0xa3fb7f4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb440 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa3fb8f0 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0xa3fb8e0 <col:9, col:37>
    (CallExpr 0xa3fb8b8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fb850 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fb840 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fb884 <col:29> 'char_type *' lvalue ParmVar 0xa3f2f60 '__s' 'char_type *')
      (DeclRefExpr 0xa3fb89c <col:34> 'streamsize':'int' lvalue ParmVar 0xa3f2fa0 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0xa3fc038 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0xa3fb948 <line:353:2, col:16>
    0xa3fb910 "int_type __ret")
  (DeclStmt 0xa3fbad8 <line:354:2, col:53>
    0xa3fb960 "const bool __testpos =
      (CXXOperatorCallExpr 0xa3fbab0 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fba68 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3fb9e0 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fb9a8 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fb998 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3fba48 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fba10 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fba00 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0xa3fbff0 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0xa3fbcc8 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0xa3fbae8 <line:355:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa3fbca0 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0xa3fbb28 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa3fbb18 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa3fbb00 <col:24> 'const _Bool' lvalue Var 0xa3fb960 '__testpos' 'const _Bool')))
        (UnaryOperator 0xa3fbc88 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa3fbc60 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3fbb60 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0xa3fbb94 <col:26> 'char_type':'_CharT' lvalue ParmVar 0xa3f30b0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa3fbc48 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0xa3fbbf8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa3fbbc0 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa3fbbb0 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0xa3fbc30 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0xa3fbc18 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0xa3fbcb8 <col:50> '_Bool' false))
    (BinaryOperator 0xa3fbe00 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0xa3fbcec <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb910 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fbde0 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fbd18 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fbd08 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa3fbdc0 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fbd70 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3fbda4 <col:53> 'char_type':'_CharT' lvalue ParmVar 0xa3f30b0 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0xa3fbfd8 <line:359:4, line:362:4>
      (CallExpr 0xa3fbe90 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fbe28 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fbe18 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa3fbe78 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa3fbe60 <col:19> 'int' 1)))
      (BinaryOperator 0xa3fbfc0 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa3fbeb0 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb910 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa3fbfa0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fbee8 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa3fbf88 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa3fbf68 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3fbf30 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa3fbf20 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0xa3fc028 <line:363:2, col:9>
    (DeclRefExpr 0xa3fc00c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fb910 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0xa3fc4f0 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0xa3fc098 <line:378:2, col:16>
    0xa3fc060 "int_type __ret")
  (IfStmt 0xa3fc4a8 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0xa3fc210 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa3fc0a8 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa3fc1d8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fc190 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3fc108 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc0d0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fc0c0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3fc170 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc138 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fc128 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa3fc200 <col:53> '_Bool' true))
    (CompoundStmt 0xa3fc3f8 <line:380:4, line:383:4>
      (CallExpr 0xa3fc2b0 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fc248 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fc238 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0xa3fc298 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0xa3fc280 <col:19> 'int' 1)))
      (BinaryOperator 0xa3fc3e0 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa3fc2d0 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc060 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa3fc3c0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc308 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa3fc3a8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa3fc388 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa3fc350 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa3fc340 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0xa3fc490 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0xa3fc410 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc060 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fc470 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fc438 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fc428 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0xa3fc4e0 <line:386:2, col:9>
    (DeclRefExpr 0xa3fc4c4 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc060 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0xa3fca78 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0xa3fc558 <line:405:2, col:16>
    0xa3fc520 "int_type __ret")
  (IfStmt 0xa3fca30 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0xa3fc6d0 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0xa3fc568 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0xa3fc698 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa3fc650 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa3fc5c8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc590 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fc580 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0xa3fc630 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc5f8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fc5e8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0xa3fc6c0 <col:53> '_Bool' true))
    (CompoundStmt 0xa3fc8e8 <line:407:4, line:411:4>
      (BinaryOperator 0xa3fc790 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0xa3fc760 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0xa3fc740 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa3fc708 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa3fc6f8 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa3fc774 <col:22> 'char_type':'_CharT' lvalue ParmVar 0xa3f3240 '__c' 'char_type':'_CharT'))
      (CallExpr 0xa3fc808 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fc7b8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fc7a8 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa3fc7f0 <col:18> 'int' 1))
      (BinaryOperator 0xa3fc8d0 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0xa3fc828 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc520 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa3fc8b0 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc860 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3fc894 <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa3f3240 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0xa3fca18 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0xa3fc904 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc520 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0xa3fc9f8 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fc930 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa3fc920 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0xa3fc9d8 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fc988 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0xa3fc9bc <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa3f3240 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0xa3fca68 <line:414:2, col:9>
    (DeclRefExpr 0xa3fca4c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fc520 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa3fcb48 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0xa3fcb38 <col:9, col:37>
    (CallExpr 0xa3fcb10 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fcaa8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa3fca98 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fcadc <col:29> 'const char_type *' lvalue ParmVar 0xa3f3330 '__s' 'const char_type *')
      (DeclRefExpr 0xa3fcaf4 <col:34> 'streamsize':'int' lvalue ParmVar 0xa3f3370 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0xa3fcb60 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0xa3fcbb8 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0xa3fcc08 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0xa3fcc58 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0xa3fcca8 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0xa3fccf8 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0xa3fcd88 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0xa3fcd80)
  (CXXTemporaryObjectExpr 0xa3fcd50 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0xa3fce58 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0xa3fcea8 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0xa3fce98 <col:23, col:30>
    (MemberExpr 0xa3fce78 <col:30> 'char_type *const' lvalue ->_M_in_beg 0xa3f2350
      (CXXThisExpr 0xa3fce68 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0xa3fcf00 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0xa3fcef0 <col:23, col:30>
    (MemberExpr 0xa3fced0 <col:30> 'char_type *const' lvalue ->_M_in_cur 0xa3f2390
      (CXXThisExpr 0xa3fcec0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0xa3fcf58 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0xa3fcf48 <col:23, col:30>
    (MemberExpr 0xa3fcf28 <col:30> 'char_type *const' lvalue ->_M_in_end 0xa3f23d0
      (CXXThisExpr 0xa3fcf18 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0xa3fcfd8 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0xa3fcfb8 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa3fcf80 <col:24> 'char_type *' lvalue ->_M_in_cur 0xa3f2390
      (CXXThisExpr 0xa3fcf70 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fcfa0 <col:37> 'int' lvalue ParmVar 0xa3f3700 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0xa3fd110 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0xa3fd038 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa3fd000 <col:2> 'char_type *' lvalue ->_M_in_beg 0xa3f2350
      (CXXThisExpr 0xa3fcff0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fd020 <col:14> 'char_type *' lvalue ParmVar 0xa3f37d0 '__gbeg' 'char_type *'))
  (BinaryOperator 0xa3fd098 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa3fd060 <col:2> 'char_type *' lvalue ->_M_in_cur 0xa3f2390
      (CXXThisExpr 0xa3fd050 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fd080 <col:14> 'char_type *' lvalue ParmVar 0xa3f3820 '__gnext' 'char_type *'))
  (BinaryOperator 0xa3fd0f8 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0xa3fd0c0 <col:2> 'char_type *' lvalue ->_M_in_end 0xa3f23d0
      (CXXThisExpr 0xa3fd0b0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fd0e0 <col:14> 'char_type *' lvalue ParmVar 0xa3f3870 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0xa3fd170 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0xa3fd160 <col:23, col:30>
    (MemberExpr 0xa3fd140 <col:30> 'char_type *const' lvalue ->_M_out_beg 0xa3f2410
      (CXXThisExpr 0xa3fd130 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0xa3fd1c8 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0xa3fd1b8 <col:22, col:29>
    (MemberExpr 0xa3fd198 <col:29> 'char_type *const' lvalue ->_M_out_cur 0xa3f2450
      (CXXThisExpr 0xa3fd188 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0xa3fd220 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0xa3fd210 <col:23, col:30>
    (MemberExpr 0xa3fd1f0 <col:30> 'char_type *const' lvalue ->_M_out_end 0xa3f2490
      (CXXThisExpr 0xa3fd1e0 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0xa3fd2a0 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0xa3fd280 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa3fd248 <col:24> 'char_type *' lvalue ->_M_out_cur 0xa3f2450
      (CXXThisExpr 0xa3fd238 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fd268 <col:38> 'int' lvalue ParmVar 0xa3f3b00 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0xa3fd3c0 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0xa3fd348 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0xa3fd2c8 <col:2> 'char_type *' lvalue ->_M_out_beg 0xa3f2410
      (CXXThisExpr 0xa3fd2b8 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0xa3fd330 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0xa3fd2f8 <col:15> 'char_type *' lvalue ->_M_out_cur 0xa3f2450
        (CXXThisExpr 0xa3fd2e8 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa3fd318 <col:28> 'char_type *' lvalue ParmVar 0xa3f3bd0 '__pbeg' 'char_type *')))
  (BinaryOperator 0xa3fd3a8 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0xa3fd370 <col:2> 'char_type *' lvalue ->_M_out_end 0xa3f2490
      (CXXThisExpr 0xa3fd360 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa3fd390 <col:15> 'char_type *' lvalue ParmVar 0xa3f3c20 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0xa3fd3d8 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0xa3fd408 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0xa3fd3f8 <col:9, col:16>
    (CXXThisExpr 0xa3fd3e8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0xa3fa240 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3fa230 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3fa218 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3fa1f8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa194 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3fa208 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa1d4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3fd4b0 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0xa3fd4a0 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa3fd480 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa3fd460 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa3fd448 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa3fd430 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0xa3fa330 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa3fa320 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa3fa308 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa3fa2e8 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa284 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa3fa2f8 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa3fa2c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa3fd558 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0xa3fd548 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0xa3fd528 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0xa3fd508 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0xa3fd4f0 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0xa3fd4d8 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0xa3fd598 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0xa3fd588 <col:16, col:23>
    (IntegerLiteral 0xa3fd570 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0xa3fd5d8 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0xa3fd5c8 <col:21, col:28>
    (IntegerLiteral 0xa3fd5b0 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0xa3fd678 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0xa3fd668 <col:9, col:33>
    (CallExpr 0xa3fd648 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa3fd610 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0xa4008e8 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0xa3fd750 <line:681:2, col:37>
    0xa3fd6a0 "int_type __ret =
      (CallExpr 0xa3fd730 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fd6f8 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0xa400690 <line:682:2, line:683:14>
    0xa3fd770 "const bool __testeof =
      (CallExpr 0xa400668 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa3fd7c8 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0xa3fd848 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa3fd810 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0xa3fd800 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa3fd864 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fd6a0 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa4008a0 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0xa4006c8 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4006b8 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa4006a0 <col:7> 'const _Bool' lvalue Var 0xa3fd770 '__testeof' 'const _Bool')))
    (CompoundStmt 0xa400888 <line:685:4, line:688:4>
      (BinaryOperator 0xa4007f0 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0xa4006dc <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fd6a0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa4007d0 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa400718 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0xa4007b8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0xa400798 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa400760 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0xa400750 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0xa400868 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa400818 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa400808 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0xa400850 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0xa4008d8 <line:689:2, col:9>
    (DeclRefExpr 0xa4008bc <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0xa3fd6a0 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0xa3fa3a0 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3fa378 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0xa400990 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0xa400980 <col:9, col:33>
    (CallExpr 0xa400960 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa400928 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0xa3fa408 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa3fa3e0 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0xa400a30 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0xa400a20 <col:9, col:33>
    (CallExpr 0xa400a00 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4009c8 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0xa400c90 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0xa400c70 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa400b60 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa400b18 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (CallExpr 0xa400a90 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa400a58 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa400a48 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0xa400af8 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa400ac0 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa400ab0 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0xa400be8 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa400b98 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa400b88 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa400bd0 <col:16> 'int' 1))
    (CallExpr 0xa400c50 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa400c18 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa400c08 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0xa400d10 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0xa400cf0 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa400cb8 <col:38> 'char_type *' lvalue ->_M_in_cur 0xa3f2390
      (CXXThisExpr 0xa400ca8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa400cd8 <col:51> 'streamsize':'int' lvalue ParmVar 0xa3f9af0 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0xa400d90 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0xa400d70 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0xa400d38 <col:38> 'char_type *' lvalue ->_M_out_cur 0xa3f2450
      (CXXThisExpr 0xa400d28 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa400d58 <col:52> 'streamsize':'int' lvalue ParmVar 0xa3f9be0 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0xa400dc0 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0xa400da4 <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0xa400e50 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0xa400e38 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0xa400ee0 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0xa400ec8 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0xa400f70 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0xa400f58 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0xa401000 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0xa400fe8 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0xa401090 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0xa401078 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0xa401120 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0xa401108 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa3f9d30 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0xa4011b8 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0xa401200 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0xa4011f0 <col:44, col:52>
    (UnaryOperator 0xa4011d8 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4011c8 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0xa4034e8 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0xa4026e0 <line:48:7, col:27>
    0xa402690 "streamsize __ret =
      (IntegerLiteral 0xa4026c8 <col:26> 'int' 0)")
  (WhileStmt 0xa403498 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0xa402740 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa402720 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa4026f0 <col:14> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa402730 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa402708 <col:22> 'streamsize':'int' lvalue ParmVar 0xa402590 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa403478 <line:50:2, line:73:2>
      (DeclStmt 0xa4028c8 <line:51:4, col:61>
        0xa402760 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa4028a0 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa402868 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (CallExpr 0xa4027e0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa4027a8 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa402798 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa402848 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa402810 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa402800 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa402fe8 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa402900 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa4028f0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa4028d8 <col:8> 'const streamsize':'const int' lvalue Var 0xa402760 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa402fc0 <line:53:6, line:60:6>
          (DeclStmt 0xa4029c0 <line:54:8, col:50>
            0xa402920 "const streamsize __remaining =
              (BinaryOperator 0xa4029a8 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa402988 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa402954 <col:39> 'streamsize':'int' lvalue ParmVar 0xa402590 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa402998 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa40296c <col:45> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa402d60 <line:55:8, col:65>
            0xa4029e0 "const streamsize __len =
              (ImplicitCastExpr 0xa402d50 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa402d28 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa402d18 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa402cb8 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa402c10 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa159fa0 'min')))
                  (DeclRefExpr 0xa402a70 <col:42> 'const streamsize':'const int' lvalue Var 0xa402760 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa402a88 <col:53> 'const streamsize':'const int' lvalue Var 0xa402920 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa402e68 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa402d98 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0xa402dcc <col:26> 'char_type *' lvalue ParmVar 0xa402550 '__s' 'char_type *')
            (CallExpr 0xa402e30 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa402df8 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa402de8 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa402e4c <col:45> 'const streamsize':'const int' lvalue Var 0xa4029e0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa402ed0 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa402e90 <col:8> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa402ec0 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa402ea8 <col:17> 'const streamsize':'const int' lvalue Var 0xa4029e0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa402f20 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa402ef0 <col:8> 'char_type *' lvalue ParmVar 0xa402550 '__s' 'char_type *')
            (DeclRefExpr 0xa402f08 <col:15> 'const streamsize':'const int' lvalue Var 0xa4029e0 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa402fa0 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa402f50 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa402f40 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa402f84 <col:27> 'const streamsize':'const int' lvalue Var 0xa4029e0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa403458 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa403058 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa403038 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa403004 <col:8> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa403048 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa40301c <col:16> 'streamsize':'int' lvalue ParmVar 0xa402590 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa403440 <line:63:6, line:72:6>
          (DeclStmt 0xa403120 <line:64:8, col:42>
            0xa403080 "const int_type __c =
              (CallExpr 0xa403100 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4030c8 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4030b8 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0xa403420 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0xa403240 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa403218 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa403150 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa403184 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa403080 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0xa4031f8 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4031c0 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa403400 <line:66:3, line:69:3>
              (CallExpr 0xa4033a8 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa403280 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0xa403300 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa4032e8 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa4032b4 <col:26> 'char_type *' lvalue ParmVar 0xa402550 '__s' 'char_type *')))
                (CallExpr 0xa403388 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa403338 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa40336c <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa403080 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0xa4033e8 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa4033cc <col:7> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int')))
            (BreakStmt 0xa403418 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa4034d8 <line:74:7, col:14>
    (ImplicitCastExpr 0xa4034c8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa4034ac <col:14> 'streamsize':'int' lvalue Var 0xa402690 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0xa404478 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0xa403940 <line:82:7, col:27>
    0xa4038f0 "streamsize __ret =
      (IntegerLiteral 0xa403928 <col:26> 'int' 0)")
  (WhileStmt 0xa404428 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0xa4039a0 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0xa403980 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa403950 <col:14> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0xa403990 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa403968 <col:22> 'streamsize':'int' lvalue ParmVar 0xa4037f0 '__n' 'streamsize':'int')))
    (CompoundStmt 0xa404408 <line:84:2, line:107:2>
      (DeclStmt 0xa403b28 <line:85:4, col:61>
        0xa4039c0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0xa403b00 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa403ac8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (CallExpr 0xa403a40 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa403a08 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0xa4039f8 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0xa403aa8 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa403a70 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0xa403a60 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0xa404020 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa403b60 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa403b50 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa403b38 <col:8> 'const streamsize':'const int' lvalue Var 0xa4039c0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0xa403ff8 <line:87:6, line:94:6>
          (DeclStmt 0xa403c20 <line:88:8, col:50>
            0xa403b80 "const streamsize __remaining =
              (BinaryOperator 0xa403c08 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0xa403be8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa403bb4 <col:39> 'streamsize':'int' lvalue ParmVar 0xa4037f0 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0xa403bf8 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa403bcc <col:45> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int')))")
          (DeclStmt 0xa403d98 <line:89:8, col:65>
            0xa403c40 "const streamsize __len =
              (ImplicitCastExpr 0xa403d88 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0xa403d60 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa403d50 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa403d28 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0xa402c10 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa159fa0 'min')))
                  (DeclRefExpr 0xa403cc8 <col:42> 'const streamsize':'const int' lvalue Var 0xa4039c0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0xa403ce0 <col:53> 'const streamsize':'const int' lvalue Var 0xa403b80 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0xa403ea0 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa403dd0 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0xa403e50 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa403e18 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa403e08 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa403e6c <col:40> 'const char_type *' lvalue ParmVar 0xa4037b0 '__s' 'const char_type *')
            (DeclRefExpr 0xa403e84 <col:45> 'const streamsize':'const int' lvalue Var 0xa403c40 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0xa403f08 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa403ec8 <col:8> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0xa403ef8 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa403ee0 <col:17> 'const streamsize':'const int' lvalue Var 0xa403c40 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0xa403f58 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa403f28 <col:8> 'const char_type *' lvalue ParmVar 0xa4037b0 '__s' 'const char_type *')
            (DeclRefExpr 0xa403f40 <col:15> 'const streamsize':'const int' lvalue Var 0xa403c40 '__len' 'const streamsize':'const int'))
          (CallExpr 0xa403fd8 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa403f88 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa403f78 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa403fbc <col:27> 'const streamsize':'const int' lvalue Var 0xa403c40 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0xa4043e8 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0xa404090 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0xa404070 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa40403c <col:8> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0xa404080 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa404054 <col:16> 'streamsize':'int' lvalue ParmVar 0xa4037f0 '__n' 'streamsize':'int')))
        (CompoundStmt 0xa4043d0 <line:97:6, line:106:6>
          (DeclStmt 0xa4041f8 <line:98:8, col:69>
            0xa4040b0 "int_type __c =
              (CallExpr 0xa4041d8 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4040f8 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4040e8 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0xa4041b8 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa404150 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0xa4041a0 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0xa404184 <col:64> 'const char_type *' lvalue ParmVar 0xa4037b0 '__s' 'const char_type *'))))")
          (IfStmt 0xa4043b0 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0xa404318 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0xa4042f0 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa404228 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa40425c <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0xa4040b0 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa4042d0 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa404298 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0xa404390 <line:100:3, line:103:3>
              (UnaryOperator 0xa404348 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa40432c <col:7> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int'))
              (UnaryOperator 0xa404378 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa40435c <col:7> 'const char_type *' lvalue ParmVar 0xa4037b0 '__s' 'const char_type *')))
            (BreakStmt 0xa4043a8 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0xa404468 <line:108:7, col:14>
    (ImplicitCastExpr 0xa404458 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa40443c <col:14> 'streamsize':'int' lvalue Var 0xa4038f0 '__ret' 'streamsize':'int'))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0xa407b48 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0xa4074f0 <line:120:7, col:27>
    0xa4074a0 "streamsize __ret =
      (IntegerLiteral 0xa4074d8 <col:26> 'int' 0)")
  (BinaryOperator 0xa407528 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0xa407500 <col:7> '_Bool' lvalue ParmVar 0xa407370 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0xa407518 <col:17> '_Bool' true))
  (DeclStmt 0xa407658 <line:122:7, col:55>
    0xa4075b0 "typename _Traits::int_type __c =
      (CallExpr 0xa407638 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa407600 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0xa4075e4 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4071b0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0xa407af8 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0xa407758 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0xa407730 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa407688 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0xa4076ac <col:36> 'typename _Traits::int_type' lvalue Var 0xa4075b0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa407710 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa4076e8 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0xa407ad8 <line:124:2, line:133:2>
      (BinaryOperator 0xa407878 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa40776c <col:4> 'typename _Traits::int_type' lvalue Var 0xa4075b0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa407858 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4077a0 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0xa407784 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa407320 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0xa407838 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa4077f8 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0xa40781c <col:47> 'typename _Traits::int_type' lvalue Var 0xa4075b0 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0xa4079e8 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0xa407960 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa4078b8 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0xa4078dc <col:29> 'typename _Traits::int_type' lvalue Var 0xa4075b0 '__c' 'typename _Traits::int_type')
          (CallExpr 0xa407940 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa407918 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0xa4079d0 <line:127:6, line:130:6>
          (BinaryOperator 0xa4079b0 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0xa407984 <col:8> '_Bool' lvalue ParmVar 0xa407370 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0xa4079a0 <col:18> '_Bool' false))
          (BreakStmt 0xa4079c8 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0xa407a20 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0xa407a04 <col:6> 'streamsize':'int' lvalue Var 0xa4074a0 '__ret' 'streamsize':'int'))
      (BinaryOperator 0xa407ac0 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0xa407a34 <col:4> 'typename _Traits::int_type' lvalue Var 0xa4075b0 '__c' 'typename _Traits::int_type')
        (CallExpr 0xa407aa0 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa407a68 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0xa407a4c <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4071b0 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0xa407b38 <line:134:7, col:14>
    (ImplicitCastExpr 0xa407b28 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa407b0c <col:14> 'streamsize':'int' lvalue Var 0xa4074a0 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0xa408100 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0xa408038 <line:142:7, col:19>
    0xa408000 "bool __ineof")
  (ReturnStmt 0xa4080f0 <line:143:7, col:60>
    (CallExpr 0xa4080c8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0xa408048 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa407460)
      (DeclRefExpr 0xa40807c <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa407d50 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa408094 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa407ec0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa4080ac <col:53> '_Bool' lvalue Var 0xa408000 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0xa41b380 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0xa41b3d8 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0xa41b428 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0xa41b478 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0xa41b4c8 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0xa41b518 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0xa41b568 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0xa41b5b8 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0xa41b608 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0xa41b658 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0xa41b6a8 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0xa41b6f8 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0xa41bcd8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41bcb8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41b790 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41b760 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41b744 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41b778 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41b888 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41b878 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41b850 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41b838 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41b808 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41b7f0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41b7a8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41b7d8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41b7c0 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41b820 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41bca0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41bc80 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41b8e8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41b8b8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41b8a0 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41b8d0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41b9e0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41b9d0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41b9a8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41b990 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41b960 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41b948 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41b900 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41b930 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41b918 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41b978 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41bc68 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41bc48 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41ba40 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41ba10 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41b9f8 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41ba28 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41bb38 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41bb28 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41bb00 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41bae8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41bab8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41baa0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41ba58 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41ba88 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41ba70 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41bad0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41bc30 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41bc20 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41bbf8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41bbe0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41bbb0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41bb98 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41bb50 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41bb80 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41bb68 <line:87:24> 'int' EnumConstant 0xa41b3a0 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41bbc8 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0xa41c2b8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41c298 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41bd70 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41bd40 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41bd24 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41bd58 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41be68 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41be58 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41be30 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41be18 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41bde8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41bdd0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41bd88 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41bdb8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41bda0 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41be00 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41c280 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41c260 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41bec8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41be98 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41be80 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41beb0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41bfc0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41bfb0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41bf88 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41bf70 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41bf40 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41bf28 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41bee0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41bf10 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41bef8 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41bf58 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41c248 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41c228 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41c020 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41bff0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41bfd8 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41c008 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41c118 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41c108 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41c0e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41c0c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41c098 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41c080 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41c038 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41c068 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41c050 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41c0b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41c210 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41c200 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41c1d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41c1c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41c190 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41c178 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41c130 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41c160 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41c148 <line:88:24> 'int' EnumConstant 0xa41b3f0 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41c1a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0xa41c898 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41c878 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41c350 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41c320 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41c304 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41c338 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41c448 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41c438 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41c410 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41c3f8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41c3c8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41c3b0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41c368 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41c398 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41c380 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41c3e0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41c860 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41c840 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41c4a8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41c478 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41c460 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41c490 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41c5a0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41c590 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41c568 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41c550 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41c520 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41c508 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41c4c0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41c4f0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41c4d8 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41c538 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41c828 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41c808 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41c600 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41c5d0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41c5b8 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41c5e8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41c6f8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41c6e8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41c6c0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41c6a8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41c678 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41c660 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41c618 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41c648 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41c630 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41c690 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41c7f0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41c7e0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41c7b8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41c7a0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41c770 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41c758 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41c710 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41c740 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41c728 <line:89:24> 'int' EnumConstant 0xa41b440 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41c788 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0xa41ce78 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41ce58 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41c930 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41c900 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41c8e4 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41c918 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41ca28 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41ca18 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41c9f0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41c9d8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41c9a8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41c990 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41c948 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41c978 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41c960 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41c9c0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41ce40 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41ce20 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41ca88 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41ca58 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41ca40 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41ca70 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41cb80 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41cb70 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41cb48 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41cb30 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41cb00 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41cae8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41caa0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41cad0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41cab8 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41cb18 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41ce08 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41cde8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41cbe0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41cbb0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41cb98 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41cbc8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41ccd8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41ccc8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41cca0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41cc88 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41cc58 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41cc40 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41cbf8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41cc28 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41cc10 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41cc70 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41cdd0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41cdc0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41cd98 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41cd80 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41cd50 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41cd38 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41ccf0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41cd20 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41cd08 <line:90:24> 'int' EnumConstant 0xa41b490 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41cd68 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0xa41d458 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41d438 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41cf10 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41cee0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41cec4 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41cef8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41d008 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41cff8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41cfd0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41cfb8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41cf88 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41cf70 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41cf28 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41cf58 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41cf40 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41cfa0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41d420 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41d400 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41d068 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41d038 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41d020 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41d050 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41d160 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41d150 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41d128 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41d110 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41d0e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41d0c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41d080 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41d0b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41d098 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41d0f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41d3e8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41d3c8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41d1c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41d190 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41d178 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41d1a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41d2b8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41d2a8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41d280 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41d268 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41d238 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41d220 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41d1d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41d208 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41d1f0 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41d250 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41d3b0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41d3a0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41d378 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41d360 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41d330 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41d318 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41d2d0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41d300 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41d2e8 <line:91:25> 'int' EnumConstant 0xa41b4e0 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41d348 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0xa41da38 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41da18 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41d4f0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41d4c0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41d4a4 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41d4d8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41d5e8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41d5d8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41d5b0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41d598 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41d568 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41d550 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41d508 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41d538 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41d520 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41d580 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41da00 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41d9e0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41d648 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41d618 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41d600 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41d630 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41d740 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41d730 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41d708 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41d6f0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41d6c0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41d6a8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41d660 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41d690 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41d678 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41d6d8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41d9c8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41d9a8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41d7a0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41d770 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41d758 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41d788 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41d898 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41d888 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41d860 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41d848 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41d818 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41d800 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41d7b8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41d7e8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41d7d0 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41d830 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41d990 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41d980 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41d958 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41d940 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41d910 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41d8f8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41d8b0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41d8e0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41d8c8 <line:92:24> 'int' EnumConstant 0xa41b530 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41d928 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0xa41e018 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41dff8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41dad0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41daa0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41da84 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41dab8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41dbc8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41dbb8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41db90 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41db78 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41db48 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41db30 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41dae8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41db18 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41db00 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41db60 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41dfe0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41dfc0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41dc28 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41dbf8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41dbe0 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41dc10 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41dd20 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41dd10 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41dce8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41dcd0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41dca0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41dc88 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41dc40 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41dc70 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41dc58 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41dcb8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41dfa8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41df88 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41dd80 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41dd50 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41dd38 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41dd68 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41de78 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41de68 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41de40 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41de28 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41ddf8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41dde0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41dd98 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41ddc8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41ddb0 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41de10 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41df70 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41df60 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41df38 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41df20 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41def0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41ded8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41de90 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41dec0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41dea8 <line:93:24> 'int' EnumConstant 0xa41b580 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41df08 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0xa41e5f8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41e5d8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41e0b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41e080 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41e064 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41e098 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41e1a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41e198 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41e170 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41e158 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41e128 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41e110 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41e0c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41e0f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41e0e0 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41e140 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41e5c0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41e5a0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41e208 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41e1d8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41e1c0 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41e1f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41e300 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41e2f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41e2c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41e2b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41e280 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41e268 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41e220 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41e250 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41e238 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41e298 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41e588 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41e568 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41e360 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41e330 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41e318 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41e348 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41e458 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41e448 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41e420 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41e408 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41e3d8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41e3c0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41e378 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41e3a8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41e390 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41e3f0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41e550 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41e540 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41e518 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41e500 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41e4d0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41e4b8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41e470 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41e4a0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41e488 <line:94:24> 'int' EnumConstant 0xa41b5d0 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41e4e8 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0xa41ebd8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa41ebb8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41e690 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41e660 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41e644 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41e678 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41e788 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41e778 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41e750 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41e738 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41e708 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41e6f0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41e6a8 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41e6d8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41e6c0 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41e720 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa41eba0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41eb80 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41e7e8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41e7b8 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41e7a0 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41e7d0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41e8e0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41e8d0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41e8a8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41e890 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41e860 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41e848 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41e800 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41e830 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41e818 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41e878 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41eb68 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41eb48 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41e940 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41e910 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41e8f8 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41e928 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41ea38 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41ea28 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41ea00 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41e9e8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41e9b8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41e9a0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41e958 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41e988 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41e970 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41e9d0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41eb30 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41eb20 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41eaf8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41eae0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41eab0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41ea98 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41ea50 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41ea80 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41ea68 <line:95:24> 'int' EnumConstant 0xa41b620 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41eac8 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0xa42b678 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa42b658 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa41ec70 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa41ec40 <col:3, col:7> 'int'
        (DeclRefExpr 0xa41ec24 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa41ec58 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa41ed68 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa41ed58 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa41ed30 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa41ed18 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa41ece8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa41ecd0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa41ec88 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa41ecb8 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa41eca0 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa41ed00 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa42b640 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa41f160 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa41edc8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa41ed98 <col:6, col:10> 'int'
            (DeclRefExpr 0xa41ed80 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa41edb0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa41eec0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa41eeb0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa41ee88 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa41ee70 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa41ee40 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa41ee28 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa41ede0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa41ee10 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa41edf8 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa41ee58 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa41f148 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa41f128 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa41ef20 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa41eef0 <col:9, col:13> 'int'
                (DeclRefExpr 0xa41eed8 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa41ef08 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa41f018 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa41f008 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa41efe0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa41efc8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa41ef98 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa41ef80 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41ef38 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa41ef68 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa41ef50 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41efb0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa41f110 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa41f100 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa41f0d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa41f0c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa41f090 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa41f078 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa41f030 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa41f060 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa41f048 <line:96:24> 'int' EnumConstant 0xa41b670 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa41f0a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0xa42bc58 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa42bc38 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa42b710 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa42b6e0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa42b6c4 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa42b6f8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa42b808 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa42b7f8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa42b7d0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa42b7b8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa42b788 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa42b770 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa42b728 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa42b758 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa42b740 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa42b7a0 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa42bc20 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa42bc00 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa42b868 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa42b838 <col:6, col:10> 'int'
            (DeclRefExpr 0xa42b820 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa42b850 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa42b960 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa42b950 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa42b928 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa42b910 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa42b8e0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa42b8c8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa42b880 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa42b8b0 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa42b898 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa42b8f8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa42bbe8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa42bbc8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa42b9c0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa42b990 <col:9, col:13> 'int'
                (DeclRefExpr 0xa42b978 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa42b9a8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa42bab8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa42baa8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa42ba80 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa42ba68 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa42ba38 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa42ba20 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa42b9d8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa42ba08 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa42b9f0 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa42ba50 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa42bbb0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa42bba0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa42bb78 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa42bb60 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa42bb30 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa42bb18 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa42bad0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa42bb00 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa42bae8 <line:97:24> 'int' EnumConstant 0xa41b6c0 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa42bb48 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0xa42c238 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0xa42c218 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0xa42bcf0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0xa42bcc0 <col:3, col:7> 'int'
        (DeclRefExpr 0xa42bca4 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0xa42bcd8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0xa42bde8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0xa42bdd8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0xa42bdb0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0xa42bd98 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0xa42bd68 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0xa42bd50 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0xa42bd08 <col:23> 'unsigned long' 1)
                (ParenExpr 0xa42bd38 <col:30, col:34> 'int'
                  (DeclRefExpr 0xa42bd20 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0xa42bd80 <line:66:40> 'int' 24)))))
    (ParenExpr 0xa42c200 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0xa42c1e0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0xa42be48 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0xa42be18 <col:6, col:10> 'int'
            (DeclRefExpr 0xa42be00 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0xa42be30 <line:67:14> 'int' 16))
        (CStyleCastExpr 0xa42bf40 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0xa42bf30 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0xa42bf08 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0xa42bef0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0xa42bec0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0xa42bea8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0xa42be60 <col:27> 'unsigned long' 1)
                    (ParenExpr 0xa42be90 <col:34, col:38> 'int'
                      (DeclRefExpr 0xa42be78 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0xa42bed8 <line:67:44> 'int' 8)))))
        (ParenExpr 0xa42c1c8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0xa42c1a8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0xa42bfa0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0xa42bf70 <col:9, col:13> 'int'
                (DeclRefExpr 0xa42bf58 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0xa42bf88 <line:68:17> 'int' 24))
            (CStyleCastExpr 0xa42c098 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0xa42c088 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0xa42c060 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0xa42c048 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0xa42c018 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0xa42c000 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0xa42bfb8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0xa42bfe8 <col:37, col:41> 'int'
                          (DeclRefExpr 0xa42bfd0 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa42c030 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0xa42c190 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0xa42c180 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0xa42c158 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0xa42c140 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0xa42c110 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0xa42c0f8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0xa42c0b0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0xa42c0e0 <col:26, col:30> 'int'
                          (DeclRefExpr 0xa42c0c8 <line:98:24> 'int' EnumConstant 0xa41b710 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0xa42c128 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0xa42f590 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa42f574 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a240 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0xa42f600 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa42f5e4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a490 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0xa42ffe0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa42ffc4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a6e0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0xa430050 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa430034 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a930 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0xa4300c0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa4300a4 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21ab80 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0xa430130 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa430114 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21add0 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0xa4301a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa430184 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21b020 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0xa4302a0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa430288 <col:32, col:54> 'int' '|'
    (BinaryOperator 0xa430248 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0xa430228 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0xa4301f4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a6e0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0xa430238 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0xa43020c <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a930 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0xa430278 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0xa430260 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21b960 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0xa430310 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa4302f4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21b710 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0xa430380 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0xa430364 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21b960 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0xa430440 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0xa430428 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0xa430408 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0xa4303d4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a6e0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0xa430418 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0xa4303ec <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0xa21a930 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0xa433200 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0xa4332f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa4332b8 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0xa433350 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0xa4333b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa433378 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa433360 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa432af0 '__s' 'istream_type &')))
), _M_c((CallExpr 0xa433460 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa433428 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0xa4334c0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa4334d0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0xa432c10 '__s' 'streambuf_type *')
), _M_c((CallExpr 0xa433580 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa433548 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0xa4335e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0xa4336e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0xa4336d0 <line:121:2, col:43>
    (CallExpr 0xa4336b0 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa433628 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa433690 <col:35, col:42> '<dependent type>'
        (MemberExpr 0xa433670 <col:35> '<bound member function type>' ->_M_get 0xa433120
          (CXXThisExpr 0xa433660 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa4338f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0xa4336f8 <line:130:25>)
  (IfStmt 0xa433898 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0xa433718 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
      (CXXThisExpr 0xa433708 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa433880 <line:132:4, line:135:4>
      (CallExpr 0xa4337a0 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa433768 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0xa433748 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
            (CXXThisExpr 0xa433738 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0xa433868 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa4337d0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa4329a0
          (CXXThisExpr 0xa4337c0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa433848 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa433810 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa4338e0 <line:136:2, col:10>
    (UnaryOperator 0xa4338c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4338b8 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0xa433be0 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0xa433910 <line:145:25>)
  (DeclStmt 0xa433990 <line:147:2, col:35>
    0xa433930 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0xa433978 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa433968 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0xa433b98 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0xa4339b0 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
      (CXXThisExpr 0xa4339a0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa433b80 <line:149:4, line:152:4>
      (BinaryOperator 0xa433aa8 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa4339e8 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa4339d0 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa433930 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0xa433a88 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa433a50 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0xa433a30 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
              (CXXThisExpr 0xa433a20 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0xa433b68 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0xa433ad0 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa4329a0
          (CXXThisExpr 0xa433ac0 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0xa433b48 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa433b10 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0xa433bd0 <line:153:2, col:9>
    (DeclRefExpr 0xa433bb4 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0xa433930 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0xa433d50 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0xa433d40 <col:9, col:45>
    (CXXOperatorCallExpr 0xa433d18 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa433cc0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70)
      (CallExpr 0xa433c30 <col:16, col:26> '<dependent type>'
        (MemberExpr 0xa433c10 <col:16> '<bound member function type>' ->_M_at_eof 0xa4331a0
          (CXXThisExpr 0xa433c00 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0xa433ca0 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa433c68 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0xa433c4c <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa432fa0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0xa438bd0 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0xa433e20 <line:168:2, col:43>
    0xa433d70 "const int_type __eof =
      (CallExpr 0xa433e00 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa433dc8 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0xa433e90 <line:169:2, col:24>
    0xa433e40 "int_type __ret =
      (DeclRefExpr 0xa433e74 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa433d70 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0xa438b88 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0xa433eb0 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
      (CXXThisExpr 0xa433ea0 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0xa438b70 <line:171:4, line:179:4>
      (IfStmt 0xa438b50 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0xa438878 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0xa438850 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa433ef0 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0xa433f38 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa4329a0
              (CXXThisExpr 0xa433f28 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa433f58 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa433d70 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0xa4388d8 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0xa43888c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa433e40 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0xa4388b8 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa4329a0
            (CXXThisExpr 0xa4388a8 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0xa438b30 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0xa438a58 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0xa438a30 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa438910 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0xa438a00 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0xa4389e8 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0xa438944 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa433e40 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0xa4389c8 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa438990 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0xa438970 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
                        (CXXThisExpr 0xa438960 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0xa438a14 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa433d70 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0xa438ab8 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0xa438a80 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0xa4329a0
              (CXXThisExpr 0xa438a70 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa438aa0 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0xa433e40 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0xa438b18 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa438ae0 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0xa432950
              (CXXThisExpr 0xa438ad0 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa438b00 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0xa438bc0 <line:180:2, col:9>
    (DeclRefExpr 0xa438ba4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa433e40 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0xa438db8 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0xa438cb0 <line:186:2, col:43>
    0xa438c00 "const int_type __eof =
      (CallExpr 0xa438c90 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa438c58 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0xa438da8 <line:187:2, col:49>
    (CallExpr 0xa438d80 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa438ce0 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0xa438d48 <col:34, col:41> '<dependent type>'
        (MemberExpr 0xa438d28 <col:34> '<bound member function type>' ->_M_get 0xa433120
          (CXXThisExpr 0xa438d18 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa438d64 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa438c00 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa439308 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0xa4392f8 <col:7, col:27>
    (CallExpr 0xa4392d8 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa439288 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa439270 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa438fd0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0xa4392bc <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa439140 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0xa439830 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0xa439820 <col:7, col:28>
    (UnaryOperator 0xa439808 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0xa4397e8 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa439798 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa439780 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa439500 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0xa4397cc <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0xa439670 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0xa43b198 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa43b160 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0xa43b148 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa43a9e0 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0xa43b248 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0xa43b228 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0xa43a8f0
    (CXXThisExpr 0xa43b218 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa43b2a0 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0xa43b2b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0xa43ab10 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0xa43b338 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0xa43b318 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0xa43a8f0
    (CXXThisExpr 0xa43b308 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0xa43b390 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0xa43b660 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0xa43b608 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0xa43b598 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0xa43b3e0 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa43b3d0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0xa43b3b0 <col:7> '_Bool' lvalue ->_M_failed 0xa43a930
            (CXXThisExpr 0xa43b3a0 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0xa43b570 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa43b420 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0xa43b4d8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa43b488 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0xa43b468 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0xa43a8f0
              (CXXThisExpr 0xa43b458 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa43b4bc <col:42> '_CharT' lvalue ParmVar 0xa43ac10 '__c' '_CharT'))
        (CallExpr 0xa43b550 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa43b518 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0xa43b5f0 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa43b5c0 <col:4> '_Bool' lvalue ->_M_failed 0xa43a930
        (CXXThisExpr 0xa43b5b0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa43b5e0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa43b650 <line:244:2, col:10>
    (UnaryOperator 0xa43b638 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa43b628 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0xa43b6b0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0xa43b6a0 <col:9, col:17>
    (UnaryOperator 0xa43b688 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa43b678 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0xa43b700 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0xa43b6f0 <col:9, col:17>
    (UnaryOperator 0xa43b6d8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa43b6c8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0xa43b750 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0xa43b740 <col:9, col:17>
    (UnaryOperator 0xa43b728 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa43b718 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0xa43b7c8 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0xa43b7b8 <col:9, col:16>
    (MemberExpr 0xa43b798 <col:16> 'const _Bool' lvalue ->_M_failed 0xa43a930
      (CXXThisExpr 0xa43b788 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0xa43bb58 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0xa43bb00 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0xa43ba90 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0xa43b888 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0xa43b878 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa43b7dc <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa43b8b0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0xa43b838 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa43b828 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0xa43b808 <col:24> '_Bool' lvalue ->_M_failed 0xa43a930
                (CXXThisExpr 0xa43b7f8 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0xa43b8c0 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa43b850 <col:35> '_Bool' true)))
      (CallExpr 0xa43ba68 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0xa43b8cc <line:271:9> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0xa43ba30 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa43b9d8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa439750 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10)
          (CallExpr 0xa43b998 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43b930 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa43b8f8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0xa43b8e8 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0xa43b964 <col:47> 'const _CharT *' lvalue ParmVar 0xa43b000 '__ws' 'const _CharT *')
            (DeclRefExpr 0xa43b97c <col:53> 'streamsize':'int' lvalue ParmVar 0xa43b040 '__len' 'streamsize':'int'))
          (DeclRefExpr 0xa43b9bc <col:63> 'streamsize':'int' lvalue ParmVar 0xa43b040 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0xa43ba58 <line:272:5> '_Bool' false)))
    (BinaryOperator 0xa43bae8 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0xa43bab8 <col:4> '_Bool' lvalue ->_M_failed 0xa43a930
        (CXXThisExpr 0xa43baa8 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0xa43bad8 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0xa43bb48 <line:274:2, col:10>
    (UnaryOperator 0xa43bb30 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa43bb20 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa43c970 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0xa43c928 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0xa43c6a0 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0xa43c620 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0xa43c580 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0xa43c564 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c0e0 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0xa43c608 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0xa43c5d0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0xa43c5b4 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c270 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0xa43c688 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa43c650 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0xa43c638 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c400 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa43c908 <line:287:2, line:292:2>
      (DeclStmt 0xa43c6f8 <line:288:4, col:16>
        0xa43c6c0 "bool __ineof")
      (CallExpr 0xa43c7f8 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa43c708 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0xa407460)
        (CXXDependentScopeMemberExpr 0xa43c758 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0xa43c73c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c0e0 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0xa43c7a8 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0xa43c78c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c400 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0xa43c7dc <col:61> '_Bool' lvalue Var 0xa43c6c0 '__ineof' '_Bool'))
      (IfStmt 0xa43c8e8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0xa43c858 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa43c838 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa43c820 <col:9> '_Bool' lvalue Var 0xa43c6c0 '__ineof' '_Bool')))
        (BinaryOperator 0xa43c8d0 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa43c888 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0xa43c86c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c400 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0xa43c8c0 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa43c960 <line:293:7, col:14>
    (DeclRefExpr 0xa43c944 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43c400 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa43d330 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0xa43d1d8 <line:302:7, col:48>
    0xa43d110 "const streamsize __num =
      (CXXOperatorCallExpr 0xa43d1b0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa43d178 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa43d144 <col:32> '_CharT *' lvalue ParmVar 0xa43ce10 '__last' '_CharT *')
        (DeclRefExpr 0xa43d15c <col:41> '_CharT *' lvalue ParmVar 0xa43cdc0 '__first' '_CharT *'))")
  (IfStmt 0xa43d2e8 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0xa43d228 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa43d218 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa43d1e8 <col:11> 'const streamsize':'const int' lvalue Var 0xa43d110 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa43d200 <col:19> 'int' 0))
    (CallExpr 0xa43d2c0 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa43d258 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa43d240 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43cfa0 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa43d28c <col:18> '_CharT *' lvalue ParmVar 0xa43cdc0 '__first' '_CharT *')
      (DeclRefExpr 0xa43d2a4 <col:27> 'const streamsize':'const int' lvalue Var 0xa43d110 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa43d320 <line:305:7, col:14>
    (DeclRefExpr 0xa43d304 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43cfa0 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0xa43dcf0 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0xa43db98 <line:314:7, col:48>
    0xa43dad0 "const streamsize __num =
      (CXXOperatorCallExpr 0xa43db70 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa43db38 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa43db04 <col:32> 'const _CharT *' lvalue ParmVar 0xa43d7d0 '__last' 'const _CharT *')
        (DeclRefExpr 0xa43db1c <col:41> 'const _CharT *' lvalue ParmVar 0xa43d780 '__first' 'const _CharT *'))")
  (IfStmt 0xa43dca8 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0xa43dbe8 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0xa43dbd8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa43dba8 <col:11> 'const streamsize':'const int' lvalue Var 0xa43dad0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0xa43dbc0 <col:19> 'int' 0))
    (CallExpr 0xa43dc80 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa43dc18 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0xa43dc00 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43d960 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0xa43dc4c <col:18> 'const _CharT *' lvalue ParmVar 0xa43d780 '__first' 'const _CharT *')
      (DeclRefExpr 0xa43dc64 <col:27> 'const streamsize':'const int' lvalue Var 0xa43dad0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0xa43dce0 <line:317:7, col:14>
    (DeclRefExpr 0xa43dcc4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa43d960 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0xa43f348 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0xa43e5e0 <line:326:7, col:78>
    0xa43e5b0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa43e6d0 <line:327:7, col:71>
    0xa43e6a0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa43e790 <line:328:7, col:74>
    0xa43e760 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa43e880 <line:329:7, col:68>
    0xa43e850 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa43f300 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0xa43e948 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa43e8a8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa43e890 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43e140 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa43e930 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa43e8f8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa43e8dc <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43e2d0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa43f2e0 <line:332:2, line:351:2>
      (DeclStmt 0xa43ea48 <line:333:4, col:42>
        0xa43e9c0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa43ea10 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa43e9f4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43e140 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa43eb28 <line:334:4, col:32>
        0xa43ea80 "int_type __c =
          (CallExpr 0xa43eb08 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa43ead0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa43eab4 <col:19> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa43f2c8 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0xa43ec28 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0xa43ec00 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa43eb58 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0xa43eb7c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa43ea80 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa43ebe0 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa43ebb8 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0xa43f2b0 <line:336:6, line:350:6>
          (DeclStmt 0xa43edc8 <line:337:8, col:59>
            0xa43ec50 "const streamsize __n =
              (CXXOperatorCallExpr 0xa43eda0 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa43ed68 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (CallExpr 0xa43ecd8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa43eca0 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0xa43ec84 <col:31> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *')))
                (CallExpr 0xa43ed48 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa43ed10 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa43ecf4 <col:47> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa43f290 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0xa43ee18 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa43ee08 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa43edd8 <col:12> 'const streamsize':'const int' lvalue Var 0xa43ec50 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0xa43edf0 <col:18> 'int' 1))
            (CompoundStmt 0xa43f0c0 <line:339:3, line:344:3>
              (CallExpr 0xa43ef20 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa43ee58 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa43ee7c <col:23> '_CharT *' lvalue ParmVar 0xa43e320 '__result' '_CharT *')
                (CallExpr 0xa43eee8 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa43eeb0 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa43ee94 <col:33> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0xa43ef04 <col:47> 'const streamsize':'const int' lvalue Var 0xa43ec50 '__n' 'const streamsize':'const int'))
              (CallExpr 0xa43efb0 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa43ef60 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa43ef48 <col:5> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa43ef94 <col:24> 'const streamsize':'const int' lvalue Var 0xa43ec50 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0xa43f000 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa43efd0 <col:5> '_CharT *' lvalue ParmVar 0xa43e320 '__result' '_CharT *')
                (DeclRefExpr 0xa43efe8 <col:17> 'const streamsize':'const int' lvalue Var 0xa43ec50 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0xa43f0a8 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0xa43f020 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa43ea80 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa43f088 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa43f050 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa43f038 <col:11> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0xa43f278 <line:346:3, line:349:3>
              (BinaryOperator 0xa43f1c0 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0xa43f128 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa43f110 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa43f0e0 <col:6> '_CharT *' lvalue ParmVar 0xa43e320 '__result' '_CharT *')))
                (CallExpr 0xa43f1a0 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa43f160 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa43f184 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0xa43ea80 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0xa43f260 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa43f1d8 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa43ea80 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa43f240 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa43f208 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa43f1f0 <col:11> 'streambuf_type *' lvalue Var 0xa43e9c0 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0xa43f338 <line:352:7, col:14>
    (DeclRefExpr 0xa43f31c <col:14> '_CharT *' lvalue ParmVar 0xa43e320 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0xa440ed0 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0xa43fd20 <line:361:7, col:78>
    0xa43fcf0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0xa43fe10 <line:362:7, col:71>
    0xa43fde0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0xa43fed0 <line:363:7, col:74>
    0xa43fea0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0xa43ffc0 <line:364:7, col:68>
    0xa43ff90 "typedef typename traits_type::int_type int_type")
  (IfStmt 0xa440e88 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0xa440088 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa43ffe8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa43ffd0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f860 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0xa440070 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0xa440038 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0xa44001c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f9f0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0xa440e60 <line:367:2, line:392:2>
      (DeclStmt 0xa440178 <line:368:4, col:59>
        0xa4400c0 "const int_type __ival =
          (CallExpr 0xa440158 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa440118 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0xa44013c <col:53> 'const _CharT' lvalue ParmVar 0xa43fa60 '__val' 'const _CharT &'))")
      (DeclStmt 0xa440278 <line:369:4, col:42>
        0xa4401f0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0xa440240 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0xa440224 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f860 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0xa440338 <line:370:4, col:32>
        0xa440290 "int_type __c =
          (CallExpr 0xa440318 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4402e0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa4402c4 <col:19> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0xa440c20 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0xa440508 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0xa440438 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0xa440410 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa440368 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa44038c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa4403f0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa4403c8 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0xa4404f0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0xa4404c8 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa440470 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa440494 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0xa4404ac <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0xa4400c0 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0xa440c08 <line:373:6, line:386:6>
          (DeclStmt 0xa4406a8 <line:374:8, col:53>
            0xa440530 "streamsize __n =
              (CXXOperatorCallExpr 0xa440680 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa440648 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (CallExpr 0xa4405b8 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa440580 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa440564 <col:25> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))
                (CallExpr 0xa440628 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4405f0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4405d4 <col:41> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0xa440be8 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0xa4406f8 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0xa4406e8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa4406b8 <col:12> 'streamsize':'int' lvalue Var 0xa440530 '__n' 'streamsize':'int'))
              (IntegerLiteral 0xa4406d0 <col:18> 'int' 1))
            (CompoundStmt 0xa440b28 <line:376:3, line:383:3>
              (DeclStmt 0xa4408a0 <line:377:5, line:378:19>
                0xa440740 "const _CharT *__p =
                  (CallExpr 0xa440878 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa440798 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0xa440810 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa4407d8 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0xa4407bc <col:43> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0xa44082c <line:378:8> 'streamsize':'int' lvalue Var 0xa440530 '__n' 'streamsize':'int')
                    (DeclRefExpr 0xa440860 <col:13> 'const _CharT' lvalue ParmVar 0xa43fa60 '__val' 'const _CharT &'))")
              (IfStmt 0xa4409e0 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0xa4408b0 <line:379:9> 'const _CharT *' lvalue Var 0xa440740 '__p' 'const _CharT *')
                (BinaryOperator 0xa4409c8 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0xa4408c8 <col:7> 'streamsize':'int' lvalue Var 0xa440530 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0xa4409a0 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0xa440968 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                    (DeclRefExpr 0xa4408e0 <col:13> 'const _CharT *' lvalue Var 0xa440740 '__p' 'const _CharT *')
                    (CallExpr 0xa440948 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa440910 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0xa4408f8 <col:19> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0xa440a68 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa440a18 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4409fc <col:5> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0xa440a4c <col:24> 'streamsize':'int' lvalue Var 0xa440530 '__n' 'streamsize':'int'))
              (BinaryOperator 0xa440b10 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0xa440a88 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0xa440af0 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa440ab8 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa440aa0 <col:11> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0xa440bd0 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa440b48 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0xa440bb0 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa440b78 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa440b60 <col:9> 'streambuf_type *' lvalue Var 0xa4401f0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0xa440e40 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0xa440d28 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0xa440d00 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0xa440c58 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0xa440c7c <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa440ce0 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa440cb8 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0xa440da8 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa440d58 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa440d3c <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f860 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0xa440d8c <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0xa440290 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0xa440e28 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa440dd8 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa440dc0 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f860 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0xa440e10 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0xa440ec0 <line:393:7, col:14>
    (DeclRefExpr 0xa440ea4 <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0xa43f860 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0xa443288 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0xa443238 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4431d0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa4431b4 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa442f90 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0xa443204 <col:18> 'const _CharT *' lvalue ParmVar 0xa443000 '__ws' 'const _CharT *')
    (DeclRefExpr 0xa44321c <col:24> 'int' lvalue ParmVar 0xa443050 '__len' 'int'))
  (ReturnStmt 0xa443278 <line:116:7, col:14>
    (DeclRefExpr 0xa44325c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0xa442f90 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0xa4437b0 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0xa443760 <line:125:7, line:126:17>
    (DeclStmt 0xa4435e0 <line:125:12, col:23>
      0xa443590 "int __j =
        (IntegerLiteral 0xa4435c8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0xa443640 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0xa443620 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0xa4435f0 <col:25> 'int' lvalue Var 0xa443590 '__j' 'int'))
      (ImplicitCastExpr 0xa443630 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0xa443608 <col:31> 'int' lvalue ParmVar 0xa443420 '__len' 'int')))
    (BinaryOperator 0xa4436b8 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0xa443670 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0xa443658 <col:38> 'int' lvalue Var 0xa443590 '__j' 'int'))
      (UnaryOperator 0xa4436a0 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa443684 <col:47> '_OutIter' lvalue ParmVar 0xa443360 '__s' '_OutIter')))
    (BinaryOperator 0xa443748 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0xa4436e8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa4436d0 <col:3> '_OutIter' lvalue ParmVar 0xa443360 '__s' '_OutIter'))
      (ArraySubscriptExpr 0xa443730 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0xa4436fc <col:9> 'const _CharT *' lvalue ParmVar 0xa4433d0 '__ws' 'const _CharT *')
        (DeclRefExpr 0xa443714 <col:14> 'int' lvalue Var 0xa443590 '__j' 'int'))))
  (ReturnStmt 0xa4437a0 <line:127:7, col:14>
    (DeclRefExpr 0xa443784 <col:14> '_OutIter' lvalue ParmVar 0xa443360 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0xa4483f8 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0xa4483e8 <col:9, col:36>
    (CallExpr 0xa4483c0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448358 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448348 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa44838c <col:28> 'mask':'unsigned short' lvalue ParmVar 0xa443b40 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa4483a4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa443ba0 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0xa4484d8 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0xa4484c8 <col:9, col:45>
    (CallExpr 0xa4484a0 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448420 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448410 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448454 <col:28> 'const char_type *' lvalue ParmVar 0xa443ce0 '__lo' 'const char_type *')
      (DeclRefExpr 0xa44846c <col:34> 'const char_type *' lvalue ParmVar 0xa443d30 '__hi' 'const char_type *')
      (DeclRefExpr 0xa448484 <col:40> 'mask *' lvalue ParmVar 0xa443da0 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa4485b8 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0xa4485a8 <col:9, col:48>
    (CallExpr 0xa448580 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448500 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa4484f0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448534 <col:33> 'mask':'unsigned short' lvalue ParmVar 0xa443ee0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa44854c <col:38> 'const char_type *' lvalue ParmVar 0xa443f30 '__lo' 'const char_type *')
      (DeclRefExpr 0xa448564 <col:44> 'const char_type *' lvalue ParmVar 0xa443f80 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa448698 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0xa448688 <col:9, col:49>
    (CallExpr 0xa448660 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4485e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa4485d0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448614 <col:34> 'mask':'unsigned short' lvalue ParmVar 0xa4440c0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0xa44862c <col:39> 'const char_type *' lvalue ParmVar 0xa444110 '__lo' 'const char_type *')
      (DeclRefExpr 0xa448644 <col:45> 'const char_type *' lvalue ParmVar 0xa444160 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0xa448740 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0xa448730 <col:9, col:36>
    (CallExpr 0xa448710 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4486c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa4486b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa4486f4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa444240 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa448808 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0xa4487f8 <col:9, col:43>
    (CallExpr 0xa4487d0 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448768 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448758 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa44879c <col:33> 'char_type *' lvalue ParmVar 0xa444380 '__lo' 'char_type *')
      (DeclRefExpr 0xa4487b4 <col:39> 'const char_type *' lvalue ParmVar 0xa4443d0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa4488b0 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0xa4488a0 <col:9, col:36>
    (CallExpr 0xa448880 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448830 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448820 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448864 <col:33> 'char_type':'_CharT' lvalue ParmVar 0xa4444e0 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa448978 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0xa448968 <col:9, col:43>
    (CallExpr 0xa448940 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4488d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa4488c8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa44890c <col:33> 'char_type *' lvalue ParmVar 0xa4445b0 '__lo' 'char_type *')
      (DeclRefExpr 0xa448924 <col:39> 'const char_type *' lvalue ParmVar 0xa444600 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0xa448a20 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0xa448a10 <col:9, col:34>
    (CallExpr 0xa4489f0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4489a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448990 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa4489d4 <col:31> 'char' lvalue ParmVar 0xa4446d0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa448b00 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0xa448af0 <col:9, col:47>
    (CallExpr 0xa448ac8 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448a48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448a38 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448a7c <col:31> 'const char *' lvalue ParmVar 0xa4447f0 '__lo' 'const char *')
      (DeclRefExpr 0xa448a94 <col:37> 'const char *' lvalue ParmVar 0xa446c90 '__hi' 'const char *')
      (DeclRefExpr 0xa448aac <col:43> 'char_type *' lvalue ParmVar 0xa446ce0 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa448bc8 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0xa448bb8 <col:9, col:45>
    (CallExpr 0xa448b90 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448b28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448b18 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448b5c <col:32> 'char_type':'_CharT' lvalue ParmVar 0xa446e20 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa448b74 <col:37> 'char' lvalue ParmVar 0xa446e60 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa448cc8 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0xa448cb8 <col:9, col:58>
    (CallExpr 0xa448c88 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa448bf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa448be0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0xa448c24 <col:32> 'const char_type *' lvalue ParmVar 0xa446f80 '__lo' 'const char_type *')
      (DeclRefExpr 0xa448c3c <col:38> 'const char_type *' lvalue ParmVar 0xa446fd0 '__hi' 'const char_type *')
      (DeclRefExpr 0xa448c54 <col:44> 'char' lvalue ParmVar 0xa447010 '__dfault' 'char')
      (DeclRefExpr 0xa448c6c <col:54> 'char *' lvalue ParmVar 0xa447060 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0xa448320 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa448308 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa448cdc </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0xa4471e0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa448d80 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0xa448d90 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa44b1e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa44b1c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa44b138 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa44b1b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa44b1a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa44b190 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa44b168 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa44b150 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa44d668 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d650 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d678 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d6a0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d688 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa44d6c8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d6b0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d6d8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d700 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d6e8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa44d7f0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa44d7e0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d7b0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d790 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44ca20
        (CXXThisExpr 0xa44d728 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d7d0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d778 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bc90 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44d900 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa44d8f0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44d8a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44d888 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44cb50
        (CXXThisExpr 0xa44d808 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d8d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d858 <col:33> 'char_type *' lvalue ParmVar 0xa44bdd0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44d8e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d870 <col:39> 'const char_type *' lvalue ParmVar 0xa44be40 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa44d9e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa44d9d0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d9a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d980 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cc10
        (CXXThisExpr 0xa44d918 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d9c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d968 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bf50 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44daf0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa44dae0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44da98 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44da78 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cd40
        (CXXThisExpr 0xa44d9f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dac0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da48 <col:33> 'char_type *' lvalue ParmVar 0xa44c020 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44dad0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da60 <col:39> 'const char_type *' lvalue ParmVar 0xa44c070 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa44dd88 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa44dc50 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44db68 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44db58 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa44db34 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
          (CXXThisExpr 0xa44db08 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa44dc40 <line:868:4, col:51>
      (ImplicitCastExpr 0xa44dc30 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44dc18 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa44dc08 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44db88 <col:11> 'char [256]' lvalue ->_M_widen 0xa44aef0
              (CXXThisExpr 0xa44db78 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44dbf0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44dbe0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44dbd0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa44dba8 <col:47> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa44dca0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa44dc80 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa44d3b0
      (CXXThisExpr 0xa44dc70 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa44dd78 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa44dd48 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa44dd28 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44ce00
        (CXXThisExpr 0xa44dcc0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dd68 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44dd10 <col:24> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa44e1c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa44dfb0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa44de10 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa44de00 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44ddf0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa44ddb8 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dda8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa44ddd8 <col:21> 'int' 1))
    (CompoundStmt 0xa44df98 <line:895:4, line:898:4>
      (CallExpr 0xa44dee8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44ded8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44de28 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44df20 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44df10 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44de40 <col:23> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa44df40 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44df30 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa44de58 <col:29> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa44df50 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44dec0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44dea0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de70 <col:35> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa44deb0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de88 <col:42> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))))
      (ReturnStmt 0xa44df88 <line:897:6, col:13>
        (ImplicitCastExpr 0xa44df78 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa44df5c <col:13> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa44e088 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa44e020 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44e010 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44e000 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44dfe0 <col:7> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dfd0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44e068 <line:900:4, col:18> 'void'
      (MemberExpr 0xa44e048 <col:4> '<bound member function type>' ->_M_widen_init 0xa44d3b0
        (CXXThisExpr 0xa44e038 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44e1b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa44e160 <col:9, col:40> 'const char *'
      (MemberExpr 0xa44e140 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44cf80
        (CXXThisExpr 0xa44e0a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44e188 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e0f8 <col:24> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa44e198 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e110 <col:30> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa44e1a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44e128 <col:36> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa44e710 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa44e398 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e2b0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44e2a0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e288 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa44e278 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e1f8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e1e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e260 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e250 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e240 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e218 <col:43> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa44e388 <line:926:4, col:52>
      (ImplicitCastExpr 0xa44e378 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e360 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa44e350 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e2d0 <col:11> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e2c0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e338 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e328 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e318 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e2f0 <col:48> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa44e4f0 <line:927:2, col:43>
    0xa44e3c0 "const char __t =
      (CXXMemberCallExpr 0xa44e4a8 <col:19, col:42> 'char'
        (MemberExpr 0xa44e488 <col:19> '<bound member function type>' ->do_narrow 0xa44d0a0
          (CXXThisExpr 0xa44e478 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa44e4d0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa44e448 <col:29> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa44e4e0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e460 <col:34> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char')))")
  (IfStmt 0xa44e6b8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa44e570 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa44e540 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e530 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e500 <col:6> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
      (ImplicitCastExpr 0xa44e560 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e550 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e518 <col:13> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char'))))
    (BinaryOperator 0xa44e6a0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa44e660 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa44e650 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa44e5d0 <col:4> 'char [256]' lvalue ->_M_narrow 0xa44afe0
            (CXXThisExpr 0xa44e5c0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa44e638 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa44e628 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa44e618 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa44e5f0 <col:41> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa44e690 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44e674 <col:49> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa44e700 <line:930:2, col:9>
    (ImplicitCastExpr 0xa44e6f0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa44e6d4 <col:9> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa44ec10 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa44e9c8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e830 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa44e7e8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa44e7d8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e730 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa44e810 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa44e7b0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa44e7a0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa44e790 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa44e758 <col:23> 'char' lvalue ->_M_narrow_ok 0xa44b020
                  (CXXThisExpr 0xa44e748 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa44e778 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa44e820 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa44e7c8 <col:42> '_Bool' true))))
    (CompoundStmt 0xa44e9b0 <line:960:4, line:963:4>
      (CallExpr 0xa44e900 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44e8f0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e83c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44e938 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44e928 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa44e854 <col:23> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))
        (ImplicitCastExpr 0xa44e958 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44e948 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44e86c <col:29> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa44e968 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44e8d8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44e8b8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e884 <col:35> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa44e8c8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e89c <col:42> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa44e9a0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa44e990 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa44e974 <col:13> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa44eaa0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa44ea38 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44ea28 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44ea18 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44e9f8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa44b020
            (CXXThisExpr 0xa44e9e8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44ea80 <line:965:4, col:19> 'void'
      (MemberExpr 0xa44ea60 <col:4> '<bound member function type>' ->_M_narrow_init 0xa44d330
        (CXXThisExpr 0xa44ea50 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44ec00 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa44eb90 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa44eb70 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa44d260
        (CXXThisExpr 0xa44eac0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44ebc0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb10 <col:25> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebd0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb28 <col:31> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebe0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44eb40 <col:37> 'char' lvalue ParmVar 0xa44c610 '__dfault' 'char'))
      (ImplicitCastExpr 0xa44ebf0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa44eb58 <col:47> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa44ec80 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa44ec70 <col:9, col:16>
    (ImplicitCastExpr 0xa44ec60 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa44ec40 <col:16> 'const mask *const' lvalue ->_M_table 0xa44ad90
        (CXXThisExpr 0xa44ec30 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa450df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa450de0 <col:9, col:16>
    (ImplicitCastExpr 0xa450dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa450db4 <col:16> 'char' lvalue ParmVar 0xa44cdb0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa450f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa450ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa450eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa450f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa450ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa450e1c <col:19> 'char_type *' lvalue ParmVar 0xa44cf20 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa450f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa450f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa450e34 <col:27> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa450f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa450ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa450e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e4c <col:33> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa450e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e64 <col:40> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))))
  (ReturnStmt 0xa450f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa450f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa450f3c <col:9> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa450fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa450fb8 <col:9, col:16>
    (ImplicitCastExpr 0xa450fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa450f90 <col:16> 'char_type':'char' lvalue ParmVar 0xa44d000 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa451150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa4510a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa451090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa4510d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa4510c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa450ff4 <col:19> 'char *' lvalue ParmVar 0xa44d200 '__dest' 'char *')))
    (ImplicitCastExpr 0xa4510f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa4510e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa45100c <col:27> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa451108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa451078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa451058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa451024 <col:33> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa451068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa45103c <col:40> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa451140 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa451130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa451114 <col:9> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa4574b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa4574e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0xa44a578 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44a560 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0xa44a610 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0xa449240 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa44a670 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0xa44a8b8 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0xa44b1e0 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0xa44b1c8 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0xa44b138 <col:45> 'int' 1)
    (ImplicitCastExpr 0xa44b1b8 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0xa44b1a0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0xa44b190 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0xa44b168 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0xa44b150 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0xa44d668 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d650 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d678 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d6a0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d688 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0xa44d6c8 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0xa44d6b0 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0xa44d6d8 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0xa44d700 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa44d6e8 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0xa44d7f0 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0xa44d7e0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d7b0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d790 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44ca20
        (CXXThisExpr 0xa44d728 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d7d0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d778 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bc90 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44d900 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0xa44d8f0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44d8a8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44d888 <col:16, col:22> '<bound member function type>' ->do_toupper 0xa44cb50
        (CXXThisExpr 0xa44d808 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d8d0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d858 <col:33> 'char_type *' lvalue ParmVar 0xa44bdd0 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44d8e0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44d870 <col:39> 'const char_type *' lvalue ParmVar 0xa44be40 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0xa44d9e0 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0xa44d9d0 <col:9, col:36>
    (CXXMemberCallExpr 0xa44d9a0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0xa44d980 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cc10
        (CXXThisExpr 0xa44d918 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44d9c0 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0xa44d968 <col:33> 'char_type':'char' lvalue ParmVar 0xa44bf50 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0xa44daf0 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0xa44dae0 <col:9, col:43>
    (CXXMemberCallExpr 0xa44da98 <col:16, col:43> 'const char_type *'
      (MemberExpr 0xa44da78 <col:16, col:22> '<bound member function type>' ->do_tolower 0xa44cd40
        (CXXThisExpr 0xa44d9f8 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dac0 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da48 <col:33> 'char_type *' lvalue ParmVar 0xa44c020 '__lo' 'char_type *'))
      (ImplicitCastExpr 0xa44dad0 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44da60 <col:39> 'const char_type *' lvalue ParmVar 0xa44c070 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0xa44dd88 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0xa44dc50 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44db68 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44db58 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0xa44db34 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
          (CXXThisExpr 0xa44db08 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0xa44dc40 <line:868:4, col:51>
      (ImplicitCastExpr 0xa44dc30 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44dc18 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0xa44dc08 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44db88 <col:11> 'char [256]' lvalue ->_M_widen 0xa44aef0
              (CXXThisExpr 0xa44db78 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44dbf0 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44dbe0 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44dbd0 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0xa44dba8 <col:47> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa44dca0 <line:869:2, col:22> 'void'
    (MemberExpr 0xa44dc80 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0xa44d3b0
      (CXXThisExpr 0xa44dc70 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0xa44dd78 <line:870:2, col:27>
    (CXXMemberCallExpr 0xa44dd48 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0xa44dd28 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44ce00
        (CXXThisExpr 0xa44dcc0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44dd68 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44dd10 <col:24> 'char' lvalue ParmVar 0xa44c140 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0xa44e1c8 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0xa44dfb0 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0xa44de10 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0xa44de00 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44ddf0 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0xa44ddb8 <col:6> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dda8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0xa44ddd8 <col:21> 'int' 1))
    (CompoundStmt 0xa44df98 <line:895:4, line:898:4>
      (CallExpr 0xa44dee8 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44ded8 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44de28 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44df20 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44df10 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44de40 <col:23> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))
        (ImplicitCastExpr 0xa44df40 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44df30 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa44de58 <col:29> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))
        (ImplicitCastExpr 0xa44df50 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44dec0 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44dea0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de70 <col:35> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
            (ImplicitCastExpr 0xa44deb0 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa44de88 <col:42> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *')))))
      (ReturnStmt 0xa44df88 <line:897:6, col:13>
        (ImplicitCastExpr 0xa44df78 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa44df5c <col:13> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0xa44e088 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0xa44e020 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44e010 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44e000 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44dfe0 <col:7> 'char' lvalue ->_M_widen_ok 0xa44add0
            (CXXThisExpr 0xa44dfd0 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44e068 <line:900:4, col:18> 'void'
      (MemberExpr 0xa44e048 <col:4> '<bound member function type>' ->_M_widen_init 0xa44d3b0
        (CXXThisExpr 0xa44e038 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44e1b8 <line:901:2, col:40>
    (CXXMemberCallExpr 0xa44e160 <col:9, col:40> 'const char *'
      (MemberExpr 0xa44e140 <col:9, col:15> '<bound member function type>' ->do_widen 0xa44cf80
        (CXXThisExpr 0xa44e0a8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44e188 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e0f8 <col:24> 'const char *' lvalue ParmVar 0xa44c240 '__lo' 'const char *'))
      (ImplicitCastExpr 0xa44e198 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa44e110 <col:30> 'const char *' lvalue ParmVar 0xa44c290 '__hi' 'const char *'))
      (ImplicitCastExpr 0xa44e1a8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44e128 <col:36> 'char_type *' lvalue ParmVar 0xa44c2e0 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa44e710 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0xa44e398 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e2b0 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa44e2a0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e288 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0xa44e278 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e1f8 <col:6> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e1e8 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e260 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e250 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e240 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e218 <col:43> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    (ReturnStmt 0xa44e388 <line:926:4, col:52>
      (ImplicitCastExpr 0xa44e378 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0xa44e360 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0xa44e350 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0xa44e2d0 <col:11> 'char [256]' lvalue ->_M_narrow 0xa44afe0
              (CXXThisExpr 0xa44e2c0 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa44e338 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa44e328 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa44e318 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0xa44e2f0 <col:48> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0xa44e4f0 <line:927:2, col:43>
    0xa44e3c0 "const char __t =
      (CXXMemberCallExpr 0xa44e4a8 <col:19, col:42> 'char'
        (MemberExpr 0xa44e488 <col:19> '<bound member function type>' ->do_narrow 0xa44d0a0
          (CXXThisExpr 0xa44e478 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0xa44e4d0 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0xa44e448 <col:29> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0xa44e4e0 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e460 <col:34> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char')))")
  (IfStmt 0xa44e6b8 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0xa44e570 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0xa44e540 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e530 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e500 <col:6> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
      (ImplicitCastExpr 0xa44e560 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa44e550 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0xa44e518 <col:13> 'char' lvalue ParmVar 0xa44c460 '__dfault' 'char'))))
    (BinaryOperator 0xa44e6a0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0xa44e660 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0xa44e650 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0xa44e5d0 <col:4> 'char [256]' lvalue ->_M_narrow 0xa44afe0
            (CXXThisExpr 0xa44e5c0 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0xa44e638 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0xa44e628 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0xa44e618 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0xa44e5f0 <col:41> 'char_type':'char' lvalue ParmVar 0xa44c420 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0xa44e690 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44e674 <col:49> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0xa44e700 <line:930:2, col:9>
    (ImplicitCastExpr 0xa44e6f0 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0xa44e6d4 <col:9> 'const char' lvalue Var 0xa44e3c0 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0xa44ec10 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0xa44e9c8 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa44e830 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa44e7e8 <col:6, col:46> 'long'
        (ImplicitCastExpr 0xa44e7d8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e730 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa44e810 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0xa44e7b0 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa44e7a0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa44e790 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0xa44e758 <col:23> 'char' lvalue ->_M_narrow_ok 0xa44b020
                  (CXXThisExpr 0xa44e748 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0xa44e778 <col:39> 'int' 1)))
        (ImplicitCastExpr 0xa44e820 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa44e7c8 <col:42> '_Bool' true))))
    (CompoundStmt 0xa44e9b0 <line:960:4, line:963:4>
      (CallExpr 0xa44e900 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0xa44e8f0 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa44e83c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0xa44e938 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0xa44e928 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa44e854 <col:23> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))
        (ImplicitCastExpr 0xa44e958 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0xa44e948 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0xa44e86c <col:29> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0xa44e968 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa44e8d8 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0xa44e8b8 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e884 <col:35> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0xa44e8c8 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0xa44e89c <col:42> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *')))))
      (ReturnStmt 0xa44e9a0 <line:962:6, col:13>
        (ImplicitCastExpr 0xa44e990 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa44e974 <col:13> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa44eaa0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0xa44ea38 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa44ea28 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa44ea18 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0xa44e9f8 <col:7> 'char' lvalue ->_M_narrow_ok 0xa44b020
            (CXXThisExpr 0xa44e9e8 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0xa44ea80 <line:965:4, col:19> 'void'
      (MemberExpr 0xa44ea60 <col:4> '<bound member function type>' ->_M_narrow_init 0xa44d330
        (CXXThisExpr 0xa44ea50 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0xa44ec00 <line:966:2, col:51>
    (CXXMemberCallExpr 0xa44eb90 <col:9, col:51> 'const char_type *'
      (MemberExpr 0xa44eb70 <col:9, col:15> '<bound member function type>' ->do_narrow 0xa44d260
        (CXXThisExpr 0xa44eac0 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0xa44ebc0 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb10 <col:25> 'const char_type *' lvalue ParmVar 0xa44c580 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebd0 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa44eb28 <col:31> 'const char_type *' lvalue ParmVar 0xa44c5d0 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0xa44ebe0 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0xa44eb40 <col:37> 'char' lvalue ParmVar 0xa44c610 '__dfault' 'char'))
      (ImplicitCastExpr 0xa44ebf0 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa44eb58 <col:47> 'char *' lvalue ParmVar 0xa44c660 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0xa44ec80 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0xa44ec70 <col:9, col:16>
    (ImplicitCastExpr 0xa44ec60 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0xa44ec40 <col:16> 'const mask *const' lvalue ->_M_table 0xa44ad90
        (CXXThisExpr 0xa44ec30 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0xa450df0 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0xa450de0 <col:9, col:16>
    (ImplicitCastExpr 0xa450dd0 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0xa450db4 <col:16> 'char' lvalue ParmVar 0xa44cdb0 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0xa450f78 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0xa450ec8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0xa450eb8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450e04 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa450f00 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa450ef0 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0xa450e1c <col:19> 'char_type *' lvalue ParmVar 0xa44cf20 '__dest' 'char_type *')))
    (ImplicitCastExpr 0xa450f20 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa450f10 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa450e34 <col:27> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))
    (ImplicitCastExpr 0xa450f30 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa450ea0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa450e80 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e4c <col:33> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))
        (ImplicitCastExpr 0xa450e90 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa450e64 <col:40> 'const char *' lvalue ParmVar 0xa44ce80 '__lo' 'const char *')))))
  (ReturnStmt 0xa450f68 <line:1101:2, col:9>
    (ImplicitCastExpr 0xa450f58 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa450f3c <col:9> 'const char *' lvalue ParmVar 0xa44ced0 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0xa450fc8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0xa450fb8 <col:9, col:16>
    (ImplicitCastExpr 0xa450fa8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0xa450f90 <col:16> 'char_type':'char' lvalue ParmVar 0xa44d000 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0xa451150 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0xa4510a0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0xa451090 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa450fdc <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0xa1e6a60 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0xa4510d8 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0xa4510c8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa450ff4 <col:19> 'char *' lvalue ParmVar 0xa44d200 '__dest' 'char *')))
    (ImplicitCastExpr 0xa4510f8 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0xa4510e8 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0xa45100c <col:27> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0xa451108 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0xa451078 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0xa451058 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa451024 <col:33> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0xa451068 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0xa45103c <col:40> 'const char_type *' lvalue ParmVar 0xa44d120 '__lo' 'const char_type *')))))
  (ReturnStmt 0xa451140 <line:1154:2, col:9>
    (ImplicitCastExpr 0xa451130 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0xa451114 <col:9> 'const char_type *' lvalue ParmVar 0xa44d170 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0xa4574b8 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574a0 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa4574e0 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4574c8 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = char> class ctype_byname
template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa457af0 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa457ad8 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0xa457b00 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa458128 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa458110 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0xa458748 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa458730 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0xa458b08 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0xa458af8 <col:5, col:56>
    (ImplicitCastExpr 0xa458ae8 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0xa458ad0 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0xa458aa0 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa458a90 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0xa458a60 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0xa458a50 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0xa4589d0 <col:12> 'const mask *const' lvalue ->_M_table 0xa44ad90
                  (CXXThisExpr 0xa4589c0 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0xa458a38 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0xa458a28 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0xa458a18 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0xa4589f0 <col:48> 'char' lvalue ParmVar 0xa4588d0 '__c' 'char')))))))
        (ImplicitCastExpr 0xa458ac0 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa458ab0 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa458a74 <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa458890 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0xa458f58 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0xa458f08 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0xa458d98 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0xa458d78 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa458d44 <col:12> 'const char *' lvalue ParmVar 0xa458ba0 '__low' 'const char *'))
      (ImplicitCastExpr 0xa458d88 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa458d5c <col:20> 'const char *' lvalue ParmVar 0xa458bf0 '__high' 'const char *')))
    (BinaryOperator 0xa458ef0 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0xa458de0 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0xa458dc8 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0xa458db0 <col:8> 'mask *' lvalue ParmVar 0xa458c40 '__vec' 'mask *')))
      (ImplicitCastExpr 0xa458ee0 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0xa458ec8 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0xa458eb8 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0xa458e08 <col:18> 'const mask *const' lvalue ->_M_table 0xa44ad90
              (CXXThisExpr 0xa458df8 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0xa458ea0 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa458e90 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa458e80 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0xa458e58 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0xa458e40 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0xa458e28 <col:55> 'const char *' lvalue ParmVar 0xa458ba0 '__low' 'const char *'))))))))))
  (ReturnStmt 0xa458f48 <line:52:5, col:12>
    (ImplicitCastExpr 0xa458f38 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa458f1c <col:12> 'const char *' lvalue ParmVar 0xa458bf0 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa459f80 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0xa459f30 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0xa459ee8 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0xa459d40 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa459d20 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa459184 <col:12> 'const char *' lvalue ParmVar 0xa459030 '__low' 'const char *'))
        (ImplicitCastExpr 0xa459d30 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa45919c <col:20> 'const char *' lvalue ParmVar 0xa459080 '__high' 'const char *')))
      (UnaryOperator 0xa459ed0 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa459ec0 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa459ea8 <col:9, col:60> 'int'
            (BinaryOperator 0xa459e90 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0xa459e60 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa459e50 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0xa459e20 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0xa459e10 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0xa459d68 <col:10> 'const mask *const' lvalue ->_M_table 0xa44ad90
                        (CXXThisExpr 0xa459d58 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0xa459df8 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0xa459de8 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0xa459dd8 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0xa459db0 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0xa459da0 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0xa459d88 <col:47> 'const char *' lvalue ParmVar 0xa459030 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0xa459e80 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa459e70 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0xa459e34 <col:57> 'mask':'unsigned short' lvalue ParmVar 0xa458fe0 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0xa459f18 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa459f00 <col:9> 'const char *' lvalue ParmVar 0xa459030 '__low' 'const char *')))
  (ReturnStmt 0xa459f70 <line:62:5, col:12>
    (ImplicitCastExpr 0xa459f60 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa459f44 <col:12> 'const char *' lvalue ParmVar 0xa459030 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0xa45a440 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0xa45a3f0 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0xa45a3a8 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0xa45a1f8 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0xa45a1d8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa45a1a4 <col:12> 'const char *' lvalue ParmVar 0xa45a050 '__low' 'const char *'))
        (ImplicitCastExpr 0xa45a1e8 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa45a1bc <col:20> 'const char *' lvalue ParmVar 0xa45a0a0 '__high' 'const char *')))
      (BinaryOperator 0xa45a390 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0xa45a360 <col:8, col:59> 'int'
          (BinaryOperator 0xa45a348 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0xa45a318 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa45a308 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0xa45a2d8 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0xa45a2c8 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0xa45a220 <col:9> 'const mask *const' lvalue ->_M_table 0xa44ad90
                      (CXXThisExpr 0xa45a210 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0xa45a2b0 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0xa45a2a0 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0xa45a290 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0xa45a268 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0xa45a258 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0xa45a240 <col:46> 'const char *' lvalue ParmVar 0xa45a050 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0xa45a338 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa45a328 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0xa45a2ec <col:56> 'mask':'unsigned short' lvalue ParmVar 0xa45a000 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0xa45a378 <col:64> 'int' 0)))
    (UnaryOperator 0xa45a3d8 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0xa45a3c0 <col:9> 'const char *' lvalue ParmVar 0xa45a050 '__low' 'const char *')))
  (ReturnStmt 0xa45a430 <line:72:5, col:12>
    (ImplicitCastExpr 0xa45a420 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0xa45a404 <col:12> 'const char *' lvalue ParmVar 0xa45a050 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0xa45aaa8 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45a838 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0xa45a804 <col:26> 'int' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa45a820 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0xa45aab8 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa45a884 <col:23> 'int' EnumConstant 0xa45a850 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0xa45aac8 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45a908 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0xa45a8d4 <col:27> 'int' EnumConstant 0xa45a8a0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa45a8f0 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0xa45aad8 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45a988 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0xa45a954 <col:17> 'int' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa45a970 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0xa45aae8 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45aa08 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0xa45a9d4 <col:17> 'int' EnumConstant 0xa45a8a0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0xa45a9f0 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0xa45aaf8 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0xa45aa54 <col:12> 'int' EnumConstant 0xa45a920 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0xa45ae98 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45ad78 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa45ad44 <col:15> 'int' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa45ad60 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0xa45aea8 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa45adf8 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0xa45adc4 <col:15> 'int' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0xa45ade0 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0xa45aeb8 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa45ae48 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0xa45bca8 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa45bc90 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa45bcb4 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0xa45b7c0 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0xa45bd48 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0xa45bda8 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0xa45be08 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0xa45be58 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0xa45bea8 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0xa45bf08 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0xa45bf58 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0xa45bfc0 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0xa45c020 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0xa45c078 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0xa45c0f8 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0xa45c4c0 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0xa45c4a0 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0xa45c388 <line:1618:11> '_Bool' lvalue ->_M_allocated 0xa45b780
      (CXXThisExpr 0xa45c378 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0xa45c480 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0xa45c3d8 <line:1620:4, col:14> 'void'
        (MemberExpr 0xa45c3b8 <col:14> 'const char *' lvalue ->_M_grouping 0xa45b370
          (CXXThisExpr 0xa45c3a8 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa45c420 <line:1621:4, col:14> 'void'
        (MemberExpr 0xa45c400 <col:14> 'const _CharT *' lvalue ->_M_truename 0xa45b450
          (CXXThisExpr 0xa45c3f0 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0xa45c468 <line:1622:4, col:14> 'void'
        (MemberExpr 0xa45c448 <col:14> 'const _CharT *' lvalue ->_M_falsename 0xa45b4d0
          (CXXThisExpr 0xa45c438 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0xa45d680 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa45d668 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa45d704 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0xa45cbe0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa45d798 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0xa45d858 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0xa45d838 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa45d818 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa45d600
      (CXXThisExpr 0xa45d808 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0xa45d6a8 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa45d690 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa45d86c </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0xa45cd10 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0xa45d908 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0xa45ccd0 '__cache' '__cache_type *')
) (CompoundStmt 0xa45d9b0 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0xa45d990 <col:9, col:32> '<dependent type>'
    (MemberExpr 0xa45d970 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa45d600
      (CXXThisExpr 0xa45d960 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0xa45d6d0 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa45d6b8 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa45d9c4 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0xa45ce70 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0xa45da58 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0xa45db18 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0xa45daf8 <col:9, col:38> '<dependent type>'
    (MemberExpr 0xa45dac0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0xa45d600
      (CXXThisExpr 0xa45dab0 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0xa45dae0 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0xa45ce30 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0xa45dbc0 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0xa45dbb0 <col:9, col:39>
    (CallExpr 0xa45db90 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa45db58 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa45db48 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0xa45dc50 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0xa45dc40 <col:9, col:39>
    (CallExpr 0xa45dc20 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa45dbe8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa45dbd8 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0xa45dce0 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0xa45dcd0 <col:9, col:34>
    (CallExpr 0xa45dcb0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa45dc78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa45dc68 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0xa45f468 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0xa45f458 <col:9, col:34>
    (CallExpr 0xa45f438 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa45f400 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa45dcf8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0xa45f4f8 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0xa45f4e8 <col:9, col:35>
    (CallExpr 0xa45f4c8 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa45f490 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa45f480 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0xa45f588 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0xa45f578 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa45f540 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa45f520 <col:16> '__cache_type *const' lvalue ->_M_data 0xa45cb00
        (CXXThisExpr 0xa45f510 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0xa45f618 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0xa45f608 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa45f5d0 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa45f5b0 <col:16> '__cache_type *const' lvalue ->_M_data 0xa45cb00
        (CXXThisExpr 0xa45f5a0 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0xa45f6a8 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0xa45f698 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa45f660 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa45f640 <col:16> '__cache_type *const' lvalue ->_M_data 0xa45cb00
        (CXXThisExpr 0xa45f630 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0xa45f738 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0xa45f728 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa45f6f0 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa45f6d0 <col:16> '__cache_type *const' lvalue ->_M_data 0xa45cb00
        (CXXThisExpr 0xa45f6c0 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0xa45f7c8 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0xa45f7b8 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0xa45f780 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0xa45f760 <col:16> '__cache_type *const' lvalue ->_M_data 0xa45cb00
        (CXXThisExpr 0xa45f750 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0xa45d6f8 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0xa45d6e0 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0xa45fa18 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0xa4639d0 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa4639b8 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0xa463a70 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0xa463800 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa463ef8 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0xa463ed8 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0xa463c88 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0xa463b90 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0xa463b30 <col:6, col:31> 'int'
          (ImplicitCastExpr 0xa463b20 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa463acc <col:6> 'int (const char *, const char *)' lvalue Function 0xa3ba250 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa463b58 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa463ae4 <col:23> 'const char *' lvalue ParmVar 0xa4637c0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa463b68 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa463afc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0xa463b78 <col:36> 'int' 0))
      (BinaryOperator 0xa463c70 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0xa463c10 <col:9, col:38> 'int'
          (ImplicitCastExpr 0xa463c00 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa463ba8 <col:9> 'int (const char *, const char *)' lvalue Function 0xa3ba250 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0xa463c38 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa463bc0 <col:26> 'const char *' lvalue ParmVar 0xa4637c0 '__s' 'const char *'))
          (ImplicitCastExpr 0xa463c48 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa463bd8 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0xa463c58 <col:43> 'int' 0)))
    (CompoundStmt 0xa463eb8 <line:1886:4, line:1891:4>
      (DeclStmt 0xa463ce8 <line:1887:6, col:22>
        0xa463cb0 "__c_locale __tmp")
      (CallExpr 0xa463d90 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa463d28 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa463d18 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa463d5c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0xa463cb0 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0xa463d74 <col:38> 'const char *' lvalue ParmVar 0xa4637c0 '__s' 'const char *'))
      (CallExpr 0xa463e18 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa463dc8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa463db8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa463dfc <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0xa463cb0 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0xa463e98 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa463e48 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa463e38 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0xa463e7c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0xa463cb0 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0xa463f10 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0xa46a470 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa46a458 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa46a47c </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0xa4642a0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa46a520 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa46a648 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0xa46a638 <col:9, col:58>
    (CallExpr 0xa46a608 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46a558 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46a548 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46a58c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa4643a0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a5a4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa4643e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a5bc <col:42> 'class std::ios_base' lvalue ParmVar 0xa464430 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46a5d4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4644a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46a5ec <col:55> '_Bool' lvalue ParmVar 0xa4644f0 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa46a760 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0xa46a750 <col:9, col:58>
    (CallExpr 0xa46a720 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46a670 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46a660 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46a6a4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa464640 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a6bc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa464680 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a6d4 <col:42> 'class std::ios_base' lvalue ParmVar 0xa4646d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46a6ec <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa464740 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46a704 <col:55> 'long' lvalue ParmVar 0xa464790 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa46a878 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0xa46a868 <col:9, col:58>
    (CallExpr 0xa46a838 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46a788 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46a778 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46a7bc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa4648e0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a7d4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa464920 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a7ec <col:42> 'class std::ios_base' lvalue ParmVar 0xa464970 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46a804 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4649e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46a81c <col:55> 'unsigned short' lvalue ParmVar 0xa464a30 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa46a990 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0xa46a980 <col:9, col:58>
    (CallExpr 0xa46a950 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46a8a0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46a890 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46a8d4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa464b80 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a8ec <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa464bc0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46a904 <col:42> 'class std::ios_base' lvalue ParmVar 0xa464c10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46a91c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa464c80 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46a934 <col:55> 'unsigned int' lvalue ParmVar 0xa464cd0 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa46aaa8 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0xa46aa98 <col:9, col:58>
    (CallExpr 0xa46aa68 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46a9b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46a9a8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46a9ec <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa464e20 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46aa04 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa464e60 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46aa1c <col:42> 'class std::ios_base' lvalue ParmVar 0xa464eb0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46aa34 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa464f20 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46aa4c <col:55> 'unsigned long' lvalue ParmVar 0xa464f70 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa46abc0 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0xa46abb0 <col:9, col:58>
    (CallExpr 0xa46ab80 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46aad0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46aac0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46ab04 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa4650c0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ab1c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa465100 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ab34 <col:42> 'class std::ios_base' lvalue ParmVar 0xa465150 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46ab4c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4651c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46ab64 <col:55> 'long long' lvalue ParmVar 0xa465210 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa46acd8 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0xa46acc8 <col:9, col:58>
    (CallExpr 0xa46ac98 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46abe8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46abd8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46ac1c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa465360 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ac34 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa4653a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ac4c <col:42> 'class std::ios_base' lvalue ParmVar 0xa4653f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46ac64 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa465460 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46ac7c <col:55> 'unsigned long long' lvalue ParmVar 0xa4654b0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa46adf0 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0xa46ade0 <col:9, col:58>
    (CallExpr 0xa46adb0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46ad00 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46acf0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46ad34 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa465600 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ad4c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa465640 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ad64 <col:42> 'class std::ios_base' lvalue ParmVar 0xa465690 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46ad7c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa465700 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46ad94 <col:55> 'float' lvalue ParmVar 0xa465750 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa46af08 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0xa46aef8 <col:9, col:58>
    (CallExpr 0xa46aec8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46ae18 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46ae08 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46ae4c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa4658a0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ae64 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa4658e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ae7c <col:42> 'class std::ios_base' lvalue ParmVar 0xa465930 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46ae94 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4659a0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46aeac <col:55> 'double' lvalue ParmVar 0xa4659f0 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa46b020 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0xa46b010 <col:9, col:58>
    (CallExpr 0xa46afe0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46af30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46af20 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46af64 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa465b40 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46af7c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa465b80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46af94 <col:42> 'class std::ios_base' lvalue ParmVar 0xa465bd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46afac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa465c40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46afc4 <col:55> 'long double' lvalue ParmVar 0xa465c90 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa46b138 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0xa46b128 <col:9, col:58>
    (CallExpr 0xa46b0f8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa46b048 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa46b038 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa46b07c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0xa465de0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46b094 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0xa465e20 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46b0ac <col:42> 'class std::ios_base' lvalue ParmVar 0xa465e70 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46b0c4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa465ee0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46b0dc <col:55> 'void *' lvalue ParmVar 0xa465f30 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0xa46b150 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0xa46bf78 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0xa46b1d8 <line:2120:4, col:18>
    0xa46b170 "int __ret =
      (UnaryOperator 0xa46b1c0 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa46b1a8 <col:17> 'int' 1))")
  (IfStmt 0xa46bf30 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0xa46b238 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0xa46b218 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa46b1e8 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0xa466ab0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0xa46b228 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa46b200 <col:17> 'int' 10)))
    (CompoundStmt 0xa46b5b0 <line:2122:6, line:2125:6>
      (IfStmt 0xa46b590 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0xa46b490 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa46b2f0 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b2a8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
            (DeclRefExpr 0xa46b250 <col:12> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b288 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa46b270 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa46b468 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b420 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
            (DeclRefExpr 0xa46b314 <col:35> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b400 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0xa46b3d8 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa46b390 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                (CXXUnresolvedConstructExpr 0xa46b358 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0xa46b340 <col:57> 'char'48))
                (DeclRefExpr 0xa46b374 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0xa466ab0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0xa46b578 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa46b4a8 <col:3> 'int' lvalue Var 0xa46b170 '__ret' 'int')
          (CXXOperatorCallExpr 0xa46b550 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b518 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa46b4c0 <col:11> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b4f8 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa46b4e0 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0xa46bf18 <line:2127:6, line:2134:6>
      (IfStmt 0xa46bef8 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0xa46b758 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0xa46b668 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b620 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
            (DeclRefExpr 0xa46b5c4 <col:12> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b600 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0xa46b5e8 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0xa46b730 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b6e8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
            (DeclRefExpr 0xa46b68c <col:35> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b6c8 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0xa46b6b0 <col:50> 'char'57))))
        (BinaryOperator 0xa46b840 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0xa46b770 <col:3> 'int' lvalue Var 0xa46b170 '__ret' 'int')
          (CXXOperatorCallExpr 0xa46b818 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa46b7e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa46b788 <col:11> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0xa46b7c0 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0xa46b7a8 <col:25> 'char'48))))
        (IfStmt 0xa46bed8 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0xa46b9e8 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa46b8f8 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa46b8b0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
              (DeclRefExpr 0xa46b858 <col:17> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa46b890 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0xa46b878 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0xa46b9c0 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0xa46b978 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
              (DeclRefExpr 0xa46b91c <col:40> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0xa46b958 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0xa46b940 <col:55> 'char'102))))
          (BinaryOperator 0xa46bb70 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa46ba00 <col:3> 'int' lvalue Var 0xa46b170 '__ret' 'int')
            (CXXOperatorCallExpr 0xa46bb48 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0xa46bb00 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
              (IntegerLiteral 0xa46ba18 <col:11> 'int' 10)
              (ParenExpr 0xa46bae8 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0xa46bac0 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0xa46ba88 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (DeclRefExpr 0xa46ba30 <col:17> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0xa46ba68 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0xa46ba50 <col:31> 'char'97))))))
          (IfStmt 0xa46beb8 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0xa46bd18 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa46bc28 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa46bbe0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
                (DeclRefExpr 0xa46bb88 <col:17> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa46bbc0 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0xa46bba8 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0xa46bcf0 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0xa46bca8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
                (DeclRefExpr 0xa46bc4c <col:40> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0xa46bc88 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0xa46bc70 <col:55> 'char'70))))
            (BinaryOperator 0xa46bea0 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa46bd30 <col:3> 'int' lvalue Var 0xa46b170 '__ret' 'int')
              (CXXOperatorCallExpr 0xa46be78 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa46be30 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                (IntegerLiteral 0xa46bd48 <col:11> 'int' 10)
                (ParenExpr 0xa46be18 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0xa46bdf0 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa46bdb8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                    (DeclRefExpr 0xa46bd60 <col:17> '_CharT2' lvalue ParmVar 0xa466af0 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0xa46bd98 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0xa46bd80 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0xa46bf68 <line:2135:4, col:11>
    (DeclRefExpr 0xa46bf4c <col:11> 'int' lvalue Var 0xa46b170 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0xa46c408 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0xa46c018 <line:2143:4, col:18>
    0xa46bfb0 "int __ret =
      (UnaryOperator 0xa46c000 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0xa46bfe8 <col:17> 'int' 1))")
  (DeclStmt 0xa46c1f8 <line:2144:4, col:73>
    0xa46c070 "const char_type *__q =
      (CallExpr 0xa46c1d0 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa46c150 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0xa46c184 <col:54> 'const _CharT2 *' lvalue ParmVar 0xa466f70 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0xa46c19c <col:62> 'size_t':'unsigned int' lvalue ParmVar 0xa466fb0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0xa46c1b4 <col:69> '_CharT2' lvalue ParmVar 0xa466ff0 '__c' '_CharT2'))")
  (IfStmt 0xa46c3c0 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0xa46c208 <line:2145:8> 'const char_type *' lvalue Var 0xa46c070 '__q' 'const char_type *')
    (CompoundStmt 0xa46c3a8 <line:2146:6, line:2150:6>
      (BinaryOperator 0xa46c2c8 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa46c220 <col:8> 'int' lvalue Var 0xa46bfb0 '__ret' 'int')
        (CXXOperatorCallExpr 0xa46c2a0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa46c268 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa46c238 <col:16> 'const char_type *' lvalue Var 0xa46c070 '__q' 'const char_type *')
          (DeclRefExpr 0xa46c250 <col:22> 'const _CharT2 *' lvalue ParmVar 0xa466f70 '__zero' 'const _CharT2 *')))
      (IfStmt 0xa46c388 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0xa46c320 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0xa46c310 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0xa46c2e0 <col:12> 'int' lvalue Var 0xa46bfb0 '__ret' 'int'))
          (IntegerLiteral 0xa46c2f8 <col:20> 'int' 15))
        (CompoundAssignOperator 0xa46c368 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0xa46c338 <col:3> 'int' lvalue Var 0xa46bfb0 '__ret' 'int')
          (IntegerLiteral 0xa46c350 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa46c3f8 <line:2151:4, col:11>
    (DeclRefExpr 0xa46c3dc <col:11> 'int' lvalue Var 0xa46bfb0 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0xa46c530 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0xa46c520 <col:9, col:61>
    (CallExpr 0xa46c4f0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c438 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46c474 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa467390 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c48c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa468ec0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c4a4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa468f10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46c4bc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa468f80 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46c4d4 <col:58> 'long' lvalue ParmVar 0xa468fd0 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0xa46c650 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0xa46c640 <col:9, col:61>
    (CallExpr 0xa46c610 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c558 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46c594 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa4690b0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c5ac <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa4690f0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c5c4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa469140 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46c5dc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4691b0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46c5f4 <col:58> 'unsigned short' lvalue ParmVar 0xa469200 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0xa46c770 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0xa46c760 <col:9, col:61>
    (CallExpr 0xa46c730 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c678 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46c6b4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa4692e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c6cc <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa469320 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c6e4 <col:45> 'class std::ios_base' lvalue ParmVar 0xa469370 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46c6fc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4693e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46c714 <col:58> 'unsigned int' lvalue ParmVar 0xa469430 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0xa46c890 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0xa46c880 <col:9, col:61>
    (CallExpr 0xa46c850 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c798 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46c7d4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa469510 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c7ec <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa469550 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c804 <col:45> 'class std::ios_base' lvalue ParmVar 0xa4695a0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46c81c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa469610 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46c834 <col:58> 'unsigned long' lvalue ParmVar 0xa469660 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0xa46c9b0 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0xa46c9a0 <col:9, col:61>
    (CallExpr 0xa46c970 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c8b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46c8f4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa469740 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c90c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa469780 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46c924 <col:45> 'class std::ios_base' lvalue ParmVar 0xa4697d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46c93c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa469840 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46c954 <col:58> 'long long' lvalue ParmVar 0xa469890 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0xa46cad0 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0xa46cac0 <col:9, col:61>
    (CallExpr 0xa46ca90 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa46c9d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa46ca14 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa469970 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ca2c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0xa4699b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa46ca44 <col:45> 'class std::ios_base' lvalue ParmVar 0xa469a00 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa46ca5c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa469a70 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa46ca74 <col:58> 'unsigned long long' lvalue ParmVar 0xa469ac0 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0xa46ce18 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0xa471648 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa471630 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0xa471654 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0xa46e660 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0xa4716f0 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0xa471800 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0xa4717f0 <col:9, col:50>
    (CallExpr 0xa4717c0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471728 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471718 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa47175c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46e760 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471774 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46e7b0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa47178c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46e810 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4717a4 <col:47> '_Bool' lvalue ParmVar 0xa46e850 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0xa471900 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0xa4718f0 <col:9, col:50>
    (CallExpr 0xa4718c0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471828 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471818 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa47185c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46e990 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471874 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46e9e0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa47188c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46ea20 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4718a4 <col:47> 'long' lvalue ParmVar 0xa46ea70 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0xa471a00 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0xa4719f0 <col:9, col:50>
    (CallExpr 0xa4719c0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471928 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471918 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa47195c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46ebb0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471974 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46ec00 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa47198c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46ec40 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4719a4 <col:47> 'unsigned long' lvalue ParmVar 0xa46ec90 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0xa471b00 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0xa471af0 <col:9, col:50>
    (CallExpr 0xa471ac0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471a28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471a18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa471a5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46edd0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471a74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46ee20 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa471a8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46ee60 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471aa4 <col:47> 'long long' lvalue ParmVar 0xa46eeb0 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa471c00 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0xa471bf0 <col:9, col:50>
    (CallExpr 0xa471bc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471b28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471b18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa471b5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46eff0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471b74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46f040 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa471b8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46f080 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471ba4 <col:47> 'unsigned long long' lvalue ParmVar 0xa46f0d0 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0xa471d00 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0xa471cf0 <col:9, col:50>
    (CallExpr 0xa471cc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471c28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471c18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa471c5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46f210 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471c74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46f260 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa471c8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46f2a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471ca4 <col:47> 'double' lvalue ParmVar 0xa46f2f0 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0xa471e00 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0xa471df0 <col:9, col:50>
    (CallExpr 0xa471dc0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471d28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471d18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa471d5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46f430 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471d74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46f480 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa471d8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46f4c0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471da4 <col:47> 'long double' lvalue ParmVar 0xa46f510 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0xa471f00 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0xa471ef0 <col:9, col:50>
    (CallExpr 0xa471ec0 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa471e28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa471e18 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0xa471e5c <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0xa46f650 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471e74 <col:34> 'class std::ios_base' lvalue ParmVar 0xa46f6a0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0xa471e8c <col:39> 'char_type':'_CharT' lvalue ParmVar 0xa46f6e0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471ea4 <col:47> 'const void *' lvalue ParmVar 0xa46f730 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0xa471f18 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0xa472018 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0xa472008 <col:9, col:52>
    (CallExpr 0xa471fd8 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa471f38 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa471f74 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa470a00 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa471f8c <col:35> 'class std::ios_base' lvalue ParmVar 0xa470a50 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa471fa4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa470a90 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa471fbc <col:49> 'long' lvalue ParmVar 0xa470ae0 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0xa472120 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0xa472110 <col:9, col:52>
    (CallExpr 0xa4720e0 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa472040 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa47207c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa470bc0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa472094 <col:35> 'class std::ios_base' lvalue ParmVar 0xa470c10 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa4720ac <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa470c50 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4720c4 <col:49> 'unsigned long' lvalue ParmVar 0xa470ca0 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0xa472228 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0xa472218 <col:9, col:52>
    (CallExpr 0xa4721e8 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa472148 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa472184 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa470d80 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa47219c <col:35> 'class std::ios_base' lvalue ParmVar 0xa470dd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa4721b4 <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa470e10 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4721cc <col:49> 'long long' lvalue ParmVar 0xa470e60 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0xa472340 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0xa472330 <col:9, col:52>
    (CallExpr 0xa4722f0 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0xa472250 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa47228c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa470f40 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa4722a4 <col:35> 'class std::ios_base' lvalue ParmVar 0xa470f90 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa4722bc <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa470fd0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0xa4722d4 <col:49> 'unsigned long long' lvalue ParmVar 0xa471020 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0xa472688 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa472ab0 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0xa472aa0 <col:7, col:72>
    (CallExpr 0xa472a78 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4729e0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa4729c0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa472940 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4729a8 <col:40> 'const class std::locale' lvalue ParmVar 0xa472760 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa472a40 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa4300e0 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa472a60 <col:69> '_CharT' lvalue ParmVar 0xa472710 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa472ec8 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0xa472eb8 <col:7, col:72>
    (CallExpr 0xa472e90 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa472e00 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa472de0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa472d60 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa472dc8 <col:40> 'const class std::locale' lvalue ParmVar 0xa472b80 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa472e54 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa430150 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa472e74 <col:69> '_CharT' lvalue ParmVar 0xa472b30 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa4732d8 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0xa4732c8 <col:7, col:72>
    (CallExpr 0xa4732a0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa473210 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa4731f0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa473170 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4731d8 <col:40> 'const class std::locale' lvalue ParmVar 0xa472f90 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa473264 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa4302c0 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa473284 <col:69> '_CharT' lvalue ParmVar 0xa472f40 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa4736e8 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0xa4736d8 <col:7, col:72>
    (CallExpr 0xa4736b0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa473620 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa473600 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa473580 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4735e8 <col:40> 'const class std::locale' lvalue ParmVar 0xa4733a0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa473674 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa42f540 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa473694 <col:69> '_CharT' lvalue ParmVar 0xa473350 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa473af8 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0xa473ae8 <col:7, col:72>
    (CallExpr 0xa473ac0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa473a30 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa473a10 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa473990 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4739f8 <col:40> 'const class std::locale' lvalue ParmVar 0xa4737b0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa473a84 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa42f5b0 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa473aa4 <col:69> '_CharT' lvalue ParmVar 0xa473760 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa473f08 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0xa473ef8 <col:7, col:72>
    (CallExpr 0xa473ed0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa473e40 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa473e20 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa473da0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa473e08 <col:40> 'const class std::locale' lvalue ParmVar 0xa473bc0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa473e94 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa42ff90 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa473eb4 <col:69> '_CharT' lvalue ParmVar 0xa473b70 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa474318 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0xa474308 <col:7, col:72>
    (CallExpr 0xa4742e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa474250 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa474230 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4741b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa474218 <col:40> 'const class std::locale' lvalue ParmVar 0xa473fd0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa4742a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa430000 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa4742c4 <col:69> '_CharT' lvalue ParmVar 0xa473f80 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa474728 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0xa474718 <col:7, col:72>
    (CallExpr 0xa4746f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa474660 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa474640 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4745c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa474628 <col:40> 'const class std::locale' lvalue ParmVar 0xa4743e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa4746b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa430330 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa4746d4 <col:69> '_CharT' lvalue ParmVar 0xa474390 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa474b38 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0xa474b28 <col:7, col:73>
    (CallExpr 0xa474b00 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa474a70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa474a50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4749d0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa474a38 <col:40> 'const class std::locale' lvalue ParmVar 0xa4747f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa474ac4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa430070 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa474ae4 <col:70> '_CharT' lvalue ParmVar 0xa4747a0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa474f48 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0xa474f38 <col:7, col:72>
    (CallExpr 0xa474f10 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa474e80 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa474e60 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa474de0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa474e48 <col:40> 'const class std::locale' lvalue ParmVar 0xa474c00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa474ed4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa4303a0 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa474ef4 <col:69> '_CharT' lvalue ParmVar 0xa474bb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa475358 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0xa475348 <col:7, col:72>
    (CallExpr 0xa475320 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa475290 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa475270 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4751f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa475258 <col:40> 'const class std::locale' lvalue ParmVar 0xa475010 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa4752e4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0xa4301c0 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0xa475304 <col:69> '_CharT' lvalue ParmVar 0xa474fc0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa475720 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0xa475710 <col:7, col:58>
    (CallExpr 0xa4756f0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4756a0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa475680 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa475600 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa475668 <col:40> 'const class std::locale' lvalue ParmVar 0xa475420 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa4756d4 <col:55> '_CharT' lvalue ParmVar 0xa4753d0 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0xa475af0 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0xa475ae0 <col:7, col:58>
    (CallExpr 0xa475ac0 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa475a70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0xa475a50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4759d0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa475a38 <col:40> 'const class std::locale' lvalue ParmVar 0xa4757f0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0xa475aa4 <col:55> '_CharT' lvalue ParmVar 0xa4757a0 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0xa47a578 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0xa479db8 <line:56:2, col:49>
    0xa479c30 "const size_t __i =
      (CallExpr 0xa479d98 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa479d60 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa479d28 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0xa479eb0 <line:57:2, col:59>
    0xa479e00 "const locale::facet **__caches =
      (ImplicitCastExpr 0xa479ea0 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0xa479e7c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0xa3b7680
          (ImplicitCastExpr 0xa479e70 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa479e4c <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
              (DeclRefExpr 0xa479e34 <col:35> 'const class std::locale' lvalue ParmVar 0xa4762c0 '__loc' 'const class std::locale &')))))")
  (IfStmt 0xa47a3f0 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0xa479f48 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa479f38 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa479f28 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0xa479f10 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0xa479ef0 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0xa479ec0 <col:7> 'const class locale::facet **' lvalue Var 0xa479e00 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0xa479f00 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa479ed8 <col:16> 'const size_t':'const unsigned int' lvalue Var 0xa479c30 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0xa47a3d0 <line:59:4, line:72:4>
      (DeclStmt 0xa47a080 <line:60:6, col:41>
        0xa47a030 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0xa47a068 <col:40> 'int' 0)")
      (IfStmt 0xa47a268 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa47a090 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa47a250 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0xa47a1b0 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0xa47a0a0 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa47a030 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0xa47a178 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0xa47a230 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa47a1e0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa47a1c8 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0xa47a030 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0xa47a214 <col:19> 'const class std::locale' lvalue ParmVar 0xa4762c0 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0xa47a2f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa47a288 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa47a2d8 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0xa47a2b0 <line:68:3, col:10> 'void'
            (DeclRefExpr 0xa47a298 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0xa47a030 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0xa47a2c8 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0xa47a3a8 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0xa47a354 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0xa3b9c00
          (ImplicitCastExpr 0xa47a348 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0xa47a324 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0xa3b46d0
              (DeclRefExpr 0xa47a30c <col:6> 'const class std::locale' lvalue ParmVar 0xa4762c0 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0xa47a374 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0xa47a030 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0xa47a38c <col:45> 'const size_t':'const unsigned int' lvalue Var 0xa479c30 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0xa47a568 <line:73:2, col:67>
    (CXXStaticCastExpr 0xa47a550 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0xa47a4f0 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0xa47a4d0 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0xa47a4a0 <col:54> 'const class locale::facet **' lvalue Var 0xa479e00 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0xa47a4e0 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa47a4b8 <col:63> 'const size_t':'const unsigned int' lvalue Var 0xa479c30 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0xa47d2b0 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0xa47a878 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa47a848 <col:7> '_Bool' lvalue ->_M_allocated 0xa45b780
      (CXXThisExpr 0xa47a838 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0xa47a868 <col:22> '_Bool' true))
  (DeclStmt 0xa47ab00 <line:83:7, col:73>
    0xa47a980 "const numpunct<_CharT> &__np =
      (CallExpr 0xa47aae0 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa47aa60 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
        (DeclRefExpr 0xa47aac8 <col:67> 'const class std::locale' lvalue ParmVar 0xa47a750 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa47ab80 <line:85:7, col:27>
    0xa47ab20 "char *__grouping =
      (ImplicitCastExpr 0xa47ab70 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0xa47ab58 <col:26> 'int' 0))")
  (DeclStmt 0xa47ac10 <line:86:7, col:29>
    0xa47abc0 "_CharT *__truename =
      (IntegerLiteral 0xa47abf8 <col:28> 'int' 0)")
  (DeclStmt 0xa47ac80 <line:87:7, col:30>
    0xa47ac30 "_CharT *__falsename =
      (IntegerLiteral 0xa47ac68 <col:29> 'int' 0)")
  (IfStmt 0xa47d190 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa47ac90 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa47d138 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0xa47ad98 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa47acb0 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa45b3b0
          (CXXThisExpr 0xa47aca0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa47ad78 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47ad40 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa47ad20 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa47ace8 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa47acd0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa47ae40 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0xa47adb0 <col:4> 'char *' lvalue Var 0xa47ab20 '__grouping' 'char *')
        (CXXNewExpr 0xa47ae00 <col:17, col:21> 'char *'
          (MemberExpr 0xa47add8 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa45b3b0
            (CXXThisExpr 0xa47adc8 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa47af48 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47aec8 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa47aea8 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa47ae70 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa47ae58 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa47aefc <col:25> 'char *' lvalue Var 0xa47ab20 '__grouping' 'char *')
        (MemberExpr 0xa47af28 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa45b3b0
          (CXXThisExpr 0xa47af18 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa47afb8 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa47af80 <col:4> 'const char *' lvalue ->_M_grouping 0xa45b370
          (CXXThisExpr 0xa47af70 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa47afa0 <col:18> 'char *' lvalue Var 0xa47ab20 '__grouping' 'char *'))
      (BinaryOperator 0xa47c380 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0xa47afe0 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0xa45b3f0
          (CXXThisExpr 0xa47afd0 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0xa47c368 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0xa47c350 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0xa47b0f8 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0xa47b010 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0xa45b3b0
                (CXXThisExpr 0xa47b000 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0xa47b0e0 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0xa47b0d0 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0xa47b0a0 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0xa47b078 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0xa47b040 <col:37> 'const char *' lvalue ->_M_grouping 0xa45b370
                        (CXXThisExpr 0xa47b030 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0xa47b060 <col:49> 'int' 0))))
                (IntegerLiteral 0xa47b0b8 <col:55> 'int' 0)))
            (ParenExpr 0xa47c338 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0xa47c310 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa47c2b8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
                (ArraySubscriptExpr 0xa47b158 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0xa47b120 <col:13> 'const char *' lvalue ->_M_grouping 0xa45b370
                    (CXXThisExpr 0xa47b110 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0xa47b140 <col:25> 'int' 0))
                (DeclRefExpr 0xa47c298 <line:97:9, col:44> 'const char':'const char' lvalue Var 0xa47bc50 '__max' 'const char':'const char'))))))
      (BinaryOperator 0xa47c490 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0xa47c3a8 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa45b490
          (CXXThisExpr 0xa47c398 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa47c470 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47c438 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0xa47c418 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa47c3e0 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa47c3c8 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa47c538 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa47c4a8 <col:4> '_CharT *' lvalue Var 0xa47abc0 '__truename' '_CharT *')
        (CXXNewExpr 0xa47c4f8 <col:17, col:21> '_CharT *'
          (MemberExpr 0xa47c4d0 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa45b490
            (CXXThisExpr 0xa47c4c0 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa47c640 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47c5c0 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0xa47c5a0 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa47c568 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa47c550 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa47c5f4 <col:25> '_CharT *' lvalue Var 0xa47abc0 '__truename' '_CharT *')
        (MemberExpr 0xa47c620 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0xa45b490
          (CXXThisExpr 0xa47c610 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa47c6b0 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0xa47c678 <col:4> 'const _CharT *' lvalue ->_M_truename 0xa45b450
          (CXXThisExpr 0xa47c668 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa47c698 <col:18> '_CharT *' lvalue Var 0xa47abc0 '__truename' '_CharT *'))
      (BinaryOperator 0xa47c7c0 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0xa47c6d8 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa45b510
          (CXXThisExpr 0xa47c6c8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa47c7a0 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47c768 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0xa47c748 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa47c710 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0xa47c6f8 <col:24> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0xa47c868 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0xa47c7d8 <col:4> '_CharT *' lvalue Var 0xa47ac30 '__falsename' '_CharT *')
        (CXXNewExpr 0xa47c828 <col:18, col:22> '_CharT *'
          (MemberExpr 0xa47c800 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa45b510
            (CXXThisExpr 0xa47c7f0 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0xa47c970 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47c8f0 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0xa47c8d0 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa47c898 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0xa47c880 <col:4> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0xa47c924 <col:26> '_CharT *' lvalue Var 0xa47ac30 '__falsename' '_CharT *')
        (MemberExpr 0xa47c950 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0xa45b510
          (CXXThisExpr 0xa47c940 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0xa47c9e0 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa47c9a8 <col:4> 'const _CharT *' lvalue ->_M_falsename 0xa45b4d0
          (CXXThisExpr 0xa47c998 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0xa47c9c8 <col:19> '_CharT *' lvalue Var 0xa47ac30 '__falsename' '_CharT *'))
      (BinaryOperator 0xa47ca98 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa47ca08 <col:4> '_CharT' lvalue ->_M_decimal_point 0xa45b550
          (CXXThisExpr 0xa47c9f8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa47ca78 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47ca40 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa47ca28 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0xa47cb50 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0xa47cac0 <col:4> '_CharT' lvalue ->_M_thousands_sep 0xa45b590
          (CXXThisExpr 0xa47cab0 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0xa47cb30 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa47caf8 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0xa47cae0 <col:23> 'const numpunct<_CharT>' lvalue Var 0xa47a980 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0xa47cdb0 <line:112:4, col:64>
        0xa47cc30 "const ctype<_CharT> &__ct =
          (CallExpr 0xa47cd90 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa47cd10 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
            (DeclRefExpr 0xa47cd78 <col:58> 'const class std::locale' lvalue ParmVar 0xa47a750 '__loc' 'const class std::locale &'))")
      (CallExpr 0xa47cf70 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47cdd8 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa47cdc0 <col:4> 'const ctype<_CharT>' lvalue Var 0xa47cc30 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa47ce2c <col:15, col:27> 'const char *' lvalue Var 0xa45ab20 '_S_atoms_out' 'const char *')
        (BinaryOperator 0xa47cf28 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0xa47cf08 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa47ce6c <col:8, col:20> 'const char *' lvalue Var 0xa45ab20 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0xa47cf18 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa47ceac <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45aa70 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0xa47cf50 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0xa45b670
          (CXXThisExpr 0xa47cf40 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0xa47d110 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa47cfb0 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa47cf98 <col:4> 'const ctype<_CharT>' lvalue Var 0xa47cc30 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0xa47d004 <col:15, col:27> 'const char *' lvalue Var 0xa45ab70 '_S_atoms_in' 'const char *')
        (BinaryOperator 0xa47d0c8 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0xa47d0a8 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa47d044 <col:8, col:20> 'const char *' lvalue Var 0xa45ab70 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0xa47d0b8 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0xa47d084 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ae60 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0xa47d0f0 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0xa45b740
          (CXXThisExpr 0xa47d0e0 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0xa47d290 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa47d1b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa47d270 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0xa47d1e8 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0xa47d1d8 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0xa47d1c0 <col:14> 'char *' lvalue Var 0xa47ab20 '__grouping' 'char *')))
      (CXXDeleteExpr 0xa47d218 <line:123:4, col:14> 'void'
        (DeclRefExpr 0xa47d200 <col:14> '_CharT *' lvalue Var 0xa47abc0 '__truename' '_CharT *'))
      (CXXDeleteExpr 0xa47d248 <line:124:4, col:14> 'void'
        (DeclRefExpr 0xa47d230 <col:14> '_CharT *' lvalue Var 0xa47ac30 '__falsename' '_CharT *'))
      (NullStmt 0xa47d260 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0xa482db8 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0xa47df50 <line:149:7, col:50>
    0xa47df20 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa47e040 <line:150:7, col:69>
    0xa47e010 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa47e148 <line:151:7, col:37>
    0xa47e110 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa47e210 <line:152:7, col:45>
    0xa47e170 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa47e1e0 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0xa47e1bc <col:29, col:34> '<bound member function type>' ._M_getloc 0xa3da7b0
          (ImplicitCastExpr 0xa47e200 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa47e1a4 <col:29> 'class std::ios_base' lvalue ParmVar 0xa47d820 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa47e2d8 <line:153:7, col:45>
    0xa47e250 "const __cache_type *__lc =
      (CallExpr 0xa47e2b8 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0xa47e284 <col:34> '__use_cache<__cache_type>' lvalue Var 0xa47e110 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa47e29c <col:39> 'const class std::locale' lvalue Var 0xa47e170 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa47e3a8 <line:154:7, col:46>
    0xa47e320 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa47e370 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa47e354 <col:29> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa47e418 <line:155:7, col:34>
    0xa47e3c0 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa47e400 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0xa47e520 <line:158:7, col:38>
    0xa47e430 "bool __testeof =
      (CXXOperatorCallExpr 0xa47e4f8 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0xa47e498 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
        (DeclRefExpr 0xa47e464 <col:24> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')
        (DeclRefExpr 0xa47e47c <col:33> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))")
  (IfStmt 0xa47ee80 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0xa47e558 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa47e548 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa47e530 <col:12> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')))
    (CompoundStmt 0xa47ee60 <line:162:2, line:175:2>
      (BinaryOperator 0xa47e5b8 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0xa47e56c <col:4> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa47e5a0 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa47e584 <col:11> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
      (DeclStmt 0xa47e728 <line:164:4, col:58>
        0xa47e5e0 "const bool __plus =
          (CXXOperatorCallExpr 0xa47e700 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa47e6a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (DeclRefExpr 0xa47e614 <col:24> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa47e688 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0xa47e62c <col:31> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa47e664 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac50 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0xa47ee40 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0xa47eb50 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0xa47ea18 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0xa47e878 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0xa47e860 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0xa47e738 <col:9> 'const _Bool' lvalue Var 0xa47e5e0 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0xa47e838 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47e7d8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (DeclRefExpr 0xa47e750 <col:19> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa47e7c0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47e768 <col:26> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa47e79c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac10 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa47ea00 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0xa47e9e8 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0xa47e9d0 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa47e8a8 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47e88c <col:13> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa47e9a8 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0xa47e948 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                    (DeclRefExpr 0xa47e8dc <col:38> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa47e910 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0xa47e8f4 <col:45> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa47eb38 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0xa47eb20 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0xa47eaf8 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0xa47ea98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa47ea30 <col:13> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa47ea60 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0xa47ea48 <col:20> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa47ee28 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0xa47ec78 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0xa47ec68 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa47ec18 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0xa47eb68 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
            (ConditionalOperator 0xa47ebd8 <col:18, col:33> 'char'
              (ImplicitCastExpr 0xa47ebc8 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa47eb80 <col:18> 'const _Bool' lvalue Var 0xa47e5e0 '__plus' 'const _Bool'))
              (CharacterLiteral 0xa47eb98 <col:27> 'char'43)
              (CharacterLiteral 0xa47ebb0 <col:33> 'char'45)))
          (IfStmt 0xa47ee08 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa47ed40 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0xa47ece8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
              (UnaryOperator 0xa47ecb8 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa47ec9c <col:14> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
              (DeclRefExpr 0xa47eccc <col:23> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
            (BinaryOperator 0xa47edb0 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0xa47ed64 <col:3> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa47ed98 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa47ed7c <col:10> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
            (BinaryOperator 0xa47edf0 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0xa47edc8 <col:3> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa47ede0 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa47eef8 <line:178:7, col:36>
    0xa47eeb0 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0xa47eee8 <col:31> '_Bool' false)")
  (DeclStmt 0xa47ef70 <line:179:7, col:24>
    0xa47ef20 "int __sep_pos =
      (IntegerLiteral 0xa47ef58 <col:23> 'int' 0)")
  (WhileStmt 0xa47f6c0 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0xa47efa8 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa47ef98 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa47ef80 <col:15> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')))
    (CompoundStmt 0xa47f6a8 <line:181:2, line:201:2>
      (IfStmt 0xa47f688 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0xa47f220 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0xa47f118 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0xa47f100 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa47efd8 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0xa47efbc <col:9> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa47f0d8 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa47f078 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa47f00c <col:34> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa47f040 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0xa47f024 <col:41> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa47f1f8 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa47f198 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (DeclRefExpr 0xa47f12c <col:11> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa47f160 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0xa47f144 <col:18> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa47f238 <line:184:6>)
        (IfStmt 0xa47f668 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa47f328 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa47f2c8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (DeclRefExpr 0xa47f240 <col:13> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0xa47f2b0 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0xa47f258 <col:20> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa47f28c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0xa47f640 <line:186:6, line:198:6>
            (IfStmt 0xa47f468 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0xa47f378 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa47f368 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa47f34c <col:13> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool')))
              (CompoundStmt 0xa47f450 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0xa47f3e8 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa47f3d8 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa47f3c0 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa47f38c <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa47f3a8 <col:15> 'char'48))
                (BinaryOperator 0xa47f438 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa47f40c <col:5> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0xa47f428 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0xa47f4a0 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa47f484 <col:10> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int'))
            (IfStmt 0xa47f620 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0xa47f558 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0xa47f500 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
                (UnaryOperator 0xa47f4d0 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0xa47f4b4 <col:14> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
                (DeclRefExpr 0xa47f4e4 <col:23> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
              (BinaryOperator 0xa47f5c8 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0xa47f57c <col:3> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0xa47f5b0 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0xa47f594 <col:10> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
              (BinaryOperator 0xa47f608 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0xa47f5e0 <col:3> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa47f5f8 <col:15> '_Bool' true))))
          (BreakStmt 0xa47f660 <line:200:6>)))))
  (DeclStmt 0xa47f728 <line:204:7, col:31>
    0xa47f6e0 "bool __found_dec =
      (CXXBoolLiteralExpr 0xa47f718 <col:26> '_Bool' false)")
  (DeclStmt 0xa47f788 <line:205:7, col:31>
    0xa47f740 "bool __found_sci =
      (CXXBoolLiteralExpr 0xa47f778 <col:26> '_Bool' false)")
  (DeclStmt 0xa47f7f8 <line:206:7, col:30>
    0xa47f7a0 "string __found_grouping =
      (CXXConstructExpr 0xa47f7d8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa47f8d8 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa47f820 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0xa47f808 <col:11> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa47f8a8 <line:208:2, col:29> 'void'
      (MemberExpr 0xa47f86c <col:2, col:19> '<bound member function type>' .reserve 0xa36b460
        (DeclRefExpr 0xa47f854 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa47f8c8 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa47f890 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa47fa10 <line:209:7, col:65>
    0xa47f910 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa47f9e8 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa47f9a0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (DeclRefExpr 0xa47f944 <col:37> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa47f97c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa482970 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0xa47fa70 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa47fa38 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0xa47fa20 <col:12> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa480b40 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0xa47fab0 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa47faa0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa47fa84 <col:10> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')))
      (CompoundStmt 0xa480b20 <line:214:4, line:258:4>
        (DeclStmt 0xa47fbd8 <line:215:6, col:54>
          0xa47fae0 "const int __digit =
            (CallExpr 0xa47fbb0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0xa47fb28 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa47fb68 <col:34> 'const char_type *' lvalue Var 0xa47f910 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0xa47fb80 <col:46> 'int' 10)
              (DeclRefExpr 0xa47fb98 <col:50> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0xa480978 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0xa47fc40 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0xa47fc30 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0xa47fbe8 <col:10> 'const int' lvalue Var 0xa47fae0 '__digit' 'const int'))
            (UnaryOperator 0xa47fc18 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0xa47fc00 <col:22> 'int' 1)))
          (CompoundStmt 0xa47fd78 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0xa47fd10 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0xa47fd00 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa47fce8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0xa47fc58 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
              (ImplicitCastExpr 0xa47fcd8 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0xa47fcc0 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0xa47fca0 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0xa47fc70 <col:13> 'char'48))
                  (ImplicitCastExpr 0xa47fcb0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa47fc84 <col:19> 'const int' lvalue Var 0xa47fae0 '__digit' 'const int')))))
            (BinaryOperator 0xa47fd60 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0xa47fd34 <col:3> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0xa47fd50 <col:22> '_Bool' true)))
          (IfStmt 0xa480958 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0xa47ff18 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0xa47fec0 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa47fe58 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa47fdf8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (DeclRefExpr 0xa47fd90 <col:15> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0xa47fdc0 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0xa47fda8 <col:22> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))
                (UnaryOperator 0xa47fea8 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa47fe98 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa47fe7c <col:12> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool'))))
              (UnaryOperator 0xa47ff00 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa47fef0 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa47fed8 <col:28> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
            (CompoundStmt 0xa47fff0 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0xa47ff88 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0xa47ff78 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa47ff60 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0xa47ff30 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                (CharacterLiteral 0xa47ff48 <col:13> 'char'46))
              (BinaryOperator 0xa47ffd8 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa47ffac <col:3> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0xa47ffc8 <col:17> '_Bool' true)))
            (IfStmt 0xa480938 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0xa4802c8 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0xa480298 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0xa480240 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0xa480228 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0xa4800f0 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa480090 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                        (DeclRefExpr 0xa480008 <col:16> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa480078 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0xa480020 <col:23> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa480054 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad90 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0xa480200 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0xa4801a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                        (DeclRefExpr 0xa480114 <col:12> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0xa480188 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0xa48012c <col:19> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                          (DeclRefExpr 0xa480164 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ae10 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0xa480280 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa480270 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa480254 <col:12> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
                (DeclRefExpr 0xa4802b0 <col:27> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool'))
              (CompoundStmt 0xa480910 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0xa480338 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa480328 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa480310 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa4802e0 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                  (CharacterLiteral 0xa4802f8 <col:13> 'char'101))
                (BinaryOperator 0xa480388 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0xa48035c <col:3> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0xa480378 <col:17> '_Bool' true))
                (IfStmt 0xa4808f0 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa480440 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0xa4803e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
                    (UnaryOperator 0xa4803b8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0xa4803a0 <col:9> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
                    (DeclRefExpr 0xa4803cc <col:18> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
                  (CompoundStmt 0xa480870 <line:237:5, line:244:5>
                    (BinaryOperator 0xa4804b0 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0xa480464 <col:7> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0xa480498 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0xa48047c <col:14> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
                    (DeclStmt 0xa480618 <line:239:7, col:61>
                      0xa4804d0 "const bool __plus =
                        (CXXOperatorCallExpr 0xa4805f0 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0xa480590 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                          (DeclRefExpr 0xa480504 <col:27> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa480578 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0xa48051c <col:34> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa480554 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac50 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0xa480850 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0xa480750 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0xa480628 <col:11> 'const _Bool' lvalue Var 0xa4804d0 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0xa480728 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0xa4806c8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                          (DeclRefExpr 0xa480640 <col:21> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0xa4806b0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0xa480658 <col:28> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                            (DeclRefExpr 0xa48068c <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac10 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0xa480820 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa480810 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa4807f8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa480768 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                        (ConditionalOperator 0xa4807d8 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0xa4807c8 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa480780 <col:19> 'const _Bool' lvalue Var 0xa4804d0 '__plus' 'const _Bool'))
                          (CharacterLiteral 0xa480798 <col:28> 'char'43)
                          (CharacterLiteral 0xa4807b0 <col:34> 'char'45)))
                      (ContinueStmt 0xa480848 <line:243:9>)))
                  (CompoundStmt 0xa4808d8 <line:246:5, line:249:5>
                    (BinaryOperator 0xa4808b8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0xa48088c <col:7> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0xa4808a8 <col:19> '_Bool' true))
                    (BreakStmt 0xa4808d0 <line:248:7>))))
              (BreakStmt 0xa480930 <line:252:8>))))
        (IfStmt 0xa480b00 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa480a38 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa4809e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (UnaryOperator 0xa4809b0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa480994 <col:12> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
            (DeclRefExpr 0xa4809c4 <col:21> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
          (BinaryOperator 0xa480aa8 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa480a5c <col:8> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa480a90 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa480a74 <col:15> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
          (BinaryOperator 0xa480ae8 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa480ac0 <col:8> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa480ad8 <col:20> '_Bool' true)))))
    (WhileStmt 0xa482958 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0xa480b80 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa480b70 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa480b54 <col:10> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')))
      (CompoundStmt 0xa482940 <line:261:4, line:348:4>
        (IfStmt 0xa482798 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0xa480cd8 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa480bb0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa480b94 <col:10> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa480cb0 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa480c50 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa480be4 <col:35> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa480c18 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa480bfc <col:42> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa480fb8 <line:265:8, line:285:8>
            (IfStmt 0xa480f98 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0xa480d70 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0xa480d18 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa480d08 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa480cf0 <col:8> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool')))
                (UnaryOperator 0xa480d58 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa480d48 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa480d2c <col:24> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
              (CompoundStmt 0xa480f78 <line:267:5, line:282:5>
                (IfStmt 0xa480f58 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0xa480db0 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0xa480da0 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa480d88 <col:11> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))
                  (CompoundStmt 0xa480ec8 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0xa480e58 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa480e48 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa480e30 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa480dbc <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa480e18 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa480e08 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa480df8 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa480dd4 <col:42> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))))
                    (BinaryOperator 0xa480eb0 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0xa480e7c <col:4> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')
                      (IntegerLiteral 0xa480e98 <col:16> 'int' 0)))
                  (CompoundStmt 0xa480f40 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0xa480f18 <line:279:4, col:17> 'void'
                      (MemberExpr 0xa480ef8 <col:4, col:11> '<bound member function type>' .clear 0xa36b4d0
                        (DeclRefExpr 0xa480ee0 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')))
                    (BreakStmt 0xa480f38 <line:280:4>))))
              (BreakStmt 0xa480f90 <line:284:5>)))
          (IfStmt 0xa482778 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa481098 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0xa481038 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa480fcc <col:15> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa481000 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa480fe4 <col:22> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))
            (CompoundStmt 0xa4813d0 <line:287:8, line:300:8>
              (IfStmt 0xa4813b0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0xa481140 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0xa4810e8 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa4810d8 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa4810bc <col:8> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool')))
                  (UnaryOperator 0xa481128 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa481118 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa4810fc <col:24> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
                (CompoundStmt 0xa481388 <line:289:5, line:297:5>
                  (IfStmt 0xa4812a8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa4811d8 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0xa481190 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0xa481170 <col:11, col:28> '<bound member function type>' .size 0xa36a920
                          (ImplicitCastExpr 0xa4811c8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0xa481158 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0xa481280 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa481270 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa481258 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa4811e4 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0xa481240 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0xa481230 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0xa481220 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0xa4811fc <col:47> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0xa481320 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0xa481310 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa4812f8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0xa4812c4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                    (CharacterLiteral 0xa4812e0 <col:17> 'char'46))
                  (BinaryOperator 0xa481370 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0xa481344 <col:7> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0xa481360 <col:21> '_Bool' true)))
                (BreakStmt 0xa4813a8 <line:299:5>)))
            (CompoundStmt 0xa482760 <line:302:8, line:342:8>
              (DeclStmt 0xa481520 <line:303:3, line:304:45>
                0xa481400 "const char_type *__q =
                  (CallExpr 0xa4814f8 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa481478 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa4814ac <col:25> 'const char_type *' lvalue Var 0xa47f910 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0xa4814c8 <col:37> 'int' 10)
                    (DeclRefExpr 0xa4814e0 <col:41> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa482740 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0xa481530 <line:305:7> 'const char_type *' lvalue Var 0xa481400 '__q' 'const char_type *')
                (CompoundStmt 0xa481720 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0xa481690 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa481548 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0xa481668 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0xa481620 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                      (CharacterLiteral 0xa481560 <col:17> 'char'48)
                      (ParenExpr 0xa481608 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0xa4815e0 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0xa4815a8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                          (DeclRefExpr 0xa481574 <col:24> 'const char_type *' lvalue Var 0xa481400 '__q' 'const char_type *')
                          (DeclRefExpr 0xa48158c <col:30> 'const char_type *' lvalue Var 0xa47f910 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0xa4816d8 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa4816b0 <col:7> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0xa4816c8 <col:26> '_Bool' true))
                  (UnaryOperator 0xa481708 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa4816f0 <col:9> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))
                (IfStmt 0xa482720 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0xa481a00 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0xa4819d0 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0xa481978 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0xa481960 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0xa481828 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0xa4817c8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                            (DeclRefExpr 0xa48173c <col:13> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa4817b0 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0xa481754 <col:20> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa48178c <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad90 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0xa481938 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0xa4818d8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                            (DeclRefExpr 0xa48184c <col:9> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0xa4818c0 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0xa481864 <col:16> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                              (DeclRefExpr 0xa48189c <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ae10 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0xa4819b8 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa4819a8 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa48198c <col:9> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0xa4819e8 <col:24> '_Bool' lvalue Var 0xa47eeb0 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0xa4826f8 <line:314:5, line:339:5>
                    (IfStmt 0xa481ba8 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0xa481ad0 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0xa481ac0 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0xa481a50 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0xa481a30 <col:11, col:28> '<bound member function type>' .size 0xa36a920
                              (ImplicitCastExpr 0xa481a70 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0xa481a18 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0xa481aa8 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0xa481a98 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0xa481a7c <col:39> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0xa481b80 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0xa481b70 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa481b58 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0xa481ae8 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0xa481b40 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0xa481b30 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0xa481b20 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0xa481b00 <col:47> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0xa481c20 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0xa481c10 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa481bf8 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0xa481bc4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                      (CharacterLiteral 0xa481be0 <col:17> 'char'101))
                    (BinaryOperator 0xa481c70 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0xa481c44 <col:7> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0xa481c60 <col:21> '_Bool' true))
                    (IfStmt 0xa4826d8 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0xa481d28 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0xa481cd0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
                        (UnaryOperator 0xa481ca0 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0xa481c88 <col:13> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
                        (DeclRefExpr 0xa481cb4 <col:22> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
                      (CompoundStmt 0xa482658 <line:323:9, line:333:9>
                        (BinaryOperator 0xa481d98 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0xa481d4c <col:4> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0xa481d80 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0xa481d64 <col:11> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
                        (DeclStmt 0xa482110 <line:325:4, col:58>
                          0xa481dc0 "const bool __plus =
                            (CXXOperatorCallExpr 0xa481ee0 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0xa481e80 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                              (DeclRefExpr 0xa481df4 <col:24> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0xa481e68 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0xa481e0c <col:31> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                                (DeclRefExpr 0xa481e44 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac50 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0xa482638 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0xa482538 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0xa482400 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0xa482260 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0xa482248 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0xa482120 <col:9> 'const _Bool' lvalue Var 0xa481dc0 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0xa482220 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0xa4821c0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                                    (DeclRefExpr 0xa482138 <col:19> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0xa4821a8 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa482150 <col:26> 'const _CharT *' lvalue Var 0xa47e320 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0xa482184 <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac10 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0xa4823e8 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0xa4823d0 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0xa4823b8 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0xa482290 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0xa482274 <col:13> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0xa482390 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0xa482330 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                                      (DeclRefExpr 0xa4822c4 <col:9> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0xa4822f8 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0xa4822dc <col:16> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0xa482520 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0xa482508 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0xa4824e0 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0xa482480 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                                  (DeclRefExpr 0xa482418 <col:13> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0xa482448 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0xa482430 <col:20> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0xa482608 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0xa4825f8 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa4825e0 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0xa482550 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0xa47d8e0 '__xtrc' 'string &')
                            (ConditionalOperator 0xa4825c0 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0xa4825b0 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0xa482568 <col:19> 'const _Bool' lvalue Var 0xa481dc0 '__plus' 'const _Bool'))
                              (CharacterLiteral 0xa482580 <col:28> 'char'43)
                              (CharacterLiteral 0xa482598 <col:34> 'char'45)))
                          (ContinueStmt 0xa482630 <line:332:6>)))
                      (CompoundStmt 0xa4826c0 <line:335:9, line:338:9>
                        (BinaryOperator 0xa4826a0 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0xa482674 <col:4> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0xa482690 <col:16> '_Bool' true))
                        (BreakStmt 0xa4826b8 <line:337:4>))))
                  (BreakStmt 0xa482718 <line:341:5>))))))
        (IfStmt 0xa482920 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa482858 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0xa482800 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (UnaryOperator 0xa4827d0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa4827b4 <col:12> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter'))
            (DeclRefExpr 0xa4827e4 <col:21> '_InIter' lvalue ParmVar 0xa47d7d0 '__end' '_InIter'))
          (BinaryOperator 0xa4828c8 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0xa48287c <col:8> 'char_type':'_CharT' lvalue Var 0xa47e3c0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa4828b0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa482894 <col:15> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))
          (BinaryOperator 0xa482908 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa4828e0 <col:8> '_Bool' lvalue Var 0xa47e430 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa4828f8 <col:20> '_Bool' true))))))
  (IfStmt 0xa482d70 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4829f8 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa4829c8 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0xa4829a4 <col:11, col:28> '<bound member function type>' .size 0xa36a920
          (ImplicitCastExpr 0xa4829e8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa48298c <col:11> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa482d58 <line:353:9, line:362:9>
      (IfStmt 0xa482b60 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0xa482a88 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0xa482a30 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa482a20 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa482a04 <col:9> '_Bool' lvalue Var 0xa47f6e0 '__found_dec' '_Bool')))
          (UnaryOperator 0xa482a70 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa482a60 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa482a44 <col:25> '_Bool' lvalue Var 0xa47f740 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0xa482b38 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0xa482b28 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa482b10 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0xa482aa0 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0xa482af8 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0xa482ae8 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0xa482ad8 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0xa482ab8 <col:44> 'int' lvalue Var 0xa47ef20 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0xa482d38 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0xa482ca0 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0xa482c78 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0xa482ba0 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa47d440 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa482bd8 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa482bc0 <col:39> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa482c28 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0xa482c0c <col:11> 'const __cache_type *' lvalue Var 0xa47e250 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa482c5c <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0xa47f7a0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa482d20 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa482cb4 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa47d890 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa482d10 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa482cec <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa482da8 <line:364:7, col:14>
    (DeclRefExpr 0xa482d8c <col:14> '_InIter' lvalue ParmVar 0xa47d790 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0xa488b48 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0xa483530 <line:374:9, col:57>
    0xa483500 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0xa4835b8 <line:375:2, col:33>
    0xa483550 "Using__gnu_cxx::;")
  (DeclStmt 0xa483740 <line:376:2, col:66>
    0xa483710 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa483830 <line:377:2, col:67>
    0xa483800 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa483938 <line:378:2, col:32>
    0xa483900 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa483a00 <line:379:2, col:40>
    0xa483960 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa4839d0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa4839ac <col:24, col:29> '<bound member function type>' ._M_getloc 0xa3da7b0
          (ImplicitCastExpr 0xa4839f0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa483994 <col:24> 'class std::ios_base' lvalue ParmVar 0xa4831b0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa483ac8 <line:380:2, col:40>
    0xa483a40 "const __cache_type *__lc =
      (CallExpr 0xa483aa8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa483a74 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa483900 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa483a8c <col:34> 'const class std::locale' lvalue Var 0xa483960 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa483b98 <line:381:2, col:41>
    0xa483b10 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa483b60 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa483b44 <col:24> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa483c08 <line:382:2, col:29>
    0xa483bb0 "char_type __c =
      (CXXUnresolvedConstructExpr 0xa483bf0 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0xa483df0 <line:385:2, line:386:62>
    0xa483c70 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa483dc8 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa483db8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa483da0 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa483d20 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa483cfc <col:41, col:46> '<bound member function type>' .flags 0xa3d9db0
            (ImplicitCastExpr 0xa483d40 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa483ca4 <col:41> 'class std::ios_base' lvalue ParmVar 0xa4831b0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa483d90 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa483d6c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa483f60 <line:387:2, col:49>
    0xa483e10 "const bool __oct =
      (BinaryOperator 0xa483ee0 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0xa483ec0 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa483ea0 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa483e44 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa483c70 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa483ed0 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa483eb0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa483e7c <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0xa484160 <line:388:2, col:67>
    0xa483f80 "int __base =
      (ConditionalOperator 0xa484110 <col:15, col:66> 'int'
        (ImplicitCastExpr 0xa484100 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa483fb4 <col:15> 'const _Bool' lvalue Var 0xa483e10 '__oct' 'const _Bool'))
        (IntegerLiteral 0xa483fd0 <col:23> 'int' 8)
        (ParenExpr 0xa4840e8 <col:27, col:66> 'int'
          (ConditionalOperator 0xa4840c8 <col:28, col:64> 'int'
            (BinaryOperator 0xa484080 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0xa484060 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa484040 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa483fe8 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa483c70 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0xa484070 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa484050 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa48401c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0xa484098 <col:59> 'int' 16)
            (IntegerLiteral 0xa4840b0 <col:64> 'int' 10))))")
  (DeclStmt 0xa484270 <line:391:2, col:33>
    0xa484180 "bool __testeof =
      (CXXOperatorCallExpr 0xa484248 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa4841e8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
        (DeclRefExpr 0xa4841b4 <col:19> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')
        (DeclRefExpr 0xa4841cc <col:28> '_InIter' lvalue ParmVar 0xa483160 '__end' '_InIter'))")
  (DeclStmt 0xa4842d8 <line:394:2, col:25>
    0xa484290 "bool __negative =
      (CXXBoolLiteralExpr 0xa4842c8 <col:20> '_Bool' false)")
  (IfStmt 0xa484ad8 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0xa484310 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa484300 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa4842e8 <col:7> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')))
    (CompoundStmt 0xa484ab8 <line:396:4, line:408:4>
      (BinaryOperator 0xa484370 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa484324 <col:6> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0xa484358 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa48433c <col:13> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))
      (BinaryOperator 0xa4844b0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa484388 <col:6> '_Bool' lvalue Var 0xa484290 '__negative' '_Bool')
        (CXXOperatorCallExpr 0xa484488 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa484428 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
          (DeclRefExpr 0xa4843a0 <col:19> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0xa484410 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0xa4843b8 <col:26> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
            (DeclRefExpr 0xa4843ec <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac10 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0xa484a98 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0xa4848e0 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0xa4847a8 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0xa484608 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0xa4845f0 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0xa4844c8 <col:11> '_Bool' lvalue Var 0xa484290 '__negative' '_Bool')
                (CXXOperatorCallExpr 0xa4845c8 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0xa484568 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (DeclRefExpr 0xa4844e0 <col:25> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0xa484550 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4844f8 <col:32> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
                    (DeclRefExpr 0xa48452c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac50 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0xa484790 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0xa484778 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0xa484760 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0xa484638 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa48461c <col:8> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0xa484738 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa4846d8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                    (DeclRefExpr 0xa48466c <col:33> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0xa4846a0 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa484684 <col:40> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0xa4848c8 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0xa4848b0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0xa484888 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0xa484828 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa4847c0 <col:8> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa4847f0 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4847d8 <col:15> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0xa484a80 <line:402:8, line:407:8>
          (IfStmt 0xa484a60 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa484998 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0xa484940 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
              (UnaryOperator 0xa484910 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0xa4848f8 <col:9> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter'))
              (DeclRefExpr 0xa484924 <col:18> '_InIter' lvalue ParmVar 0xa483160 '__end' '_InIter'))
            (BinaryOperator 0xa484a08 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0xa4849bc <col:5> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0xa4849f0 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa4849d4 <col:12> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))
            (BinaryOperator 0xa484a48 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0xa484a20 <col:5> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0xa484a38 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0xa484b48 <line:412:2, col:27>
    0xa484b00 "bool __found_zero =
      (CXXBoolLiteralExpr 0xa484b38 <col:22> '_Bool' false)")
  (DeclStmt 0xa484bc0 <line:413:2, col:19>
    0xa484b70 "int __sep_pos =
      (IntegerLiteral 0xa484ba8 <col:18> 'int' 0)")
  (WhileStmt 0xa4859b0 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0xa484bf8 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa484be8 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa484bd0 <col:10> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')))
    (CompoundStmt 0xa485998 <line:415:4, line:454:4>
      (IfStmt 0xa485770 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0xa484e70 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0xa484d68 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0xa484d50 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0xa484c28 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0xa484c0c <col:11> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0xa484d28 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0xa484cc8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa484c5c <col:36> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0xa484c90 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0xa484c74 <col:43> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0xa484e48 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0xa484de8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (DeclRefExpr 0xa484d7c <col:6> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0xa484db0 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa484d94 <col:13> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))))
        (BreakStmt 0xa484e88 <line:418:8>)
        (IfStmt 0xa485750 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0xa485068 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0xa484f78 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0xa484f18 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa484e90 <col:15> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0xa484f00 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0xa484ea8 <col:22> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa484edc <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0xa485050 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0xa485038 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0xa484fc8 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa484fb8 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa484f9c <col:13> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool')))
                (BinaryOperator 0xa485020 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0xa485010 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa484fdc <col:29> 'int' lvalue Var 0xa483f80 '__base' 'int'))
                  (IntegerLiteral 0xa484ff8 <col:39> 'int' 10)))))
          (CompoundStmt 0xa485280 <line:421:8, line:428:8>
            (BinaryOperator 0xa4850a8 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0xa485080 <col:3> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0xa485098 <col:18> '_Bool' true))
            (UnaryOperator 0xa4850d8 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa4850c0 <col:5> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int'))
            (IfStmt 0xa4851a0 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0xa485140 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0xa485130 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa485120 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0xa4850ec <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa483c70 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0xa485108 <col:22> 'int' 0))
              (BinaryOperator 0xa485188 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0xa485158 <col:5> 'int' lvalue Var 0xa483f80 '__base' 'int')
                (IntegerLiteral 0xa485170 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0xa485260 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0xa485200 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0xa4851f0 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa4851bc <col:7> 'int' lvalue Var 0xa483f80 '__base' 'int'))
                (IntegerLiteral 0xa4851d8 <col:17> 'int' 8))
              (BinaryOperator 0xa485248 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0xa485218 <col:5> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')
                (IntegerLiteral 0xa485230 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0xa485730 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0xa485508 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0xa4852a0 <line:429:15> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool')
              (ParenExpr 0xa4854f0 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0xa4854d8 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0xa4853a0 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0xa485340 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                    (DeclRefExpr 0xa4852b8 <col:12> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa485328 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa4852d0 <col:19> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa485304 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ac90 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0xa4854b0 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa485450 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                    (DeclRefExpr 0xa4853c4 <col:8> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0xa485438 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0xa4853dc <col:15> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
                      (DeclRefExpr 0xa485414 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45acd0 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0xa485710 <line:432:8, line:442:8>
              (IfStmt 0xa4855d0 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0xa485570 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0xa485560 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa485550 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa485520 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa483c70 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0xa485538 <col:22> 'int' 0))
                (BinaryOperator 0xa4855b8 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0xa485588 <col:5> 'int' lvalue Var 0xa483f80 '__base' 'int')
                  (IntegerLiteral 0xa4855a0 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0xa4856f0 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0xa485630 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0xa485620 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa4855ec <col:7> 'int' lvalue Var 0xa483f80 '__base' 'int'))
                  (IntegerLiteral 0xa485608 <col:17> 'int' 16))
                (CompoundStmt 0xa4856d0 <line:436:5, line:439:5>
                  (BinaryOperator 0xa485670 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0xa485648 <col:7> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0xa485660 <col:22> '_Bool' false))
                  (BinaryOperator 0xa4856b8 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0xa485688 <col:7> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')
                    (IntegerLiteral 0xa4856a0 <col:19> 'int' 0)))
                (BreakStmt 0xa4856e8 <line:441:5>)))
            (BreakStmt 0xa485728 <line:444:8>))))
      (IfStmt 0xa485978 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa485830 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa4857d8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (UnaryOperator 0xa4857a8 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa48578c <col:12> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter'))
          (DeclRefExpr 0xa4857bc <col:21> '_InIter' lvalue ParmVar 0xa483160 '__end' '_InIter'))
        (CompoundStmt 0xa485920 <line:447:8, line:451:8>
          (BinaryOperator 0xa4858a0 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa485854 <col:3> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa485888 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa48586c <col:10> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))
          (IfStmt 0xa485900 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0xa4858e0 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa4858d0 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa4858b8 <col:8> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool')))
            (BreakStmt 0xa4858f8 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0xa485960 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa485938 <col:8> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0xa485950 <col:20> '_Bool' true)))))
  (DeclStmt 0xa485b88 <line:458:2, line:459:42>
    0xa4859d0 "const size_t __len =
      (ImplicitCastExpr 0xa485b78 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0xa485b60 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0xa485b40 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0xa485a48 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0xa485a38 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0xa485a04 <col:24> 'int' lvalue Var 0xa483f80 '__base' 'int'))
              (IntegerLiteral 0xa485a20 <col:34> 'int' 16))
            (BinaryOperator 0xa485b00 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0xa485ae0 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0xa485a7c <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ae60 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0xa485af0 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa485abc <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0xa485b30 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0xa485b18 <col:35> 'int' lvalue Var 0xa483f80 '__base' 'int')))))")
  (DeclStmt 0xa485bf8 <line:462:2, col:25>
    0xa485ba0 "string __found_grouping =
      (CXXConstructExpr 0xa485bd8 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0xa485cd8 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa485c20 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa485c08 <col:6> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0xa485ca8 <line:464:4, col:31> 'void'
      (MemberExpr 0xa485c6c <col:4, col:21> '<bound member function type>' .reserve 0xa36b460
        (DeclRefExpr 0xa485c54 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0xa485cc8 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa485c90 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0xa485d48 <line:465:2, col:25>
    0xa485d00 "bool __testfail =
      (CXXBoolLiteralExpr 0xa485d38 <col:20> '_Bool' false)")
  (DeclStmt 0xa485da8 <line:466:2, col:29>
    0xa485d60 "bool __testoverflow =
      (CXXBoolLiteralExpr 0xa485d98 <col:24> '_Bool' false)")
  (DeclStmt 0xa486728 <line:467:2, line:470:49>
    0xa485de0 "const __unsigned_type __max =
      (ConditionalOperator 0xa486708 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0xa485f70 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0xa485f58 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0xa485e14 <col:5> '_Bool' lvalue Var 0xa484290 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa485f20 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0xa4860b0 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa486078 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CXXDependentScopeMemberExpr 0xa486040 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0xa4866d0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0xa4867c0 <line:471:2, col:47>
    0xa486740 "const __unsigned_type __smax =
      (BinaryOperator 0xa4867a8 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0xa486774 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa485de0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa48678c <col:41> 'int' lvalue Var 0xa483f80 '__base' 'int'))")
  (DeclStmt 0xa486830 <line:472:2, col:30>
    0xa4867e0 "__unsigned_type __result =
      (IntegerLiteral 0xa486818 <col:29> 'int' 0)")
  (DeclStmt 0xa4868a0 <line:473:2, col:17>
    0xa486850 "int __digit =
      (IntegerLiteral 0xa486888 <col:16> 'int' 0)")
  (DeclStmt 0xa4869c0 <line:474:2, col:60>
    0xa4868c0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0xa486998 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa486950 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (DeclRefExpr 0xa4868f4 <col:32> 'const _CharT *' lvalue Var 0xa483b10 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa48692c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0xa45ad10 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0xa487e98 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0xa486a20 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0xa4869e8 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0xa4869d0 <col:7> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *')))
    (WhileStmt 0xa487130 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0xa486a60 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa486a50 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa486a34 <col:12> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')))
      (CompoundStmt 0xa487110 <line:479:6, line:498:6>
        (BinaryOperator 0xa486b50 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0xa486a74 <col:8> 'int' lvalue Var 0xa486850 '__digit' 'int')
          (CallExpr 0xa486b28 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0xa486aa0 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa486ae0 <col:26> 'const char_type *' lvalue Var 0xa4868c0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0xa486af8 <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa4859d0 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0xa486b10 <col:45> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')))
        (IfStmt 0xa486be0 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0xa486bc0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0xa486bb0 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0xa486b68 <col:12> 'int' lvalue Var 0xa486850 '__digit' 'int'))
            (UnaryOperator 0xa486b98 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0xa486b80 <col:24> 'int' 1)))
          (BreakStmt 0xa486bd8 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0xa486f68 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa486c78 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa486c30 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa486bfc <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0xa486c14 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa486740 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0xa486cc8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0xa486c9c <col:3> '_Bool' lvalue Var 0xa485d60 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0xa486cb8 <col:20> '_Bool' true))
          (CompoundStmt 0xa486f48 <line:487:3, line:492:3>
            (CompoundAssignOperator 0xa486d10 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa486ce0 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa486cf8 <col:17> 'int' lvalue Var 0xa483f80 '__base' 'int'))
            (CXXOperatorCallExpr 0xa486ea0 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0xa486e60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3ce860 0xa3d1ef0 0xa3d3160)
              (DeclRefExpr 0xa486d30 <col:5> '_Bool' lvalue Var 0xa485d60 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0xa486e38 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa486df0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
                (DeclRefExpr 0xa486d48 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0xa486dc8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa486d90 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (DeclRefExpr 0xa486d60 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa485de0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa486d78 <col:42> 'int' lvalue Var 0xa486850 '__digit' 'int'))))
            (CompoundAssignOperator 0xa486ef8 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa486ec4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0xa486edc <col:17> 'int' lvalue Var 0xa486850 '__digit' 'int'))
            (UnaryOperator 0xa486f30 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa486f18 <col:7> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int'))))
        (IfStmt 0xa4870f0 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa487028 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa486fd0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (UnaryOperator 0xa486fa0 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa486f84 <col:14> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter'))
            (DeclRefExpr 0xa486fb4 <col:23> '_InIter' lvalue ParmVar 0xa483160 '__end' '_InIter'))
          (BinaryOperator 0xa487098 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa48704c <col:3> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa487080 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa487064 <col:10> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))
          (BinaryOperator 0xa4870d8 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa4870b0 <col:3> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa4870c8 <col:15> '_Bool' true)))))
    (WhileStmt 0xa487e80 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0xa487170 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa487160 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa487144 <col:12> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')))
      (CompoundStmt 0xa487e68 <line:501:6, line:546:6>
        (IfStmt 0xa487cc0 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0xa4872c8 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0xa4871a0 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0xa487184 <col:12> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0xa4872a0 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa487240 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa4871d4 <col:37> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa487208 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa4871ec <col:44> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0xa4874b8 <line:505:3, line:518:3>
            (IfStmt 0xa487498 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0xa487308 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa4872f8 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa4872e0 <col:9> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')))
              (CompoundStmt 0xa487420 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0xa4873b0 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0xa4873a0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa487388 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0xa487314 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0xa487370 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0xa487360 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0xa487350 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa48732c <col:47> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')))))
                (BinaryOperator 0xa487408 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0xa4873d4 <col:9> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')
                  (IntegerLiteral 0xa4873f0 <col:21> 'int' 0)))
              (CompoundStmt 0xa487480 <line:514:7, line:517:7>
                (BinaryOperator 0xa487460 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0xa487438 <col:9> '_Bool' lvalue Var 0xa485d00 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0xa487450 <col:22> '_Bool' true))
                (BreakStmt 0xa487478 <line:516:9>))))
          (IfStmt 0xa487ca0 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa487598 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0xa487538 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa4874cc <col:17> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0xa487500 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0xa4874e4 <col:24> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *')))
            (BreakStmt 0xa4875c0 <line:520:3>)
            (CompoundStmt 0xa487c78 <line:522:3, line:540:3>
              (DeclStmt 0xa487700 <line:523:5, line:524:50>
                0xa4875e0 "const char_type *__q =
                  (CallExpr 0xa4876d8 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa487658 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa48768c <col:27> 'const char_type *' lvalue Var 0xa4868c0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0xa4876a4 <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa4859d0 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0xa4876bc <col:46> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0xa487748 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0xa487728 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa487710 <col:10> 'const char_type *' lvalue Var 0xa4875e0 '__q' 'const char_type *'))
                (BreakStmt 0xa487740 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0xa487810 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0xa487764 <col:5> 'int' lvalue Var 0xa486850 '__digit' 'int')
                (CXXOperatorCallExpr 0xa4877e8 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4877b0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (DeclRefExpr 0xa48777c <col:15> 'const char_type *' lvalue Var 0xa4875e0 '__q' 'const char_type *')
                  (DeclRefExpr 0xa487794 <col:21> 'const char_type *' lvalue Var 0xa4868c0 '__lit_zero' 'const char_type *')))
              (IfStmt 0xa4878d0 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0xa487868 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0xa487858 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa487828 <col:9> 'int' lvalue Var 0xa486850 '__digit' 'int'))
                  (IntegerLiteral 0xa487840 <col:19> 'int' 15))
                (CompoundAssignOperator 0xa4878b0 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0xa487880 <col:7> 'int' lvalue Var 0xa486850 '__digit' 'int')
                  (IntegerLiteral 0xa487898 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0xa487c58 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa487968 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0xa487920 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
                  (DeclRefExpr 0xa4878ec <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0xa487904 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa486740 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0xa4879b8 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0xa48798c <col:7> '_Bool' lvalue Var 0xa485d60 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0xa4879a8 <col:24> '_Bool' true))
                (CompoundStmt 0xa487c38 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0xa487a00 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa4879d0 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa4879e8 <col:21> 'int' lvalue Var 0xa483f80 '__base' 'int'))
                  (CXXOperatorCallExpr 0xa487b90 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0xa487b50 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3ce860 0xa3d1ef0 0xa3d3160)
                    (DeclRefExpr 0xa487a20 <col:9> '_Bool' lvalue Var 0xa485d60 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0xa487b28 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0xa487ae0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
                      (DeclRefExpr 0xa487a38 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0xa487ab8 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0xa487a80 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                        (DeclRefExpr 0xa487a50 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa485de0 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0xa487a68 <col:46> 'int' lvalue Var 0xa486850 '__digit' 'int'))))
                  (CompoundAssignOperator 0xa487be8 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0xa487bb4 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0xa487bcc <col:21> 'int' lvalue Var 0xa486850 '__digit' 'int'))
                  (UnaryOperator 0xa487c20 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0xa487c08 <col:11> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')))))))
        (IfStmt 0xa487e48 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa487d80 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa487d28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (UnaryOperator 0xa487cf8 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0xa487cdc <col:14> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter'))
            (DeclRefExpr 0xa487d0c <col:23> '_InIter' lvalue ParmVar 0xa483160 '__end' '_InIter'))
          (BinaryOperator 0xa487df0 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0xa487da4 <col:3> 'char_type':'_CharT' lvalue Var 0xa483bb0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0xa487dd8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa487dbc <col:10> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))
          (BinaryOperator 0xa487e30 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0xa487e08 <col:3> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0xa487e20 <col:15> '_Bool' true))))))
  (IfStmt 0xa4881d8 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa487f20 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0xa487ef0 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0xa487ecc <col:6, col:23> '<bound member function type>' .size 0xa36a920
          (ImplicitCastExpr 0xa487f10 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0xa487eb4 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0xa4881c0 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0xa487fc8 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0xa487fb8 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa487fa0 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0xa36c8a0 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0xa487f2c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0xa487f88 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa487f78 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa487f68 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0xa487f44 <col:44> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int')))))
      (IfStmt 0xa4881a0 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0xa488108 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0xa4880e0 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0xa488004 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0xa47d440 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0xa488040 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0xa488024 <col:34> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa488090 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0xa488074 <col:6> 'const __cache_type *' lvalue Var 0xa483a40 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0xa4880c4 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0xa488188 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa48811c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa483220 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa488178 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa488154 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa4889e8 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0xa488388 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0xa488348 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0xa488330 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0xa488288 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0xa488230 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa488220 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa488210 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa4881f4 <col:8> 'int' lvalue Var 0xa484b70 '__sep_pos' 'int'))))
            (UnaryOperator 0xa488270 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa488260 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa488244 <col:22> '_Bool' lvalue Var 0xa484b00 '__found_zero' '_Bool'))))
          (UnaryOperator 0xa488318 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa488308 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0xa4882d8 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0xa4882b8 <col:39, col:56> '<bound member function type>' .size 0xa36a920
                  (ImplicitCastExpr 0xa4882f8 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0xa4882a0 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0xa485ba0 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0xa488378 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa48835c <col:9> '_Bool' lvalue Var 0xa485d00 '__testfail' '_Bool')))
    (CompoundStmt 0xa488468 <line:565:4, line:568:4>
      (BinaryOperator 0xa4883d0 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0xa4883a0 <col:6> '_ValueT' lvalue ParmVar 0xa483290 '__v' '_ValueT &')
        (IntegerLiteral 0xa4883b8 <col:12> 'int' 0))
      (BinaryOperator 0xa488450 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0xa4883e8 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa483220 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0xa488440 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa48841c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0xa4889c8 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0xa488498 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa488480 <col:11> '_Bool' lvalue Var 0xa485d60 '__testoverflow' '_Bool'))
      (CompoundStmt 0xa4888b0 <line:570:4, line:577:4>
        (IfStmt 0xa488810 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0xa4885b8 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0xa4884a4 <line:571:10> '_Bool' lvalue Var 0xa484290 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0xa488580 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0xa4886d8 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa4885d0 <col:8> '_ValueT' lvalue ParmVar 0xa483290 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa4886a0 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0xa4887f8 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0xa4886f0 <col:8> '_ValueT' lvalue ParmVar 0xa483290 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0xa4887c0 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0xa488898 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0xa48882c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa483220 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0xa488888 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa488864 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0xa4889b0 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0xa4888c8 <col:4> '_ValueT' lvalue ParmVar 0xa483290 '__v' '_ValueT &')
        (ConditionalOperator 0xa488990 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0xa488980 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa4888e0 <col:10> '_Bool' lvalue Var 0xa484290 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0xa488948 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa488910 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa4888f8 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0xa488968 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa4867e0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0xa488b00 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0xa488a20 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa488a04 <col:6> '_Bool' lvalue Var 0xa484180 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0xa488ad8 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa488ac8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa488a98 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa488a2c <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa483220 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa488a88 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa488a64 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa488b38 <line:583:2, col:9>
    (DeclRefExpr 0xa488b1c <col:9> '_InIter' lvalue ParmVar 0xa483120 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0xa48c768 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0xa48c720 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0xa489298 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa489288 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0xa489270 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa489248 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa489238 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa489220 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0xa4891a0 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0xa48917c <col:13, col:18> '<bound member function type>' .flags 0xa3d9db0
                (ImplicitCastExpr 0xa4891c0 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0xa489124 <col:13> 'class std::ios_base' lvalue ParmVar 0xa488f10 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0xa489210 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa4891ec <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4080 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0xa489870 <line:595:9, line:612:9>
      (DeclStmt 0xa489338 <line:599:4, col:17>
        0xa4892c0 "long __l =
          (ImplicitCastExpr 0xa489328 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0xa489310 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0xa4892f8 <col:16> 'int' 1)))")
      (BinaryOperator 0xa489458 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0xa489348 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter')
        (CallExpr 0xa489428 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0xa489370 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa4893ac <col:34> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0xa4893c4 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0xa488ec0 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0xa4893dc <col:48> 'class std::ios_base' lvalue ParmVar 0xa488f10 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa4893f4 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0xa48940c <col:61> 'long' lvalue Var 0xa4892c0 '__l' 'long')))
      (IfStmt 0xa489850 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0xa489540 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0xa4894c0 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0xa4894a0 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0xa489470 <col:8> 'long' lvalue Var 0xa4892c0 '__l' 'long'))
            (ImplicitCastExpr 0xa4894b0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0xa489488 <col:15> 'int' 0)))
          (BinaryOperator 0xa489528 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0xa489508 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0xa4894d8 <col:20> 'long' lvalue Var 0xa4892c0 '__l' 'long'))
            (ImplicitCastExpr 0xa489518 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0xa4894f0 <col:27> 'int' 1))))
        (BinaryOperator 0xa4895c8 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0xa489558 <col:6> '_Bool' lvalue ParmVar 0xa488fd0 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0xa4895b0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0xa4895a0 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0xa489590 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0xa489578 <col:17> 'long' lvalue Var 0xa4892c0 '__l' 'long')))))
        (CompoundStmt 0xa489830 <line:604:6, line:611:6>
          (BinaryOperator 0xa489608 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa4895e0 <col:8> '_Bool' lvalue ParmVar 0xa488fd0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa4895f8 <col:14> '_Bool' true))
          (BinaryOperator 0xa489688 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0xa489620 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0xa489678 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0xa489654 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0xa489810 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa489730 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa4896d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa4896a0 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa4896b8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa488ec0 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0xa4897e8 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4897d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4897c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa489754 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa4897b0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa48978c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0xa48c6e0 <line:614:9, line:680:2>
      (DeclStmt 0xa489970 <line:616:4, col:50>
        0xa489940 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa489a78 <line:617:4, col:34>
        0xa489a40 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa489b40 <line:618:4, col:42>
        0xa489aa0 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa489b10 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa489aec <col:26, col:31> '<bound member function type>' ._M_getloc 0xa3da7b0
              (ImplicitCastExpr 0xa489b30 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa489ad4 <col:26> 'class std::ios_base' lvalue ParmVar 0xa488f10 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa489c08 <line:619:4, col:42>
        0xa489b80 "const __cache_type *__lc =
          (CallExpr 0xa489be8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa489bb4 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa489a40 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa489bcc <col:36> 'const class std::locale' lvalue Var 0xa489aa0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa489c68 <line:621:4, col:23>
        0xa489c20 "bool __testf =
          (CXXBoolLiteralExpr 0xa489c58 <col:19> '_Bool' true)")
      (DeclStmt 0xa489cc8 <line:622:4, col:23>
        0xa489c80 "bool __testt =
          (CXXBoolLiteralExpr 0xa489cb8 <col:19> '_Bool' true)")
      (DeclStmt 0xa489e08 <line:623:4, col:47>
        0xa489ce0 "bool __donef =
          (CXXOperatorCallExpr 0xa489de0 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0xa489d80 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CXXDependentScopeMemberExpr 0xa489d30 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa489d14 <col:19> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa489d68 <col:46> 'int' 0))")
      (DeclStmt 0xa489f48 <line:624:4, col:46>
        0xa489e20 "bool __donet =
          (CXXOperatorCallExpr 0xa489f20 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa489ec0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CXXDependentScopeMemberExpr 0xa489e70 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0xa489e54 <col:19> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0xa489ea8 <col:45> 'int' 0))")
      (DeclStmt 0xa489fa8 <line:625:4, col:26>
        0xa489f60 "bool __testeof =
          (CXXBoolLiteralExpr 0xa489f98 <col:21> '_Bool' false)")
      (DeclStmt 0xa48a020 <line:626:4, col:18>
        0xa489fc0 "size_t __n =
          (ImplicitCastExpr 0xa48a010 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa489ff8 <col:17> 'int' 0))")
      (WhileStmt 0xa48bd88 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0xa48a0b0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0xa48a058 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa48a048 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa48a030 <col:12> '_Bool' lvalue Var 0xa489ce0 '__donef' '_Bool')))
          (UnaryOperator 0xa48a098 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa48a088 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa48a06c <col:24> '_Bool' lvalue Var 0xa489e20 '__donet' '_Bool'))))
        (CompoundStmt 0xa48bd48 <line:628:6, line:657:6>
          (IfStmt 0xa48a1e0 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa48a158 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0xa48a0f8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa48a0c8 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0xa48a0e0 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0xa488ec0 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0xa48a1c8 <line:630:3, line:633:3>
              (BinaryOperator 0xa48a1a8 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0xa48a17c <col:5> '_Bool' lvalue Var 0xa489f60 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0xa48a198 <col:17> '_Bool' true))
              (BreakStmt 0xa48a1c0 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0xa48a278 <line:635:8, col:36>
            0xa48a210 "const char_type __c =
              (UnaryOperator 0xa48a260 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0xa48a244 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0xa48a418 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0xa48a2b0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa48a2a0 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa48a288 <col:13> '_Bool' lvalue Var 0xa489ce0 '__donef' '_Bool')))
            (BinaryOperator 0xa48a400 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0xa48a2c4 <col:3> '_Bool' lvalue Var 0xa489c20 '__testf' '_Bool')
              (CXXOperatorCallExpr 0xa48a3d8 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0xa48a378 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa48a2dc <col:13> 'const char_type':'const _CharT' lvalue Var 0xa48a210 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa48a360 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa48a310 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa48a2f4 <col:20> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa48a344 <col:39> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa48a4c0 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0xa48a4a0 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa48a460 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48a450 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48a434 <col:13> '_Bool' lvalue Var 0xa489c20 '__testf' '_Bool')))
              (ImplicitCastExpr 0xa48a490 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa48a474 <col:24> '_Bool' lvalue Var 0xa489e20 '__donet' '_Bool')))
            (BreakStmt 0xa48a4b8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0xa48b8a0 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0xa48a508 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0xa48a4f8 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa48a4dc <col:13> '_Bool' lvalue Var 0xa489e20 '__donet' '_Bool')))
            (BinaryOperator 0xa48b888 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0xa48a51c <col:3> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa48b860 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0xa48a5d0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa48a534 <col:13> 'const char_type':'const _CharT' lvalue Var 0xa48a210 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0xa48a5b8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa48a568 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa48a54c <col:20> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0xa48a59c <col:38> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0xa48b948 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0xa48b928 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0xa48b8e8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48b8d8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48b8bc <col:13> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')))
              (ImplicitCastExpr 0xa48b918 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa48b8fc <col:24> '_Bool' lvalue Var 0xa489ce0 '__donef' '_Bool')))
            (BreakStmt 0xa48b940 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0xa48ba08 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0xa48b9e8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0xa48b990 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48b980 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48b964 <col:13> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')))
              (UnaryOperator 0xa48b9d0 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48b9c0 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48b9a4 <col:25> '_Bool' lvalue Var 0xa489c20 '__testf' '_Bool'))))
            (BreakStmt 0xa48ba00 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0xa48ba40 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0xa48ba24 <col:10> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0xa48ba70 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa48ba54 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0xa48bbd0 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa48ba84 <col:8> '_Bool' lvalue Var 0xa489ce0 '__donef' '_Bool')
            (BinaryOperator 0xa48bbb8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa48bac8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48bab8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48ba9c <col:19> '_Bool' lvalue Var 0xa489c20 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0xa48bb90 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa48bb48 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
                (DeclRefExpr 0xa48badc <col:30> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa48bb10 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa48baf4 <col:37> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0xa48bd30 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0xa48bbe8 <col:8> '_Bool' lvalue Var 0xa489e20 '__donet' '_Bool')
            (BinaryOperator 0xa48bd18 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0xa48bc28 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa48bc18 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa48bc00 <col:19> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0xa48bcf0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa48bca8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
                (DeclRefExpr 0xa48bc3c <col:30> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa48bc70 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa48bc54 <col:37> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *')))))))
      (IfStmt 0xa48c6c0 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0xa48bed8 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0xa48bea8 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0xa48bd9c <col:8> '_Bool' lvalue Var 0xa489c20 '__testf' '_Bool')
            (CXXOperatorCallExpr 0xa48be80 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0xa48be20 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa48bdb4 <col:19> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0xa48bde8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0xa48bdcc <col:26> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0xa48bec0 <col:53> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0xa48c1f8 <line:659:6, line:665:6>
          (BinaryOperator 0xa48bf18 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0xa48bef0 <col:8> '_Bool' lvalue ParmVar 0xa488fd0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0xa48bf08 <col:14> '_Bool' false))
          (IfStmt 0xa48c1d8 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0xa48c038 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0xa48bf30 <col:12> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa48c010 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0xa48bfb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa48bf48 <col:23> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa48bf78 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa48bf60 <col:30> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0xa48c0b8 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa48c050 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa48c0a8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa48c084 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa48c1c0 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa48c0d0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa48c1b0 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa48c190 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa48c180 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa48c0e8 <col:11> '_Bool' lvalue Var 0xa489f60 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa48c11c <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa48c15c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0xa48c6a0 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0xa48c348 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0xa48c318 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0xa48c210 <col:13> '_Bool' lvalue Var 0xa489c80 '__testt' '_Bool')
              (CXXOperatorCallExpr 0xa48c2f0 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0xa48c290 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (DeclRefExpr 0xa48c228 <col:24> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0xa48c258 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0xa48c240 <col:31> 'const __cache_type *' lvalue Var 0xa489b80 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0xa48c330 <col:57> 'size_t':'unsigned int' lvalue Var 0xa489fc0 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0xa48c4a8 <line:667:6, line:670:6>
            (BinaryOperator 0xa48c388 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa48c360 <col:8> '_Bool' lvalue ParmVar 0xa488fd0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa48c378 <col:14> '_Bool' true))
            (BinaryOperator 0xa48c490 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa48c3a0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa48c480 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0xa48c460 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa48c450 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa48c3b8 <col:16> '_Bool' lvalue Var 0xa489f60 '__testeof' '_Bool'))
                  (DeclRefExpr 0xa48c3ec <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0xa48c42c <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0xa48c680 <line:672:6, line:679:6>
            (BinaryOperator 0xa48c4e8 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0xa48c4c0 <col:8> '_Bool' lvalue ParmVar 0xa488fd0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0xa48c4d8 <col:14> '_Bool' false))
            (BinaryOperator 0xa48c568 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0xa48c500 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0xa48c558 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa48c534 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa48c660 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0xa48c598 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa48c580 <col:12> '_Bool' lvalue Var 0xa489f60 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0xa48c638 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa48c628 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa48c610 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa48c5a4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa488f80 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0xa48c600 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa48c5dc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0xa48c758 <line:681:7, col:14>
    (DeclRefExpr 0xa48c73c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa488e80 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0xa48d2a0 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0xa48cd28 <line:690:7, col:20>
    0xa48ccd0 "string __xtrc =
      (CXXConstructExpr 0xa48cd08 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa48cd88 <line:691:7, col:24> 'void'
    (MemberExpr 0xa48cd50 <col:7, col:14> '<bound member function type>' .reserve 0xa36b460
      (DeclRefExpr 0xa48cd38 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa48ccd0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa48cda8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa48cd70 <col:22> 'int' 32)))
  (BinaryOperator 0xa48cea8 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa48cdb4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca20 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa48ce78 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa48cde0 <col:15> '<bound member function type>' ->_M_extract_float 0xa47d990
        (CXXThisExpr 0xa48cdd0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa48ce00 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca20 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48ce18 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca60 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48ce30 <col:46> 'class std::ios_base' lvalue ParmVar 0xa48cab0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa48ce48 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48cb20 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa48ce60 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa48ccd0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa48d0a8 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0xa48d098 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa48d030 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa4414e0 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa4412b0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa48cf58 <col:27, col:40> 'const char *'
      (MemberExpr 0xa48cf34 <col:27, col:34> '<bound member function type>' .c_str 0xa37b280
        (ImplicitCastExpr 0xa48cf78 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa48cf1c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa48ccd0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa48cf84 <col:43> 'float' lvalue ParmVar 0xa48cb70 '__v' 'float &')
    (DeclRefExpr 0xa48cf9c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48cb20 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa48d0d8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa48cfe0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa48cfd0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa48cfb4 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa48d258 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa48d178 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa48d118 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
      (DeclRefExpr 0xa48d0e4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca20 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48d0fc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca60 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa48d230 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa48d220 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa48d208 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa48d19c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48cb20 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa48d1f8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa48d1d4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa48d290 <line:696:7, col:14>
    (DeclRefExpr 0xa48d274 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa48ca20 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0xa48ddf0 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0xa48d878 <line:705:7, col:20>
    0xa48d820 "string __xtrc =
      (CXXConstructExpr 0xa48d858 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa48d8d8 <line:706:7, col:24> 'void'
    (MemberExpr 0xa48d8a0 <col:7, col:14> '<bound member function type>' .reserve 0xa36b460
      (DeclRefExpr 0xa48d888 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa48d820 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa48d8f8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa48d8c0 <col:22> 'int' 32)))
  (BinaryOperator 0xa48d9f8 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa48d904 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa48d570 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa48d9c8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa48d930 <col:15> '<bound member function type>' ->_M_extract_float 0xa47d990
        (CXXThisExpr 0xa48d920 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa48d950 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa48d570 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48d968 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa48d5b0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48d980 <col:46> 'class std::ios_base' lvalue ParmVar 0xa48d600 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa48d998 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48d670 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa48d9b0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa48d820 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa48dbf8 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0xa48dbe8 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa48db80 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa441a60 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa4412b0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa48daa8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa48da84 <col:27, col:34> '<bound member function type>' .c_str 0xa37b280
        (ImplicitCastExpr 0xa48dac8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa48da6c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa48d820 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa48dad4 <col:43> 'double' lvalue ParmVar 0xa48d6c0 '__v' 'double &')
    (DeclRefExpr 0xa48daec <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48d670 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa48dc28 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa48db30 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa48db20 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa48db04 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa48dda8 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa48dcc8 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa48dc68 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
      (DeclRefExpr 0xa48dc34 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa48d570 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48dc4c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa48d5b0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa48dd80 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa48dd70 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa48dd58 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa48dcec <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48d670 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa48dd48 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa48dd24 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa48dde0 <line:711:7, col:14>
    (DeclRefExpr 0xa48ddc4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa48d570 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0xa48e940 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0xa48e3c8 <line:737:7, col:20>
    0xa48e370 "string __xtrc =
      (CXXConstructExpr 0xa48e3a8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0xa48e428 <line:738:7, col:24> 'void'
    (MemberExpr 0xa48e3f0 <col:7, col:14> '<bound member function type>' .reserve 0xa36b460
      (DeclRefExpr 0xa48e3d8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0xa48e370 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0xa48e448 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0xa48e410 <col:22> 'int' 32)))
  (BinaryOperator 0xa48e548 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0xa48e454 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa48e0c0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa48e518 <col:15, col:65> '<dependent type>'
      (MemberExpr 0xa48e480 <col:15> '<bound member function type>' ->_M_extract_float 0xa47d990
        (CXXThisExpr 0xa48e470 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0xa48e4a0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0xa48e0c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48e4b8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0xa48e100 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48e4d0 <col:46> 'class std::ios_base' lvalue ParmVar 0xa48e150 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa48e4e8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48e1c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa48e500 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0xa48e370 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0xa48e748 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0xa48e738 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa48e6d0 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0xa441fc0 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0xa4412b0 '__convert_to_v')))
    (CXXMemberCallExpr 0xa48e5f8 <col:27, col:40> 'const char *'
      (MemberExpr 0xa48e5d4 <col:27, col:34> '<bound member function type>' .c_str 0xa37b280
        (ImplicitCastExpr 0xa48e618 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0xa48e5bc <col:27> 'string':'class std::basic_string<char>' lvalue Var 0xa48e370 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0xa48e624 <col:43> 'long double' lvalue ParmVar 0xa48e210 '__v' 'long double &')
    (DeclRefExpr 0xa48e63c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48e1c0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0xa48e778 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0xa48e680 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa48e670 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa48e654 <col:55> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0xa48e8f8 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa48e818 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa48e7b8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
      (DeclRefExpr 0xa48e784 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0xa48e0c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48e79c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0xa48e100 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0xa48e8d0 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa48e8c0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa48e8a8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa48e83c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48e1c0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0xa48e898 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa48e874 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa48e930 <line:743:7, col:14>
    (DeclRefExpr 0xa48e914 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa48e0c0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0xa4913d0 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0xa48ef20 <line:753:7, col:49>
    0xa48eef0 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0xa48f030 <line:754:7, col:42>
    0xa48ef50 "const fmtflags __fmt =
      (CXXMemberCallExpr 0xa48f000 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa48efdc <col:30, col:35> '<bound member function type>' .flags 0xa3d9db0
          (ImplicitCastExpr 0xa48f020 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa48ef84 <col:30> 'class std::ios_base' lvalue ParmVar 0xa48eca0 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0xa48f280 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa48f25c <col:7, col:12> '<bound member function type>' .flags 0xa3d9ea0
      (DeclRefExpr 0xa48f040 <col:7> 'class std::ios_base' lvalue ParmVar 0xa48eca0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa48f238 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa48f228 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa48f210 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce1e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa48f1a8 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa48f180 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa48f170 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa48f158 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa48f148 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa48f098 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa48ef50 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0xa48f128 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa48f118 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa48f100 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce620 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa48f0f0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa48f0cc <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0xa48f200 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0xa48f1dc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0xa48f680 <line:757:7, line:759:57>
    0xa48f650 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0xa48f6e8 <line:761:7, col:24>
    0xa48f6b0 "_UIntPtrType __ul")
  (BinaryOperator 0xa48f808 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0xa48f6f8 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0xa48ec10 '__beg' 'iter_type':'_InIter')
    (CallExpr 0xa48f7d8 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0xa48f720 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa48f75c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0xa48ec10 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48f774 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0xa48ec50 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0xa48f78c <col:44> 'class std::ios_base' lvalue ParmVar 0xa48eca0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa48f7a4 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa48ed10 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0xa48f7bc <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0xa48f6b0 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0xa4912f8 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa4912d8 <col:7, col:12> '<bound member function type>' .flags 0xa3d9ea0
      (DeclRefExpr 0xa491268 <col:7> 'class std::ios_base' lvalue ParmVar 0xa48eca0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa491318 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa4912c0 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa48ef50 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0xa491390 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0xa491324 <col:7> 'void *' lvalue ParmVar 0xa48ed60 '__v' 'void *&')
    (CXXReinterpretCastExpr 0xa491378 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0xa491368 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0xa49133c <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0xa48f6b0 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0xa4913c0 <line:768:7, col:14>
    (DeclRefExpr 0xa4913a8 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0xa48ec10 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0xa491d38 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0xa491c80 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa491bb8 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0xa491bec <col:51> 'class std::ios_base' lvalue ParmVar 0xa491740 '__io' 'class std::ios_base &')
    (DeclRefExpr 0xa491c04 <col:57> '_CharT' lvalue ParmVar 0xa4916b0 '__fill' '_CharT')
    (DeclRefExpr 0xa491c1c <col:65> '_CharT *' lvalue ParmVar 0xa4917b0 '__new' '_CharT *')
    (DeclRefExpr 0xa491c34 <line:782:9> 'const _CharT *' lvalue ParmVar 0xa491820 '__cs' 'const _CharT *')
    (DeclRefExpr 0xa491c4c <col:15> 'streamsize':'int' lvalue ParmVar 0xa4916f0 '__w' 'streamsize':'int')
    (DeclRefExpr 0xa491c64 <col:20> 'int' lvalue ParmVar 0xa491870 '__len' 'int &'))
  (BinaryOperator 0xa491d20 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0xa491cb4 <col:7> 'int' lvalue ParmVar 0xa491870 '__len' 'int &')
    (CXXStaticCastExpr 0xa491d08 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0xa491cf8 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa491ccc <col:32> 'streamsize':'int' lvalue ParmVar 0xa4916f0 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0xa493008 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0xa492160 <line:793:7, col:31>
    0xa492110 "_CharT *__buf =
      (DeclRefExpr 0xa492144 <col:23> '_CharT *' lvalue ParmVar 0xa491e30 '__bufend' '_CharT *')")
  (IfStmt 0xa492f48 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa492218 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa4921c0 <col:11, col:39> 'long'
        (ImplicitCastExpr 0xa4921b0 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa492170 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa4921f8 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa4921e8 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa492188 <col:28> '_Bool' lvalue ParmVar 0xa491f90 '__dec' '_Bool')))
        (ImplicitCastExpr 0xa492208 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa4921a0 <col:35> '_Bool' true))))
    (CompoundStmt 0xa4924f8 <line:795:2, line:803:2>
      (DoStmt 0xa4924e0 <line:797:4, line:802:19>
        (CompoundStmt 0xa492418 <line:798:6, line:801:6>
          (BinaryOperator 0xa4923b0 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0xa492258 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa492240 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa492224 <col:11> '_CharT *' lvalue Var 0xa492110 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0xa492398 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0xa49226c <col:19> 'const _CharT *' lvalue ParmVar 0xa491ee0 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0xa492370 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0xa492328 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                (ParenExpr 0xa4922d0 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0xa4922b8 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0xa492284 <col:26> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
                    (IntegerLiteral 0xa4922a0 <col:32> 'int' 10)))
                (DeclRefExpr 0xa492304 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0xa4923f8 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa4923c8 <col:8> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
            (IntegerLiteral 0xa4923e0 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0xa4924b8 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0xa492460 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (DeclRefExpr 0xa492430 <col:11> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
          (IntegerLiteral 0xa492448 <col:18> 'int' 0))))
    (IfStmt 0xa492f28 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0xa492660 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0xa492640 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0xa4925d8 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0xa4925b0 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa4925a0 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa492588 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa492568 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa49250c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa491f50 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa492578 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa492544 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0xa492650 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa492630 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa49260c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0xa492998 <line:805:2, line:813:2>
        (DoStmt 0xa492980 <line:807:4, line:812:19>
          (CompoundStmt 0xa4928b8 <line:808:6, line:811:6>
            (BinaryOperator 0xa492850 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0xa4926a8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa492690 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa492678 <col:11> '_CharT *' lvalue Var 0xa492110 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa492838 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0xa4926bc <col:19> 'const _CharT *' lvalue ParmVar 0xa491ee0 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa492810 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4927c8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                  (ParenExpr 0xa492770 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa492748 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa492708 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
                      (DeclRefExpr 0xa4926d4 <col:26> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
                      (IntegerLiteral 0xa4926f0 <col:32> 'int' 7)))
                  (DeclRefExpr 0xa4927a4 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0xa492898 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa492868 <col:8> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
              (IntegerLiteral 0xa492880 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0xa492958 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa492900 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (DeclRefExpr 0xa4928d0 <col:11> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
            (IntegerLiteral 0xa4928e8 <col:18> 'int' 0))))
      (CompoundStmt 0xa492f08 <line:815:2, line:826:2>
        (DeclStmt 0xa492ad0 <line:817:4, col:58>
          0xa4929c0 "const bool __uppercase =
            (ImplicitCastExpr 0xa492ac0 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0xa492a98 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0xa492a88 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa492a70 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0xa492a50 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa4929f4 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0xa491f50 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0xa492a60 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa492a2c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d45c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0xa492c00 <line:818:4, line:819:66>
          0xa492af0 "const int __case_offset =
            (ImplicitCastExpr 0xa492bf0 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0xa492bd0 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0xa492bc0 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa492b24 <col:30> 'const _Bool' lvalue Var 0xa4929c0 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0xa492b5c <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a8a0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0xa492b9c <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0xa492ef0 <line:820:4, line:825:19>
          (CompoundStmt 0xa492e28 <line:821:6, line:824:6>
            (BinaryOperator 0xa492dc0 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0xa492c40 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa492c28 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa492c10 <col:11> '_CharT *' lvalue Var 0xa492110 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0xa492da8 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0xa492c54 <col:19> 'const _CharT *' lvalue ParmVar 0xa491ee0 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0xa492d80 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0xa492d38 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                  (ParenExpr 0xa492d08 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0xa492ce0 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0xa492ca0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
                      (DeclRefExpr 0xa492c6c <col:26> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
                      (IntegerLiteral 0xa492c88 <col:32> 'int' 15)))
                  (DeclRefExpr 0xa492d1c <col:39> 'const int' lvalue Var 0xa492af0 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0xa492e08 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa492dd8 <col:8> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
              (IntegerLiteral 0xa492df0 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0xa492ec8 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0xa492e70 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
            (DeclRefExpr 0xa492e40 <col:11> '_ValueT' lvalue ParmVar 0xa491e70 '__v' '_ValueT')
            (IntegerLiteral 0xa492e58 <col:18> 'int' 0))))))
  (ReturnStmt 0xa492ff8 <line:827:7, col:25>
    (CXXOperatorCallExpr 0xa492fd0 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa492f98 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa492f64 <col:14> '_CharT *' lvalue ParmVar 0xa491e30 '__bufend' '_CharT *')
      (DeclRefExpr 0xa492f7c <col:25> '_CharT *' lvalue Var 0xa492110 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa4938c8 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0xa4937f8 <line:838:7, line:839:42>
    0xa493620 "_CharT *__p =
      (CallExpr 0xa4937c0 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa493670 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0xa442c70)
        (DeclRefExpr 0xa4936a4 <col:41> '_CharT *' lvalue ParmVar 0xa493410 '__new' '_CharT *')
        (DeclRefExpr 0xa4936bc <col:48> '_CharT' lvalue ParmVar 0xa493350 '__sep' '_CharT')
        (DeclRefExpr 0xa4936d4 <col:55> 'const char *' lvalue ParmVar 0xa4932d0 '__grouping' 'const char *')
        (DeclRefExpr 0xa4936ec <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0xa493310 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa493704 <col:23> '_CharT *' lvalue ParmVar 0xa493460 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa493798 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa493750 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa49371c <col:29> '_CharT *' lvalue ParmVar 0xa493460 '__cs' '_CharT *')
          (DeclRefExpr 0xa493734 <col:36> 'int' lvalue ParmVar 0xa4934b0 '__len' 'int &')))")
  (BinaryOperator 0xa4938b0 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0xa493808 <col:7> 'int' lvalue ParmVar 0xa4934b0 '__len' 'int &')
    (CXXOperatorCallExpr 0xa493888 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa493850 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (DeclRefExpr 0xa493820 <col:15> '_CharT *' lvalue Var 0xa493620 '__p' '_CharT *')
      (DeclRefExpr 0xa493838 <col:21> '_CharT *' lvalue ParmVar 0xa493410 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0xa497268 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0xa493ec8 <line:850:2, col:33>
    0xa493e60 "Using__gnu_cxx::;")
  (DeclStmt 0xa493ff0 <line:851:2, col:66>
    0xa493fc0 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0xa4940e0 <line:852:2, col:60>
    0xa4940b0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa4941e8 <line:853:2, col:32>
    0xa4941b0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa4942b0 <line:854:2, col:40>
    0xa494210 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa494280 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa49425c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa3da7b0
          (ImplicitCastExpr 0xa4942a0 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa494244 <col:24> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa494378 <line:855:2, col:40>
    0xa4942f0 "const __cache_type *__lc =
      (CallExpr 0xa494358 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa494324 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa4941b0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa49433c <col:34> 'const class std::locale' lvalue Var 0xa494210 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa494448 <line:856:2, col:42>
    0xa4943c0 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0xa494410 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0xa4943f4 <col:24> 'const __cache_type *' lvalue Var 0xa4942f0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0xa494570 <line:857:2, col:49>
    0xa494490 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa494540 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa49451c <col:37, col:42> '<bound member function type>' .flags 0xa3d9db0
          (ImplicitCastExpr 0xa494560 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa4944c4 <col:37> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa494638 <line:860:2, col:40>
    0xa494590 "const int __ilen =
      (ImplicitCastExpr 0xa494628 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0xa494610 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0xa494600 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa4945c8 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0xa4945e8 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0xa494878 <line:861:2, line:862:23>
    0xa494680 "_CharT *__cs =
      (CXXStaticCastExpr 0xa494860 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa494830 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0xa494820 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa494794 <col:38> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa494808 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa4947b8 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa4947f8 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa4947e8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa4947d0 <col:15> 'const int' lvalue Var 0xa494590 '__ilen' 'const int'))))))")
  (DeclStmt 0xa4949c0 <line:866:2, col:70>
    0xa4948c0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0xa494998 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa494988 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa494970 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0xa494950 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa4948f4 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa494490 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0xa494960 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49492c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0xa494be0 <line:867:2, line:868:40>
    0xa4949e0 "const bool __dec =
      (ParenExpr 0xa494b90 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0xa494b78 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0xa494ab0 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0xa494a90 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa494a70 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa494a14 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4948c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa494aa0 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa494a80 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa494a4c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa494b60 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0xa494b40 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa494b20 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa494ac8 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4948c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa494b50 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa494b30 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa494afc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0xa494e68 <line:869:2, line:871:34>
    0xa494c10 "const __unsigned_type __u =
      (ParenExpr 0xa494e50 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0xa494e30 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0xa494d40 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0xa494d28 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0xa494cc0 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0xa494c78 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
                (DeclRefExpr 0xa494c44 <col:32> '_ValueT' lvalue ParmVar 0xa493cb0 '__v' '_ValueT')
                (IntegerLiteral 0xa494c60 <col:38> 'int' 0))
              (UnaryOperator 0xa494d10 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa494d00 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa494ce4 <col:44> 'const _Bool' lvalue Var 0xa4949e0 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0xa494d78 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0xa494d60 <col:28> '_ValueT' lvalue ParmVar 0xa493cb0 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0xa494e10 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa494dd8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (CXXUnresolvedConstructExpr 0xa494db8 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0xa494da0 <col:29> '_ValueT' lvalue ParmVar 0xa493cb0 '__v' '_ValueT')))))")
  (DeclStmt 0xa495030 <line:872:3, col:71>
    0xa494e90 "int __len =
      (CallExpr 0xa495000 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0xa494ec8 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0xa4920c0)
        (CXXOperatorCallExpr 0xa494f78 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0xa494f30 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa494efc <col:29> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
          (DeclRefExpr 0xa494f14 <col:36> 'const int' lvalue Var 0xa494590 '__ilen' 'const int'))
        (DeclRefExpr 0xa494f9c <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0xa494c10 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0xa494fb4 <col:49> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
        (DeclRefExpr 0xa494fcc <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa494490 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0xa494fe4 <col:65> 'const _Bool' lvalue Var 0xa4949e0 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0xa4950c0 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0xa495040 <col:2> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
    (BinaryOperator 0xa4950a8 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0xa495088 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0xa495058 <col:10> 'const int' lvalue Var 0xa494590 '__ilen' 'const int'))
      (ImplicitCastExpr 0xa495098 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0xa495070 <col:19> 'int' lvalue Var 0xa494e90 '__len' 'int'))))
  (IfStmt 0xa495f58 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa4950f8 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0xa4950e0 <col:6> 'const __cache_type *' lvalue Var 0xa4942f0 '__lc' 'const __cache_type *'))
    (CompoundStmt 0xa495f38 <line:877:4, line:886:4>
      (DeclStmt 0xa495c18 <line:880:6, line:882:16>
        0xa495140 "_CharT *__cs2 =
          (CXXStaticCastExpr 0xa495c00 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa495bd0 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0xa495bc0 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa495174 <col:43> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa495ba8 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0xa495230 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa495198 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa495220 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0xa495208 <col:13, col:23> 'int'
                      (BinaryOperator 0xa4951f0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0xa4951e0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa4951b0 <col:14> 'int' lvalue Var 0xa494e90 '__len' 'int'))
                        (IntegerLiteral 0xa4951c8 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0xa495b98 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa495248 <col:13> 'int' 2)))))")
      (CallExpr 0xa495e30 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0xa495c38 <line:883:6> '<bound member function type>' ->_M_group_int 0xa493560
          (CXXThisExpr 0xa495c28 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa495c70 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa495c58 <col:19> 'const __cache_type *' lvalue Var 0xa4942f0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa495cc0 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0xa495ca4 <col:38> 'const __cache_type *' lvalue Var 0xa4942f0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa495d10 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0xa495cf4 <col:5> 'const __cache_type *' lvalue Var 0xa4942f0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa495d44 <col:29> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0xa495dd8 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa495d90 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa495d5c <col:35> '_CharT *' lvalue Var 0xa495140 '__cs2' '_CharT *')
          (IntegerLiteral 0xa495d78 <col:43> 'int' 2))
        (DeclRefExpr 0xa495dfc <col:46> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
        (DeclRefExpr 0xa495e14 <col:52> 'int' lvalue Var 0xa494e90 '__len' 'int'))
      (BinaryOperator 0xa495f20 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0xa495e68 <col:6> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa495ef8 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa495eb0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa495e80 <col:13> '_CharT *' lvalue Var 0xa495140 '__cs2' '_CharT *')
          (IntegerLiteral 0xa495e98 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0xa496c88 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa496020 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa495fc8 <col:6, col:34> 'long'
        (ImplicitCastExpr 0xa495fb8 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa495f74 <col:6> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa496000 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa495ff0 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa495f8c <col:23> 'const _Bool' lvalue Var 0xa4949e0 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0xa496010 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa495fa8 <col:30> '_Bool' true))))
    (CompoundStmt 0xa496588 <line:890:4, line:900:4>
      (IfStmt 0xa496568 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa4960d8 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa496090 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
          (DeclRefExpr 0xa49605c <col:10> '_ValueT' lvalue ParmVar 0xa493cb0 '__v' '_ValueT')
          (IntegerLiteral 0xa496078 <col:17> 'int' 0))
        (CompoundStmt 0xa496438 <line:893:8, line:897:8>
          (IfStmt 0xa496418 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0xa4962e8 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0xa4961e0 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0xa4961d0 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa4961a8 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa496198 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa496180 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa496160 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa496108 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa494490 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa496170 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa49613c <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d44a0 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0xa4962b0 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0xa496400 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0xa4963b8 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0xa496330 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa496318 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0xa496300 <col:8> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0xa4963a0 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0xa496344 <col:15> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
                  (DeclRefExpr 0xa49637c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a710 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0xa4963e8 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0xa4963d0 <col:46> 'int' lvalue Var 0xa494e90 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0xa496550 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0xa496508 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0xa496480 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0xa496468 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0xa49644c <col:11> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0xa4964f0 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0xa496494 <col:18> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
              (DeclRefExpr 0xa4964cc <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a6d0 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0xa496538 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0xa496520 <col:50> 'int' lvalue Var 0xa494e90 '__len' 'int')))))
    (IfStmt 0xa496c68 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0xa4966b0 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0xa496680 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa496670 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0xa496648 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0xa496638 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa496620 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0xa496600 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa4965a8 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa494490 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0xa496610 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa4965dc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d43e0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0xa496698 <col:49> '_ValueT' lvalue ParmVar 0xa493cb0 '__v' '_ValueT'))
      (CompoundStmt 0xa496c50 <line:902:4, line:914:4>
        (IfStmt 0xa496c30 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0xa496760 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0xa496740 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa496720 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa4966c8 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4948c0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0xa496750 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa496730 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0xa4966fc <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0xa496878 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0xa496830 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0xa4967a8 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0xa496790 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa496778 <col:11> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa496818 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0xa4967bc <col:18> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa4967f4 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0xa496860 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa496848 <col:51> 'int' lvalue Var 0xa494e90 '__len' 'int')))
          (CompoundStmt 0xa496c10 <line:906:8, line:913:8>
            (DeclStmt 0xa4969b0 <line:908:3, col:57>
              0xa4968a0 "const bool __uppercase =
                (ImplicitCastExpr 0xa4969a0 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0xa496978 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa496968 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa496950 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa496930 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa4968d4 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa494490 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa496940 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa49690c <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d45c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0xa496ad8 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0xa4969f0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa4969d8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa4969c0 <col:6> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa496ac0 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0xa496a04 <col:13> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
                (BinaryOperator 0xa496aa8 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0xa496a78 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0xa496a3c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a750 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0xa496a98 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa496a88 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa496a5c <col:39> 'const _Bool' lvalue Var 0xa4968a0 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0xa496ba8 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0xa496b20 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0xa496b08 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0xa496af0 <col:6> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0xa496b90 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0xa496b34 <col:13> 'const _CharT *' lvalue Var 0xa4943c0 '__lit' 'const _CharT *')
                (DeclRefExpr 0xa496b6c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0xa45a7d0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0xa496bf0 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0xa496bc0 <col:3> 'int' lvalue Var 0xa494e90 '__len' 'int')
              (IntegerLiteral 0xa496bd8 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0xa496d90 <line:917:2, col:37>
    0xa496cb0 "const streamsize __w =
      (CXXMemberCallExpr 0xa496d60 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa496d3c <col:25, col:30> '<bound member function type>' .width 0xa3da3d0
          (ImplicitCastExpr 0xa496d80 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa496ce4 <col:25> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa4970c8 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0xa496e10 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa496e00 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa496da0 <col:6> 'const streamsize':'const int' lvalue Var 0xa496cb0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa496de8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa496dd8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa496db8 <col:36> 'int' lvalue Var 0xa494e90 '__len' 'int'))))
    (CompoundStmt 0xa4970a8 <line:919:4, line:924:4>
      (DeclStmt 0xa496f58 <line:920:6, line:921:18>
        0xa496e40 "_CharT *__cs3 =
          (CXXStaticCastExpr 0xa496f40 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa496f10 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0xa496f00 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa496e74 <col:43> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa496ee8 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa496e98 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa496ed8 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa496ec8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa496eb0 <col:13> 'const streamsize':'const int' lvalue Var 0xa496cb0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa497028 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0xa496f78 <col:6> '<bound member function type>' ->_M_pad 0xa491910
          (CXXThisExpr 0xa496f68 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa496f98 <col:13> '_CharT' lvalue ParmVar 0xa493c70 '__fill' '_CharT')
        (DeclRefExpr 0xa496fb0 <col:21> 'const streamsize':'const int' lvalue Var 0xa496cb0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa496fc8 <col:26> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa496fe0 <col:32> '_CharT *' lvalue Var 0xa496e40 '__cs3' '_CharT *')
        (DeclRefExpr 0xa496ff8 <col:39> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
        (DeclRefExpr 0xa497010 <col:45> 'int' lvalue Var 0xa494e90 '__len' 'int'))
      (BinaryOperator 0xa497090 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa49705c <col:6> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
        (DeclRefExpr 0xa497074 <col:13> '_CharT *' lvalue Var 0xa496e40 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa497178 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa497158 <col:2, col:7> '<bound member function type>' .width 0xa3da490
      (DeclRefExpr 0xa4970e4 <col:2> 'class std::ios_base' lvalue ParmVar 0xa493c30 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa497140 <col:13> 'int' 0))
  (ReturnStmt 0xa497258 <line:929:2, col:38>
    (CallExpr 0xa497230 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa4971b0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
      (DeclRefExpr 0xa4971e8 <col:22> '_OutIter' lvalue ParmVar 0xa493be0 '__s' '_OutIter')
      (DeclRefExpr 0xa497200 <col:27> '_CharT *' lvalue Var 0xa494680 '__cs' '_CharT *')
      (DeclRefExpr 0xa497218 <col:33> 'int' lvalue Var 0xa494e90 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0xa497ff8 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0xa4979f8 <line:942:7, col:52>
    0xa4978e0 "const int __declen =
      (ConditionalOperator 0xa4979d8 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0xa497914 <col:28> 'const _CharT *' lvalue ParmVar 0xa497660 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0xa497998 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0xa497960 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (DeclRefExpr 0xa49792c <col:34> 'const _CharT *' lvalue ParmVar 0xa497660 '__p' 'const _CharT *')
          (DeclRefExpr 0xa497944 <col:40> '_CharT *' lvalue ParmVar 0xa497720 '__cs' '_CharT *'))
        (DeclRefExpr 0xa4979bc <col:47> 'int' lvalue ParmVar 0xa497770 '__len' 'int &'))")
  (DeclStmt 0xa497bf8 <line:943:7, line:945:29>
    0xa497a20 "_CharT *__p2 =
      (CallExpr 0xa497bc0 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0xa497a70 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa442c70)
        (DeclRefExpr 0xa497aa4 <col:42> '_CharT *' lvalue ParmVar 0xa4976d0 '__new' '_CharT *')
        (DeclRefExpr 0xa497abc <col:49> '_CharT' lvalue ParmVar 0xa4975f0 '__sep' '_CharT')
        (DeclRefExpr 0xa497ad4 <col:56> 'const char *' lvalue ParmVar 0xa497570 '__grouping' 'const char *')
        (DeclRefExpr 0xa497aec <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0xa4975b0 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0xa497b04 <line:945:7> '_CharT *' lvalue ParmVar 0xa497720 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0xa497b98 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa497b50 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa497b1c <col:13> '_CharT *' lvalue ParmVar 0xa497720 '__cs' '_CharT *')
          (DeclRefExpr 0xa497b34 <col:20> 'const int' lvalue Var 0xa4978e0 '__declen' 'const int')))")
  (DeclStmt 0xa497ce8 <line:948:7, col:34>
    0xa497c20 "int __newlen =
      (CXXOperatorCallExpr 0xa497cc0 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa497c88 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa497c54 <col:22> '_CharT *' lvalue Var 0xa497a20 '__p2' '_CharT *')
        (DeclRefExpr 0xa497c6c <col:29> '_CharT *' lvalue ParmVar 0xa4976d0 '__new' '_CharT *'))")
  (IfStmt 0xa497f80 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0xa497cf8 <line:949:11> 'const _CharT *' lvalue ParmVar 0xa497660 '__p' 'const _CharT *')
    (CompoundStmt 0xa497f68 <line:950:2, line:953:2>
      (CallExpr 0xa497ea0 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa497dd0 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0xa497e04 <col:30> '_CharT *' lvalue Var 0xa497a20 '__p2' '_CharT *')
        (DeclRefExpr 0xa497e1c <col:36> 'const _CharT *' lvalue ParmVar 0xa497660 '__p' 'const _CharT *')
        (BinaryOperator 0xa497e88 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0xa497e68 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0xa497e34 <col:41> 'int' lvalue ParmVar 0xa497770 '__len' 'int &'))
          (ImplicitCastExpr 0xa497e78 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0xa497e4c <col:49> 'const int' lvalue Var 0xa4978e0 '__declen' 'const int'))))
      (CompoundAssignOperator 0xa497f48 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa497ec8 <col:4> 'int' lvalue Var 0xa497c20 '__newlen' 'int')
        (BinaryOperator 0xa497f30 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0xa497f10 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0xa497ee0 <col:16> 'int' lvalue ParmVar 0xa497770 '__len' 'int &'))
          (ImplicitCastExpr 0xa497f20 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0xa497ef8 <col:24> 'const int' lvalue Var 0xa4978e0 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0xa497fe0 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0xa497f9c <col:7> 'int' lvalue ParmVar 0xa497770 '__len' 'int &')
    (ImplicitCastExpr 0xa497fd0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0xa497fb4 <col:15> 'int' lvalue Var 0xa497c20 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0xa49b6d8 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0xa4986d0 <line:974:2, col:62>
    0xa4986a0 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0xa4987d8 <line:975:2, col:32>
    0xa4987a0 "__use_cache<__cache_type> __uc")
  (DeclStmt 0xa4988a0 <line:976:2, col:40>
    0xa498800 "const std::locale &__loc =
      (CXXMemberCallExpr 0xa498870 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0xa49884c <col:24, col:29> '<bound member function type>' ._M_getloc 0xa3da7b0
          (ImplicitCastExpr 0xa498890 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa498834 <col:24> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa498968 <line:977:2, col:40>
    0xa4988e0 "const __cache_type *__lc =
      (CallExpr 0xa498948 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0xa498914 <col:29> '__use_cache<__cache_type>' lvalue Var 0xa4987a0 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0xa49892c <col:34> 'const class std::locale' lvalue Var 0xa498800 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa498b70 <line:980:2, col:71>
    0xa498980 "const streamsize __prec =
      (ConditionalOperator 0xa498b50 <col:28, col:70> 'int'
        (BinaryOperator 0xa498a78 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0xa498a30 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0xa498a0c <col:28, col:33> '<bound member function type>' .precision 0xa3da260
              (ImplicitCastExpr 0xa498a50 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa4989b4 <col:28> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0xa498a60 <col:47> 'int' 0))
        (IntegerLiteral 0xa498a90 <col:51> 'int' 6)
        (CXXMemberCallExpr 0xa498b20 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0xa498b00 <col:55, col:60> '<bound member function type>' .precision 0xa3da260
            (ImplicitCastExpr 0xa498b40 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa498aa8 <col:55> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0xa498cb8 <line:982:2, line:983:52>
    0xa498b90 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0xa498c80 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0xa498d18 <line:986:2, col:11>
    0xa498ce0 "int __len")
  (DeclStmt 0xa498db8 <line:988:2, col:17>
    0xa498d80 "char __fbuf[16]")
  (CallExpr 0xa498ea8 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0xa498e98 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa498df0 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0xa45b030 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0xa498ed0 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0xa498e10 <col:30> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa498ee0 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa498e28 <col:36> 'char [16]' lvalue Var 0xa498d80 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0xa498ef0 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0xa498e40 <col:44> 'char' lvalue ParmVar 0xa4983f0 '__mod' 'char')))
  (DeclStmt 0xa498fa0 <line:994:2, col:34>
    0xa498f10 "int __cs_size =
      (BinaryOperator 0xa498f88 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0xa498f78 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0xa498f44 <col:18> 'const int' lvalue Var 0xa498b90 '__max_digits' 'const int'))
        (IntegerLiteral 0xa498f60 <col:33> 'int' 3))")
  (DeclStmt 0xa4990a0 <line:995:2, col:62>
    0xa498fc0 "char *__cs =
      (CXXStaticCastExpr 0xa499088 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0xa499038 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0xa499028 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa498ff4 <col:34> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0xa499068 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa499058 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0xa49900c <col:51> 'int' lvalue Var 0xa498f10 '__cs_size' 'int')))))")
  (BinaryOperator 0xa4991f8 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0xa4990b0 <line:996:2> 'int' lvalue Var 0xa498ce0 '__len' 'int')
    (CallExpr 0xa4991c0 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0xa4990e0 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa20bb80 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0xa499128 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0xa499118 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa499100 <col:32> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0xa499144 <col:51> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *')
      (DeclRefExpr 0xa49915c <col:57> 'int' lvalue Var 0xa498f10 '__cs_size' 'int')
      (DeclRefExpr 0xa499174 <line:997:11> 'char [16]' lvalue Var 0xa498d80 '__fbuf' 'char [16]')
      (DeclRefExpr 0xa49918c <col:19> 'const streamsize':'const int' lvalue Var 0xa498980 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0xa4991a4 <col:27> '_ValueT' lvalue ParmVar 0xa498430 '__v' '_ValueT')))
  (IfStmt 0xa499558 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0xa499260 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0xa499240 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0xa499210 <col:6> 'int' lvalue Var 0xa498ce0 '__len' 'int'))
      (ImplicitCastExpr 0xa499250 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0xa499228 <col:15> 'int' lvalue Var 0xa498f10 '__cs_size' 'int')))
    (CompoundStmt 0xa499538 <line:1001:4, line:1006:4>
      (BinaryOperator 0xa4992e8 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0xa499278 <col:6> 'int' lvalue Var 0xa498f10 '__cs_size' 'int')
        (BinaryOperator 0xa4992d0 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0xa4992c0 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0xa499290 <col:18> 'int' lvalue Var 0xa498ce0 '__len' 'int'))
          (IntegerLiteral 0xa4992a8 <col:26> 'int' 1)))
      (BinaryOperator 0xa4993c0 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0xa499300 <col:6> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *')
        (CXXStaticCastExpr 0xa4993a8 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0xa499358 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0xa499348 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa499318 <col:32> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0xa499388 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa499378 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0xa499330 <col:49> 'int' lvalue Var 0xa498f10 '__cs_size' 'int'))))))
      (BinaryOperator 0xa499520 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0xa4993d8 <line:1004:6> 'int' lvalue Var 0xa498ce0 '__len' 'int')
        (CallExpr 0xa4994e8 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0xa499408 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0xa20bb80 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0xa499450 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0xa499440 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa499428 <col:36> '__c_locale (void)' lvalue CXXMethod 0xa3b5b00 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0xa49946c <col:55> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *')
          (DeclRefExpr 0xa499484 <col:61> 'int' lvalue Var 0xa498f10 '__cs_size' 'int')
          (DeclRefExpr 0xa49949c <line:1005:8> 'char [16]' lvalue Var 0xa498d80 '__fbuf' 'char [16]')
          (DeclRefExpr 0xa4994b4 <col:16> 'const streamsize':'const int' lvalue Var 0xa498980 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0xa4994cc <col:24> '_ValueT' lvalue ParmVar 0xa498430 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0xa4997c0 <line:1028:2, col:65>
    0xa499640 "const ctype<_CharT> &__ctype =
      (CallExpr 0xa4997a0 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0xa499720 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
        (DeclRefExpr 0xa499788 <col:59> 'const class std::locale' lvalue Var 0xa498800 '__loc' 'const class std::locale &'))")
  (DeclStmt 0xa499918 <line:1030:2, line:1031:22>
    0xa499800 "_CharT *__ws =
      (CXXStaticCastExpr 0xa499900 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0xa4998d0 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0xa4998c0 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa499834 <col:38> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0xa4998a8 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0xa499858 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0xa499898 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0xa499888 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0xa499870 <col:15> 'int' lvalue Var 0xa498ce0 '__len' 'int'))))))")
  (CallExpr 0xa499a10 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa499940 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0xa499928 <col:2> 'const ctype<_CharT>' lvalue Var 0xa499640 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0xa499974 <col:16> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *')
    (BinaryOperator 0xa4999e0 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0xa4999c0 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0xa49998c <col:22> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
      (ImplicitCastExpr 0xa4999d0 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0xa4999a4 <col:29> 'int' lvalue Var 0xa498ce0 '__len' 'int')))
    (DeclRefExpr 0xa4999f8 <col:36> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *'))
  (DeclStmt 0xa499aa0 <line:1035:2, col:18>
    0xa499a50 "_CharT *__wp =
      (IntegerLiteral 0xa499a88 <col:17> 'int' 0)")
  (DeclStmt 0xa49a1c0 <line:1036:2, col:61>
    0xa499ac0 "const char *__p =
      (CallExpr 0xa49a148 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0xa49a138 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa499b70 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0xa1e4050 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0xa49a180 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0xa49a170 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0xa49a0b8 <col:44> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *')))
        (ImplicitCastExpr 0xa49a1a0 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0xa49a190 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0xa49a0d0 <col:50> 'int' lvalue Var 0xa498ce0 '__len' 'int')))
        (MaterializeTemporaryExpr 0xa49a1b0 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0xa49a0e8 <col:57> 'char'46)))")
  (IfStmt 0xa49a3f0 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0xa49a1f8 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0xa49a1e8 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0xa49a1d0 <col:6> 'const char *' lvalue Var 0xa499ac0 '__p' 'const char *')))
    (CompoundStmt 0xa49a3d8 <line:1038:4, line:1041:4>
      (BinaryOperator 0xa49a328 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0xa49a204 <col:6> '_CharT *' lvalue Var 0xa499a50 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa49a300 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0xa49a2b8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa49a21c <col:13> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
          (ParenExpr 0xa49a2a0 <col:20, col:31> 'int'
            (BinaryOperator 0xa49a288 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0xa49a268 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa49a234 <col:21> 'const char *' lvalue Var 0xa499ac0 '__p' 'const char *'))
              (ImplicitCastExpr 0xa49a278 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0xa49a24c <col:27> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))))))
      (BinaryOperator 0xa49a3c0 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0xa49a358 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa49a340 <col:7> '_CharT *' lvalue Var 0xa499a50 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0xa49a388 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0xa49a36c <col:14> 'const __cache_type *' lvalue Var 0xa4988e0 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0xa49b0f0 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0xa49a858 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0xa49a428 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0xa49a40c <col:6> 'const __cache_type *' lvalue Var 0xa4988e0 '__lc' 'const __cache_type *'))
      (ParenExpr 0xa49a840 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0xa49a828 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0xa49a4d0 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0xa49a45c <col:10> '_CharT *' lvalue Var 0xa499a50 '__wp' '_CharT *')
            (BinaryOperator 0xa49a4b8 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0xa49a4a8 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0xa49a474 <col:18> 'int' lvalue Var 0xa498ce0 '__len' 'int'))
              (IntegerLiteral 0xa49a490 <col:26> 'int' 3)))
          (ParenExpr 0xa49a810 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0xa49a7f8 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0xa49a728 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0xa49a658 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0xa49a588 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0xa49a568 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa49a558 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa49a528 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0xa49a518 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa49a4e8 <col:32> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                          (IntegerLiteral 0xa49a500 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0xa49a578 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0xa49a540 <col:43> 'char'57)))
                  (BinaryOperator 0xa49a640 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0xa49a620 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0xa49a610 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0xa49a5e0 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0xa49a5d0 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0xa49a5a0 <col:50> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                          (IntegerLiteral 0xa49a5b8 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0xa49a630 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0xa49a5f8 <col:61> 'char'57))))
                (BinaryOperator 0xa49a710 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0xa49a6f0 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa49a6e0 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0xa49a6b0 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0xa49a6a0 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0xa49a670 <col:14> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                        (IntegerLiteral 0xa49a688 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0xa49a700 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0xa49a6c8 <col:25> 'char'48))))
              (BinaryOperator 0xa49a7e0 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0xa49a7c0 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0xa49a7b0 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0xa49a780 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0xa49a770 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0xa49a740 <col:32> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                      (IntegerLiteral 0xa49a758 <col:37> 'int' 2))))
                (ImplicitCastExpr 0xa49a7d0 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0xa49a798 <col:43> 'char'48))))))))
    (CompoundStmt 0xa49b0c8 <line:1049:4, line:1069:4>
      (DeclStmt 0xa49a9d8 <line:1052:6, line:1053:24>
        0xa49a880 "_CharT *__ws2 =
          (CXXStaticCastExpr 0xa49a9c0 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa49a990 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0xa49a980 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa49a8b4 <col:43> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa49a968 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0xa49a928 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0xa49a8d8 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0xa49a918 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0xa49a908 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa49a8f0 <col:13> 'int' lvalue Var 0xa498ce0 '__len' 'int'))))
                (ImplicitCastExpr 0xa49a958 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa49a940 <col:21> 'int' 2)))))")
      (DeclStmt 0xa49aa40 <line:1055:6, col:26>
        0xa49a9f0 "streamsize __off =
          (IntegerLiteral 0xa49aa28 <col:25> 'int' 0)")
      (IfStmt 0xa49ad38 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0xa49abc0 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0xa49aaf0 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0xa49aad0 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa49aac0 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa49aa90 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0xa49aa80 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa49aa50 <col:10> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                  (IntegerLiteral 0xa49aa68 <col:15> 'int' 0))))
            (ImplicitCastExpr 0xa49aae0 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0xa49aaa8 <col:21> 'char'45)))
          (BinaryOperator 0xa49aba8 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0xa49ab88 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa49ab78 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0xa49ab48 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0xa49ab38 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0xa49ab08 <col:28> 'char *' lvalue Var 0xa498fc0 '__cs' 'char *'))
                  (IntegerLiteral 0xa49ab20 <col:33> 'int' 0))))
            (ImplicitCastExpr 0xa49ab98 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0xa49ab60 <col:39> 'char'43))))
        (CompoundStmt 0xa49ad18 <line:1057:8, line:1061:8>
          (BinaryOperator 0xa49ac08 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0xa49abd8 <col:3> 'streamsize':'int' lvalue Var 0xa49a9f0 '__off' 'streamsize':'int')
            (IntegerLiteral 0xa49abf0 <col:11> 'int' 1))
          (BinaryOperator 0xa49acb0 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0xa49ac50 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0xa49ac20 <col:3> '_CharT *' lvalue Var 0xa49a880 '__ws2' '_CharT *')
              (IntegerLiteral 0xa49ac38 <col:9> 'int' 0))
            (ArraySubscriptExpr 0xa49ac98 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0xa49ac64 <col:14> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
              (IntegerLiteral 0xa49ac80 <col:19> 'int' 0)))
          (CompoundAssignOperator 0xa49acf8 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0xa49acc8 <col:3> 'int' lvalue Var 0xa498ce0 '__len' 'int')
            (IntegerLiteral 0xa49ace0 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0xa49afe8 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0xa49ad68 <line:1063:6> '<bound member function type>' ->_M_group_float 0xa497820
          (CXXThisExpr 0xa49ad58 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0xa49ada0 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0xa49ad88 <col:21> 'const __cache_type *' lvalue Var 0xa4988e0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa49adf0 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0xa49add4 <col:40> 'const __cache_type *' lvalue Var 0xa4988e0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0xa49ae40 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0xa49ae24 <col:7> 'const __cache_type *' lvalue Var 0xa4988e0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0xa49ae74 <col:31> '_CharT *' lvalue Var 0xa499a50 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0xa49af08 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa49aec0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa49ae8c <col:37> '_CharT *' lvalue Var 0xa49a880 '__ws2' '_CharT *')
          (DeclRefExpr 0xa49aea4 <col:45> 'streamsize':'int' lvalue Var 0xa49a9f0 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0xa49afa8 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0xa49af60 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa49af2c <col:7> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
          (DeclRefExpr 0xa49af44 <col:14> 'streamsize':'int' lvalue Var 0xa49a9f0 '__off' 'streamsize':'int'))
        (DeclRefExpr 0xa49afcc <col:21> 'int' lvalue Var 0xa498ce0 '__len' 'int'))
      (CompoundAssignOperator 0xa49b060 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa49b020 <col:6> 'int' lvalue Var 0xa498ce0 '__len' 'int')
        (ImplicitCastExpr 0xa49b050 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa49b038 <col:15> 'streamsize':'int' lvalue Var 0xa49a9f0 '__off' 'streamsize':'int')))
      (BinaryOperator 0xa49b0b0 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa49b080 <col:6> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
        (DeclRefExpr 0xa49b098 <col:13> '_CharT *' lvalue Var 0xa49a880 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0xa49b200 <line:1072:2, col:37>
    0xa49b120 "const streamsize __w =
      (CXXMemberCallExpr 0xa49b1d0 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0xa49b1ac <col:25, col:30> '<bound member function type>' .width 0xa3da3d0
          (ImplicitCastExpr 0xa49b1f0 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa49b154 <col:25> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa49b538 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0xa49b280 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0xa49b270 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa49b210 <col:6> 'const streamsize':'const int' lvalue Var 0xa49b120 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0xa49b258 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0xa49b248 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0xa49b228 <col:36> 'int' lvalue Var 0xa498ce0 '__len' 'int'))))
    (CompoundStmt 0xa49b518 <line:1074:4, line:1079:4>
      (DeclStmt 0xa49b3c8 <line:1075:6, line:1076:18>
        0xa49b2b0 "_CharT *__ws3 =
          (CXXStaticCastExpr 0xa49b3b0 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0xa49b380 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0xa49b370 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa49b2e4 <col:43> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0xa49b358 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0xa49b308 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0xa49b348 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa49b338 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa49b320 <col:13> 'const streamsize':'const int' lvalue Var 0xa49b120 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0xa49b498 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0xa49b3e8 <col:6> '<bound member function type>' ->_M_pad 0xa491910
          (CXXThisExpr 0xa49b3d8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0xa49b408 <col:13> '_CharT' lvalue ParmVar 0xa4983b0 '__fill' '_CharT')
        (DeclRefExpr 0xa49b420 <col:21> 'const streamsize':'const int' lvalue Var 0xa49b120 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0xa49b438 <col:26> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &')
        (DeclRefExpr 0xa49b450 <col:32> '_CharT *' lvalue Var 0xa49b2b0 '__ws3' '_CharT *')
        (DeclRefExpr 0xa49b468 <col:39> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
        (DeclRefExpr 0xa49b480 <col:45> 'int' lvalue Var 0xa498ce0 '__len' 'int'))
      (BinaryOperator 0xa49b500 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa49b4cc <col:6> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
        (DeclRefExpr 0xa49b4e4 <col:13> '_CharT *' lvalue Var 0xa49b2b0 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0xa49b5e8 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0xa49b5c8 <col:2, col:7> '<bound member function type>' .width 0xa3da490
      (DeclRefExpr 0xa49b554 <col:2> 'class std::ios_base' lvalue ParmVar 0xa498370 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0xa49b5b0 <col:13> 'int' 0))
  (ReturnStmt 0xa49b6c8 <line:1084:2, col:38>
    (CallExpr 0xa49b6a0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa49b620 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
      (DeclRefExpr 0xa49b658 <col:22> '_OutIter' lvalue ParmVar 0xa498320 '__s' '_OutIter')
      (DeclRefExpr 0xa49b670 <col:27> '_CharT *' lvalue Var 0xa499800 '__ws' '_CharT *')
      (DeclRefExpr 0xa49b688 <col:33> 'int' lvalue Var 0xa498ce0 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0xa49d400 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0xa49bd10 <line:1092:7, col:54>
    0xa49bc30 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa49bce0 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa49bcbc <col:42, col:47> '<bound member function type>' .flags 0xa3d9db0
          (ImplicitCastExpr 0xa49bd00 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa49bc64 <col:42> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &'))))")
  (IfStmt 0xa49d3b8 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0xa49be28 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0xa49be18 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0xa49bde8 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa49bdc0 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa49bdb0 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa49bd98 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa49bd78 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa49bd20 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49bc30 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa49bd88 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa49bd54 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4080 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0xa49be00 <col:46> 'int' 0))
    (CompoundStmt 0xa49bfe0 <line:1094:9, line:1097:9>
      (DeclStmt 0xa49bec0 <line:1095:11, col:31>
        0xa49be50 "const long __l =
          (ImplicitCastExpr 0xa49beb0 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0xa49bea0 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa49be84 <col:28> '_Bool' lvalue ParmVar 0xa49bac0 '__v' '_Bool')))")
      (BinaryOperator 0xa49bfc8 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0xa49bed0 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa49bf98 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa49bef8 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa49bf34 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa49bf4c <col:36> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &')
          (DeclRefExpr 0xa49bf64 <col:42> 'char_type':'_CharT' lvalue ParmVar 0xa49ba80 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0xa49bf7c <col:50> 'const long' lvalue Var 0xa49be50 '__l' 'const long'))))
    (CompoundStmt 0xa49d380 <line:1099:9, line:1135:2>
      (DeclStmt 0xa49c0d0 <line:1100:4, col:62>
        0xa49c0a0 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0xa49c1d8 <line:1101:4, col:34>
        0xa49c1a0 "__use_cache<__cache_type> __uc")
      (DeclStmt 0xa49c2a0 <line:1102:4, col:42>
        0xa49c200 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa49c270 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0xa49c24c <col:26, col:31> '<bound member function type>' ._M_getloc 0xa3da7b0
              (ImplicitCastExpr 0xa49c290 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa49c234 <col:26> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa49c368 <line:1103:4, col:42>
        0xa49c2e0 "const __cache_type *__lc =
          (CallExpr 0xa49c348 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0xa49c314 <col:31> '__use_cache<__cache_type>' lvalue Var 0xa49c1a0 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0xa49c32c <col:36> 'const class std::locale' lvalue Var 0xa49c200 '__loc' 'const class std::locale &'))")
      (DeclStmt 0xa49c4d0 <line:1105:4, line:1106:51>
        0xa49c3b0 "const _CharT *__name =
          (ConditionalOperator 0xa49c4b0 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0xa49c4a0 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa49c3e4 <col:27> '_Bool' lvalue ParmVar 0xa49bac0 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa49c418 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa49c3fc <col:33> 'const __cache_type *' lvalue Var 0xa49c2e0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa49c468 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa49c44c <col:33> 'const __cache_type *' lvalue Var 0xa49c2e0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa49c610 <line:1107:4, line:1108:45>
        0xa49c4f0 "int __len =
          (ConditionalOperator 0xa49c5f0 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0xa49c5e0 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa49c524 <col:16> '_Bool' lvalue ParmVar 0xa49bac0 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0xa49c558 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa49c53c <col:22> 'const __cache_type *' lvalue Var 0xa49c2e0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0xa49c5a8 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa49c58c <col:22> 'const __cache_type *' lvalue Var 0xa49c2e0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0xa49c710 <line:1110:4, col:39>
        0xa49c630 "const streamsize __w =
          (CXXMemberCallExpr 0xa49c6e0 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0xa49c6bc <col:27, col:32> '<bound member function type>' .width 0xa3da3d0
              (ImplicitCastExpr 0xa49c700 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa49c664 <col:27> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &'))))")
      (IfStmt 0xa49d1c0 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0xa49c790 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0xa49c780 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0xa49c720 <col:8> 'const streamsize':'const int' lvalue Var 0xa49c630 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0xa49c768 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0xa49c758 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0xa49c738 <col:38> 'int' lvalue Var 0xa49c4f0 '__len' 'int'))))
        (CompoundStmt 0xa49d198 <line:1112:6, line:1132:6>
          (DeclStmt 0xa49c850 <line:1113:8, col:45>
            0xa49c7b0 "const streamsize __plen =
              (BinaryOperator 0xa49c838 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0xa49c818 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa49c7e4 <col:34> 'const streamsize':'const int' lvalue Var 0xa49c630 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0xa49c828 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa49c7fc <col:40> 'int' lvalue Var 0xa49c4f0 '__len' 'int')))")
          (DeclStmt 0xa49c9a8 <line:1114:8, line:1116:18>
            0xa49c890 "_CharT *__ps =
              (CXXStaticCastExpr 0xa49c990 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0xa49c960 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0xa49c950 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa49c8c4 <col:26> 'void *(unsigned int)' lvalue Function 0xa4946c0 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0xa49c938 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0xa49c8e8 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0xa49c928 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa49c918 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa49c900 <col:10> 'const streamsize':'const int' lvalue Var 0xa49c7b0 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0xa49caf0 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa49ca70 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0xa49caa4 <col:36> '_CharT *' lvalue Var 0xa49c890 '__ps' '_CharT *')
            (DeclRefExpr 0xa49cabc <col:42> 'const streamsize':'const int' lvalue Var 0xa49c7b0 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0xa49cad4 <col:50> 'char_type':'_CharT' lvalue ParmVar 0xa49ba80 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0xa49cba8 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0xa49cb88 <col:8, col:13> '<bound member function type>' .width 0xa3da490
              (DeclRefExpr 0xa49cb18 <col:8> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0xa49cb70 <col:19> 'int' 0))
          (IfStmt 0xa49d150 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0xa49cd18 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0xa49ccf8 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0xa49cc90 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0xa49cc68 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0xa49cc58 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa49cc40 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0xa49cc20 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa49cbc8 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49bc30 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0xa49cc30 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0xa49cbfc <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4620 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0xa49cd08 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0xa49cce8 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0xa49ccc4 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4260 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0xa49cf40 <line:1122:3, line:1125:3>
              (BinaryOperator 0xa49ce38 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa49cd5c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa49ce10 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa49cd90 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
                  (DeclRefExpr 0xa49cdc8 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa49cde0 <col:29> 'const _CharT *' lvalue Var 0xa49c3b0 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa49cdf8 <col:37> 'int' lvalue Var 0xa49c4f0 '__len' 'int')))
              (BinaryOperator 0xa49cf28 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa49ce50 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa49cf00 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa49ce80 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
                  (DeclRefExpr 0xa49ceb8 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa49ced0 <col:29> '_CharT *' lvalue Var 0xa49c890 '__ps' '_CharT *')
                  (DeclRefExpr 0xa49cee8 <col:35> 'const streamsize':'const int' lvalue Var 0xa49c7b0 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0xa49d138 <line:1127:3, line:1130:3>
              (BinaryOperator 0xa49d030 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa49cf58 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa49d008 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0xa49cf88 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
                  (DeclRefExpr 0xa49cfc0 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa49cfd8 <col:29> '_CharT *' lvalue Var 0xa49c890 '__ps' '_CharT *')
                  (DeclRefExpr 0xa49cff0 <col:35> 'const streamsize':'const int' lvalue Var 0xa49c7b0 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0xa49d120 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0xa49d048 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                (CallExpr 0xa49d0f8 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0xa49d078 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
                  (DeclRefExpr 0xa49d0b0 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0xa49d0c8 <col:29> 'const _CharT *' lvalue Var 0xa49c3b0 '__name' 'const _CharT *')
                  (DeclRefExpr 0xa49d0e0 <col:37> 'int' lvalue Var 0xa49c4f0 '__len' 'int')))))
          (ReturnStmt 0xa49d188 <line:1131:8, col:15>
            (DeclRefExpr 0xa49d16c <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0xa49d270 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0xa49d250 <col:4, col:9> '<bound member function type>' .width 0xa3da490
          (DeclRefExpr 0xa49d1dc <col:4> 'class std::ios_base' lvalue ParmVar 0xa49ba40 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0xa49d238 <col:15> 'int' 0))
      (BinaryOperator 0xa49d368 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa49d290 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
        (CallExpr 0xa49d340 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa49d2c0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0xa443180 0xa443540)
          (DeclRefExpr 0xa49d2f8 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0xa49d310 <col:28> 'const _CharT *' lvalue Var 0xa49c3b0 '__name' 'const _CharT *')
          (DeclRefExpr 0xa49d328 <col:36> 'int' lvalue Var 0xa49c4f0 '__len' 'int')))))
  (ReturnStmt 0xa49d3f0 <line:1136:7, col:14>
    (DeclRefExpr 0xa49d3d4 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa49b9f0 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0xa49d9e8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0xa49d9d8 <col:7, col:60>
    (CallExpr 0xa49d9a8 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0xa49d8f0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa49d92c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa49d6c0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa49d944 <col:35> 'class std::ios_base' lvalue ParmVar 0xa49d710 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa49d95c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa49d750 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0xa49d980 <col:49, col:54> 'char')
      (DeclRefExpr 0xa49d990 <col:57> 'double' lvalue ParmVar 0xa49d7a0 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0xa49dfc8 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0xa49dfb8 <col:7, col:57>
    (CallExpr 0xa49df88 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0xa49ded0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa49df0c <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0xa49dca0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa49df24 <col:35> 'class std::ios_base' lvalue ParmVar 0xa49dcf0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa49df3c <col:41> 'char_type':'_CharT' lvalue ParmVar 0xa49dd30 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0xa49df58 <col:49> 'char'76)
      (DeclRefExpr 0xa49df6c <col:54> 'long double' lvalue ParmVar 0xa49dd80 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0xa49ee58 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0xa49e5b0 <line:1166:7, col:54>
    0xa49e4d0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0xa49e580 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0xa49e55c <col:42, col:47> '<bound member function type>' .flags 0xa3d9db0
          (ImplicitCastExpr 0xa49e5a0 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0xa49e504 <col:42> 'class std::ios_base' lvalue ParmVar 0xa49e2d0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0xa49e780 <line:1167:7, line:1168:29>
    0xa49e5f0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa49e760 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa49e750 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49e738 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce620 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0xa49e720 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0xa49e6f8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0xa49e6e8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa49e6d0 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce1e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0xa49e6b0 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa49e650 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0xa49e6c0 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0xa49e68c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d45c0 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0xa49ea20 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa49e9fc <col:7, col:12> '<bound member function type>' .flags 0xa3d9ea0
      (DeclRefExpr 0xa49e790 <col:7> 'class std::ios_base' lvalue ParmVar 0xa49e2d0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0xa49e9d8 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0xa49e9c8 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa49e9b0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce1e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0xa49e888 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa49e860 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa49e850 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49e838 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa49e818 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa49e7e8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49e4d0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa49e828 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa49e800 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49e5f0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0xa49e998 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0xa49e970 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0xa49e960 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa49e948 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3ce1e0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0xa49e928 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa49e8c8 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0xa49e938 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa49e904 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d43e0 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0xa49ec10 <line:1171:7, line:1173:57>
    0xa49ebe0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0xa49ed58 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0xa49ec20 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0xa49e280 '__s' 'iter_type':'_OutIter')
    (CallExpr 0xa49ed28 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0xa49ec48 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa49ec84 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0xa49e280 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0xa49ec9c <col:32> 'class std::ios_base' lvalue ParmVar 0xa49e2d0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0xa49ecb4 <col:38> 'char_type':'_CharT' lvalue ParmVar 0xa49e310 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0xa49ed10 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0xa49ed00 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0xa49ece0 <col:37> 'const void *' lvalue ParmVar 0xa49e360 '__v' 'const void *')))))
  (CXXMemberCallExpr 0xa49ee00 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0xa49ede0 <col:7, col:12> '<bound member function type>' .flags 0xa3d9ea0
      (DeclRefExpr 0xa49ed70 <col:7> 'class std::ios_base' lvalue ParmVar 0xa49e2d0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0xa49ee20 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0xa49edc8 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49e4d0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0xa49ee48 <line:1178:7, col:14>
    (DeclRefExpr 0xa49ee2c <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0xa49e280 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0xa4a0ce0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0xa49f4f0 <line:1196:7, col:69>
    0xa49f420 "const size_t __plen =
      (CXXStaticCastExpr 0xa49f4d8 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0xa49f4c8 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0xa49f4a8 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0xa49f488 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa49f454 <col:49> 'streamsize':'int' lvalue ParmVar 0xa49f290 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0xa49f498 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0xa49f46c <col:60> 'streamsize':'int' lvalue ParmVar 0xa49f2d0 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0xa49f6b0 <line:1197:7, col:79>
    0xa49f530 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0xa49f688 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0xa49f678 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa49f660 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0xa3cdfb0 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0xa49f5e0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0xa49f5bc <col:43, col:48> '<bound member function type>' .flags 0xa3d9db0
            (ImplicitCastExpr 0xa49f600 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0xa49f564 <col:43> 'class std::ios_base' lvalue ParmVar 0xa49f130 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0xa49f650 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49f62c <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4620 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0xa49f9e8 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0xa49f758 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa49f738 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa49f718 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49f6c0 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49f530 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa49f748 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa49f728 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49f6f4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4260 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa49f9c8 <line:1201:2, line:1205:2>
      (CallExpr 0xa49f848 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa49f7d8 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0xa49f7fc <col:18> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
        (DeclRefExpr 0xa49f814 <col:26> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
        (DeclRefExpr 0xa49f82c <col:34> 'streamsize':'int' lvalue ParmVar 0xa49f2d0 '__oldlen' 'streamsize':'int'))
      (CallExpr 0xa49f990 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa49f898 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0xa49f938 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa49f8f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (DeclRefExpr 0xa49f8bc <col:20> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
          (DeclRefExpr 0xa49f8d4 <col:29> 'streamsize':'int' lvalue ParmVar 0xa49f2d0 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0xa49f95c <col:39> 'const size_t':'const unsigned int' lvalue Var 0xa49f420 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0xa49f974 <col:47> '_CharT' lvalue ParmVar 0xa49f170 '__fill' '_CharT'))
      (ReturnStmt 0xa49f9b8 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0xa49fa70 <line:1207:7, col:23>
    0xa49fa10 "size_t __mod =
      (ImplicitCastExpr 0xa49fa60 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa49fa48 <col:22> 'int' 0))")
  (IfStmt 0xa4a09d0 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0xa49fb18 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0xa49faf8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa49fad8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49fa80 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa49f530 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0xa49fb08 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa49fae8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0xa49fab4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4200 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0xa4a09b0 <line:1209:2, line:1234:2>
      (DeclStmt 0xa49fc10 <line:1213:11, col:49>
        0xa49fb70 "const std::locale &__loc =
          (CXXMemberCallExpr 0xa49fbe0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0xa49fbbc <col:33, col:38> '<bound member function type>' ._M_getloc 0xa3da7b0
              (ImplicitCastExpr 0xa49fc00 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0xa49fba4 <col:33> 'class std::ios_base' lvalue ParmVar 0xa49f130 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0xa49fe70 <line:1214:4, col:67>
        0xa49fcf0 "const ctype<_CharT> &__ctype =
          (CallExpr 0xa49fe50 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0xa49fdd0 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
            (DeclRefExpr 0xa49fe38 <col:61> 'const class std::locale' lvalue Var 0xa49fb70 '__loc' 'const class std::locale &'))")
      (IfStmt 0xa4a0990 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0xa4a0130 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa49ffb0 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0xa49ff50 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CallExpr 0xa49fee8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa49fe98 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa49fe80 <col:8> 'const ctype<_CharT>' lvalue Var 0xa49fcf0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa49fed0 <col:22> 'char'45))
            (ArraySubscriptExpr 0xa49ff38 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0xa49ff08 <col:30> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa49ff20 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0xa4a0108 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0xa4a00a8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CallExpr 0xa4a0040 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa49fff0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0xa49ffd4 <col:11> 'const ctype<_CharT>' lvalue Var 0xa49fcf0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0xa4a0028 <col:25> 'char'43))
            (ArraySubscriptExpr 0xa4a0090 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0xa4a0060 <col:33> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa4a0078 <col:40> 'int' 0))))
        (CompoundStmt 0xa4a0278 <line:1218:6, line:1222:6>
          (BinaryOperator 0xa4a01d8 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0xa4a0178 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0xa4a0148 <col:8> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
              (IntegerLiteral 0xa4a0160 <col:15> 'int' 0))
            (ArraySubscriptExpr 0xa4a01c0 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa4a018c <col:20> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
              (IntegerLiteral 0xa4a01a8 <col:27> 'int' 0)))
          (BinaryOperator 0xa4a0230 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa4a01f0 <col:8> 'size_t':'unsigned int' lvalue Var 0xa49fa10 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa4a0220 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa4a0208 <col:16> 'int' 1)))
          (UnaryOperator 0xa4a0260 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa4a0248 <col:10> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')))
        (IfStmt 0xa4a0970 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0xa4a0740 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0xa4a0448 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa4a03c8 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa4a0368 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                (CallExpr 0xa4a0300 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4a02b0 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4a0294 <col:13> 'const ctype<_CharT>' lvalue Var 0xa49fcf0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0xa4a02e8 <col:27> 'char'48))
                (ArraySubscriptExpr 0xa4a0350 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4a0320 <col:35> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
                  (IntegerLiteral 0xa4a0338 <col:42> 'int' 0)))
              (BinaryOperator 0xa4a0430 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0xa4a0420 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa4a03ec <col:9> 'streamsize':'int' lvalue ParmVar 0xa49f2d0 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0xa4a0408 <col:20> 'int' 1)))
            (ParenExpr 0xa4a0728 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0xa4a0710 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0xa4a0590 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4a0530 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (CallExpr 0xa4a04c8 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4a0478 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa4a0460 <col:10> 'const ctype<_CharT>' lvalue Var 0xa49fcf0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa4a04b0 <col:24> 'char'120))
                  (ArraySubscriptExpr 0xa4a0518 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4a04e8 <col:32> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa4a0500 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0xa4a06e8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0xa4a0688 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (CallExpr 0xa4a0620 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4a05d0 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0xa4a05b4 <col:13> 'const ctype<_CharT>' lvalue Var 0xa49fcf0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0xa4a0608 <col:27> 'char'88))
                  (ArraySubscriptExpr 0xa4a0670 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4a0640 <col:35> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
                    (IntegerLiteral 0xa4a0658 <col:42> 'int' 1))))))
          (CompoundStmt 0xa4a0950 <line:1227:6, line:1232:6>
            (BinaryOperator 0xa4a07e8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa4a0788 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa4a0758 <col:8> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
                (IntegerLiteral 0xa4a0770 <col:15> 'int' 0))
              (ArraySubscriptExpr 0xa4a07d0 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa4a079c <col:20> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa4a07b8 <col:27> 'int' 0)))
            (BinaryOperator 0xa4a0890 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0xa4a0830 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0xa4a0800 <col:8> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
                (IntegerLiteral 0xa4a0818 <col:15> 'int' 1))
              (ArraySubscriptExpr 0xa4a0878 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0xa4a0844 <col:20> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
                (IntegerLiteral 0xa4a0860 <col:27> 'int' 1)))
            (BinaryOperator 0xa4a08e8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0xa4a08a8 <col:8> 'size_t':'unsigned int' lvalue Var 0xa49fa10 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0xa4a08d8 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa4a08c0 <col:16> 'int' 2)))
            (CompoundAssignOperator 0xa4a0930 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa4a0900 <col:8> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
              (IntegerLiteral 0xa4a0918 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0xa4a0a88 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa4a0a18 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0xa4a0a3c <col:23> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
    (DeclRefExpr 0xa4a0a54 <col:31> 'const size_t':'const unsigned int' lvalue Var 0xa49f420 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0xa4a0a6c <col:39> '_CharT' lvalue ParmVar 0xa49f170 '__fill' '_CharT'))
  (CallExpr 0xa4a0cb8 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa4a0ad8 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0xa4a0b78 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa4a0b30 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (DeclRefExpr 0xa4a0afc <col:21> '_CharT *' lvalue ParmVar 0xa49f1e0 '__news' '_CharT *')
      (DeclRefExpr 0xa4a0b14 <col:30> 'const size_t':'const unsigned int' lvalue Var 0xa49f420 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0xa4a0c18 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa4a0bd0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (DeclRefExpr 0xa4a0b9c <col:38> 'const _CharT *' lvalue ParmVar 0xa49f250 '__olds' 'const _CharT *')
      (DeclRefExpr 0xa4a0bb4 <col:47> 'size_t':'unsigned int' lvalue Var 0xa49fa10 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0xa4a0ca0 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0xa4a0c90 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa4a0c70 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa4a0c3c <col:54> 'streamsize':'int' lvalue ParmVar 0xa49f2d0 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0xa4a0c80 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa4a0c54 <col:65> 'size_t':'unsigned int' lvalue Var 0xa49fa10 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0xa4a2000 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0xa4a1100 <line:1245:7, col:23>
    0xa4a10a0 "size_t __idx =
      (ImplicitCastExpr 0xa4a10f0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa4a10d8 <col:22> 'int' 0))")
  (DeclStmt 0xa4a1180 <line:1246:7, col:23>
    0xa4a1120 "size_t __ctr =
      (ImplicitCastExpr 0xa4a1170 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa4a1158 <col:22> 'int' 0))")
  (WhileStmt 0xa4a1760 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0xa4a1568 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0xa4a13e8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa4a12d0 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa4a1288 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (CXXOperatorCallExpr 0xa4a11f8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa4a11c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (DeclRefExpr 0xa4a1190 <col:14> 'const _CharT *' lvalue ParmVar 0xa4a0f30 '__last' 'const _CharT *')
            (DeclRefExpr 0xa4a11a8 <col:23> 'const _CharT *' lvalue ParmVar 0xa4a0ee0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0xa4a1270 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0xa4a1250 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa4a121c <col:33> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0xa4a1260 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa4a1234 <col:40> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0xa4a13d0 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0xa4a13c0 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0xa4a1390 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0xa4a1380 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0xa4a1370 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0xa4a1348 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0xa4a1328 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0xa4a12f4 <col:35> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0xa4a1338 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa4a130c <col:42> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0xa4a13a8 <col:52> 'int' 0)))
      (BinaryOperator 0xa4a1550 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0xa4a1520 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4a1510 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0xa4a1450 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0xa4a1430 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0xa4a1400 <col:10> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0xa4a1440 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa4a1418 <col:17> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0xa4a1540 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4a1530 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0xa4a14f0 <col:27, col:62> 'const char':'const char' lvalue Var 0xa47bc50 '__max' 'const char':'const char')))))
    (CompoundStmt 0xa4a1748 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0xa4a1600 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa4a1580 <col:4> 'const _CharT *' lvalue ParmVar 0xa4a0f30 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0xa4a15e8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0xa4a15c8 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0xa4a1598 <col:14> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0xa4a15d8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa4a15b0 <col:21> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0xa4a1728 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0xa4a16b0 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0xa4a16a0 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa4a1620 <col:4> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0xa4a1688 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0xa4a1668 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa4a1638 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0xa4a0e70 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa4a1678 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa4a1650 <col:22> 'int' 1))))
        (UnaryOperator 0xa4a16e0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa4a16c8 <col:28> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0xa4a1710 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0xa4a16f4 <col:38> 'size_t':'unsigned int' lvalue Var 0xa4a1120 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0xa4a1900 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4a1800 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa4a17a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (DeclRefExpr 0xa4a1774 <col:14> 'const _CharT *' lvalue ParmVar 0xa4a0ee0 '__first' 'const _CharT *')
      (DeclRefExpr 0xa4a178c <col:25> 'const _CharT *' lvalue ParmVar 0xa4a0f30 '__last' 'const _CharT *'))
    (BinaryOperator 0xa4a18e8 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa4a1870 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0xa4a1858 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa4a1824 <col:3> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))
      (UnaryOperator 0xa4a18d0 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0xa4a18b8 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0xa4a1884 <col:12> 'const _CharT *' lvalue ParmVar 0xa4a0ee0 '__first' 'const _CharT *')))))
  (WhileStmt 0xa4a1c60 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4a1948 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa4a1930 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa4a1914 <col:14> 'size_t':'unsigned int' lvalue Var 0xa4a1120 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0xa4a1c48 <line:1260:2, line:1264:2>
      (BinaryOperator 0xa4a19d0 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa4a19a0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa4a1988 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa4a1954 <col:5> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))
        (DeclRefExpr 0xa4a19b4 <col:13> '_CharT' lvalue ParmVar 0xa4a0de0 '__sep' '_CharT'))
      (ForStmt 0xa4a1c20 <line:1262:4, line:1263:23>
        (DeclStmt 0xa4a1aa0 <line:1262:9, col:33>
          0xa4a19f0 "char __i =
            (ImplicitCastExpr 0xa4a1a90 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa4a1a78 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa4a1a58 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa4a1a24 <col:20> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa4a1a68 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa4a1a3c <col:27> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa4a1b00 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa4a1af0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa4a1ae0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa4a1ab0 <col:35> 'char' lvalue Var 0xa4a19f0 '__i' 'char')))
          (IntegerLiteral 0xa4a1ac8 <col:41> 'int' 0))
        (UnaryOperator 0xa4a1b30 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa4a1b18 <col:46> 'char' lvalue Var 0xa4a19f0 '__i' 'char'))
        (BinaryOperator 0xa4a1c08 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa4a1b90 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa4a1b78 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa4a1b44 <col:7> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))
          (UnaryOperator 0xa4a1bf0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa4a1bd8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa4a1ba4 <col:16> 'const _CharT *' lvalue ParmVar 0xa4a0ee0 '__first' 'const _CharT *')))))))
  (WhileStmt 0xa4a1fc0 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4a1ca8 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0xa4a1c90 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0xa4a1c74 <col:14> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0xa4a1fa8 <line:1267:2, line:1271:2>
      (BinaryOperator 0xa4a1d30 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0xa4a1d00 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0xa4a1ce8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0xa4a1cb4 <col:5> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))
        (DeclRefExpr 0xa4a1d14 <col:13> '_CharT' lvalue ParmVar 0xa4a0de0 '__sep' '_CharT'))
      (ForStmt 0xa4a1f80 <line:1269:4, line:1270:23>
        (DeclStmt 0xa4a1e00 <line:1269:9, col:33>
          0xa4a1d50 "char __i =
            (ImplicitCastExpr 0xa4a1df0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0xa4a1dd8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0xa4a1db8 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0xa4a1d84 <col:20> 'const char *' lvalue ParmVar 0xa4a0e30 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0xa4a1dc8 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa4a1d9c <col:27> 'size_t':'unsigned int' lvalue Var 0xa4a10a0 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0xa4a1e60 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0xa4a1e50 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa4a1e40 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0xa4a1e10 <col:35> 'char' lvalue Var 0xa4a1d50 '__i' 'char')))
          (IntegerLiteral 0xa4a1e28 <col:41> 'int' 0))
        (UnaryOperator 0xa4a1e90 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0xa4a1e78 <col:46> 'char' lvalue Var 0xa4a1d50 '__i' 'char'))
        (BinaryOperator 0xa4a1f68 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0xa4a1ef0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0xa4a1ed8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa4a1ea4 <col:7> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))
          (UnaryOperator 0xa4a1f50 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0xa4a1f38 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0xa4a1f04 <col:16> 'const _CharT *' lvalue ParmVar 0xa4a0ee0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0xa4a1ff0 <line:1273:7, col:14>
    (DeclRefExpr 0xa4a1fd4 <col:14> '_CharT *' lvalue ParmVar 0xa4a0da0 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0xa4c6460 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0xa4c6400 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0xa4c6368 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa4c634c <col:12> 'const _Facet *' lvalue ParmVar 0xa4c6200 '__f' 'const _Facet *'))
    (CallExpr 0xa4c63e0 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0xa4c63d0 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4c63b4 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0xa13d930 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0xa4c6450 <line:51:7, col:15>
    (UnaryOperator 0xa4c6438 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa4c641c <col:15> 'const _Facet *' lvalue ParmVar 0xa4c6200 '__f' 'const _Facet *'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0xa4c94e0 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0xa4c94d0 <col:9, col:62>
    (ConditionalOperator 0xa4c94b0 <col:16, col:62> '<dependent type>'
      (CallExpr 0xa4c9420 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4c93e8 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa4c93d8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa4c9440 <col:31> 'int' 0)
      (CXXConstCastExpr 0xa4c9498 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0xa4c9458 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0xa4c9570 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0xa4c9560 <col:9, col:27>
    (CallExpr 0xa4c9540 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4c9508 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa4c94f8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0xa4c95c8 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0xa4c95b8 <col:9, col:16>
    (MemberExpr 0xa4c9598 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
      (CXXThisExpr 0xa4c9588 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0xa4c93b0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa4c9394 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0xa4c9730 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0xa4c9710 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4c95f0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4c95e0 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa4c96e8 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c96a8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3ce1e0 0xa3cf9e0 0xa3d2ae0)
      (CallExpr 0xa4c9670 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4c9638 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0xa4c9628 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa4c968c <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4c77f0 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0xa4c9908 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0xa4c97c8 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0xa4c9790 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3d3160)
    (MemberExpr 0xa4c9758 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
      (CXXThisExpr 0xa4c9748 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4c9778 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4c78b0 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0xa4c98e8 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4c98b0 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c9870 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa4c9838 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4c9800 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa4c97f0 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0xa4c9854 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4c78b0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0xa4c98d8 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0xa4c9a38 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0xa4c9a28 <col:9, col:35>
    (CXXOperatorCallExpr 0xa4c9a00 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c99a0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
      (CallExpr 0xa4c9968 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4c9930 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0xa4c9920 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa4c9988 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0xa4c9bf8 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0xa4c9be8 <col:9, col:46>
    (CXXOperatorCallExpr 0xa4c9bc0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c9b68 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (ParenExpr 0xa4c9b38 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa4c9b10 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa4c9ad0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CallExpr 0xa4c9a98 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4c9a60 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa4c9a50 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa4c9ab4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa4c9b50 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0xa4c9e58 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0xa4c9e48 <col:9, col:58>
    (CXXOperatorCallExpr 0xa4c9e20 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c9dc8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (ParenExpr 0xa4c9d98 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0xa4c9d70 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa4c9d30 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CallExpr 0xa4c9c58 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4c9c20 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa4c9c10 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0xa4c9d18 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0xa4c9cf0 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0xa4c9ce0 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4c9cc8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2ae0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0xa4c9ca8 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4c9c74 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0xa4c9cb8 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4c9c8c <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0xa4c9db0 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0xa4ca018 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0xa4ca008 <col:9, col:46>
    (CXXOperatorCallExpr 0xa4c9fe0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa4c9f88 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (ParenExpr 0xa4c9f58 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0xa4c9f30 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa4c9ef0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CallExpr 0xa4c9eb8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4c9e80 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0xa4c9e70 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0xa4c9ed4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0xa4c9f70 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0xa4ca070 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0xa4ca060 <col:9, col:16>
    (MemberExpr 0xa4ca040 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0xa3d5470
      (CXXThisExpr 0xa4ca030 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0xa4ca180 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0xa4ca0d0 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0xa4ca098 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa3d5470
      (CXXThisExpr 0xa4ca088 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4ca0b8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4c7bf0 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0xa4ca160 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4ca0f8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4ca0e8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa4ca140 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
      (CXXThisExpr 0xa4ca130 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0xa4ca1f8 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0xa4ca278 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa4ca2c8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0xa4ca318 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0xa4ca368 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0xa4ca3b8 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0xa4ca4a8 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0xa4ca488 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4ca438 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4ca428 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4ca46c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4c7de0 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0xa4ca4c0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0xa4ca510 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0xa4ca500 <col:9, col:16>
    (MemberExpr 0xa4ca4e0 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0xa4c70e0
      (CXXThisExpr 0xa4ca4d0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0xa4ca760 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0xa4ca6c8 <line:300:9, col:55>
    0xa4ca660 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0xa4ca6a8 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa4c70e0
        (CXXThisExpr 0xa4ca698 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa4ca720 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0xa4ca6e8 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa4c70e0
      (CXXThisExpr 0xa4ca6d8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4ca708 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0xa4c8370 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0xa4ca750 <line:302:9, col:16>
    (DeclRefExpr 0xa4ca738 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0xa4ca660 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0xa4ca7c0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0xa4ca7b0 <col:9, col:16>
    (MemberExpr 0xa4ca790 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0xa4c72d0
      (CXXThisExpr 0xa4ca780 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0xa4ca9c8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0xa4ca968 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0xa4ca818 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4ca808 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0xa4ca7e8 <col:7> '_Bool' lvalue ->_M_fill_init 0xa4c7170
          (CXXThisExpr 0xa4ca7d8 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0xa4ca950 <line:364:4, line:367:4>
      (BinaryOperator 0xa4ca8e0 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0xa4ca840 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0xa4c7130
          (CXXThisExpr 0xa4ca830 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4ca8c0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4ca870 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa4ca860 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0xa4ca8a8 <col:28> 'char'32)))
      (BinaryOperator 0xa4ca938 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0xa4ca908 <col:6> '_Bool' lvalue ->_M_fill_init 0xa4c7170
          (CXXThisExpr 0xa4ca8f8 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa4ca928 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0xa4ca9b8 <line:368:2, col:9>
    (MemberExpr 0xa4ca998 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0xa4c7130
      (CXXThisExpr 0xa4ca988 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0xa4cab28 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0xa4caa90 <line:383:2, col:32>
    0xa4ca9f0 "char_type __old =
      (CallExpr 0xa4caa70 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4caa38 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0xa4caa28 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0xa4caae8 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa4caab0 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0xa4c7130
      (CXXThisExpr 0xa4caaa0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4caad0 <col:12> 'char_type':'_CharT' lvalue ParmVar 0xa4c8c00 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0xa4cab18 <line:385:2, col:9>
    (DeclRefExpr 0xa4cab00 <col:9> 'char_type':'_CharT' lvalue Var 0xa4ca9f0 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0xa4cac70 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0xa4cac60 <col:9, col:60>
    (CallExpr 0xa4cac38 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4cabd0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa4cabb0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa4cab48 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
          (MemberExpr 0xa4cab90 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa4c7360
            (CXXThisExpr 0xa4cab80 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa4cac04 <col:47> 'char_type':'_CharT' lvalue ParmVar 0xa4c8dc0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0xa4cac1c <col:52> 'char' lvalue ParmVar 0xa4c8e00 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0xa4cad90 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0xa4cad80 <col:9, col:49>
    (CallExpr 0xa4cad60 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4cad10 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0xa4cacf0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa4cac88 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
          (MemberExpr 0xa4cacd0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0xa4c7360
            (CXXThisExpr 0xa4cacc0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa4cad44 <col:46> 'char' lvalue ParmVar 0xa4c8ef0 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0xa4cae08 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0xa4cae60 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0xa4caeb8 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0xa4caf08 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0xa4caf58 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0xa4cafa8 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0xa4caff8 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0xa4cb068 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0xa4c93b0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0xa4c9394 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0xa4cb8b0 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0xa4cb668 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0xa4cb500 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4cb4c8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0xa4cb4b8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0xa4cb568 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0xa4cb530 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
        (CXXThisExpr 0xa4cb520 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4cb550 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4cb3d0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0xa4cb650 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0xa4cb590 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
        (CXXThisExpr 0xa4cb580 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa4cb628 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa4cb618 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4cb600 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2ae0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa4cb5e0 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa4cb5b0 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0xa4cb3d0 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0xa4cb5f0 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa4cb5c8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0xa4cb890 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4cb798 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa4cb758 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa4cb6d0 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4cb698 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa4cb688 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa4cb738 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4cb700 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa4cb6f0 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0xa4cb860 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0xa4cb850 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa4cb834 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13e230 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa4cb880 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa4cb820 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0xa4cb7f4 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa4cc258 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0xa4cc158 <line:55:7, col:61>
    0xa4cc0f0 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0xa4cc138 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa4c72d0
        (CXXThisExpr 0xa4cc128 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0xa4cc1b0 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa4cc178 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa4c72d0
      (CXXThisExpr 0xa4cc168 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4cc198 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4cbd70 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0xa4cc210 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4cc1d8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa4cc1c8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa4cc248 <line:58:7, col:14>
    (DeclRefExpr 0xa4cc22c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0xa4cc0f0 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0xa4d3990 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0xa4d3938 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4d2638 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa4d25e0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (CXXThisExpr 0xa4d2558 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0xa4d25c0 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d2580 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (DeclRefExpr 0xa4d2568 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0xa4d38d8 <line:68:2, line:107:2>
      (DeclStmt 0xa4d2a40 <line:73:4, line:74:69>
        0xa4d2670 "std::ios_base::_Words *__words =
          (ConditionalOperator 0xa4d2a20 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0xa4d2780 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0xa4d2758 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa4d2710 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
                (CXXDependentScopeMemberExpr 0xa4d26c0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4d26a4 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0xa4d26f4 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0xa3d9540 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0xa4d27a8 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa3d9670
              (CXXThisExpr 0xa4d2798 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0xa4d29e0 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0xa4d27e0 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0xa4d27c8 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0xa4d2ae8 <line:77:4, col:45>
        0xa4d2a60 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0xa4d2ab0 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d2a94 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0xa4d2b98 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0xa4d2b20 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0xa4d2b10 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0xa4d2af8 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa4d2a60 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0xa4d2b78 <line:79:6, col:29> 'void'
          (MemberExpr 0xa4d2b54 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0xa3d59a0
            (ImplicitCastExpr 0xa4d2b48 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0xa4d2b2c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa4d2a60 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0xa4d2c00 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0xa4d2bc8 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa3d5b70
          (CXXThisExpr 0xa4d2bb8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4d2be8 <col:22> 'enum std::ios_base::event' EnumConstant 0xa3d4f30 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0xa4d2dc0 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa4d2cd8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0xa4d2c80 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (MemberExpr 0xa4d2c30 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
            (CXXThisExpr 0xa4d2c20 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0xa4d2c60 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0xa3d9670
            (CXXThisExpr 0xa4d2c50 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0xa4d2da8 <line:82:6, line:85:6>
          (CXXDeleteExpr 0xa4d2d30 <line:83:8, col:18> 'void'
            (MemberExpr 0xa4d2d10 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
              (CXXThisExpr 0xa4d2d00 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0xa4d2d90 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0xa4d2d58 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
              (CXXThisExpr 0xa4d2d48 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa4d2d78 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0xa4d2e10 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0xa4d2df0 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0xa3d5c30
          (CXXThisExpr 0xa4d2de0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0xa4d2e78 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0xa4d2e40 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0xa3d5a90
          (CXXThisExpr 0xa4d2e30 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4d2e60 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0xa4d2a60 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0xa4d3108 <line:90:4, line:91:38>
        (DeclStmt 0xa4d2ef0 <line:90:9, col:20>
          0xa4d2ea0 "int __i =
            (IntegerLiteral 0xa4d2ed8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa4d2fb0 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0xa4d2f68 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
          (DeclRefExpr 0xa4d2f00 <col:22> 'int' lvalue Var 0xa4d2ea0 '__i' 'int')
          (CXXDependentScopeMemberExpr 0xa4d2f30 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d2f18 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0xa4d2ff0 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0xa4d2fd4 <col:50> 'int' lvalue Var 0xa4d2ea0 '__i' 'int'))
        (BinaryOperator 0xa4d30f0 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0xa4d3058 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0xa4d3038 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0xa4d3004 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0xa4d2670 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0xa4d3048 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0xa4d301c <col:14> 'int' lvalue Var 0xa4d2ea0 '__i' 'int')))
          (ArraySubscriptExpr 0xa4d30d8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa4d3088 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0xa4d306c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0xa4d30bc <col:35> 'int' lvalue Var 0xa4d2ea0 '__i' 'int'))))
      (BinaryOperator 0xa4d3178 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0xa4d3140 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0xa3d9710
          (CXXThisExpr 0xa4d3130 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4d3160 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0xa4d2670 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0xa4d3210 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0xa4d31a0 <col:4> 'int' lvalue ->_M_word_size 0xa3d96b0
          (CXXThisExpr 0xa4d3190 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0xa4d31d8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa4d31c0 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0xa4d32e0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d3238 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d3228 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d32c0 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3288 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d326c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa4d33b8 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d3310 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d3300 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d3398 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3360 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d3344 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa4d3490 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d33e8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d33d8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d3470 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3438 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d341c <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa4d3568 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d34c0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d34b0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d3548 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3510 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d34f4 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa4d3640 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d3598 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d3588 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d3620 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d35e8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d35cc <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0xa4d3700 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0xa4d3670 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0xa3d98a0
          (CXXThisExpr 0xa4d3660 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d36e0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d36a8 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d3690 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0xa4d3778 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0xa4d3728 <col:4> '<bound member function type>' ->_M_cache_locale 0xa4c9330
          (CXXThisExpr 0xa4d3718 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0xa4d3758 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0xa3d98a0
          (CXXThisExpr 0xa4d3748 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0xa4d37e0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0xa4d37a8 <col:4> '<bound member function type>' ->_M_call_callbacks 0xa3d5b70
          (CXXThisExpr 0xa4d3798 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4d37c8 <col:22> 'enum std::ios_base::event' EnumConstant 0xa3d4fb0 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0xa4d38b8 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d3810 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d3800 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0xa4d3898 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3860 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0xa4d3844 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0xa4d2310 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0xa4d3980 <line:108:7, col:15>
    (UnaryOperator 0xa4d3968 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4d3958 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0xa4d4170 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0xa4d3e00 <line:116:7, col:35>
    0xa4d3d40 "std::locale __old =
      (ParenListExpr 0xa4d3de0 <col:19, col:34> 'class std::locale'
        (CallExpr 0xa4d3dc0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d3d88 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa4d3d78 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0xa4d3e90 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0xa4d3e48 <col:7, col:17> '<bound member function type>' ->imbue 0xa3da680
      (CXXThisExpr 0xa4d3e38 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4d3e74 <col:23> 'const class std::locale' lvalue ParmVar 0xa4d3c50 '__loc' 'const class std::locale &'))
  (CallExpr 0xa4d3ef8 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0xa4d3ec0 <col:7> '<bound member function type>' ->_M_cache_locale 0xa4c9330
      (CXXThisExpr 0xa4d3eb0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4d3ee0 <col:23> 'const class std::locale' lvalue ParmVar 0xa4d3c50 '__loc' 'const class std::locale &'))
  (IfStmt 0xa4d40f0 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa4d3ff0 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa4d3f98 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (CallExpr 0xa4d3f60 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4d3f28 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa4d3f18 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0xa4d3f80 <col:28> 'int' 0))
    (CallExpr 0xa4d40d0 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4d4080 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0xa4d4060 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4d4028 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0xa4d4018 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0xa4d40b4 <col:26> 'const class std::locale' lvalue ParmVar 0xa4d3c50 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0xa4d4160 <line:121:7, col:14>
    (CXXConstructExpr 0xa4d4138 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0xa4d4128 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0xa4d410c <col:14> 'class std::locale' lvalue Var 0xa4d3d40 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0xa4d4a10 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0xa4d46e0 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0xa4d46b0 <col:7, col:17> '<bound member function type>' ->_M_init 0xa3d98f0
      (CXXThisExpr 0xa4d46a0 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0xa4d4760 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0xa4d4710 <col:7> '<bound member function type>' ->_M_cache_locale 0xa4c9330
      (CXXThisExpr 0xa4d4700 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0xa4d4740 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0xa3d98a0
      (CXXThisExpr 0xa4d4730 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0xa4d47d0 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0xa4d4790 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0xa4c7130
      (CXXThisExpr 0xa4d4780 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0xa4d47b8 <col:17, col:24> '_CharT'))
  (BinaryOperator 0xa4d4828 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa4d47f8 <col:7> '_Bool' lvalue ->_M_fill_init 0xa4c7170
      (CXXThisExpr 0xa4d47e8 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0xa4d4818 <col:22> '_Bool' false))
  (BinaryOperator 0xa4d4888 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0xa4d4850 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0xa4c70e0
      (CXXThisExpr 0xa4d4840 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa4d4870 <col:16> 'int' 0))
  (BinaryOperator 0xa4d48e8 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa4d48b0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0xa3d5470
      (CXXThisExpr 0xa4d48a0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4d48d0 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0xa4d4948 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0xa4d4910 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0xa4c72d0
      (CXXThisExpr 0xa4d4900 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4d4930 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4d4560 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0xa4d49f8 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0xa4d4970 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0xa3d54b0
      (CXXThisExpr 0xa4d4960 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0xa4d49d8 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0xa4d4990 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa4d4560 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0xa4d49a8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0xa4d49c0 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0xa4d5620 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0xa4d5070 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0xa4d4e98 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0xa4d4dc4 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa4d4e68 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d4de8 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0xa3c2c90)
        (DeclRefExpr 0xa4d4e50 <col:52> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa4d4e88 <col:60> '_Bool' true))
    (BinaryOperator 0xa4d4ff8 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0xa4d4ed0 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa4c7360
        (CXXThisExpr 0xa4d4ec0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa4d4fd8 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d4f98 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CallExpr 0xa4d4f78 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa4d4ef8 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4d4f60 <col:38> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa4d5058 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0xa4d5020 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0xa4c7360
        (CXXThisExpr 0xa4d5010 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa4d5040 <col:13> 'int' 0)))
  (IfStmt 0xa4d5338 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0xa4d5160 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa4d508c <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa4d5130 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d50b0 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa3c2c90)
        (DeclRefExpr 0xa4d5118 <col:54> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa4d5150 <col:62> '_Bool' true))
    (BinaryOperator 0xa4d52c0 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa4d5198 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa4c73f0
        (CXXThisExpr 0xa4d5188 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa4d52a0 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d5260 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CallExpr 0xa4d5240 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa4d51c0 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4d5228 <col:42> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa4d5320 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa4d52e8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0xa4c73f0
        (CXXThisExpr 0xa4d52d8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa4d5308 <col:15> 'int' 0)))
  (IfStmt 0xa4d5600 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0xa4d5428 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0xa4d5354 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (CallExpr 0xa4d53f8 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d5378 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0xa3c2c90)
        (DeclRefExpr 0xa4d53e0 <col:54> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0xa4d5418 <col:62> '_Bool' true))
    (BinaryOperator 0xa4d5588 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0xa4d5460 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa4c7480
        (CXXThisExpr 0xa4d5450 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0xa4d5568 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa4d5528 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CallExpr 0xa4d5508 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0xa4d5488 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
          (DeclRefExpr 0xa4d54f0 <col:42> 'const class std::locale' lvalue ParmVar 0xa4d4ce0 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0xa4d55e8 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0xa4d55b0 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0xa4c7480
        (CXXThisExpr 0xa4d55a0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0xa4d55d0 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0xa4deab8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0xa4dea98 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4dea48 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4dea38 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa4dea7c <col:20> '__streambuf_type *' lvalue ParmVar 0xa4dc6b0 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa4dead0 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0xa4deb50 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0xa4deb40 <line:114:2, col:19>
    (CallExpr 0xa4deb20 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0xa4deae0 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0xa4dca70 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0xa4deb08 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa4deaf8 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa4dec00 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0xa4deba8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa4deb64 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa4dcce0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa4deb90 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4deb80 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa4debf0 <line:124:2, col:10>
    (UnaryOperator 0xa4debd8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4debc8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa4decb0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0xa4dec58 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa4dec18 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa4dcec0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa4dec40 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4dec30 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa4deca0 <line:134:2, col:10>
    (UnaryOperator 0xa4dec88 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4dec78 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0xa4ded60 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0xa4ded50 <col:9, col:29>
    (CallExpr 0xa4ded30 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4decd8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4ded14 <col:26> 'long' lvalue ParmVar 0xa4dcfe0 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0xa4dee10 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0xa4dee00 <col:9, col:29>
    (CallExpr 0xa4dede0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4ded88 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4dedc4 <col:26> 'unsigned long' lvalue ParmVar 0xa4dd100 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0xa4deec0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0xa4deeb0 <col:9, col:29>
    (CallExpr 0xa4dee90 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4dee38 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4dee74 <col:26> '_Bool' lvalue ParmVar 0xa4dd210 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0xa4defb8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0xa4defa8 <line:185:2, col:50>
    (CallExpr 0xa4def88 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa4deee8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa4def70 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa4def60 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa4def50 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0xa4def24 <col:46> 'unsigned short' lvalue ParmVar 0xa4dd450 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0xa4df0b0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0xa4df0a0 <line:196:2, col:50>
    (CallExpr 0xa4df080 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0xa4defe0 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa4df068 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0xa4df058 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0xa4df048 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa4df01c <col:46> 'unsigned int' lvalue ParmVar 0xa4dd690 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0xa4df160 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0xa4df150 <col:9, col:29>
    (CallExpr 0xa4df130 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df0d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4df114 <col:26> 'long long' lvalue ParmVar 0xa4dd7b0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0xa4df210 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0xa4df200 <col:9, col:29>
    (CallExpr 0xa4df1e0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df188 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4df1c4 <col:26> 'unsigned long long' lvalue ParmVar 0xa4dd8d0 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0xa4df2c0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0xa4df2b0 <col:9, col:29>
    (CallExpr 0xa4df290 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df238 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4df274 <col:26> 'double' lvalue ParmVar 0xa4dd9f0 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0xa4df3b8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0xa4df3a8 <line:218:2, col:43>
    (CallExpr 0xa4df388 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df2e8 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0xa4df370 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0xa4df360 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0xa4df350 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0xa4df324 <col:39> 'float' lvalue ParmVar 0xa4ddb10 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0xa4df468 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0xa4df458 <col:9, col:29>
    (CallExpr 0xa4df438 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df3e0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4df41c <col:26> 'long double' lvalue ParmVar 0xa4ddc30 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0xa4df518 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0xa4df508 <col:9, col:29>
    (CallExpr 0xa4df4e8 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa4df490 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa4df4cc <col:26> 'const void *' lvalue ParmVar 0xa4ddd50 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0xa4df7b0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0xa4df670 <line:290:2, col:57>
    0xa4df540 "const streamsize __put =
      (CallExpr 0xa4df648 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4df5e0 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0xa4df5c0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4df588 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0xa4df578 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0xa4df614 <col:48> 'const char_type *' lvalue ParmVar 0xa4de0e0 '__s' 'const char_type *')
        (DeclRefExpr 0xa4df62c <col:53> 'streamsize':'int' lvalue ParmVar 0xa4de120 '__n' 'streamsize':'int'))")
  (IfStmt 0xa4df790 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0xa4df6d0 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0xa4df6b0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa4df680 <col:6> 'const streamsize':'const int' lvalue Var 0xa4df540 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0xa4df6c0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa4df698 <col:15> 'streamsize':'int' lvalue ParmVar 0xa4de120 '__n' 'streamsize':'int')))
    (CallExpr 0xa4df770 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4df6f8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa4df6e8 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4df74c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0xa4df848 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0xa4df828 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa4df7d8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa4df7c8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa4df810 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0xa4e0660 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0xa4e0640 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0xa4e02f0 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0xa4e01f8 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0xa4e01d0 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa4e0190 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CallExpr 0xa4e0130 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4e00f8 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0xa4e00d8 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa4dfcb0
                (CXXThisExpr 0xa4e00c8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0xa4e016c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4560 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0xa4e02d8 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0xa4e02b8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0xa4e02a8 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4e024c <col:50> '_Bool (void) throw()' lvalue Function 0xa1eb950 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0xa4e0628 <line:410:4, line:414:4>
      (IfStmt 0xa4e0608 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0xa4e0528 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0xa4e0370 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4e0338 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0xa4e0318 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa4dfcb0
                (CXXThisExpr 0xa4e0308 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0xa4e0500 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa4e04a0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CallExpr 0xa4e0450 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa4e0418 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0xa4e03f8 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4e03c0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0xa4e03a0 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa4dfcb0
                      (CXXThisExpr 0xa4e0390 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0xa4e0488 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0xa4e0470 <col:56> 'int' 1))))
        (CallExpr 0xa4e05e8 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e0570 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0xa4e0550 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0xa4dfcb0
              (CXXThisExpr 0xa4e0540 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0xa4e05c4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0xa4e06d8 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0xa4e06c8 <col:9, col:16>
    (MemberExpr 0xa4e06a8 <col:16> 'const _Bool' lvalue ->_M_ok 0xa4dfb50
      (CXXThisExpr 0xa4e0698 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0xa4e0c88 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0xa4e0c78 <col:7, col:45>
    (CallExpr 0xa4e0c50 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa4e0b70 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
      (DeclRefExpr 0xa4e0ba4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e09b0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0xa4e0c18 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e0bd8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (DeclRefExpr 0xa4e0bbc <col:39> '_CharT' lvalue ParmVar 0xa4e09f0 '__c' '_CharT'))
      (IntegerLiteral 0xa4e0c38 <col:44> 'int' 1))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0xa4e1250 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0xa4e1240 <col:7, col:40>
    (ParenExpr 0xa4e1228 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0xa4e1200 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e11c0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa4e10f0 0xa4e0b40 0xa32cca0)
        (DeclRefExpr 0xa4e1120 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e0f60 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0xa4e11a0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e1150 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0xa4e1138 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e0f60 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa4e1184 <col:36> 'char' lvalue ParmVar 0xa4e0fa0 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0xa4e17e0 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0xa4e17d0 <col:7, col:45>
    (CallExpr 0xa4e17a8 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0xa4e1710 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
      (DeclRefExpr 0xa4e1744 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e1550 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0xa4e1778 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0xa4e175c <col:39> 'char' lvalue ParmVar 0xa4e1590 '__c' 'char'))
      (IntegerLiteral 0xa4e1790 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0xa4e1d48 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0xa4e1d38 <col:7, col:46>
    (ParenExpr 0xa4e1d20 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa4e1cf8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e1cb0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa4e1c10 0xa4e16e0 0xa4e10f0 0xa4e0b40 0xa32cca0)
        (DeclRefExpr 0xa4e1c40 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e1a70 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa4e1c98 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa4e1c88 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa4e1c78 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0xa4e1c58 <col:42> 'signed char' lvalue ParmVar 0xa4e1ac0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0xa4e4a28 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0xa4e4a18 <col:7, col:46>
    (ParenExpr 0xa4e4a00 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0xa4e49d8 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e4990 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa4e48f0 0xa4e1c10 0xa4e16e0 0xa4e10f0 0xa4e0b40 0xa32cca0)
        (DeclRefExpr 0xa4e4920 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e4750 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0xa4e4978 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0xa4e4968 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0xa4e4958 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0xa4e4938 <col:42> 'unsigned char' lvalue ParmVar 0xa4e47a0 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0xa4e5150 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0xa4e5108 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0xa4e4f08 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0xa4e4ef0 <col:12> 'const _CharT *' lvalue ParmVar 0xa4e4d70 '__s' 'const _CharT *'))
    (CallExpr 0xa4e4fb0 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e4f38 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e4f1c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e4d00 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa4e4f8c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa4e50e0 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa4e4fd0 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
      (DeclRefExpr 0xa4e5004 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e4d00 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0xa4e501c <col:26> 'const _CharT *' lvalue ParmVar 0xa4e4d70 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0xa4e50c8 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa4e50a0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa4e5060 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa4e5084 <col:45> 'const _CharT *' lvalue ParmVar 0xa4e4d70 '__s' 'const _CharT *')))))
  (ReturnStmt 0xa4e5140 <line:499:7, col:14>
    (DeclRefExpr 0xa4e5124 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e4d00 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0xa4e5cc0 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0xa4e5c78 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0xa4e5a78 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4e5a68 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa4e5a58 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa4e5a40 <col:12> 'const char *' lvalue ParmVar 0xa4e58c0 '__s' 'const char *'))))
    (CallExpr 0xa4e5b20 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e5aa8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e5a8c <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e5870 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0xa4e5afc <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0xa4e5c50 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0xa4e5b40 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
      (DeclRefExpr 0xa4e5b74 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e5870 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0xa4e5b8c <col:26> 'const char *' lvalue ParmVar 0xa4e58c0 '__s' 'const char *')
      (CXXStaticCastExpr 0xa4e5c38 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0xa4e5c10 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa4e5bd0 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0xa4e5bf4 <col:45> 'const char *' lvalue ParmVar 0xa4e58c0 '__s' 'const char *')))))
  (ReturnStmt 0xa4e5cb0 <line:516:7, col:14>
    (DeclRefExpr 0xa4e5c94 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e5870 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0xa4e6250 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0xa4e6240 <col:7, col:58>
    (ParenExpr 0xa4e6228 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa4e6200 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e61a8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa4e6110 0xa4e5a10 0xa4e55d0 0xa4e4ec0 0xa4e48f0 0xa4e1c10 0xa4e16e0 0xa4e10f0 0xa4e0b40 0xa32cca0)
        (DeclRefExpr 0xa4e6140 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e5f50 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa4e6190 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa4e6180 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0xa4e6158 <col:54> 'const signed char *' lvalue ParmVar 0xa4e5fc0 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0xa4e67e8 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0xa4e67d8 <col:7, col:58>
    (ParenExpr 0xa4e67c0 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0xa4e6798 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e6738 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa4e66a0 0xa4e6110 0xa4e5a10 0xa4e55d0 0xa4e4ec0 0xa4e48f0 0xa4e1c10 0xa4e16e0 0xa4e10f0 0xa4e0b40 0xa32cca0)
        (DeclRefExpr 0xa4e66d0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0xa4e64e0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa4e6720 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0xa4e6710 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa4e66e8 <col:54> 'const unsigned char *' lvalue ParmVar 0xa4e6550 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa4e6d98 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0xa4e6d88 <col:7, col:46>
    (CallExpr 0xa4e6d68 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa4e6c40 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0xa4e6d48 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4e6c88 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa4e6c70 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e6ac0 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0xa4e6d28 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e6cd8 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0xa4e6cbc <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e6ac0 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0xa4e6d10 <col:40> 'char'10))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa4e7270 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0xa4e7260 <col:7, col:31>
    (CallExpr 0xa4e7240 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e71e8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e71cc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7070 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0xa4e7228 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0xa4e7730 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0xa4e7720 <col:7, col:25>
    (CallExpr 0xa4e7700 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e76c8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e76ac <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7550 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0xa4e7e68 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0xa4e7eb8 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0xa4e8288 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0xa4e80d0 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0xa4e7ff0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0xa4e7f60 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4e7f28 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa4e7f10 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0xa4e7fd0 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4e7f98 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa4e7f7c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0xa4e80b0 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e8078 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0xa4e8058 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e8020 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0xa4e8008 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0xa4e8268 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0xa4e8140 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e8108 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e80ec <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0xa4e81a0 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa4e8170 <col:2> '_Bool' lvalue ->_M_ok 0xa4dfb50
        (CXXThisExpr 0xa4e8160 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0xa4e8190 <col:10> '_Bool' true))
    (CallExpr 0xa4e8248 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4e81d0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa4e81b8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4e7d40 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa4e8224 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0xa4e9218 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0xa4e89c0 <line:67:2, col:22>
    0xa4e8940 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa4e89a0 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa4e8988 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4e8978 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa4e91c0 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0xa4e89d0 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0xa4e8940 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa4e9198 <line:69:4, line:86:4>
      (DeclStmt 0xa4e8aa8 <line:70:6, col:49>
        0xa4e8a20 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa4e8a98 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa4e8a74 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa4e8eb0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4e8ab8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa4e8e98 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0xa4e8c08 <line:73:3, col:63>
            0xa4e8b30 "const __num_put_type &__np =
              (CallExpr 0xa4e8be8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa4e8b68 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
                (CXXDependentScopeMemberExpr 0xa4e8bb0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4e8ba0 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa4e8e78 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0xa4e8da0 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa4e8d68 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0xa4e8d38 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4e8c30 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0xa4e8c18 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa4e8b30 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0xa4e8c78 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa4e8c68 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0xa4e8ca0 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0xa4e8c90 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0xa4e8d00 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4e8cc8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa4e8cb8 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0xa4e8d1c <col:44> '_ValueT' lvalue ParmVar 0xa4e8680 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0xa4e8e50 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4e8e40 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4e8e28 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa4e8dbc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4e8a20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa4e8e18 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4e8df4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa4e8fb0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4e8ed0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4e8f98 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0xa4e8f68 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4e8ef0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa4e8ee0 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4e8f44 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa4e8f88 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0xa4e90a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4e8fd0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4e9088 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0xa4e9068 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4e8ff0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa4e8fe0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4e9044 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa4e9178 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa4e90e8 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa4e90d8 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa4e90bc <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4e8a20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa4e9158 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e9108 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa4e90f8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa4e913c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4e8a20 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa4e9208 <line:87:2, col:10>
    (UnaryOperator 0xa4e91f0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4e91e0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0xa4e9d28 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0xa4e9988 <line:97:7, col:75>
    0xa4e9840 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa4e9960 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa4e9920 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CallExpr 0xa4e98c0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4e9888 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa4e9878 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa4e98fc <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa4e9d08 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0xa4e9af8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa4e9a30 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa4e9a10 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4e99f0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4e9998 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4e9840 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa4e9a20 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4e9a00 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4e99cc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa4e9ae0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa4e9ac0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4e9aa0 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4e9a48 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4e9840 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa4e9ad0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4e9ab0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4e9a7c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa4e9c18 <line:99:2, col:70>
      (CallExpr 0xa4e9bf8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0xa4e9b20 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa4e9be0 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa4e9bd0 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa4e9ba8 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0xa4e9b98 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0xa4e9b88 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0xa4e9b5c <col:65> 'short' lvalue ParmVar 0xa4e95c0 '__n' 'short'))))))))
    (ReturnStmt 0xa4e9cf8 <line:101:2, col:41>
      (CallExpr 0xa4e9cd8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa4e9c38 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa4e9cc0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa4e9cb0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa4e9ca0 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0xa4e9c74 <col:37> 'short' lvalue ParmVar 0xa4e95c0 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0xa4ea828 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0xa4ea488 <line:111:7, col:75>
    0xa4ea340 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0xa4ea460 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa4ea420 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CallExpr 0xa4ea3c0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4ea388 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa4ea378 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0xa4ea3fc <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4680 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0xa4ea808 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0xa4ea5f8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0xa4ea530 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa4ea510 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4ea4f0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4ea498 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4ea340 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa4ea520 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4ea500 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4ea4cc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d42c0 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0xa4ea5e0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0xa4ea5c0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4ea5a0 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4ea548 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa4ea340 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0xa4ea5d0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa4ea5b0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0xa4ea57c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d41a0 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0xa4ea718 <line:113:2, col:68>
      (CallExpr 0xa4ea6f8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0xa4ea620 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa4ea6e0 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa4ea6d0 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0xa4ea6a8 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0xa4ea698 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0xa4ea688 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa4ea65c <col:63> 'int' lvalue ParmVar 0xa4ea0c0 '__n' 'int'))))))))
    (ReturnStmt 0xa4ea7f8 <line:115:2, col:41>
      (CallExpr 0xa4ea7d8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0xa4ea738 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0xa4ea7c0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0xa4ea7b0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0xa4ea7a0 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0xa4ea774 <col:37> 'int' lvalue ParmVar 0xa4ea0c0 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0xa4eb618 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0xa4eaec8 <line:123:7, col:50>
    0xa4eae40 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa4eaeb8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4eae94 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa4eaf60 <line:124:7, col:27>
    0xa4eaee0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa4eaf40 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa4eaf28 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4eaf18 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa4eb4e8 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0xa4eafa0 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa4eaf70 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0xa4eaee0 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0xa4eaf88 <col:21> '__streambuf_type *' lvalue ParmVar 0xa4eabc0 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0xa4eb3c0 <line:126:2, line:139:2>
      (IfStmt 0xa4eb1b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4eafb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa4eb198 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0xa4eb178 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0xa4eb0a8 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0xa4eb080 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0xa4eafc8 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa407fc0)
                (DeclRefExpr 0xa4eaffc <col:31> '__streambuf_type *' lvalue ParmVar 0xa4eabc0 '__sbin' '__streambuf_type *')
                (CallExpr 0xa4eb060 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4eb028 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0xa4eb018 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0xa4eb150 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4eb140 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4eb128 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa4eb0bc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4eae40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa4eb118 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4eb0f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa4eb2b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4eb1d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4eb298 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0xa4eb268 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4eb1f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4eb1e0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4eb244 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa4eb288 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0xa4eb3a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4eb2d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4eb388 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0xa4eb368 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4eb2f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4eb2e0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4eb344 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa4eb4c8 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0xa4eb3f8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa4eb3dc <col:17> '__streambuf_type *' lvalue ParmVar 0xa4eabc0 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa4eb4a0 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa4eb490 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa4eb478 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa4eb40c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4eae40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa4eb468 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa4eb444 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa4eb5c0 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4eb530 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa4eb520 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4eb504 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4eae40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa4eb5a0 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4eb550 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa4eb540 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4eb584 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4eae40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa4eb608 <line:144:7, col:15>
    (UnaryOperator 0xa4eb5f0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4eb5e0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0xa4ec470 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0xa4ebc90 <line:158:7, col:27>
    0xa4ebc10 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa4ebc70 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa4ebc58 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4ebc48 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa4ec418 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0xa4ebca0 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0xa4ebc10 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa4ec3f0 <line:160:2, line:177:2>
      (DeclStmt 0xa4ebd78 <line:161:4, col:47>
        0xa4ebcf0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa4ebd68 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa4ebd44 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa4ec108 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4ebd88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa4ec0f0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0xa4ebed0 <line:164:8, col:56>
            0xa4ebdc0 "const int_type __put =
              (CallExpr 0xa4ebeb0 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4ebe60 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa4ebe40 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4ebe08 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0xa4ebdf8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa4ebe94 <col:52> 'char_type':'_CharT' lvalue ParmVar 0xa4eb9c0 '__c' 'char_type':'_CharT'))")
          (IfStmt 0xa4ec0d0 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0xa4ebff0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa4ebf28 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa4ebf5c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa4ebdc0 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0xa4ebfd0 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4ebf98 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa4ec0a8 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4ec098 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4ec080 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa4ec014 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4ebcf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa4ec070 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4ec04c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa4ec208 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4ec128 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4ec1f0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0xa4ec1c0 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4ec148 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4ec138 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4ec19c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa4ec1e0 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0xa4ec2f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4ec228 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4ec2e0 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0xa4ec2c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4ec248 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4ec238 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4ec29c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa4ec3d0 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa4ec340 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa4ec330 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa4ec314 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4ebcf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa4ec3b0 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa4ec360 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa4ec350 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa4ec394 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4ebcf0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa4ec460 <line:178:7, col:15>
    (UnaryOperator 0xa4ec448 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4ec438 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0xa4f17b0 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0xa4f1450 <line:193:7, col:27>
    0xa4f13d0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0xa4f1430 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0xa4f1418 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa4f1408 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0xa4f1758 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0xa4f1460 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0xa4f13d0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0xa4f1738 <line:195:2, line:205:2>
      (IfStmt 0xa4f1528 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f1478 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa4f1510 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0xa4f14e8 <col:8, col:25> '<dependent type>'
            (MemberExpr 0xa4f1498 <col:8> '<bound member function type>' ->_M_write 0xa4de1c0
              (CXXThisExpr 0xa4f1488 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4f14b8 <col:17> 'const _CharT *' lvalue ParmVar 0xa4f1140 '__s' 'const _CharT *')
            (DeclRefExpr 0xa4f14d0 <col:22> 'streamsize':'int' lvalue ParmVar 0xa4f1180 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0xa4f1628 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f1548 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4f1610 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0xa4f15e0 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f1568 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f1558 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4f15bc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa4f1600 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0xa4f1718 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f1648 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4f1700 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0xa4f16e0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f1668 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f1658 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa4f16bc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa4f17a0 <line:206:7, col:15>
    (UnaryOperator 0xa4f1788 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4f1778 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0xa4f2410 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0xa4f1de8 <line:217:7, col:50>
    0xa4f1d60 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa4f1dd8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f1db4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa4f20f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f1df8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4f20d8 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0xa4f20b8 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0xa4f1fe8 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0xa4f1e50 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f1e18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f1e08 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0xa4f1fc0 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0xa4f1f60 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
            (CallExpr 0xa4f1f10 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa4f1ed8 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0xa4f1eb8 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa4f1e80 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0xa4f1e70 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0xa4f1f48 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0xa4f1f30 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0xa4f2090 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0xa4f2080 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa4f2068 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0xa4f2000 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f1d60 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0xa4f2058 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa4f2034 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa4f21f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f2110 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f21d8 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0xa4f21a8 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f2130 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f2120 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f2184 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa4f21c8 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0xa4f22e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f2210 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f22c8 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0xa4f22a8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f2230 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f2220 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f2284 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa4f23b8 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4f2328 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa4f2318 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f22fc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f1d60 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa4f2398 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4f2348 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa4f2338 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4f237c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f1d60 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa4f2400 <line:232:7, col:15>
    (UnaryOperator 0xa4f23e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4f23d8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0xa4f2f40 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0xa4f2aa0 <line:240:7, col:36>
    0xa4f2a10 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa4f2a80 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa4f2a68 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa4f2a50 <col:34> 'int' 1)))")
  (IfStmt 0xa4f2d08 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f2ab0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4f2cf0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0xa4f2cd0 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0xa4f2b28 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa4f2b08 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f2ad0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f2ac0 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0xa4f2cb8 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0xa4f2b3c <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa4f2a10 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0xa4f2c90 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f2bc0 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0xa4f2ba0 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4f2b68 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa4f2b58 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0xa4f2bf8 <col:40> 'int' 0)
            (DeclRefExpr 0xa4f2c2c <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa3d4c50 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0xa4f2c6c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa4f2e08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f2d28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f2df0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0xa4f2dc0 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f2d48 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f2d38 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f2d9c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa4f2de0 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0xa4f2ef8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f2e28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f2ee0 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0xa4f2ec0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f2e48 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f2e38 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f2e9c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0xa4f2f30 <line:253:7, col:14>
    (DeclRefExpr 0xa4f2f14 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa4f2a10 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0xa4f3d70 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0xa4f35f8 <line:261:7, col:50>
    0xa4f3570 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa4f35e8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f35c4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa4f3a50 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f3608 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4f3a38 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0xa4f3a18 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0xa4f3680 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa4f3660 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f3628 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f3618 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa4f3a00 <line:265:6, line:274:6>
          (DeclStmt 0xa4f37f8 <line:268:8, line:269:27>
            0xa4f36a0 "const pos_type __p =
              (CallExpr 0xa4f37d0 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4f3740 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa4f3720 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4f36e8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa4f36d8 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa4f3774 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa4f32f0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0xa4f37ac <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa4f39e0 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa4f3900 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa4f38a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa4f3808 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa4f36a0 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa4f3880 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa4f3860 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa4f3848 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa4f3830 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa4f39b8 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4f39a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4f3990 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa4f3924 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f3570 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa4f3980 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4f395c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa4f3b50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f3a70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f3b38 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0xa4f3b08 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f3a90 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f3a80 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f3ae4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa4f3b28 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0xa4f3c40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f3b70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f3c28 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0xa4f3c08 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f3b90 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f3b80 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f3be4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa4f3d18 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4f3c88 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa4f3c78 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f3c5c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f3570 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa4f3cf8 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4f3ca8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa4f3c98 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4f3cdc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f3570 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa4f3d60 <line:285:7, col:15>
    (UnaryOperator 0xa4f3d48 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4f3d38 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa4f4c28 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0xa4f4498 <line:293:7, col:50>
    0xa4f4410 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa4f4488 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f4464 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa4f4908 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f44a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa4f48f0 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0xa4f48d0 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0xa4f4520 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0xa4f4500 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f44c8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa4f44b8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0xa4f48b8 <line:297:6, line:306:6>
          (DeclStmt 0xa4f46b0 <line:300:8, line:301:27>
            0xa4f4540 "const pos_type __p =
              (CallExpr 0xa4f4688 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4f45e0 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0xa4f45c0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa4f4588 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0xa4f4578 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa4f4614 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa4f4120 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0xa4f462c <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa4f4190 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa4f4664 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa4f4898 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa4f47b8 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0xa4f4758 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
              (DeclRefExpr 0xa4f46c0 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa4f4540 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0xa4f4738 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0xa4f4718 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0xa4f4700 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0xa4f46e8 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0xa4f4870 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa4f4860 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa4f4848 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa4f47dc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f4410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa4f4838 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa4f4814 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa4f4a08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f4928 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f49f0 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0xa4f49c0 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f4948 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f4938 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f499c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0xa4f49e0 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0xa4f4af8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa4f4a28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa4f4ae0 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0xa4f4ac0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa4f4a48 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa4f4a38 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0xa4f4a9c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa4f4bd0 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa4f4b40 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa4f4b30 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa4f4b14 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f4410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa4f4bb0 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4f4b60 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa4f4b50 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa4f4b94 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa4f4410 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa4f4c18 <line:317:7, col:15>
    (UnaryOperator 0xa4f4c00 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa4f4bf0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0xa4f6028 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0xa4f5fe0 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0xa4f5118 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa4f5108 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0xa4f50f8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa4f50dc <col:12> 'const char *' lvalue ParmVar 0xa4f4f60 '__s' 'const char *'))))
    (CallExpr 0xa4f51c0 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa4f5148 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa4f512c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa4f519c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0xa4f5fc0 <line:327:2, line:353:2>
      (DeclStmt 0xa4f5338 <line:330:4, col:56>
        0xa4f51f0 "const size_t __clen =
          (CallExpr 0xa4f5308 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0xa4f52f8 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa4f52a0 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0xa1e3db0 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0xa4f5328 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa4f52c0 <col:52> 'const char *' lvalue ParmVar 0xa4f4f60 '__s' 'const char *')))")
      (IfStmt 0xa4f5da0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f5348 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa4f5d80 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0xa4f5988 <line:333:8, line:339:35>
            0xa4f5360 "struct __ptr_guard;"
            0xa4f5890 "struct __ptr_guard __pg =
              (ParenListExpr 0xa4f5960 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0xa4f5920 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0xa4f58c4 <col:27> 'const size_t':'const unsigned int' lvalue Var 0xa4f51f0 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0xa4f5a58 <line:341:8, col:35>
            0xa4f59b0 "_CharT *__ws =
              (CallExpr 0xa4f5a38 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4f5a00 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4f59e4 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0xa4f5890 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0xa4f5cb0 <line:342:8, line:343:35>
            (DeclStmt 0xa4f5ad0 <line:342:13, col:28>
              0xa4f5a70 "size_t __i =
                (ImplicitCastExpr 0xa4f5ac0 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa4f5aa8 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0xa4f5b30 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0xa4f5b10 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa4f5ae0 <col:30> 'size_t':'unsigned int' lvalue Var 0xa4f5a70 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa4f5b20 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa4f5af8 <col:36> 'const size_t':'const unsigned int' lvalue Var 0xa4f51f0 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0xa4f5b60 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0xa4f5b48 <col:46> 'size_t':'unsigned int' lvalue Var 0xa4f5a70 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0xa4f5c98 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0xa4f5ba8 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa4f5b74 <col:3> '_CharT *' lvalue Var 0xa4f59b0 '__ws' '_CharT *')
                (DeclRefExpr 0xa4f5b8c <col:8> 'size_t':'unsigned int' lvalue Var 0xa4f5a70 '__i' 'size_t':'unsigned int'))
              (CallExpr 0xa4f5c78 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa4f5bd8 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa4f5bbc <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0xa4f5c60 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0xa4f5c40 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0xa4f5c0c <col:27> 'const char *' lvalue ParmVar 0xa4f4f60 '__s' 'const char *'))
                  (ImplicitCastExpr 0xa4f5c50 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa4f5c24 <col:31> 'size_t':'unsigned int' lvalue Var 0xa4f5a70 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0xa4f5d58 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0xa4f5cd8 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0xa232690)
            (DeclRefExpr 0xa4f5d0c <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0xa4f5d24 <col:32> '_CharT *' lvalue Var 0xa4f59b0 '__ws' '_CharT *')
            (DeclRefExpr 0xa4f5d3c <col:38> 'const size_t':'const unsigned int' lvalue Var 0xa4f51f0 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0xa4f5ea8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f5dc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4f5e90 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0xa4f5e60 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f5de8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa4f5dd0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa4f5e3c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa4f5e80 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0xa4f5fa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa4f5ec8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa4f5f88 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0xa4f5f68 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa4f5ef0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0xa4f5ed8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa4f5f44 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0xa4f6018 <line:354:7, col:14>
    (DeclRefExpr 0xa4f5ffc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0xa4f4f10 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0xa50f510 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa50f4f8 <col:30> 'int' 0))
) (CompoundStmt 0xa50f608 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0xa50f5e8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa50f598 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa50f588 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0xa50f5cc <col:20> '__streambuf_type *' lvalue ParmVar 0xa50a620 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0xa50f6a0 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0xa50f688 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0xa50f630 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa50f620 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0xa50f670 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0xa50f658 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0xa50f728 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0xa50f718 <col:9, col:26>
    (CallExpr 0xa50f6f8 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0xa50f6b4 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0xa50a9e0 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0xa50f6e0 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa50f6d0 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0xa50f7d8 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0xa50f780 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa50f73c <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0xa50abf0 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0xa50f768 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa50f758 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa50f7c8 <line:128:2, col:10>
    (UnaryOperator 0xa50f7b0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa50f7a0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0xa50f888 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0xa50f830 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0xa50f7f0 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0xa50ad70 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0xa50f818 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa50f808 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0xa50f878 <line:135:2, col:10>
    (UnaryOperator 0xa50f860 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa50f850 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0xa50f938 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0xa50f928 <col:9, col:30>
    (CallExpr 0xa50f908 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50f8b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50f8ec <col:27> '_Bool' lvalue ParmVar 0xa50ae90 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0xa50f9e8 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0xa50f9d8 <col:9, col:30>
    (CallExpr 0xa50f9b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50f960 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50f99c <col:27> 'unsigned short' lvalue ParmVar 0xa50b0d0 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0xa50fa98 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0xa50fa88 <col:9, col:30>
    (CallExpr 0xa50fa68 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fa10 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fa4c <col:27> 'unsigned int' lvalue ParmVar 0xa50b310 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0xa50fb48 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0xa50fb38 <col:9, col:30>
    (CallExpr 0xa50fb18 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fac0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fafc <col:27> 'long' lvalue ParmVar 0xa50d220 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0xa50fbf8 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0xa50fbe8 <col:9, col:30>
    (CallExpr 0xa50fbc8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fb70 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fbac <col:27> 'unsigned long' lvalue ParmVar 0xa50d340 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0xa50fca8 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0xa50fc98 <col:9, col:30>
    (CallExpr 0xa50fc78 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fc20 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fc5c <col:27> 'long long' lvalue ParmVar 0xa50d460 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0xa50fd58 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0xa50fd48 <col:9, col:30>
    (CallExpr 0xa50fd28 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fcd0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fd0c <col:27> 'unsigned long long' lvalue ParmVar 0xa50d580 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0xa50fe08 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0xa50fdf8 <col:9, col:30>
    (CallExpr 0xa50fdd8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fd80 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fdbc <col:27> 'float' lvalue ParmVar 0xa50d6a0 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0xa50feb8 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0xa50fea8 <col:9, col:30>
    (CallExpr 0xa50fe88 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fe30 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50fe6c <col:27> 'double' lvalue ParmVar 0xa50d7c0 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0xa50ff68 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0xa50ff58 <col:9, col:30>
    (CallExpr 0xa50ff38 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50fee0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50ff1c <col:27> 'long double' lvalue ParmVar 0xa50d8e0 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0xa510018 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0xa510008 <col:9, col:30>
    (CallExpr 0xa50ffe8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0xa50ff90 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0xa50ffcc <col:27> 'void *' lvalue ParmVar 0xa50da00 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0xa510088 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0xa510078 <col:9, col:16>
    (MemberExpr 0xa510058 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa510048 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0xa5101d0 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0xa5101c0 <col:9, col:53>
    (CallExpr 0xa510198 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5100b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa5100a0 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa5100e4 <col:26> 'char_type *' lvalue ParmVar 0xa50e080 '__s' 'char_type *')
      (DeclRefExpr 0xa5100fc <col:31> 'streamsize':'int' lvalue ParmVar 0xa50e0c0 '__n' 'streamsize':'int')
      (CallExpr 0xa510178 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa510128 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa510118 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa510160 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0xa510300 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0xa5102f0 <col:9, col:49>
    (CallExpr 0xa5102c8 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5101f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa5101e8 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa51022c <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa50e380 '__sb' '__streambuf_type &')
      (CallExpr 0xa5102a8 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa510258 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0xa510248 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa510290 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0xa510448 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0xa510438 <col:9, col:57>
    (CallExpr 0xa510410 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa510328 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0xa510318 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa51035c <col:30> 'char_type *' lvalue ParmVar 0xa50e600 '__s' 'char_type *')
      (DeclRefExpr 0xa510374 <col:35> 'streamsize':'int' lvalue ParmVar 0xa50e640 '__n' 'streamsize':'int')
      (CallExpr 0xa5103f0 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5103a0 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0xa510390 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0xa5103d8 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0xa510480 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0xa510468 <col:30> 'int' 0))
) (CompoundStmt 0xa510560 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0xa510540 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5104f0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa5104e0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa510528 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0xa521b30 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0xa521bb8 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0xa521ba8 <col:9, col:16>
    (MemberExpr 0xa521b84 <col:16> 'const _Bool' lvalue ->_M_ok 0xa5213a0
      (CXXThisExpr 0xa521b58 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0xa522630 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0xa522620 <col:7, col:51>
    (ParenExpr 0xa522608 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa5225e0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa5225a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa522500 0xa522050 0xa414f10 0xa414940)
        (DeclRefExpr 0xa522530 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa522360 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa522588 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa522548 <col:47> 'unsigned char' lvalue ParmVar 0xa5223b0 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0xa522b98 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0xa522b88 <col:7, col:51>
    (ParenExpr 0xa522b70 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa522b48 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa522b00 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa522a60 0xa522500 0xa522050 0xa414f10 0xa414940)
        (DeclRefExpr 0xa522a90 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa5228c0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa522ae8 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0xa522aa8 <col:47> 'signed char' lvalue ParmVar 0xa522910 '__c' 'signed char &'))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0xa523ca0 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0xa523c90 <col:7, col:51>
    (ParenExpr 0xa523c78 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa523c50 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa523c08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa523b70 0xa523010 0xa522a60 0xa522500 0xa522050 0xa414f10)
        (DeclRefExpr 0xa523ba0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa5239d0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa523bf0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa523be0 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0xa523bb8 <col:47> 'unsigned char *' lvalue ParmVar 0xa523a20 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0xa524208 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0xa5241f8 <col:7, col:51>
    (ParenExpr 0xa5241e0 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0xa5241b8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa524168 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5240d0 0xa523b70 0xa523010 0xa522a60 0xa522500 0xa522050 0xa414f10)
        (DeclRefExpr 0xa524100 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0xa523f30 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0xa524150 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0xa524140 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0xa524118 <col:47> 'signed char *' lvalue ParmVar 0xa523f80 '__s' 'signed char *')))))))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0xa524ec8 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa524c60 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0xa524f38 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0xa524c60 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0xa524fb0 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0xa524fc0 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0xa525050 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0xa521b30 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0xa525bf8 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0xa526c68 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0xa525d08 <line:50:7, col:50>
    0xa525c80 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa525cf8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa525cd4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0xa526940 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0xa525d68 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa525d30 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0xa525d18 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0xa526928 <line:52:2, line:73:2>
      (IfStmt 0xa525ec0 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0xa525dd8 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa525da0 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0xa525d84 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0xa525ea0 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa525e68 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0xa525e48 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa525e10 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0xa525df4 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0xa526908 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0xa526060 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0xa525f08 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa525ef8 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa525edc <col:9> '_Bool' lvalue ParmVar 0xa525ad0 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0xa526040 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0xa526018 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa525fd8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
              (CallExpr 0xa525f78 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa525f40 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa525f28 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0xa525fb4 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0xa3d4500 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0xa5268e0 <line:56:6, line:72:6>
          (DeclStmt 0xa526170 <line:57:8, col:51>
            0xa5260a0 "const __int_type __eof =
              (CallExpr 0xa526150 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa526118 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0xa526268 <line:58:8, col:45>
            0xa5261c0 "__streambuf_type *__sb =
              (CallExpr 0xa526248 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa526210 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5261f4 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa526328 <line:59:8, col:38>
            0xa526280 "__int_type __c =
              (CallExpr 0xa526308 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5262d0 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5262b4 <col:25> '__streambuf_type *' lvalue Var 0xa5261c0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa526460 <line:61:8, col:63>
            0xa526380 "const __ctype_type &__ct =
              (CallExpr 0xa526440 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa5263b8 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
                (CXXDependentScopeMemberExpr 0xa526408 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5263ec <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0xa526738 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0xa526680 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0xa526520 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0xa5264f8 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa526490 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa5264c4 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0xa526280 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa5264dc <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa5260a0 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0xa526658 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa526550 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0xa526534 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa526380 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0xa5265a4 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0xa4300e0 'space' 'const mask':'const unsigned short')
                (CallExpr 0xa526638 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5265e8 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa52661c <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0xa526280 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0xa526720 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0xa526698 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0xa526280 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0xa526700 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5266c8 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5266b0 <col:9> '__streambuf_type *' lvalue Var 0xa5261c0 '__sb' '__streambuf_type *')))))
          (IfStmt 0xa5268c0 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0xa5267e0 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa526778 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa5267ac <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0xa526280 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa5267c4 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0xa5260a0 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa526898 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa526888 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa526870 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa526804 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa525c80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa526860 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa52683c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa526c48 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0xa526a80 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0xa5269b0 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa526978 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0xa52695c <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0xa526a68 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0xa526a48 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa526a28 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa5269cc <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa525c80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0xa526a58 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0xa526a38 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa526a04 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0xa526ad8 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0xa526aa8 <col:2> '_Bool' lvalue ->_M_ok 0xa5213a0
        (CXXThisExpr 0xa526a98 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0xa526ac8 <col:10> '_Bool' true))
    (CompoundStmt 0xa526c30 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0xa526b80 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa526b70 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa526b58 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa526af0 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa525c80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa526b48 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa526b24 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0xa526c10 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa526bc0 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0xa526ba4 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa525a90 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0xa526bf4 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa525c80 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0xa52aca0 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0xa52a5b0 <line:90:2, col:29>
    0xa52a520 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa52a590 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa52a568 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa52a558 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa52a580 <col:23> '_Bool' false))")
  (IfStmt 0xa52ac48 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0xa52a5c0 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0xa52a520 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa52ac20 <line:92:4, line:108:4>
      (DeclStmt 0xa52a698 <line:93:6, col:49>
        0xa52a610 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa52a688 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52a664 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa52a938 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52a6a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa52a920 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0xa52a7f8 <line:96:3, col:63>
            0xa52a720 "const __num_get_type &__ng =
              (CallExpr 0xa52a7d8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0xa52a758 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
                (CXXDependentScopeMemberExpr 0xa52a7a0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0xa52a790 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa52a8f0 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52a820 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0xa52a808 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa52a720 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa52a868 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52a858 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa52a880 <col:19> 'int' 0)
            (UnaryOperator 0xa52a8a8 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52a898 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52a8bc <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52a610 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa52a8d4 <col:36> '_ValueT' lvalue ParmVar 0xa52a260 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0xa52aa38 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52a958 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52aa20 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0xa52a9f0 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52a978 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa52a968 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52a9cc <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa52aa10 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0xa52ab28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52aa58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52ab10 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0xa52aaf0 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52aa78 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa52aa68 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52aacc <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa52ac00 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0xa52ab70 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa52ab60 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52ab44 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52a610 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa52abe0 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa52ab90 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa52ab80 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa52abc4 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52a610 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa52ac90 <line:109:2, col:10>
    (UnaryOperator 0xa52ac78 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa52ac68 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0xa52d1a8 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0xa52b320 <line:119:7, col:34>
    0xa52b290 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa52b300 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa52b2d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa52b2c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa52b2f0 <col:28> '_Bool' false))")
  (IfStmt 0xa52d150 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0xa52b330 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0xa52b290 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa52d128 <line:121:2, line:153:2>
      (DeclStmt 0xa52b408 <line:122:4, col:47>
        0xa52b380 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa52b3f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52b3d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa52ce40 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52b418 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa52ce20 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0xa52b478 <line:125:8, col:16>
            0xa52b440 "long __l")
          (DeclStmt 0xa52b578 <line:126:8, col:68>
            0xa52b4a0 "const __num_get_type &__ng =
              (CallExpr 0xa52b558 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa52b4d8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
                (CXXDependentScopeMemberExpr 0xa52b520 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa52b510 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa52b670 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52b5a0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa52b588 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa52b4a0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa52b5e8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52b5d8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa52b600 <col:24> 'int' 0)
            (UnaryOperator 0xa52b628 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52b618 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52b63c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52b380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa52b654 <col:41> 'long' lvalue Var 0xa52b440 '__l' 'long'))
          (IfStmt 0xa52ce00 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0xa52c838 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0xa52c808 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa52b6a0 <col:12> 'long' lvalue Var 0xa52b440 '__l' 'long'))
              (ImplicitCastExpr 0xa52c828 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa52c818 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa52c7e8 <col:18, col:54> 'const short':'const short' lvalue Var 0xa52bf00 '__min' 'const short':'const short'))))
            (CompoundStmt 0xa52ca28 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0xa52c910 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa52c900 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa52c8e8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa52c87c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52b380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa52c8d8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa52c8b4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa52ca10 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0xa52c934 <col:5> 'short' lvalue ParmVar 0xa52b040 '__n' 'short &')
                (ImplicitCastExpr 0xa52ca00 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0xa52c9e0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa52bf00 '__min' 'const short':'const short'))))
            (IfStmt 0xa52cde0 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0xa52cb40 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0xa52cb10 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa52ca40 <col:17> 'long' lvalue Var 0xa52b440 '__l' 'long'))
                (ImplicitCastExpr 0xa52cb30 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa52cb20 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa52caf0 <col:23, col:59> 'const short':'const short' lvalue Var 0xa52c1a0 '__max' 'const short':'const short'))))
              (CompoundStmt 0xa52cd38 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0xa52cc20 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa52cc10 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa52cbf8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa52cb8c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52b380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa52cbe8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa52cbc4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa52cd20 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0xa52cc44 <col:5> 'short' lvalue ParmVar 0xa52b040 '__n' 'short &')
                  (ImplicitCastExpr 0xa52cd10 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0xa52ccf0 <col:11, col:47> 'const short':'const short' lvalue Var 0xa52c1a0 '__max' 'const short':'const short'))))
              (BinaryOperator 0xa52cdc8 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0xa52cd50 <col:3> 'short' lvalue ParmVar 0xa52b040 '__n' 'short &')
                (CXXFunctionalCastExpr 0xa52cdb0 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0xa52cda0 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0xa52cd90 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa52cd74 <col:15> 'long' lvalue Var 0xa52b440 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa52cf40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52ce60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52cf28 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0xa52cef8 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52ce80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52ce70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52ced4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa52cf18 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0xa52d030 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52cf60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52d018 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0xa52cff8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52cf80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52cf70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52cfd4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa52d108 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa52d078 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa52d068 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52d04c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52b380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa52d0e8 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa52d098 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa52d088 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa52d0cc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52b380 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa52d198 <line:154:7, col:15>
    (UnaryOperator 0xa52d180 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa52d170 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0xa52e628 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0xa52d830 <line:164:7, col:34>
    0xa52d7a0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa52d810 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa52d7e8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa52d7d8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa52d800 <col:28> '_Bool' false))")
  (IfStmt 0xa52e5d0 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0xa52d840 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0xa52d7a0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa52e5a8 <line:166:2, line:198:2>
      (DeclStmt 0xa52d918 <line:167:4, col:47>
        0xa52d890 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa52d908 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52d8e4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa52e2c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52d928 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa52e2a0 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0xa52d988 <line:170:8, col:16>
            0xa52d950 "long __l")
          (DeclStmt 0xa52da88 <line:171:8, col:68>
            0xa52d9b0 "const __num_get_type &__ng =
              (CallExpr 0xa52da68 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0xa52d9e8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0xa4c6320)
                (CXXDependentScopeMemberExpr 0xa52da30 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0xa52da20 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0xa52db80 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52dab0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa52da98 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0xa52d9b0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0xa52daf8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52dae8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0xa52db10 <col:24> 'int' 0)
            (UnaryOperator 0xa52db38 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0xa52db28 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52db4c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52d890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0xa52db64 <col:41> 'long' lvalue Var 0xa52d950 '__l' 'long'))
          (IfStmt 0xa52e280 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0xa52dcb0 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0xa52dc80 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0xa52dbb0 <col:12> 'long' lvalue Var 0xa52d950 '__l' 'long'))
              (ImplicitCastExpr 0xa52dca0 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0xa52dc90 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa52dc60 <col:18, col:52> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int'))))
            (CompoundStmt 0xa52dea8 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0xa52dd90 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa52dd80 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa52dd68 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa52dcfc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52d890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa52dd58 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa52dd34 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0xa52de90 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0xa52ddb4 <col:5> 'int' lvalue ParmVar 0xa52d550 '__n' 'int &')
                (ImplicitCastExpr 0xa52de80 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0xa52de60 <col:11, col:45> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int'))))
            (IfStmt 0xa52e260 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0xa52dfc0 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0xa52df90 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0xa52dec0 <col:17> 'long' lvalue Var 0xa52d950 '__l' 'long'))
                (ImplicitCastExpr 0xa52dfb0 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0xa52dfa0 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa52df70 <col:23, col:57> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))))
              (CompoundStmt 0xa52e1b8 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0xa52e0a0 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa52e090 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa52e078 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa52e00c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52d890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa52e068 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa52e044 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa52e1a0 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0xa52e0c4 <col:5> 'int' lvalue ParmVar 0xa52d550 '__n' 'int &')
                  (ImplicitCastExpr 0xa52e190 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0xa52e170 <col:11, col:45> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))))
              (BinaryOperator 0xa52e248 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0xa52e1d0 <col:3> 'int' lvalue ParmVar 0xa52d550 '__n' 'int &')
                (CXXFunctionalCastExpr 0xa52e230 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa52e220 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0xa52e210 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0xa52e1f4 <col:13> 'long' lvalue Var 0xa52d950 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0xa52e3c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52e2e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52e3a8 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0xa52e378 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52e300 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52e2f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52e354 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa52e398 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0xa52e4b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52e3e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52e498 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0xa52e478 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52e400 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52e3f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52e454 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa52e588 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa52e4f8 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa52e4e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa52e4cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52d890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa52e568 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa52e518 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa52e508 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa52e54c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52d890 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa52e618 <line:199:7, col:15>
    (UnaryOperator 0xa52e600 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa52e5f0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0xa52f5a8 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0xa52ecd8 <line:207:7, col:50>
    0xa52ec50 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa52ecc8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa52eca4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa52ed80 <line:208:7, col:34>
    0xa52ecf0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa52ed60 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa52ed38 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa52ed28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa52ed50 <col:28> '_Bool' false))")
  (IfStmt 0xa52f478 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0xa52edc0 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0xa52ed90 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa52ecf0 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0xa52eda8 <col:21> '__streambuf_type *' lvalue ParmVar 0xa52e9d0 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0xa52f350 <line:210:2, line:226:2>
      (IfStmt 0xa52f140 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52edd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa52f120 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0xa52ee28 <line:213:8, col:20>
            0xa52edf0 "bool __ineof")
          (IfStmt 0xa52f000 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0xa52ef30 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0xa52ef08 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0xa52ee38 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0xa407460)
                (CallExpr 0xa52eeb8 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa52ee80 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa52ee70 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0xa52eed4 <col:50> '__streambuf_type *' lvalue ParmVar 0xa52e9d0 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0xa52eeec <col:59> '_Bool' lvalue Var 0xa52edf0 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0xa52efd8 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa52efc8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa52efb0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa52ef44 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52ec50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa52efa0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa52ef7c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0xa52f100 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0xa52f038 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa52f01c <col:12> '_Bool' lvalue Var 0xa52edf0 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0xa52f0d8 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa52f0c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa52f0b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa52f044 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52ec50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa52f0a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa52f07c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa52f240 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52f160 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52f228 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0xa52f1f8 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52f180 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52f170 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52f1d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa52f218 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0xa52f330 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52f260 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa52f318 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0xa52f2f8 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa52f280 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa52f270 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa52f2d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0xa52f458 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0xa52f388 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0xa52f36c <col:17> '__streambuf_type *' lvalue ParmVar 0xa52e9d0 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0xa52f430 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0xa52f420 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa52f408 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0xa52f39c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52ec50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0xa52f3f8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa52f3d4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0xa52f550 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa52f4c0 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa52f4b0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa52f494 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52ec50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa52f530 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa52f4e0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa52f4d0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa52f514 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52ec50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa52f598 <line:231:7, col:15>
    (UnaryOperator 0xa52f580 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa52f570 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0xa5306b0 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0xa52fca0 <line:239:7, col:48>
    0xa52fbd0 "const int_type __eof =
      (CallExpr 0xa52fc80 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa52fc48 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0xa52fd10 <line:240:7, col:27>
    0xa52fcc0 "int_type __c =
      (DeclRefExpr 0xa52fcf4 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa52fbd0 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0xa52fd68 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa52fd30 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa52fd20 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa52fd50 <col:19> 'int' 0))
  (DeclStmt 0xa52fe38 <line:242:7, col:50>
    0xa52fdb0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa52fe28 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa52fe04 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa52fee0 <line:243:7, col:33>
    0xa52fe50 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa52fec0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa52fe98 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa52fe88 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa52feb0 <col:28> '_Bool' true))")
  (IfStmt 0xa530450 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0xa52fef0 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0xa52fe50 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa530430 <line:245:2, line:262:2>
      (IfStmt 0xa530220 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa52ff08 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa530208 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0xa52fff0 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0xa52ff18 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa52fcc0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa52ffd0 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa52ff98 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa52ff78 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa52ff40 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa52ff30 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa5301e8 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0xa5300b8 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0xa530090 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa530028 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa53005c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa52fcc0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa530074 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa52fbd0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0xa530118 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa5300e0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa5300d0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa530100 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0xa5301c0 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa5301b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa530198 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa530130 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52fdb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa530188 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa530164 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa530320 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa530240 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa530308 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0xa5302d8 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa530260 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa530250 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa5302b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa5302f8 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0xa530410 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa530340 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa5303f8 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0xa5303d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa530360 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa530350 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa5303b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa530590 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0xa5304c0 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa5304b0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa5304a0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa530480 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
            (CXXThisExpr 0xa530470 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa530568 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa530558 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa530540 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa5304d4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52fdb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa530530 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa53050c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa530668 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa5305d8 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa5305c8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa5305ac <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52fdb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa530648 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5305f8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5305e8 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa53062c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa52fdb0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa5306a0 <line:267:7, col:14>
    (DeclRefExpr 0xa530684 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa52fcc0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0xa5317b8 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0xa530d00 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa530cc8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa530cb8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa530ce8 <col:19> 'int' 0))
  (DeclStmt 0xa530dd8 <line:276:7, col:50>
    0xa530d50 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa530dc8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa530da4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa530e80 <line:277:7, col:33>
    0xa530df0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa530e60 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa530e38 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa530e28 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa530e50 <col:28> '_Bool' true))")
  (IfStmt 0xa531548 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0xa530e90 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0xa530df0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa531528 <line:279:2, line:299:2>
      (IfStmt 0xa531318 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa530ea8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa531300 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0xa530fb8 <line:282:8, col:53>
            0xa530ec0 "const int_type __cb =
              (CallExpr 0xa530f98 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa530f60 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0xa530f40 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa530f08 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0xa530ef8 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa5312e0 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0xa5310d8 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0xa5310b0 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa530fe8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0xa53101c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa530ec0 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0xa531090 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa531058 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0xa531210 <line:285:3, line:288:3>
              (BinaryOperator 0xa531138 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0xa531100 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                  (CXXThisExpr 0xa5310f0 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0xa531120 <col:17> 'int' 1))
              (BinaryOperator 0xa5311f8 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa531150 <col:5> 'char_type':'_CharT' lvalue ParmVar 0xa530a70 '__c' 'char_type &')
                (CallExpr 0xa5311d8 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa531188 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa5311bc <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa530ec0 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0xa5312b8 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa5312a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa531290 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa531228 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa530d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa531280 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53125c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0xa531418 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa531338 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa531400 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0xa5313d0 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa531358 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa531348 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa5313ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa5313f0 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0xa531508 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa531438 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa5314f0 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0xa5314d0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa531458 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa531448 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa5314ac <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa531688 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0xa5315b8 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa5315a8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa531598 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa531578 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
            (CXXThisExpr 0xa531568 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa531660 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa531650 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa531638 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa5315cc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa530d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa531628 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa531604 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa531760 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa5316d0 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa5316c0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa5316a4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa530d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa531740 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5316f0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5316e0 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa531724 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa530d50 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa5317a8 <line:304:7, col:15>
    (UnaryOperator 0xa531790 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa531780 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa532fe8 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0xa531e98 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa531e60 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa531e50 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa531e80 <col:19> 'int' 0))
  (DeclStmt 0xa531f68 <line:313:7, col:50>
    0xa531ee0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa531f58 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa531f34 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa532010 <line:314:7, col:33>
    0xa531f80 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa531ff0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa531fc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa531fb8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa531fe0 <col:28> '_Bool' true))")
  (IfStmt 0xa532c98 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0xa532020 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0xa531f80 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa532c78 <line:316:2, line:342:2>
      (IfStmt 0xa532a68 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa532038 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa532a40 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0xa532118 <line:319:8, col:67>
            0xa532050 "const int_type __idelim =
              (CallExpr 0xa5320f8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5320a8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa5320dc <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa531bf0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa5321e0 <line:320:8, col:49>
            0xa532130 "const int_type __eof =
              (CallExpr 0xa5321c0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa532188 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa5322b8 <line:321:8, col:46>
            0xa532200 "__streambuf_type *__sb =
              (CallExpr 0xa532298 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa532260 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa532238 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa532378 <line:322:8, col:36>
            0xa5322d0 "int_type __c =
              (CallExpr 0xa532358 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa532320 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa532304 <col:23> '__streambuf_type *' lvalue Var 0xa532200 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa532898 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0xa532670 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0xa532590 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa5324a0 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0xa532458 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                  (CXXOperatorCallExpr 0xa532418 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0xa5323d0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                    (MemberExpr 0xa532398 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa532388 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa5323b8 <col:27> 'int' 1))
                  (DeclRefExpr 0xa53243c <col:31> 'streamsize':'int' lvalue ParmVar 0xa531bb0 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa532578 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0xa532550 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5324e8 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa53251c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa5322d0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa532534 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa532130 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa532658 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0xa532630 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5325c8 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa5325fc <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa5322d0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa532614 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa532050 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa532878 <line:327:3, line:331:3>
              (BinaryOperator 0xa532778 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0xa5326d0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa5326b8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa532688 <col:6> 'char_type *' lvalue ParmVar 0xa531b70 '__s' 'char_type *')))
                (CallExpr 0xa532758 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa532708 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa53273c <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0xa5322d0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa5327c0 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa5327a0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                  (CXXThisExpr 0xa532790 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa532860 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa5327d4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa5322d0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa532840 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa532808 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5327ec <col:11> '__streambuf_type *' lvalue Var 0xa532200 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa532a20 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0xa532940 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5328d8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa53290c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa5322d0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa532924 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa532130 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa5329f8 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa5329e8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa5329d0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa532964 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa531ee0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa5329c0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53299c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa532b68 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa532a88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa532b50 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0xa532b20 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa532aa8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa532a98 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa532afc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa532b40 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0xa532c58 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa532b88 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa532c40 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0xa532c20 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa532ba8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa532b98 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa532bfc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa532d78 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0xa532cf8 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa532ce8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa532cb4 <col:11> 'streamsize':'int' lvalue ParmVar 0xa531bb0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa532cd0 <col:17> 'int' 0))
    (BinaryOperator 0xa532d60 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa532d28 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa532d10 <col:3> 'char_type *' lvalue ParmVar 0xa531b70 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa532d48 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa532eb8 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0xa532de8 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa532dd8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa532dc8 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa532da8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
            (CXXThisExpr 0xa532d98 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa532e90 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa532e80 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa532e68 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa532dfc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa531ee0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa532e58 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa532e34 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa532f90 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa532f00 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa532ef0 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa532ed4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa531ee0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa532f70 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa532f20 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa532f10 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa532f54 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa531ee0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa532fd8 <line:351:7, col:15>
    (UnaryOperator 0xa532fc0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa532fb0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0xa534770 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0xa533670 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa533638 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa533628 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa533658 <col:19> 'int' 0))
  (DeclStmt 0xa533748 <line:360:7, col:50>
    0xa5336c0 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa533738 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa533714 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa5337f0 <line:361:7, col:33>
    0xa533760 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa5337d0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa5337a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa533798 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa5337c0 <col:28> '_Bool' true))")
  (IfStmt 0xa534500 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0xa533800 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0xa533760 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa5344e0 <line:363:2, line:390:2>
      (IfStmt 0xa5342d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa533818 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa5342a0 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0xa5338f8 <line:366:8, col:67>
            0xa533830 "const int_type __idelim =
              (CallExpr 0xa5338d8 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa533888 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0xa5338bc <col:59> 'char_type':'_CharT' lvalue ParmVar 0xa5333e0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa5339c0 <line:367:8, col:49>
            0xa533910 "const int_type __eof =
              (CallExpr 0xa5339a0 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa533968 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa533a80 <line:368:8, col:51>
            0xa5339e0 "__streambuf_type *__this_sb =
              (CallExpr 0xa533a60 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa533a28 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0xa533a18 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa533b48 <line:369:8, col:41>
            0xa533aa0 "int_type __c =
              (CallExpr 0xa533b28 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa533af0 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0xa533ad4 <col:23> '__streambuf_type *' lvalue Var 0xa5339e0 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0xa533c28 <line:370:8, col:55>
            0xa533b60 "char_type __c2 =
              (CallExpr 0xa533c08 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa533bb8 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0xa533bec <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0xa5340f8 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0xa533f18 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0xa533dc8 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0xa533ce8 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0xa533cc0 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa533c58 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa533c8c <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa533ca4 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa533910 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0xa533db0 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0xa533d88 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa533d20 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa533d54 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa533d6c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa533830 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa533f00 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0xa533ed8 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa533e00 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0xa533ea0 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa533e50 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0xa533e34 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0xa5333a0 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0xa533e84 <col:48> 'char_type':'_CharT' lvalue Var 0xa533b60 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0xa533ec0 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa533910 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa5340d8 <line:375:3, line:379:3>
              (UnaryOperator 0xa533f60 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0xa533f40 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                  (CXXThisExpr 0xa533f30 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0xa534000 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0xa533f74 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa533fe0 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa533fa8 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0xa533f8c <col:11> '__streambuf_type *' lvalue Var 0xa5339e0 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0xa5340c0 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0xa534018 <col:5> 'char_type':'_CharT' lvalue Var 0xa533b60 '__c2' 'char_type':'_CharT')
                (CallExpr 0xa5340a0 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa534050 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa534084 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0xa534280 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0xa5341a0 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa534138 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa53416c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa533aa0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa534184 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa533910 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa534258 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa534248 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa534230 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa5341c4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5336c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa534220 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa5341fc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa5343d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5342f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa5343b8 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0xa534388 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa534310 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa534300 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa534364 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa5343a8 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0xa5344c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5343f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa5344a8 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0xa534488 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa534410 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa534400 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa534464 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa534640 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0xa534570 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa534560 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa534550 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa534530 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
            (CXXThisExpr 0xa534520 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa534618 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa534608 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5345f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa534584 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5336c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa5345e0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa5345bc <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa534718 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0xa534688 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa534678 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa53465c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5336c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa5346f8 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5346a8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa534698 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa5346dc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5336c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa534760 <line:395:7, col:15>
    (UnaryOperator 0xa534748 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa534738 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0xa536200 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0xa534e48 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa534e10 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa534e00 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa534e30 <col:19> 'int' 0))
  (DeclStmt 0xa534f18 <line:404:7, col:50>
    0xa534e90 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa534f08 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa534ee4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa534fc0 <line:405:7, col:33>
    0xa534f30 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa534fa0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa534f78 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa534f68 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa534f90 <col:28> '_Bool' true))")
  (IfStmt 0xa535eb0 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0xa534fd0 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0xa534f30 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa535e90 <line:407:9, line:443:9>
      (IfStmt 0xa535c80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa534fe8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa535c58 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0xa5350c8 <line:410:15, col:74>
            0xa535000 "const int_type __idelim =
              (CallExpr 0xa5350a8 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa535058 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0xa53508c <col:66> 'char_type':'_CharT' lvalue ParmVar 0xa534ba0 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0xa535190 <line:411:15, col:56>
            0xa5350e0 "const int_type __eof =
              (CallExpr 0xa535170 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa535138 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa535250 <line:412:15, col:53>
            0xa5351b0 "__streambuf_type *__sb =
              (CallExpr 0xa535230 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5351f8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5351e8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa535318 <line:413:15, col:43>
            0xa535270 "int_type __c =
              (CallExpr 0xa5352f8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5352c0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5352a4 <col:30> '__streambuf_type *' lvalue Var 0xa5351b0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa535838 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0xa535610 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0xa535530 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0xa535440 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5353f8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                  (CXXOperatorCallExpr 0xa5353b8 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0xa535370 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                    (MemberExpr 0xa535338 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa535328 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0xa535358 <col:34> 'int' 1))
                  (DeclRefExpr 0xa5353dc <col:38> 'streamsize':'int' lvalue ParmVar 0xa534b60 '__n' 'streamsize':'int'))
                (UnaryOperator 0xa535518 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0xa5354f0 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa535488 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa5354bc <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa5354d4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5350e0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa5355f8 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0xa5355d0 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa535568 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa53559c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa5355b4 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa535000 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0xa535818 <line:418:17, line:422:17>
              (BinaryOperator 0xa535718 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0xa535670 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa535658 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa535628 <col:20> 'char_type *' lvalue ParmVar 0xa534b20 '__s' 'char_type *')))
                (CallExpr 0xa5356f8 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5356a8 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa5356dc <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0xa5357b8 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0xa535730 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa535798 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa535760 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0xa535748 <col:25> '__streambuf_type *' lvalue Var 0xa5351b0 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0xa535800 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0xa5357e0 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                  (CXXThisExpr 0xa5357d0 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0xa535c38 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0xa5358e0 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa535878 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa5358ac <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa5358c4 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5350e0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa535998 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa535988 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa535970 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa535904 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa534e90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa535960 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53593c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0xa535c20 <line:426:17, line:434:17>
              (IfStmt 0xa535c00 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0xa535a50 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5359e8 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa535a1c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0xa535270 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0xa535a34 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa535000 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0xa535b30 <line:428:21, line:431:21>
                  (CallExpr 0xa535ac8 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa535a90 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0xa535a74 <col:23> '__streambuf_type *' lvalue Var 0xa5351b0 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa535b18 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0xa535af8 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa535ae8 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0xa535bd8 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa535bc8 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa535bb0 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa535b48 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa534e90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa535ba0 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa535b7c <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa535d80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa535ca0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa535d68 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0xa535d38 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa535cc0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa535cb0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa535d14 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa535d58 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0xa535e70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa535da0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa535e58 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0xa535e38 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa535dc0 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa535db0 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa535e14 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa535f90 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0xa535f10 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0xa535f00 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0xa535ecc <col:11> 'streamsize':'int' lvalue ParmVar 0xa534b60 '__n' 'streamsize':'int'))
      (IntegerLiteral 0xa535ee8 <col:17> 'int' 0))
    (BinaryOperator 0xa535f78 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0xa535f40 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa535f28 <col:3> 'char_type *' lvalue ParmVar 0xa534b20 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0xa535f60 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0xa5360d0 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0xa536000 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa535ff0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa535fe0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0xa535fc0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
            (CXXThisExpr 0xa535fb0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0xa5360a8 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa536098 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa536080 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa536014 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa534e90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa536070 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa53604c <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa5361a8 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0xa536118 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa536108 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa5360ec <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa534e90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa536188 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa536138 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa536128 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0xa53616c <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa534e90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa5361f0 <line:452:7, col:15>
    (UnaryOperator 0xa5361d8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa5361c8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0xa537140 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0xa536828 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa5367f0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa5367e0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa536810 <col:19> 'int' 0))
  (DeclStmt 0xa5368e0 <line:464:7, col:33>
    0xa536850 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa5368c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa536898 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa536888 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa5368b0 <col:28> '_Bool' true))")
  (IfStmt 0xa5370e8 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0xa5368f0 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0xa536850 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa5370c0 <line:466:2, line:487:2>
      (DeclStmt 0xa5369c8 <line:467:4, col:47>
        0xa536940 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa5369b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa536994 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa536dd8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5369d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa536db8 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0xa536aa0 <line:470:8, col:49>
            0xa5369f0 "const int_type __eof =
              (CallExpr 0xa536a80 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa536a48 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa536b60 <line:471:8, col:46>
            0xa536ac0 "__streambuf_type *__sb =
              (CallExpr 0xa536b40 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa536b08 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa536af8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa536d98 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0xa536c58 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa536b98 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0xa536c20 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa536be8 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0xa536bcc <col:37> '__streambuf_type *' lvalue Var 0xa536ac0 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0xa536c3c <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5369f0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa536d10 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa536d00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa536ce8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa536c7c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa536940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa536cd8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa536cb4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0xa536d80 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0xa536d48 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa536d38 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0xa536d68 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0xa536ed8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa536df8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa536ec0 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0xa536e90 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa536e18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa536e08 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa536e6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa536eb0 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0xa536fc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa536ef8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa536fb0 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0xa536f90 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa536f18 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa536f08 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa536f6c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa5370a0 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa537010 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa537000 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa536fe4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa536940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa537080 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa537030 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa537020 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa537064 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa536940 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa537130 <line:488:7, col:15>
    (UnaryOperator 0xa537118 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa537108 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0xa5388f0 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0xa537770 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa537738 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa537728 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa537758 <col:19> 'int' 0))
  (DeclStmt 0xa537820 <line:497:7, col:33>
    0xa537790 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa537800 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa5377d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5377c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa5377f0 <col:28> '_Bool' true))")
  (IfStmt 0xa538898 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0xa5378a0 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa537830 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa537790 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa537888 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa537878 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa537848 <col:21> 'streamsize':'int' lvalue ParmVar 0xa5374e0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa537860 <col:27> 'int' 0)))
    (CompoundStmt 0xa538870 <line:499:9, line:549:9>
      (DeclStmt 0xa537978 <line:500:11, col:54>
        0xa5378f0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa537968 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa537944 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa538588 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa537988 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa538558 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0xa537a50 <line:503:15, col:56>
            0xa5379a0 "const int_type __eof =
              (CallExpr 0xa537a30 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5379f8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa537b10 <line:504:15, col:53>
            0xa537a70 "__streambuf_type *__sb =
              (CallExpr 0xa537af0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa537ab8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa537aa8 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa537bd8 <line:505:15, col:43>
            0xa537b30 "int_type __c =
              (CallExpr 0xa537bb8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa537b80 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa537b64 <col:30> '__streambuf_type *' lvalue Var 0xa537a70 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa537c38 <line:514:8, col:35>
            0xa537bf0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa537c28 <col:30> '_Bool' false)")
          (WhileStmt 0xa538270 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa537c48 <line:515:15> '_Bool' true)
            (CompoundStmt 0xa538258 <line:516:3, line:532:3>
              (WhileStmt 0xa537ef0 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0xa537dd8 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0xa537ce8 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0xa537ca0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                    (MemberExpr 0xa537c68 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa537c58 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa537c88 <col:24> 'streamsize':'int' lvalue ParmVar 0xa5374e0 '__n' 'streamsize':'int'))
                  (UnaryOperator 0xa537dc0 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0xa537d98 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa537d30 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa537d64 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa537b30 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa537d7c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5379a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa537ed8 <line:519:7, line:522:7>
                  (UnaryOperator 0xa537e20 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa537e00 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa537df0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa537ec0 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa537e34 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa537b30 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa537ea0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa537e68 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa537e4c <col:15> '__streambuf_type *' lvalue Var 0xa537a70 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa538238 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0xa5380d0 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0xa537ff0 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0xa537fd0 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa537f04 <col:9> 'streamsize':'int' lvalue ParmVar 0xa5374e0 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0xa537fe0 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0xa537fb0 <col:16, col:57> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int')))
                  (UnaryOperator 0xa5380b8 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0xa538090 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa538028 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa53805c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa537b30 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa538074 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5379a0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0xa538218 <line:525:7, line:529:7>
                  (BinaryOperator 0xa5381c0 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0xa5380f8 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa5380e8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa5381a0 <line:527:4, col:45> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa538200 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa5381d8 <col:9> '_Bool' lvalue Var 0xa537bf0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa5381f0 <col:26> '_Bool' true)))
                (BreakStmt 0xa538230 <line:531:7>))))
          (IfStmt 0xa5383a8 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa5382a0 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa538284 <col:12> '_Bool' lvalue Var 0xa537bf0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa538390 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa5382c0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa5382b0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa538370 <col:15, col:56> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa538538 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0xa538458 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5383f0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa538424 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa537b30 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa53843c <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa5379a0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa538510 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa538500 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa5384e8 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa53847c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5378f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa5384d8 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa5384b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa538688 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5385a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa538670 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0xa538640 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5385c8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa5385b8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53861c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa538660 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0xa538778 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5386a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa538760 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0xa538740 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5386c8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa5386b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53871c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa538850 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa5387c0 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa5387b0 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa538794 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5378f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa538830 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5387e0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa5387d0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa538814 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5378f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa5388e0 <line:550:7, col:15>
    (UnaryOperator 0xa5388c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa5388b8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0xa53a5d0 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0xa538f60 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa538f28 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa538f18 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa538f48 <col:19> 'int' 0))
  (DeclStmt 0xa539010 <line:559:7, col:33>
    0xa538f80 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa538ff0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa538fc8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa538fb8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa538fe0 <col:28> '_Bool' true))")
  (IfStmt 0xa53a578 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0xa539090 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0xa539020 <col:11> 'class std::basic_istream::sentry' lvalue Var 0xa538f80 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0xa539078 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0xa539068 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa539038 <col:21> 'streamsize':'int' lvalue ParmVar 0xa538c90 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa539050 <col:27> 'int' 0)))
    (CompoundStmt 0xa53a550 <line:561:9, line:614:9>
      (DeclStmt 0xa539168 <line:562:11, col:54>
        0xa5390e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa539158 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa539134 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53a268 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa539178 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53a220 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0xa539240 <line:565:15, col:56>
            0xa539190 "const int_type __eof =
              (CallExpr 0xa539220 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5391e8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0xa539300 <line:566:15, col:53>
            0xa539260 "__streambuf_type *__sb =
              (CallExpr 0xa5392e0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5392a8 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa539298 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0xa5393c8 <line:567:15, col:43>
            0xa539320 "int_type __c =
              (CallExpr 0xa5393a8 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa539370 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0xa539354 <col:30> '__streambuf_type *' lvalue Var 0xa539260 '__sb' '__streambuf_type *')))")
          (DeclStmt 0xa539428 <line:570:8, col:35>
            0xa5393e0 "bool __large_ignore =
              (CXXBoolLiteralExpr 0xa539418 <col:30> '_Bool' false)")
          (WhileStmt 0xa539c20 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa539438 <line:571:15> '_Bool' true)
            (CompoundStmt 0xa539c08 <line:572:3, line:590:3>
              (WhileStmt 0xa5397c0 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0xa5396a8 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0xa5395c8 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0xa5394d8 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0xa539490 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                      (MemberExpr 0xa539458 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                        (CXXThisExpr 0xa539448 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0xa539478 <col:24> 'streamsize':'int' lvalue ParmVar 0xa538c90 '__n' 'streamsize':'int'))
                    (UnaryOperator 0xa5395b0 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0xa539588 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa539520 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa539554 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa53956c <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa539190 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa539690 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0xa539668 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa539600 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa539634 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa53964c <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa538cd0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa5397a8 <line:576:7, line:579:7>
                  (UnaryOperator 0xa5396f0 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0xa5396d0 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa5396c0 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0xa539790 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0xa539704 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0xa539770 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa539738 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0xa53971c <col:15> '__streambuf_type *' lvalue Var 0xa539260 '__sb' '__streambuf_type *'))))))
              (IfStmt 0xa539be8 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0xa539a80 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0xa5399a0 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0xa5398c0 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0xa5398a0 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0xa5397d4 <col:9> 'streamsize':'int' lvalue ParmVar 0xa538c90 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0xa5398b0 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0xa539880 <col:16, col:57> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int')))
                    (UnaryOperator 0xa539988 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0xa539960 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa5398f8 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0xa53992c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0xa539944 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa539190 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0xa539a68 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0xa539a40 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa5399d8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0xa539a0c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0xa539a24 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa538cd0 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0xa539bc8 <line:583:7, line:587:7>
                  (BinaryOperator 0xa539b70 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0xa539aa8 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa539a98 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa539b50 <line:585:4, col:45> 'const int':'const int' lvalue Var 0xa3116d0 '__min' 'const int':'const int'))
                  (BinaryOperator 0xa539bb0 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0xa539b88 <col:9> '_Bool' lvalue Var 0xa5393e0 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0xa539ba0 <col:26> '_Bool' true)))
                (BreakStmt 0xa539be0 <line:589:7>))))
          (IfStmt 0xa539d58 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0xa539c50 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa539c34 <col:12> '_Bool' lvalue Var 0xa5393e0 '__large_ignore' '_Bool'))
            (BinaryOperator 0xa539d40 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0xa539c70 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa539c60 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa539d20 <col:15, col:56> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0xa53a200 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0xa539e08 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa539da0 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0xa539dd4 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa539dec <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa539190 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa539ec0 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa539eb0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa539e98 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa539e2c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5390e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa539e88 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa539e64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0xa53a1e0 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0xa539f78 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa539f10 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0xa539f44 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0xa539320 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0xa539f5c <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0xa538cd0 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0xa53a1c8 <line:598:3, line:603:3>
                (IfStmt 0xa53a138 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0xa53a0c8 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0xa53a080 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
                    (MemberExpr 0xa539fb0 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa539fa0 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0xa53a060 <line:600:11, col:52> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
                  (UnaryOperator 0xa53a120 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0xa53a100 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                      (CXXThisExpr 0xa53a0f0 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0xa53a1a8 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa53a170 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0xa53a154 <col:5> '__streambuf_type *' lvalue Var 0xa539260 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa53a368 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53a288 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53a350 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0xa53a320 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53a2a8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53a298 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53a2fc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53a340 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0xa53a458 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53a388 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53a440 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0xa53a420 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53a3a8 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0xa53a398 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53a3fc <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53a530 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53a4a0 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53a490 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53a474 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5390e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53a510 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53a4c0 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0xa53a4b0 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53a4f4 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5390e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53a5c0 <line:615:7, col:15>
    (UnaryOperator 0xa53a5a8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa53a598 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0xa53b508 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0xa53aca0 <line:623:7, col:40>
    0xa53abf0 "int_type __c =
      (CallExpr 0xa53ac80 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa53ac48 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0xa53acf8 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa53acc0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53acb0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa53ace0 <col:19> 'int' 0))
  (DeclStmt 0xa53adb0 <line:625:7, col:33>
    0xa53ad20 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53ad90 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53ad68 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53ad58 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53ad80 <col:28> '_Bool' true))")
  (IfStmt 0xa53b4c0 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53adc0 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0xa53ad20 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa53b498 <line:627:2, line:644:2>
      (DeclStmt 0xa53ae98 <line:628:4, col:47>
        0xa53ae10 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53ae88 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53ae64 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53b1b0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53aea8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53b198 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0xa53af90 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0xa53aeb8 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0xa53abf0 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0xa53af70 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa53af38 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0xa53af18 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa53aee0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0xa53aed0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0xa53b178 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0xa53b098 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa53afd0 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0xa53b004 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0xa53abf0 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0xa53b078 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53b040 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0xa53b150 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa53b140 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa53b128 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa53b0bc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ae10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa53b118 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53b0f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa53b2b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53b1d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53b298 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0xa53b268 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53b1f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53b1e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53b244 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53b288 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0xa53b3a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53b2d0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53b388 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0xa53b368 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53b2f0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53b2e0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53b344 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53b478 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53b3e8 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53b3d8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53b3bc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ae10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53b458 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53b408 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa53b3f8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53b43c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ae10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53b4f8 <line:645:7, col:14>
    (DeclRefExpr 0xa53b4dc <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0xa53abf0 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0xa53c458 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0xa53bb80 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa53bb48 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53bb38 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa53bb68 <col:19> 'int' 0))
  (DeclStmt 0xa53bc30 <line:654:7, col:33>
    0xa53bba0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53bc10 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53bbe8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53bbd8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53bc00 <col:28> '_Bool' true))")
  (IfStmt 0xa53c400 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53bc40 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0xa53bba0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa53c3d8 <line:656:2, line:673:2>
      (DeclStmt 0xa53bd18 <line:657:4, col:47>
        0xa53bc90 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53bd08 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53bce4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53c0f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53bd28 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53c0d8 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0xa53be60 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0xa53bd48 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
              (CXXThisExpr 0xa53bd38 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0xa53be38 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa53bdd0 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0xa53bdb0 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa53bd78 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0xa53bd68 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0xa53be04 <col:41> 'char_type *' lvalue ParmVar 0xa53b8b0 '__s' 'char_type *')
              (DeclRefExpr 0xa53be1c <col:46> 'streamsize':'int' lvalue ParmVar 0xa53b8f0 '__n' 'streamsize':'int')))
          (IfStmt 0xa53c0b8 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0xa53bf18 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0xa53bec0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
              (MemberExpr 0xa53be88 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa53be78 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0xa53bea8 <col:25> 'streamsize':'int' lvalue ParmVar 0xa53b8f0 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0xa53c090 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa53c080 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa53c068 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa53bf3c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53bc90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa53c050 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa53c028 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa53c018 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa53c000 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2ae0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa53bfe0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa53bf80 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa53bff0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa53bfbc <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa53c1f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53c110 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53c1d8 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0xa53c1a8 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53c130 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53c120 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53c184 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53c1c8 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0xa53c2e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53c210 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53c2c8 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0xa53c2a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53c230 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53c220 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53c284 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53c3b8 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53c328 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53c318 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53c2fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53bc90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53c398 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53c348 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa53c338 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53c37c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53bc90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53c448 <line:674:7, col:15>
    (UnaryOperator 0xa53c430 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa53c420 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0xa53d300 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0xa53c8a0 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa53c868 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53c858 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa53c888 <col:19> 'int' 0))
  (DeclStmt 0xa53c950 <line:683:7, col:33>
    0xa53c8c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53c930 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53c908 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53c8f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53c920 <col:28> '_Bool' true))")
  (IfStmt 0xa53d2a0 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53c960 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0xa53c8c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa53d278 <line:685:2, line:705:2>
      (DeclStmt 0xa53ca38 <line:686:4, col:47>
        0xa53c9b0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53ca28 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53ca04 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53cf90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53ca48 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53cf78 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0xa53cb58 <line:690:8, col:58>
            0xa53ca60 "const streamsize __num =
              (CallExpr 0xa53cb38 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53cb00 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0xa53cae0 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa53caa8 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa53ca98 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0xa53cf58 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0xa53cba8 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0xa53cb98 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa53cb68 <col:12> 'const streamsize':'const int' lvalue Var 0xa53ca60 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0xa53cb80 <col:20> 'int' 0))
            (BinaryOperator 0xa53cdf8 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0xa53cbd0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
                (CXXThisExpr 0xa53cbc0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0xa53cdd0 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53cc58 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0xa53cc38 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa53cc00 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0xa53cbf0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0xa53cc8c <col:36> 'char_type *' lvalue ParmVar 0xa53c720 '__s' 'char_type *')
                (CallExpr 0xa53cd98 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0xa53cd88 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa53cd60 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0xa402c10 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0xa159fa0 'min')))
                  (DeclRefExpr 0xa53cd00 <col:50> 'const streamsize':'const int' lvalue Var 0xa53ca60 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0xa53cdc0 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0xa53cd18 <col:57> 'streamsize':'int' lvalue ParmVar 0xa53c760 '__n' 'streamsize':'int')))))
            (IfStmt 0xa53cf38 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0xa53ce68 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0xa53ce58 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0xa53ce10 <col:17> 'const streamsize':'const int' lvalue Var 0xa53ca60 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0xa53ce40 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0xa53ce28 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0xa53cf10 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0xa53cf00 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa53cee8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0xa53ce80 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53c9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0xa53ced8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0xa53ceb4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0xa53d090 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53cfb0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53d078 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0xa53d048 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53cfd0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53cfc0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53d024 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53d068 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0xa53d180 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53d0b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53d168 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0xa53d148 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53d0d0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53d0c0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53d124 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53d258 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53d1c8 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53d1b8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53d19c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53c9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53d238 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53d1e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa53d1d8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53d21c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53c9b0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53d2f0 <line:706:7, col:14>
    (MemberExpr 0xa53d2d0 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53d2c0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0xa53e428 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0xa53d930 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa53d8f8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53d8e8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa53d918 <col:19> 'int' 0))
  (CallExpr 0xa53db10 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa53d958 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa53d948 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa53dae8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa53daa8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa53d9d8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa53d9a0 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa53d990 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa53da88 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa53da78 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa53da48 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa3d2f20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa53da38 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa53da14 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa53dbd0 <line:719:7, col:33>
    0xa53db40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53dbb0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53db88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53db78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53dba0 <col:28> '_Bool' true))")
  (IfStmt 0xa53e3d0 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53dbe0 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0xa53db40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa53e3a8 <line:721:2, line:740:2>
      (DeclStmt 0xa53dcb8 <line:722:4, col:47>
        0xa53dc30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53dca8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53dc84 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53e0c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53dcc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53e0a0 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0xa53dd90 <line:725:8, col:49>
            0xa53dce0 "const int_type __eof =
              (CallExpr 0xa53dd70 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53dd38 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa53de50 <line:726:8, col:46>
            0xa53ddb0 "__streambuf_type *__sb =
              (CallExpr 0xa53de30 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53ddf8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa53dde8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa53e080 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0xa53dfb0 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0xa53de78 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa53de60 <col:13> '__streambuf_type *' lvalue Var 0xa53ddb0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa53df88 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53deb0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa53df50 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa53df00 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa53dee4 <col:33> '__streambuf_type *' lvalue Var 0xa53ddb0 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0xa53df34 <col:49> 'char_type':'_CharT' lvalue ParmVar 0xa53d6a0 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0xa53df70 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa53dce0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa53e058 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa53e048 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa53e030 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa53dfc8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53dc30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa53e020 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53dffc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa53e1c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53e0e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53e1a8 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0xa53e178 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53e100 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53e0f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53e154 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53e198 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0xa53e2b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53e1e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53e298 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0xa53e278 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53e200 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53e1f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53e254 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53e388 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53e2f8 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53e2e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53e2cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53dc30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53e368 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53e318 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa53e308 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53e34c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53dc30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53e418 <line:741:7, col:15>
    (UnaryOperator 0xa53e400 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa53e3f0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0xa53f510 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0xa53ea48 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0xa53ea10 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0xa50a570
      (CXXThisExpr 0xa53ea00 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0xa53ea30 <col:19> 'int' 0))
  (CallExpr 0xa53ec10 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa53ea70 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa53ea60 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa53ebe8 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa53eba8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa53eaf0 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa53eab8 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa53eaa8 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa53eb88 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa53eb78 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa53eb60 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa3d2f20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa53eb50 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa53eb2c <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa53ecd0 <line:754:7, col:33>
    0xa53ec40 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53ecb0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53ec88 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53ec78 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53eca0 <col:28> '_Bool' true))")
  (IfStmt 0xa53f4b8 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53ece0 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0xa53ec40 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa53f490 <line:756:2, line:775:2>
      (DeclStmt 0xa53edb8 <line:757:4, col:47>
        0xa53ed30 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53eda8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53ed84 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53f1a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53edc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53f188 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0xa53ee90 <line:760:8, col:49>
            0xa53ede0 "const int_type __eof =
              (CallExpr 0xa53ee70 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53ee38 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0xa53ef50 <line:761:8, col:46>
            0xa53eeb0 "__streambuf_type *__sb =
              (CallExpr 0xa53ef30 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53eef8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa53eee8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa53f168 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0xa53f098 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0xa53ef78 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0xa53ef60 <col:13> '__streambuf_type *' lvalue Var 0xa53eeb0 '__sb' '__streambuf_type *'))
              (CallExpr 0xa53f070 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53efb0 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0xa53f038 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa53f000 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0xa53efe4 <col:33> '__streambuf_type *' lvalue Var 0xa53eeb0 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0xa53f054 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa53ede0 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0xa53f140 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa53f130 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa53f118 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa53f0b0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ed30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa53f108 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa53f0e4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa53f2a8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53f1c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53f290 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0xa53f260 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53f1e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53f1d8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53f23c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53f280 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0xa53f398 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53f2c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53f380 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0xa53f360 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53f2e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53f2d8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53f33c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa53f470 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa53f3e0 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa53f3d0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53f3b4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ed30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa53f450 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa53f400 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa53f3f0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa53f434 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53ed30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa53f500 <line:776:7, col:15>
    (UnaryOperator 0xa53f4e8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa53f4d8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0xa5401c8 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0xa53f938 <line:786:7, col:21>
    0xa53f8d0 "int __ret =
      (UnaryOperator 0xa53f920 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0xa53f908 <col:20> 'int' 1))")
  (DeclStmt 0xa53f9e0 <line:787:7, col:33>
    0xa53f950 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa53f9c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa53f998 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa53f988 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa53f9b0 <col:28> '_Bool' true))")
  (IfStmt 0xa540170 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0xa53f9f0 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0xa53f950 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa540148 <line:789:2, line:811:2>
      (DeclStmt 0xa53fac8 <line:790:4, col:47>
        0xa53fa40 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa53fab8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa53fa94 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa53fe60 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53fad8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa53fe48 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0xa53fba0 <line:793:8, col:46>
            0xa53fb00 "__streambuf_type *__sb =
              (CallExpr 0xa53fb80 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa53fb48 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0xa53fb38 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0xa53fe28 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0xa53fbb0 <line:794:12> '__streambuf_type *' lvalue Var 0xa53fb00 '__sb' '__streambuf_type *')
            (CompoundStmt 0xa53fe10 <line:795:3, line:800:3>
              (IfStmt 0xa53fdf0 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa53fcc8 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0xa53fc68 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (CallExpr 0xa53fc18 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa53fbe0 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0xa53fbc8 <col:9> '__streambuf_type *' lvalue Var 0xa53fb00 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0xa53fc50 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0xa53fc38 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0xa53fd80 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa53fd70 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa53fd58 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa53fcec <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53fa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa53fd48 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa53fd24 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0xa53fdd8 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0xa53fda4 <col:7> 'int' lvalue Var 0xa53f8d0 '__ret' 'int')
                  (IntegerLiteral 0xa53fdc0 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa53ff60 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53fe80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa53ff48 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0xa53ff18 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53fea0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53fe90 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53fef4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa53ff38 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0xa540050 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa53ff80 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa540038 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0xa540018 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa53ffa0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa53ff90 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa53fff4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa540128 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa540098 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa540088 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa54006c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53fa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa540108 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5400b8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5400a8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa5400ec <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa53fa40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa5401b8 <line:812:7, col:14>
    (ImplicitCastExpr 0xa5401a8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0xa54018c <col:14> 'int' lvalue Var 0xa53f8d0 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0xa540e48 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0xa5408a0 <line:822:7, col:36>
    0xa540810 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa540880 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0xa540868 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0xa540850 <col:34> 'int' 1)))")
  (DeclStmt 0xa540950 <line:823:7, col:33>
    0xa5408c0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa540930 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa540908 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5408f8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa540920 <col:28> '_Bool' true))")
  (IfStmt 0xa540e00 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0xa540960 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0xa5408c0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa540de0 <line:825:2, line:839:2>
      (IfStmt 0xa540bd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa540978 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa540bb8 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0xa540b98 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0xa5409f0 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa5409d0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa540998 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa540988 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0xa540b80 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0xa540a04 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa540810 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0xa540b58 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa540a88 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa540a68 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa540a30 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa540a20 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0xa540ac0 <col:37> 'int' 0)
                (DeclRefExpr 0xa540af4 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa3d4c50 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0xa540b34 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa540cd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa540bf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa540cb8 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0xa540c88 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa540c10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa540c00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa540c64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa540ca8 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0xa540dc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa540cf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa540da8 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0xa540d88 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa540d10 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa540d00 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa540d64 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa540e38 <line:840:7, col:14>
    (DeclRefExpr 0xa540e1c <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0xa540810 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0xa541f48 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0xa5415e8 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa541448 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa541438 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa5415c0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa541580 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa5414c8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa541490 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa541480 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa541560 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa541550 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa541538 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa3d2f20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa541528 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa541504 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa5416a0 <line:852:7, col:33>
    0xa541610 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa541680 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa541658 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa541648 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa541670 <col:28> '_Bool' true))")
  (IfStmt 0xa541ef0 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0xa5416b0 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0xa541610 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa541ec8 <line:854:2, line:878:2>
      (DeclStmt 0xa541788 <line:855:4, col:47>
        0xa541700 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa541778 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa541754 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa541be0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa541798 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa541bc8 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0xa541ba8 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0xa541810 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa5417f0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5417b8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5417a8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa541b90 <line:859:3, line:867:3>
              (DeclStmt 0xa541988 <line:861:5, line:862:23>
                0xa541830 "const pos_type __p =
                  (CallExpr 0xa541960 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5418d0 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa5418b0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa541878 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa541868 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa541904 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0xa5411f0 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0xa54193c <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa541b70 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa541a90 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa541a30 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (DeclRefExpr 0xa541998 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa541830 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa541a10 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa5419f0 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa5419d8 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa5419c0 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa541b48 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa541b38 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa541b20 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa541ab4 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa541700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa541b10 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa541aec <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa541ce0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa541c00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa541cc8 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0xa541c98 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa541c20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa541c10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa541c74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa541cb8 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0xa541dd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa541d00 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa541db8 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0xa541d98 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa541d20 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa541d10 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa541d74 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa541ea8 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa541e18 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa541e08 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa541dec <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa541700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa541e88 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa541e38 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa541e28 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa541e6c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa541700 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa541f38 <line:879:7, col:15>
    (UnaryOperator 0xa541f20 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa541f10 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0xa544f30 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0xa5445b8 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa544418 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa544408 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0xa544590 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0xa544550 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (CallExpr 0xa544498 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa544460 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0xa544450 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0xa544530 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0xa544520 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa544508 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0xa3d2f20 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0xa5444f8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0xa5444d4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0xa544670 <line:891:7, col:33>
    0xa5445e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0xa544650 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0xa544628 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa544618 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0xa544640 <col:28> '_Bool' true))")
  (IfStmt 0xa544ed8 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0xa544680 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0xa5445e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0xa544eb0 <line:893:2, line:917:2>
      (DeclStmt 0xa544758 <line:894:4, col:47>
        0xa5446d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa544748 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa544724 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa544bc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa544768 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa544bb0 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0xa544b90 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0xa5447e0 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0xa5447c0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa544788 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0xa544778 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0xa544b78 <line:898:3, line:906:3>
              (DeclStmt 0xa544970 <line:900:5, line:901:23>
                0xa544800 "const pos_type __p =
                  (CallExpr 0xa544948 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5448a0 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0xa544880 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0xa544848 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0xa544838 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0xa5448d4 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0xa544150 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0xa5448ec <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa5441c0 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0xa544924 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0xa544b58 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0xa544a78 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0xa544a18 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
                  (DeclRefExpr 0xa544980 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0xa544800 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0xa5449f8 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0xa5449d8 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0xa5449c0 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0xa5449a8 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0xa544b30 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0xa544b20 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa544b08 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0xa544a9c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5446d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0xa544af8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa544ad4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0xa544cc8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa544be8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa544cb0 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0xa544c80 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa544c08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa544bf8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa544c5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa544ca0 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0xa544db8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa544ce8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa544da0 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0xa544d80 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa544d08 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa544cf8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0xa544d5c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa544e90 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0xa544e00 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa544df0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa544dd4 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5446d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa544e70 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa544e20 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa544e10 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0xa544e54 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa5446d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa544f20 <line:918:7, col:15>
    (UnaryOperator 0xa544f08 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa544ef8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0xa546010 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0xa545540 <line:926:7, col:61>
    0xa545510 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa545600 <line:927:7, col:67>
    0xa5455d0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa5456f0 <line:929:7, col:58>
    0xa545670 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa5456d0 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa5456a4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa5456c0 <col:52> '_Bool' false))")
  (IfStmt 0xa545fc8 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0xa545700 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0xa545670 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa545fa0 <line:931:2, line:950:2>
      (DeclStmt 0xa5457d8 <line:932:4, col:47>
        0xa545750 "ios_base::iostate __err =
          (ImplicitCastExpr 0xa5457c8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa5457a4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0xa545ca0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5457e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa545c88 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0xa545920 <line:935:8, col:54>
            0xa545820 "const __int_type __cb =
              (CallExpr 0xa545900 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5458c8 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0xa5458a8 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa545870 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0xa545854 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0xa545c68 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0xa545a28 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0xa545a00 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa545958 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0xa54597c <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa545820 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0xa5459e0 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa5459b8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0xa545ad8 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0xa545a3c <col:3> '_CharT' lvalue ParmVar 0xa545280 '__c' '_CharT &')
              (CallExpr 0xa545ab8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa545a78 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0xa545a9c <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa545820 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0xa545c40 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa545c30 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa545c18 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa545af0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa545750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0xa545c00 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0xa545bd8 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0xa545bc8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa545bb0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0xa3d2ae0 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0xa545b90 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa545b30 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0xa545ba0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0xa545b6c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0xa545da8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa545cc0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa545d90 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0xa545d60 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa545ce8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa545cd0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa545d3c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa545d80 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0xa545ea0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa545dc8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa545e88 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0xa545e68 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa545df0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa545dd8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa545e44 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0xa545f80 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0xa545ee8 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0xa545ed8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0xa545ebc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa545750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0xa545f60 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa545f10 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0xa545ef4 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0xa545f44 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa545750 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa546000 <line:951:7, col:14>
    (DeclRefExpr 0xa545fe4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa545210 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0xa547e38 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0xa546610 <line:958:7, col:61>
    0xa5465e0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa546760 <line:959:7, col:73>
    0xa546730 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa546810 <line:960:7, col:51>
    0xa5467e0 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0xa546860 <line:961:7, col:35>
    0xa546830 "typedef _CharT char_type")
  (DeclStmt 0xa546950 <line:962:7, col:44>
    0xa546920 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa5469c0 <line:964:7, col:33>
    0xa546970 "streamsize __extracted =
      (IntegerLiteral 0xa5469a8 <col:32> 'int' 0)")
  (DeclStmt 0xa546a88 <line:965:7, col:50>
    0xa546a00 "ios_base::iostate __err =
      (ImplicitCastExpr 0xa546a78 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa546a54 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d48b0 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0xa546ba0 <line:966:7, col:58>
    0xa546b20 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0xa546b80 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0xa546b54 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0xa546b70 <col:52> '_Bool' false))")
  (IfStmt 0xa547be8 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0xa546bb0 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0xa546b20 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0xa547bc8 <line:968:2, line:1006:2>
      (IfStmt 0xa5479a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa546bc8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa547970 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0xa546c88 <line:972:8, col:39>
            0xa546be0 "streamsize __num =
              (CallExpr 0xa546c68 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa546c30 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0xa546c14 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0xa546dd8 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0xa546cd8 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0xa546cc8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0xa546c98 <col:12> 'streamsize':'int' lvalue Var 0xa546be0 '__num' 'streamsize':'int'))
              (IntegerLiteral 0xa546cb0 <col:21> 'int' 0))
            (BinaryOperator 0xa546dc0 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0xa546cf0 <col:3> 'streamsize':'int' lvalue Var 0xa546be0 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0xa546db0 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0xa546d90 <col:11, col:52> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0xa546f78 <line:976:8, col:73>
            0xa546e40 "const __ctype_type &__ct =
              (CallExpr 0xa546f58 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0xa546e80 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
                (CallExpr 0xa546f38 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa546f00 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0xa546ee8 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0xa547050 <line:978:8, col:45>
            0xa546fb0 "const int_type __eof =
              (CallExpr 0xa547030 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0xa547008 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0xa547148 <line:979:8, col:45>
            0xa5470a0 "__streambuf_type *__sb =
              (CallExpr 0xa547128 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5470f0 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5470d4 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0xa547208 <line:980:8, col:36>
            0xa547160 "int_type __c =
              (CallExpr 0xa5471e8 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5471b0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0xa547194 <col:23> '__streambuf_type *' lvalue Var 0xa5470a0 '__sb' '__streambuf_type *')))")
          (WhileStmt 0xa5476d0 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0xa5474d0 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0xa547368 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0xa547298 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0xa547288 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0xa547218 <col:15> 'streamsize':'int' lvalue Var 0xa546970 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0xa547270 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0xa547260 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0xa547230 <col:29> 'streamsize':'int' lvalue Var 0xa546be0 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0xa547248 <col:37> 'int' 1)))
                (UnaryOperator 0xa547350 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0xa547328 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa5472d0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa5472f4 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa547160 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0xa54730c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa546fb0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0xa5474b8 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0xa547490 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa547398 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa547380 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa546e40 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0xa5473ec <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0xa4300e0 'space' 'const mask':'const unsigned short')
                  (CallExpr 0xa547470 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0xa547430 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa547454 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0xa547160 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0xa5476b0 <line:986:3, line:990:3>
              (BinaryOperator 0xa5475c8 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0xa547530 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0xa547518 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0xa5474e8 <col:6> '_CharT *' lvalue ParmVar 0xa546370 '__s' '_CharT *')))
                (CallExpr 0xa5475a8 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0xa547568 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa54758c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0xa547160 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0xa5475f8 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0xa5475e0 <col:7> 'streamsize':'int' lvalue Var 0xa546970 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0xa547698 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0xa54760c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0xa547160 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0xa547678 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa547640 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0xa547624 <col:11> '__streambuf_type *' lvalue Var 0xa5470a0 '__sb' '__streambuf_type *'))))))
          (IfStmt 0xa547848 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0xa547768 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0xa547710 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0xa547734 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0xa547160 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0xa54774c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0xa546fb0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0xa547820 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0xa547810 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa5477f8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0xa54778c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa546a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0xa5477e8 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0xa5477c4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0xa5478d0 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0xa547880 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa547864 <col:9> '_CharT *' lvalue ParmVar 0xa546370 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0xa5478b8 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0xa547950 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa547900 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa5478e8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0xa547938 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0xa547ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5479c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa547a98 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0xa547a68 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5479f0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa5479d8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa547a44 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0xa547a88 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0xa547ba8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa547ad0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa547b90 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0xa547b70 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa547af8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0xa547ae0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0xa547b4c <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4790 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0xa547d10 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0xa547c40 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa547c30 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa547c20 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa547c04 <col:12> 'streamsize':'int' lvalue Var 0xa546970 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0xa547ce8 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0xa547cd8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa547cc0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0xa3d3160 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0xa547c54 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa546a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0xa547cb0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa547c8c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d4850 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0xa547df0 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0xa547d58 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa547d48 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0xa547d2c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa546a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0xa547dd0 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa547d80 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa547d64 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa547db4 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0xa546a00 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa547e28 <line:1011:7, col:14>
    (DeclRefExpr 0xa547e0c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa546300 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0xa548f98 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0xa548400 <line:1019:7, col:61>
    0xa5483d0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0xa548550 <line:1020:7, col:73>
    0xa548520 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0xa548610 <line:1021:7, col:60>
    0xa5485e0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0xa548700 <line:1022:7, col:44>
    0xa5486d0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0xa548888 <line:1024:7, col:72>
    0xa548750 "const __ctype_type &__ct =
      (CallExpr 0xa548868 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0xa548790 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0xa3c3220)
        (CallExpr 0xa548848 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa548810 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0xa5487f8 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa548140 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0xa548968 <line:1025:7, col:46>
    0xa5488c0 "const __int_type __eof =
      (CallExpr 0xa548948 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0xa548920 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0xa548a68 <line:1026:7, col:44>
    0xa5489c0 "__streambuf_type *__sb =
      (CallExpr 0xa548a48 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa548a10 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0xa5489f4 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa548140 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0xa548b28 <line:1027:7, col:37>
    0xa548a80 "__int_type __c =
      (CallExpr 0xa548b08 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa548ad0 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0xa548ab4 <col:24> '__streambuf_type *' lvalue Var 0xa5489c0 '__sb' '__streambuf_type *')))")
  (WhileStmt 0xa548de0 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0xa548d28 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0xa548bd8 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0xa548bb0 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa548b58 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0xa548b7c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa548a80 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0xa548b94 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa5488c0 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0xa548d00 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa548c08 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa548bec <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0xa548750 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0xa548c5c <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0xa4300e0 'space' 'const mask':'const unsigned short')
        (CallExpr 0xa548ce0 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0xa548ca0 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0xa548cc4 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa548a80 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0xa548dc8 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0xa548d40 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa548a80 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0xa548da8 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa548d70 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0xa548d58 <col:8> '__streambuf_type *' lvalue Var 0xa5489c0 '__sb' '__streambuf_type *')))))
  (IfStmt 0xa548f50 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0xa548e78 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa548e20 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0xa548e44 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0xa548a80 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0xa548e5c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0xa5488c0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0xa548f30 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa548eb8 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0xa548e9c <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa548140 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0xa548f0c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0xa3d47f0 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0xa548f88 <line:1035:7, col:14>
    (DeclRefExpr 0xa548f6c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0xa548140 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0xa5549c8 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa5549b8 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa5549a0 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554980 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55491c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554990 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55495c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0xa554dc8 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa553700 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0xa554e68 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa554ab8 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa554aa8 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa554a90 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554a70 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554a0c <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554a80 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554a4c <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0xa554f48 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa554f10 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0xa554ef8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa553850 '__str' 'const __string_type &')))
, (CallExpr 0xa554fb8 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa554f80 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0xa554f64 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa553850 '__str' 'const __string_type &')))
) (CompoundStmt 0xa5550b0 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0xa555090 <col:9, col:33> '<dependent type>'
    (MemberExpr 0xa555058 <col:9> '<bound member function type>' ->_M_stringbuf_init 0xa553c60
      (CXXThisExpr 0xa555048 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa555078 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa5538c0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0xa558af0 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0xa555108 <line:123:2, col:21>
    0xa5550d0 "__string_type __ret")
  (IfStmt 0xa558aa8 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0xa555180 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa555148 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0xa555138 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0xa558a30 <line:125:4, line:131:4>
      (IfStmt 0xa558a10 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa5552b8 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0xa555270 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (CallExpr 0xa5551e8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5551b0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa5551a0 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa555250 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa555218 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0xa555208 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa5588d0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0xa5552dc <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5550d0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa5588b0 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa558828 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5587f0 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0xa5587e0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa558890 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa558858 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa558848 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0xa5589f8 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0xa5588e8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5550d0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0xa5589d8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0xa558950 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa558918 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0xa558908 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa5589b8 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa558980 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa558970 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0xa558a90 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0xa558a44 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5550d0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0xa558a70 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
        (CXXThisExpr 0xa558a60 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0xa558ae0 <line:134:2, col:9>
    (DeclRefExpr 0xa558ac4 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5550d0 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0xa558d00 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0xa558c58 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa558b40 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0xa558b20 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
        (CXXThisExpr 0xa558b10 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0xa558bc8 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa558b90 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0xa558b74 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa553a90 '__s' 'const __string_type &')))
    (CallExpr 0xa558c38 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa558c00 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0xa558be4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0xa553a90 '__s' 'const __string_type &'))))
  (CallExpr 0xa558ce0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0xa558c90 <col:2> '<bound member function type>' ->_M_stringbuf_init 0xa553c60
      (CXXThisExpr 0xa558c80 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0xa558cc0 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
      (CXXThisExpr 0xa558cb0 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0xa559190 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0xa558d60 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0xa558d28 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
      (CXXThisExpr 0xa558d18 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa558d48 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa553c10 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0xa558dd0 <line:158:2, col:23>
    0xa558d80 "__size_type __len =
      (IntegerLiteral 0xa558db8 <col:22> 'int' 0)")
  (IfStmt 0xa559038 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa558f58 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa558f20 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cf7b0)
      (MemberExpr 0xa558df0 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
        (CXXThisExpr 0xa558de0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0xa558f08 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0xa558ee0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0xa558ed0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa558eb8 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0xa558e98 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa558e38 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d49c0 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0xa558ea8 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0xa558e74 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4960 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0xa559020 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0xa558f7c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0xa558d80 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0xa559000 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa558fc8 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0xa558fa8 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa558f98 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0xa559168 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0xa559068 <col:2> '<bound member function type>' ->_M_sync 0xa554640
      (CXXThisExpr 0xa559058 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0xa559120 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0xa5590f0 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5590b8 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0xa559098 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa559088 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0xa559138 <col:52> 'int' 0)
    (DeclRefExpr 0xa559150 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0xa558d80 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0xa559528 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0xa559228 <line:167:2, col:23>
    0xa5591c0 "streamsize __ret =
      (UnaryOperator 0xa559210 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0xa5591f8 <col:22> 'int' 1))")
  (IfStmt 0xa5594d0 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5592e0 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa5592a8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cf7b0)
      (MemberExpr 0xa559248 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
        (CXXThisExpr 0xa559238 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa559284 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0xa5594b8 <line:169:4, line:172:4>
      (CallExpr 0xa559338 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0xa559318 <col:6> '<bound member function type>' ->_M_update_egptr 0xa5546d0
          (CXXThisExpr 0xa559308 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0xa5594a0 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0xa559354 <col:6> 'streamsize':'int' lvalue Var 0xa5591c0 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0xa559478 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0xa559440 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa5593b8 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559380 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa559370 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa559420 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5593e8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa5593d8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0xa559518 <line:173:2, col:9>
    (ImplicitCastExpr 0xa559508 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0xa5594ec <col:9> 'streamsize':'int' lvalue Var 0xa5591c0 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0xa554b28 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa554b00 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0xa554b90 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa554b68 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0xa559750 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0xa559710 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0xa5595b8 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0xa559544 <col:6> 'char_type *' lvalue ParmVar 0xa553fe0 '__s' 'char_type *')
      (BinaryOperator 0xa5595a0 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0xa559590 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0xa55955c <col:13> 'streamsize':'int' lvalue ParmVar 0xa554020 '__n' 'streamsize':'int'))
        (IntegerLiteral 0xa559578 <col:20> 'int' 0)))
    (CompoundStmt 0xa5596f8 <line:200:4, line:211:4>
      (CallExpr 0xa559638 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa559600 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0xa5595e0 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa5595d0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0xa5596d0 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0xa559668 <col:6> '<bound member function type>' ->_M_sync 0xa554640
          (CXXThisExpr 0xa559658 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa559688 <col:14> 'char_type *' lvalue ParmVar 0xa553fe0 '__s' 'char_type *')
        (DeclRefExpr 0xa5596a0 <col:19> 'streamsize':'int' lvalue ParmVar 0xa554020 '__n' 'streamsize':'int')
        (IntegerLiteral 0xa5596b8 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0xa559740 <line:212:2, col:9>
    (CXXThisExpr 0xa559730 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa554c78 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa554c68 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa554c50 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554c30 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554bcc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554c40 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554c0c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa554d68 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa554d58 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa554d40 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554d20 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554cbc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554d30 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554cfc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0xa559e18 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0xa559878 <line:234:2, col:46>
    0xa559770 "const bool __testin =
      (CXXOperatorCallExpr 0xa559850 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0xa559818 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cf7b0)
        (MemberExpr 0xa5597b8 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
          (CXXThisExpr 0xa5597a8 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa5597f4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa559df8 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0xa559a30 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0xa5598d0 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa559898 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa559888 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0xa559a08 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa5599c0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
        (CallExpr 0xa559938 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa559900 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0xa5598f0 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa5599a0 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa559968 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0xa559958 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa559de0 <line:236:4, line:241:4>
      (IfStmt 0xa559dc0 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0xa559a60 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa559a48 <col:10> 'const _Bool' lvalue Var 0xa559770 '__testin' 'const _Bool'))
        (CallExpr 0xa559bf0 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa559a80 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa559a70 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa559b00 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559ac8 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa559ab8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa559b68 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559b30 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa559b20 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa559bd0 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559b98 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0xa559b88 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0xa559d98 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa559c28 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa559c18 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0xa559ca8 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559c70 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa559c60 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa559d10 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559cd8 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0xa559cc8 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa559d78 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa559d40 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa559d30 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa55af98 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa55af74 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa55b0e8 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55b0d8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55b0c0 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55b0a0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55b048 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55a9c0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55b0b0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55b07c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa55b260 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0xa55b240 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55b178 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55b168 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55b220 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55b1e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55b1c0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55a920
        (CXXThisExpr 0xa55b1b0 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa55afe8 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa55afc4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0xa55b2b8 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55aae0 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa55b370 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55b360 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55b348 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55b328 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55b2d0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55ab50 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55b338 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55b304 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa55b4d8 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0xa55b4b8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55b3f0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55b3e0 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55b498 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55b458 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55b438 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55a920
        (CXXThisExpr 0xa55b428 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa55b4f0 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa55b5e0 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0xa55b5d0 <col:9, col:59>
    (CXXConstCastExpr 0xa55b5b8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa55b588 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa55b548 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (MemberExpr 0xa55b528 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55a920
          (CXXThisExpr 0xa55b518 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa55b690 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0xa55b680 <col:9, col:33>
    (CallExpr 0xa55b660 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa55b628 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa55b608 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55a920
          (CXXThisExpr 0xa55b5f8 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa55b748 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0xa55b728 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55b6d8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa55b6b8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55a920
        (CXXThisExpr 0xa55b6a8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa55b70c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55ae70 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0xa55c888 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa55c864 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0xa55c9d8 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55c9c8 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55c9b0 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55c990 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55c938 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55c2f0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55c9a0 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55c96c <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa55cb50 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0xa55cb30 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55ca68 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55ca58 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55cb10 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55cad0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55cab0 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55c250
        (CXXThisExpr 0xa55caa0 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0xa55c8d8 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0xa55c8b4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0xa55cba8 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55c410 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0xa55cc60 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55cc50 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55cc38 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55cc18 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55cbc0 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55c480 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55cc28 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55cbf4 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa55cdc8 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0xa55cda8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55cce0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55ccd0 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55cd88 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55cd48 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55cd28 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55c250
        (CXXThisExpr 0xa55cd18 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa55cde0 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa55ced0 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0xa55cec0 <col:9, col:59>
    (CXXConstCastExpr 0xa55cea8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa55ce78 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa55ce38 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (MemberExpr 0xa55ce18 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55c250
          (CXXThisExpr 0xa55ce08 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa55cf80 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0xa55cf70 <col:9, col:33>
    (CallExpr 0xa55cf50 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa55cf18 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa55cef8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55c250
          (CXXThisExpr 0xa55cee8 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa55d038 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0xa55d018 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55cfc8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa55cfa8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55c250
        (CXXThisExpr 0xa55cf98 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa55cffc <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55c760 '__s' 'const __string_type &')))


    };
    template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0xa55e200 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55e1f0 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55e1d8 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55e1b8 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55e154 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55e1c8 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55e194 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa55e368 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55dbe0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa55e4d0 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0xa55e4b0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55e3e8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55e3d8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55e490 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55e450 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55e430 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55db40
        (CXXThisExpr 0xa55e420 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0xa55e2f0 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa55e2e0 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa55e2c8 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa55e2a8 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55e244 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa55e2b8 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa55e284 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0xa55e528 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55dd00 '__str' 'const __string_type &')
, (DeclRefExpr 0xa55e540 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa55dd70 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0xa55e698 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0xa55e678 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55e5b0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa55e5a0 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0xa55e658 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0xa55e618 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
      (MemberExpr 0xa55e5f8 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55db40
        (CXXThisExpr 0xa55e5e8 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0xa55e6b0 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0xa55e7a0 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0xa55e790 <col:9, col:59>
    (CXXConstCastExpr 0xa55e778 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0xa55e748 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0xa55e708 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (MemberExpr 0xa55e6e8 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55db40
          (CXXThisExpr 0xa55e6d8 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0xa55e850 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0xa55e840 <col:9, col:33>
    (CallExpr 0xa55e820 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa55e7e8 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0xa55e7c8 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55db40
          (CXXThisExpr 0xa55e7b8 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0xa55e908 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0xa55e8e8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa55e898 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0xa55e878 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0xa55db40
        (CXXThisExpr 0xa55e868 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0xa55e8cc <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0xa55e050 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0xa554b28 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa554b00 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0xa55fd08 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0xa55f200 <line:49:7, col:42>
    0xa55f150 "int_type __ret =
      (CallExpr 0xa55f1e0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa55f1a8 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0xa55fcc0 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa55f328 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0xa55f2e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (CallExpr 0xa55f258 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa55f220 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa55f210 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0xa55f2c0 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa55f288 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0xa55f278 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0xa55fca8 <line:51:2, line:74:2>
      (DeclStmt 0xa55f448 <line:54:4, col:63>
        0xa55f360 "const bool __testeof =
          (CallExpr 0xa55f420 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa55f3b8 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0xa55f3ec <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa55eed0 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0xa55f404 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0xa55f150 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0xa55fc88 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0xa55f480 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa55f470 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa55f458 <col:9> 'const _Bool' lvalue Var 0xa55f360 '__testeof' 'const _Bool')))
        (CompoundStmt 0xa55faf8 <line:56:6, line:68:6>
          (DeclStmt 0xa55f698 <line:57:8, line:59:28>
            0xa55f4a0 "const bool __testeq =
              (CallExpr 0xa55f670 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa55f4f8 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0xa55f5a0 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa55f550 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0xa55f584 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa55eed0 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0xa55f658 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0xa55f608 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa55f5d0 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0xa55f5c0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0xa55f640 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0xa55f628 <col:25> 'int' 1))))")
          (DeclStmt 0xa55f7d8 <line:60:8, col:60>
            0xa55f6b0 "const bool __testout =
              (CXXOperatorCallExpr 0xa55f7b0 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0xa55f770 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
                (CXXDependentScopeMemberExpr 0xa55f6f8 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa55f6e8 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0xa55f74c <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0xa55fad8 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0xa55f838 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0xa55f818 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa55f7e8 <col:12> 'const _Bool' lvalue Var 0xa55f4a0 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0xa55f828 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0xa55f800 <col:24> 'const _Bool' lvalue Var 0xa55f6b0 '__testout' 'const _Bool')))
            (CompoundStmt 0xa55fab8 <line:62:3, line:67:3>
              (CallExpr 0xa55f8c8 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa55f860 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0xa55f850 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0xa55f8b0 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0xa55f898 <col:18> 'int' 1)))
              (IfStmt 0xa55fa50 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0xa55f910 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0xa55f900 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa55f8e8 <col:10> 'const _Bool' lvalue Var 0xa55f4a0 '__testeq' 'const _Bool')))
                (BinaryOperator 0xa55fa38 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0xa55f990 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0xa55f970 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0xa55f938 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0xa55f928 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0xa55fa18 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa55f9c8 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0xa55f9fc <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa55eed0 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0xa55faa0 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0xa55fa6c <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0xa55f150 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0xa55fa84 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa55eed0 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0xa55fc70 <line:70:6, line:73:6>
          (CallExpr 0xa55fb90 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa55fb28 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa55fb18 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0xa55fb78 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0xa55fb60 <col:21> 'int' 1)))
          (BinaryOperator 0xa55fc58 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0xa55fbb0 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0xa55f150 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0xa55fc38 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa55fbe8 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0xa55fc1c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa55eed0 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa55fcf8 <line:75:7, col:14>
    (DeclRefExpr 0xa55fcdc <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa55f150 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0xa554b90 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0xa554b68 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0xa565d90 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0xa5605a8 <line:83:7, col:59>
    0xa560480 "const bool __testout =
      (CXXOperatorCallExpr 0xa560580 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0xa560540 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CXXDependentScopeMemberExpr 0xa5604c8 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0xa5604b8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56051c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa560710 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0xa560678 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa560630 <col:11, col:45> 'long'
        (ImplicitCastExpr 0xa560620 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5605b8 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa560658 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0xa5605f8 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa5605e8 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa5605d0 <col:29> 'const _Bool' lvalue Var 0xa560480 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0xa560668 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa560610 <col:40> '_Bool' false))))
    (ReturnStmt 0xa560700 <line:85:2, col:26>
      (CallExpr 0xa5606e0 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5606a8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa564958 <line:87:7, col:79>
    0xa560740 "const bool __testeof =
      (CallExpr 0xa564930 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa560798 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0xa5648a0 <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa560200 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0xa564910 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5648d8 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0xa564ac0 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0xa564a10 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0xa5649b8 <col:11, col:44> 'long'
        (ImplicitCastExpr 0xa5649a8 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa564968 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0xa5649f0 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0xa5649e0 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa564980 <col:28> 'const _Bool' lvalue Var 0xa560740 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0xa564a00 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0xa564998 <col:39> '_Bool' false))))
    (ReturnStmt 0xa564ab0 <line:89:2, col:33>
      (CallExpr 0xa564a90 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa564a40 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0xa564a74 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa560200 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0xa564bb0 <line:91:7, col:58>
    0xa564af0 "const __size_type __capacity =
      (CallExpr 0xa564b90 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa564b58 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa564b38 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa564b28 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa564c90 <line:92:7, col:58>
    0xa564bd0 "const __size_type __max_size =
      (CallExpr 0xa564c70 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa564c38 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0xa564c18 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa564c08 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0xa564e28 <line:93:7, col:58>
    0xa564cb0 "const bool __testput =
      (CXXOperatorCallExpr 0xa564e00 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa564db8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (CallExpr 0xa564d30 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa564cf8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa564ce8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa564d98 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa564d60 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0xa564d50 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa565020 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0xa564f70 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0xa564e38 <col:11> 'long (long, long)' lvalue Function 0xa30abc0 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0xa564f48 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0xa564e78 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa564e68 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa564e50 <col:29> 'const _Bool' lvalue Var 0xa564cb0 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0xa564f20 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0xa564ec0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
          (DeclRefExpr 0xa564e8c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa564af0 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0xa564ea4 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa564bd0 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0xa564f60 <col:68> '_Bool' false))
    (ReturnStmt 0xa565010 <line:95:2, col:26>
      (CallExpr 0xa564ff0 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa564fb8 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0xa565118 <line:99:7, col:62>
    0xa565050 "const char_type __conv =
      (CallExpr 0xa5650f8 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5650a8 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0xa5650dc <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa560200 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0xa565cc8 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0xa565150 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa565140 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa565128 <col:12> 'const _Bool' lvalue Var 0xa564cb0 '__testput' 'const _Bool')))
    (CompoundStmt 0xa565be8 <line:101:2, line:122:2>
      (DeclStmt 0xa5652d8 <line:111:4, line:112:25>
        0xa565170 "const __size_type __opt_len =
          (CallExpr 0xa5652b0 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0xa5651c8 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0xa15a2b0 0xa15aa20)
            (CXXUnresolvedConstructExpr 0xa565250 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0xa565238 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0xa565208 <col:55> 'int' 2)
                (DeclRefExpr 0xa565220 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa564af0 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0xa565290 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0xa565278 <col:20> 'int' 512)))")
      (DeclStmt 0xa5653d0 <line:113:4, col:61>
        0xa5652f0 "const __size_type __len =
          (CallExpr 0xa5653a8 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0xa565340 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa159fa0 0xa15a690)
            (DeclRefExpr 0xa565378 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa565170 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0xa565390 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa564bd0 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0xa565428 <line:114:4, col:23>
        0xa5653f0 "__string_type __tmp")
      (CallExpr 0xa5654a0 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa565450 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa565438 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5653f0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa565484 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0xa5652f0 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0xa565738 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0xa565508 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5654d0 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa5654c0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa565710 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa565540 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0xa565524 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5653f0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0xa5655c0 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa565588 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0xa565578 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa5656e8 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0xa5656b0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
            (CallExpr 0xa565628 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5655f0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0xa5655e0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa565690 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa565658 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0xa565648 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0xa5657c0 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa565770 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa565754 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5653f0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0xa5657a4 <col:20> 'const char_type':'const _CharT' lvalue Var 0xa565050 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0xa565860 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa565810 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0xa5657f0 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa5657e0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0xa565844 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0xa5653f0 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0xa565bc0 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0xa565890 <line:120:4> '<bound member function type>' ->_M_sync 0xa554640
          (CXXThisExpr 0xa565880 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0xa565948 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0xa565918 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5658e0 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0xa5658c0 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
                (CXXThisExpr 0xa5658b0 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0xa565a68 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa565a30 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa5659a8 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa565970 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0xa565960 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa565a10 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5659d8 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa5659c8 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0xa565b98 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa565b60 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa565ad8 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa565aa0 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0xa565a90 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa565b40 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa565b08 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0xa565af8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0xa565cb0 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0xa565c80 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0xa565c60 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa565c28 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0xa565c18 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0xa565c94 <col:18> 'const char_type':'const _CharT' lvalue Var 0xa565050 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0xa565d48 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa565cf8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa565ce8 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0xa565d30 <col:19> 'int' 1))
  (ReturnStmt 0xa565d80 <line:126:7, col:14>
    (DeclRefExpr 0xa565d68 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0xa560200 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0xa566a48 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0xa566590 <line:134:7, col:42>
    0xa5664e0 "int_type __ret =
      (CallExpr 0xa566570 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa566538 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0xa5666d8 <line:135:7, col:57>
    0xa5665b0 "const bool __testin =
      (CXXOperatorCallExpr 0xa5666b0 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa566670 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (CXXDependentScopeMemberExpr 0xa5665f8 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0xa5665e8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56664c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0xa566a00 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa566700 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa5666e8 <col:11> 'const _Bool' lvalue Var 0xa5665b0 '__testin' 'const _Bool'))
    (CompoundStmt 0xa5669e8 <line:137:2, line:143:2>
      (CallExpr 0xa566740 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0xa566720 <col:4> '<bound member function type>' ->_M_update_egptr 0xa5546d0
          (CXXThisExpr 0xa566710 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0xa5669c8 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa566878 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa566830 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
          (CallExpr 0xa5667a8 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa566770 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa566760 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0xa566810 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5667d8 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0xa5667c8 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0xa5669b0 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0xa56689c <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0xa5664e0 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0xa566990 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5668d8 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0xa566978 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0xa566958 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa566920 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0xa566910 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa566a38 <line:144:7, col:14>
    (DeclRefExpr 0xa566a1c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0xa5664e0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa554c78 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa554c68 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa554c50 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554c30 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554bcc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554c40 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554c0c <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa569118 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0xa567398 <line:152:7, col:47>
    0xa5672e0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa567378 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa567358 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa567340 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa567328 <col:44> 'int' 1))))")
  (DeclStmt 0xa567610 <line:153:7, col:67>
    0xa5673b0 "bool __testin =
      (CXXOperatorCallExpr 0xa5675e8 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa567590 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
        (ParenExpr 0xa567560 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0xa567538 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0xa5674f8 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
            (CXXOperatorCallExpr 0xa5674b8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0xa567478 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
              (DeclRefExpr 0xa567410 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa567440 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0xa567430 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa5674dc <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa567040 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa567578 <col:66> 'int' 0))")
  (DeclStmt 0xa567890 <line:154:7, col:69>
    0xa567630 "bool __testout =
      (CXXOperatorCallExpr 0xa567868 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0xa567810 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
        (ParenExpr 0xa5677e0 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0xa5677b8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa567778 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
            (CXXOperatorCallExpr 0xa567738 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0xa5676f8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
              (DeclRefExpr 0xa567690 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa5676c0 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa5676b0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa56775c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa567040 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa5677f8 <col:68> 'int' 0))")
  (DeclStmt 0xa567a50 <line:155:7, col:78>
    0xa5678b0 "const bool __testboth =
      (BinaryOperator 0xa567a00 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0xa567938 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0xa567918 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa5678e4 <col:31> '_Bool' lvalue Var 0xa5673b0 '__testin' '_Bool'))
          (ImplicitCastExpr 0xa567928 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa5678fc <col:43> '_Bool' lvalue Var 0xa567630 '__testout' '_Bool')))
        (BinaryOperator 0xa5679e8 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0xa5679c8 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa5679a8 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa567950 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa566fd0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa5679d8 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa5679b8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa567984 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa3d4c50 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0xa567b90 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa567a60 <col:7> '_Bool' lvalue Var 0xa5673b0 '__testin' '_Bool')
    (ImplicitCastExpr 0xa567b80 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa567b68 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa567b58 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa567b40 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa567b18 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa567b08 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa567af0 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf7b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa567ad0 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa567a78 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa567040 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa567ae0 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa567aac <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0xa567ce0 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0xa567bb0 <col:7> '_Bool' lvalue Var 0xa567630 '__testout' '_Bool')
    (ImplicitCastExpr 0xa567cd0 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0xa567cb8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa567ca8 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa567c90 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0xa567c68 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0xa567c58 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa567c40 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf7b0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0xa567c20 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa567bc8 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa567040 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0xa567c30 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0xa567bfc <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0xa567e80 <line:161:7, col:72>
    0xa567d30 "const char_type *__beg =
      (ConditionalOperator 0xa567e60 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa567e50 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa567d64 <col:32> '_Bool' lvalue Var 0xa5673b0 '__testin' '_Bool'))
        (CallExpr 0xa567dc8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa567d90 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa567d80 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa567e30 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa567df8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa567de8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa5690d0 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0xa567fc8 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0xa567ef0 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0xa567ed8 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0xa567e90 <col:12> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *')
          (UnaryOperator 0xa567ec0 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0xa567ea8 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa566f60 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0xa567fb0 <col:32, col:68> '_Bool'
        (BinaryOperator 0xa567f98 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0xa567f58 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0xa567f38 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa567f04 <col:33> '_Bool' lvalue Var 0xa5673b0 '__testin' '_Bool'))
            (ImplicitCastExpr 0xa567f48 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa567f1c <col:45> '_Bool' lvalue Var 0xa567630 '__testout' '_Bool')))
          (ImplicitCastExpr 0xa567f88 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa567f70 <col:58> 'const _Bool' lvalue Var 0xa5678b0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0xa5690a8 <line:163:2, line:191:2>
      (CallExpr 0xa568010 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0xa567ff0 <col:4> '<bound member function type>' ->_M_update_egptr 0xa5546d0
          (CXXThisExpr 0xa567fe0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa568090 <line:166:4, col:30>
        0xa568040 "off_type __newoffi =
          (DeclRefExpr 0xa568074 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa566f60 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0xa568100 <line:167:4, col:34>
        0xa5680b0 "off_type __newoffo =
          (DeclRefExpr 0xa5680e4 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0xa568658 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0xa5681a8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0xa568188 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa568168 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa568110 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa566fd0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0xa568198 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa568178 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0xa568144 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa3d4c50 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0xa5683f0 <line:169:6, line:172:6>
          (CompoundAssignOperator 0xa5682b8 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa5681c0 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa568290 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa568258 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (CallExpr 0xa568220 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5681e8 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5681d8 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa56823c <col:36> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0xa5683d0 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0xa5682d8 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0xa5683a8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa568370 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (CallExpr 0xa568338 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa568300 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5682f0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa568354 <col:36> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *'))))
        (IfStmt 0xa568638 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0xa5684a0 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0xa568480 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa568460 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa568408 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0xa566fd0 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0xa568490 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0xa568470 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0xa56843c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0xa3d4cb0 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0xa568620 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0xa5684ec <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0xa568600 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0xa568504 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0xa5685d8 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0xa5685a0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                (CallExpr 0xa568568 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa568530 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0xa568520 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa568584 <col:47> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0xa568be8 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0xa568918 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0xa568798 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0xa5686e0 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0xa5686c8 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0xa5686a8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa568674 <col:9> '_Bool' lvalue Var 0xa5673b0 '__testin' '_Bool'))
                (ImplicitCastExpr 0xa5686b8 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa56868c <col:21> 'const _Bool' lvalue Var 0xa5678b0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa568770 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa568728 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
              (DeclRefExpr 0xa5686f4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa568710 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa5688f0 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa5688a8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
            (CXXOperatorCallExpr 0xa568868 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa568830 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (CallExpr 0xa5687f8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5687c0 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5687b0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa568814 <col:27> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa56888c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa568bd0 <line:179:6, line:183:6>
          (CallExpr 0xa568b38 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa568940 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa568930 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa5689c0 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa568988 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0xa568978 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa568aa8 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0xa568a60 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
              (CallExpr 0xa568a28 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5689f0 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5689e0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa568a44 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0xa568b18 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa568ae0 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0xa568ad0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0xa568bb8 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa568b60 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa5672e0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa568b98 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa568b80 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa568040 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0xa569088 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0xa568ea8 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0xa568d28 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0xa568c70 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0xa568c58 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0xa568c38 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa568c04 <col:9> '_Bool' lvalue Var 0xa567630 '__testout' '_Bool'))
                (ImplicitCastExpr 0xa568c48 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa568c1c <col:22> 'const _Bool' lvalue Var 0xa5678b0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0xa568d00 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa568cb8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
              (DeclRefExpr 0xa568c84 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0xa568ca0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0xa568e80 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0xa568e38 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
            (CXXOperatorCallExpr 0xa568df8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0xa568dc0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
              (CallExpr 0xa568d88 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa568d50 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0xa568d40 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa568da4 <col:27> 'const char_type *' lvalue Var 0xa567d30 '__beg' 'const char_type *'))
            (DeclRefExpr 0xa568e1c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0xa569070 <line:187:6, line:190:6>
          (CallExpr 0xa568fd8 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0xa568ed0 <col:8> '<bound member function type>' ->_M_pbump 0xa554890
              (CXXThisExpr 0xa568ec0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0xa568f38 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa568f00 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa568ef0 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0xa568fa0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa568f68 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0xa568f58 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa568fbc <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0xa569058 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0xa569000 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa5672e0 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0xa569038 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0xa569020 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0xa5680b0 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa569108 <line:192:7, col:14>
    (DeclRefExpr 0xa5690ec <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa5672e0 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0xa554d68 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0xa554d58 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0xa554d40 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0xa3cf9e0 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0xa554d20 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554cbc <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0xa554d30 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0xa554cfc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0xa56aa08 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0xa5699d8 <line:200:7, col:47>
    0xa569920 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0xa5699b8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0xa569998 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0xa569980 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0xa569968 <col:44> 'int' 1))))")
  (DeclStmt 0xa569c50 <line:201:7, col:73>
    0xa5699f0 "const bool __testin =
      (CXXOperatorCallExpr 0xa569c28 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0xa569bd0 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
        (ParenExpr 0xa569ba0 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0xa569b78 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0xa569b38 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
            (CXXOperatorCallExpr 0xa569af8 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa569ab8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
              (DeclRefExpr 0xa569a50 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa569a80 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0xa569a70 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa569b1c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa569690 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa569bb8 <col:72> 'int' 0))")
  (DeclStmt 0xa569ed0 <line:202:7, col:75>
    0xa569c70 "const bool __testout =
      (CXXOperatorCallExpr 0xa569ea8 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0xa569e50 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
        (ParenExpr 0xa569e20 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0xa569df8 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0xa569db8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
            (CXXOperatorCallExpr 0xa569d78 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0xa569d38 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
              (DeclRefExpr 0xa569cd0 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0xa569d00 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0xa569cf0 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0xa569d9c <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0xa569690 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0xa569e38 <col:74> 'int' 0))")
  (DeclStmt 0xa56a040 <line:204:7, col:72>
    0xa569ef0 "const char_type *__beg =
      (ConditionalOperator 0xa56a020 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0xa56a010 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa569f24 <col:32> 'const _Bool' lvalue Var 0xa5699f0 '__testin' 'const _Bool'))
        (CallExpr 0xa569f88 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa569f50 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa569f40 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0xa569ff0 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa569fb8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0xa569fa8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0xa56a9c0 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0xa56a170 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0xa56a0d8 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0xa56a0c0 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0xa56a050 <col:12> 'const char_type *' lvalue Var 0xa569ef0 '__beg' 'const char_type *')
          (UnaryOperator 0xa56a0a8 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0xa56a088 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0xa56a070 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa569620 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0xa56a158 <col:41, col:63> '_Bool'
        (BinaryOperator 0xa56a140 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0xa56a120 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa56a0ec <col:42> 'const _Bool' lvalue Var 0xa5699f0 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0xa56a130 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa56a104 <col:54> 'const _Bool' lvalue Var 0xa569c70 '__testout' 'const _Bool')))))
    (CompoundStmt 0xa56a9a0 <line:206:2, line:221:2>
      (CallExpr 0xa56a1b8 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0xa56a198 <col:4> '<bound member function type>' ->_M_update_egptr 0xa5546d0
          (CXXThisExpr 0xa56a188 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0xa56a250 <line:209:4, col:30>
        0xa56a1e0 "const off_type __pos =
          (ParenListExpr 0xa56a230 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0xa56a214 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa569620 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0xa56a4e0 <line:210:4, line:211:41>
        0xa56a270 "const bool __testpos =
          (ParenExpr 0xa56a4c8 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0xa56a4b0 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0xa56a320 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa56a2d8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
                (IntegerLiteral 0xa56a2a8 <col:28> 'int' 0)
                (DeclRefExpr 0xa56a2c0 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa56a1e0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0xa56a488 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0xa56a440 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1716f0 0xa189ad0 0xa18cb10 0xa329330 0xa3298b0 0xa329de0)
                (DeclRefExpr 0xa56a344 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa56a1e0 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0xa56a418 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0xa56a3e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
                  (CallExpr 0xa56a3a8 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa56a370 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0xa56a360 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0xa56a3c4 <col:35> 'const char_type *' lvalue Var 0xa569ef0 '__beg' 'const char_type *')))))")
      (IfStmt 0xa56a980 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0xa56a508 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa56a4f0 <col:8> 'const _Bool' lvalue Var 0xa56a270 '__testpos' 'const _Bool'))
        (CompoundStmt 0xa56a960 <line:213:6, line:220:6>
          (IfStmt 0xa56a770 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0xa56a530 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa56a514 <col:12> 'const _Bool' lvalue Var 0xa5699f0 '__testin' 'const _Bool'))
            (CallExpr 0xa56a748 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa56a550 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa56a540 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa56a5d0 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa56a598 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0xa56a588 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa56a6b8 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0xa56a670 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
                (CallExpr 0xa56a638 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa56a600 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa56a5f0 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0xa56a654 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa56a1e0 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0xa56a728 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa56a6f0 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0xa56a6e0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0xa56a8f8 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0xa56a7a8 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa56a78c <col:12> 'const _Bool' lvalue Var 0xa569c70 '__testout' 'const _Bool'))
            (CallExpr 0xa56a8d0 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0xa56a7c8 <col:3> '<bound member function type>' ->_M_pbump 0xa554890
                (CXXThisExpr 0xa56a7b8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0xa56a830 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa56a7f8 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa56a7e8 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0xa56a898 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa56a860 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0xa56a850 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0xa56a8b4 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0xa56a1e0 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0xa56a948 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0xa56a914 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa569920 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0xa56a92c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0xa569620 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0xa56a9f8 <line:222:7, col:14>
    (DeclRefExpr 0xa56a9dc <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0xa569920 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0xa56ba38 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0xa56b048 <line:230:7, col:51>
    0xa56af40 "const bool __testin =
      (CXXOperatorCallExpr 0xa56b020 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0xa56afe8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cf7b0)
        (MemberExpr 0xa56af88 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
          (CXXThisExpr 0xa56af78 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56afc4 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4a80 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa56b168 <line:231:7, col:53>
    0xa56b060 "const bool __testout =
      (CXXOperatorCallExpr 0xa56b140 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa56b108 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cf7b0)
        (MemberExpr 0xa56b0a8 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0xa553620
          (CXXThisExpr 0xa56b098 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56b0e4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0xa3d4ae0 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0xa56b2d8 <line:232:7, col:52>
    0xa56b190 "char_type *__endg =
      (CXXOperatorCallExpr 0xa56b2b0 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0xa56b268 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (DeclRefExpr 0xa56b1c4 <col:27> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
        (CallExpr 0xa56b248 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa56b210 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa56b1f0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
              (CXXThisExpr 0xa56b1e0 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0xa56b448 <line:233:7, col:56>
    0xa56b300 "char_type *__endp =
      (CXXOperatorCallExpr 0xa56b420 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa56b3d8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (DeclRefExpr 0xa56b334 <col:27> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
        (CallExpr 0xa56b3b8 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa56b380 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0xa56b360 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
              (CXXThisExpr 0xa56b350 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0xa56b678 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa56b550 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa56b4f8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (DeclRefExpr 0xa56b458 <col:11> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
      (CallExpr 0xa56b4d8 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa56b4a0 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa56b480 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0xa553660
            (CXXThisExpr 0xa56b470 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0xa56b658 <line:236:2, line:241:2>
      (CompoundAssignOperator 0xa56b5a8 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa56b574 <col:4> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *')
        (DeclRefExpr 0xa56b58c <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa56adf0 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0xa56b5f8 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0xa56b5c8 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa56adf0 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0xa56b5e0 <col:10> 'int' 0))
      (BinaryOperator 0xa56b640 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0xa56b610 <col:4> 'char_type *' lvalue Var 0xa56b300 '__endp' 'char_type *')
        (DeclRefExpr 0xa56b628 <col:13> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0xa56b800 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0xa56b6b0 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa56b694 <col:11> 'const _Bool' lvalue Var 0xa56af40 '__testin' 'const _Bool'))
    (CallExpr 0xa56b7d8 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa56b6d0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa56b6c0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0xa56b704 <col:13> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
      (CXXOperatorCallExpr 0xa56b798 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa56b750 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (DeclRefExpr 0xa56b71c <col:21> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
        (DeclRefExpr 0xa56b734 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa56adf0 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0xa56b7bc <col:35> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0xa56ba18 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0xa56b838 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa56b81c <col:11> 'const _Bool' lvalue Var 0xa56b060 '__testout' 'const _Bool'))
    (CompoundStmt 0xa56ba00 <line:246:2, line:253:2>
      (CallExpr 0xa56b8c0 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0xa56b858 <col:4> '<bound member function type>' ->_M_pbump 0xa554890
          (CXXThisExpr 0xa56b848 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56b878 <col:13> 'char_type *' lvalue ParmVar 0xa56adb0 '__base' 'char_type *')
        (DeclRefExpr 0xa56b890 <col:21> 'char_type *' lvalue Var 0xa56b300 '__endp' 'char_type *')
        (DeclRefExpr 0xa56b8a8 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0xa56ae30 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0xa56b9e0 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0xa56b910 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0xa56b900 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa56b8e8 <col:9> 'const _Bool' lvalue Var 0xa56af40 '__testin' 'const _Bool')))
        (CallExpr 0xa56b9b8 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa56b938 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa56b928 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0xa56b96c <col:17> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *')
          (DeclRefExpr 0xa56b984 <col:25> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *')
          (DeclRefExpr 0xa56b99c <col:33> 'char_type *' lvalue Var 0xa56b190 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0xa56c420 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0xa56bff8 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa56bf90 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa56bf80 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa56bfc4 <col:18> 'char_type *' lvalue ParmVar 0xa56bdf0 '__pbeg' 'char_type *')
    (DeclRefExpr 0xa56bfdc <col:26> 'char_type *' lvalue ParmVar 0xa56be40 '__pend' 'char_type *'))
  (WhileStmt 0xa56c388 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa56c138 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0xa56c0f0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
      (DeclRefExpr 0xa56c01c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa56be80 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0xa56c0d0 <col:22, col:56> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
    (CompoundStmt 0xa56c370 <line:263:2, line:266:2>
      (CallExpr 0xa56c260 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa56c170 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa56c160 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0xa56c240 <col:16, col:50> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0xa56c350 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0xa56c280 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa56be80 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0xa56c330 <col:13, col:47> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))))
  (CallExpr 0xa56c400 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa56c3b0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0xa56c3a0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0xa56c3e4 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0xa56be80 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0xa581380 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0xa581340 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0xa581308 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0xa5812e0 <col:32> '_T1 *' lvalue ParmVar 0xa581140 '__p' '_T1 *'))
    (DeclRefExpr 0xa581320 <col:42> 'const _T2' lvalue ParmVar 0xa5811b0 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0xa5815b0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0xa581590 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0xa581560 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0xa58153c <col:7> '_Tp *' lvalue ParmVar 0xa581430 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa582040 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa581c40 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0xa581c18 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa581a98 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa581a40 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (DeclRefExpr 0xa581a10 <col:11> '_ForwardIterator' lvalue ParmVar 0xa581890 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa581a28 <col:22> '_ForwardIterator' lvalue ParmVar 0xa5818d0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa581ad8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa581abc <col:32> '_ForwardIterator' lvalue ParmVar 0xa581890 '__first' '_ForwardIterator'))
    (CallExpr 0xa581bf8 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0xa581b20 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510)
      (CallExpr 0xa581bd8 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0xa581b70 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
        (UnaryOperator 0xa581bc0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa581ba4 <col:38> '_ForwardIterator' lvalue ParmVar 0xa581890 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0xa582040 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa5824e8 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0xa582320 <line:125:7, line:126:35>
    0xa5822f0 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0xa5824c0 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa582468 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa58248c <col:12> '_ForwardIterator' lvalue ParmVar 0xa5820b0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa5824a4 <col:21> '_ForwardIterator' lvalue ParmVar 0xa5820f0 '__last' '_ForwardIterator')))

;
    template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0xa1faf78 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0xa6615b0 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0xa661304 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0xa202040 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0xa1fb090 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0xa1fb0b0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0xa582ac0 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0xa582a98 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa582930 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa5828d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (DeclRefExpr 0xa5828a4 <col:14> '_ForwardIterator' lvalue ParmVar 0xa5826a0 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa5828bc <col:25> '_ForwardIterator' lvalue ParmVar 0xa5826e0 '__last' '_ForwardIterator'))
    (UnaryOperator 0xa582970 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa582954 <col:35> '_ForwardIterator' lvalue ParmVar 0xa5826a0 '__first' '_ForwardIterator'))
    (CallExpr 0xa582a78 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5829a0 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0xa582984 <col:2> '_Allocator' lvalue ParmVar 0xa582750 '__alloc' '_Allocator &'))
      (CallExpr 0xa582a58 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa5829f0 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
        (UnaryOperator 0xa582a40 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa582a24 <col:36> '_ForwardIterator' lvalue ParmVar 0xa5826a0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0xa582ef0 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0xa582ec8 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0xa582e58 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0xa582e20 0xa582870 0xa5821d0 0xa581510)
    (DeclRefExpr 0xa582e98 <col:16> '_ForwardIterator' lvalue ParmVar 0xa582ba0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa582eb0 <col:25> '_ForwardIterator' lvalue ParmVar 0xa582be0 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa583ed0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa583ec0 <col:11, col:53>
    (CallExpr 0xa583e98 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa583e18 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
      (DeclRefExpr 0xa583e50 <col:28> '_InputIterator' lvalue ParmVar 0xa583c40 '__first' '_InputIterator')
      (DeclRefExpr 0xa583e68 <col:37> '_InputIterator' lvalue ParmVar 0xa583c80 '__last' '_InputIterator')
      (DeclRefExpr 0xa583e80 <col:45> '_ForwardIterator' lvalue ParmVar 0xa583cc0 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa583958 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0xa583510 <line:73:4, col:37>
    0xa5834c0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa5834f4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa583370 '__result' '_ForwardIterator')")
  (IfStmt 0xa583820 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa583520 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa583808 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0xa5837b8 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa5835b8 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa583560 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (DeclRefExpr 0xa583530 <col:15> '_InputIterator' lvalue ParmVar 0xa5832f0 '__first' '_InputIterator')
          (DeclRefExpr 0xa583548 <col:26> '_InputIterator' lvalue ParmVar 0xa583330 '__last' '_InputIterator'))
        (BinaryOperator 0xa583640 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0xa5835f8 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa5835dc <col:36> '_InputIterator' lvalue ParmVar 0xa5832f0 '__first' '_InputIterator'))
          (UnaryOperator 0xa583628 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa58360c <col:47> '_ForwardIterator' lvalue Var 0xa5834c0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa583790 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa583688 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa5812b0)
          (CallExpr 0xa583740 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa5836d8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa583728 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa58370c <col:37> '_ForwardIterator' lvalue Var 0xa5834c0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa583778 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa583760 <col:46> '_InputIterator' lvalue ParmVar 0xa5832f0 '__first' '_InputIterator'))))
      (ReturnStmt 0xa5837f8 <line:78:8, col:15>
        (DeclRefExpr 0xa5837dc <col:15> '_ForwardIterator' lvalue Var 0xa5834c0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa583938 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa583840 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa583920 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0xa5838e8 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0xa583878 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa5838b8 <col:22> '_ForwardIterator' lvalue ParmVar 0xa583370 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa5838d0 <col:32> '_ForwardIterator' lvalue Var 0xa5834c0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa583910 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa583ed0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0xa583ec0 <col:11, col:53>
    (CallExpr 0xa583e98 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0xa583e18 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
      (DeclRefExpr 0xa583e50 <col:28> '_InputIterator' lvalue ParmVar 0xa583c40 '__first' '_InputIterator')
      (DeclRefExpr 0xa583e68 <col:37> '_InputIterator' lvalue ParmVar 0xa583c80 '__last' '_InputIterator')
      (DeclRefExpr 0xa583e80 <col:45> '_ForwardIterator' lvalue ParmVar 0xa583cc0 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0xa5845d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0xa584270 <line:112:7, line:113:13>
    0xa584240 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0xa5843a0 <line:114:7, line:115:13>
    0xa584370 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0xa5845c8 <line:117:7, line:119:41>
    (CallExpr 0xa5845a0 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0xa584530 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0xa584554 <col:16> '_InputIterator' lvalue ParmVar 0xa583fb0 '__first' '_InputIterator')
      (DeclRefExpr 0xa58456c <col:25> '_InputIterator' lvalue ParmVar 0xa583ff0 '__last' '_InputIterator')
      (DeclRefExpr 0xa584584 <col:33> '_ForwardIterator' lvalue ParmVar 0xa584030 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa585510 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa5854e8 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa585468 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20)
    (DeclRefExpr 0xa58549c <col:21> '_ForwardIterator' lvalue ParmVar 0xa585250 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa5854b4 <col:30> '_ForwardIterator' lvalue ParmVar 0xa585290 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa5854cc <col:38> 'const _Tp' lvalue ParmVar 0xa585300 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa584f70 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0xa584bc0 <line:131:4, col:36>
    0xa584b70 "_ForwardIterator __cur =
      (DeclRefExpr 0xa584ba4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa584920 '__first' '_ForwardIterator')")
  (IfStmt 0xa584e38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa584bd0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa584e20 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0xa584df8 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa584c68 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa584c10 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (DeclRefExpr 0xa584be0 <col:15> '_ForwardIterator' lvalue Var 0xa584b70 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa584bf8 <col:24> '_ForwardIterator' lvalue ParmVar 0xa584960 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa584ca8 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa584c8c <col:34> '_ForwardIterator' lvalue Var 0xa584b70 '__cur' '_ForwardIterator'))
        (CallExpr 0xa584dd0 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa584ce0 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa5812b0)
          (CallExpr 0xa584d98 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa584d30 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa584d80 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa584d64 <col:37> '_ForwardIterator' lvalue Var 0xa584b70 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa584db8 <col:45> 'const _Tp' lvalue ParmVar 0xa5849f0 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa584f50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa584e58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa584f38 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0xa584f00 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa584e90 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa584ed0 <col:22> '_ForwardIterator' lvalue ParmVar 0xa584920 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa584ee8 <col:31> '_ForwardIterator' lvalue Var 0xa584b70 '__cur' '_ForwardIterator'))
      (NullStmt 0xa584f28 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa585510 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0xa5854e8 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0xa585468 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20)
    (DeclRefExpr 0xa58549c <col:21> '_ForwardIterator' lvalue ParmVar 0xa585250 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa5854b4 <col:30> '_ForwardIterator' lvalue ParmVar 0xa585290 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa5854cc <col:38> 'const _Tp' lvalue ParmVar 0xa585300 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0xa585ac0 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0xa5858e0 <line:169:7, line:170:12>
    0xa5858b0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa585a98 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa585a28 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa585a4c <col:16> '_ForwardIterator' lvalue ParmVar 0xa5855f0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa585a64 <col:25> '_ForwardIterator' lvalue ParmVar 0xa585630 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa585a7c <col:33> 'const _Tp' lvalue ParmVar 0xa5856a0 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa58b960 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa58b938 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa58b8b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1bb590)
    (DeclRefExpr 0xa58b8ec <col:23> '_ForwardIterator' lvalue ParmVar 0xa586810 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa58b904 <col:32> '_Size' lvalue ParmVar 0xa586850 '__n' '_Size')
    (DeclRefExpr 0xa58b91c <col:37> 'const _Tp' lvalue ParmVar 0xa5868c0 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa5864e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0xa5860f0 <line:185:4, col:36>
    0xa5860a0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa5860d4 <col:29> '_ForwardIterator' lvalue ParmVar 0xa585e50 '__first' '_ForwardIterator')")
  (IfStmt 0xa5863a8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa586100 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa586390 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0xa586368 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa586188 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0xa586140 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (DeclRefExpr 0xa586110 <col:15> '_Size' lvalue ParmVar 0xa585e90 '__n' '_Size')
          (IntegerLiteral 0xa586128 <col:21> 'int' 0))
        (BinaryOperator 0xa586210 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0xa5861c8 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa5861ac <col:26> '_Size' lvalue ParmVar 0xa585e90 '__n' '_Size'))
          (UnaryOperator 0xa5861f8 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa5861dc <col:33> '_ForwardIterator' lvalue Var 0xa5860a0 '__cur' '_ForwardIterator')))
        (CallExpr 0xa586340 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0xa586250 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa5812b0)
          (CallExpr 0xa586308 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa5862a0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa5862f0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa5862d4 <col:37> '_ForwardIterator' lvalue Var 0xa5860a0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa586328 <col:45> 'const _Tp' lvalue ParmVar 0xa585f20 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa5864c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa5863c8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa5864a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0xa586470 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa586400 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa586440 <col:22> '_ForwardIterator' lvalue ParmVar 0xa585e50 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa586458 <col:31> '_ForwardIterator' lvalue Var 0xa5860a0 '__cur' '_ForwardIterator'))
      (NullStmt 0xa586498 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa58b960 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0xa58b938 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0xa58b8b8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1bb590)
    (DeclRefExpr 0xa58b8ec <col:23> '_ForwardIterator' lvalue ParmVar 0xa586810 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa58b904 <col:32> '_Size' lvalue ParmVar 0xa586850 '__n' '_Size')
    (DeclRefExpr 0xa58b91c <col:37> 'const _Tp' lvalue ParmVar 0xa5868c0 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0xa58bf60 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0xa58bd80 <line:222:7, line:223:12>
    0xa58bd50 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0xa58bf38 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0xa58bec8 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0xa58beec <col:18> '_ForwardIterator' lvalue ParmVar 0xa58ba90 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa58bf04 <col:27> '_Size' lvalue ParmVar 0xa58bad0 '__n' '_Size')
    (DeclRefExpr 0xa58bf1c <col:32> 'const _Tp' lvalue ParmVar 0xa58bb40 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa58c798 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0xa58c350 <line:241:7, col:40>
    0xa58c300 "_ForwardIterator __cur =
      (DeclRefExpr 0xa58c334 <col:32> '_ForwardIterator' lvalue ParmVar 0xa58c110 '__result' '_ForwardIterator')")
  (IfStmt 0xa58c648 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58c360 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa58c630 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0xa58c5e0 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa58c3f8 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa58c3a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (DeclRefExpr 0xa58c370 <col:11> '_InputIterator' lvalue ParmVar 0xa58c090 '__first' '_InputIterator')
          (DeclRefExpr 0xa58c388 <col:22> '_InputIterator' lvalue ParmVar 0xa58c0d0 '__last' '_InputIterator'))
        (BinaryOperator 0xa58c480 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0xa58c438 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa58c41c <col:32> '_InputIterator' lvalue ParmVar 0xa58c090 '__first' '_InputIterator'))
          (UnaryOperator 0xa58c468 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa58c44c <col:43> '_ForwardIterator' lvalue Var 0xa58c300 '__cur' '_ForwardIterator')))
        (CallExpr 0xa58c5b8 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa58c4b0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa58c498 <col:6> '_Allocator' lvalue ParmVar 0xa58c1a0 '__alloc' '_Allocator &'))
          (CallExpr 0xa58c568 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa58c500 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa58c550 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa58c534 <col:42> '_ForwardIterator' lvalue Var 0xa58c300 '__cur' '_ForwardIterator')))
          (UnaryOperator 0xa58c5a0 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa58c588 <col:51> '_InputIterator' lvalue ParmVar 0xa58c090 '__first' '_InputIterator'))))
      (ReturnStmt 0xa58c620 <line:246:4, col:11>
        (DeclRefExpr 0xa58c604 <col:11> '_ForwardIterator' lvalue Var 0xa58c300 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0xa58c778 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58c668 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa58c760 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0xa58c728 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa58c6a0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa58c6e0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58c110 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa58c6f8 <col:28> '_ForwardIterator' lvalue Var 0xa58c300 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa58c710 <col:35> '_Allocator' lvalue ParmVar 0xa58c1a0 '__alloc' '_Allocator &'))
      (NullStmt 0xa58c750 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0xa58ccc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0xa58ccb8 <col:7, col:63>
    (CallExpr 0xa58cc90 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa58cc10 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa584120)
      (DeclRefExpr 0xa58cc44 <col:38> '_InputIterator' lvalue ParmVar 0xa58c8d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa58cc5c <col:47> '_InputIterator' lvalue ParmVar 0xa58c910 '__last' '_InputIterator')
      (DeclRefExpr 0xa58cc74 <col:55> '_ForwardIterator' lvalue ParmVar 0xa58c950 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa58d128 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0xa58d118 <line:267:7, line:269:24>
    (CallExpr 0xa58d0e8 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa58d020 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
      (ParenExpr 0xa58d070 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa58d058 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0xa58cdf0 '__first' '_InputIterator'))
      (ParenExpr 0xa58d0a0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0xa58d084 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0xa58ce30 '__last' '_InputIterator'))
      (DeclRefExpr 0xa58d0b4 <line:269:7> '_ForwardIterator' lvalue ParmVar 0xa58ce70 '__result' '_ForwardIterator')
      (DeclRefExpr 0xa58d0cc <col:17> '_Allocator' lvalue ParmVar 0xa58cee0 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa58d8e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0xa58d520 <line:277:7, col:39>
    0xa58d4d0 "_ForwardIterator __cur =
      (DeclRefExpr 0xa58d504 <col:32> '_ForwardIterator' lvalue ParmVar 0xa58d250 '__first' '_ForwardIterator')")
  (IfStmt 0xa58d790 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58d530 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa58d778 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0xa58d750 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa58d5c8 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa58d570 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
          (DeclRefExpr 0xa58d540 <col:11> '_ForwardIterator' lvalue Var 0xa58d4d0 '__cur' '_ForwardIterator')
          (DeclRefExpr 0xa58d558 <col:20> '_ForwardIterator' lvalue ParmVar 0xa58d290 '__last' '_ForwardIterator'))
        (UnaryOperator 0xa58d608 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0xa58d5ec <col:30> '_ForwardIterator' lvalue Var 0xa58d4d0 '__cur' '_ForwardIterator'))
        (CallExpr 0xa58d728 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa58d638 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa58d61c <col:6> '_Allocator' lvalue ParmVar 0xa58d370 '__alloc' '_Allocator &'))
          (CallExpr 0xa58d6f0 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa58d688 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa58d6d8 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa58d6bc <col:42> '_ForwardIterator' lvalue Var 0xa58d4d0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa58d710 <col:50> 'const _Tp' lvalue ParmVar 0xa58d300 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa58d8c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58d7b0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa58d8a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0xa58d870 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa58d7e8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa58d828 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58d250 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa58d840 <col:27> '_ForwardIterator' lvalue Var 0xa58d4d0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa58d858 <col:34> '_Allocator' lvalue ParmVar 0xa58d370 '__alloc' '_Allocator &'))
      (NullStmt 0xa58d898 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa58dde8 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0xa58ddc0 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa58dd40 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa585790)
    (DeclRefExpr 0xa58dd74 <col:31> '_ForwardIterator' lvalue ParmVar 0xa58da10 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa58dd8c <col:40> '_ForwardIterator' lvalue ParmVar 0xa58da50 '__last' '_ForwardIterator')
    (DeclRefExpr 0xa58dda4 <col:48> 'const _Tp' lvalue ParmVar 0xa58dac0 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa58e648 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0xa58e250 <line:302:7, col:39>
    0xa58e200 "_ForwardIterator __cur =
      (DeclRefExpr 0xa58e234 <col:32> '_ForwardIterator' lvalue ParmVar 0xa58df60 '__first' '_ForwardIterator')")
  (IfStmt 0xa58e4f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58e260 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa58e4e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0xa58e4b8 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa58e2e8 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0xa58e2a0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
          (DeclRefExpr 0xa58e270 <col:11> '_Size' lvalue ParmVar 0xa58dfa0 '__n' '_Size')
          (IntegerLiteral 0xa58e288 <col:17> 'int' 0))
        (BinaryOperator 0xa58e370 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0xa58e328 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0xa58e30c <col:22> '_Size' lvalue ParmVar 0xa58dfa0 '__n' '_Size'))
          (UnaryOperator 0xa58e358 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa58e33c <col:29> '_ForwardIterator' lvalue Var 0xa58e200 '__cur' '_ForwardIterator')))
        (CallExpr 0xa58e490 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa58e3a0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0xa58e388 <col:6> '_Allocator' lvalue ParmVar 0xa58e0a0 '__alloc' '_Allocator &'))
          (CallExpr 0xa58e458 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0xa58e3f0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
            (UnaryOperator 0xa58e440 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0xa58e424 <col:42> '_ForwardIterator' lvalue Var 0xa58e200 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0xa58e478 <col:50> 'const _Tp' lvalue ParmVar 0xa58e010 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0xa58e628 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58e518 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa58e610 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0xa58e5d8 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa58e550 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa58e590 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58df60 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa58e5a8 <col:27> '_ForwardIterator' lvalue Var 0xa58e200 '__cur' '_ForwardIterator')
        (DeclRefExpr 0xa58e5c0 <col:34> '_Allocator' lvalue ParmVar 0xa58e0a0 '__alloc' '_Allocator &'))
      (NullStmt 0xa58e600 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0xa58ebf8 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0xa58ebd0 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa58eb50 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58bc30)
    (DeclRefExpr 0xa58eb84 <col:33> '_ForwardIterator' lvalue ParmVar 0xa58e7d0 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa58eb9c <col:42> '_Size' lvalue ParmVar 0xa58e810 '__n' '_Size')
    (DeclRefExpr 0xa58ebb4 <col:47> 'const _Tp' lvalue ParmVar 0xa58e880 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa58f3f0 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0xa58f178 <line:342:7, line:344:19>
    0xa58f060 "_ForwardIterator __mid =
      (CallExpr 0xa58f148 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa58f0b0 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
        (DeclRefExpr 0xa58f0e8 <col:60> '_InputIterator1' lvalue ParmVar 0xa58ed70 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa58f100 <col:70> '_InputIterator1' lvalue ParmVar 0xa58edb0 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa58f118 <line:343:11> '_ForwardIterator' lvalue ParmVar 0xa58ee70 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa58f130 <line:344:11> '_Allocator' lvalue ParmVar 0xa58eee0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa58f2a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58f188 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa58f288 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0xa58f278 <line:347:4, col:72>
        (CallExpr 0xa58f248 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa58f1b0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
          (DeclRefExpr 0xa58f1e4 <col:39> '_InputIterator2' lvalue ParmVar 0xa58edf0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa58f1fc <col:49> '_InputIterator2' lvalue ParmVar 0xa58ee30 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa58f214 <col:58> '_ForwardIterator' lvalue Var 0xa58f060 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa58f22c <col:65> '_Allocator' lvalue ParmVar 0xa58eee0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa58f3d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58f2c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa58f3b8 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0xa58f380 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa58f2f8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa58f338 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58ee70 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa58f350 <col:28> '_ForwardIterator' lvalue Var 0xa58f060 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa58f368 <col:35> '_Allocator' lvalue ParmVar 0xa58eee0 '__alloc' '_Allocator &'))
      (NullStmt 0xa58f3a8 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0xa58fbc0 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0xa58f948 <line:370:7, line:372:19>
    0xa58f830 "_ForwardIterator __mid =
      (CallExpr 0xa58f918 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa58f880 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
        (DeclRefExpr 0xa58f8b4 <col:60> '_InputIterator1' lvalue ParmVar 0xa58f570 '__first1' '_InputIterator1')
        (DeclRefExpr 0xa58f8cc <col:70> '_InputIterator1' lvalue ParmVar 0xa58f5b0 '__last1' '_InputIterator1')
        (DeclRefExpr 0xa58f8e4 <line:371:11> '_ForwardIterator' lvalue ParmVar 0xa58f670 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa58f8fc <line:372:11> '_Allocator' lvalue ParmVar 0xa58f6e0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa58fa70 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58f958 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa58fa58 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0xa58fa48 <line:375:4, col:72>
        (CallExpr 0xa58fa18 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0xa58f980 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
          (DeclRefExpr 0xa58f9b8 <col:39> '_InputIterator2' lvalue ParmVar 0xa58f5f0 '__first2' '_InputIterator2')
          (DeclRefExpr 0xa58f9d0 <col:49> '_InputIterator2' lvalue ParmVar 0xa58f630 '__last2' '_InputIterator2')
          (DeclRefExpr 0xa58f9e8 <col:58> '_ForwardIterator' lvalue Var 0xa58f830 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa58fa00 <col:65> '_Allocator' lvalue ParmVar 0xa58f6e0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa58fba0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa58fa90 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa58fb88 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0xa58fb50 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa58fac8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa58fb08 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58f670 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa58fb20 <col:28> '_ForwardIterator' lvalue Var 0xa58f830 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa58fb38 <col:35> '_Allocator' lvalue ParmVar 0xa58f6e0 '__alloc' '_Allocator &'))
      (NullStmt 0xa58fb78 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0xa5903a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0xa590110 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0xa590078 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58d490 0xa58dce0)
    (DeclRefExpr 0xa5900b0 <col:35> '_ForwardIterator' lvalue ParmVar 0xa58fd40 '__result' '_ForwardIterator')
    (DeclRefExpr 0xa5900c8 <col:45> '_ForwardIterator' lvalue ParmVar 0xa58fd80 '__mid' '_ForwardIterator')
    (DeclRefExpr 0xa5900e0 <col:52> 'const _Tp' lvalue ParmVar 0xa58fdf0 '__x' 'const _Tp &')
    (DeclRefExpr 0xa5900f8 <col:57> '_Allocator' lvalue ParmVar 0xa58fee0 '__alloc' '_Allocator &'))
  (IfStmt 0xa590258 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa590140 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa590240 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0xa590230 <line:397:4, col:70>
        (CallExpr 0xa590200 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0xa590168 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
          (DeclRefExpr 0xa59019c <col:39> '_InputIterator' lvalue ParmVar 0xa58fe30 '__first' '_InputIterator')
          (DeclRefExpr 0xa5901b4 <col:48> '_InputIterator' lvalue ParmVar 0xa58fe70 '__last' '_InputIterator')
          (DeclRefExpr 0xa5901cc <col:56> '_ForwardIterator' lvalue ParmVar 0xa58fd80 '__mid' '_ForwardIterator')
          (DeclRefExpr 0xa5901e4 <col:63> '_Allocator' lvalue ParmVar 0xa58fee0 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0xa590388 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa590278 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa590370 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0xa590338 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0xa5902b0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa5902f0 <col:18> '_ForwardIterator' lvalue ParmVar 0xa58fd40 '__result' '_ForwardIterator')
        (DeclRefExpr 0xa590308 <col:28> '_ForwardIterator' lvalue ParmVar 0xa58fd80 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa590320 <col:35> '_Allocator' lvalue ParmVar 0xa58fee0 '__alloc' '_Allocator &'))
      (NullStmt 0xa590360 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0xa590be0 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0xa590968 <line:417:7, line:419:20>
    0xa590850 "_ForwardIterator __mid2 =
      (CallExpr 0xa590938 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0xa5908a0 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
        (DeclRefExpr 0xa5908d4 <col:61> '_InputIterator' lvalue ParmVar 0xa590530 '__first1' '_InputIterator')
        (DeclRefExpr 0xa5908ec <col:71> '_InputIterator' lvalue ParmVar 0xa590570 '__last1' '_InputIterator')
        (DeclRefExpr 0xa590904 <line:418:12> '_ForwardIterator' lvalue ParmVar 0xa5905b0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa59091c <line:419:12> '_Allocator' lvalue ParmVar 0xa5906d0 '__alloc' '_Allocator &'))")
  (IfStmt 0xa590a90 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa590978 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa590a78 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0xa590a48 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa5909b0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58d490 0xa58dce0)
        (DeclRefExpr 0xa5909e8 <col:32> '_ForwardIterator' lvalue Var 0xa590850 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa590a00 <col:40> '_ForwardIterator' lvalue ParmVar 0xa5905f0 '__last2' '_ForwardIterator')
        (DeclRefExpr 0xa590a18 <col:49> 'const _Tp' lvalue ParmVar 0xa590660 '__x' 'const _Tp &')
        (DeclRefExpr 0xa590a30 <col:54> '_Allocator' lvalue ParmVar 0xa5906d0 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0xa590bc0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa590ab0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa590ba8 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0xa590b70 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa590ae8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (DeclRefExpr 0xa590b28 <col:18> '_ForwardIterator' lvalue ParmVar 0xa5905b0 '__first2' '_ForwardIterator')
        (DeclRefExpr 0xa590b40 <col:28> '_ForwardIterator' lvalue Var 0xa590850 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0xa590b58 <col:36> '_Allocator' lvalue ParmVar 0xa5906d0 '__alloc' '_Allocator &'))
      (NullStmt 0xa590b98 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0xa5921a8 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0xa5921f8 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa592248 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0xa5922a8 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0xa5922b8 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0xa591560 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0xa592318 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0xa592368 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0xa5923b8 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0xa592418 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0xa592578 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0xa592568 <col:9, col:60>
    (UnaryOperator 0xa592550 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa592538 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa5924d0 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0xa592490 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CXXDependentScopeMemberExpr 0xa592458 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0xa592448 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0xa5926d8 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0xa5926c8 <col:9, col:66>
    (UnaryOperator 0xa5926b0 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa592698 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa592630 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0xa5925f0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CXXDependentScopeMemberExpr 0xa5925b8 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0xa5925a8 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa592798 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0xa592788 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0xa592768 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0xa592748 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0xa592708 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0xa5927f0 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa592800 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa591a20 '__a' 'const allocator_type &')
) (CompoundStmt 0xa592860 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0xa592c80 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0xa5929b0 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5928f8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5928c0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5928b0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa592990 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa592940 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa592930 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa592974 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa591b40 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa592ac8 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa592a10 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5929d8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5929c8 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa592a90 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592a58 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa592a48 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa592c68 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa592b28 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592af0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa592ae0 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa592c40 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa592bf8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (CXXDependentScopeMemberExpr 0xa592ba8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa592b70 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa592b60 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa592bdc <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa591b40 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0xa592c9c </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa591c60 '__a' 'const allocator_type &')
) (CompoundStmt 0xa5930d0 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0xa592e00 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa592d48 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592d10 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa592d00 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0xa592de0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa592d90 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0xa592d80 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa592dc4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0xa591c10 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0xa592f18 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa592e60 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592e28 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa592e18 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa592ee0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592ea8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa592e98 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0xa5930b8 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa592f78 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa592f40 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa592f30 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa593090 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0xa593048 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (CXXDependentScopeMemberExpr 0xa592ff8 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa592fc0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0xa592fb0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa59302c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa591c10 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0xa593328 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0xa593300 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0xa593100 <line:142:9> '<bound member function type>' ->_M_deallocate 0xa592100
      (CXXThisExpr 0xa5930f0 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa593168 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa593130 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa593120 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa5932d8 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0xa5932a0 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
      (CXXDependentScopeMemberExpr 0xa5931e8 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5931b0 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0xa5931a0 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa593268 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa593230 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa593220 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0xa593490 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0xa593480 <col:9, col:51>
    (ConditionalOperator 0xa593460 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0xa593390 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0xa593370 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa59333c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa591ec0 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0xa593380 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa593358 <col:23> 'int' 0)))
      (CallExpr 0xa593428 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5933d8 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0xa5933b8 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa591e60
            (CXXThisExpr 0xa5933a8 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa59340c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0xa591ec0 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0xa593448 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0xa5935a0 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0xa593580 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0xa5934a4 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa592020 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0xa593558 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5934f0 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa5934d0 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0xa591e60
          (CXXThisExpr 0xa5934c0 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa593524 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa592020 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0xa59353c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0xa592060 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0xa59ed90 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0xa59eda0 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa599db0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa59ee00 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0xa59ecd0 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa59ecf0 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa59ee10 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0xa599ec0 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0xa59ee28 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa599f90 '__a' 'const allocator_type &')
) (CompoundStmt 0xa59ef30 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0xa59ef08 <col:9, col:40> '<dependent type>'
    (MemberExpr 0xa59eeb8 <col:9> '<bound member function type>' ->_M_fill_initialize 0xa59d360
      (CXXThisExpr 0xa59eea8 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa59eed8 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa599ec0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa59eef0 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0xa599f40 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0xa59ef98 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa59ef60 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0xa59ef44 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa59a100 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0xa59f008 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa59efd0 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0xa59efb4 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa59a100 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0xa59f340 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0xa59f328 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa59f0b8 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa59f080 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa59f070 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa59f2f8 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa59f108 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
      (CallExpr 0xa59f190 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa59f158 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0xa59f140 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa59a100 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa59f200 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa59f1c8 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0xa59f1ac <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa59a100 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0xa59f268 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa59f230 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa59f220 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa59f2d8 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa59f29c <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa59ed10 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa59f354 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa59a2e0 '__a' 'const allocator_type &')
) (CompoundStmt 0xa59f5d8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0xa59f4f0 <line:339:4, col:72>
    0xa59f4c0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa59f5b0 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0xa59f510 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa59f550 <col:27> '_InputIterator' lvalue ParmVar 0xa59a250 '__first' '_InputIterator')
    (DeclRefExpr 0xa59f568 <col:36> '_InputIterator' lvalue ParmVar 0xa59a290 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa59f598 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0xa59f7d8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0xa59f7b0 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0xa59f618 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
    (CXXDependentScopeMemberExpr 0xa59f6a0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa59f668 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa59f658 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa59f720 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa59f6e8 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa59f6d8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa59f790 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa59f754 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0xa59f878 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0xa59f850 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa59f800 <col:9> '<bound member function type>' ->_M_fill_assign 0xa59dd00
      (CXXThisExpr 0xa59f7f0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa59f820 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0xa59a610 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa59f838 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0xa59a660 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa59faa8 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0xa59f9c0 <line:432:4, col:72>
    0xa59f990 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa59fa80 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0xa59f9e0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa59fa20 <col:23> '_InputIterator' lvalue ParmVar 0xa59a7d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa59fa38 <col:32> '_InputIterator' lvalue ParmVar 0xa59a810 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa59fa68 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0xa59fb78 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0xa59fb68 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0xa59fb48 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa59fb10 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa59fad8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa59fac8 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0xa59fc68 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0xa59fc58 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa59fc38 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa59fc00 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa59fbc8 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa59fbb8 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0xa59fd38 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0xa59fd28 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0xa59fd08 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa59fcd0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa59fc98 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0xa59fc88 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0xa59fe08 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0xa59fdf8 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0xa59fdd8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0xa59fda0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa59fd68 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0xa59fd58 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0xa59fec8 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0xa59feb8 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0xa59fe98 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa59fe78 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa59fe38 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa59ff88 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0xa59ff78 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0xa59ff58 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa59ff38 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0xa59fef8 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0xa5a0048 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0xa5a0038 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0xa5a0018 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0xa59fff8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa59ffb8 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0xa5a0108 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0xa5a00f8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0xa5a00d8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0xa5a00b8 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a0078 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0xa5a02b8 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0xa5a02a8 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0xa5a0288 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa5a0260 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0xa5a0228 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CXXDependentScopeMemberExpr 0xa5a0170 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a0138 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a0128 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5a01f0 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a01b8 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a01a8 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0xa5a0390 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0xa5a0380 <col:9, col:47>
    (CallExpr 0xa5a0360 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5a0328 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0xa5a0308 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa5a02cc <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0xa59ed30 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0xa5a08c0 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0xa5a08a0 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5a0458 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a0410 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
      (DeclRefExpr 0xa5a03a4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa59af70 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa5a03f0 <col:19, col:24> '<dependent type>'
        (MemberExpr 0xa5a03d0 <col:19> '<bound member function type>' ->size 0xa59ae80
          (CXXThisExpr 0xa5a03c0 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa5a0628 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0xa5a0490 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa5a0528 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a04e8 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa5a05e8 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa5a05b0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (DeclRefExpr 0xa5a0544 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0xa59af70 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa5a0590 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa5a0570 <col:31> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5a0560 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa5a060c <col:39> 'value_type':'_Tp' lvalue ParmVar 0xa59afb0 '__x' 'value_type':'_Tp'))
    (IfStmt 0xa5a0880 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa5a0700 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa5a06b8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
        (DeclRefExpr 0xa5a0650 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa59af70 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa5a0698 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa5a0678 <col:24> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5a0668 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0xa5a0860 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0xa5a0738 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
          (CXXThisExpr 0xa5a0728 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa5a0838 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0xa5a07f0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (CXXDependentScopeMemberExpr 0xa5a07a0 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5a0768 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0xa5a0758 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5a07d4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0xa59af70 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0xa5a81e0 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0xa5a81d0 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0xa5a81b0 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa5a8188 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa5a8150 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CXXDependentScopeMemberExpr 0xa5a0928 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a08f0 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a08e0 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5a09a8 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a0970 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a0960 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0xa5a8370 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0xa5a8360 <col:9, col:31>
    (CXXOperatorCallExpr 0xa5a8338 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a82d8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
      (CallExpr 0xa5a8248 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8208 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0xa5a82b8 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8278 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0xa5a84d0 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0xa5a84c0 <col:9, col:46>
    (UnaryOperator 0xa5a84a8 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa5a8490 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa5a8468 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa5a8420 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (CXXDependentScopeMemberExpr 0xa5a83d0 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5a8398 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa5a8388 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5a8404 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa59b2d0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa5a8630 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0xa5a8620 <col:9, col:46>
    (UnaryOperator 0xa5a8608 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0xa5a85f0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0xa5a85c8 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0xa5a8580 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
          (CXXDependentScopeMemberExpr 0xa5a8530 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5a84f8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0xa5a84e8 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5a8564 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa59b400 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa5a8830 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0xa5a8810 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5a8710 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a86c8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0)
      (DeclRefExpr 0xa5a8644 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0xa59b560 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa5a86a8 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5a8670 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0xa5a8660 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa5a87e0 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0xa5a87d0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5a87b4 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5a8800 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa5a87a0 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0xa5a876c </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa5a8930 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0xa5a8890 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0xa5a8858 <col:2> '<bound member function type>' ->_M_range_check 0xa59b600
      (CXXThisExpr 0xa5a8848 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa5a8878 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa59b6c0 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa5a8920 <line:738:2, col:20>
    (ArraySubscriptExpr 0xa5a8908 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa5a88d8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa5a88c0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5a88b0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa5a88ec <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa59b6c0 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa5a8a30 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0xa5a8990 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0xa5a8958 <col:2> '<bound member function type>' ->_M_range_check 0xa59b600
      (CXXThisExpr 0xa5a8948 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa5a8978 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa59b780 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa5a8a20 <line:756:2, col:20>
    (ArraySubscriptExpr 0xa5a8a08 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0xa5a89d8 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0xa5a89c0 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5a89b0 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa5a89ec <col:17> 'size_type':'unsigned int' lvalue ParmVar 0xa59b780 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0xa5a8ae0 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0xa5a8ad0 <col:9, col:23>
    (UnaryOperator 0xa5a8ab8 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa5a8a98 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8a58 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa5a8b90 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0xa5a8b80 <col:9, col:23>
    (UnaryOperator 0xa5a8b68 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0xa5a8b48 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8b08 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa5a8cd0 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0xa5a8cc0 <col:9, col:27>
    (UnaryOperator 0xa5a8ca8 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa5a8c90 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa5a8c68 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa5a8c30 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa5a8bf8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa5a8bb8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa5a8c18 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa5a8e10 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0xa5a8e00 <col:9, col:27>
    (UnaryOperator 0xa5a8de8 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0xa5a8dd0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0xa5a8da8 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa5a8d70 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
          (CallExpr 0xa5a8d38 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa5a8cf8 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa5a8d58 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0xa5a8f18 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0xa5a8f08 <col:9, col:40>
    (CallExpr 0xa5a8ee8 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a8e40 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
      (CallExpr 0xa5a8ec8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8e88 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0xa5a9020 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0xa5a9010 <col:9, col:40>
    (CallExpr 0xa5a8ff0 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a8f48 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1692e0)
      (CallExpr 0xa5a8fd0 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a8f90 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0xa5a94a8 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0xa5a9488 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5a9190 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0xa5a9138 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (CXXDependentScopeMemberExpr 0xa5a9080 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5a9048 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa5a9038 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa5a9100 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5a90c8 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa5a90b8 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa5a9390 <line:829:4, line:832:4>
      (CallExpr 0xa5a92d0 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5a9200 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a91c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a91b8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5a9280 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a9248 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a9238 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5a92b4 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0xa59bc10 '__x' 'const value_type &'))
      (UnaryOperator 0xa5a9378 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa5a9340 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5a9308 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0xa5a92f8 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0xa5a9460 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0xa5a93b8 <col:4> '<bound member function type>' ->_M_insert_aux 0xa59ea10
        (CXXThisExpr 0xa5a93a8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0xa5a9428 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0xa5a93e8 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5a9444 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0xa59bc10 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0xa5a9678 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0xa5a9540 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa5a9508 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a94d0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a94c0 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa5a9658 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5a95a0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9568 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a9558 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5a9620 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a95e8 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a95d8 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa5a9730 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0xa5a9708 <col:9, col:44> '<dependent type>'
    (MemberExpr 0xa5a96a0 <col:9> '<bound member function type>' ->_M_fill_insert 0xa59e8a0
      (CXXThisExpr 0xa5a9690 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa5a96c0 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa59bee0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa5a96d8 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa59bf20 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa5a96f0 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0xa59bf70 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa5a9980 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0xa5a9870 <line:966:4, col:72>
    0xa5a9840 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa5a9950 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0xa5a9890 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5a98d0 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa59c100 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa5a98e8 <col:35> '_InputIterator' lvalue ParmVar 0xa59c140 '__first' '_InputIterator')
    (DeclRefExpr 0xa5a9900 <col:44> '_InputIterator' lvalue ParmVar 0xa59c180 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5a9938 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa5aa100 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0xa5a9b08 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0xa5a99c0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570)
    (CXXDependentScopeMemberExpr 0xa5a9a48 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9a10 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a9a00 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5a9ad0 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9a98 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa5a9a7c <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa59c550 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa5a9c98 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0xa5a9b50 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570)
    (CXXDependentScopeMemberExpr 0xa5a9bd8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9ba0 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a9b90 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5a9c60 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9c28 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0xa5a9c0c <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa59c550 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa5a9e28 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0xa5a9ce0 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570)
    (CXXDependentScopeMemberExpr 0xa5a9d68 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9d30 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0xa5a9d20 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5a9df0 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5a9db8 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0xa5a9d9c <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa59c550 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0xa5aa0d8 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5a9fd8 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0xa5aa048 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0xa5aa00c <col:46> '<dependent type>' lvalue))
    (CallExpr 0xa5aa0b8 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5aa080 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0xa5aa064 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa59c550 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0xa5aa1f0 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0xa5aa1d0 <col:9, col:47> '<dependent type>'
    (MemberExpr 0xa5aa130 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
      (CXXThisExpr 0xa5aa120 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0xa5aa198 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5aa160 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aa150 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0xa5aa570 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0xa5aa2c8 <line:1052:4, col:45>
    0xa5aa210 "pointer __result =
      (CallExpr 0xa5aa2a8 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5aa258 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0xa5aa248 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa5aa28c <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa59c750 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0xa5aa460 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa5aa2d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0xa5aa448 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0xa5aa3f0 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa5aa310 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
        (DeclRefExpr 0xa5aa348 <col:36> '_ForwardIterator' lvalue ParmVar 0xa59c790 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5aa360 <col:45> '_ForwardIterator' lvalue ParmVar 0xa59c7d0 '__last' '_ForwardIterator')
        (DeclRefExpr 0xa5aa378 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5aa210 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0xa5aa3d0 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa5aa390 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0xa5aa438 <line:1057:8, col:15>
        (DeclRefExpr 0xa5aa41c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5aa210 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0xa5aa550 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0xa5aa480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0xa5aa538 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0xa5aa500 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa5aa490 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0xa5aa4cc <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5aa210 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0xa5aa4e4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa59c750 '__n' 'size_type':'unsigned int'))
      (NullStmt 0xa5aa528 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0xa5aa920 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0xa5aa6a0 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5aa5d8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5aa5a0 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aa590 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa5aa680 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa5aa60c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0xa5aa668 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa5aa648 <col:64> '_Integer' lvalue ParmVar 0xa59c990 '__n' '_Integer'))))
  (BinaryOperator 0xa5aa860 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5aa700 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5aa6c8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aa6b8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa5aa838 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa5aa7f0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (CXXDependentScopeMemberExpr 0xa5aa780 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5aa748 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa5aa738 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0xa5aa7d8 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0xa5aa7b4 <col:54> '_Integer' lvalue ParmVar 0xa59c990 '__n' '_Integer'))))
  (CallExpr 0xa5aa8f8 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0xa5aa888 <col:4> '<bound member function type>' ->_M_fill_initialize 0xa59d360
      (CXXThisExpr 0xa5aa878 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0xa5aa8c8 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa5aa8a8 <col:46> '_Integer' lvalue ParmVar 0xa59c990 '__n' '_Integer'))
    (DeclRefExpr 0xa5aa8e0 <col:52> '_Integer' lvalue ParmVar 0xa59c9d0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5aab58 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0xa5aaa70 <line:1089:4, line:1090:37>
    0xa5aaa40 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa5aab30 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0xa5aaa90 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5aaad0 <col:24> '_InputIterator' lvalue ParmVar 0xa59cbd0 '__first' '_InputIterator')
    (DeclRefExpr 0xa5aaae8 <col:33> '_InputIterator' lvalue ParmVar 0xa59cc10 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5aab18 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5aacf8 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0xa5aacd0 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5aabf8 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa5aaba0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750)
      (DeclRefExpr 0xa5aab70 <col:11> '_InputIterator' lvalue ParmVar 0xa59ce10 '__first' '_InputIterator')
      (DeclRefExpr 0xa5aab88 <col:22> '_InputIterator' lvalue ParmVar 0xa59ce50 '__last' '_InputIterator'))
    (UnaryOperator 0xa5aac38 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa5aac1c <col:32> '_InputIterator' lvalue ParmVar 0xa59ce10 '__first' '_InputIterator'))
    (CallExpr 0xa5aacb0 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0xa5aac60 <col:6> '<bound member function type>' ->push_back 0xa59bc90
        (CXXThisExpr 0xa5aac50 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0xa5aac98 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa5aac80 <col:17> '_InputIterator' lvalue ParmVar 0xa59ce10 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5ab2e8 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0xa5aae00 <line:1110:4, col:56>
    0xa5aad20 "const size_type __n =
      (CallExpr 0xa5aadd8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa5aad70 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
        (DeclRefExpr 0xa5aada4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa59d090 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5aadbc <col:49> '_ForwardIterator' lvalue ParmVar 0xa59d0d0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0xa5aaf10 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5aae58 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5aae20 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aae10 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa5aaef0 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5aaea0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aae90 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa5aaed4 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa5aad20 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa5ab0b0 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5aaf70 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5aaf38 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5aaf28 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0xa5ab088 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0xa5ab040 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
      (CXXDependentScopeMemberExpr 0xa5aaff0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5aafb8 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa5aafa8 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa5ab024 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa5aad20 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0xa5ab2d0 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5ab110 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ab0d8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ab0c8 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa5ab2a0 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0xa5ab160 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
      (DeclRefExpr 0xa5ab198 <col:34> '_ForwardIterator' lvalue ParmVar 0xa59d090 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa5ab1b0 <col:43> '_ForwardIterator' lvalue ParmVar 0xa59d0d0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0xa5ab210 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5ab1d8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0xa5ab1c8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0xa5ab280 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0xa5ab244 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0xa5ab5b8 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0xa5ab470 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa5ab330 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58e1c0 0xa58eaf0)
    (CXXDependentScopeMemberExpr 0xa5ab3b0 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ab378 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ab368 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa5ab3e4 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0xa59d2b0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa5ab3fc <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0xa59d300 '__value' 'const value_type &')
    (CallExpr 0xa5ab450 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0xa5ab414 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0xa5ab5a0 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5ab4e8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ab4b0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ab4a0 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5ab568 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ab530 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ab520 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa5ab658 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0xa5ab630 <col:11, col:36> '<dependent type>'
    (MemberExpr 0xa5ab5e0 <col:11> '<bound member function type>' ->_M_fill_assign 0xa59dd00
      (CXXThisExpr 0xa5ab5d0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa5ab600 <col:26> '_Integer' lvalue ParmVar 0xa59d430 '__n' '_Integer')
    (DeclRefExpr 0xa5ab618 <col:31> '_Integer' lvalue ParmVar 0xa59d470 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5ab888 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0xa5ab7a0 <line:1158:4, line:1159:37>
    0xa5ab770 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa5ab860 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0xa5ab7c0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5ab800 <col:18> '_InputIterator' lvalue ParmVar 0xa59d640 '__first' '_InputIterator')
    (DeclRefExpr 0xa5ab818 <col:27> '_InputIterator' lvalue ParmVar 0xa59d680 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5ab848 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa5ab940 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0xa5ab918 <col:11, col:43> '<dependent type>'
    (MemberExpr 0xa5ab8b0 <col:11> '<bound member function type>' ->_M_fill_insert 0xa59e8a0
      (CXXThisExpr 0xa5ab8a0 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0xa5ab8d0 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa59ddd0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa5ab8e8 <col:33> '_Integer' lvalue ParmVar 0xa59de10 '__n' '_Integer')
    (DeclRefExpr 0xa5ab900 <col:38> '_Integer' lvalue ParmVar 0xa59de50 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5abb90 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0xa5aba80 <line:1199:4, line:1200:37>
    0xa5aba50 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0xa5abb60 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0xa5abaa0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5abae0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa59e050 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0xa5abaf8 <col:27> '_InputIterator' lvalue ParmVar 0xa59e090 '__first' '_InputIterator')
    (DeclRefExpr 0xa5abb10 <col:36> '_InputIterator' lvalue ParmVar 0xa59e0d0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5abb48 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa5ac280 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0xa5abdf0 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5abd08 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0xa5abcc0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (CXXOperatorCallExpr 0xa5abc80 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa5abc48 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60)
        (CallExpr 0xa5abbd8 <col:6, col:15> '<dependent type>'
          (MemberExpr 0xa5abbb8 <col:6> '<bound member function type>' ->max_size 0xa59af00
            (CXXThisExpr 0xa5abba8 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa5abc28 <col:19, col:24> '<dependent type>'
          (MemberExpr 0xa5abc08 <col:19> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5abbf8 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0xa5abca4 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa59ea80 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa5abdc0 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0xa5abdb0 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5abd94 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5abde0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa5abd80 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa5abd64 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0xa59ead0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa5abff8 <line:1244:2, col:56>
    0xa5abe20 "const size_type __len =
      (CXXOperatorCallExpr 0xa5abfd0 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa5abf88 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880)
        (CallExpr 0xa5abe88 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa5abe68 <col:26> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5abe58 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa5abf60 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa5abec0 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0xa15a2b0 0xa15aa20)
          (CallExpr 0xa5abf28 <col:44, col:49> '<dependent type>'
            (MemberExpr 0xa5abf08 <col:44> '<bound member function type>' ->size 0xa59ae80
              (CXXThisExpr 0xa5abef8 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5abf44 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0xa59ea80 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa5ac270 <line:1245:2, col:63>
    (ConditionalOperator 0xa5ac250 <col:9, col:63> '<dependent type>'
      (ParenExpr 0xa5ac1d0 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0xa5ac1b8 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa5ac0b8 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa5ac070 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
            (DeclRefExpr 0xa5ac008 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa5abe20 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa5ac050 <col:18, col:23> '<dependent type>'
              (MemberExpr 0xa5ac030 <col:18> '<bound member function type>' ->size 0xa59ae80
                (CXXThisExpr 0xa5ac020 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0xa5ac190 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0xa5ac148 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0)
            (DeclRefExpr 0xa5ac0dc <col:28> 'const size_type':'const unsigned int' lvalue Var 0xa5abe20 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa5ac128 <col:36, col:45> '<dependent type>'
              (MemberExpr 0xa5ac108 <col:36> '<bound member function type>' ->max_size 0xa59af00
                (CXXThisExpr 0xa5ac0f8 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa5ac218 <col:50, col:59> '<dependent type>'
        (MemberExpr 0xa5ac1f8 <col:50> '<bound member function type>' ->max_size 0xa59af00
          (CXXThisExpr 0xa5ac1e8 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa5ac234 <col:63> 'const size_type':'const unsigned int' lvalue Var 0xa5abe20 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0xa5ac4c8 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0xa5ac3f0 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0xa5ac2c0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
    (DeclRefExpr 0xa5ac300 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa59ebc0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0xa5ac360 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ac328 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ac318 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0xa5ac3d0 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0xa5ac394 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0xa5ac4b0 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5ac460 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5ac428 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0xa5ac418 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0xa5ac494 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0xa59ebc0 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5accf0 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0xa5acce0 <line:1274:7, line:1275:58>
    (ParenExpr 0xa5accc8 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0xa5accb0 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0xa5acac0 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa5aca60 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5ac950 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
          (CallExpr 0xa5ac9d0 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5ac998 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0xa5ac980 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ac6e0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa5aca40 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5aca08 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa5ac9ec <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ac850 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0xa5acc88 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa5acb00 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1c76a0 0xa1c7c10)
          (CallExpr 0xa5acb88 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5acb50 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0xa5acb38 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ac6e0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa5acbf8 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5acbc0 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0xa5acba4 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ac6e0 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0xa5acc68 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5acc30 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0xa5acc14 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ac850 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5ad3c0 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0xa5ad3b0 <line:1291:7, line:1292:30>
    (CallExpr 0xa5ad380 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa5ad188 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1c8990 0xa1c9260)
      (CallExpr 0xa5ad210 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5ad1d8 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0xa5ad1c0 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5acef0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa5ad280 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5ad248 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0xa5ad22c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5acef0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa5ad2f0 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5ad2b8 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0xa5ad29c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ad060 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0xa5ad360 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5ad328 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0xa5ad30c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ad060 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5ad938 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0xa5ad928 <col:7, col:26>
    (UnaryOperator 0xa5ad910 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0xa5ad8f8 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0xa5ad8d0 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ad870 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5ac950 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240)
          (DeclRefExpr 0xa5ad840 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ad5c0 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa5ad858 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ad730 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5ade68 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0xa5ade58 <col:7, col:20>
    (CXXOperatorCallExpr 0xa5ade30 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa5adde0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5ad140 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
      (DeclRefExpr 0xa5addb0 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5adca0 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0xa5addc8 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5adb30 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5ae3c8 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0xa5ae3b8 <col:7, col:25>
    (UnaryOperator 0xa5ae3a0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa5ae388 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa5ae360 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ae310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5ad140 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
          (DeclRefExpr 0xa5ae2e0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ae1d0 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa5ae2f8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ae060 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5ae928 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0xa5ae918 <col:7, col:25>
    (UnaryOperator 0xa5ae900 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0xa5ae8e8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa5ae8c0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ae870 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5ad140 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0)
          (DeclRefExpr 0xa5ae840 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ae5c0 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0xa5ae858 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5ae730 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0xa5aee68 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0xa5aee48 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5aedf8 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0xa5aede0 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa5aeb40 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0xa5aee2c <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0xa5aecb0 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0xa5af0b8 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0xa5af068 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0xa5af058 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0xa5af040 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0xa5af030 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa5aefe0 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0xa5af018 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0xa5af9a8 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa5af98c <col:12> '_Bit_type *' lvalue ParmVar 0xa5af2a0 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0xa5af9f0 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0xa5af9d8 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0xa5af2e0 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0xa5afa20 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0xa5afa48 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa5afa30 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0xa5afa90 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0xa5afa78 <col:41> 'int' 0))
) (CompoundStmt 0xa5afac0 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0xa5afc30 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0xa5afc20 <col:7, col:32>
    (UnaryOperator 0xa5afc08 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0xa5afbf0 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0xa5afbe0 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0xa5afbc8 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0xa5afbb0 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0xa5afb90 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0xa5afb48 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0xa5afb38 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa5afb14 <col:18> '_Bit_type *const' lvalue ->_M_p 0xa5af220
                      (CXXThisExpr 0xa5afae8 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0xa5afba0 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0xa5afb70 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0xa5af260
                  (CXXThisExpr 0xa5afb60 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0xa5afe50 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0xa5afdf8 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0xa5afc60 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa5afc44 <col:11> '_Bool' lvalue ParmVar 0xa5af520 '__x' '_Bool'))
    (CompoundAssignOperator 0xa5afd08 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa5afcb0 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa5afca0 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5afc80 <col:3> '_Bit_type *' lvalue ->_M_p 0xa5af220
            (CXXThisExpr 0xa5afc70 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0xa5afcf8 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0xa5afcd8 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa5af260
          (CXXThisExpr 0xa5afcc8 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0xa5afdd8 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0xa5afd68 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa5afd58 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5afd38 <col:3> '_Bit_type *' lvalue ->_M_p 0xa5af220
            (CXXThisExpr 0xa5afd28 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0xa5afdc0 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa5afdb0 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0xa5afd90 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa5af260
            (CXXThisExpr 0xa5afd80 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0xa5afe40 <line:89:7, col:15>
    (UnaryOperator 0xa5afe28 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0xa5afe18 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0xa5b00b0 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0xa5b00a0 <col:7, col:30>
    (CXXOperatorCallExpr 0xa5b0078 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa5b0068 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5b0030 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa5af5c0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0xa5afe78 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0xa5afe68 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0xa5aff20 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa5aff10 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa5afef0 <col:27> '_Bool'
            (MemberExpr 0xa5afed0 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
              (DeclRefExpr 0xa5afe98 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0xa5af660 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0xa5b33b8 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0xa5b33a8 <col:7, col:37>
    (BinaryOperator 0xa5b3390 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0xa5b3370 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa5b32c8 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa5b32b8 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa5b0120 <col:19, col:20> '_Bool'
              (MemberExpr 0xa5b0100 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
                (UnaryOperator 0xa5b00e0 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa5b00d0 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0xa5b3380 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0xa5b3358 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa5b3348 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa5b3328 <col:34> '_Bool'
              (MemberExpr 0xa5b3308 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
                (DeclRefExpr 0xa5b32e8 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0xa5af760 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0xa5b3540 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0xa5b3530 <col:7, col:38>
    (BinaryOperator 0xa5b3518 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0xa5b3470 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0xa5b3458 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0xa5b3448 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0xa5b3428 <col:20, col:21> '_Bool'
              (MemberExpr 0xa5b3408 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
                (UnaryOperator 0xa5b33e8 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0xa5b33d8 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0xa5b3500 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0xa5b34f0 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0xa5b34d0 <col:35> '_Bool'
            (MemberExpr 0xa5b34b0 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
              (DeclRefExpr 0xa5b3490 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0xa5af860 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0xa5b3610 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0xa5b35f0 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0xa5b3598 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0xa5b3588 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa5b3568 <col:8> '_Bit_type *' lvalue ->_M_p 0xa5af220
          (CXXThisExpr 0xa5b3558 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0xa5b35e0 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0xa5b35c0 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0xa5af260
        (CXXThisExpr 0xa5b35b0 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0xa5b6d70 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa5b6d4c <col:10> '_Bit_type *const' lvalue ._M_p 0xa5af220
    (DeclRefExpr 0xa5b6d34 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa5afff0 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0xa5b6dd0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0xa5b6dac <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0xa5af260
    (DeclRefExpr 0xa5b6d94 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0xa5afff0 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0xa5b6e00 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0xa5b45d0 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa5b45b4 <col:12> '_Bit_type *' lvalue ParmVar 0xa5b3d20 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0xa5b4610 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa5b45f8 <col:28> 'unsigned int' lvalue ParmVar 0xa5b3d70 '__y' 'unsigned int'))
) (CompoundStmt 0xa5b4888 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0xa5b4a98 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0xa5b4a78 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0xa5b4990 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0xa5b48e8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0xa5b48c8 <col:11> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
          (CXXThisExpr 0xa5b48b8 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa5b4980 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0xa5b4968 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0xa5b4938 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa5b4928 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0xa5b490c <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0xa5b4950 <col:45> 'int' 1))))
    (CompoundStmt 0xa5b4a60 <line:122:2, line:125:2>
      (BinaryOperator 0xa5b4a00 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0xa5b49b8 <col:4> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
          (CXXThisExpr 0xa5b49a8 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa5b49f0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0xa5b49d8 <col:16> 'int' 0)))
      (UnaryOperator 0xa5b4a48 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0xa5b4a28 <col:6> '_Bit_type *' lvalue ->_M_p 0xa5b3ca0
          (CXXThisExpr 0xa5b4a18 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0xa5b4c90 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0xa5b4c70 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0xa5b4b20 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0xa5b4ae0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0xa5b4ac0 <col:11> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
          (CXXThisExpr 0xa5b4ab0 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0xa5b4b10 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa5b4af8 <col:26> 'int' 0)))
    (CompoundStmt 0xa5b4c58 <line:132:2, line:135:2>
      (BinaryOperator 0xa5b4bf8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0xa5b4b48 <col:4> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
          (CXXThisExpr 0xa5b4b38 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0xa5b4be8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0xa5b4bd0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0xa5b4ba0 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa5b4b90 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0xa5b4b74 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0xa5b4bb8 <col:35> 'int' 1))))
      (UnaryOperator 0xa5b4c40 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa5b4c20 <col:6> '_Bit_type *' lvalue ->_M_p 0xa5b3ca0
          (CXXThisExpr 0xa5b4c10 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0xa5b5160 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0xa5b4da8 <line:141:7, col:44>
    0xa5b4cd0 "difference_type __n =
      (ImplicitCastExpr 0xa5b4d98 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0xa5b4d80 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0xa5b4d70 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa5b4d50 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa5b4d04 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0xa5b3fa0 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0xa5b4d60 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa5b4d30 <col:35> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
              (CXXThisExpr 0xa5b4d20 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0xa5b4e78 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0xa5b4dc8 <col:7> '_Bit_type *' lvalue ->_M_p 0xa5b3ca0
      (CXXThisExpr 0xa5b4db8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0xa5b4e60 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0xa5b4e50 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa5b4de8 <col:15> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa5b4e38 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa5b4e28 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0xa5b4e0c <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0xa5b4f40 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0xa5b4e98 <col:7> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int')
    (BinaryOperator 0xa5b4f28 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0xa5b4f18 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa5b4eb0 <col:13> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0xa5b4f00 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0xa5b4ef0 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0xa5b4ed4 <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0xa5b5098 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0xa5b4f98 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0xa5b4f88 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa5b4f58 <col:11> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0xa5b4f70 <col:17> 'int' 0))
    (CompoundStmt 0xa5b5080 <line:145:2, line:148:2>
      (CompoundAssignOperator 0xa5b5018 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0xa5b4fb0 <col:4> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0xa5b5000 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0xa5b4ff0 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0xa5b4fd4 <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0xa5b5068 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0xa5b5048 <col:6> '_Bit_type *' lvalue ->_M_p 0xa5b3ca0
          (CXXThisExpr 0xa5b5038 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0xa5b5148 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0xa5b50c8 <col:7> 'unsigned int' lvalue ->_M_offset 0xa5b3ce0
      (CXXThisExpr 0xa5b50b8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0xa5b5130 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0xa5b5120 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0xa5b5110 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0xa5b50e8 <col:45> 'difference_type':'int' lvalue Var 0xa5b4cd0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b5310 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0xa5b5300 <col:7, col:51>
    (BinaryOperator 0xa5b52e8 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0xa5b5230 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0xa5b5210 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5b51b8 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa5b3ca0
            (CXXThisExpr 0xa5b51a8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa5b5220 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5b51f0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
            (DeclRefExpr 0xa5b51d8 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b40c0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0xa5b52d0 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0xa5b52b0 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa5b5258 <col:34> 'const unsigned int' lvalue ->_M_offset 0xa5b3ce0
            (CXXThisExpr 0xa5b5248 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa5b52c0 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0xa5b5290 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
            (DeclRefExpr 0xa5b5278 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b40c0 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b5560 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0xa5b5550 <line:159:7, line:160:56>
    (BinaryOperator 0xa5b5538 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0xa5b53b0 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0xa5b5390 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5b5338 <col:14> '_Bit_type *const' lvalue ->_M_p 0xa5b3ca0
            (CXXThisExpr 0xa5b5328 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0xa5b53a0 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5b5370 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
            (DeclRefExpr 0xa5b5358 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b41c0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0xa5b5520 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0xa5b5508 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0xa5b5450 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0xa5b5430 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa5b53d8 <col:11> '_Bit_type *const' lvalue ->_M_p 0xa5b3ca0
                (CXXThisExpr 0xa5b53c8 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa5b5440 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa5b5410 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
                (DeclRefExpr 0xa5b53f8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b41c0 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0xa5b54f0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0xa5b54d0 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa5b5478 <col:31> 'const unsigned int' lvalue ->_M_offset 0xa5b3ce0
                (CXXThisExpr 0xa5b5468 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0xa5b54e0 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa5b54b0 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
                (DeclRefExpr 0xa5b5498 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b41c0 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b5660 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0xa5b5650 <col:7, col:28>
    (UnaryOperator 0xa5b5638 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0xa5b5620 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0xa5b55f8 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0xa5b55e8 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b55b8 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b4140 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa5b5588 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa5b5578 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa5b559c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b4290 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b5718 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0xa5b5708 <col:7, col:21>
    (CXXOperatorCallExpr 0xa5b56e0 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0xa5b56d0 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5b56b8 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b4210 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0xa5b5674 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b4360 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0xa5b56a0 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0xa5b5690 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b5800 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0xa5b57f0 <col:7, col:27>
    (UnaryOperator 0xa5b57d8 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa5b57c0 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa5b5798 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0xa5b5788 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b5770 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b4210 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0xa5b572c <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b4430 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0xa5b5758 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa5b5748 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0xa5b58e8 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0xa5b58d8 <col:7, col:27>
    (UnaryOperator 0xa5b58c0 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0xa5b58a8 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0xa5b5880 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0xa5b5870 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b5858 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b4210 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0xa5b5828 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0xa5b5818 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0xa5b583c <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b4500 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0xa5b7110 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0xa5b70f8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b6a80 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0xa5b7210 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa5b71f0 <col:10> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
    (DeclRefExpr 0xa5b71d8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b6a80 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0xa5b7270 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa5b724c <col:10> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
    (DeclRefExpr 0xa5b7234 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b6a80 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0xa5b72a8 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0xa5b5c98 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0xa5b5c88 <line:183:5, line:184:37>
    (ImplicitCastExpr 0xa5b5c78 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0xa5b5c60 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0xa5b5c48 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0xa5b5be8 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0xa5b5bd8 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0xa5b5b78 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0xa5b5aa0 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa5b5a90 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa5b5a74 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0xa5b5b60 <col:32, col:52> 'int'
                  (BinaryOperator 0xa5b5b48 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0xa5b5b28 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa5b5ad0 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
                        (DeclRefExpr 0xa5b5ab8 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b5910 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0xa5b5b38 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa5b5b08 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
                        (DeclRefExpr 0xa5b5af0 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b5960 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0xa5b5bc8 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0xa5b5ba8 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
                (DeclRefExpr 0xa5b5b90 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b5910 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0xa5b5c38 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0xa5b5c18 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
              (DeclRefExpr 0xa5b5c00 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0xa5b5960 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b6ac0 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa5b6978 <col:42> 'int' 0))
, (ImplicitCastExpr 0xa5b6ad0 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa5b6990 <col:45> 'int' 0))
) (CompoundStmt 0xa5b6b30 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b6b78 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa5b6b40 <col:26> '_Bit_type *' lvalue ParmVar 0xa5b5f80 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa5b6b88 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa5b6b58 <col:31> 'unsigned int' lvalue ParmVar 0xa5b5fd0 '__y' 'unsigned int'))
) (CompoundStmt 0xa5b6be0 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0xa5b6e48 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0xa5b6e38 <col:7, col:46>
    (CXXConstructExpr 0xa5b6e10 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5b6d28 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa5b6d18 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0xa5b6ce8 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0xa5b6cd8 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0xa5b6c38 <col:24> '_Bit_type *const' lvalue ->_M_p 0xa5b3ca0
                (ImplicitCastExpr 0xa5b6c28 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0xa5b6c18 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0xa5b6cc0 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0xa5b6c58 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0xa5b6cb0 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0xa5b6c90 <col:37> 'const unsigned int' lvalue ->_M_offset 0xa5b3ce0
                  (ImplicitCastExpr 0xa5b6c80 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa5b6c70 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0xa5b6f10 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0xa5b6ea8 <line:205:7, col:18> 'void'
    (MemberExpr 0xa5b6e88 <col:7> '<bound member function type>' ->_M_bump_up 0xa5b3eb0
      (ImplicitCastExpr 0xa5b6ec8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b6e78 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa5b6f00 <line:206:7, col:15>
    (UnaryOperator 0xa5b6ee8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b6ed8 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0xa5b7418 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0xa5b7348 <line:212:7, col:29>
    0xa5b6f30 "iterator __tmp =
      (CXXConstructExpr 0xa5b7320 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa5b70c0 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa5b6f78 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa5b6f68 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa5b7388 <line:213:7, col:18> 'void'
    (MemberExpr 0xa5b7368 <col:7> '<bound member function type>' ->_M_bump_up 0xa5b3eb0
      (ImplicitCastExpr 0xa5b73a8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b7358 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa5b7408 <line:214:7, col:14>
    (CXXConstructExpr 0xa5b73e0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa5b73d0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5b73b8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5b6f30 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0xa5b74d0 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0xa5b7468 <line:220:7, col:20> 'void'
    (MemberExpr 0xa5b7448 <col:7> '<bound member function type>' ->_M_bump_down 0xa5b3f30
      (ImplicitCastExpr 0xa5b7488 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b7438 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa5b74c0 <line:221:7, col:15>
    (UnaryOperator 0xa5b74a8 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b7498 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0xa5b7658 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0xa5b7588 <line:227:7, col:29>
    0xa5b74f0 "iterator __tmp =
      (CXXConstructExpr 0xa5b7560 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa5b7550 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0xa5b7538 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa5b7528 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0xa5b75c8 <line:228:7, col:20> 'void'
    (MemberExpr 0xa5b75a8 <col:7> '<bound member function type>' ->_M_bump_down 0xa5b3f30
      (ImplicitCastExpr 0xa5b75e8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b7598 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0xa5b7648 <line:229:7, col:14>
    (CXXConstructExpr 0xa5b7620 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa5b7610 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5b75f8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5b74f0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0xa5b7738 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0xa5b76c0 <line:235:7, col:18> 'void'
    (MemberExpr 0xa5b7688 <col:7> '<bound member function type>' ->_M_incr 0xa5b4020
      (ImplicitCastExpr 0xa5b76e0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b7678 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0xa5b76f0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa5b76a8 <col:15> 'difference_type':'int' lvalue ParmVar 0xa5b64c0 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa5b7728 <line:236:7, col:15>
    (UnaryOperator 0xa5b7710 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b7700 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0xa5b7878 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0xa5b7818 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0xa5b7808 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa5b77b8 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa5b6560 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0xa5b7760 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b7750 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0xa5b77a0 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa5b7790 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa5b7774 <col:17> 'difference_type':'int' lvalue ParmVar 0xa5b65d0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa5b7868 <line:243:7, col:15>
    (UnaryOperator 0xa5b7850 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b7840 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0xa5b7a10 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0xa5b7928 <line:249:7, col:29>
    0xa5b78a0 "iterator __tmp =
      (CXXConstructExpr 0xa5b7900 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa5b78e8 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa5b78d8 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa5b7a00 <line:250:7, col:23>
    (CXXConstructExpr 0xa5b79d8 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa5b79c8 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa5b79a0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa5b7990 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b7978 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa5b6560 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa5b7938 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5b78a0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa5b7968 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa5b7950 <col:23> 'difference_type':'int' lvalue ParmVar 0xa5b66a0 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0xa5b7ba0 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0xa5b7ab8 <line:256:7, col:29>
    0xa5b7a30 "iterator __tmp =
      (CXXConstructExpr 0xa5b7a90 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0xa5b7a78 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa5b7a68 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0xa5b7b90 <line:257:7, col:23>
    (CXXConstructExpr 0xa5b7b68 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa5b7b58 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa5b7b30 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0xa5b7b20 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b7b08 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0xa5b6630 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0xa5b7ac8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5b7a30 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0xa5b7af8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa5b7ae0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa5b67b0 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0xa5b7d90 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0xa5b7d80 <col:7, col:27>
    (CXXConstructExpr 0xa5b7d58 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5b7d48 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa5b7d38 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa5b7d18 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa5b7d08 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5b7cb8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa5b7ca8 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0xa5b7c90 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa5b7c68 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0xa5b7c58 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa5b7c08 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0xa5b7bc8 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0xa5b7bb8 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0xa5b7bf8 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0xa5b7bdc <col:24> 'difference_type':'int' lvalue ParmVar 0xa5b6870 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b70e8 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa5b70cc <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa5b7080 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0xa5b7310 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0xa5b7ff0 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0xa5b7fe0 <col:5, col:18>
    (CXXConstructExpr 0xa5b7fb8 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5b7fa8 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa5b7f98 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa5b7f70 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa5b7f60 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5b7f48 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0xa5b7f08 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa5b7e00 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0xa5b7f38 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa5b7f20 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa5b7db0 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b8e20 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0xa5b8de8 <col:48> 'int' 0))
, (ImplicitCastExpr 0xa5b8e30 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa5b8e00 <col:51> 'int' 0))
) (CompoundStmt 0xa5b8e90 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b8ed8 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0xa5b8ea0 <col:26> '_Bit_type *' lvalue ParmVar 0xa5b8340 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0xa5b8ee8 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0xa5b8eb8 <col:31> 'unsigned int' lvalue ParmVar 0xa5b8390 '__y' 'unsigned int'))
) (CompoundStmt 0xa5b8f40 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b8fe8 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0xa5b8f78 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0xa5b3ca0
    (ImplicitCastExpr 0xa5b8f68 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa5b8f50 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa5b8470 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0xa5b8ff8 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0xa5b8fc0 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0xa5b3ce0
    (ImplicitCastExpr 0xa5b8fb0 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0xa5b8f98 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0xa5b8470 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0xa5b9050 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0xa5b9200 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0xa5b91f0 <col:7, col:51>
    (ImplicitCastExpr 0xa5b91e0 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0xa5b91c0 <col:14, col:51> '_Bool'
        (MemberExpr 0xa5b91a0 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
          (ImplicitCastExpr 0xa5b9190 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0xa5b9158 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0xa5b9148 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0xa5b90a8 <col:29> '_Bit_type *const' lvalue ->_M_p 0xa5b3ca0
                  (ImplicitCastExpr 0xa5b9098 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0xa5b9088 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0xa5b9130 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0xa5b90c8 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0xa5b9120 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0xa5b9100 <col:42> 'const unsigned int' lvalue ->_M_offset 0xa5b3ce0
                    (ImplicitCastExpr 0xa5b90f0 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0xa5b90e0 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0xa5b92d0 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0xa5b9268 <line:291:7, col:18> 'void'
    (MemberExpr 0xa5b9248 <col:7> '<bound member function type>' ->_M_bump_up 0xa5b3eb0
      (ImplicitCastExpr 0xa5b9288 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b9238 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa5b92c0 <line:292:7, col:15>
    (UnaryOperator 0xa5b92a8 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b9298 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0xa5b95f8 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0xa5b9528 <line:298:7, col:35>
    0xa5b92f0 "const_iterator __tmp =
      (CXXConstructExpr 0xa5b9500 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa5b9460 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa5b9338 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa5b9328 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa5b9568 <line:299:7, col:18> 'void'
    (MemberExpr 0xa5b9548 <col:7> '<bound member function type>' ->_M_bump_up 0xa5b3eb0
      (ImplicitCastExpr 0xa5b9588 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b9538 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa5b95e8 <line:300:7, col:14>
    (CXXConstructExpr 0xa5b95c0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa5b95b0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5b9598 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa5b92f0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0xa5b96b0 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0xa5b9648 <line:306:7, col:20> 'void'
    (MemberExpr 0xa5b9628 <col:7> '<bound member function type>' ->_M_bump_down 0xa5b3f30
      (ImplicitCastExpr 0xa5b9668 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b9618 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa5b96a0 <line:307:7, col:15>
    (UnaryOperator 0xa5b9688 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b9678 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0xa5b9838 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0xa5b9768 <line:313:7, col:35>
    0xa5b96d0 "const_iterator __tmp =
      (CXXConstructExpr 0xa5b9740 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0xa5b9730 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0xa5b9718 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0xa5b9708 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0xa5b97a8 <line:314:7, col:20> 'void'
    (MemberExpr 0xa5b9788 <col:7> '<bound member function type>' ->_M_bump_down 0xa5b3f30
      (ImplicitCastExpr 0xa5b97c8 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b9778 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0xa5b9828 <line:315:7, col:14>
    (CXXConstructExpr 0xa5b9800 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0xa5b97f0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5b97d8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa5b96d0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0xa5b9918 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0xa5b98a0 <line:321:7, col:18> 'void'
    (MemberExpr 0xa5b9868 <col:7> '<bound member function type>' ->_M_incr 0xa5b4020
      (ImplicitCastExpr 0xa5b98c0 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0xa5b9858 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0xa5b98d0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0xa5b9888 <col:15> 'difference_type':'int' lvalue ParmVar 0xa5b8930 '__i' 'difference_type':'int')))
  (ReturnStmt 0xa5b9908 <line:322:7, col:15>
    (UnaryOperator 0xa5b98f0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b98e0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0xa5b9a58 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0xa5b99f8 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0xa5b99e8 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa5b9998 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa5b89d0 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0xa5b9940 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b9930 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0xa5b9980 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0xa5b9970 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0xa5b9954 <col:17> 'difference_type':'int' lvalue ParmVar 0xa5b8a40 '__i' 'difference_type':'int'))))
  (ReturnStmt 0xa5b9a48 <line:329:7, col:15>
    (UnaryOperator 0xa5b9a30 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0xa5b9a20 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0xa5b9bf0 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0xa5b9b08 <line:335:7, col:35>
    0xa5b9a80 "const_iterator __tmp =
      (CXXConstructExpr 0xa5b9ae0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa5b9ac8 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa5b9ab8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa5b9be0 <line:336:7, col:23>
    (CXXConstructExpr 0xa5b9bb8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa5b9ba8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa5b9b80 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa5b9b70 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b9b58 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa5b89d0 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa5b9b18 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa5b9a80 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa5b9b48 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa5b9b30 <col:23> 'difference_type':'int' lvalue ParmVar 0xa5b8b10 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0xa5b9d80 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0xa5b9c98 <line:342:7, col:35>
    0xa5b9c10 "const_iterator __tmp =
      (CXXConstructExpr 0xa5b9c70 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0xa5b9c58 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0xa5b9c48 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0xa5b9d70 <line:343:7, col:23>
    (CXXConstructExpr 0xa5b9d48 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0xa5b9d38 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0xa5b9d10 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0xa5b9d00 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5b9ce8 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0xa5b8aa0 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0xa5b9ca8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0xa5b9c10 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0xa5b9cd8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0xa5b9cc0 <col:23> 'difference_type':'int' lvalue ParmVar 0xa5b8c20 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0xa5b9f08 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0xa5b9ef8 <col:7, col:27>
    (CXXOperatorCallExpr 0xa5b9ed8 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa5b9ec8 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5b9e98 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa5b8570 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa5b9e88 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0xa5b9e70 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa5b9e48 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa5b9e38 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5b9de8 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa5b8bb0 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0xa5b9da8 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0xa5b9d98 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0xa5b9dd8 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0xa5b9dbc <col:24> 'difference_type':'int' lvalue ParmVar 0xa5b8ce0 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0xa5b9488 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0xa5b946c <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa5b9420 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0xa5b94f0 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0xa5ba170 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0xa5ba160 <col:5, col:18>
    (CXXConstructExpr 0xa5ba138 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5ba128 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0xa5ba118 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0xa5ba0f0 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0xa5ba0e0 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5ba0c8 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0xa5b8bb0 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0xa5ba088 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0xa5b9f80 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0xa5ba0b8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0xa5ba0a0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0xa5b9f30 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0xa5ba568 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0xa5ba540 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5ba398 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0xa5ba388 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5ba370 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b42e0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa5ba360 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa5ba30c <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba190 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa5ba350 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa5ba340 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa5ba324 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba1d0 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0xa5ba438 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0xa5ba428 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5ba3d8 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa5b6200 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0xa5ba3bc <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba190 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0xa5ba518 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0xa5ba508 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5ba4f0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa5af5c0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0xa5ba4a8 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa5ba498 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5ba480 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa5ba470 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5ba458 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba190 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa5ba4e0 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa5ba4c8 <col:18> '_Bool' lvalue ParmVar 0xa5ba210 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0xa5bb360 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0xa5bb340 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0xa5ba7f0 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0xa5ba7d0 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa5ba768 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
          (ImplicitCastExpr 0xa5ba758 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa5ba73c <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba590 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0xa5ba7e0 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0xa5ba7b0 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
          (ImplicitCastExpr 0xa5ba7a0 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0xa5ba788 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba5d0 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0xa5bb1c0 <line:366:7, line:370:7>
      (CallExpr 0xa5bad28 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0xa5bad18 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5bacb8 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0xa5babf0 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0xa1b8e20 'fill')))
        (BinaryOperator 0xa5ba8d8 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0xa5ba8c8 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0xa5ba890 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
              (ImplicitCastExpr 0xa5ba880 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0xa5ba868 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba590 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0xa5ba8b0 <col:27> 'int' 1))
        (ImplicitCastExpr 0xa5bad50 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5ba918 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
            (ImplicitCastExpr 0xa5ba908 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa5ba8f0 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba5d0 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0xa5bad60 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0xa5ba9a8 <col:43, col:54> 'int'
            (ImplicitCastExpr 0xa5ba998 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa5ba938 <col:43> 'const _Bool' lvalue ParmVar 0xa5ba640 '__x' 'const _Bool &'))
            (UnaryOperator 0xa5ba968 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0xa5ba950 <col:50> 'int' 0))
            (IntegerLiteral 0xa5ba980 <col:54> 'int' 0))))
      (CallExpr 0xa5baf08 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0xa5baef8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5baec0 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa5ba2a0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa5baf40 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa5baf30 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa5bada4 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba590 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa5baf88 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa5baf78 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa5baf68 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa5bae78 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0xa5bae38 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0xa5bae28 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0xa5badf0 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
                      (ImplicitCastExpr 0xa5bade0 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0xa5badc8 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba590 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0xa5bae10 <col:55> 'int' 1))
                (ImplicitCastExpr 0xa5bae68 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa5bae50 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0xa5bafb0 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa5baea8 <col:62> 'const _Bool' lvalue ParmVar 0xa5ba640 '__x' 'const _Bool &')))
      (CallExpr 0xa5bb108 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0xa5bb0f8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5bb0e0 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa5ba2a0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0xa5bb150 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa5bb140 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa5bb130 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0xa5bb080 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0xa5bb060 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0xa5bb028 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
                    (ImplicitCastExpr 0xa5bb018 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0xa5bb000 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba5d0 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0xa5bb070 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa5bb048 <col:44> 'int' 0))))))
        (CXXConstructExpr 0xa5bb188 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa5bb178 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa5bb0b0 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba5d0 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa5bb1b0 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa5bb0c8 <col:56> 'const _Bool' lvalue ParmVar 0xa5ba640 '__x' 'const _Bool &'))))
    (CallExpr 0xa5bb288 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0xa5bb278 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5bb25c <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0xa5ba2a0 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0xa5bb2d0 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa5bb2c0 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5bb214 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba590 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0xa5bb308 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0xa5bb2f8 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5bb22c <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0xa5ba5d0 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0xa5bb330 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa5bb244 <col:39> 'const _Bool' lvalue ParmVar 0xa5ba640 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa5bc3c8 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0xa5bc438 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0xa5bc448 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0xa5bbab0 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0xa5bc548 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0xa5bc5b8 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0xa5bc718 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0xa5bc708 <col:9, col:61>
    (UnaryOperator 0xa5bc6f0 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa5bc6d8 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa5bc670 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa5bc630 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CXXDependentScopeMemberExpr 0xa5bc5f8 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0xa5bc5e8 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0xa5bc878 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0xa5bc868 <col:9, col:67>
    (UnaryOperator 0xa5bc850 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0xa5bc838 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0xa5bc7d0 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa5bc790 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
          (CXXDependentScopeMemberExpr 0xa5bc758 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0xa5bc748 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0xa5bc938 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0xa5bc928 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0xa5bc908 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0xa5bc8e8 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0xa5bc8a8 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0xa5bc990 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0xa5bc9a0 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa5bbf50 '__a' 'const allocator_type &')
) (CompoundStmt 0xa5bca00 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0xa5bca78 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0xa5bca58 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5bca20 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa5bca10 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0xa5bcc98 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0xa5bcc88 <line:439:9, line:440:23>
    (CallExpr 0xa5bcc68 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5bcac0 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0xa5bcaa0 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
          (CXXThisExpr 0xa5bca90 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0xa5bcc50 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0xa5bcbd8 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0xa5bcbc0 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0xa5bcb80 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0xa5bcb60 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5bcaf4 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0xa5bc170 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0xa5bcb70 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa5bcb48 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa5bcb38 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0xa5bcb1c <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0xa5bcbb0 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa5bcb98 <col:59> 'int' 1))))
        (ImplicitCastExpr 0xa5bcc40 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0xa5bcc28 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0xa5bcc18 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0xa5bcbfc <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0xa5bd010 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0xa5bcff0 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0xa5bcd18 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5bcce0 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0xa5bccc0 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
          (CXXThisExpr 0xa5bccb0 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0xa5bcfc8 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5bcd80 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0xa5bcd60 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
          (CXXThisExpr 0xa5bcd50 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa5bce20 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5bcde8 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0xa5bcdc8 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
            (CXXThisExpr 0xa5bcdb8 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0xa5bcfa0 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa5bcf60 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa5b5a00 0xa18a440 0xa18db60)
        (CXXDependentScopeMemberExpr 0xa5bce88 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0xa5bce68 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
            (CXXThisExpr 0xa5bce58 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5bcf28 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5bcef0 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0xa5bced0 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0xa5bc130
              (CXXThisExpr 0xa5bcec0 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0xa5c2ea0 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0xa5c2e90 <col:7, col:35>
    (CallExpr 0xa5c2e70 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5c2e38 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0xa5c2f00 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0xa5c2f10 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa5bdf60 '__a' 'const allocator_type &')
) (CompoundStmt 0xa5c2f70 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0xa5c2d70 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa5c2d60 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa5c2d88 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa5c2f80 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa5be110 '__a' 'const allocator_type &')
) (CompoundStmt 0xa5cb680 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0xa5c3040 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0xa5c3008 <col:7> '<bound member function type>' ->_M_initialize 0xa5c0af0
      (CXXThisExpr 0xa5c2ff8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5c3028 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa5be070 '__n' 'size_type':'unsigned int'))
  (CallExpr 0xa5c3288 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0xa5c3088 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
    (CXXDependentScopeMemberExpr 0xa5c3140 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5c3108 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5c30d0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa5c30c0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa5c31c0 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5c3188 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0xa5c3178 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa5c3268 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0xa5c3258 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0xa5c31f4 <col:3> 'const _Bool' lvalue ParmVar 0xa5be0c0 '__value' 'const _Bool &'))
      (UnaryOperator 0xa5c3228 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0xa5c3210 <col:14> 'int' 0))
      (IntegerLiteral 0xa5c3240 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0xa5cb6e8 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0xa5cb6b0 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0xa5cb698 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be280 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0xa5cb9c8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0xa5cb7f0 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0xa5cb760 <col:7> '<bound member function type>' ->_M_initialize 0xa5c0af0
      (CXXThisExpr 0xa5cb750 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa5cb7d0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5cb798 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0xa5cb780 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be280 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa5cb9a0 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0xa5cb820 <col:7> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
      (CXXThisExpr 0xa5cb810 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa5cb890 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5cb858 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0xa5cb840 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be280 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0xa5cb900 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5cb8c8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0xa5cb8ac <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be280 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0xa5cb968 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cb930 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cb920 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0xa5c2da8 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0xa5cb9e0 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0xa5be460 '__a' 'const allocator_type &')
) (CompoundStmt 0xa5cbc58 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0xa5cbb70 <line:552:2, col:70>
    0xa5cbb40 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa5cbc30 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0xa5cbb90 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5cbbd0 <col:25> '_InputIterator' lvalue ParmVar 0xa5be3d0 '__first' '_InputIterator')
    (DeclRefExpr 0xa5cbbe8 <col:34> '_InputIterator' lvalue ParmVar 0xa5be410 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5cbc18 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0xa5cbc70 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa5cc2f8 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0xa5cbdc8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5cbd68 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa5cbd08 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
      (CXXOperatorCallExpr 0xa5cbcd8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa5cbc98 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (DeclRefExpr 0xa5cbc80 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be680 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0xa5cbcf8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0xa5cbdb8 <line:562:2, col:10>
      (UnaryOperator 0xa5cbda0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0xa5cbd90 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0xa5cc060 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5cbef8 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa5cbea8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (CallExpr 0xa5cbe38 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5cbe00 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0xa5cbde4 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be680 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa5cbe88 <col:24, col:33> '<dependent type>'
        (MemberExpr 0xa5cbe68 <col:24> '<bound member function type>' ->capacity 0xa5bf0b0
          (CXXThisExpr 0xa5cbe58 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa5cc048 <line:564:2, line:567:2>
      (CallExpr 0xa5cbf68 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5cbf30 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa5cbf20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0xa5cc028 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0xa5cbf98 <col:4> '<bound member function type>' ->_M_initialize 0xa5c0af0
          (CXXThisExpr 0xa5cbf88 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0xa5cc008 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5cbfd0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0xa5cbfb8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be680 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0xa5cc2a8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5cc0c8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cc090 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cc080 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0xa5cc280 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0xa5cc110 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
        (CXXThisExpr 0xa5cc100 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa5cc180 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5cc148 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0xa5cc130 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be680 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa5cc1f0 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5cc1b8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0xa5cc19c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5be680 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0xa5cc260 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0xa5cc220 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0xa5cc2e8 <line:570:7, col:15>
    (UnaryOperator 0xa5cc2d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa5cc2c0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0xa5cc3a0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0xa5cc378 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa5cc328 <col:7> '<bound member function type>' ->_M_fill_assign 0xa5c1900
      (CXXThisExpr 0xa5cc318 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5cc348 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa5be790 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa5cc360 <col:27> 'const _Bool' lvalue ParmVar 0xa5be7e0 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0xa5cc5c8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0xa5cc4e0 <line:604:2, col:70>
    0xa5cc4b0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa5cc5a0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0xa5cc500 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5cc540 <col:21> '_InputIterator' lvalue ParmVar 0xa5be950 '__first' '_InputIterator')
    (DeclRefExpr 0xa5cc558 <col:30> '_InputIterator' lvalue ParmVar 0xa5be990 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5cc588 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0xa5cc670 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0xa5cc660 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa5cc628 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cc5f0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cc5e0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0xa5cc718 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0xa5cc708 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa5cc6d0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cc698 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cc688 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0xa5cc7c0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0xa5cc7b0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa5cc778 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cc740 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cc730 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0xa5cc868 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0xa5cc858 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0xa5cc820 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5cc7e8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0xa5cc7d8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0xa5cf7f0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0xa5cf7e0 <col:7, col:36>
    (CXXConstructExpr 0xa5cf7b8 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa5cf7a8 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa5cf798 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa5cf568 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa5cf548 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0xa5cf508 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0xa5d2750 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0xa5d2740 <col:7, col:42>
    (CXXConstructExpr 0xa5d2718 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa5d2708 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa5d26f8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa5d24c8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa5d24a8 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa5d2468 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0xa5d28a8 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0xa5d2898 <col:7, col:38>
    (CXXConstructExpr 0xa5d2870 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa5d2860 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0xa5d2850 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa5d27e0 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0xa5d27c0 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0xa5d2780 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0xa5d2a00 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0xa5d29f0 <col:7, col:44>
    (CXXConstructExpr 0xa5d29c8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0xa5d29b8 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0xa5d29a8 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0xa5d2938 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0xa5d2918 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0xa5d28d8 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0xa5d2b98 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0xa5d2b88 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0xa5d2b68 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa5d2b40 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d2b00 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (CallExpr 0xa5d2a70 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d2a30 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0xa5d2ae0 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d2aa0 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0xa5d3078 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0xa5d2d78 <line:671:7, line:673:24>
    0xa5d2bc0 "const size_type __isize =
      (ImplicitCastExpr 0xa5d2d68 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0xa5d2d50 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0xa5d2d20 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0xa5d2d10 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0xa5d2ca0 <col:2, col:48> 'const int':'const int' lvalue Var 0xa3118e0 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0xa5d2cf8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa5d2ce8 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0xa5d2ccc <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0xa5d2d38 <col:23> 'int' 1)))")
  (DeclStmt 0xa5d2e78 <line:674:7, col:66>
    0xa5d2d90 "const size_type __asize =
      (CallExpr 0xa5d2e58 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5d2e20 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0xa5d2e00 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0xa5d2dc4 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0xa5d3068 <line:675:7, line:676:46>
    (ParenExpr 0xa5d3050 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0xa5d3030 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0xa5d2f50 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0xa5d2f40 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa5d2e88 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa5d2d90 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0xa5d2f28 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0xa5d2f08 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa5d2ea0 <col:26> 'const size_type':'const unsigned int' lvalue Var 0xa5d2bc0 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0xa5d2f18 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa5d2ef0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa5d2ee0 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0xa5d2ec4 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0xa5d2ff0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0xa5d2fd0 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa5d2f68 <col:10> 'const size_type':'const unsigned int' lvalue Var 0xa5d2d90 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0xa5d2fe0 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0xa5d2fb8 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0xa5d2fa8 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0xa5d2f8c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0xa5d3020 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0xa5d3008 <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa5d2bc0 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0xa5d3268 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0xa5d3258 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0xa5d3238 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0xa5d3210 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d31d0 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (CXXUnresolvedConstructExpr 0xa5d3140 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0xa5d30f0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5d30b8 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0xa5d30a8 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa5d3128 <col:72> 'int' 0))
        (CallExpr 0xa5d31b0 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d3170 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0xa5d33f8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0xa5d33e8 <col:7, col:29>
    (CXXOperatorCallExpr 0xa5d33c0 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d3360 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
      (CallExpr 0xa5d32d0 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d3290 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0xa5d3340 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d3300 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0xa5d57f0 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0xa5d57e0 <line:691:7, line:692:58>
    (CXXConstructExpr 0xa5d57b8 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5d57a8 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa5d5798 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0xa5d5778 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0xa5d5768 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5d5750 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0xa5d5740 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0xa5d5720 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0xa5d35c0 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5d3570 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                  (CXXDependentScopeMemberExpr 0xa5d3498 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5d3460 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0xa5d3428 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0xa5d3418 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0xa5d3558 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0xa5d3538 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa5d34cc <col:12> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf1b0 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa5d3548 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa5d3520 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa5d3510 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0xa5d34f4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0xa5d5708 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0xa5d3650 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5d35e4 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf1b0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa5d3660 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa5d3638 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa5d3628 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0xa5d360c <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0xa5d5b08 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0xa5d5af8 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0xa5d5ad8 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0xa5d5ac8 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5d5ab0 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0xa5b8570 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0xa5d5aa0 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0xa5d5a80 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0xa5d59b8 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0xa5d5968 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
            (CXXDependentScopeMemberExpr 0xa5d5890 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5d5858 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5d5820 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5d5810 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0xa5d5950 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0xa5d5930 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5d58c4 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf2e0 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0xa5d5940 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa5d5918 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa5d5908 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0xa5d58ec <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0xa5d5a68 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0xa5d5a48 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa5d59dc <col:35> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf2e0 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0xa5d5a58 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa5d5a30 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa5d5a20 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0xa5d5a04 <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0xa5d5d18 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0xa5d5cf8 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d5bf0 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d5ba0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0 0xa5ae810)
      (DeclRefExpr 0xa5d5b1c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf440 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa5d5b80 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5d5b48 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d5b38 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa5d5cc8 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0xa5d5cb8 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5d5c9c <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13de20 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5d5ce8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa5d5c88 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0xa5d5c4c </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0xa5d5e18 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0xa5d5d78 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa5d5d40 <col:7> '<bound member function type>' ->_M_range_check 0xa5bf4c0
      (CXXThisExpr 0xa5d5d30 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5d5d60 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf580 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa5d5e08 <col:28, col:46>
    (ArraySubscriptExpr 0xa5d5df0 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa5d5dc0 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa5d5da8 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5d5d98 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa5d5dd4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf580 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0xa5d5f18 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0xa5d5e78 <col:7, col:25> '<dependent type>'
    (MemberExpr 0xa5d5e40 <col:7> '<bound member function type>' ->_M_range_check 0xa5bf4c0
      (CXXThisExpr 0xa5d5e30 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5d5e60 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf640 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0xa5d5f08 <col:28, col:46>
    (ArraySubscriptExpr 0xa5d5ef0 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0xa5d5ec0 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0xa5d5ea8 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5d5e98 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa5d5ed4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0xa5bf640 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0xa5d5fc8 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0xa5d5fb8 <col:7, col:21>
    (UnaryOperator 0xa5d5fa0 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa5d5f80 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d5f40 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0xa5d6078 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0xa5d6068 <col:7, col:21>
    (UnaryOperator 0xa5d6050 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0xa5d6030 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d5ff0 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0xa5d61c0 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0xa5d61b0 <col:7, col:25>
    (UnaryOperator 0xa5d6198 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa5d6180 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa5d6158 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa5d6118 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CallExpr 0xa5d60e0 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa5d60a0 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa5d6100 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0xa5d6308 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0xa5d62f8 <col:7, col:25>
    (UnaryOperator 0xa5d62e0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0xa5d62c8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0xa5d62a0 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0xa5d6260 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CallExpr 0xa5d6228 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa5d61e8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0xa5d6248 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0xa5d6320 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0xa5d66e8 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0xa5d66c8 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d64c8 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d6468 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXDependentScopeMemberExpr 0xa5d63b0 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5d6378 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5d6340 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa5d6330 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa5d6430 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5d63f8 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d63e8 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0xa5d65d0 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa5d65a0 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa5d6588 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa5d6538 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5d6500 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa5d64f0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa5d65b4 <col:38> '_Bool' lvalue ParmVar 0xa5bfac0 '__x' '_Bool'))
    (CallExpr 0xa5d66a0 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0xa5d65f8 <col:9> '<bound member function type>' ->_M_insert_aux 0xa5c2aa0
        (CXXThisExpr 0xa5d65e8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa5d6668 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d6628 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5d6684 <col:30> '_Bool' lvalue ParmVar 0xa5bfac0 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0xa5d6ee0 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0xa5d6868 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0xa5d6720 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570 0xa5aedb0)
    (CXXDependentScopeMemberExpr 0xa5d67a8 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d6770 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d6760 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa5d6830 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d67f8 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0xa5d67dc <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5bfbc0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa5d69f8 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0xa5d68b0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570 0xa5aedb0)
    (CXXDependentScopeMemberExpr 0xa5d6938 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d6900 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d68f0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa5d69c0 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d6988 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0xa5d696c <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5bfbc0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa5d6b88 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0xa5d6a40 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570 0xa5aedb0)
    (CXXDependentScopeMemberExpr 0xa5d6ac8 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d6a90 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d6a80 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0xa5d6b50 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d6b18 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0xa5d6afc <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5bfbc0 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0xa5d6eb8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5d6db8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0xa5d6e28 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0xa5d6dec <col:11> '<dependent type>' lvalue))
    (CallExpr 0xa5d6e98 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0xa5d6e60 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0xa5d6e44 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0xa5bfbc0 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0xa5d7120 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0xa5d6fc8 <line:773:7, col:23>
    0xa5d6f10 "bool __tmp =
      (ImplicitCastExpr 0xa5d6fb8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0xa5d6f98 <col:20> '_Bool'
          (MemberExpr 0xa5d6f78 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0xa5af4b0
            (ImplicitCastExpr 0xa5d6f68 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0xa5d6f44 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa5bfcb0 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0xa5d7068 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa5d7058 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa5d7020 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0xa5af6e0 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0xa5d6fd8 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa5bfcb0 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa5d7010 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0xa5d6ff0 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa5bfcf0 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0xa5d70f8 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0xa5d70e8 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa5d70d0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa5af5c0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0xa5d708c <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0xa5bfcf0 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0xa5d70c0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0xa5d70a4 <col:13> '_Bool' lvalue Var 0xa5d6f10 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0xa5c2dd8 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0xa5c2dc8 <col:51, col:56> '_Bool'))
) (CompoundStmt 0xa5d7820 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0xa5d7278 <line:781:7, col:55>
    0xa5d7150 "const difference_type __n =
      (CXXOperatorCallExpr 0xa5d7250 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d7210 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (DeclRefExpr 0xa5d7184 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5bfe00 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5d71f0 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d71b0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0xa5d76f0 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0xa5d7558 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa5d7420 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d73c0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (CXXDependentScopeMemberExpr 0xa5d7308 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5d72d0 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5d7298 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0xa5d7288 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa5d7388 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5d7350 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0xa5d7340 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0xa5d7530 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d74d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
        (DeclRefExpr 0xa5d7444 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5bfe00 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5d74b0 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d7470 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa5d7650 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0xa5d7620 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0xa5d7608 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0xa5d75b8 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5d7580 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0xa5d7570 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0xa5d7634 <col:38> 'const _Bool' lvalue ParmVar 0xa5bfe50 '__x' 'const _Bool &'))
    (CallExpr 0xa5d76c8 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0xa5d7678 <col:9> '<bound member function type>' ->_M_insert_aux 0xa5c2aa0
        (CXXThisExpr 0xa5d7668 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa5d7698 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5bfe00 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0xa5d76b0 <col:35> 'const _Bool' lvalue ParmVar 0xa5bfe50 '__x' 'const _Bool &')))
  (ReturnStmt 0xa5d7810 <line:787:7, col:24>
    (CXXOperatorCallExpr 0xa5d77e8 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d7798 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
      (CallExpr 0xa5d7760 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d7720 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5d777c <col:24> 'const difference_type':'const int' lvalue Var 0xa5d7150 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0xa5d7a80 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0xa5d7970 <line:795:2, col:70>
    0xa5d7940 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0xa5d7a50 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0xa5d7990 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5d79d0 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5bffc0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa5d79e8 <col:33> '_InputIterator' lvalue ParmVar 0xa5c0000 '__first' '_InputIterator')
    (DeclRefExpr 0xa5d7a00 <col:42> '_InputIterator' lvalue ParmVar 0xa5c0040 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0xa5d7a38 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0xa5d7b38 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0xa5d7b10 <col:7, col:42> '<dependent type>'
    (MemberExpr 0xa5d7aa8 <col:7> '<bound member function type>' ->_M_fill_insert 0xa5c2410
      (CXXThisExpr 0xa5d7a98 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5d7ac8 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c01a0 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa5d7ae0 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa5c01e0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0xa5d7af8 <col:39> 'const _Bool' lvalue ParmVar 0xa5c0230 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0xa5d7be8 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0xa5d7bd0 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa5d7b98 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d7b60 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d7b50 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0xa5d8038 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0xa5d7f20 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d7d60 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d7d00 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXOperatorCallExpr 0xa5d7c68 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa5d7c58 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5d7c40 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa5d7c30 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5d7bfc <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c03f0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa5d7c18 <col:24> 'int' 1))
      (CallExpr 0xa5d7ce0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d7ca0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa5d7ef8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d7da8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
      (CXXOperatorCallExpr 0xa5d7e48 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0xa5d7e38 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5d7e20 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0xa5d7e10 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5d7de0 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c03f0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0xa5d7df8 <col:32> 'int' 1))
      (CallExpr 0xa5d7ec0 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d7e80 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5d7edc <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c03f0 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0xa5d7fc0 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa5d7f88 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d7f50 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d7f40 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0xa5d8028 <line:818:7, col:14>
    (CXXConstructExpr 0xa5d8000 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa5d7ff0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5d7fd4 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c03f0 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa5d82f0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0xa5d8270 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d80e0 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0xa5d80d0 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5d80b8 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0xa5b42e0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0xa5d80a8 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0xa5d8054 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0500 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0xa5d8098 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0xa5d8088 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0xa5d806c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0540 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0xa5d8250 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0xa5d8118 <col:2> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
        (CXXThisExpr 0xa5d8108 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa5d8228 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d8150 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
        (DeclRefExpr 0xa5d8188 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0540 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5d81f0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d81b0 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa5d820c <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0500 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0xa5d82e0 <line:826:7, col:14>
    (CXXConstructExpr 0xa5d82b8 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0xa5d82a8 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0xa5d828c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0500 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0xa5c2df0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0xa5d8770 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0xa5d8750 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d83c0 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d8370 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
      (DeclRefExpr 0xa5d8308 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0650 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0xa5d8350 <col:24, col:29> '<dependent type>'
        (MemberExpr 0xa5d8330 <col:24> '<bound member function type>' ->size 0xa5befb0
          (CXXThisExpr 0xa5d8320 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa5d8558 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0xa5d83f8 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
        (CXXThisExpr 0xa5d83e8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0xa5d8530 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d84e0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
        (CallExpr 0xa5d8468 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0xa5d8428 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0xa5d84c8 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa5d84b8 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa5d84a8 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa5d8490 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0650 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0xa5d8728 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0xa5d8588 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0xa5d8620 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0xa5d85e0 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0xa5d86e8 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0xa5d86a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (DeclRefExpr 0xa5d863c <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0650 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0xa5d8688 <col:36, col:41> '<dependent type>'
          (MemberExpr 0xa5d8668 <col:36> '<bound member function type>' ->size 0xa5befb0
            (CXXThisExpr 0xa5d8658 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa5d870c <col:44> '_Bool' lvalue ParmVar 0xa5c0690 '__x' '_Bool'))))


        void flip() (CompoundStmt 0xa5d8ad8 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0xa5d8ab0 <line:847:7, line:849:18>
    (DeclStmt 0xa5d8890 <line:847:12, col:57>
      0xa5d87a0 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0xa5d8858 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5d8820 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5d87e8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa5d87d8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5d8998 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d8938 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5d88a0 <col:5> '_Bit_type *' lvalue Var 0xa5d87a0 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0xa5d8900 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5d88c8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d88b8 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0xa5d89d8 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0xa5d89bc <col:47> '_Bit_type *' lvalue Var 0xa5d87a0 '__p' '_Bit_type *'))
    (BinaryOperator 0xa5d8a98 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0xa5d8a18 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0xa5d8a08 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa5d89ec <col:10> '_Bit_type *' lvalue Var 0xa5d87a0 '__p' '_Bit_type *')))
      (UnaryOperator 0xa5d8a80 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0xa5d8a70 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0xa5d8a58 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0xa5d8a48 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa5d8a2c <col:18> '_Bit_type *' lvalue Var 0xa5d87a0 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0xa5d8bb0 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0xa5d8b90 <col:7, col:30> '<dependent type>'
    (MemberExpr 0xa5d8b00 <col:7> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
      (CXXThisExpr 0xa5d8af0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0xa5d8b70 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0xa5d8b30 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0xa5d96a0 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0xa5d90d0 <line:863:7, col:75>
    0xa5d8be0 "_Bit_type *__q =
      (CallExpr 0xa5d9078 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0xa5d9068 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5d9008 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0xa5d8f40 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0xa1b0920 'copy')))
        (ImplicitCastExpr 0xa5d90a0 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5d8c90 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
            (ImplicitCastExpr 0xa5d8c80 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa5d8c68 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa5c08e0 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa5d90b0 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5d8cd8 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
            (ImplicitCastExpr 0xa5d8cc8 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa5d8cb0 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa5c0920 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0xa5d90c0 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0xa5d8d20 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
            (ImplicitCastExpr 0xa5d8d10 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0xa5d8cf8 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c0960 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0xa5d9690 <line:864:7, line:865:26>
    (CXXConstructExpr 0xa5d9668 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0xa5d9658 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa5d9648 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0xa5d9558 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa5d9548 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5d94e8 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0xa5d9420 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0xa1b0920 'copy')))
            (CXXConstructExpr 0xa5d95a0 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa5d9590 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0xa5d9580 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa5d91b8 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa5d9198 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0xa5d9160 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0xa5b3ca0
                        (ImplicitCastExpr 0xa5d9150 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0xa5d9138 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa5c0920 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0xa5d91a8 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa5d9180 <col:52> 'int' 0))))))
            (CXXConstructExpr 0xa5d95d8 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0xa5d95c8 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0xa5d91e8 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0xa5c0920 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0xa5d9620 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0xa5d9610 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0xa5d9600 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0xa5d9258 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0xa5d9238 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0xa5d9208 <col:19> '_Bit_type *' lvalue Var 0xa5d8be0 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0xa5d9248 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa5d9220 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0xa5d9d18 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0xa5d9788 <line:871:7, col:46>
    0xa5d96d0 "_Bit_type *__q =
      (CallExpr 0xa5d9768 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5d9718 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d9708 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0xa5d974c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0aa0 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0xa5d99f8 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5d97e0 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d97a8 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d9798 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0xa5d99e0 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0xa5d99c8 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0xa5d99b8 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0xa5d9814 <col:42> '_Bit_type *' lvalue Var 0xa5d96d0 '__q' '_Bit_type *'))
        (ParenExpr 0xa5d99a0 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0xa5d9988 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0xa5d9910 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0xa5d98f8 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0xa5d98b8 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0xa5d9898 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5d982c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0aa0 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa5d98a8 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0xa5d9880 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0xa5d9870 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0xa5d9854 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0xa5d98e8 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa5d98d0 <col:36> 'int' 1))))
            (ImplicitCastExpr 0xa5d9978 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0xa5d9960 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0xa5d9950 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0xa5d9934 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0xa5d9b18 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5d9a58 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d9a20 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d9a10 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0xa5d9ae8 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0xa5d9ac8 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0xa5d9a98 <col:41> '_Bit_type *' lvalue Var 0xa5d96d0 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0xa5d9ad8 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa5d9ab0 <col:46> 'int' 0))))
  (BinaryOperator 0xa5d9d00 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5d9b78 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d9b40 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d9b30 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0xa5d9cd8 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0xa5d9c88 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
      (CXXDependentScopeMemberExpr 0xa5d9bf8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5d9bc0 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d9bb0 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0xa5d9c70 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0xa5d9c60 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0xa5d9c50 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa5d9c38 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0xa5c0aa0 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa5da000 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0xa5d9da0 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0xa5d9d48 <col:2> '<bound member function type>' ->_M_initialize 0xa5c0af0
      (CXXThisExpr 0xa5d9d38 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0xa5d9d88 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0xa5d9d68 <col:39> '_Integer' lvalue ParmVar 0xa5c0bc0 '__n' '_Integer')))
  (CallExpr 0xa5d9fd8 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0xa5d9de8 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
    (CXXDependentScopeMemberExpr 0xa5d9ea0 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d9e68 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5d9e30 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0xa5d9e20 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0xa5d9f20 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5d9ee8 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0xa5d9ed8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0xa5d9fb8 <col:38, col:49> 'int'
      (DeclRefExpr 0xa5d9f54 <col:38> '_Integer' lvalue ParmVar 0xa5c0c00 '__x' '_Integer')
      (UnaryOperator 0xa5d9f88 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0xa5d9f70 <col:45> 'int' 0))
      (IntegerLiteral 0xa5d9fa0 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5da148 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0xa5da120 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0xa5da028 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5da068 <col:29> '_InputIterator' lvalue ParmVar 0xa5c0dd0 '__first' '_InputIterator')
    (DeclRefExpr 0xa5da080 <col:38> '_InputIterator' lvalue ParmVar 0xa5c0e10 '__last' '_InputIterator')
    (CallExpr 0xa5da100 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0xa5da0b0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17a400)
      (DeclRefExpr 0xa5da0e4 <col:33> '_InputIterator' lvalue ParmVar 0xa5c0dd0 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5da2f0 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0xa5da2c8 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5da1f0 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa5da190 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5da15c <col:9> '_InputIterator' lvalue ParmVar 0xa5c0fe0 '__first' '_InputIterator')
      (DeclRefExpr 0xa5da174 <col:20> '_InputIterator' lvalue ParmVar 0xa5c1020 '__last' '_InputIterator'))
    (UnaryOperator 0xa5da230 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa5da214 <col:30> '_InputIterator' lvalue ParmVar 0xa5c0fe0 '__first' '_InputIterator'))
    (CallExpr 0xa5da2a8 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0xa5da258 <col:4> '<bound member function type>' ->push_back 0xa5bfb40
        (CXXThisExpr 0xa5da248 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0xa5da290 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa5da278 <col:15> '_InputIterator' lvalue ParmVar 0xa5c0fe0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5da5a0 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0xa5da3f0 <line:913:2, col:54>
    0xa5da310 "const size_type __n =
      (CallExpr 0xa5da3c8 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa5da360 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
        (DeclRefExpr 0xa5da394 <col:38> '_ForwardIterator' lvalue ParmVar 0xa5c1230 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5da3ac <col:47> '_ForwardIterator' lvalue ParmVar 0xa5c1270 '__last' '_ForwardIterator'))")
  (CallExpr 0xa5da448 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0xa5da410 <col:2> '<bound member function type>' ->_M_initialize 0xa5c0af0
      (CXXThisExpr 0xa5da400 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5da430 <col:16> 'const size_type':'const unsigned int' lvalue Var 0xa5da310 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0xa5da578 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0xa5da490 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
    (DeclRefExpr 0xa5da4c8 <col:12> '_ForwardIterator' lvalue ParmVar 0xa5c1230 '__first' '_ForwardIterator')
    (DeclRefExpr 0xa5da4e0 <col:21> '_ForwardIterator' lvalue ParmVar 0xa5c1270 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0xa5da540 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5da508 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa5da4f8 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0xa5da648 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0xa5da620 <col:9, col:34> '<dependent type>'
    (MemberExpr 0xa5da5d0 <col:9> '<bound member function type>' ->_M_fill_assign 0xa5c1900
      (CXXThisExpr 0xa5da5c0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5da5f0 <col:24> '_Integer' lvalue ParmVar 0xa5c1480 '__n' '_Integer')
    (DeclRefExpr 0xa5da608 <col:29> '_Integer' lvalue ParmVar 0xa5c14c0 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5da790 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0xa5da768 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0xa5da670 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5da6b0 <col:23> '_InputIterator' lvalue ParmVar 0xa5c1690 '__first' '_InputIterator')
    (DeclRefExpr 0xa5da6c8 <col:32> '_InputIterator' lvalue ParmVar 0xa5c16d0 '__last' '_InputIterator')
    (CallExpr 0xa5da748 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0xa5da6f8 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17a400)
      (DeclRefExpr 0xa5da72c <col:65> '_InputIterator' lvalue ParmVar 0xa5c1690 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0xa5db098 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0xa5db078 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5da860 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa5da810 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (DeclRefExpr 0xa5da7a4 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa5c1840 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa5da7f0 <col:17, col:22> '<dependent type>'
        (MemberExpr 0xa5da7d0 <col:17> '<bound member function type>' ->size 0xa5befb0
          (CXXThisExpr 0xa5da7c0 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa5daca8 <line:935:2, line:939:2>
      (CallExpr 0xa5daaa8 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa5da8a8 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
        (CXXDependentScopeMemberExpr 0xa5da960 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5da928 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5da8f0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa5da8e0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa5da9e0 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5da9a8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa5da998 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa5daa88 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa5daa78 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa5daa14 <col:40> '_Bool' lvalue ParmVar 0xa5c1880 '__x' '_Bool'))
          (UnaryOperator 0xa5daa48 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa5daa30 <col:47> 'int' 0))
          (IntegerLiteral 0xa5daa60 <col:51> 'int' 0)))
      (CallExpr 0xa5dac80 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0xa5daae0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0xa5dab78 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dab38 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa5dac40 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0xa5dac00 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (DeclRefExpr 0xa5dab94 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0xa5c1840 '__n' 'size_t':'unsigned int')
          (CallExpr 0xa5dabe0 <col:24, col:29> '<dependent type>'
            (MemberExpr 0xa5dabc0 <col:24> '<bound member function type>' ->size 0xa5befb0
              (CXXThisExpr 0xa5dabb0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0xa5dac64 <col:32> '_Bool' lvalue ParmVar 0xa5c1880 '__x' '_Bool')))
    (CompoundStmt 0xa5db060 <line:941:2, line:945:2>
      (CallExpr 0xa5dadf0 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0xa5dacd0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
          (CXXThisExpr 0xa5dacc0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0xa5dadc8 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0xa5dad78 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CallExpr 0xa5dad40 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa5dad00 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa5dad5c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0xa5c1840 '__n' 'size_t':'unsigned int')))
      (CallExpr 0xa5db038 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dae38 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
        (CXXDependentScopeMemberExpr 0xa5daef0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5daeb8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5dae80 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0xa5dae70 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0xa5daf70 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5daf38 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0xa5daf28 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0xa5db018 <col:40, col:51> 'int'
          (ImplicitCastExpr 0xa5db008 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0xa5dafa4 <col:40> '_Bool' lvalue ParmVar 0xa5c1880 '__x' '_Bool'))
          (UnaryOperator 0xa5dafd8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0xa5dafc0 <col:47> 'int' 0))
          (IntegerLiteral 0xa5daff0 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5db740 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0xa5db168 <line:953:2, col:26>
    0xa5db0c0 "iterator __cur =
      (CallExpr 0xa5db148 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0xa5db108 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0xa5db4b8 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa5db340 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa5db208 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa5db1a8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (DeclRefExpr 0xa5db178 <col:9> '_InputIterator' lvalue ParmVar 0xa5c19d0 '__first' '_InputIterator')
        (DeclRefExpr 0xa5db190 <col:20> '_InputIterator' lvalue ParmVar 0xa5c1a10 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa5db318 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0xa5db2b8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (DeclRefExpr 0xa5db22c <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5db0c0 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5db298 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0xa5db258 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0xa5db3e8 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0xa5db398 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa5db388 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5db370 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa5b6200 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa5db358 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5db0c0 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0xa5db3d0 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa5db3b8 <col:57> '_InputIterator' lvalue ParmVar 0xa5c19d0 '__first' '_InputIterator')))
    (BinaryOperator 0xa5db4a0 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0xa5db450 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0xa5db440 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5db428 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0xa5db418 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0xa5db400 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5db0c0 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0xa5db488 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa5db470 <col:14> '_InputIterator' lvalue ParmVar 0xa5c19d0 '__first' '_InputIterator'))))
  (IfStmt 0xa5db720 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5db570 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa5db510 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
      (DeclRefExpr 0xa5db4dc <col:6> '_InputIterator' lvalue ParmVar 0xa5c19d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa5db4f4 <col:17> '_InputIterator' lvalue ParmVar 0xa5c1a10 '__last' '_InputIterator'))
    (CallExpr 0xa5db5e0 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0xa5db5a8 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
        (CXXThisExpr 0xa5db598 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0xa5db5c8 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5db0c0 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0xa5db6f8 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa5db610 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa5db6a8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa5db668 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5db6c4 <col:18> '_InputIterator' lvalue ParmVar 0xa5c19d0 '__first' '_InputIterator')
      (DeclRefExpr 0xa5db6dc <col:27> '_InputIterator' lvalue ParmVar 0xa5c1a10 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5dbe80 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0xa5db850 <line:967:2, col:56>
    0xa5db770 "const size_type __len =
      (CallExpr 0xa5db828 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa5db7c0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
        (DeclRefExpr 0xa5db7f4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa5c1c00 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5db80c <col:49> '_ForwardIterator' lvalue ParmVar 0xa5c1c40 '__last' '_ForwardIterator'))")
  (IfStmt 0xa5dbe60 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5db918 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa5db8c8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
      (DeclRefExpr 0xa5db860 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa5db770 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa5db8a8 <col:14, col:19> '<dependent type>'
        (MemberExpr 0xa5db888 <col:14> '<bound member function type>' ->size 0xa5befb0
          (CXXThisExpr 0xa5db878 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa5dba88 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0xa5db950 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa5c2cf0
        (CXXThisExpr 0xa5db940 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0xa5dba60 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0xa5db988 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
        (DeclRefExpr 0xa5db9c0 <col:30> '_ForwardIterator' lvalue ParmVar 0xa5c1c00 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5db9d8 <col:39> '_ForwardIterator' lvalue ParmVar 0xa5c1c40 '__last' '_ForwardIterator')
        (CallExpr 0xa5dba40 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dba00 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa5dbe40 <line:971:4, line:976:4>
      (DeclStmt 0xa5dbb00 <line:972:6, col:38>
        0xa5dbab0 "_ForwardIterator __mid =
          (DeclRefExpr 0xa5dbae4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa5c1c00 '__first' '_ForwardIterator')")
      (CallExpr 0xa5dbbd8 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dbb38 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa181520)
        (DeclRefExpr 0xa5dbb6c <col:19> '_ForwardIterator' lvalue Var 0xa5dbab0 '__mid' '_ForwardIterator')
        (CallExpr 0xa5dbbb8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0xa5dbb98 <col:26> '<bound member function type>' ->size 0xa5befb0
            (CXXThisExpr 0xa5dbb88 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0xa5dbcf8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dbc20 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
        (DeclRefExpr 0xa5dbc58 <col:16> '_ForwardIterator' lvalue ParmVar 0xa5c1c00 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5dbc70 <col:25> '_ForwardIterator' lvalue Var 0xa5dbab0 '__mid' '_ForwardIterator')
        (CallExpr 0xa5dbcd8 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dbc98 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0xa5dbe18 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa5dbd30 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0xa5dbdc8 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dbd88 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0xa5dbde4 <col:20> '_ForwardIterator' lvalue Var 0xa5dbab0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0xa5dbdfc <col:27> '_ForwardIterator' lvalue ParmVar 0xa5c1c40 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0xa5dbf38 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0xa5dbf10 <col:9, col:39> '<dependent type>'
    (MemberExpr 0xa5dbea8 <col:9> '<bound member function type>' ->_M_fill_insert 0xa5c2410
      (CXXThisExpr 0xa5dbe98 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0xa5dbec8 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c1e30 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa5dbee0 <col:31> '_Integer' lvalue ParmVar 0xa5c1e70 '__n' '_Integer')
    (DeclRefExpr 0xa5dbef8 <col:36> '_Integer' lvalue ParmVar 0xa5c1eb0 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0xa5dc0a0 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0xa5dc070 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0xa5dbf60 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0xa5dbfa0 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c20b0 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0xa5dbfb8 <col:32> '_InputIterator' lvalue ParmVar 0xa5c20f0 '__first' '_InputIterator')
    (DeclRefExpr 0xa5dbfd0 <col:41> '_InputIterator' lvalue ParmVar 0xa5c2130 '__last' '_InputIterator')
    (CallExpr 0xa5dc050 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0xa5dc000 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa17a400)
      (DeclRefExpr 0xa5dc034 <col:29> '_InputIterator' lvalue ParmVar 0xa5c20f0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5dc338 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0xa5dc310 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5dc148 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa5dc0e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5dc0b4 <col:9> '_InputIterator' lvalue ParmVar 0xa5c2520 '__first' '_InputIterator')
      (DeclRefExpr 0xa5dc0cc <col:20> '_InputIterator' lvalue ParmVar 0xa5c2560 '__last' '_InputIterator'))
    (UnaryOperator 0xa5dc188 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa5dc16c <col:30> '_InputIterator' lvalue ParmVar 0xa5c2520 '__first' '_InputIterator'))
    (CompoundStmt 0xa5dc2f8 <line:1006:4, line:1009:4>
      (BinaryOperator 0xa5dc280 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa5dc19c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c24e0 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5dc258 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dc1c8 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa5dc20c <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c24e0 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0xa5dc240 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa5dc224 <col:29> '_InputIterator' lvalue ParmVar 0xa5c2520 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0xa5dc2d8 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0xa5dc2c8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5dc2b0 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0xa5b6200 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0xa5dc298 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c24e0 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0xa5dca48 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0xa5dc5a8 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5dc4c0 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa5dc470 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
      (CXXOperatorCallExpr 0xa5dc430 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dc3f0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (CallExpr 0xa5dc380 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa5dc360 <col:11> '<bound member function type>' ->max_size 0xa5bf030
            (CXXThisExpr 0xa5dc350 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5dc3d0 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa5dc3b0 <col:24> '<bound member function type>' ->size 0xa5befb0
            (CXXThisExpr 0xa5dc3a0 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa5dc454 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0xa5c2b10 '__n' 'size_type':'unsigned int'))
    (CallExpr 0xa5dc578 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0xa5dc568 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5dc54c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5dc598 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0xa5dc538 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0xa5dc51c </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0xa5c2b60 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0xa5dc7b0 <line:1026:7, col:61>
    0xa5dc5d0 "const size_type __len =
      (CXXOperatorCallExpr 0xa5dc788 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dc738 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
        (CallExpr 0xa5dc638 <col:31, col:36> '<dependent type>'
          (MemberExpr 0xa5dc618 <col:31> '<bound member function type>' ->size 0xa5befb0
            (CXXThisExpr 0xa5dc608 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5dc710 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0xa5dc670 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0xa15a2b0 0xa15aa20)
          (CallExpr 0xa5dc6d8 <col:49, col:54> '<dependent type>'
            (MemberExpr 0xa5dc6b8 <col:49> '<bound member function type>' ->size 0xa5befb0
              (CXXThisExpr 0xa5dc6a8 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0xa5dc6f4 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0xa5c2b10 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0xa5dca38 <line:1027:7, col:68>
    (ConditionalOperator 0xa5dca18 <col:14, col:68> '<dependent type>'
      (ParenExpr 0xa5dc998 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0xa5dc980 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0xa5dc878 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa5dc828 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
            (DeclRefExpr 0xa5dc7c0 <col:15> 'const size_type':'const unsigned int' lvalue Var 0xa5dc5d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa5dc808 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa5dc7e8 <col:23> '<bound member function type>' ->size 0xa5befb0
                (CXXThisExpr 0xa5dc7d8 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0xa5dc958 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0xa5dc908 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
            (DeclRefExpr 0xa5dc89c <col:33> 'const size_type':'const unsigned int' lvalue Var 0xa5dc5d0 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0xa5dc8e8 <col:41, col:50> '<dependent type>'
              (MemberExpr 0xa5dc8c8 <col:41> '<bound member function type>' ->max_size 0xa5bf030
                (CXXThisExpr 0xa5dc8b8 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0xa5dc9e0 <col:55, col:64> '<dependent type>'
        (MemberExpr 0xa5dc9c0 <col:55> '<bound member function type>' ->max_size 0xa5bf030
          (CXXThisExpr 0xa5dc9b0 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa5dc9fc <col:68> 'const size_type':'const unsigned int' lvalue Var 0xa5dc5d0 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0xa5dcb18 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0xa5dcb00 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa5dcab0 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5dca78 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5dca68 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0xa5dcae4 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5c2c50 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0xa5e2678 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0xa5dd160 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5dd038 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa5dcfe8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (DeclRefExpr 0xa5dcf64 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5dce80 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa5dcfc8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5dcf90 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa5dcf80 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0xa5dd130 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0xa5dd120 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5dd104 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5dd150 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa5dd0f0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa5dd0c0 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa5e2658 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5dd250 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa5dd200 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
      (CallExpr 0xa5dd1c8 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5dd190 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa5dd180 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0xa5dd1e4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa5dce80 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa5e2628 <line:72:2, line:85:2>
      (DeclStmt 0xa5dd308 <line:73:4, col:39>
        0xa5dd280 "const size_type __old_size =
          (CallExpr 0xa5dd2e8 <col:33, col:38> '<dependent type>'
            (MemberExpr 0xa5dd2c8 <col:33> '<bound member function type>' ->size 0xa59ae80
              (CXXThisExpr 0xa5dd2b8 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0xa5dd518 <line:74:4, line:76:57>
        0xa5dd320 "pointer __tmp =
          (CallExpr 0xa5dd4f0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa5dd368 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0xa5dd3a4 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa5dce80 '__n' 'size_type':'unsigned int')
            (ParenExpr 0xa5dd440 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5dd408 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5dd3d0 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5dd3c0 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0xa5dd4d8 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5dd4a0 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5dd468 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5dd458 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0xa5e2018 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa5dd558 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (CXXDependentScopeMemberExpr 0xa5dd5e0 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5dd5a8 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa5dd598 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5dd660 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5dd628 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa5dd618 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa5dd6d0 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa5dd694 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa5e2268 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa5e2040 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa5e20c8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e2090 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2080 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e2240 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e2200 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CXXDependentScopeMemberExpr 0xa5e2148 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e2110 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e2100 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa5e21c8 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e2190 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e2180 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa5e2328 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e22d8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e22a0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2290 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5e230c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5dd320 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa5e2468 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e2388 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e2350 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2340 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e2440 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e23f0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (DeclRefExpr 0xa5e23bc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5dd320 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa5e23d4 <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa5dd280 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa5e2610 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e24c8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e2490 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2480 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e25e8 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e2598 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CXXDependentScopeMemberExpr 0xa5e2548 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e2510 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e2500 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5e257c <col:63> 'size_type':'unsigned int' lvalue ParmVar 0xa5dce80 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0xa5e3500 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0xa5e2e48 <line:111:7, col:49>
    0xa5e2d20 "const size_type __n =
      (CXXOperatorCallExpr 0xa5e2e20 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e2de0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (DeclRefExpr 0xa5e2d54 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e2a80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa5e2dc0 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0xa5e2d80 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0xa5e3398 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0xa5e30f0 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa5e2fb8 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e2f58 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (CXXDependentScopeMemberExpr 0xa5e2ea0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e2e68 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2e58 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5e2f20 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e2ee8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e2ed8 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0xa5e30c8 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e3068 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
        (DeclRefExpr 0xa5e2fdc <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e2a80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa5e3048 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0xa5e3008 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0xa5e32e0 <line:114:2, line:117:2>
      (CallExpr 0xa5e3220 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5e3150 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e3118 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e3108 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5e31d0 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e3198 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e3188 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5e3204 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e2ad0 '__x' 'const value_type &'))
      (UnaryOperator 0xa5e32c8 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa5e3290 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e3258 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e3248 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0xa5e3380 <line:119:2, line:129:2>
      (CallExpr 0xa5e3358 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0xa5e3308 <col:6> '<bound member function type>' ->_M_insert_aux 0xa59ea10
          (CXXThisExpr 0xa5e32f8 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0xa5e3328 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e2a80 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0xa5e3340 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e2ad0 '__x' 'const value_type &'))))
  (ReturnStmt 0xa5e34f0 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0xa5e34d0 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0xa5e34a8 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e3458 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
        (CXXDependentScopeMemberExpr 0xa5e3408 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e33d0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e33c0 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5e343c <col:48> 'const size_type':'const unsigned int' lvalue Var 0xa5e2d20 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0xa5e4068 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0xa5e3e68 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e3c90 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e3c30 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXOperatorCallExpr 0xa5e3b98 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e3b48 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
        (DeclRefExpr 0xa5e3b14 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e38e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa5e3b30 <col:24> 'int' 1))
      (CallExpr 0xa5e3c10 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0xa5e3bd0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0xa5e3e40 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e3cd8 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
      (CXXOperatorCallExpr 0xa5e3d90 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e3d40 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
        (DeclRefExpr 0xa5e3d10 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e38e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0xa5e3d28 <col:30> 'int' 1))
      (CallExpr 0xa5e3e08 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0xa5e3dc8 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5e3e24 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e38e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0xa5e3f08 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0xa5e3ed0 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5e3e98 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0xa5e3e88 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0xa5e4020 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa5e3f68 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5e3f30 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0xa5e3f20 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0xa5e3fe8 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0xa5e3fb0 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0xa5e3fa0 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0xa5e4058 <line:142:7, col:14>
    (DeclRefExpr 0xa5e4040 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e38e0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0xa5e4c80 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0xa5e4c38 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e4768 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e4708 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5e46d8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4450 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0xa5e46f0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4490 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0xa5e4c20 <line:151:2, line:155:2>
      (IfStmt 0xa5e49c0 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa5e4878 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e4818 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
          (DeclRefExpr 0xa5e478c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4490 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa5e47f8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e47b8 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0xa5e4998 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e48c0 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
          (DeclRefExpr 0xa5e48f8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4490 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0xa5e4960 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e4920 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa5e497c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4450 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0xa5e4c00 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0xa5e49f0 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
          (CXXThisExpr 0xa5e49e0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0xa5e4bd8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e4b88 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CallExpr 0xa5e4a60 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5e4a28 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0xa5e4a10 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4450 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0xa5e4b70 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0xa5e4b48 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e4b08 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CallExpr 0xa5e4ad0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0xa5e4a90 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa5e4aec <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4490 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0xa5e4c70 <line:156:7, col:14>
    (DeclRefExpr 0xa5e4c54 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5e4450 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0xa5e6b50 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0xa5e6af8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e5470 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e5410 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXOperatorCallExpr 0xa5e53e0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e53a0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa3cdfb0 0xa3cf7b0 0xa3d28b0)
        (DeclRefExpr 0xa5e5384 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0xa5e5400 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0xa5e6ad8 <line:165:2, line:194:2>
      (DeclStmt 0xa5e5548 <line:166:4, col:39>
        0xa5e54a0 "const size_type __xlen =
          (CallExpr 0xa5e5528 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5e54f0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0xa5e54d4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0xa5e6910 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa5e5610 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e55c0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
          (DeclRefExpr 0xa5e5558 <col:8> 'const size_type':'const unsigned int' lvalue Var 0xa5e54a0 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0xa5e55a0 <col:17, col:26> '<dependent type>'
            (MemberExpr 0xa5e5580 <col:17> '<bound member function type>' ->capacity 0xa59b0d0
              (CXXThisExpr 0xa5e5570 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0xa5e5e88 <line:168:6, line:178:6>
          (DeclStmt 0xa5e57e8 <line:169:8, line:170:20>
            0xa5e5640 "pointer __tmp =
              (CallExpr 0xa5e57c0 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0xa5e5688 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0xa5e56c4 <col:45> 'const size_type':'const unsigned int' lvalue Var 0xa5e54a0 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0xa5e5730 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5e56f8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e56dc <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa5e57a0 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5e5768 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e574c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0xa5e59b8 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa5e5820 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
            (CXXDependentScopeMemberExpr 0xa5e58a8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e5870 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e5860 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa5e5928 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e58f0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e58e0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa5e5998 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa5e595c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa5e5c08 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e59e0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa5e5a68 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e5a30 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e5a20 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5e5be0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e5ba0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CXXDependentScopeMemberExpr 0xa5e5ae8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e5ab0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5e5aa0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa5e5b68 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e5b30 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5e5b20 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa5e5cc8 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5e5c78 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e5c40 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e5c30 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5e5cac <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e5640 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5e5e70 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5e5d28 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e5cf0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e5ce0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5e5e48 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e5df8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
              (CXXDependentScopeMemberExpr 0xa5e5da8 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e5d70 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5e5d60 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa5e5ddc <col:67> 'const size_type':'const unsigned int' lvalue Var 0xa5e54a0 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0xa5e68f0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0xa5e5f68 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0xa5e5f18 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0 0xa5ae810)
            (CallExpr 0xa5e5ee0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0xa5e5ec0 <col:13> '<bound member function type>' ->size 0xa59ae80
                (CXXThisExpr 0xa5e5eb0 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5e5efc <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa5e54a0 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0xa5e62a8 <line:180:6, line:183:6>
            (CallExpr 0xa5e6280 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e5fb0 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
              (CallExpr 0xa5e6190 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0xa5e6008 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
                (CallExpr 0xa5e6090 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5e6058 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e6040 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa5e6100 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5e60c8 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e60ac <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa5e6170 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5e6130 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0xa5e6208 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0xa5e61c8 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0xa5e6260 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0xa5e6224 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0xa5e68d8 <line:185:6, line:192:6>
            (CallExpr 0xa5e6570 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e62e0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
              (CXXDependentScopeMemberExpr 0xa5e6368 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e6330 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5e6318 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0xa5e64c8 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0xa5e6478 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                (CXXDependentScopeMemberExpr 0xa5e63f0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5e63b8 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e639c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa5e6458 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0xa5e6438 <col:63> '<bound member function type>' ->size 0xa59ae80
                    (CXXThisExpr 0xa5e6428 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa5e6538 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e6500 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5e64f0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0xa5e68a8 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa5e65c0 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
              (CXXOperatorCallExpr 0xa5e6720 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0xa5e66d0 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                (CXXDependentScopeMemberExpr 0xa5e6648 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5e6610 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5e65f8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0xa5e66b0 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0xa5e6690 <col:59> '<bound member function type>' ->size 0xa59ae80
                    (CXXThisExpr 0xa5e6680 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0xa5e6798 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e6760 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5e6744 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0xa5e5140 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0xa5e6818 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5e67e0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5e67d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa5e6888 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0xa5e684c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0xa5e6ac0 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e6978 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e6940 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e6930 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e6a98 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e6a48 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CXXDependentScopeMemberExpr 0xa5e69f8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e69c0 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e69b0 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5e6a2c <col:55> 'const size_type':'const unsigned int' lvalue Var 0xa5e54a0 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0xa5e6b40 <line:195:7, col:15>
    (UnaryOperator 0xa5e6b28 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0xa5e6b18 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0xa5e79f8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0xa5e79d8 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e7030 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e6fe0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (DeclRefExpr 0xa5e6f78 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
      (CallExpr 0xa5e6fc0 <col:17, col:26> '<dependent type>'
        (MemberExpr 0xa5e6fa0 <col:17> '<bound member function type>' ->capacity 0xa59b0d0
          (CXXThisExpr 0xa5e6f90 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa5e71f0 <line:204:2, line:207:2>
      (DeclStmt 0xa5e7148 <line:205:4, col:51>
        0xa5e7060 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0xa5e7120 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0xa5e7094 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0xa5e70ac <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e6e60 '__val' 'const value_type &')
            (CallExpr 0xa5e7100 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0xa5e70c4 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0xa5e71d0 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5e7170 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0xa5e7158 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0xa5e7060 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0xa5e71b8 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0xa5e71a8 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0xa5e79b8 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa5e72c0 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e7270 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
        (DeclRefExpr 0xa5e7208 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
        (CallExpr 0xa5e7250 <col:22, col:27> '<dependent type>'
          (MemberExpr 0xa5e7230 <col:22> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5e7220 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0xa5e7820 <line:209:2, line:215:2>
        (CallExpr 0xa5e7438 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e7308 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
          (CallExpr 0xa5e7390 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e7350 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0xa5e7400 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e73c0 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa5e741c <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e6e60 '__val' 'const value_type &'))
        (CallExpr 0xa5e7680 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e7488 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58e1c0 0xa58eaf0)
          (CXXDependentScopeMemberExpr 0xa5e7508 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e74d0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e74c0 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa5e75e8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0xa5e75a8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
            (DeclRefExpr 0xa5e753c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa5e7588 <col:12, col:17> '<dependent type>'
              (MemberExpr 0xa5e7568 <col:12> '<bound member function type>' ->size 0xa59ae80
                (CXXThisExpr 0xa5e7558 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0xa5e760c <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e6e60 '__val' 'const value_type &')
          (CallExpr 0xa5e7660 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0xa5e7624 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0xa5e7800 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5e76f8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e76c0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e76b0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0xa5e77d8 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0xa5e7798 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
            (DeclRefExpr 0xa5e772c <col:31> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
            (CallExpr 0xa5e7778 <col:37, col:42> '<dependent type>'
              (MemberExpr 0xa5e7758 <col:37> '<bound member function type>' ->size 0xa59ae80
                (CXXThisExpr 0xa5e7748 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0xa5e7998 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0xa5e7850 <col:9> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
          (CXXThisExpr 0xa5e7840 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa5e7970 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e7888 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1bb590)
          (CXXDependentScopeMemberExpr 0xa5e7908 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e78d0 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e78c0 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5e793c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0xa5e6e10 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0xa5e7954 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0xa5e6e60 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5e85c0 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0xa5e8048 <line:227:2, col:39>
    0xa5e7f70 "pointer __cur =
      (ParenListExpr 0xa5e8028 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0xa5e7ff0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e7fb8 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e7fa8 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0xa5e8338 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0xa5e8230 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0xa5e80e8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e8088 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (DeclRefExpr 0xa5e8058 <col:9> '_InputIterator' lvalue ParmVar 0xa5e7d10 '__first' '_InputIterator')
        (DeclRefExpr 0xa5e8070 <col:20> '_InputIterator' lvalue ParmVar 0xa5e7d50 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0xa5e8208 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e81a8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
        (DeclRefExpr 0xa5e810c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e7f70 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0xa5e8170 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e8138 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e8128 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0xa5e82a8 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0xa5e8260 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa5e8248 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e7f70 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa5e8290 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa5e8274 <col:18> '_InputIterator' lvalue ParmVar 0xa5e7d10 '__first' '_InputIterator')))
    (BinaryOperator 0xa5e8320 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0xa5e82d8 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa5e82c0 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e7f70 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0xa5e8308 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0xa5e82ec <col:14> '_InputIterator' lvalue ParmVar 0xa5e7d10 '__first' '_InputIterator'))))
  (IfStmt 0xa5e85a0 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e83f0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e8390 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16f900 0xa187010 0xa18b1f0 0xa1d5a90 0xa1fb4b0 0xa1fb840 0xa324230 0xa324ca0 0xa3254e0 0xa325a70 0xa439240 0xa5ac950)
      (DeclRefExpr 0xa5e835c <col:6> '_InputIterator' lvalue ParmVar 0xa5e7d10 '__first' '_InputIterator')
      (DeclRefExpr 0xa5e8374 <col:17> '_InputIterator' lvalue ParmVar 0xa5e7d50 '__last' '_InputIterator'))
    (CallExpr 0xa5e8460 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0xa5e8428 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
        (CXXThisExpr 0xa5e8418 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0xa5e8448 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e7f70 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0xa5e8578 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0xa5e8490 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0xa5e8528 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0xa5e84e8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0xa5e8544 <col:18> '_InputIterator' lvalue ParmVar 0xa5e7d10 '__first' '_InputIterator')
      (DeclRefExpr 0xa5e855c <col:27> '_InputIterator' lvalue ParmVar 0xa5e7d50 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5e9d80 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0xa5e8c20 <line:244:2, col:56>
    0xa5e8b40 "const size_type __len =
      (CallExpr 0xa5e8bf8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e8b90 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
        (DeclRefExpr 0xa5e8bc4 <col:40> '_ForwardIterator' lvalue ParmVar 0xa5e88e0 '__first' '_ForwardIterator')
        (DeclRefExpr 0xa5e8bdc <col:49> '_ForwardIterator' lvalue ParmVar 0xa5e8920 '__last' '_ForwardIterator'))")
  (IfStmt 0xa5e9d60 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5e8ce8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0xa5e8c98 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (DeclRefExpr 0xa5e8c30 <col:6> 'const size_type':'const unsigned int' lvalue Var 0xa5e8b40 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0xa5e8c78 <col:14, col:23> '<dependent type>'
        (MemberExpr 0xa5e8c58 <col:14> '<bound member function type>' ->capacity 0xa59b0d0
          (CXXThisExpr 0xa5e8c48 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa5e95f0 <line:247:4, line:257:4>
      (DeclStmt 0xa5e8e38 <line:248:6, col:65>
        0xa5e8d20 "pointer __tmp =
          (ParenListExpr 0xa5e8e18 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa5e8df0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0xa5e8d68 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0xa5e8da4 <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa5e8b40 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0xa5e8dbc <col:48> '_ForwardIterator' lvalue ParmVar 0xa5e88e0 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa5e8dd4 <col:57> '_ForwardIterator' lvalue ParmVar 0xa5e8920 '__last' '_ForwardIterator')))")
      (CallExpr 0xa5e9008 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e8e70 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (CXXDependentScopeMemberExpr 0xa5e8ef8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e8ec0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e8eb0 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5e8f78 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e8f40 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e8f30 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa5e8fe8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0xa5e8fac <col:6> '<dependent type>' lvalue)))
      (CallExpr 0xa5e9258 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0xa5e9030 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa5e90b8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e9080 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e9070 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e9230 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e91f0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CXXDependentScopeMemberExpr 0xa5e9138 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e9100 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e90f0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa5e91b8 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e9180 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e9170 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa5e9318 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e92c8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e9290 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e9280 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5e92fc <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5e8d20 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa5e94c0 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e9378 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e9340 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e9330 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5e9498 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e9448 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CXXDependentScopeMemberExpr 0xa5e93f8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e93c0 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e93b0 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0xa5e942c <col:57> 'const size_type':'const unsigned int' lvalue Var 0xa5e8b40 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0xa5e95d8 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5e9520 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e94e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e94d8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5e95a0 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5e9568 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0xa5e9558 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0xa5e9d40 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0xa5e96d0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0xa5e9680 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0 0xa5ae810)
        (CallExpr 0xa5e9648 <col:11, col:16> '<dependent type>'
          (MemberExpr 0xa5e9628 <col:11> '<bound member function type>' ->size 0xa59ae80
            (CXXThisExpr 0xa5e9618 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5e9664 <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa5e8b40 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0xa5e9850 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0xa5e9708 <col:4> '<bound member function type>' ->_M_erase_at_end 0xa59ec60
          (CXXThisExpr 0xa5e96f8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0xa5e9828 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e9740 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
          (DeclRefExpr 0xa5e9778 <col:30> '_ForwardIterator' lvalue ParmVar 0xa5e88e0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa5e9790 <col:39> '_ForwardIterator' lvalue ParmVar 0xa5e8920 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa5e97f0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e97b8 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e97a8 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0xa5e9d20 <line:261:4, line:269:4>
        (DeclStmt 0xa5e98d0 <line:262:6, col:38>
          0xa5e9880 "_ForwardIterator __mid =
            (DeclRefExpr 0xa5e98b4 <col:31> '_ForwardIterator' lvalue ParmVar 0xa5e88e0 '__first' '_ForwardIterator')")
        (CallExpr 0xa5e99a8 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e9908 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa181520)
          (DeclRefExpr 0xa5e993c <col:19> '_ForwardIterator' lvalue Var 0xa5e9880 '__mid' '_ForwardIterator')
          (CallExpr 0xa5e9988 <col:26, col:31> '<dependent type>'
            (MemberExpr 0xa5e9968 <col:26> '<bound member function type>' ->size 0xa59ae80
              (CXXThisExpr 0xa5e9958 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0xa5e9ad8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa5e99f0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
          (DeclRefExpr 0xa5e9a28 <col:16> '_ForwardIterator' lvalue ParmVar 0xa5e88e0 '__first' '_ForwardIterator')
          (DeclRefExpr 0xa5e9a40 <col:25> '_ForwardIterator' lvalue Var 0xa5e9880 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0xa5e9aa0 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e9a68 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e9a58 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0xa5e9d08 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0xa5e9b48 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5e9b10 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa5e9b00 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0xa5e9cd8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa5e9b98 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
            (DeclRefExpr 0xa5e9bd0 <col:36> '_ForwardIterator' lvalue Var 0xa5e9880 '__mid' '_ForwardIterator')
            (DeclRefExpr 0xa5e9be8 <col:43> '_ForwardIterator' lvalue ParmVar 0xa5e8920 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0xa5e9c48 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5e9c10 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5e9c00 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa5e9cb8 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa5e9c7c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0xa5ebf90 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0xa5ebf70 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5ea358 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0xa5ea2f8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXDependentScopeMemberExpr 0xa5ea240 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5ea208 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa5ea1f8 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0xa5ea2c0 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5ea288 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0xa5ea278 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0xa5eaa48 <line:305:2, line:321:2>
      (CallExpr 0xa5ea5c8 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5ea3c8 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ea390 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ea380 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5ea448 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ea410 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ea400 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0xa5ea5b0 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0xa5ea598 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0xa5ea580 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0xa5ea558 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ea518 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                (CXXDependentScopeMemberExpr 0xa5ea4c8 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ea490 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ea480 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0xa5ea500 <line:308:11> 'int' 1))))))
      (UnaryOperator 0xa5ea670 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa5ea638 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ea600 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ea5f0 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0xa5ea6e0 <line:311:4, col:22>
        0xa5ea690 "_Tp __x_copy =
          (DeclRefExpr 0xa5ea6c4 <col:19> 'const _Tp' lvalue ParmVar 0xa5ea0e0 '__x' 'const _Tp &')")
      (CallExpr 0xa5ea9c0 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0xa5ea718 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
        (CallExpr 0xa5ea7a0 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0xa5ea768 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0xa5ea74c <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ea070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0xa5ea898 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ea858 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CXXDependentScopeMemberExpr 0xa5ea808 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5ea7d0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa5ea7c0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa5ea840 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0xa5ea998 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ea958 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CXXDependentScopeMemberExpr 0xa5ea908 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5ea8d0 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0xa5ea8c0 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0xa5ea940 <col:33> 'int' 1)))
      (BinaryOperator 0xa5eaa30 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0xa5eaa00 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0xa5ea9e8 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ea070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0xa5eaa14 <col:18> '_Tp' lvalue Var 0xa5ea690 '__x_copy' '_Tp')))
    (CompoundStmt 0xa5ebf30 <line:323:2, line:372:2>
      (DeclStmt 0xa5eab90 <line:324:4, line:325:57>
        0xa5eaa80 "const size_type __len =
          (CallExpr 0xa5eab68 <col:6, col:56> '<dependent type>'
            (MemberExpr 0xa5eaac8 <col:6> '<bound member function type>' ->_M_check_len 0xa59eb50
              (CXXThisExpr 0xa5eaab8 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0xa5eab18 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa5eab08 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa5eaaf0 <col:29> 'int' 1)))
            (StringLiteral 0xa5eab30 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0xa5eacd8 <line:326:4, col:57>
        0xa5eabb0 "const size_type __elems_before =
          (CXXOperatorCallExpr 0xa5eacb0 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0xa5eac70 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
            (DeclRefExpr 0xa5eabe4 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ea070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0xa5eac50 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0xa5eac10 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0xa5eadc8 <line:327:4, col:49>
        0xa5eacf0 "pointer __new_start =
          (ParenListExpr 0xa5eada8 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0xa5ead88 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5ead38 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0xa5ead28 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0xa5ead6c <col:42> 'const size_type':'const unsigned int' lvalue Var 0xa5eaa80 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0xa5eae50 <line:328:4, col:37>
        0xa5eade0 "pointer __new_finish =
          (ParenListExpr 0xa5eae30 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0xa5eae14 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0xa5eb498 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5eae60 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0xa5eb470 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0xa5eafb0 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5eaeb8 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5eae80 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5eae70 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5eaf70 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eaf20 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
              (DeclRefExpr 0xa5eaeec <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa5eaf04 <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa5eabb0 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0xa5eaf94 <line:339:32> 'const _Tp' lvalue ParmVar 0xa5ea0e0 '__x' 'const _Tp &'))
          (BinaryOperator 0xa5eb008 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0xa5eafd4 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0xa5eaff0 <col:23> 'int' 0))
          (BinaryOperator 0xa5eb218 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0xa5eb020 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa5eb1e8 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eb050 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
              (CXXDependentScopeMemberExpr 0xa5eb0d0 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5eb098 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5eb088 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0xa5eb158 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5eb120 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5eb104 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ea070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0xa5eb174 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa5eb1c8 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa5eb18c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0xa5eb248 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0xa5eb230 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5eb458 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0xa5eb25c <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0xa5eb428 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eb290 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
              (CallExpr 0xa5eb318 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5eb2e0 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0xa5eb2c4 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ea070 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0xa5eb380 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5eb348 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5eb338 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0xa5eb3b4 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa5eb408 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0xa5eb3cc <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0xa5eb840 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0xa5eb4b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0xa5eb820 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0xa5eb760 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0xa5eb4e0 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0xa5eb4c8 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0xa5eb620 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0xa5eb540 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5eb508 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5eb4f8 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0xa5eb5f8 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0xa5eb5a8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                (DeclRefExpr 0xa5eb574 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5eb58c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa5eabb0 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0xa5eb738 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eb668 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
              (DeclRefExpr 0xa5eb6a8 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa5eb6c0 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0xa5eb718 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0xa5eb6d8 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0xa5eb7e8 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0xa5eb77c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0xa5eb7b8 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0xa5eb7d0 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa5eaa80 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0xa5eb810 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0xa5eba18 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0xa5eb880 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
        (CXXDependentScopeMemberExpr 0xa5eb908 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5eb8d0 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa5eb8c0 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0xa5eb988 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5eb950 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0xa5eb940 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0xa5eb9f8 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0xa5eb9bc <col:4> '<dependent type>' lvalue)))
      (CallExpr 0xa5ebc68 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0xa5eba40 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0xa5ebac8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5eba90 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0xa5eba80 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5ebc40 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ebc00 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
          (CXXDependentScopeMemberExpr 0xa5ebb48 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5ebb10 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0xa5ebb00 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0xa5ebbc8 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5ebb90 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0xa5ebb80 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0xa5ebd28 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5ebcd8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ebca0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ebc90 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5ebd0c <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa5ebdd8 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5ebd88 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ebd50 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ebd40 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0xa5ebdbc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eade0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0xa5ebf18 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5ebe38 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5ebe00 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5ebdf0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0xa5ebef0 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0xa5ebea0 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (DeclRefExpr 0xa5ebe6c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eacf0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0xa5ebe84 <col:52> 'const size_type':'const unsigned int' lvalue Var 0xa5eaa80 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0xa5eeed8 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0xa5eeeb8 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0xa5ec430 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0xa5ec410 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa5ec3dc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa5ec420 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa5ec3f8 <col:18> 'int' 0)))
    (CompoundStmt 0xa5eeea0 <line:381:2, line:463:2>
      (IfStmt 0xa5eee80 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0xa5ec600 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa5ec5b8 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa5ec590 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0xa5ec550 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CXXDependentScopeMemberExpr 0xa5ec498 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5ec460 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5ec450 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa5ec518 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5ec4e0 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5ec4d0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa5ec5f0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa5ec5d4 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0xa5ed7a8 <line:384:6, line:413:6>
          (DeclStmt 0xa5ec670 <line:385:8, col:33>
            0xa5ec620 "value_type __x_copy =
              (DeclRefExpr 0xa5ec654 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0xa5ec2e0 '__x' 'const value_type &')")
          (DeclStmt 0xa5ec7b8 <line:386:8, col:58>
            0xa5ec690 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa5ec790 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ec750 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                (CallExpr 0xa5ec718 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5ec6d8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa5ec734 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa5ec8a8 <line:387:8, col:53>
            0xa5ec7d0 "pointer __old_finish =
              (ParenListExpr 0xa5ec888 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa5ec850 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ec818 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ec808 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa5ed788 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0xa5ec908 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0xa5ec8e8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5ec8b8 <col:12> 'const size_type':'const unsigned int' lvalue Var 0xa5ec690 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa5ec8f8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5ec8d0 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0xa5ed078 <line:389:3, line:399:3>
              (CallExpr 0xa5ecbd8 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ec948 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                (CXXOperatorCallExpr 0xa5eca58 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5eca18 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                  (CXXDependentScopeMemberExpr 0xa5ec9c8 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5ec990 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5ec980 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa5ec9fc <col:59> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0xa5ecac8 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5eca90 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5eca80 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa5ecb48 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ecb10 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ecb00 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa5ecbb8 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5ecb7c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5ecca0 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5ecc50 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ecc18 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ecc08 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa5ecc84 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
              (CallExpr 0xa5ece40 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ecce8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
                (CallExpr 0xa5ecd70 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5ecd38 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5ecd1c <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa5ece00 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5ecdc0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                  (DeclRefExpr 0xa5ecd8c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5ec7d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa5ecda4 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa5ece24 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5ec7d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa5ed050 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ece90 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
                (CallExpr 0xa5ecf18 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5ecee0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5ecec8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa5ed010 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5ecfc0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                  (CallExpr 0xa5ecf88 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5ecf50 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0xa5ecf34 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa5ecfa4 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0xa5ed034 <line:398:8> 'value_type':'_Tp' lvalue Var 0xa5ec620 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0xa5ed760 <line:401:3, line:412:3>
              (CallExpr 0xa5ed258 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ed0c0 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58e1c0 0xa58eaf0)
                (CXXDependentScopeMemberExpr 0xa5ed140 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ed108 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ed0f8 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa5ed1c8 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa5ed1a8 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5ed174 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa5ed1b8 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5ed18c <col:13> 'const size_type':'const unsigned int' lvalue Var 0xa5ec690 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0xa5ed1e0 <line:404:7> 'value_type':'_Tp' lvalue Var 0xa5ec620 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0xa5ed238 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5ed1f8 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5ed370 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5ed2d0 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ed298 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ed288 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa5ed358 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa5ed338 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5ed304 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0xa5ed348 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5ed31c <col:38> 'const size_type':'const unsigned int' lvalue Var 0xa5ec690 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa5ed550 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ed3b8 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                (CallExpr 0xa5ed440 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5ed408 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5ed3ec <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa5ed45c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5ec7d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa5ed4c0 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ed488 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ed478 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa5ed530 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5ed4f4 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5ed618 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5ed5c8 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5ed590 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5ed580 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa5ed5fc <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa5ec690 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa5ed738 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ed660 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b8e20 0xa5ba6d0)
                (CallExpr 0xa5ed6e8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5ed6b0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5ed698 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa5ed704 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5ec7d0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5ed71c <col:48> 'value_type':'_Tp' lvalue Var 0xa5ec620 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0xa5eee40 <line:415:6, line:462:6>
          (DeclStmt 0xa5ed8b0 <line:416:8, line:417:46>
            0xa5ed7d0 "const size_type __len =
              (CallExpr 0xa5ed888 <col:3, col:45> '<dependent type>'
                (MemberExpr 0xa5ed818 <col:3> '<bound member function type>' ->_M_check_len 0xa59eb50
                  (CXXThisExpr 0xa5ed808 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa5ed838 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa5ed850 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0xa5ed9f8 <line:418:8, col:61>
            0xa5ed8d0 "const size_type __elems_before =
              (CXXOperatorCallExpr 0xa5ed9d0 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0xa5ed990 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                (DeclRefExpr 0xa5ed904 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0xa5ed970 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5ed930 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0xa5edae8 <line:419:8, col:53>
            0xa5eda10 "pointer __new_start =
              (ParenListExpr 0xa5edac8 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa5edaa8 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5eda58 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5eda48 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa5eda8c <col:46> 'const size_type':'const unsigned int' lvalue Var 0xa5ed7d0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa5edb70 <line:420:8, col:41>
            0xa5edb00 "pointer __new_finish =
              (ParenListExpr 0xa5edb50 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa5edb34 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa5ee230 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa5edb80 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa5ee208 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0xa5edd20 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5edbb8 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58e1c0 0xa58eaf0)
                (CXXOperatorCallExpr 0xa5edc70 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5edc20 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                  (DeclRefExpr 0xa5edbf0 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa5edc08 <col:49> 'const size_type':'const unsigned int' lvalue Var 0xa5ed8d0 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa5edc94 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0xa5edcac <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0xa5ec2e0 '__x' 'const value_type &')
                (CallExpr 0xa5edd00 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5edcc4 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0xa5edd80 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0xa5edd4c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0xa5edd68 <col:20> 'int' 0))
              (BinaryOperator 0xa5edf90 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0xa5edd98 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5edf60 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5eddc8 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                  (CXXDependentScopeMemberExpr 0xa5ede48 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5ede10 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5ede00 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa5eded0 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5ede98 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0xa5ede7c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa5edeec <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5edf40 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5edf04 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0xa5edfd8 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0xa5edfa8 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5edfc0 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0xa5ee1f0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0xa5edff8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5ee1c0 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5ee028 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                  (CallExpr 0xa5ee0b0 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5ee078 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0xa5ee05c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ec250 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa5ee118 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5ee0e0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5ee0d0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa5ee14c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5ee1a0 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5ee164 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa5ee750 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa5ee250 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa5ee730 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0xa5ee670 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0xa5ee278 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0xa5ee260 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0xa5ee528 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5ee2b0 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
                  (CXXOperatorCallExpr 0xa5ee370 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0xa5ee320 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                    (DeclRefExpr 0xa5ee2f0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0xa5ee308 <col:35> 'const size_type':'const unsigned int' lvalue Var 0xa5ed8d0 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0xa5ee4a8 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0xa5ee458 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                    (CXXOperatorCallExpr 0xa5ee418 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0xa5ee3c8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
                      (DeclRefExpr 0xa5ee394 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0xa5ee3ac <col:21> 'const size_type':'const unsigned int' lvalue Var 0xa5ed8d0 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0xa5ee43c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0xa5ec290 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0xa5ee508 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5ee4cc <col:7> '<dependent type>' lvalue)))
                (CallExpr 0xa5ee648 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5ee578 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
                  (DeclRefExpr 0xa5ee5b8 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa5ee5d0 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5ee628 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5ee5e8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0xa5ee6f8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0xa5ee68c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0xa5ee6c8 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5ee6e0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0xa5ed7d0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa5ee720 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0xa5ee928 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0xa5ee790 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
            (CXXDependentScopeMemberExpr 0xa5ee818 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5ee7e0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa5ee7d0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa5ee898 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5ee860 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0xa5ee850 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa5ee908 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0xa5ee8cc <col:8> '<dependent type>' lvalue)))
          (CallExpr 0xa5eeb78 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0xa5ee950 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa5ee9d8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5ee9a0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0xa5ee990 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5eeb50 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eeb10 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CXXDependentScopeMemberExpr 0xa5eea58 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5eea20 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5eea10 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa5eead8 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5eeaa0 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5eea90 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa5eec38 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5eebe8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5eebb0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5eeba0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5eec1c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5eece8 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5eec98 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5eec60 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5eec50 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5eeccc <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5edb00 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5eee28 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5eed48 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5eed10 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0xa5eed00 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5eee00 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0xa5eedb0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
              (DeclRefExpr 0xa5eed7c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5eda10 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa5eed94 <col:56> 'const size_type':'const unsigned int' lvalue Var 0xa5ed7d0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0xa5ef6b0 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0xa5ef688 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5ef4f0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0xa5ef490 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5ef45c <col:9> '_InputIterator' lvalue ParmVar 0xa5ef230 '__first' '_InputIterator')
      (DeclRefExpr 0xa5ef474 <col:20> '_InputIterator' lvalue ParmVar 0xa5ef270 '__last' '_InputIterator'))
    (UnaryOperator 0xa5ef530 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0xa5ef514 <col:30> '_InputIterator' lvalue ParmVar 0xa5ef230 '__first' '_InputIterator'))
    (CompoundStmt 0xa5ef670 <line:527:4, line:530:4>
      (BinaryOperator 0xa5ef628 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0xa5ef544 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef1f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0xa5ef600 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0xa5ef570 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0xa5ef5b4 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef1f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0xa5ef5e8 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0xa5ef5cc <col:29> '_InputIterator' lvalue ParmVar 0xa5ef230 '__first' '_InputIterator'))))
      (UnaryOperator 0xa5ef658 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0xa5ef640 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef1f0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5f2210 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0xa5f21f0 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5efcd0 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa5efc70 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5efc3c <col:6> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa5efc54 <col:17> '_ForwardIterator' lvalue ParmVar 0xa5efa50 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa5f21d8 <line:541:4, line:614:4>
      (DeclStmt 0xa5efde0 <line:542:6, col:58>
        0xa5efd00 "const size_type __n =
          (CallExpr 0xa5efdb8 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0xa5efd50 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
            (DeclRefExpr 0xa5efd84 <col:42> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa5efd9c <col:51> '_ForwardIterator' lvalue ParmVar 0xa5efa50 '__last' '_ForwardIterator'))")
      (IfStmt 0xa5f21b8 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0xa5effa8 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0xa5eff60 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0xa5eff38 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0xa5efef8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CXXDependentScopeMemberExpr 0xa5efe40 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5efe08 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5efdf8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa5efec0 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5efe88 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5efe78 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0xa5eff98 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa5eff7c <col:36> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0xa5f1018 <line:545:8, line:574:8>
          (DeclStmt 0xa5f00f8 <line:546:3, col:53>
            0xa5effd0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0xa5f00d0 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0090 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                (CallExpr 0xa5f0058 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f0018 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa5f0074 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0xa5f01e8 <line:547:3, col:48>
            0xa5f0110 "pointer __old_finish =
              (ParenListExpr 0xa5f01c8 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0xa5f0190 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0158 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0148 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0xa5f0ff8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0xa5f0248 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0xa5f0228 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5f01f8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0xa5effd0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0xa5f0238 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5f0210 <col:23> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0xa5f0878 <line:549:5, line:558:5>
              (CallExpr 0xa5f0518 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0288 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                (CXXOperatorCallExpr 0xa5f0398 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5f0358 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                  (CXXDependentScopeMemberExpr 0xa5f0308 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5f02d0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5f02c0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa5f033c <col:61> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0xa5f0408 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f03d0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f03c0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0xa5f0488 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0450 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0440 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa5f04f8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f04bc <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5f05e0 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5f0590 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0558 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0548 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa5f05c4 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0xa5f0780 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0628 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
                (CallExpr 0xa5f06b0 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5f0678 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5f065c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0xa5f0740 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5f0700 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
                  (DeclRefExpr 0xa5f06cc <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f0110 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0xa5f06e4 <col:25> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0xa5f0764 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f0110 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0xa5f0850 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f07d0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
                (DeclRefExpr 0xa5f0808 <col:17> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa5f0820 <col:26> '_ForwardIterator' lvalue ParmVar 0xa5efa50 '__last' '_ForwardIterator')
                (DeclRefExpr 0xa5f0838 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0xa5f0fc8 <line:560:5, line:573:5>
              (DeclStmt 0xa5f08f0 <line:561:7, col:39>
                0xa5f08a0 "_ForwardIterator __mid =
                  (DeclRefExpr 0xa5f08d4 <col:32> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')")
              (CallExpr 0xa5f0990 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0928 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa181520)
                (DeclRefExpr 0xa5f095c <col:20> '_ForwardIterator' lvalue Var 0xa5f08a0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa5f0974 <col:27> 'const size_type':'const unsigned int' lvalue Var 0xa5effd0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa5f0b18 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f09d8 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
                (DeclRefExpr 0xa5f0a10 <col:35> '_ForwardIterator' lvalue Var 0xa5f08a0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa5f0a28 <col:42> '_ForwardIterator' lvalue ParmVar 0xa5efa50 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0xa5f0a88 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0a50 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0a40 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa5f0af8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f0abc <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5f0c30 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5f0b90 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0b58 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0b48 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0xa5f0c18 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0xa5f0bf8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5f0bc4 <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0xa5f0c08 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5f0bdc <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa5effd0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0xa5f0e10 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0c78 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                (CallExpr 0xa5f0d00 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5f0cc8 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0xa5f0cac <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0xa5f0d1c <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f0110 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0xa5f0d80 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0d48 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0d38 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0xa5f0df0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f0db4 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0xa5f0ed8 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5f0e88 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0xa5f0e50 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f0e40 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0xa5f0ebc <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa5effd0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0xa5f0fa0 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f0f20 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
                (DeclRefExpr 0xa5f0f58 <col:17> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')
                (DeclRefExpr 0xa5f0f70 <col:26> '_ForwardIterator' lvalue Var 0xa5f08a0 '__mid' '_ForwardIterator')
                (DeclRefExpr 0xa5f0f88 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0xa5f2180 <line:576:8, line:613:8>
          (DeclStmt 0xa5f1120 <line:577:3, line:578:49>
            0xa5f1040 "const size_type __len =
              (CallExpr 0xa5f10f8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0xa5f1088 <col:5> '<bound member function type>' ->_M_check_len 0xa59eb50
                  (CXXThisExpr 0xa5f1078 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0xa5f10a8 <col:18> 'const size_type':'const unsigned int' lvalue Var 0xa5efd00 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0xa5f10c0 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0xa5f1218 <line:579:3, col:48>
            0xa5f1140 "pointer __new_start =
              (ParenListExpr 0xa5f11f8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0xa5f11d8 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0xa5f1188 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0xa5f1178 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0xa5f11bc <col:41> 'const size_type':'const unsigned int' lvalue Var 0xa5f1040 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0xa5f12a0 <line:580:3, col:36>
            0xa5f1230 "pointer __new_finish =
              (ParenListExpr 0xa5f1280 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0xa5f1264 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0xa5f1858 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa5f12b0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0xa5f1838 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0xa5f14b8 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0xa5f12c0 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5f1488 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5f12f0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                  (CXXDependentScopeMemberExpr 0xa5f1370 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5f1338 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5f1328 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0xa5f13f8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5f13c0 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0xa5f13a4 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0xa5f1414 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5f1468 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5f142c <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa5f1610 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0xa5f14d0 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5f15e0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5f1500 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58c2c0 0xa58cbc0)
                  (DeclRefExpr 0xa5f1538 <col:37> '_ForwardIterator' lvalue ParmVar 0xa5efa10 '__first' '_ForwardIterator')
                  (DeclRefExpr 0xa5f1550 <col:46> '_ForwardIterator' lvalue ParmVar 0xa5efa50 '__last' '_ForwardIterator')
                  (DeclRefExpr 0xa5f1568 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5f15c0 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5f1580 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0xa5f1820 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0xa5f1628 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5f17f0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0xa5f1658 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa58cfd0)
                  (CallExpr 0xa5f16e0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0xa5f16a8 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0xa5f168c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0xa5ef9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0xa5f1748 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0xa5f1710 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0xa5f1700 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0xa5f177c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0xa5f17d0 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0xa5f1794 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0xa5f1a70 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0xa5f1878 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0xa5f1a50 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0xa5f1980 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0xa5f18b0 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
                (DeclRefExpr 0xa5f18f0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5f1908 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0xa5f1960 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f1920 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0xa5f1a18 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0xa5f19a8 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0xa5f19e4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0xa5f19fc <col:34> 'const size_type':'const unsigned int' lvalue Var 0xa5f1040 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0xa5f1a40 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0xa5f1c48 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0xa5f1ab0 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa581510 0xa5821d0 0xa582870 0xa582e20)
            (CXXDependentScopeMemberExpr 0xa5f1b38 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f1b00 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f1af0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0xa5f1bb8 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f1b80 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f1b70 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0xa5f1c28 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0xa5f1bec <col:10> '<dependent type>' lvalue)))
          (CallExpr 0xa5f1e98 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0xa5f1c70 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0xa5f1cf8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f1cc0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f1cb0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5f1e70 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0xa5f1e30 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
              (CXXDependentScopeMemberExpr 0xa5f1d78 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5f1d40 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5f1d30 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0xa5f1df8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5f1dc0 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5f1db0 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0xa5f1f58 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f1f08 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f1ed0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f1ec0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5f1f3c <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5f2028 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f1fb8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f1f80 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f1f70 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0xa5f1fec <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1230 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0xa5f2168 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f2088 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f2050 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f2040 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0xa5f2140 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0xa5f20f0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
              (DeclRefExpr 0xa5f20bc <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0xa5f1140 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0xa5f20d4 <col:51> 'const size_type':'const unsigned int' lvalue Var 0xa5f1040 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0xa5f2fb0 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0xa5f2730 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5f2638 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0xa5f25e8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1711d0 0xa189680 0xa18c6c0 0xa328250 0xa328780 0xa328cb0 0xa5add80)
      (DeclRefExpr 0xa5f2564 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5f2480 '__n' 'size_type':'unsigned int')
      (CallExpr 0xa5f25c8 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f2590 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f2580 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0xa5f2700 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0xa5f26f0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0xa5f26d4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0xa13dd50 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0xa5f2720 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0xa5f26c0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0xa5f2694 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0xa5f2f90 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5f2820 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0xa5f27d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa16ffa0 0xa188dc0 0xa18b6f0 0xa327160 0xa3276b0 0xa327be0 0xa5ad140)
      (CallExpr 0xa5f2798 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f2760 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f2750 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0xa5f27b4 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0xa5f2480 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa5f2f68 <line:628:2, line:636:2>
      (DeclStmt 0xa5f2918 <line:629:4, col:43>
        0xa5f2860 "_Bit_type *__q =
          (CallExpr 0xa5f28f8 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5f28a8 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f2898 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa5f28dc <col:39> 'size_type':'unsigned int' lvalue ParmVar 0xa5f2480 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0xa5f2b68 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f2970 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f2938 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f2928 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5f2b40 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0xa5f29b8 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
            (CXXThisExpr 0xa5f29a8 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0xa5f2a28 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0xa5f29e8 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0xa5f2a98 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0xa5f2a58 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0xa5f2b10 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0xa5f2af0 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa5f2ac0 <col:20> '_Bit_type *' lvalue Var 0xa5f2860 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0xa5f2b00 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa5f2ad8 <col:25> 'int' 0)))))
      (CallExpr 0xa5f2bc8 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f2b90 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f2b80 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa5f2cf0 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f2c30 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f2bf8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f2be8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa5f2cc0 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa5f2ca0 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa5f2c70 <col:38> '_Bit_type *' lvalue Var 0xa5f2860 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa5f2cb0 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa5f2c88 <col:43> 'int' 0))))
      (BinaryOperator 0xa5f2f50 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f2d50 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f2d18 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f2d08 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa5f2f38 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0xa5f2f20 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa5f2f10 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa5f2d84 <col:39> '_Bit_type *' lvalue Var 0xa5f2860 '__q' '_Bit_type *'))
            (BinaryOperator 0xa5f2ef8 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0xa5f2e80 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0xa5f2e68 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0xa5f2e28 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0xa5f2e08 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa5f2d9c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0xa5f2480 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0xa5f2e18 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa5f2df0 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa5f2de0 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0xa5f2dc4 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0xa5f2e58 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa5f2e40 <col:71> 'int' 1))))
              (ImplicitCastExpr 0xa5f2ee8 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0xa5f2ed0 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0xa5f2ec0 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0xa5f2ea4 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0xa5f4b08 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0xa5f3418 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0xa5f33f0 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0xa5f33d0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0xa5f339c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0xa5f33e0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa5f33b8 <col:18> 'int' 0)))
    (ReturnStmt 0xa5f3408 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0xa5f4ae8 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5f35a8 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0xa5f3558 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0 0xa5ae810)
      (CXXOperatorCallExpr 0xa5f3518 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0xa5f34d8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
        (CallExpr 0xa5f3468 <col:11, col:20> '<dependent type>'
          (MemberExpr 0xa5f3448 <col:11> '<bound member function type>' ->capacity 0xa5bf0b0
            (CXXThisExpr 0xa5f3438 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5f34b8 <col:24, col:29> '<dependent type>'
          (MemberExpr 0xa5f3498 <col:24> '<bound member function type>' ->size 0xa5befb0
            (CXXThisExpr 0xa5f3488 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0xa5f353c <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0xa5f3e18 <line:647:2, line:652:2>
      (CallExpr 0xa5f3800 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0xa5f35f0 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
        (DeclRefExpr 0xa5f3624 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f3220 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0xa5f3690 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0xa5f3650 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0xa5f37d8 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0xa5f3788 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CXXDependentScopeMemberExpr 0xa5f36f8 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5f36c0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f36b0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0xa5f3770 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0xa5f3760 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0xa5f3750 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0xa5f3738 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0xa5f3c68 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0xa5f3c58 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5f3c18 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa5ba6d0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa5f3ca0 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa5f3c90 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa5f3888 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f3220 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa5f3ce8 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa5f3cd8 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa5f3cc8 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa5f3948 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa5f3938 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa5f3920 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa5f3910 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa5f38a0 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f3220 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa5f38f8 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa5f38e8 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa5f38d8 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa5f38c0 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa5f3d10 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa5f396c <col:61> '_Bool' lvalue ParmVar 0xa5f32a0 '__x' '_Bool')))
      (CompoundAssignOperator 0xa5f3df8 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f3d68 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f3d30 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f3d20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0xa5f3de0 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0xa5f3dd0 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0xa5f3dc0 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa5f3da8 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0xa5f4ab8 <line:654:2, line:668:2>
      (DeclStmt 0xa5f3f20 <line:655:4, line:656:55>
        0xa5f3e40 "const size_type __len =
          (CallExpr 0xa5f3ef8 <col:6, col:54> '<dependent type>'
            (MemberExpr 0xa5f3e88 <col:6> '<bound member function type>' ->_M_check_len 0xa5c2be0
              (CXXThisExpr 0xa5f3e78 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa5f3ea8 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int')
            (StringLiteral 0xa5f3ec0 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0xa5f3ff8 <line:657:4, col:46>
        0xa5f3f40 "_Bit_type *__q =
          (CallExpr 0xa5f3fd8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5f3f88 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f3f78 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa5f3fbc <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa5f3e40 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa5f41b0 <line:658:4, line:659:24>
        0xa5f4010 "iterator __i =
          (CallExpr 0xa5f4188 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0xa5f4058 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
              (CXXThisExpr 0xa5f4048 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa5f40c8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa5f4088 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa5f40e4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f3220 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa5f4158 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa5f4138 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa5f4108 <col:16> '_Bit_type *' lvalue Var 0xa5f3f40 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa5f4148 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa5f4120 <col:21> 'int' 0))))")
      (CallExpr 0xa5f4398 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0xa5f4388 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5f4368 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0xa5ba6d0 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0xa5f43d0 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0xa5f43c0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa5f4220 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f4010 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0xa5f4418 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0xa5f4408 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0xa5f43f8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0xa5f42e0 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0xa5f42d0 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa5f42b8 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0xa5f42a8 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0xa5f4238 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f4010 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0xa5f4290 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0xa5f4280 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0xa5f4270 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa5f4258 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0xa5f4440 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0xa5f4304 <col:47> '_Bool' lvalue ParmVar 0xa5f32a0 '__x' '_Bool')))
      (BinaryOperator 0xa5f46a0 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f4498 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f4460 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f4450 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5f4678 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0xa5f44e8 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
          (DeclRefExpr 0xa5f4520 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f3220 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa5f4588 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa5f4548 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0xa5f4650 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0xa5f4640 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0xa5f4628 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0xa5b6740 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0xa5f4618 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0xa5f45a4 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f4010 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0xa5f4600 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa5f45f0 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa5f45e0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa5f45c8 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0xa5f3260 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0xa5f4700 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f46c8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f46b8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa5f4980 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f4768 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f4730 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f4720 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa5f4968 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0xa5f4950 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa5f4940 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa5f479c <col:39> '_Bit_type *' lvalue Var 0xa5f3f40 '__q' '_Bit_type *'))
            (ParenExpr 0xa5f4928 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0xa5f4910 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0xa5f4898 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0xa5f4880 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0xa5f4840 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa5f4820 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa5f47b4 <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa5f3e40 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa5f4830 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa5f4808 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa5f47f8 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa5f47dc <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa5f4870 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa5f4858 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa5f4900 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa5f48e8 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa5f48d8 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa5f48bc <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa5f4aa0 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f49e0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f49a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f4998 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa5f4a70 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa5f4a50 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa5f4a20 <col:38> '_Bit_type *' lvalue Var 0xa5f3f40 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa5f4a60 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa5f4a38 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0xa5f62c8 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0xa5f62a8 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5f50d0 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0xa5f5070 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (DeclRefExpr 0xa5f503c <col:6> '_ForwardIterator' lvalue ParmVar 0xa5f4e10 '__first' '_ForwardIterator')
      (DeclRefExpr 0xa5f5054 <col:17> '_ForwardIterator' lvalue ParmVar 0xa5f4e50 '__last' '_ForwardIterator'))
    (CompoundStmt 0xa5f6290 <line:679:4, line:705:4>
      (DeclStmt 0xa5f51e0 <line:680:6, col:52>
        0xa5f5100 "size_type __n =
          (CallExpr 0xa5f51b8 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0xa5f5150 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0xa180640)
            (DeclRefExpr 0xa5f5184 <col:36> '_ForwardIterator' lvalue ParmVar 0xa5f4e10 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa5f519c <col:45> '_ForwardIterator' lvalue ParmVar 0xa5f4e50 '__last' '_ForwardIterator'))")
      (IfStmt 0xa5f6270 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0xa5f5360 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0xa5f5310 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa1726c0 0xa189ef0 0xa18cf90 0xa32a450 0xa32a980 0xa32aeb0 0xa5ae810)
          (CXXOperatorCallExpr 0xa5f52d0 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0xa5f5290 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a440 0xa18db60 0xa5b5a00)
            (CallExpr 0xa5f5220 <col:10, col:19> '<dependent type>'
              (MemberExpr 0xa5f5200 <col:10> '<bound member function type>' ->capacity 0xa5bf0b0
                (CXXThisExpr 0xa5f51f0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa5f5270 <col:23, col:28> '<dependent type>'
              (MemberExpr 0xa5f5250 <col:23> '<bound member function type>' ->size 0xa5befb0
                (CXXThisExpr 0xa5f5240 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0xa5f52f4 <col:33> 'size_type':'unsigned int' lvalue Var 0xa5f5100 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0xa5f57a8 <line:682:8, line:688:8>
          (CallExpr 0xa5f55b8 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0xa5f53a8 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
            (DeclRefExpr 0xa5f53dc <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f4dd0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa5f5448 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0xa5f5408 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0xa5f5590 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0xa5f5540 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
              (CXXDependentScopeMemberExpr 0xa5f54b0 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0xa5f5478 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5f5468 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0xa5f5528 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0xa5f5518 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0xa5f5508 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0xa5f54f0 <col:26> 'size_type':'unsigned int' lvalue Var 0xa5f5100 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0xa5f5688 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0xa5f5608 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
            (DeclRefExpr 0xa5f5640 <col:13> '_ForwardIterator' lvalue ParmVar 0xa5f4e10 '__first' '_ForwardIterator')
            (DeclRefExpr 0xa5f5658 <col:22> '_ForwardIterator' lvalue ParmVar 0xa5f4e50 '__last' '_ForwardIterator')
            (DeclRefExpr 0xa5f5670 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f4dd0 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0xa5f5788 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5f56f8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f56c0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f56b0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0xa5f5770 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0xa5f5760 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0xa5f5750 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa5f5738 <col:46> 'size_type':'unsigned int' lvalue Var 0xa5f5100 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0xa5f6240 <line:690:8, line:704:8>
          (DeclStmt 0xa5f58f8 <line:691:3, line:692:55>
            0xa5f57d0 "const size_type __len =
              (CallExpr 0xa5f58d0 <col:5, col:54> '<dependent type>'
                (MemberExpr 0xa5f5818 <col:5> '<bound member function type>' ->_M_check_len 0xa5c2be0
                  (CXXThisExpr 0xa5f5808 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa5f5838 <col:18> 'size_type':'unsigned int' lvalue Var 0xa5f5100 '__n' 'size_type':'unsigned int')
                (StringLiteral 0xa5f5890 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0xa5f59d8 <line:693:3, col:45>
            0xa5f5920 "_Bit_type *__q =
              (CallExpr 0xa5f59b8 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0xa5f5968 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0xa5f5958 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0xa5f599c <col:39> 'const size_type':'const unsigned int' lvalue Var 0xa5f57d0 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0xa5f5b90 <line:694:3, line:695:30>
            0xa5f59f0 "iterator __i =
              (CallExpr 0xa5f5b68 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0xa5f5a38 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
                  (CXXThisExpr 0xa5f5a28 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0xa5f5aa8 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0xa5f5a68 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0xa5f5ac4 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f4dd0 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0xa5f5b38 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0xa5f5b18 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0xa5f5ae8 <col:22> '_Bit_type *' lvalue Var 0xa5f5920 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0xa5f5b28 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa5f5b00 <col:27> 'int' 0))))")
          (BinaryOperator 0xa5f5c78 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0xa5f5ba0 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f59f0 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0xa5f5c50 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0xa5f5bd0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
              (DeclRefExpr 0xa5f5c08 <col:19> '_ForwardIterator' lvalue ParmVar 0xa5f4e10 '__first' '_ForwardIterator')
              (DeclRefExpr 0xa5f5c20 <col:28> '_ForwardIterator' lvalue ParmVar 0xa5f4e50 '__last' '_ForwardIterator')
              (DeclRefExpr 0xa5f5c38 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f59f0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0xa5f5e28 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f5cd8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f5ca0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f5c90 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0xa5f5e00 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0xa5f5d28 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
              (DeclRefExpr 0xa5f5d60 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f4dd0 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0xa5f5dc8 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0xa5f5d88 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0xa5f5de4 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f59f0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0xa5f5e88 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5f5e50 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f5e40 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0xa5f6108 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f5ef0 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f5eb8 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f5ea8 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0xa5f60f0 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0xa5f60d8 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0xa5f60c8 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0xa5f5f24 <col:38> '_Bit_type *' lvalue Var 0xa5f5920 '__q' '_Bit_type *'))
                (ParenExpr 0xa5f60b0 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0xa5f6098 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0xa5f6020 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0xa5f6008 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0xa5f5fc8 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0xa5f5fa8 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0xa5f5f3c <col:14> 'const size_type':'const unsigned int' lvalue Var 0xa5f57d0 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0xa5f5fb8 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0xa5f5f90 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0xa5f5f80 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0xa5f5f64 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0xa5f5ff8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa5f5fe0 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0xa5f6088 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0xa5f6070 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0xa5f6060 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0xa5f6044 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0xa5f6228 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0xa5f6168 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0xa5f6130 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0xa5f6120 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0xa5f61f8 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa5f61d8 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa5f61a8 <col:37> '_Bit_type *' lvalue Var 0xa5f5920 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa5f61e8 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa5f61c0 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0xa5f7780 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0xa5f7760 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0xa5f6800 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0xa5f67a0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa170c80 0xa189260 0xa18bbf0 0xa1d5e80 0xa1fbc10 0xa1fbf80 0xa326100 0xa326600 0xa326b10 0xa439750 0xa5ad810)
      (CXXDependentScopeMemberExpr 0xa5f66e8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5f66b0 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f6678 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f6668 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0xa5f6768 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0xa5f6730 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f6720 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0xa5f6bd0 <line:714:2, line:719:2>
      (CallExpr 0xa5f6a28 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0xa5f6848 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b56c0)
        (DeclRefExpr 0xa5f687c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f6530 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0xa5f68e0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f68a8 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f6898 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0xa5f6a00 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0xa5f69b0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0xa18a9d0 0xa321d70 0xa34e890 0xa34f490 0xa323060 0xa323880 0xa5b7ea0 0xa5ba020)
          (CXXDependentScopeMemberExpr 0xa5f6960 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0xa5f6928 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f6918 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0xa5f6998 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0xa5f6b10 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa5f6b00 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5f6ae8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa5af5c0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa5f6aa0 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa5f6a90 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5f6a78 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa5f6a68 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0xa5f6a50 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f6530 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0xa5f6ad8 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa5f6ac0 <col:18> '_Bool' lvalue ParmVar 0xa5f6570 '__x' '_Bool')))
      (UnaryOperator 0xa5f6bb8 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0xa5f6b80 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f6b48 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f6b38 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0xa5f7730 <line:721:2, line:734:2>
      (DeclStmt 0xa5f6d50 <line:722:4, line:723:63>
        0xa5f6c00 "const size_type __len =
          (CallExpr 0xa5f6d28 <col:6, col:62> '<dependent type>'
            (MemberExpr 0xa5f6c48 <col:6> '<bound member function type>' ->_M_check_len 0xa5c2be0
              (CXXThisExpr 0xa5f6c38 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0xa5f6c98 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0xa5f6c88 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa5f6c70 <col:29> 'int' 1)))
            (StringLiteral 0xa5f6cf0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0xa5f6e28 <line:724:4, col:46>
        0xa5f6d70 "_Bit_type *__q =
          (CallExpr 0xa5f6e08 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0xa5f6db8 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0xa5f6da8 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0xa5f6dec <col:40> 'const size_type':'const unsigned int' lvalue Var 0xa5f6c00 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0xa5f6fe0 <line:725:4, line:726:24>
        0xa5f6e40 "iterator __i =
          (CallExpr 0xa5f6fb8 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0xa5f6e88 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0xa5c0a20
              (CXXThisExpr 0xa5f6e78 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0xa5f6ef8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0xa5f6eb8 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0xa5f6f14 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f6530 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0xa5f6f88 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0xa5f6f68 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0xa5f6f38 <col:16> '_Bit_type *' lvalue Var 0xa5f6d70 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0xa5f6f78 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa5f6f50 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0xa5f7158 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0xa5f7148 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa5f7130 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0xa5af5c0 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0xa5f70e8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0xa5f70d8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0xa5f70c0 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0xa5b6100 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0xa5f70b0 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0xa5f7088 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0xa5f7078 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa5f7020 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0xa5b6310 'operator++' 'iterator (int)'))
              (DeclRefExpr 0xa5f6ff0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f6e40 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0xa5f7008 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0xa5f7120 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0xa5f7108 <col:13> '_Bool' lvalue ParmVar 0xa5f6570 '__x' '_Bool')))
      (BinaryOperator 0xa5f7318 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f71c8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f7190 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f7180 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0xa5f72f0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0xa5f7218 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1b0920 0xa43c530)
          (DeclRefExpr 0xa5f7250 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0xa5f6530 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0xa5f72b8 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0xa5f7278 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0xa5f72d4 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0xa5f6e40 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0xa5f7378 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0xa5f7340 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0xa5f7330 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0xa5f75f8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f73e0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f73a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f7398 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0xa5f75e0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0xa5f75c8 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0xa5f75b8 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0xa5f7414 <col:39> '_Bit_type *' lvalue Var 0xa5f6d70 '__q' '_Bit_type *'))
            (ParenExpr 0xa5f75a0 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0xa5f7588 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0xa5f7510 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0xa5f74f8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0xa5f74b8 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0xa5f7498 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa5f742c <col:47> 'const size_type':'const unsigned int' lvalue Var 0xa5f6c00 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0xa5f74a8 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0xa5f7480 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0xa5f7470 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0xa5f7454 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0xa5f74e8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0xa5f74d0 <col:33> 'int' 1))))
                (ImplicitCastExpr 0xa5f7578 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0xa5f7560 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0xa5f7550 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0xa5f7534 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0xa5af080 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0xa5f7718 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0xa5f7658 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0xa5f7620 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0xa5f7610 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0xa5f76e8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0xa5f76c8 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0xa5f7698 <col:38> '_Bit_type *' lvalue Var 0xa5f6d70 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0xa5f76d8 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0xa5f76b0 <col:43> 'int' 0)))))))


}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0xa5ff648 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0xa5ff638 <line:18:5, col:18>
    (ConditionalOperator 0xa5ff618 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa5ff5d0 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0xa5ff5a0 <col:12> 'T' lvalue ParmVar 0xa5ff430 'a' 'T')
        (DeclRefExpr 0xa5ff5b8 <col:14> 'T' lvalue ParmVar 0xa5ff470 'b' 'T'))
      (DeclRefExpr 0xa5ff5e8 <col:16> 'T' lvalue ParmVar 0xa5ff430 'a' 'T')
      (DeclRefExpr 0xa5ff600 <col:18> 'T' lvalue ParmVar 0xa5ff470 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0xa5ff8b8 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0xa5ff8a8 <line:27:5, col:18>
    (ConditionalOperator 0xa5ff888 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0xa5ff840 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0xa5ff810 <col:12> 'T' lvalue ParmVar 0xa5ff6c0 'a' 'T')
        (DeclRefExpr 0xa5ff828 <col:14> 'T' lvalue ParmVar 0xa5ff700 'b' 'T'))
      (DeclRefExpr 0xa5ff858 <col:16> 'T' lvalue ParmVar 0xa5ff6c0 'a' 'T')
      (DeclRefExpr 0xa5ff870 <col:18> 'T' lvalue ParmVar 0xa5ff700 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0xa600068 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa5fff10 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0xa5ffee0 <col:18> 'int' 1)
    (IntegerLiteral 0xa5ffef8 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0xa600078 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa5fff98 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0xa5fff68 <col:24> 'int' 1)
    (IntegerLiteral 0xa5fff80 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0xa600088 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0xa600018 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0xa5fffe8 <col:23> 'int' 1)
    (IntegerLiteral 0xa600000 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0xa6015a8 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa6013d0 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0xa601800 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0xa6016e0 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6016d0 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa6016c0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa6016a4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa6015c0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa6017c8 <line:277:5, line:283:5>
      (CaseStmt 0xa601718 <line:278:9, line:280:20>
        (ImplicitCastExpr 0xa6017f0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa6016fc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa6013f0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa601750 <line:279:9, line:280:20>
          (ImplicitCastExpr 0xa6017e0 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa601738 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa601430 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0xa601780 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0xa601770 <col:20> '_Bool' false))))
      (DefaultStmt 0xa6017b0 <line:281:9, line:282:20>
        (ReturnStmt 0xa6017a0 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa601790 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0xa601ac0 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0xa601910 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa601900 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0xa6018f0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0xa6018d4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0xa601820 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0xa601a68 <line:290:5, line:298:5>
      (CaseStmt 0xa601948 <line:291:9, line:295:20>
        (ImplicitCastExpr 0xa601ab0 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0xa60192c <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa6013f0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0xa601980 <line:292:9, line:295:20>
          (ImplicitCastExpr 0xa601aa0 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0xa601968 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa601430 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0xa6019b8 <line:293:9, line:295:20>
            (ImplicitCastExpr 0xa601a90 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0xa6019a0 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa601470 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0xa6019f0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0xa601a80 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0xa6019d8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0xa6014b0 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0xa601a20 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0xa601a10 <col:20> '_Bool' true))))))
      (DefaultStmt 0xa601a50 <line:296:9, line:297:20>
        (ReturnStmt 0xa601a40 <col:13, col:20>
          (CXXBoolLiteralExpr 0xa601a30 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0xa601ff0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa601fd8 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0xa602018 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0xa602000 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0xa62f154 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0xa601570 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0xa62faf8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fae8 <col:14> 'int'))
, const char *param2 = (ImplicitCastExpr 0xa62fb68 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fb58 <col:14> 'int'))
, const char *param3 = (ImplicitCastExpr 0xa62fbd8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fbc8 <col:14> 'int'))
, const char *param4 = (ImplicitCastExpr 0xa62fc48 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fc38 <col:14> 'int'))
, const char *param5 = (ImplicitCastExpr 0xa62fcb8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fca8 <col:14> 'int'))
, const char *param6 = (ImplicitCastExpr 0xa62fd28 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fd18 <col:14> 'int'))
, const char *param7 = (ImplicitCastExpr 0xa62fd98 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fd88 <col:14> 'int'))
, const char *param8 = (ImplicitCastExpr 0xa62fe08 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fdf8 <col:14> 'int'))
, const char *param9 = (ImplicitCastExpr 0xa62fe78 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fe68 <col:14> 'int'))
, const char *param10 = (ImplicitCastExpr 0xa62fee8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62fed8 <col:14> 'int'))
, const char *param11 = (ImplicitCastExpr 0xa62ff58 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62ff48 <col:14> 'int'))
, const char *param12 = (ImplicitCastExpr 0xa62ffc8 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa62ffb8 <col:14> 'int'))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0xa633098 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa633088 <line:395:5, col:51>
    (BinaryOperator 0xa633070 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa632e68 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa632e30 <col:14, col:22> '_Bool'
          (MemberExpr 0xa632e10 <col:14, col:16> '<bound member function type>' .empty 0xa390a50
            (DeclRefExpr 0xa632df8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa632b10 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa633060 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa633018 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa633008 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa632fec <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa633040 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa632f00 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa633050 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa632fc0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa632fa0 <col:44, col:46> '<bound member function type>' .at 0xa3913e0
                (DeclRefExpr 0xa632f30 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa632b10 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa632fe0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa632f88 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0xa630dd0 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0xa630608 <line:354:5, col:13>
    0xa6305d0 "T result")
  (DeclStmt 0xa630d50 <line:355:5, col:33>
    0xa630670 "std::wstringstream stream =
      (CXXConstructExpr 0xa630d28 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa6306a4 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa630490 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0xa630d10 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa630d90 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa630d60 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa630670 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa630d78 <col:15> 'T' lvalue Var 0xa6305d0 'result' 'T'))
  (ReturnStmt 0xa630dc0 <line:357:5, col:12>
    (DeclRefExpr 0xa630da8 <col:12> 'T' lvalue Var 0xa6305d0 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0xa632ad8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa632ac8 <line:389:5, col:50>
    (BinaryOperator 0xa632ab0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa6328b0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa632890 <col:14, col:22> '_Bool'
          (MemberExpr 0xa632870 <col:14, col:16> '<bound member function type>' .empty 0xa36b540
            (DeclRefExpr 0xa632858 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa632570 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa632aa0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa632a48 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa632a38 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa6329dc <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa5fa1b0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa632a70 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa6328fc <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa632a90 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa632a80 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa6329b0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa632990 <col:43, col:45> '<bound member function type>' .at 0xa36bed0
                  (DeclRefExpr 0xa632920 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa632570 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa6329d0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa632978 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0xa6317c0 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0xa631018 <line:363:5, col:19>
    0xa630fc0 "T result =
      (CXXUnresolvedConstructExpr 0xa631000 <col:16, col:18> 'T')")
  (DeclStmt 0xa631740 <line:364:5, col:32>
    0xa631080 "std::stringstream stream =
      (CXXConstructExpr 0xa631718 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0xa6310b4 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa630e80 'x' 'const std::string &')
        (CXXDefaultArgExpr 0xa631700 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa631780 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0xa631750 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0xa631080 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0xa631768 <col:15> 'T' lvalue Var 0xa630fc0 'result' 'T'))
  (ReturnStmt 0xa6317b0 <line:366:5, col:12>
    (DeclRefExpr 0xa631798 <col:12> 'T' lvalue Var 0xa630fc0 'result' 'T')))

;
template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0xa632508 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa632068 <line:381:5, col:22>
    0xa632030 "wchar_t buff[128]")
  (CallExpr 0xa632128 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa632118 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa6320e0 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa6303b0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa632150 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa6320b0 <col:22> 'wchar_t [128]' lvalue Var 0xa632030 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa632160 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa6320c8 <col:28> 'const long' lvalue ParmVar 0xa631cd0 'x' 'const long &')))
  (ReturnStmt 0xa6324f8 <line:383:5, col:25>
    (ExprWithCleanups 0xa6324d8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa6321e0)
      (CXXTemporary 0xa632460)
      (CXXConstructExpr 0xa6324b0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa6324a0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa632490 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa632478 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa632468 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa632460)
                (CXXConstructExpr 0xa632438 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa6321a0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa632190 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa632178 <col:21> 'wchar_t [128]' lvalue Var 0xa632030 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa632420 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0xa6335d0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa6335c0 <line:401:5, col:42>
    (ExprWithCleanups 0xa6335a0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa633540)
      (CXXConstructExpr 0xa633578 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa633568 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa633558 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa633548 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa633540)
              (CallExpr 0xa633508 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa6334f8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6334a0 <col:12> 'wcstring (const long &)' lvalue Function 0xa631d70 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa631970 'to_string')))
                (MaterializeTemporaryExpr 0xa633528 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa633458 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa633448 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa633438 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa63340c <col:40> 'const int' lvalue ParmVar 0xa6330d0 'x' 'const int &')))))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0xa631c70 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0xa631ab8 <line:372:5, col:30>
    0xa6319d0 "std::wstringstream stream =
      (CXXConstructExpr 0xa631a90 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0xa631a78 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0xa631af8 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0xa631ac8 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa6319d0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0xa631ae0 <col:15> 'const T' lvalue ParmVar 0xa631870 'x' 'const T &'))
  (ReturnStmt 0xa631c60 <line:374:5, col:23>
    (ExprWithCleanups 0xa631c40 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa631be0)
      (CXXConstructExpr 0xa631c18 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa631c08 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa631bf8 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa631be8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0xa631be0)
              (CXXMemberCallExpr 0xa631b88 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0xa631b68 <col:12, col:19> '<bound member function type>' .str 0xa580c10
                  (ImplicitCastExpr 0xa631bc8 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0xa631b10 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0xa6319d0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0xa632508 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0xa632068 <line:381:5, col:22>
    0xa632030 "wchar_t buff[128]")
  (CallExpr 0xa632128 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0xa632118 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa6320e0 <col:5> 'void (wchar_t *, long)' lvalue Function 0xa6303b0 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0xa632150 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0xa6320b0 <col:22> 'wchar_t [128]' lvalue Var 0xa632030 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0xa632160 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0xa6320c8 <col:28> 'const long' lvalue ParmVar 0xa631cd0 'x' 'const long &')))
  (ReturnStmt 0xa6324f8 <line:383:5, col:25>
    (ExprWithCleanups 0xa6324d8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa6321e0)
      (CXXTemporary 0xa632460)
      (CXXConstructExpr 0xa6324b0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa6324a0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa632490 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0xa632478 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0xa632468 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa632460)
                (CXXConstructExpr 0xa632438 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0xa6321a0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0xa632190 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0xa632178 <col:21> 'wchar_t [128]' lvalue Var 0xa632030 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0xa632420 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0xa632ad8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0xa632ac8 <line:389:5, col:50>
    (BinaryOperator 0xa632ab0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0xa6328b0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa632890 <col:14, col:22> '_Bool'
          (MemberExpr 0xa632870 <col:14, col:16> '<bound member function type>' .empty 0xa36b540
            (DeclRefExpr 0xa632858 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa632570 'x' 'const std::string &'))))
      (ImplicitCastExpr 0xa632aa0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0xa632a48 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0xa632a38 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa6329dc <col:27> 'char *(const char *, int) throw()' lvalue Function 0xa5fa1b0 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0xa632a70 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0xa6328fc <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0xa632a90 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0xa632a80 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0xa6329b0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0xa632990 <col:43, col:45> '<bound member function type>' .at 0xa36bed0
                  (DeclRefExpr 0xa632920 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0xa632570 'x' 'const std::string &'))
                (ImplicitCastExpr 0xa6329d0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa632978 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0xa633098 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0xa633088 <line:395:5, col:51>
    (BinaryOperator 0xa633070 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0xa632e68 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0xa632e30 <col:14, col:22> '_Bool'
          (MemberExpr 0xa632e10 <col:14, col:16> '<bound member function type>' .empty 0xa390a50
            (DeclRefExpr 0xa632df8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa632b10 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0xa633060 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0xa633018 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0xa633008 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa632fec <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa633040 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa632f00 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0xa633050 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0xa632fc0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0xa632fa0 <col:44, col:46> '<bound member function type>' .at 0xa3913e0
                (DeclRefExpr 0xa632f30 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa632b10 'x' 'const wcstring &'))
              (ImplicitCastExpr 0xa632fe0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0xa632f88 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0xa6335d0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0xa6335c0 <line:401:5, col:42>
    (ExprWithCleanups 0xa6335a0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0xa633540)
      (CXXConstructExpr 0xa633578 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0xa633568 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0xa633558 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0xa633548 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa633540)
              (CallExpr 0xa633508 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0xa6334f8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6334a0 <col:12> 'wcstring (const long &)' lvalue Function 0xa631d70 'to_string' 'wcstring (const long &)' (FunctionTemplate 0xa631970 'to_string')))
                (MaterializeTemporaryExpr 0xa633528 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0xa633458 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0xa633448 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0xa633438 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa63340c <col:40> 'const int' lvalue ParmVar 0xa6330d0 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0xa634e08 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0xa634c10 <line:421:9, col:23>
    0xa634bb0 "size_t len =
      (ImplicitCastExpr 0xa634c00 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0xa634be8 <col:22> 'int' 0))")
  (IfStmt 0xa634db0 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0xa634c98 <line:422:13, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
      (MemberExpr 0xa634c64 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0xa633e00
        (CXXThisExpr 0xa634c38 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (GNUNullExpr 0xa634c88 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
    (CompoundStmt 0xa634d98 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0xa634d80 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0xa634d20 <line:424:20, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0xa634cf8 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0xa634cc0 <col:20> 'CharType_t **const' lvalue ->array 0xa633e00
              (CXXThisExpr 0xa634cb0 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0xa634ce0 <col:26> 'size_t':'unsigned int' lvalue Var 0xa634bb0 'len' 'size_t':'unsigned int'))
          (GNUNullExpr 0xa634d10 </usr/include/clang/3.0/include/stddef.h:47:14> 'int'))
        (CompoundStmt 0xa634d68 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0xa634d50 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0xa634d38 <col:17> 'size_t':'unsigned int' lvalue Var 0xa634bb0 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0xa634df8 <line:429:9, col:16>
    (ImplicitCastExpr 0xa634de8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0xa634dcc <col:16> 'size_t':'unsigned int' lvalue Var 0xa634bb0 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0xa634f60 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0xa634ee8 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0xa634ed8 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa634e3c <col:9, col:11> 'void (void *) throw()' lvalue Function 0xa1023e0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa634ea0 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0xa634e70 <col:24> 'CharType_t **' lvalue ->array 0xa633e00
        (CXXThisExpr 0xa634e60 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0xa634f48 <line:435:9, /usr/include/clang/3.0/include/stddef.h:47:14> '<dependent type>' '='
    (MemberExpr 0xa634f18 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0xa633e00
      (CXXThisExpr 0xa634f08 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (GNUNullExpr 0xa634f38 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')))


public:
public:
    null_terminated_array_t<CharType_t>() : array((GNUNullExpr 0xa634f78 </usr/include/clang/3.0/include/stddef.h:47:14> 'int')
) (CompoundStmt 0xa634fd0 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0xa635030 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0xa634fe0 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0xa633ad0 0xa6336a0)
  (DeclRefExpr 0xa635018 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa634780 'argv' 'const string_list_t &'))
) (CompoundStmt 0xa635090 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0xa635108 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0xa6350e8 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa6350b0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa6350a0 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0xa635258 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0xa635168 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa635130 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa635120 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0xa635240 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0xa635198 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa635188 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0xa635220 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0xa6351d0 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0xa633ad0 0xa6336a0)
      (DeclRefExpr 0xa635208 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0xa634940 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0xa6352b0 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0xa6352a0 <line:457:9, col:16>
    (MemberExpr 0xa635280 <col:16> 'CharType_t **const' lvalue ->array 0xa633e00
      (CXXThisExpr 0xa635270 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0xa635330 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0xa635310 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0xa6352d8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0xa6352c8 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0xa635f18 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0xa635ef8 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0xa635ee8 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa635ed0 <col:9> 'void (void *) throw()' lvalue Function 0xa1023e0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa635eb8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa635ea8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa635e98 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa635e68 <col:22> 'const char *' lvalue ->str 0xa6358b0
            (CXXThisExpr 0xa635e58 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0xa635f40 </usr/include/clang/3.0/include/stddef.h:47:14> 'const char *' <NullToPointer>
  (GNUNullExpr 0xa635f30 <col:14> 'int'))
) (CompoundStmt 0xa635f70 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0xa6361c0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0xa636058 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0xa636048 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0xa636030 <col:9> 'void (void *) throw()' lvalue Function 0xa1023e0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0xa636018 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0xa636008 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0xa635ff8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0xa635fc8 <col:22> 'const char *' lvalue ->str 0xa6358b0
            (CXXThisExpr 0xa635fb8 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0xa6361a8 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0xa636088 <col:9> 'const char *' lvalue ->str 0xa6358b0
      (CXXThisExpr 0xa636078 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0xa636198 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0xa636178 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0xa636168 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa636134 <col:15> 'char *(const wchar_t *)' lvalue Function 0xa600a20 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0xa636118 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0xa6360f8 <col:23, col:25> '<bound member function type>' .c_str 0xa3a0780
            (DeclRefExpr 0xa6360e0 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0xa635ca0 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0xa636248 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0xa636238 <line:495:9, col:16>
    (ImplicitCastExpr 0xa636228 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0xa636208 <col:16> 'const char *const' lvalue ->str 0xa6358b0
        (CXXThisExpr 0xa6361f8 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0xa6371fc <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0xa636e10 'r' 'T *')
), saved_value((UnaryOperator 0xa637270 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa637258 <col:45> 'T *' lvalue ParmVar 0xa636e10 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa6372c8 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0xa637328 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0xa637338 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0xa636f20 'r' 'T *')
), saved_value((UnaryOperator 0xa6373a0 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0xa637388 <col:66> 'T *' lvalue ParmVar 0xa636f20 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0xa6373f8 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0xa6374b8 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0xa6374a0 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0xa637470 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0xa637454 <col:10> 'T *' lvalue ParmVar 0xa636f20 'r' 'T *'))
    (DeclRefExpr 0xa637484 <col:14> 'const T' lvalue ParmVar 0xa636f90 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0xa637538 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0xa637518 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0xa6374f8 <col:9> '<bound member function type>' ->restore 0xa6371a0
      (CXXThisExpr 0xa6374e8 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0xa637738 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0xa637718 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0xa637590 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0xa637580 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0xa637560 <col:14> '_Bool' lvalue ->restored 0xa636d90
          (CXXThisExpr 0xa637550 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0xa637700 <line:551:9, line:554:9>
      (CallExpr 0xa637680 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0xa6375c8 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0xa1696d0 0xa169c10 0xa32b570 0xa5aedb0)
        (UnaryOperator 0xa637638 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0xa637618 <col:24> 'T *const' lvalue ->ref 0xa636d10
            (CXXThisExpr 0xa637608 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0xa637660 <col:29> 'T' lvalue ->saved_value 0xa636d50
          (CXXThisExpr 0xa637650 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0xa6376e8 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0xa6376b8 <col:13> '_Bool' lvalue ->restored 0xa636d90
          (CXXThisExpr 0xa6376a8 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0xa6376d8 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
extern void __assume(bool);
extern double __builtin_cos(double);
extern int __builtin_ctz(unsigned int);
extern double __builtin_sin(double);
extern int __builtin_abs(int);
extern double __builtin_log(double);
extern double __builtin_tan(double);
extern void __atomic_load();
extern double __builtin_pow(double, double);
extern void __debugbreak();
extern double __builtin_erf(double);
extern double __builtin_inf();
extern double __builtin_exp(double);
extern int __builtin_ffs(unsigned int);
extern char __sync_swap_1(volatile char *, char, ...);
extern short __sync_swap_2(volatile short *, short, ...);
extern int __sync_swap_4(volatile int *, int, ...);
extern long long __sync_swap_8(volatile long long *, long long, ...);
extern double __builtin_fma(double, double, double);
extern double __builtin_nan(const char *);
extern void __sync_swap();
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
struct builtin_printf_state_t {
    struct builtin_printf_state_t;
    int exit_code;
    bool early_exit;
    builtin_printf_state_t() : exit_code((IntegerLiteral 0xa63d138 <../codeBase/fish-shell-master/builtin_printf.cpp:66:42> 'int' 0)
), early_exit((CXXBoolLiteralExpr 0xa63d168 <../codeBase/fish-shell-master/builtin_printf.cpp:66:57> '_Bool' false)
) (CompoundStmt 0xa63d1a0 <../codeBase/fish-shell-master/builtin_printf.cpp:67:5, line:68:5>)


    void verify_numeric(const wchar_t *s, const wchar_t *end, int errcode);
    void print_direc(const wchar_t *start, size_t length, wchar_t conversion, bool have_field_width, int field_width, bool have_precision, int precision, const wchar_t *argument);
    int print_formatted(const wchar_t *format, int argc, wchar_t **argv);
    void fatal_error(const wchar_t *format, ...);
    long print_esc(const wchar_t *escstart, bool octal_0);
    void print_esc_string(const wchar_t *str);
    void print_esc_char(wchar_t c);
    void append_output(wchar_t c);
    void append_output(const wchar_t *c);
    void append_format_output(const wchar_t *fmt, ...);
};
static bool is_octal_digit(wchar_t c) (CompoundStmt 0xa63d4a8 <../codeBase/fish-shell-master/builtin_printf.cpp:91:1, line:93:1>
  (ReturnStmt 0xa63d498 <line:92:5, /usr/include/clang/3.0/include/stddef.h:47:14>
    (BinaryOperator 0xa63d480 <../codeBase/fish-shell-master/builtin_printf.cpp:92:12, /usr/include/clang/3.0/include/stddef.h:47:14> '_Bool' '&&'
      (BinaryOperator 0xa63d2e8 <../codeBase/fish-shell-master/builtin_printf.cpp:92:12, col:17> '_Bool' '!='
        (ImplicitCastExpr 0xa63d2d8 <col:12> 'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa63d2a4 <col:12> 'wchar_t' lvalue ParmVar 0xa63d1c0 'c' 'wchar_t'))
        (CharacterLiteral 0xa63d2c0 <col:17> 'wchar_t'0))
      (BinaryOperator 0xa63d468 <col:26, /usr/include/clang/3.0/include/stddef.h:47:14> '_Bool' '!='
        (CallExpr 0xa63d400 <../codeBase/fish-shell-master/builtin_printf.cpp:92:26, col:47> 'wchar_t *'
          (ImplicitCastExpr 0xa63d3f0 <col:26> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa63d3d4 <col:26> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa63d428 <col:33> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa63d380 <col:33> 'const wchar_t [9]' lvalue L"0\000\000\0001\000\000\0002\000\000\0003\000\000\0004\000\000\0005\000\000\0006\000\000\0007\000\000\000"))
          (ImplicitCastExpr 0xa63d438 <col:46> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0xa63d3bc <col:46> 'wchar_t' lvalue ParmVar 0xa63d1c0 'c' 'wchar_t')))
        (ImplicitCastExpr 0xa63d458 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
          (GNUNullExpr 0xa63d448 <col:14> 'int'))))))


static bool is_hex_digit(wchar_t c) (CompoundStmt 0xa63d7c0 <../codeBase/fish-shell-master/builtin_printf.cpp:96:1, line:98:1>
  (ReturnStmt 0xa63d7b0 <line:97:5, /usr/include/clang/3.0/include/stddef.h:47:14>
    (BinaryOperator 0xa63d798 <../codeBase/fish-shell-master/builtin_printf.cpp:97:12, /usr/include/clang/3.0/include/stddef.h:47:14> '_Bool' '&&'
      (BinaryOperator 0xa63d5c8 <../codeBase/fish-shell-master/builtin_printf.cpp:97:12, col:17> '_Bool' '!='
        (ImplicitCastExpr 0xa63d5b8 <col:12> 'wchar_t' <LValueToRValue>
          (DeclRefExpr 0xa63d584 <col:12> 'wchar_t' lvalue ParmVar 0xa63d4d0 'c' 'wchar_t'))
        (CharacterLiteral 0xa63d5a0 <col:17> 'wchar_t'0))
      (BinaryOperator 0xa63d780 <col:26, /usr/include/clang/3.0/include/stddef.h:47:14> '_Bool' '!='
        (CallExpr 0xa63d718 <../codeBase/fish-shell-master/builtin_printf.cpp:97:26, col:61> 'wchar_t *'
          (ImplicitCastExpr 0xa63d708 <col:26> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa63d6ec <col:26> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0xa63d740 <col:33> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa63d660 <col:33> 'const wchar_t [23]' lvalue L"0\000\000\0001\000\000\0002\000\000\0003\000\000\0004\000\000\0005\000\000\0006\000\000\0007\000\000\0008\000\000\0009\000\000\000A\000\000\000B\000\000\000C\000\000\000D\000\000\000E\000\000\000F\000\000\000a\000\000\000b\000\000\000c\000\000\000d\000\000\000e\000\000\000f\000\000\000"))
          (ImplicitCastExpr 0xa63d750 <col:60> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0xa63d6d4 <col:60> 'wchar_t' lvalue ParmVar 0xa63d4d0 'c' 'wchar_t')))
        (ImplicitCastExpr 0xa63d770 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
          (GNUNullExpr 0xa63d760 <col:14> 'int'))))))


static int hex_to_bin(const wchar_t &c) (CompoundStmt 0xa63e120 <../codeBase/fish-shell-master/builtin_printf.cpp:101:1, line:145:1>
  (SwitchStmt 0xa63d900 <line:102:5, line:144:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa63d8f0 <line:102:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa63d8d4 <col:13> 'const wchar_t' lvalue ParmVar 0xa63d7f0 'c' 'const wchar_t &'))
    (CompoundStmt 0xa63e0c8 <line:103:5, line:144:5>
      (CaseStmt 0xa63d938 <line:104:9, line:105:20>
        (CharacterLiteral 0xa63d920 <line:104:14> 'wchar_t'48)
        <<<NULL>>>
        (ReturnStmt 0xa63d970 <line:105:13, col:20>
          (IntegerLiteral 0xa63d958 <col:20> 'int' 0)))
      (CaseStmt 0xa63d998 <line:106:9, line:107:20>
        (CharacterLiteral 0xa63d980 <line:106:14> 'wchar_t'49)
        <<<NULL>>>
        (ReturnStmt 0xa63d9d0 <line:107:13, col:20>
          (IntegerLiteral 0xa63d9b8 <col:20> 'int' 1)))
      (CaseStmt 0xa63d9f8 <line:108:9, line:109:20>
        (CharacterLiteral 0xa63d9e0 <line:108:14> 'wchar_t'50)
        <<<NULL>>>
        (ReturnStmt 0xa63da30 <line:109:13, col:20>
          (IntegerLiteral 0xa63da18 <col:20> 'int' 2)))
      (CaseStmt 0xa63da58 <line:110:9, line:111:20>
        (CharacterLiteral 0xa63da40 <line:110:14> 'wchar_t'51)
        <<<NULL>>>
        (ReturnStmt 0xa63da90 <line:111:13, col:20>
          (IntegerLiteral 0xa63da78 <col:20> 'int' 3)))
      (CaseStmt 0xa63dab8 <line:112:9, line:113:20>
        (CharacterLiteral 0xa63daa0 <line:112:14> 'wchar_t'52)
        <<<NULL>>>
        (ReturnStmt 0xa63daf0 <line:113:13, col:20>
          (IntegerLiteral 0xa63dad8 <col:20> 'int' 4)))
      (CaseStmt 0xa63db18 <line:114:9, line:115:20>
        (CharacterLiteral 0xa63db00 <line:114:14> 'wchar_t'53)
        <<<NULL>>>
        (ReturnStmt 0xa63db50 <line:115:13, col:20>
          (IntegerLiteral 0xa63db38 <col:20> 'int' 5)))
      (CaseStmt 0xa63db78 <line:116:9, line:117:20>
        (CharacterLiteral 0xa63db60 <line:116:14> 'wchar_t'54)
        <<<NULL>>>
        (ReturnStmt 0xa63dbb0 <line:117:13, col:20>
          (IntegerLiteral 0xa63db98 <col:20> 'int' 6)))
      (CaseStmt 0xa63dbd8 <line:118:9, line:119:20>
        (CharacterLiteral 0xa63dbc0 <line:118:14> 'wchar_t'55)
        <<<NULL>>>
        (ReturnStmt 0xa63dc10 <line:119:13, col:20>
          (IntegerLiteral 0xa63dbf8 <col:20> 'int' 7)))
      (CaseStmt 0xa63dc38 <line:120:9, line:121:20>
        (CharacterLiteral 0xa63dc20 <line:120:14> 'wchar_t'56)
        <<<NULL>>>
        (ReturnStmt 0xa63dc70 <line:121:13, col:20>
          (IntegerLiteral 0xa63dc58 <col:20> 'int' 8)))
      (CaseStmt 0xa63dc98 <line:122:9, line:123:20>
        (CharacterLiteral 0xa63dc80 <line:122:14> 'wchar_t'57)
        <<<NULL>>>
        (ReturnStmt 0xa63dcd0 <line:123:13, col:20>
          (IntegerLiteral 0xa63dcb8 <col:20> 'int' 9)))
      (CaseStmt 0xa63dcf8 <line:124:9, line:126:20>
        (CharacterLiteral 0xa63dce0 <line:124:14> 'wchar_t'97)
        <<<NULL>>>
        (CaseStmt 0xa63dd30 <line:125:9, line:126:20>
          (CharacterLiteral 0xa63dd18 <line:125:14> 'wchar_t'65)
          <<<NULL>>>
          (ReturnStmt 0xa63dd68 <line:126:13, col:20>
            (IntegerLiteral 0xa63dd50 <col:20> 'int' 10))))
      (CaseStmt 0xa63dd90 <line:127:9, line:129:20>
        (CharacterLiteral 0xa63dd78 <line:127:14> 'wchar_t'98)
        <<<NULL>>>
        (CaseStmt 0xa63ddc8 <line:128:9, line:129:20>
          (CharacterLiteral 0xa63ddb0 <line:128:14> 'wchar_t'66)
          <<<NULL>>>
          (ReturnStmt 0xa63de00 <line:129:13, col:20>
            (IntegerLiteral 0xa63dde8 <col:20> 'int' 11))))
      (CaseStmt 0xa63de28 <line:130:9, line:132:20>
        (CharacterLiteral 0xa63de10 <line:130:14> 'wchar_t'99)
        <<<NULL>>>
        (CaseStmt 0xa63de60 <line:131:9, line:132:20>
          (CharacterLiteral 0xa63de48 <line:131:14> 'wchar_t'67)
          <<<NULL>>>
          (ReturnStmt 0xa63de98 <line:132:13, col:20>
            (IntegerLiteral 0xa63de80 <col:20> 'int' 12))))
      (CaseStmt 0xa63dec0 <line:133:9, line:135:20>
        (CharacterLiteral 0xa63dea8 <line:133:14> 'wchar_t'100)
        <<<NULL>>>
        (CaseStmt 0xa63def8 <line:134:9, line:135:20>
          (CharacterLiteral 0xa63dee0 <line:134:14> 'wchar_t'68)
          <<<NULL>>>
          (ReturnStmt 0xa63df30 <line:135:13, col:20>
            (IntegerLiteral 0xa63df18 <col:20> 'int' 13))))
      (CaseStmt 0xa63df58 <line:136:9, line:138:20>
        (CharacterLiteral 0xa63df40 <line:136:14> 'wchar_t'101)
        <<<NULL>>>
        (CaseStmt 0xa63df90 <line:137:9, line:138:20>
          (CharacterLiteral 0xa63df78 <line:137:14> 'wchar_t'69)
          <<<NULL>>>
          (ReturnStmt 0xa63dfc8 <line:138:13, col:20>
            (IntegerLiteral 0xa63dfb0 <col:20> 'int' 14))))
      (CaseStmt 0xa63dff0 <line:139:9, line:141:20>
        (CharacterLiteral 0xa63dfd8 <line:139:14> 'wchar_t'102)
        <<<NULL>>>
        (CaseStmt 0xa63e028 <line:140:9, line:141:20>
          (CharacterLiteral 0xa63e010 <line:140:14> 'wchar_t'70)
          <<<NULL>>>
          (ReturnStmt 0xa63e060 <line:141:13, col:20>
            (IntegerLiteral 0xa63e048 <col:20> 'int' 15))))
      (DefaultStmt 0xa63e0b0 <line:142:9, line:143:21>
        (ReturnStmt 0xa63e0a0 <col:13, col:21>
          (UnaryOperator 0xa63e088 <col:20, col:21> 'int' prefix '-'
            (IntegerLiteral 0xa63e070 <col:21> 'int' 1)))))))


static int octal_to_bin(wchar_t c) (CompoundStmt 0xa63e5e0 <../codeBase/fish-shell-master/builtin_printf.cpp:148:1, line:170:1>
  (SwitchStmt 0xa63e230 <line:149:5, line:169:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa63e220 <line:149:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa63e204 <col:13> 'wchar_t' lvalue ParmVar 0xa63e140 'c' 'wchar_t'))
    (CompoundStmt 0xa63e5a8 <line:150:5, line:169:5>
      (CaseStmt 0xa63e268 <line:151:9, line:152:20>
        (CharacterLiteral 0xa63e250 <line:151:14> 'wchar_t'48)
        <<<NULL>>>
        (ReturnStmt 0xa63e2a0 <line:152:13, col:20>
          (IntegerLiteral 0xa63e288 <col:20> 'int' 0)))
      (CaseStmt 0xa63e2c8 <line:153:9, line:154:20>
        (CharacterLiteral 0xa63e2b0 <line:153:14> 'wchar_t'49)
        <<<NULL>>>
        (ReturnStmt 0xa63e300 <line:154:13, col:20>
          (IntegerLiteral 0xa63e2e8 <col:20> 'int' 1)))
      (CaseStmt 0xa63e328 <line:155:9, line:156:20>
        (CharacterLiteral 0xa63e310 <line:155:14> 'wchar_t'50)
        <<<NULL>>>
        (ReturnStmt 0xa63e360 <line:156:13, col:20>
          (IntegerLiteral 0xa63e348 <col:20> 'int' 2)))
      (CaseStmt 0xa63e388 <line:157:9, line:158:20>
        (CharacterLiteral 0xa63e370 <line:157:14> 'wchar_t'51)
        <<<NULL>>>
        (ReturnStmt 0xa63e3c0 <line:158:13, col:20>
          (IntegerLiteral 0xa63e3a8 <col:20> 'int' 3)))
      (CaseStmt 0xa63e3e8 <line:159:9, line:160:20>
        (CharacterLiteral 0xa63e3d0 <line:159:14> 'wchar_t'52)
        <<<NULL>>>
        (ReturnStmt 0xa63e420 <line:160:13, col:20>
          (IntegerLiteral 0xa63e408 <col:20> 'int' 4)))
      (CaseStmt 0xa63e448 <line:161:9, line:162:20>
        (CharacterLiteral 0xa63e430 <line:161:14> 'wchar_t'53)
        <<<NULL>>>
        (ReturnStmt 0xa63e480 <line:162:13, col:20>
          (IntegerLiteral 0xa63e468 <col:20> 'int' 5)))
      (CaseStmt 0xa63e4a8 <line:163:9, line:164:20>
        (CharacterLiteral 0xa63e490 <line:163:14> 'wchar_t'54)
        <<<NULL>>>
        (ReturnStmt 0xa63e4e0 <line:164:13, col:20>
          (IntegerLiteral 0xa63e4c8 <col:20> 'int' 6)))
      (CaseStmt 0xa63e508 <line:165:9, line:166:20>
        (CharacterLiteral 0xa63e4f0 <line:165:14> 'wchar_t'55)
        <<<NULL>>>
        (ReturnStmt 0xa63e540 <line:166:13, col:20>
          (IntegerLiteral 0xa63e528 <col:20> 'int' 7)))
      (DefaultStmt 0xa63e590 <line:167:9, line:168:21>
        (ReturnStmt 0xa63e580 <col:13, col:21>
          (UnaryOperator 0xa63e568 <col:20, col:21> 'int' prefix '-'
            (IntegerLiteral 0xa63e550 <col:21> 'int' 1)))))))


static const wchar_t *const cfcc_msg = (ImplicitCastExpr 0xa63e7d0 <../codeBase/fish-shell-master/builtin_printf.cpp:175:8> 'const wchar_t *' <ArrayToPointerDecay>
  (StringLiteral 0xa63e690 <col:8> 'const wchar_t [74]' lvalue L"w\000\000\000a\000\000\000r\000\000\000n\000\000\000i\000\000\000n\000\000\000g\000\000\000:\000\000\000 \000\000\000%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000c\000\000\000h\000\000\000a\000\000\000r\000\000\000a\000\000\000c\000\000\000t\000\000\000e\000\000\000r\000\000\000(\000\000\000s\000\000\000)\000\000\000 \000\000\000f\000\000\000o\000\000\000l\000\000\000l\000\000\000o\000\000\000w\000\000\000i\000\000\000n\000\000\000g\000\000\000 \000\000\000c\000\000\000h\000\000\000a\000\000\000r\000\000\000a\000\000\000c\000\000\000t\000\000\000e\000\000\000r\000\000\000 \000\000\000c\000\000\000o\000\000\000n\000\000\000s\000\000\000t\000\000\000a\000\000\000n\000\000\000t\000\000\000 \000\000\000h\000\000\000a\000\000\000v\000\000\000e\000\000\000 \000\000\000b\000\000\000e\000\000\000e\000\000\000n\000\000\000 \000\000\000i\000\000\000g\000\000\000n\000\000\000o\000\000\000r\000\000\000e\000\000\000d\000\000\000"))
;
double C_STRTOD(const wchar_t *nptr, wchar_t **endptr) (CompoundStmt 0xa63f0c0 <../codeBase/fish-shell-master/builtin_printf.cpp:178:1, line:196:1>
  (DeclStmt 0xa63e958 <line:179:5, col:13>
    0xa63e920 "double r")
  (DeclStmt 0xa63eb30 <line:181:5, col:63>
    0xa63e970 "const wcstring saved_locale =
      (ExprWithCleanups 0xa63eb10 <col:35, col:62> 'const wcstring':'const class std::basic_string<wchar_t>'
        (CXXTemporary 0xa63eab0)
        (CXXConstructExpr 0xa63eae8 <col:35, col:62> 'const wcstring':'const class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
          (MaterializeTemporaryExpr 0xa63ead8 <col:35, col:62> 'const class std::basic_string<wchar_t>' lvalue
            (ImplicitCastExpr 0xa63eac8 <col:35, col:62> 'const class std::basic_string<wchar_t>' <NoOp>
              (CXXBindTemporaryExpr 0xa63eab8 <col:35, col:62> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa63eab0)
                (CallExpr 0xa63ea68 <col:35, col:62> 'wcstring':'class std::basic_string<wchar_t>'
                  (ImplicitCastExpr 0xa63ea58 <col:35> 'wcstring (*)(int, const wchar_t *)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa63ea04 <col:35> 'wcstring (int, const wchar_t *)' lvalue Function 0xa638dd0 'wsetlocale' 'wcstring (int, const wchar_t *)'))
                  (ImplicitCastExpr 0xa63ea90 </usr/include/locale.h:37:27> 'int' <IntegralCast>
                    (DeclRefExpr 0xa63e9dc <col:27> 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>' EnumConstant 0xa20a0f0 '__LC_NUMERIC' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>'))
                  (ImplicitCastExpr 0xa63eaa0 </usr/include/clang/3.0/include/stddef.h:47:14> 'const wchar_t *' <NullToPointer>
                    (GNUNullExpr 0xa63e9f8 <col:14> 'int'))))))))")
  (IfStmt 0xa63ed20 <../codeBase/fish-shell-master/builtin_printf.cpp:183:5, line:186:5>
    <<<NULL>>>
    (UnaryOperator 0xa63eb98 <line:183:9, col:29> '_Bool' prefix '!'
      (CXXMemberCallExpr 0xa63eb78 <col:10, col:29> '_Bool'
        (MemberExpr 0xa63eb58 <col:10, col:23> '<bound member function type>' .empty 0xa390a50
          (DeclRefExpr 0xa63eb40 <col:10> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue Var 0xa63e970 'saved_locale' 'const wcstring':'const class std::basic_string<wchar_t>'))))
    (CompoundStmt 0xa63ed08 <line:184:5, line:186:5>
      (ExprWithCleanups 0xa63ece8 <line:185:9, col:36> 'wcstring':'class std::basic_string<wchar_t>'
        (CXXTemporary 0xa63ecd0)
        (CXXBindTemporaryExpr 0xa63ecd8 <col:9, col:36> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa63ecd0)
          (CallExpr 0xa63ec88 <col:9, col:36> 'wcstring':'class std::basic_string<wchar_t>'
            (ImplicitCastExpr 0xa63ec78 <col:9> 'wcstring (*)(int, const wchar_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa63ec60 <col:9> 'wcstring (int, const wchar_t *)' lvalue Function 0xa638dd0 'wsetlocale' 'wcstring (int, const wchar_t *)'))
            (ImplicitCastExpr 0xa63ecb0 </usr/include/locale.h:37:27> 'int' <IntegralCast>
              (DeclRefExpr 0xa63ebe4 <col:27> 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>' EnumConstant 0xa20a0f0 '__LC_NUMERIC' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>'))
            (ImplicitCastExpr 0xa63ecc0 <../codeBase/fish-shell-master/builtin_printf.cpp:185:32> 'const wchar_t *' <ArrayToPointerDecay>
              (StringLiteral 0xa63ec40 <col:32> 'const wchar_t [2]' lvalue L"C\000\000\000"))))))
    <<<NULL>>>)
  (BinaryOperator 0xa63ee70 <line:188:5, col:28> 'double' lvalue '='
    (DeclRefExpr 0xa63ed3c <col:5> 'double' lvalue Var 0xa63e920 'r' 'double')
    (CallExpr 0xa63ee28 <col:9, col:28> 'double'
      (ImplicitCastExpr 0xa63ee18 <col:9> 'double (*)(const wchar_t *restrict, wchar_t **restrict) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa63edbc <col:9> 'double (const wchar_t *restrict, wchar_t **restrict) throw()' lvalue Function 0xa113610 'wcstod' 'double (const wchar_t *restrict, wchar_t **restrict) throw()'))
      (ImplicitCastExpr 0xa63ee50 <col:16> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa63ed8c <col:16> 'const wchar_t *' lvalue ParmVar 0xa63e7f0 'nptr' 'const wchar_t *'))
      (ImplicitCastExpr 0xa63ee60 <col:22> 'wchar_t **' <LValueToRValue>
        (DeclRefExpr 0xa63eda4 <col:22> 'wchar_t **' lvalue ParmVar 0xa63e840 'endptr' 'wchar_t **'))))
  (IfStmt 0xa63f050 <line:190:5, line:193:5>
    <<<NULL>>>
    (UnaryOperator 0xa63eee0 <line:190:9, col:29> '_Bool' prefix '!'
      (CXXMemberCallExpr 0xa63eec0 <col:10, col:29> '_Bool'
        (MemberExpr 0xa63eea0 <col:10, col:23> '<bound member function type>' .empty 0xa390a50
          (DeclRefExpr 0xa63ee88 <col:10> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue Var 0xa63e970 'saved_locale' 'const wcstring':'const class std::basic_string<wchar_t>'))))
    (CompoundStmt 0xa63f038 <line:191:5, line:193:5>
      (ExprWithCleanups 0xa63f018 <line:192:9, col:52> 'wcstring':'class std::basic_string<wchar_t>'
        (CXXTemporary 0xa63f000)
        (CXXBindTemporaryExpr 0xa63f008 <col:9, col:52> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa63f000)
          (CallExpr 0xa63efc8 <col:9, col:52> 'wcstring':'class std::basic_string<wchar_t>'
            (ImplicitCastExpr 0xa63efb8 <col:9> 'wcstring (*)(int, const wchar_t *)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa63ef9c <col:9> 'wcstring (int, const wchar_t *)' lvalue Function 0xa638dd0 'wsetlocale' 'wcstring (int, const wchar_t *)'))
            (ImplicitCastExpr 0xa63eff0 </usr/include/locale.h:37:27> 'int' <IntegralCast>
              (DeclRefExpr 0xa63ef2c <col:27> 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>' EnumConstant 0xa20a0f0 '__LC_NUMERIC' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/locale.h:27:1>'))
            (CXXMemberCallExpr 0xa63ef80 <../codeBase/fish-shell-master/builtin_printf.cpp:192:32, col:51> 'const wchar_t *'
              (MemberExpr 0xa63ef5c <col:32, col:45> '<bound member function type>' .c_str 0xa3a0780
                (DeclRefExpr 0xa63ef44 <col:32> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue Var 0xa63e970 'saved_locale' 'const wcstring':'const class std::basic_string<wchar_t>')))))))
    <<<NULL>>>)
  (ReturnStmt 0xa63f0b0 <line:195:5, col:12>
    (ImplicitCastExpr 0xa63f0a0 <col:12> 'double' <LValueToRValue>
      (DeclRefExpr 0xa63f088 <col:12> 'double' lvalue Var 0xa63e920 'r' 'double'))))


static inline unsigned int to_uwchar_t(wchar_t ch) (CompoundStmt 0xa63f200 <../codeBase/fish-shell-master/builtin_printf.cpp:199:1, line:201:1>
  (ReturnStmt 0xa63f1f0 <line:200:5, col:12>
    (ImplicitCastExpr 0xa63f1e0 <col:12> 'unsigned int' <IntegralCast>
      (ImplicitCastExpr 0xa63f1d0 <col:12> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0xa63f1b4 <col:12> 'wchar_t' lvalue ParmVar 0xa63f0f0 'ch' 'wchar_t')))))


void fatal_error(const wchar_t *fmt, ...) (CompoundStmt 0xa6b6928 <../codeBase/fish-shell-master/builtin_printf.cpp:204:1, line:219:1>
  (IfStmt 0xa63f398 <line:206:5, line:207:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa63f378 <line:206:9> '_Bool' <LValueToRValue>
      (MemberExpr 0xa63f358 <col:9> '_Bool' lvalue ->early_exit 0xa63c340
        (CXXThisExpr 0xa63f348 <col:9> 'struct builtin_printf_state_t *' this)))
    (ReturnStmt 0xa63f388 <line:207:9>)
    <<<NULL>>>)
  (DeclStmt 0xa63f3f8 <line:209:5, col:15>
    0xa63f3c0 "va_list va")
  (CallExpr 0xa63f460 </usr/include/clang/3.0/include/stdarg.h:33:29, col:57> '_Bool'
    (ImplicitCastExpr 0xa63f450 <col:29> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa63f408 <col:29> 'void (__builtin_va_list &, ...)' lvalue Function 0xa20bdf0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0xa63f420 <../codeBase/fish-shell-master/builtin_printf.cpp:210:14> 'va_list':'char *' lvalue Var 0xa63f3c0 'va' 'va_list':'char *')
    (DeclRefExpr 0xa63f438 <col:18> 'const wchar_t *' lvalue ParmVar 0xa63f250 'fmt' 'const wchar_t *'))
  (DeclStmt 0xa63f660 <line:211:5, col:46>
    0xa63f490 "wcstring errstr =
      (ExprWithCleanups 0xa63f640 <col:23, col:45> 'wcstring':'class std::basic_string<wchar_t>'
        (CXXTemporary 0xa63f5e0)
        (CXXConstructExpr 0xa63f618 <col:23, col:45> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
          (MaterializeTemporaryExpr 0xa63f608 <col:23, col:45> 'const class std::basic_string<wchar_t>' lvalue
            (ImplicitCastExpr 0xa63f5f8 <col:23, col:45> 'const class std::basic_string<wchar_t>' <NoOp>
              (CXXBindTemporaryExpr 0xa63f5e8 <col:23, col:45> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0xa63f5e0)
                (CallExpr 0xa63f598 <col:23, col:45> 'wcstring':'class std::basic_string<wchar_t>'
                  (ImplicitCastExpr 0xa63f588 <col:23> 'wcstring (*)(const wchar_t *, va_list)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa63f52c <col:23> 'wcstring (const wchar_t *, va_list)' lvalue Function 0xa638300 'vformat_string' 'wcstring (const wchar_t *, va_list)'))
                  (ImplicitCastExpr 0xa63f5c0 <col:38> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa63f4fc <col:38> 'const wchar_t *' lvalue ParmVar 0xa63f250 'fmt' 'const wchar_t *'))
                  (ImplicitCastExpr 0xa63f5d0 <col:43> 'va_list':'char *' <LValueToRValue>
                    (DeclRefExpr 0xa63f514 <col:43> 'va_list':'char *' lvalue Var 0xa63f3c0 'va' 'va_list':'char *'))))))))")
  (CallExpr 0xa63f6b0 </usr/include/clang/3.0/include/stdarg.h:34:29, col:48> 'void'
    (ImplicitCastExpr 0xa63f6a0 <col:29> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa63f670 <col:29> 'void (__builtin_va_list &)' lvalue Function 0xa20f9b0 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0xa63f688 <../codeBase/fish-shell-master/builtin_printf.cpp:212:12> 'va_list':'char *' lvalue Var 0xa63f3c0 'va' 'va_list':'char *'))
  (BinaryOperator 0xa6b6910 <line:218:5, col:24> '_Bool' lvalue '='
    (MemberExpr 0xa6b68e0 <col:5, col:11> '_Bool' lvalue ->early_exit 0xa63c340
      (CXXThisExpr 0xa6b68d0 <col:5> 'struct builtin_printf_state_t *' this))
    (CXXBoolLiteralExpr 0xa6b6900 <col:24> '_Bool' true)))


extern float __builtin_tanhf(float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_addsubpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rcpps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_tanhl(long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_addsubps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_isunordered();
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubusw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern int __builtin_islessequal();
extern float __builtin_sqrtf(float);
extern float __builtin_expf(float);
extern long double __builtin_sqrtl(long double);
extern long double __builtin_expl(long double);
extern void __builtin_ia32_vzeroall();
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pi2fd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern float __builtin_erfcf(float);
extern long double __builtin_erfcl(long double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psubsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin___fprintf_chk(FILE *, int, const char *, ...);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pi2fw(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvttps2dq(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_cargf(_Complex float);
extern long double __builtin_cargl(_Complex long double);
extern void __sync_add_and_fetch();
extern int __builtin_ffsl(unsigned long);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_blendps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, int);
extern long long __builtin_llrint(double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rcpss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_isnan();
extern void __builtin_abort();
extern int __builtin_ia32_ptestnzc256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pcmpgtw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern float __builtin_atan2f(float, float);
extern long double __builtin_atan2l(long double, long double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovzxbq128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern float __builtin_nexttowardf(float, float);
extern long double __builtin_nexttowardl(long double, long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhrw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(32 * sizeof(char)))) char __builtin_ia32_lddqu256(const char *);
extern void __sync_synchronize();
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_minpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrlwi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern long long __builtin_ia32_cvtss2si64(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern _Complex double __builtin_conj(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_paddsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void *__builtin_dwarf_cfa();
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_maxpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_punpcklwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern double __builtin_trunc(double);
extern float __builtin_huge_valf();
extern float __builtin_copysignf(float, float);
extern long double __builtin_huge_vall();
extern long double __builtin_copysignl(long double, long double);
extern double __builtin_rint(double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhuw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern void __builtin_ia32_sfence();
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_rsqrtps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern float __builtin_fmodf(float, float);
extern _Complex double __builtin_csin(_Complex double);
extern long double __builtin_fmodl(long double, long double);
extern long __builtin_lround(double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvtpd2pi(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_ptestc256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern int __builtin_bcmp(void *, void *, unsigned int);
extern int __builtin_popcountl(unsigned long);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtpd2ps(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_psubusb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern float __builtin_truncf(float);
extern long double __builtin_truncl(long double);
extern int __builtin_ia32_ucomisdneq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pminsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern float __builtin_floorf(float);
extern float __builtin_cosf(float);
extern double __builtin_cosh(double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfsub(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmullw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long double __builtin_cosl(long double);
extern _Complex float __builtin_casinf(_Complex float);
extern _Complex double __builtin_casinh(_Complex double);
extern long double __builtin_floorl(long double);
extern _Complex long double __builtin_casinl(_Complex long double);
extern _Complex double __builtin_cacos(_Complex double);
extern int __builtin_ia32_comieq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmovsxbw128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern void __sync_fetch_and_sub();
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovzxdq128(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_paddd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_paddq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern float __builtin_powif(float, int);
extern void __atomic_fetch_xor();
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmaxsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern long double __builtin_powil(long double, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_packusdw128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pcmpeqb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern char __sync_fetch_and_sub_1(volatile char *, char, ...);
extern short __sync_fetch_and_sub_2(volatile short *, short, ...);
extern int __sync_fetch_and_sub_4(volatile int *, int, ...);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_hsubps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern long long __sync_fetch_and_sub_8(volatile long long *, long long, ...);
extern int __builtin_ia32_comige(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pabsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psadbw128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern int __builtin_ia32_comigt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvttps2pi(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_flt_rounds();
extern void __builtin_ia32_emms();
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psrlqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrawi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_phaddd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern float __builtin_nearbyintf(float);
extern float __builtin_coshf(float);
extern long double __builtin_nearbyintl(long double);
extern long double __builtin_coshl(long double);
extern float __builtin_asinhf(float);
extern void __builtin_ia32_storedqu256(char *, __attribute__((__vector_size__(32 * sizeof(char)))) char);
extern long double __builtin_asinhl(long double);
extern int __builtin___printf_chk(int, const char *, ...);
extern int __builtin_ia32_vtestcps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern int __builtin_signbitf(float);
extern int __builtin_signbitl(long double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfsubr(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern unsigned int __builtin_bswap32(unsigned int);
extern char *__builtin___stpncpy_chk(char *, const char *, unsigned int, unsigned int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psllw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmovzxwd128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_isfinite();
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_haddpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_haddps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_haddps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __int128_t __sync_swap_16(volatile __int128_t *, __int128_t, ...);
extern int __builtin_ia32_comile(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pminuw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern float __builtin_crealf(_Complex float);
extern long double __builtin_creall(_Complex long double);
extern int __builtin_ia32_comilt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmulld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_pmovmskb128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern unsigned long long __builtin_bswap64(unsigned long long);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pblendw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_dppd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_palignr(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char, char);
extern float __builtin_remainderf(float, float);
extern long double __builtin_remainderl(long double, long double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_dpps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfpnacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern char *__builtin_rindex(const char *, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmaxuw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfadd(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void __builtin_prefetch(const void *, ...);
extern int __builtin_ia32_ucomisdeq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin___vsnprintf_chk(char *, unsigned int, int, unsigned int, const char *, __builtin_va_list);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_roundpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern double __builtin_atan2(double, double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_roundps(__attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern float __builtin_powf(float, float);
extern double __builtin_powi(double, int);
extern long double __builtin_powl(long double, long double);
extern int __builtin_ia32_ucomisdge(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_vtestcpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_tgammaf(float);
extern int __builtin_ia32_ucomisdgt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_tgammal(long double);
extern float __builtin_atanf(float);
extern double __builtin_atanh(double);
extern long double __builtin_atanl(long double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pmaddwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern int __builtin_ia32_vtestcps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_phsubd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern void __builtin_ia32_movntpd256(double *, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern float __builtin_nextafterf(float, float);
extern _Complex float __builtin_casinhf(_Complex float);
extern long double __builtin_nextafterl(long double, long double);
extern _Complex long double __builtin_casinhl(_Complex long double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovzxwq128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phsubw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_roundsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern _Complex float __builtin_csinhf(_Complex float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_roundss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern _Complex long double __builtin_csinhl(_Complex long double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrldi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin_popcount(unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pslld(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern void __builtin_ia32_storeups256(float *, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_roundps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psllq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psllw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern float __builtin_rintf(float);
extern long double __builtin_rintl(long double);
extern int __builtin_ia32_ucomisdle(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcpit1(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcpit2(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern float __builtin_remquof(float, float, int *);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_cvtps2pd256(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_remquol(long double, long double, int *);
extern int __builtin_ia32_ucomisdlt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_log1pf(float);
extern long double __builtin_log1pl(long double);
extern int __builtin_parityll(unsigned long long);
extern void __sync_lock_release_16(volatile __int128_t *, ...);
extern unsigned long long __builtin_ia32_crc32di(unsigned long long, unsigned long long);
extern double __builtin_cabs(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pcmpgtb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pcmpgtd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pcmpgtq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_psignb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pcmpgtw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_movntdqa(__attribute__((__vector_size__(2 * sizeof(long long)))) long long *);
extern void __builtin_unreachable();
extern int __builtin_fprintf(FILE *, const char *, ...);
extern void __sync_lock_release();
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pslldi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern int __builtin_isgreaterequal();
extern void __builtin_unwind_init();
extern _Complex float __builtin_ctanf(_Complex float);
extern _Complex double __builtin_ctanh(_Complex double);
extern _Complex long double __builtin_ctanl(_Complex long double);
extern void __sync_fetch_and_and();
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_cmppd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double, char);
extern _Complex double __builtin_clog(_Complex double);
extern char *__builtin___strncpy_chk(char *, const char *, unsigned int, unsigned int);
extern double __builtin_log10(double);
extern double __builtin_lgamma(double);
extern unsigned int __builtin_ia32_crc32hi(unsigned int, unsigned short);
extern int __builtin___vprintf_chk(int, const char *, __builtin_va_list);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_packssdw(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern void __sync_sub_and_fetch();
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pavgb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_por(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phsubw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern double __builtin_log1p(double);
extern _Complex double __builtin_ctan(_Complex double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psradi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin___sprintf_chk(char *, int, unsigned int, const char *, ...);
extern float __builtin_log2f(float);
extern short __sync_sub_and_fetch_2(volatile short *, short, ...);
extern long double __builtin_log2l(long double);
extern char __sync_sub_and_fetch_1(volatile char *, char, ...);
extern long long __sync_sub_and_fetch_8(volatile long long *, long long, ...);
extern int __sync_sub_and_fetch_4(volatile int *, int, ...);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_loadupd256(const double *);
extern void __builtin_ia32_lfence();
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_addsubps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_blendpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, int);
extern _Complex double __builtin_casin(_Complex double);
extern int __builtin_ia32_cvtss2si(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_ia32_vtestzpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_blendps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern double __builtin_remainder(double, double);
extern int __builtin_ia32_vtestzps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrlwi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmuludq128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern void __builtin_bcopy(void *, void *, unsigned int);
extern void __builtin_ia32_storeupd(double *, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_comisdneq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __builtin_ia32_storeups(float *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_mpsadbw128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char, int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesimc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern long long __builtin_llround(double);
extern double __builtin_acos(double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psrldqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pcmpgtd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern _Complex double __builtin_cpow(_Complex double, _Complex double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_insertps128(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psubusw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern double __builtin_erfc(double);
extern long double __builtin_erfl(long double);
extern float __builtin_erff(float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_hsubpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psllqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_hsubps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern unsigned int __builtin_ia32_crc32qi(unsigned int, unsigned char);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmax(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void __builtin_ia32_femms();
extern int __sync_fetch_and_max(volatile int *, int);
extern _Complex float __builtin_cacosf(_Complex float);
extern _Complex double __builtin_cacosh(_Complex double);
extern char *__builtin_strcat(char *, const char *);
extern _Complex long double __builtin_cacosl(_Complex long double);
extern double __builtin_ceil(double);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psllqi(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pcmpeqw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern unsigned int __builtin_ia32_crc32si(unsigned int, unsigned int);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_blendvpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern double __builtin_carg(_Complex double);
extern float __builtin_inff();
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_packsswb128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern long double __builtin_infl();
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_paddusb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pmaddubsw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrlw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesdec128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psrawi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern int __builtin_ia32_ucomieq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern char __sync_fetch_and_xor_1(volatile char *, char, ...);
extern double __builtin_expm1(double);
extern short __sync_fetch_and_xor_2(volatile short *, short, ...);
extern int __sync_fetch_and_xor_4(volatile int *, int, ...);
extern long long __sync_fetch_and_xor_8(volatile long long *, long long, ...);
extern void __builtin_stdarg_start(__builtin_va_list &, ...);
extern void __sync_and_and_fetch();
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pmuludq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern char *__builtin___strcpy_chk(char *, const char *, unsigned int);
extern void __sync_fetch_and_xor();
extern void __builtin_ia32_maskstorepd(__attribute__((__vector_size__(2 * sizeof(double)))) double *, __attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_parity(unsigned int);
extern void __builtin_ia32_maskstoreps(__attribute__((__vector_size__(4 * sizeof(float)))) float *, __attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __int128_t __sync_add_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pminsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_ucomige(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_floor(double);
extern int __builtin_ia32_ucomigt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pminsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmovsxbd128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_lddqu(const char *);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psllwi(__attribute__((__vector_size__(4 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmin(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void __builtin_va_copy(__builtin_va_list &, __builtin_va_list &);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmaxsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern char *__builtin_strchr(const char *, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pminub(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_fdim(double, double);
extern int __sync_fetch_and_min(volatile int *, int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvttpd2dq(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __int128_t __sync_sub_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pabsd128(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_vtestnzcpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_blendpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_packsswb(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern float __builtin_roundf(float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmulhrsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern int __builtin_ia32_vtestnzcps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_roundl(long double);
extern void __builtin_ia32_maskmovdqu(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char, char *);
extern void __builtin_ia32_maskmovq(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char, char *);
extern unsigned int __builtin_strcspn(const char *, const char *);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pslldi128(__attribute__((__vector_size__(4 * sizeof(int)))) int, int);
extern int __builtin_ia32_ucomile(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pslld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ia32_ucomilt(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_modff(float, float *);
extern char __sync_fetch_and_or_1(volatile char *, char, ...);
extern short __sync_fetch_and_or_2(volatile short *, short, ...);
extern int __sync_fetch_and_or_4(volatile int *, int, ...);
extern long double __builtin_modfl(long double, long double *);
extern long long __sync_fetch_and_or_8(volatile long long *, long long, ...);
extern unsigned int __builtin_annotation(unsigned int, const char *);
extern void __atomic_signal_fence(int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pand(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern char __sync_lock_test_and_set_1(volatile char *, char, ...);
extern short __sync_lock_test_and_set_2(volatile short *, short, ...);
extern int __sync_lock_test_and_set_4(volatile int *, int, ...);
extern long long __sync_lock_test_and_set_8(volatile long long *, long long, ...);
extern double __builtin_frexp(double, int *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_minpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_minps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pminud128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_ilogbl(long double);
extern float __builtin_fabsf(float);
extern long double __builtin_fabsl(long double);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovsxbq128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmulhrsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_isless();
extern int __builtin_ilogbf(float);
extern void __builtin_bzero(void *, unsigned int);
extern int __builtin_isgreater();
extern float __builtin_atanhf(float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_rcpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmaxud128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phaddsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long double __builtin_atanhl(long double);
extern char *__builtin_strcpy(char *, const char *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_minsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern char __sync_xor_and_fetch_1(volatile char *, char, ...);
extern short __sync_xor_and_fetch_2(volatile short *, short, ...);
extern int __sync_xor_and_fetch_4(volatile int *, int, ...);
extern long long __sync_xor_and_fetch_8(volatile long long *, long long, ...);
extern _Complex double __builtin_cexp(_Complex double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_minss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern void __sync_xor_and_fetch();
extern int __builtin_ctzl(unsigned long);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrsqrt(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern float __builtin_tanf(float);
extern double __builtin_tanh(double);
extern long double __builtin_tanl(long double);
extern double __builtin_nexttoward(double, double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddsb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psignw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_strncasecmp(const char *, const char *, unsigned int);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psllq128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpeq(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void *__builtin___memcpy_chk(void *, const void *, unsigned int, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pslldqi128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, int);
extern __int128_t __sync_fetch_and_or_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfmul(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern void *__builtin_frob_return_addr(void *);
extern _Complex double __builtin_catan(_Complex double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrsqit1(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvttpd2pi(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpge(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_hsubpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_sqrtps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pfcmpgt(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_packssdw128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern float __builtin_fmaxf(float, float);
extern char *__builtin___strncat_chk(char *, const char *, unsigned int, unsigned int);
extern long double __builtin_fmaxl(long double, long double);
extern unsigned int __builtin_dwarf_sp_column();
extern float __builtin_cimagf(_Complex float);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovsxdq128(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern long double __builtin_cimagl(_Complex long double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pavgw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psraw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_ia32_vtestcpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_vpermilpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_psllwi128(__attribute__((__vector_size__(8 * sizeof(short)))) short, int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_asin(double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psubd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern void *__builtin___mempcpy_chk(void *, const void *, unsigned int, unsigned int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_vpermilps(__attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern char *__builtin_index(const char *, int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psubq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern int __builtin_ia32_vtestzps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern _Complex float __builtin_catanhf(_Complex float);
extern _Complex long double __builtin_catanhl(_Complex long double);
extern int __builtin_isinf_sign();
extern double __builtin_huge_val();
extern __int128_t __sync_fetch_and_add_16(volatile __int128_t *, __int128_t, ...);
extern float __builtin_asinf(float);
extern double __builtin_asinh(double);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_haddpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern long double __builtin_asinl(long double);
extern _Complex long double __builtin_ctanhl(_Complex long double);
extern _Complex float __builtin_ctanhf(_Complex float);
extern void __builtin_eh_return(unsigned int, void *);
extern _Complex float __builtin_csqrtf(_Complex float);
extern _Complex long double __builtin_csqrtl(_Complex long double);
extern double __builtin_fabs(double);
extern char *__builtin_strncat(char *, const char *, unsigned int);
extern unsigned long long __builtin_extend_pointer(void *);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rsqrtps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrsqrtit1(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern float __builtin_fminf(float, float);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmovsxwd128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern double __builtin_scalbn(double, int);
extern long double __builtin_fminl(long double, long double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pblendvb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pshufb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern int __builtin_ia32_pmovmskb(__attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pshufw(__attribute__((__vector_size__(4 * sizeof(short)))) short, char);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pxor(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern int __builtin___vfprintf_chk(FILE *, int, const char *, __builtin_va_list);
extern int __builtin_ia32_movmskps256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern int __builtin_signbit(double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_phsubd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern double __builtin_tgamma(double);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_cvtdq2ps256(__attribute__((__vector_size__(8 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_rsqrtss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_ia32_ptestz128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvtps2dq(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_fdimf(float, float);
extern long double __builtin_fdiml(long double, long double);
extern float __builtin_acoshf(float);
extern long double __builtin_acoshl(long double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psadbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern void *__builtin_frame_address(unsigned int);
extern _Complex float __builtin_csinf(_Complex float);
extern _Complex double __builtin_csinh(_Complex double);
extern _Complex long double __builtin_csinl(_Complex long double);
extern void __builtin_ia32_storeupd256(double *, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_paddusw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_roundpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, int);
extern char *__builtin_stpncpy(char *, const char *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmovsxwq128(__attribute__((__vector_size__(8 * sizeof(short)))) short);
extern long __builtin_lrint(double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_maskloadpd(__attribute__((__vector_size__(2 * sizeof(double)))) double const *, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long __builtin_lrintf(float);
extern long __builtin_lrintl(long double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_maskloadps(__attribute__((__vector_size__(4 * sizeof(float)))) float const *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern void __builtin_ia32_clflush(const void *);
extern double __builtin_scalbln(double, long);
extern __int128_t __sync_fetch_and_xor_16(volatile __int128_t *, __int128_t, ...);
extern double __builtin_cbrt(double);
extern char *__builtin___strcat_chk(char *, const char *, unsigned int);
extern float __builtin_scalbnf(float, int);
extern long double __builtin_scalbnl(long double, int);
extern float __builtin_expm1f(float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_minps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern int __builtin_fpclassify(int, int, int, int, ...);
extern long double __builtin_expm1l(long double);
extern int __builtin_classify_type();
extern int __builtin_isnormal();
extern int __builtin_strncmp(const char *, const char *, unsigned int);
extern void __builtin_ia32_vzeroupper();
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pcmpeqd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern float __builtin_sinhf(float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phsubsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern void *__builtin___memset_chk(void *, int, unsigned int, unsigned int);
extern long double __builtin_sinhl(long double);
extern char __sync_fetch_and_and_1(volatile char *, char, ...);
extern short __sync_fetch_and_and_2(volatile short *, short, ...);
extern int __sync_fetch_and_and_4(volatile int *, int, ...);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_maxps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern long long __sync_fetch_and_and_8(volatile long long *, long long, ...);
extern long __builtin_lroundf(float);
extern long __builtin_lroundl(long double);
extern _Complex float __builtin_cacoshf(_Complex float);
extern double __builtin_creal(_Complex double);
extern float __builtin_logbf(float);
extern _Complex long double __builtin_cacoshl(_Complex long double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_sqrtpd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrld128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern long double __builtin_logbl(long double);
extern _Complex float __builtin_ccoshf(_Complex float);
extern int __builtin_ia32_comineq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern _Complex long double __builtin_ccoshl(_Complex long double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psubsb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_sqrtps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __int128_t __sync_or_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern double __builtin_round(double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_psignb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psubsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psignd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pcmpeqb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pcmpeqd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmovzxbw128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtps2pd(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pcmpeqq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psignw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern char *__builtin_strncpy(char *, const char *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfrcp(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_cvtps2pi(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pcmpeqw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pabsb(__attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pabsd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern _Complex double __builtin_cproj(_Complex double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pavgusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern int __builtin___snprintf_chk(char *, unsigned int, int, unsigned int, const char *, ...);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pabsw(__attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_sqrtsd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_addsubpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern void __builtin_longjmp(void **, int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_aesenc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern void *__builtin_mempcpy(void *, const void *, unsigned int);
extern int __builtin_ia32_cvtsd2si(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_sqrtss(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern double __builtin_modf(double, double *);
extern char *__builtin_strrchr(const char *, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmaddwd128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void __builtin_ia32_ldmxcsr(unsigned int);
extern float __builtin_ldexpf(float, int);
extern float __builtin_log10f(float);
extern long double __builtin_ldexpl(long double, int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pf2id(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern long double __builtin_log10l(long double);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pf2iw(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __int128_t __sync_xor_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrad(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern unsigned int __builtin_strspn(const char *, const char *);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_psrlq128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psraw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_blendvpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern double __builtin_atan(double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmulhw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern _Complex float __builtin_clogf(_Complex float);
extern _Complex long double __builtin_clogl(_Complex long double);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_blendvps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern float __builtin_fmaf(float, float, float);
extern long double __builtin_fmal(long double, long double, long double);
extern int __builtin_ia32_ptestnzc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern double __builtin_fmax(double, double);
extern _Complex float __builtin_catanf(_Complex float);
extern void __builtin_ia32_storelv4si(__attribute__((__vector_size__(2 * sizeof(int)))) int *, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern _Complex double __builtin_catanh(_Complex double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pshufb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __int128_t __sync_fetch_and_sub_16(volatile __int128_t *, __int128_t, ...);
extern _Complex long double __builtin_catanl(_Complex long double);
extern int __builtin_vsprintf(char *, const char *, __builtin_va_list);
extern void __sync_or_and_fetch();
extern long long __builtin_llroundf(float);
extern long long __builtin_llroundl(long double);
extern char *__builtin_strstr(const char *, const char *);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtdq2pd(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_pandn(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cmppd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern float __builtin_ceilf(float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtdq2ps(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern int __builtin_parityl(unsigned long);
extern long double __builtin_ceill(long double);
extern void __atomic_exchange();
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cmpps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_phaddd(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_psubsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern char __sync_add_and_fetch_1(volatile char *, char, ...);
extern short __sync_add_and_fetch_2(volatile short *, short, ...);
extern int __sync_add_and_fetch_4(volatile int *, int, ...);
extern long long __sync_add_and_fetch_8(volatile long long *, long long, ...);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_phaddw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern _Complex double __builtin_csqrt(_Complex double);
extern void __builtin_ia32_mwait(unsigned int, unsigned int);
extern char *__builtin___stpcpy_chk(char *, const char *, unsigned int);
extern char *__builtin_strdup(const char *);
extern int __builtin_printf(const char *, ...);
extern double __builtin_hypot(double, double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pcmpgtb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern _Complex float __builtin_cexpf(_Complex float);
extern _Complex long double __builtin_cexpl(_Complex long double);
extern void __atomic_thread_fence(int);
extern unsigned int __sync_fetch_and_umax(volatile unsigned int *, unsigned int);
extern char __sync_and_and_fetch_1(volatile char *, char, ...);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cmpsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double, char);
extern short __sync_and_and_fetch_2(volatile short *, short, ...);
extern int __sync_and_and_fetch_4(volatile int *, int, ...);
extern void *__builtin___memmove_chk(void *, const void *, unsigned int, unsigned int);
extern long long __sync_and_and_fetch_8(volatile long long *, long long, ...);
extern double __builtin_copysign(double, double);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psignd128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cmpss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float, char);
extern int __builtin_ffsll(unsigned long long);
extern int __builtin_ia32_ptestc128(__attribute__((__vector_size__(2 * sizeof(long long)))) long long, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern int __builtin_ia32_movmskpd(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern int __builtin_ia32_movmskps(__attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_popcountll(unsigned long long);
extern int __builtin_isinf();
extern void __builtin_ia32_movntps256(float *, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern float __builtin_scalblnf(float, long);
extern double __builtin_fmin(double, double);
extern float __builtin_acosf(float);
extern double __builtin_acosh(double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_paddusb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern long double __builtin_acosl(long double);
extern unsigned int __builtin_object_size(const void *, int);
extern __attribute__((__vector_size__(32 * sizeof(char)))) char __builtin_ia32_loaddqu256(const char *);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_paddsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern long double __builtin_scalblnl(long double, long);
extern double __builtin_ldexp(double, int);
extern void __builtin_ia32_storedqu(char *, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_paddusw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern _Complex float __builtin_conjf(_Complex float);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrld(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern float __builtin_lgammaf(float);
extern _Complex long double __builtin_conjl(_Complex long double);
extern long double __builtin_lgammal(long double);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psrlq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern void __sync_fetch_and_or();
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_psrlw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern int __builtin_ia32_comisdeq(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __atomic_fetch_sub();
extern void __sync_lock_release_1(volatile char *, ...);
extern void __sync_lock_release_2(volatile short *, ...);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phaddw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void __sync_lock_release_4(volatile int *, ...);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_psrad128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern void __sync_lock_release_8(volatile long long *, ...);
extern int __builtin_ia32_comisdge(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_punpckhbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern double __builtin_cimag(_Complex double);
extern void __builtin_ia32_mfence();
extern int __builtin_ia32_comisdgt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern float __builtin_sinf(float);
extern double __builtin_sinh(double);
extern long double __builtin_sinl(long double);
extern int __builtin_islessgreater();
extern float __builtin_nanf(const char *);
extern long double __builtin_nanl(const char *);
extern int __builtin___vsprintf_chk(char *, int, unsigned int, const char *, __builtin_va_list);
extern double __builtin_nans(const char *);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pminsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern int __builtin_snprintf(char *, unsigned int, const char *, ...);
extern int __builtin_strcasecmp(const char *, const char *);
extern unsigned int __sync_fetch_and_umin(volatile unsigned int *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_punpckhdq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern void __builtin_shufflevector();
extern double __builtin_fmod(double, double);
extern double __builtin_nearbyint(double);
extern void __builtin_ia32_monitor(void *, unsigned int, unsigned int);
extern double __builtin_remquo(double, double, int *);
extern _Complex float __builtin_cprojf(_Complex float);
extern _Complex long double __builtin_cprojl(_Complex long double);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pmaxsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __int128_t __sync_fetch_and_and_16(volatile __int128_t *, __int128_t, ...);
extern float __builtin_cabsf(_Complex float);
extern long double __builtin_cabsl(_Complex long double);
extern void __builtin_ia32_storehps(__attribute__((__vector_size__(2 * sizeof(int)))) int *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_cmpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, char);
extern _Complex double __builtin_ccosh(_Complex double);
extern _Complex float __builtin_ccosf(_Complex float);
extern char __sync_or_and_fetch_1(volatile char *, char, ...);
extern _Complex long double __builtin_ccosl(_Complex long double);
extern short __sync_or_and_fetch_2(volatile short *, short, ...);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pabsb128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pmaxsw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern long long __sync_or_and_fetch_8(volatile long long *, long long, ...);
extern float __builtin_hypotf(float, float);
extern int __sync_or_and_fetch_4(volatile int *, int, ...);
extern long long __builtin_llrintf(float);
extern int __builtin_ia32_comisdle(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long long __builtin_llrintl(long double);
extern int __builtin_ia32_ucomineq(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern long double __builtin_hypotl(long double, long double);
extern _Complex double __builtin_ccos(_Complex double);
extern int __builtin_ia32_comisdlt(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern void __builtin_ia32_movntdq256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long *, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern int __builtin_ia32_ptestz256(__attribute__((__vector_size__(4 * sizeof(long long)))) long long, __attribute__((__vector_size__(4 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pmaxub(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtpd2ps256(__attribute__((__vector_size__(4 * sizeof(double)))) double);
extern double __builtin_nextafter(double, double);
extern int __builtin_setjmp(void **) __attribute((returns_twice));
extern void __builtin_ia32_movntdq(__attribute__((__vector_size__(2 * sizeof(long long)))) long long *, __attribute__((__vector_size__(2 * sizeof(long long)))) long long);
extern int __builtin_ctzll(unsigned long long);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psrldi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_loadups256(const float *);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_punpcklbw(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern float __builtin_cbrtf(float);
extern float __builtin_nansf(const char *);
extern long double __builtin_cbrtl(long double);
extern void __atomic_fetch_add();
extern void __builtin_trap();
extern long double __builtin_nansl(const char *);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_pswapdsi(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pswapdsf(__attribute__((__vector_size__(2 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_sqrtpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double);
extern void __builtin_ia32_movnti(int *, int);
extern void __builtin_ia32_movntq(__attribute__((__vector_size__(1 * sizeof(long long)))) long long *, __attribute__((__vector_size__(1 * sizeof(long long)))) long long);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pminub128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_pavgb(__attribute__((__vector_size__(8 * sizeof(char)))) char, __attribute__((__vector_size__(8 * sizeof(char)))) char);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_punpckldq(__attribute__((__vector_size__(2 * sizeof(int)))) int, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(int)))) int __builtin_ia32_cvtps2dq256(__attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_pavgw(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern unsigned int __builtin_ia32_stmxcsr();
extern float __builtin_exp2f(float);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_maxpd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_exp2l(long double);
extern int __builtin_ilogb(double);
extern long double __builtin_frexpl(long double, int *);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_maxps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_pmaxub128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char);
extern float __builtin_frexpf(float, int *);
extern char __sync_fetch_and_add_1(volatile char *, char, ...);
extern short __sync_fetch_and_add_2(volatile short *, short, ...);
extern long long __sync_fetch_and_add_8(volatile long long *, long long, ...);
extern char *__builtin_stpcpy(char *, const char *);
extern void __builtin_ia32_storelps(__attribute__((__vector_size__(2 * sizeof(int)))) int *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern int __builtin_ia32_vtestzpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double, __attribute__((__vector_size__(4 * sizeof(double)))) double);
extern void __atomic_fetch_or();
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phsubsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void *__builtin_return_address(unsigned int);
extern void __sync_lock_test_and_set();
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_maxsd(__attribute__((__vector_size__(2 * sizeof(double)))) double, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern double __builtin_log2(double);
extern __attribute__((__vector_size__(2 * sizeof(double)))) double __builtin_ia32_cvtpi2pd(__attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_maxss(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern __attribute__((__vector_size__(4 * sizeof(float)))) float __builtin_ia32_cvtpi2ps(__attribute__((__vector_size__(4 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(int)))) int);
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_cvtpd2dq256(__attribute__((__vector_size__(4 * sizeof(double)))) double);
extern __attribute__((__vector_size__(2 * sizeof(float)))) float __builtin_ia32_pfnacc(__attribute__((__vector_size__(2 * sizeof(float)))) float, __attribute__((__vector_size__(2 * sizeof(float)))) float);
extern _Complex float __builtin_cpowf(_Complex float, _Complex float);
extern double __builtin_logb(double);
extern _Complex long double __builtin_cpowl(_Complex long double, _Complex long double);
extern float __builtin_logf(float);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_packuswb128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern long long __builtin_ia32_cvtsd2si64(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern long double __builtin_logl(long double);
extern void __atomic_store();
extern __attribute__((__vector_size__(16 * sizeof(char)))) char __builtin_ia32_palignr128(__attribute__((__vector_size__(16 * sizeof(char)))) char, __attribute__((__vector_size__(16 * sizeof(char)))) char, char);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_pmuldq128(__attribute__((__vector_size__(4 * sizeof(int)))) int, __attribute__((__vector_size__(4 * sizeof(int)))) int);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_blendvps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float);
extern __attribute__((__vector_size__(8 * sizeof(char)))) char __builtin_ia32_packuswb(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(2 * sizeof(int)))) int __builtin_ia32_psradi(__attribute__((__vector_size__(2 * sizeof(int)))) int, int);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_phaddsw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern int __builtin_ia32_movmskpd256(__attribute__((__vector_size__(4 * sizeof(double)))) double);
extern char *__builtin_strpbrk(const char *, const char *);
extern __attribute__((__vector_size__(4 * sizeof(double)))) double __builtin_ia32_cvtdq2pd256(__attribute__((__vector_size__(4 * sizeof(int)))) int);
extern void __builtin_ia32_movntpd(double *, __attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __attribute__((__vector_size__(8 * sizeof(short)))) short __builtin_ia32_pmulhuw128(__attribute__((__vector_size__(8 * sizeof(short)))) short, __attribute__((__vector_size__(8 * sizeof(short)))) short);
extern void __atomic_fetch_and();
extern __attribute__((__vector_size__(4 * sizeof(int)))) int __builtin_ia32_pmovzxbd128(__attribute__((__vector_size__(16 * sizeof(char)))) char);
extern void __builtin_ia32_movntps(float *, __attribute__((__vector_size__(4 * sizeof(float)))) float);
extern char *__builtin_strndup(const char *, unsigned int);
extern __attribute__((__vector_size__(2 * sizeof(long long)))) long long __builtin_ia32_cvtpd2dq(__attribute__((__vector_size__(2 * sizeof(double)))) double);
extern __int128_t __sync_and_and_fetch_16(volatile __int128_t *, __int128_t, ...);
extern __attribute__((__vector_size__(8 * sizeof(float)))) float __builtin_ia32_dpps256(__attribute__((__vector_size__(8 * sizeof(float)))) float, __attribute__((__vector_size__(8 * sizeof(float)))) float, int);
extern int __builtin_constant_p();
extern double __builtin_exp2(double);
extern __attribute__((__vector_size__(4 * sizeof(short)))) short __builtin_ia32_punpckhwd(__attribute__((__vector_size__(4 * sizeof(short)))) short, __attribute__((__vector_size__(4 * sizeof(short)))) short);
extern __attribute__((__vector_size__(1 * sizeof(long long)))) long long __builtin_ia32_psrlqi(__attribute__((__vector_size__(1 * sizeof(long long)))) long long, int);
extern double __builtin_sqrt(double);
void append_output(wchar_t c) (CompoundStmt 0xa6b6ad8 <../codeBase/fish-shell-master/builtin_printf.cpp:222:1, line:228:1>
  (IfStmt 0xa6b6aa0 <line:224:5, line:225:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6b6a80 <line:224:9> '_Bool' <LValueToRValue>
      (MemberExpr 0xa6b6a60 <col:9> '_Bool' lvalue ->early_exit 0xa63c340
        (CXXThisExpr 0xa6b6a50 <col:9> 'struct builtin_printf_state_t *' this)))
    (ReturnStmt 0xa6b6a90 <line:225:9>)
    <<<NULL>>>))


void append_output(const wchar_t *c) (CompoundStmt 0xa6b6c78 <../codeBase/fish-shell-master/builtin_printf.cpp:231:1, line:237:1>
  (IfStmt 0xa6b6c40 <line:233:5, line:234:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6b6c20 <line:233:9> '_Bool' <LValueToRValue>
      (MemberExpr 0xa6b6c00 <col:9> '_Bool' lvalue ->early_exit 0xa63c340
        (CXXThisExpr 0xa6b6bf0 <col:9> 'struct builtin_printf_state_t *' this)))
    (ReturnStmt 0xa6b6c30 <line:234:9>)
    <<<NULL>>>))


void append_format_output(const wchar_t *fmt, ...) (CompoundStmt 0xa6b6f70 <../codeBase/fish-shell-master/builtin_printf.cpp:240:1, line:249:1>
  (IfStmt 0xa6b6de0 <line:242:5, line:243:9>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6b6dc0 <line:242:9> '_Bool' <LValueToRValue>
      (MemberExpr 0xa6b6da0 <col:9> '_Bool' lvalue ->early_exit 0xa63c340
        (CXXThisExpr 0xa6b6d90 <col:9> 'struct builtin_printf_state_t *' this)))
    (ReturnStmt 0xa6b6dd0 <line:243:9>)
    <<<NULL>>>)
  (DeclStmt 0xa6b6e48 <line:245:5, col:15>
    0xa6b6e10 "va_list va")
  (CallExpr 0xa6b6eb0 </usr/include/clang/3.0/include/stdarg.h:33:29, col:57> '_Bool'
    (ImplicitCastExpr 0xa6b6ea0 <col:29> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa6b6e58 <col:29> 'void (__builtin_va_list &, ...)' lvalue Function 0xa20bdf0 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0xa6b6e70 <../codeBase/fish-shell-master/builtin_printf.cpp:246:14> 'va_list':'char *' lvalue Var 0xa6b6e10 'va' 'va_list':'char *')
    (DeclRefExpr 0xa6b6e88 <col:18> 'const wchar_t *' lvalue ParmVar 0xa6b6cb0 'fmt' 'const wchar_t *'))
  (CallExpr 0xa6b6f50 </usr/include/clang/3.0/include/stdarg.h:34:29, col:48> 'void'
    (ImplicitCastExpr 0xa6b6f40 <col:29> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0xa6b6f0c <col:29> 'void (__builtin_va_list &)' lvalue Function 0xa20f9b0 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0xa6b6f24 <../codeBase/fish-shell-master/builtin_printf.cpp:248:12> 'va_list':'char *' lvalue Var 0xa6b6e10 'va' 'va_list':'char *')))


void verify_numeric(const wchar_t *s, const wchar_t *end, int errcode) (CompoundStmt 0xa6b7858 <../codeBase/fish-shell-master/builtin_printf.cpp:253:1, line:265:1>
  (IfStmt 0xa6b7838 <line:254:5, line:264:5>
    <<<NULL>>>
    (BinaryOperator 0xa6b7188 <line:254:9, col:20> '_Bool' '!='
      (ImplicitCastExpr 0xa6b7178 <col:9> 'int' <LValueToRValue>
        (DeclRefExpr 0xa6b7144 <col:9> 'int' lvalue ParmVar 0xa6b7050 'errcode' 'int'))
      (IntegerLiteral 0xa6b7160 <col:20> 'int' 0))
    (CompoundStmt 0xa6b7390 <line:255:5, line:257:5>
      (CXXMemberCallExpr 0xa6b7348 <line:256:9, col:59> 'void'
        (MemberExpr 0xa6b71b0 <col:9, col:15> '<bound member function type>' ->fatal_error 0xa63f2a0
          (CXXThisExpr 0xa6b71a0 <col:9> 'struct builtin_printf_state_t *' this))
        (ImplicitCastExpr 0xa6b7370 <col:27> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0xa6b7210 <col:27> 'const wchar_t [8]' lvalue L"%\000\000\000l\000\000\000s\000\000\000:\000\000\000 \000\000\000%\000\000\000s\000\000\000"))
        (ImplicitCastExpr 0xa6b7380 <col:39> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa6b7248 <col:39> 'const wchar_t *' lvalue ParmVar 0xa6b6fb0 's' 'const wchar_t *'))
        (CallExpr 0xa6b7318 <col:42, col:58> 'char *'
          (ImplicitCastExpr 0xa6b7308 <col:42> 'char *(*)(int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0xa6b72ac <col:42> 'char *(int) throw()' lvalue Function 0xa5fbee0 'strerror' 'char *(int) throw()'))
          (ImplicitCastExpr 0xa6b7338 <col:51> 'int' <LValueToRValue>
            (DeclRefExpr 0xa6b7294 <col:51> 'int' lvalue ParmVar 0xa6b7050 'errcode' 'int')))))
    (IfStmt 0xa6b7818 <line:258:10, line:264:5>
      <<<NULL>>>
      (ImplicitCastExpr 0xa6b73f8 <line:258:14, col:15> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0xa6b73e8 <col:14, col:15> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6b73d0 <col:14, col:15> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6b73c0 <col:15> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6b73a4 <col:15> 'const wchar_t *' lvalue ParmVar 0xa6b7000 'end' 'const wchar_t *')))))
      (CompoundStmt 0xa6b7808 <line:259:5, line:264:5>)
      <<<NULL>>>)))


extern void __noop();
template <typename T = long double> static long double raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b8880 <../codeBase/fish-shell-master/builtin_printf.cpp:285:1, line:287:1>
  (ReturnStmt 0xa6b8870 <line:286:5, col:27>
    (ImplicitCastExpr 0xa6b8860 <col:12, col:27> 'long double' <FloatingCast>
      (CallExpr 0xa6b8818 <col:12, col:27> 'double'
        (ImplicitCastExpr 0xa6b8808 <col:12> 'double (*)(const wchar_t *, wchar_t **)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa6b87ec <col:12> 'double (const wchar_t *, wchar_t **)' lvalue Function 0xa63e8a0 'C_STRTOD' 'double (const wchar_t *, wchar_t **)'))
        (ImplicitCastExpr 0xa6b8840 <col:21> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa6b87bc <col:21> 'const wchar_t *' lvalue ParmVar 0xa6b8460 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa6b8850 <col:24> 'wchar_t **' <LValueToRValue>
          (DeclRefExpr 0xa6b87d4 <col:24> 'wchar_t **' lvalue ParmVar 0xa6b84b0 'end' 'wchar_t **'))))))

template <typename T = unsigned long long> static uintmax_t raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b8420 <../codeBase/fish-shell-master/builtin_printf.cpp:279:1, line:281:1>
  (ReturnStmt 0xa6b8410 <line:280:5, col:30>
    (CallExpr 0xa6b83c8 <col:12, col:30> 'unsigned long long'
      (ImplicitCastExpr 0xa6b83b8 <col:12> 'unsigned long long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6b8368 <col:12> 'unsigned long long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0xa114050 'wcstoull' 'unsigned long long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
      (ImplicitCastExpr 0xa6b83f0 <col:21> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6b831c <col:21> 'const wchar_t *' lvalue ParmVar 0xa6b7f80 's' 'const wchar_t *'))
      (ImplicitCastExpr 0xa6b8400 <col:24> 'wchar_t **' <LValueToRValue>
        (DeclRefExpr 0xa6b8334 <col:24> 'wchar_t **' lvalue ParmVar 0xa6b7fd0 'end' 'wchar_t **'))
      (IntegerLiteral 0xa6b8350 <col:29> 'int' 0))))

template <typename T = long long> static intmax_t raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b7f40 <../codeBase/fish-shell-master/builtin_printf.cpp:273:1, line:275:1>
  (ReturnStmt 0xa6b7f30 <line:274:5, col:29>
    (CallExpr 0xa6b7ee8 <col:12, col:29> 'long long'
      (ImplicitCastExpr 0xa6b7ed8 <col:12> 'long long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6b7e88 <col:12> 'long long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0xa113ea0 'wcstoll' 'long long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
      (ImplicitCastExpr 0xa6b7f10 <col:20> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6b7e3c <col:20> 'const wchar_t *' lvalue ParmVar 0xa6b7a80 's' 'const wchar_t *'))
      (ImplicitCastExpr 0xa6b7f20 <col:23> 'wchar_t **' <LValueToRValue>
        (DeclRefExpr 0xa6b7e54 <col:23> 'wchar_t **' lvalue ParmVar 0xa6b7ad0 'end' 'wchar_t **'))
      (IntegerLiteral 0xa6b7e70 <col:28> 'int' 0))))

template <typename T> static T raw_string_to_scalar_type(const wchar_t *s, wchar_t **end);
static intmax_t raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b7f40 <../codeBase/fish-shell-master/builtin_printf.cpp:273:1, line:275:1>
  (ReturnStmt 0xa6b7f30 <line:274:5, col:29>
    (CallExpr 0xa6b7ee8 <col:12, col:29> 'long long'
      (ImplicitCastExpr 0xa6b7ed8 <col:12> 'long long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6b7e88 <col:12> 'long long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0xa113ea0 'wcstoll' 'long long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
      (ImplicitCastExpr 0xa6b7f10 <col:20> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6b7e3c <col:20> 'const wchar_t *' lvalue ParmVar 0xa6b7a80 's' 'const wchar_t *'))
      (ImplicitCastExpr 0xa6b7f20 <col:23> 'wchar_t **' <LValueToRValue>
        (DeclRefExpr 0xa6b7e54 <col:23> 'wchar_t **' lvalue ParmVar 0xa6b7ad0 'end' 'wchar_t **'))
      (IntegerLiteral 0xa6b7e70 <col:28> 'int' 0))))


static uintmax_t raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b8420 <../codeBase/fish-shell-master/builtin_printf.cpp:279:1, line:281:1>
  (ReturnStmt 0xa6b8410 <line:280:5, col:30>
    (CallExpr 0xa6b83c8 <col:12, col:30> 'unsigned long long'
      (ImplicitCastExpr 0xa6b83b8 <col:12> 'unsigned long long (*)(const wchar_t *restrict, wchar_t **restrict, int) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0xa6b8368 <col:12> 'unsigned long long (const wchar_t *restrict, wchar_t **restrict, int) throw()' lvalue Function 0xa114050 'wcstoull' 'unsigned long long (const wchar_t *restrict, wchar_t **restrict, int) throw()'))
      (ImplicitCastExpr 0xa6b83f0 <col:21> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa6b831c <col:21> 'const wchar_t *' lvalue ParmVar 0xa6b7f80 's' 'const wchar_t *'))
      (ImplicitCastExpr 0xa6b8400 <col:24> 'wchar_t **' <LValueToRValue>
        (DeclRefExpr 0xa6b8334 <col:24> 'wchar_t **' lvalue ParmVar 0xa6b7fd0 'end' 'wchar_t **'))
      (IntegerLiteral 0xa6b8350 <col:29> 'int' 0))))


static long double raw_string_to_scalar_type(const wchar_t *s, wchar_t **end) (CompoundStmt 0xa6b8880 <../codeBase/fish-shell-master/builtin_printf.cpp:285:1, line:287:1>
  (ReturnStmt 0xa6b8870 <line:286:5, col:27>
    (ImplicitCastExpr 0xa6b8860 <col:12, col:27> 'long double' <FloatingCast>
      (CallExpr 0xa6b8818 <col:12, col:27> 'double'
        (ImplicitCastExpr 0xa6b8808 <col:12> 'double (*)(const wchar_t *, wchar_t **)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa6b87ec <col:12> 'double (const wchar_t *, wchar_t **)' lvalue Function 0xa63e8a0 'C_STRTOD' 'double (const wchar_t *, wchar_t **)'))
        (ImplicitCastExpr 0xa6b8840 <col:21> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa6b87bc <col:21> 'const wchar_t *' lvalue ParmVar 0xa6b8460 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa6b8850 <col:24> 'wchar_t **' <LValueToRValue>
          (DeclRefExpr 0xa6b87d4 <col:24> 'wchar_t **' lvalue ParmVar 0xa6b84b0 'end' 'wchar_t **'))))))


template <typename T = long double> static long double string_to_scalar_type(const wchar_t *s, builtin_printf_state_t *state) (CompoundStmt 0xa666d50 <../codeBase/fish-shell-master/builtin_printf.cpp:291:1, line:306:1>
  (DeclStmt 0xa666648 <line:292:5, col:10>
    0xa666610 "long double val")
  (IfStmt 0xa666cf8 <line:293:5, line:304:5>
    <<<NULL>>>
    (BinaryOperator 0xa666728 <line:293:9, col:30> '_Bool' '||'
      (BinaryOperator 0xa6666a8 <col:9, col:15> '_Bool' '=='
        (ImplicitCastExpr 0xa666698 <col:9, col:10> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa666680 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa666670 <col:10> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa666658 <col:10> 'const wchar_t *' lvalue ParmVar 0xa6723c0 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8b28 <col:15> 'wchar_t'34))
      (BinaryOperator 0xa666710 <col:24, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa666700 <col:24, col:25> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6666e8 <col:24, col:25> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6666d8 <col:25> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6666c0 <col:25> 'const wchar_t *' lvalue ParmVar 0xa6723c0 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8ba8 <col:30> 'wchar_t'39)))
    (CompoundStmt 0xa666868 <line:294:5, line:297:5>
      (DeclStmt 0xa6667f0 <line:295:9, col:35>
        0xa666740 "unsigned int ch =
          (ImplicitCastExpr 0xa6667e0 <col:31, col:34> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa6667d0 <col:31, col:34> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa6667b8 <col:31, col:34> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa6667a8 <col:32, col:34> 'const wchar_t *' <LValueToRValue>
                  (UnaryOperator 0xa666790 <col:32, col:34> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa666774 <col:34> 'const wchar_t *' lvalue ParmVar 0xa6723c0 's' 'const wchar_t *'))))))")
      (BinaryOperator 0xa666850 <line:296:9, col:15> 'long double':'long double' lvalue '='
        (DeclRefExpr 0xa666800 <col:9> 'long double':'long double' lvalue Var 0xa666610 'val' 'long double':'long double')
        (ImplicitCastExpr 0xa666840 <col:15> 'long double':'long double' <IntegralToFloating>
          (ImplicitCastExpr 0xa666830 <col:15> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa666818 <col:15> 'unsigned int' lvalue Var 0xa666740 'ch' 'unsigned int')))))
    (CompoundStmt 0xa666cd8 <line:299:5, line:304:5>
      (DeclStmt 0xa6668c8 <line:300:9, col:28>
        0xa666880 "wchar_t *end =
          (ImplicitCastExpr 0xa6668b8 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
            (GNUNullExpr 0xa6b8d78 <col:14> 'int'))")
      (BinaryOperator 0xa666938 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' lvalue '='
        (ParenExpr 0xa666920 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0xa666908 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0xa6668e8 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0xa6668d8 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6b8ddc <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0xa6b8e98 <../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' 0))
      (BinaryOperator 0xa666b90 <line:302:9, col:51> 'long double':'long double' lvalue '='
        (DeclRefExpr 0xa666950 <col:9> 'long double':'long double' lvalue Var 0xa666610 'val' 'long double':'long double')
        (CallExpr 0xa666b58 <col:15, col:51> 'long double'
          (ImplicitCastExpr 0xa666b48 <col:15, col:42> 'long double (*)(const wchar_t *, wchar_t **)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa666ad8 <col:15, col:42> 'long double (const wchar_t *, wchar_t **)' lvalue Function 0xa6b8510 'raw_string_to_scalar_type' 'long double (const wchar_t *, wchar_t **)' (FunctionTemplate 0xa6b7a30 'raw_string_to_scalar_type')))
          (ImplicitCastExpr 0xa666b80 <col:44> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6669d8 <col:44> 'const wchar_t *' lvalue ParmVar 0xa6723c0 's' 'const wchar_t *'))
          (UnaryOperator 0xa666a08 <col:47, col:48> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa6669f0 <col:48> 'wchar_t *' lvalue Var 0xa666880 'end' 'wchar_t *'))))
      (CXXMemberCallExpr 0xa666c70 <line:303:9, col:44> 'void'
        (MemberExpr 0xa666bc0 <col:9, col:16> '<bound member function type>' ->verify_numeric 0xa6b70b0
          (DeclRefExpr 0xa666ba8 <col:9> 'struct builtin_printf_state_t *' lvalue ParmVar 0xa672400 'state' 'struct builtin_printf_state_t *'))
        (ImplicitCastExpr 0xa666c98 <col:31> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa666be0 <col:31> 'const wchar_t *' lvalue ParmVar 0xa6723c0 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa666cb8 <col:34> 'const wchar_t *' <NoOp>
          (ImplicitCastExpr 0xa666ca8 <col:34> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa666bf8 <col:34> 'wchar_t *' lvalue Var 0xa666880 'end' 'wchar_t *')))
        (ImplicitCastExpr 0xa666cc8 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' <LValueToRValue>
          (ParenExpr 0xa666c58 <col:18, col:39> 'int' lvalue
            (UnaryOperator 0xa666c40 <col:19, col:38> 'int' lvalue prefix '*'
              (CallExpr 0xa666c20 <col:20, col:38> 'int *'
                (ImplicitCastExpr 0xa666c10 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6b9084 <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))))))
  (ReturnStmt 0xa666d40 <../codeBase/fish-shell-master/builtin_printf.cpp:305:5, col:12>
    (ImplicitCastExpr 0xa666d30 <col:12> 'long double':'long double' <LValueToRValue>
      (DeclRefExpr 0xa666d14 <col:12> 'long double':'long double' lvalue Var 0xa666610 'val' 'long double':'long double'))))

template <typename T = unsigned long long> static unsigned long long string_to_scalar_type(const wchar_t *s, builtin_printf_state_t *state) (CompoundStmt 0xa6665e0 <../codeBase/fish-shell-master/builtin_printf.cpp:291:1, line:306:1>
  (DeclStmt 0xa665eb8 <line:292:5, col:10>
    0xa665e80 "unsigned long long val")
  (IfStmt 0xa666588 <line:293:5, line:304:5>
    <<<NULL>>>
    (BinaryOperator 0xa665f98 <line:293:9, col:30> '_Bool' '||'
      (BinaryOperator 0xa665f18 <col:9, col:15> '_Bool' '=='
        (ImplicitCastExpr 0xa665f08 <col:9, col:10> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa665ef0 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa665ee0 <col:10> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa665ec8 <col:10> 'const wchar_t *' lvalue ParmVar 0xa671800 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8b28 <col:15> 'wchar_t'34))
      (BinaryOperator 0xa665f80 <col:24, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa665f70 <col:24, col:25> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa665f58 <col:24, col:25> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa665f48 <col:25> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa665f30 <col:25> 'const wchar_t *' lvalue ParmVar 0xa671800 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8ba8 <col:30> 'wchar_t'39)))
    (CompoundStmt 0xa6660d8 <line:294:5, line:297:5>
      (DeclStmt 0xa666060 <line:295:9, col:35>
        0xa665fb0 "unsigned int ch =
          (ImplicitCastExpr 0xa666050 <col:31, col:34> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa666040 <col:31, col:34> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa666028 <col:31, col:34> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa666018 <col:32, col:34> 'const wchar_t *' <LValueToRValue>
                  (UnaryOperator 0xa666000 <col:32, col:34> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa665fe4 <col:34> 'const wchar_t *' lvalue ParmVar 0xa671800 's' 'const wchar_t *'))))))")
      (BinaryOperator 0xa6660c0 <line:296:9, col:15> 'unsigned long long':'unsigned long long' lvalue '='
        (DeclRefExpr 0xa666070 <col:9> 'unsigned long long':'unsigned long long' lvalue Var 0xa665e80 'val' 'unsigned long long':'unsigned long long')
        (ImplicitCastExpr 0xa6660b0 <col:15> 'unsigned long long':'unsigned long long' <IntegralCast>
          (ImplicitCastExpr 0xa6660a0 <col:15> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa666088 <col:15> 'unsigned int' lvalue Var 0xa665fb0 'ch' 'unsigned int')))))
    (CompoundStmt 0xa666568 <line:299:5, line:304:5>
      (DeclStmt 0xa666138 <line:300:9, col:28>
        0xa6660f0 "wchar_t *end =
          (ImplicitCastExpr 0xa666128 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
            (GNUNullExpr 0xa6b8d78 <col:14> 'int'))")
      (BinaryOperator 0xa6661a8 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' lvalue '='
        (ParenExpr 0xa666190 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0xa666178 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0xa666158 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0xa666148 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6b8ddc <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0xa6b8e98 <../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' 0))
      (BinaryOperator 0xa666420 <line:302:9, col:51> 'unsigned long long':'unsigned long long' lvalue '='
        (DeclRefExpr 0xa6661c0 <col:9> 'unsigned long long':'unsigned long long' lvalue Var 0xa665e80 'val' 'unsigned long long':'unsigned long long')
        (CallExpr 0xa6663e8 <col:15, col:51> 'uintmax_t':'unsigned long long'
          (ImplicitCastExpr 0xa6663d8 <col:15, col:42> 'uintmax_t (*)(const wchar_t *, wchar_t **)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa666348 <col:15, col:42> 'uintmax_t (const wchar_t *, wchar_t **)' lvalue Function 0xa6b8070 'raw_string_to_scalar_type' 'uintmax_t (const wchar_t *, wchar_t **)' (FunctionTemplate 0xa6b7a30 'raw_string_to_scalar_type')))
          (ImplicitCastExpr 0xa666410 <col:44> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa666248 <col:44> 'const wchar_t *' lvalue ParmVar 0xa671800 's' 'const wchar_t *'))
          (UnaryOperator 0xa666278 <col:47, col:48> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa666260 <col:48> 'wchar_t *' lvalue Var 0xa6660f0 'end' 'wchar_t *'))))
      (CXXMemberCallExpr 0xa666500 <line:303:9, col:44> 'void'
        (MemberExpr 0xa666450 <col:9, col:16> '<bound member function type>' ->verify_numeric 0xa6b70b0
          (DeclRefExpr 0xa666438 <col:9> 'struct builtin_printf_state_t *' lvalue ParmVar 0xa671840 'state' 'struct builtin_printf_state_t *'))
        (ImplicitCastExpr 0xa666528 <col:31> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa666470 <col:31> 'const wchar_t *' lvalue ParmVar 0xa671800 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa666548 <col:34> 'const wchar_t *' <NoOp>
          (ImplicitCastExpr 0xa666538 <col:34> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa666488 <col:34> 'wchar_t *' lvalue Var 0xa6660f0 'end' 'wchar_t *')))
        (ImplicitCastExpr 0xa666558 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' <LValueToRValue>
          (ParenExpr 0xa6664e8 <col:18, col:39> 'int' lvalue
            (UnaryOperator 0xa6664d0 <col:19, col:38> 'int' lvalue prefix '*'
              (CallExpr 0xa6664b0 <col:20, col:38> 'int *'
                (ImplicitCastExpr 0xa6664a0 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6b9084 <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))))))
  (ReturnStmt 0xa6665d0 <../codeBase/fish-shell-master/builtin_printf.cpp:305:5, col:12>
    (ImplicitCastExpr 0xa6665c0 <col:12> 'unsigned long long':'unsigned long long' <LValueToRValue>
      (DeclRefExpr 0xa6665a4 <col:12> 'unsigned long long':'unsigned long long' lvalue Var 0xa665e80 'val' 'unsigned long long':'unsigned long long'))))

template <typename T = long long> static long long string_to_scalar_type(const wchar_t *s, builtin_printf_state_t *state) (CompoundStmt 0xa665e50 <../codeBase/fish-shell-master/builtin_printf.cpp:291:1, line:306:1>
  (DeclStmt 0xa665728 <line:292:5, col:10>
    0xa6656f0 "long long val")
  (IfStmt 0xa665df8 <line:293:5, line:304:5>
    <<<NULL>>>
    (BinaryOperator 0xa665808 <line:293:9, col:30> '_Bool' '||'
      (BinaryOperator 0xa665788 <col:9, col:15> '_Bool' '=='
        (ImplicitCastExpr 0xa665778 <col:9, col:10> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa665760 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa665750 <col:10> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa665738 <col:10> 'const wchar_t *' lvalue ParmVar 0xa6bd1f0 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8b28 <col:15> 'wchar_t'34))
      (BinaryOperator 0xa6657f0 <col:24, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa6657e0 <col:24, col:25> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6657c8 <col:24, col:25> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6657b8 <col:25> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6657a0 <col:25> 'const wchar_t *' lvalue ParmVar 0xa6bd1f0 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8ba8 <col:30> 'wchar_t'39)))
    (CompoundStmt 0xa665948 <line:294:5, line:297:5>
      (DeclStmt 0xa6658d0 <line:295:9, col:35>
        0xa665820 "unsigned int ch =
          (ImplicitCastExpr 0xa6658c0 <col:31, col:34> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa6658b0 <col:31, col:34> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa665898 <col:31, col:34> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa665888 <col:32, col:34> 'const wchar_t *' <LValueToRValue>
                  (UnaryOperator 0xa665870 <col:32, col:34> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa665854 <col:34> 'const wchar_t *' lvalue ParmVar 0xa6bd1f0 's' 'const wchar_t *'))))))")
      (BinaryOperator 0xa665930 <line:296:9, col:15> 'long long':'long long' lvalue '='
        (DeclRefExpr 0xa6658e0 <col:9> 'long long':'long long' lvalue Var 0xa6656f0 'val' 'long long':'long long')
        (ImplicitCastExpr 0xa665920 <col:15> 'long long':'long long' <IntegralCast>
          (ImplicitCastExpr 0xa665910 <col:15> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa6658f8 <col:15> 'unsigned int' lvalue Var 0xa665820 'ch' 'unsigned int')))))
    (CompoundStmt 0xa665dd8 <line:299:5, line:304:5>
      (DeclStmt 0xa6659a8 <line:300:9, col:28>
        0xa665960 "wchar_t *end =
          (ImplicitCastExpr 0xa665998 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
            (GNUNullExpr 0xa6b8d78 <col:14> 'int'))")
      (BinaryOperator 0xa665a18 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' lvalue '='
        (ParenExpr 0xa665a00 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0xa6659e8 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0xa6659c8 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0xa6659b8 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6b8ddc <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0xa6b8e98 <../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' 0))
      (BinaryOperator 0xa665c90 <line:302:9, col:51> 'long long':'long long' lvalue '='
        (DeclRefExpr 0xa665a30 <col:9> 'long long':'long long' lvalue Var 0xa6656f0 'val' 'long long':'long long')
        (CallExpr 0xa665c58 <col:15, col:51> 'intmax_t':'long long'
          (ImplicitCastExpr 0xa665c48 <col:15, col:42> 'intmax_t (*)(const wchar_t *, wchar_t **)' <FunctionToPointerDecay>
            (DeclRefExpr 0xa665bb8 <col:15, col:42> 'intmax_t (const wchar_t *, wchar_t **)' lvalue Function 0xa6b7b70 'raw_string_to_scalar_type' 'intmax_t (const wchar_t *, wchar_t **)' (FunctionTemplate 0xa6b7a30 'raw_string_to_scalar_type')))
          (ImplicitCastExpr 0xa665c80 <col:44> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa665ab8 <col:44> 'const wchar_t *' lvalue ParmVar 0xa6bd1f0 's' 'const wchar_t *'))
          (UnaryOperator 0xa665ae8 <col:47, col:48> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa665ad0 <col:48> 'wchar_t *' lvalue Var 0xa665960 'end' 'wchar_t *'))))
      (CXXMemberCallExpr 0xa665d70 <line:303:9, col:44> 'void'
        (MemberExpr 0xa665cc0 <col:9, col:16> '<bound member function type>' ->verify_numeric 0xa6b70b0
          (DeclRefExpr 0xa665ca8 <col:9> 'struct builtin_printf_state_t *' lvalue ParmVar 0xa6bd230 'state' 'struct builtin_printf_state_t *'))
        (ImplicitCastExpr 0xa665d98 <col:31> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa665ce0 <col:31> 'const wchar_t *' lvalue ParmVar 0xa6bd1f0 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa665db8 <col:34> 'const wchar_t *' <NoOp>
          (ImplicitCastExpr 0xa665da8 <col:34> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa665cf8 <col:34> 'wchar_t *' lvalue Var 0xa665960 'end' 'wchar_t *')))
        (ImplicitCastExpr 0xa665dc8 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' <LValueToRValue>
          (ParenExpr 0xa665d58 <col:18, col:39> 'int' lvalue
            (UnaryOperator 0xa665d40 <col:19, col:38> 'int' lvalue prefix '*'
              (CallExpr 0xa665d20 <col:20, col:38> 'int *'
                (ImplicitCastExpr 0xa665d10 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6b9084 <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))))))
  (ReturnStmt 0xa665e40 <../codeBase/fish-shell-master/builtin_printf.cpp:305:5, col:12>
    (ImplicitCastExpr 0xa665e30 <col:12> 'long long':'long long' <LValueToRValue>
      (DeclRefExpr 0xa665e14 <col:12> 'long long':'long long' lvalue Var 0xa6656f0 'val' 'long long':'long long'))))

template <typename T> static T string_to_scalar_type(const wchar_t *s, builtin_printf_state_t *state) (CompoundStmt 0xa6b91d0 <../codeBase/fish-shell-master/builtin_printf.cpp:291:1, line:306:1>
  (DeclStmt 0xa6b8ad8 <line:292:5, col:10>
    0xa6b8aa0 "T val")
  (IfStmt 0xa6b9188 <line:293:5, line:304:5>
    <<<NULL>>>
    (BinaryOperator 0xa6b8be8 <line:293:9, col:30> '_Bool' '||'
      (BinaryOperator 0xa6b8b50 <col:9, col:15> '_Bool' '=='
        (ImplicitCastExpr 0xa6b8b40 <col:9, col:10> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6b8b10 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6b8b00 <col:10> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6b8ae8 <col:10> 'const wchar_t *' lvalue ParmVar 0xa6b8910 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8b28 <col:15> 'wchar_t'34))
      (BinaryOperator 0xa6b8bd0 <col:24, col:30> '_Bool' '=='
        (ImplicitCastExpr 0xa6b8bc0 <col:24, col:25> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6b8b90 <col:24, col:25> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6b8b80 <col:25> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6b8b68 <col:25> 'const wchar_t *' lvalue ParmVar 0xa6b8910 's' 'const wchar_t *'))))
        (CharacterLiteral 0xa6b8ba8 <col:30> 'wchar_t'39)))
    (CompoundStmt 0xa6b8d18 <line:294:5, line:297:5>
      (DeclStmt 0xa6b8cc0 <line:295:9, col:35>
        0xa6b8c10 "unsigned int ch =
          (ImplicitCastExpr 0xa6b8cb0 <col:31, col:34> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0xa6b8ca0 <col:31, col:34> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa6b8c88 <col:31, col:34> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa6b8c78 <col:32, col:34> 'const wchar_t *' <LValueToRValue>
                  (UnaryOperator 0xa6b8c60 <col:32, col:34> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa6b8c44 <col:34> 'const wchar_t *' lvalue ParmVar 0xa6b8910 's' 'const wchar_t *'))))))")
      (BinaryOperator 0xa6b8d00 <line:296:9, col:15> '<dependent type>' '='
        (DeclRefExpr 0xa6b8cd0 <col:9> 'T' lvalue Var 0xa6b8aa0 'val' 'T')
        (DeclRefExpr 0xa6b8ce8 <col:15> 'unsigned int' lvalue Var 0xa6b8c10 'ch' 'unsigned int')))
    (CompoundStmt 0xa6b9168 <line:299:5, line:304:5>
      (DeclStmt 0xa6b8d98 <line:300:9, col:28>
        0xa6b8d40 "wchar_t *end =
          (ImplicitCastExpr 0xa6b8d88 </usr/include/clang/3.0/include/stddef.h:47:14> 'wchar_t *' <NullToPointer>
            (GNUNullExpr 0xa6b8d78 <col:14> 'int'))")
      (BinaryOperator 0xa6b8eb0 </usr/include/i386-linux-gnu/bits/errno.h:51:18, ../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' lvalue '='
        (ParenExpr 0xa6b8e80 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' lvalue
          (UnaryOperator 0xa6b8e68 <col:19, col:38> 'int' lvalue prefix '*'
            (CallExpr 0xa6b8e48 <col:20, col:38> 'int *'
              (ImplicitCastExpr 0xa6b8e38 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6b8ddc <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))
        (IntegerLiteral 0xa6b8e98 <../codeBase/fish-shell-master/builtin_printf.cpp:301:17> 'int' 0))
      (BinaryOperator 0xa6b8fc0 <line:302:9, col:51> '<dependent type>' '='
        (DeclRefExpr 0xa6b8ec8 <col:9> 'T' lvalue Var 0xa6b8aa0 'val' 'T')
        (CallExpr 0xa6b8f98 <col:15, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0xa6b8ee8 <col:15, col:42> '<dependent type>' lvalue (ADL) = '1' 0xa6b7a30)
          (DeclRefExpr 0xa6b8f50 <col:44> 'const wchar_t *' lvalue ParmVar 0xa6b8910 's' 'const wchar_t *')
          (UnaryOperator 0xa6b8f80 <col:47, col:48> 'wchar_t **' prefix '&'
            (DeclRefExpr 0xa6b8f68 <col:48> 'wchar_t *' lvalue Var 0xa6b8d40 'end' 'wchar_t *'))))
      (CXXMemberCallExpr 0xa6b9100 <line:303:9, col:44> 'void'
        (MemberExpr 0xa6b8ffc <col:9, col:16> '<bound member function type>' ->verify_numeric 0xa6b70b0
          (ImplicitCastExpr 0xa6b8ff0 <col:9> 'struct builtin_printf_state_t *' <LValueToRValue>
            (DeclRefExpr 0xa6b8fd8 <col:9> 'struct builtin_printf_state_t *' lvalue ParmVar 0xa6b8960 'state' 'struct builtin_printf_state_t *')))
        (ImplicitCastExpr 0xa6b9128 <col:31> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa6b901c <col:31> 'const wchar_t *' lvalue ParmVar 0xa6b8910 's' 'const wchar_t *'))
        (ImplicitCastExpr 0xa6b9148 <col:34> 'const wchar_t *' <NoOp>
          (ImplicitCastExpr 0xa6b9138 <col:34> 'wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6b9034 <col:34> 'wchar_t *' lvalue Var 0xa6b8d40 'end' 'wchar_t *')))
        (ImplicitCastExpr 0xa6b9158 </usr/include/i386-linux-gnu/bits/errno.h:51:18, col:39> 'int' <LValueToRValue>
          (ParenExpr 0xa6b90e8 <col:18, col:39> 'int' lvalue
            (UnaryOperator 0xa6b90d0 <col:19, col:38> 'int' lvalue prefix '*'
              (CallExpr 0xa6b90b0 <col:20, col:38> 'int *'
                (ImplicitCastExpr 0xa6b90a0 <col:20> 'int *(*)(void) throw()' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6b9084 <col:20> 'int *(void) throw()' lvalue Function 0xa5feab0 '__errno_location' 'int *(void) throw()')))))))))
  (ReturnStmt 0xa6b91c0 <../codeBase/fish-shell-master/builtin_printf.cpp:305:5, col:12>
    (DeclRefExpr 0xa6b91a4 <col:12> 'T' lvalue Var 0xa6b8aa0 'val' 'T')))

;
void print_esc_char(wchar_t c) (CompoundStmt 0xa6b9c48 <../codeBase/fish-shell-master/builtin_printf.cpp:311:1, line:345:1>
  (SwitchStmt 0xa6b9318 <line:312:5, line:344:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6b9308 <line:312:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa6b92ec <col:13> 'wchar_t' lvalue ParmVar 0xa6b9210 'c' 'wchar_t'))
    (CompoundStmt 0xa6b9be8 <line:313:5, line:344:5>
      (CaseStmt 0xa6b9350 <line:314:9, line:315:38>
        (CharacterLiteral 0xa6b9338 <line:314:14> 'wchar_t'97)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b93f8 <line:315:13, col:38> 'void'
          (MemberExpr 0xa6b93d4 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9370 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b93c0 <col:33> 'wchar_t'7)))
      (BreakStmt 0xa6b9418 <line:316:13>)
      (CaseStmt 0xa6b9438 <line:317:9, line:318:38>
        (CharacterLiteral 0xa6b9420 <line:317:14> 'wchar_t'98)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b94e0 <line:318:13, col:38> 'void'
          (MemberExpr 0xa6b94bc <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9458 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b94a8 <col:33> 'wchar_t'8)))
      (BreakStmt 0xa6b9500 <line:319:13>)
      (CaseStmt 0xa6b9520 <line:320:9, line:321:32>
        (CharacterLiteral 0xa6b9508 <line:320:14> 'wchar_t'99)
        <<<NULL>>>
        (BinaryOperator 0xa6b9580 <line:321:13, col:32> '_Bool' lvalue '='
          (MemberExpr 0xa6b9550 <col:13, col:19> '_Bool' lvalue ->early_exit 0xa63c340
            (CXXThisExpr 0xa6b9540 <col:13> 'struct builtin_printf_state_t *' this))
          (CXXBoolLiteralExpr 0xa6b9570 <col:32> '_Bool' true)))
      (BreakStmt 0xa6b9598 <line:322:13>)
      (CaseStmt 0xa6b95b8 <line:323:9, line:324:40>
        (CharacterLiteral 0xa6b95a0 <line:323:14> 'wchar_t'101)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9660 <line:324:13, col:40> 'void'
          (MemberExpr 0xa6b963c <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b95d8 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b9628 <col:33> 'wchar_t'27)))
      (BreakStmt 0xa6b9680 <line:325:13>)
      (CaseStmt 0xa6b96a0 <line:326:9, line:327:38>
        (CharacterLiteral 0xa6b9688 <line:326:14> 'wchar_t'102)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9748 <line:327:13, col:38> 'void'
          (MemberExpr 0xa6b9724 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b96c0 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b9710 <col:33> 'wchar_t'12)))
      (BreakStmt 0xa6b9768 <line:328:13>)
      (CaseStmt 0xa6b9788 <line:329:9, line:330:38>
        (CharacterLiteral 0xa6b9770 <line:329:14> 'wchar_t'110)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9830 <line:330:13, col:38> 'void'
          (MemberExpr 0xa6b980c <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b97a8 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b97f8 <col:33> 'wchar_t'10)))
      (BreakStmt 0xa6b9850 <line:331:13>)
      (CaseStmt 0xa6b9870 <line:332:9, line:333:38>
        (CharacterLiteral 0xa6b9858 <line:332:14> 'wchar_t'114)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9918 <line:333:13, col:38> 'void'
          (MemberExpr 0xa6b98f4 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9890 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b98e0 <col:33> 'wchar_t'13)))
      (BreakStmt 0xa6b9938 <line:334:13>)
      (CaseStmt 0xa6b9958 <line:335:9, line:336:38>
        (CharacterLiteral 0xa6b9940 <line:335:14> 'wchar_t'116)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9a00 <line:336:13, col:38> 'void'
          (MemberExpr 0xa6b99dc <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9978 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b99c8 <col:33> 'wchar_t'9)))
      (BreakStmt 0xa6b9a20 <line:337:13>)
      (CaseStmt 0xa6b9a40 <line:338:9, line:339:38>
        (CharacterLiteral 0xa6b9a28 <line:338:14> 'wchar_t'118)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6b9ae8 <line:339:13, col:38> 'void'
          (MemberExpr 0xa6b9ac4 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9a60 <col:13> 'struct builtin_printf_state_t *' this))
          (CharacterLiteral 0xa6b9ab0 <col:33> 'wchar_t'11)))
      (BreakStmt 0xa6b9b08 <line:340:13>)
      (DefaultStmt 0xa6b9bc8 <line:341:9, line:342:34>
        (CXXMemberCallExpr 0xa6b9b98 <col:13, col:34> 'void'
          (MemberExpr 0xa6b9b78 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6b9b10 <col:13> 'struct builtin_printf_state_t *' this))
          (ImplicitCastExpr 0xa6b9bb8 <col:33> 'wchar_t' <LValueToRValue>
            (DeclRefExpr 0xa6b9b60 <col:33> 'wchar_t' lvalue ParmVar 0xa6b9210 'c' 'wchar_t'))))
      (BreakStmt 0xa6b9be0 <line:343:13>))))


long print_esc(const wchar_t *escstart, bool octal_0) (CompoundStmt 0xa6bbf60 <../codeBase/fish-shell-master/builtin_printf.cpp:353:1, line:427:1>
  (DeclStmt 0xa6b9e50 <line:354:5, col:36>
    0xa6b9dc0 "const wchar_t *p =
      (BinaryOperator 0xa6b9e38 <col:24, col:35> 'const wchar_t *' '+'
        (ImplicitCastExpr 0xa6b9e28 <col:24> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0xa6b9df4 <col:24> 'const wchar_t *' lvalue ParmVar 0xa6b9c80 'escstart' 'const wchar_t *'))
        (IntegerLiteral 0xa6b9e10 <col:35> 'int' 1))")
  (DeclStmt 0xa6b9ec0 <line:355:5, col:22>
    0xa6b9e70 "int esc_value =
      (IntegerLiteral 0xa6b9ea8 <col:21> 'int' 0)")
  (DeclStmt 0xa6b9f18 <line:356:5, col:19>
    0xa6b9ee0 "int esc_length")
  (IfStmt 0xa6bbe88 <line:358:5, line:425:5>
    <<<NULL>>>
    (BinaryOperator 0xa6b9f90 <line:358:9, col:15> '_Bool' '=='
      (ImplicitCastExpr 0xa6b9f80 <col:9, col:10> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa6b9f50 <col:9, col:10> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa6b9f40 <col:10> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6b9f28 <col:10> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))
      (CharacterLiteral 0xa6b9f68 <col:15> 'wchar_t'120))
    (CompoundStmt 0xa6ba628 <line:359:5, line:366:5>
      (ForStmt 0xa6ba388 <line:361:9, line:362:55>
        (BinaryOperator 0xa6ba020 <line:361:14, col:32> 'const wchar_t *' lvalue ','
          (BinaryOperator 0xa6b9fd8 <col:14, col:27> 'int' lvalue '='
            (DeclRefExpr 0xa6b9fa8 <col:14> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int')
            (IntegerLiteral 0xa6b9fc0 <col:27> 'int' 0))
          (UnaryOperator 0xa6ba008 <col:30, col:32> 'const wchar_t *' lvalue prefix '++'
            (DeclRefExpr 0xa6b9ff0 <col:32> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))
        <<<NULL>>>
        (BinaryOperator 0xa6ba178 <col:35, col:68> '_Bool' '&&'
          (BinaryOperator 0xa6ba078 <col:35, col:48> '_Bool' '<'
            (ImplicitCastExpr 0xa6ba068 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0xa6ba038 <col:35> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int'))
            (IntegerLiteral 0xa6ba050 <col:48> 'int' 2))
          (CallExpr 0xa6ba148 <col:53, col:68> '_Bool'
            (ImplicitCastExpr 0xa6ba138 <col:53> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
              (DeclRefExpr 0xa6ba104 <col:53> '_Bool (wchar_t)' lvalue Function 0xa63d520 'is_hex_digit' '_Bool (wchar_t)'))
            (ImplicitCastExpr 0xa6ba168 <col:66, col:67> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa6ba0f0 <col:66, col:67> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa6ba0e0 <col:67> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6ba0c4 <col:67> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))))
        (BinaryOperator 0xa6ba1f0 <col:71, col:87> 'const wchar_t *' lvalue ','
          (UnaryOperator 0xa6ba1a8 <col:71, col:73> 'int' lvalue prefix '++'
            (DeclRefExpr 0xa6ba190 <col:73> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int'))
          (UnaryOperator 0xa6ba1d8 <col:85, col:87> 'const wchar_t *' lvalue prefix '++'
            (DeclRefExpr 0xa6ba1bc <col:87> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))
        (BinaryOperator 0xa6ba370 <line:362:13, col:55> 'int' lvalue '='
          (DeclRefExpr 0xa6ba208 <col:13> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int')
          (BinaryOperator 0xa6ba358 <col:25, col:55> 'int' '+'
            (BinaryOperator 0xa6ba260 <col:25, col:37> 'int' '*'
              (ImplicitCastExpr 0xa6ba250 <col:25> 'int' <LValueToRValue>
                (DeclRefExpr 0xa6ba220 <col:25> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int'))
              (IntegerLiteral 0xa6ba238 <col:37> 'int' 16))
            (CallExpr 0xa6ba338 <col:42, col:55> 'int'
              (ImplicitCastExpr 0xa6ba328 <col:42> 'int (*)(const wchar_t &)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6ba2ec <col:42> 'int (const wchar_t &)' lvalue Function 0xa63d870 'hex_to_bin' 'int (const wchar_t &)'))
              (UnaryOperator 0xa6ba2d8 <col:53, col:54> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa6ba2c8 <col:54> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6ba2ac <col:54> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))))
      (CXXMemberCallExpr 0xa6ba5e8 <line:365:9, col:38> 'void'
        (MemberExpr 0xa6ba5c8 <col:9, col:15> '<bound member function type>' ->append_output 0xa6b69c0
          (CXXThisExpr 0xa6ba560 <col:9> 'struct builtin_printf_state_t *' this))
        (ImplicitCastExpr 0xa6ba618 <col:29> 'wchar_t' <IntegralCast>
          (ImplicitCastExpr 0xa6ba608 <col:29> 'int' <LValueToRValue>
            (DeclRefExpr 0xa6ba5b0 <col:29> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int')))))
    (IfStmt 0xa6bbe68 <line:367:10, line:425:5>
      <<<NULL>>>
      (CallExpr 0xa6ba6e0 <line:367:14, col:31> '_Bool'
        (ImplicitCastExpr 0xa6ba6d0 <col:14> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
          (DeclRefExpr 0xa6ba6b4 <col:14> '_Bool (wchar_t)' lvalue Function 0xa63d240 'is_octal_digit' '_Bool (wchar_t)'))
        (ImplicitCastExpr 0xa6ba700 <col:29, col:30> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6ba6a0 <col:29, col:30> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6ba690 <col:30> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6ba674 <col:30> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))
      (CompoundStmt 0xa6baca8 <line:368:5, line:375:5>
        (ForStmt 0xa6babb8 <line:372:9, line:373:56>
          (BinaryOperator 0xa6ba860 <line:372:14, col:52> 'const wchar_t *' lvalue ','
            (BinaryOperator 0xa6ba740 <col:14, col:27> 'int' lvalue '='
              (DeclRefExpr 0xa6ba70c <col:14> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int')
              (IntegerLiteral 0xa6ba728 <col:27> 'int' 0))
            (CompoundAssignOperator 0xa6ba840 <col:30, col:52> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
              (DeclRefExpr 0xa6ba758 <col:30> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')
              (ImplicitCastExpr 0xa6ba830 <col:35, col:52> 'int' <IntegralCast>
                (BinaryOperator 0xa6ba818 <col:35, col:52> '_Bool' '&&'
                  (ImplicitCastExpr 0xa6ba808 <col:35> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0xa6ba770 <col:35> '_Bool' lvalue ParmVar 0xa6b9cc0 'octal_0' '_Bool'))
                  (BinaryOperator 0xa6ba7f0 <col:46, col:52> '_Bool' '=='
                    (ImplicitCastExpr 0xa6ba7e0 <col:46, col:47> 'wchar_t' <LValueToRValue>
                      (UnaryOperator 0xa6ba7b0 <col:46, col:47> 'const wchar_t' lvalue prefix '*'
                        (ImplicitCastExpr 0xa6ba7a0 <col:47> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa6ba788 <col:47> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))
                    (CharacterLiteral 0xa6ba7c8 <col:52> 'wchar_t'48))))))
          <<<NULL>>>
          (BinaryOperator 0xa6ba9a0 <col:58, col:93> '_Bool' '&&'
            (BinaryOperator 0xa6ba8b8 <col:58, col:71> '_Bool' '<'
              (ImplicitCastExpr 0xa6ba8a8 <col:58> 'int' <LValueToRValue>
                (DeclRefExpr 0xa6ba878 <col:58> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int'))
              (IntegerLiteral 0xa6ba890 <col:71> 'int' 3))
            (CallExpr 0xa6ba970 <col:76, col:93> '_Bool'
              (ImplicitCastExpr 0xa6ba960 <col:76> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6ba944 <col:76> '_Bool (wchar_t)' lvalue Function 0xa63d240 'is_octal_digit' '_Bool (wchar_t)'))
              (ImplicitCastExpr 0xa6ba990 <col:91, col:92> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa6ba930 <col:91, col:92> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa6ba920 <col:92> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6ba904 <col:92> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))))
          (BinaryOperator 0xa6baa18 <col:96, col:112> 'const wchar_t *' lvalue ','
            (UnaryOperator 0xa6ba9d0 <col:96, col:98> 'int' lvalue prefix '++'
              (DeclRefExpr 0xa6ba9b8 <col:98> 'int' lvalue Var 0xa6b9ee0 'esc_length' 'int'))
            (UnaryOperator 0xa6baa00 <col:110, col:112> 'const wchar_t *' lvalue prefix '++'
              (DeclRefExpr 0xa6ba9e4 <col:112> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))
          (BinaryOperator 0xa6baba0 <line:373:13, col:56> 'int' lvalue '='
            (DeclRefExpr 0xa6baa30 <col:13> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int')
            (BinaryOperator 0xa6bab88 <col:25, col:56> 'int' '+'
              (BinaryOperator 0xa6baa88 <col:25, col:37> 'int' '*'
                (ImplicitCastExpr 0xa6baa78 <col:25> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa6baa48 <col:25> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int'))
                (IntegerLiteral 0xa6baa60 <col:37> 'int' 8))
              (CallExpr 0xa6bab58 <col:41, col:56> 'int'
                (ImplicitCastExpr 0xa6bab48 <col:41> 'int (*)(wchar_t)' <FunctionToPointerDecay>
                  (DeclRefExpr 0xa6bab14 <col:41> 'int (wchar_t)' lvalue Function 0xa63e1a0 'octal_to_bin' 'int (wchar_t)'))
                (ImplicitCastExpr 0xa6bab78 <col:54, col:55> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa6bab00 <col:54, col:55> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa6baaf0 <col:55> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa6baad4 <col:55> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))))))
        (CXXMemberCallExpr 0xa6bac68 <line:374:9, col:38> 'void'
          (MemberExpr 0xa6bac48 <col:9, col:15> '<bound member function type>' ->append_output 0xa6b69c0
            (CXXThisExpr 0xa6babe0 <col:9> 'struct builtin_printf_state_t *' this))
          (ImplicitCastExpr 0xa6bac98 <col:29> 'wchar_t' <IntegralCast>
            (ImplicitCastExpr 0xa6bac88 <col:29> 'int' <LValueToRValue>
              (DeclRefExpr 0xa6bac30 <col:29> 'int' lvalue Var 0xa6b9e70 'esc_value' 'int')))))
      (IfStmt 0xa6bbe48 <line:376:10, line:425:5>
        <<<NULL>>>
        (BinaryOperator 0xa6baea8 <line:376:14, col:47> '_Bool' '&&'
          (ImplicitCastExpr 0xa6bae88 <col:14, col:15> '_Bool' <IntegralToBoolean>
            (ImplicitCastExpr 0xa6bae78 <col:14, col:15> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa6bace8 <col:14, col:15> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa6bacd8 <col:15> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6bacc0 <col:15> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))
          (ImplicitCastExpr 0xa6bae98 <col:20, col:47> '_Bool' <PointerToBoolean>
            (CallExpr 0xa6bae30 <col:20, col:47> 'wchar_t *'
              (ImplicitCastExpr 0xa6bae20 <col:20> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
                (DeclRefExpr 0xa6bae04 <col:20> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0xa110390 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
              (ImplicitCastExpr 0xa6bae58 <col:27> 'const wchar_t *' <ArrayToPointerDecay>
                (StringLiteral 0xa6bad80 <col:27> 'const wchar_t [12]' lvalue L"\"\000\000\000\\\000\000\000a\000\000\000b\000\000\000c\000\000\000e\000\000\000f\000\000\000n\000\000\000r\000\000\000t\000\000\000v\000\000\000"))
              (ImplicitCastExpr 0xa6bae68 <col:45, col:46> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa6badf0 <col:45, col:46> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa6bade0 <col:46> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6badc8 <col:46> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))))
        (CompoundStmt 0xa6baf68 <line:377:5, line:379:5>
          (CXXMemberCallExpr 0xa6baf38 <line:378:9, col:28> 'void'
            (MemberExpr 0xa6baed0 <col:9> '<bound member function type>' ->print_esc_char 0xa6b9260
              (CXXThisExpr 0xa6baec0 <col:9> 'struct builtin_printf_state_t *' this))
            (ImplicitCastExpr 0xa6baf58 <col:24, col:26> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa6baf20 <col:24, col:26> 'const wchar_t' lvalue prefix '*'
                (UnaryOperator 0xa6baf08 <col:25, col:26> 'const wchar_t *' postfix '++'
                  (DeclRefExpr 0xa6baef0 <col:25> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))))
        (IfStmt 0xa6bbe28 <line:380:10, line:425:5>
          <<<NULL>>>
          (BinaryOperator 0xa6bb080 <line:380:14, col:34> '_Bool' '||'
            (BinaryOperator 0xa6bafe8 <col:14, col:20> '_Bool' '=='
              (ImplicitCastExpr 0xa6bafd8 <col:14, col:15> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa6bafa8 <col:14, col:15> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa6baf98 <col:15> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6baf7c <col:15> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))
              (CharacterLiteral 0xa6bafc0 <col:20> 'wchar_t'117))
            (BinaryOperator 0xa6bb068 <col:28, col:34> '_Bool' '=='
              (ImplicitCastExpr 0xa6bb058 <col:28, col:29> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa6bb028 <col:28, col:29> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa6bb018 <col:29> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6bb000 <col:29> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))
              (CharacterLiteral 0xa6bb040 <col:34> 'wchar_t'85)))
          (CompoundStmt 0xa6bbb98 <line:381:5, line:416:5>
            (DeclStmt 0xa6bb128 <line:382:9, col:30>
              0xa6bb0a0 "wchar_t esc_char =
                (ImplicitCastExpr 0xa6bb118 <col:28, col:29> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa6bb100 <col:28, col:29> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa6bb0f0 <col:29> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa6bb0d4 <col:29> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))")
            (UnaryOperator 0xa6bb150 <line:383:9, col:10> 'const wchar_t *' postfix '++'
              (DeclRefExpr 0xa6bb138 <col:9> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))
            (DeclStmt 0xa6bb1d0 <line:384:9, col:31>
              0xa6bb170 "uint32_t uni_value =
                (ImplicitCastExpr 0xa6bb1c0 <col:30> 'uint32_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa6bb1a8 <col:30> 'int' 0))")
            (ForStmt 0xa6bb8a0 <line:385:9, line:398:9>
              (DeclStmt 0xa6bb250 <line:385:14, col:35>
                0xa6bb1f0 "size_t esc_length =
                  (ImplicitCastExpr 0xa6bb240 <col:34> 'size_t':'unsigned int' <IntegralCast>
                    (IntegerLiteral 0xa6bb228 <col:34> 'int' 0))")
              <<<NULL>>>
              (BinaryOperator 0xa6bb358 <col:37, col:75> '_Bool' '<'
                (ImplicitCastExpr 0xa6bb338 <col:37> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa6bb260 <col:37> 'size_t':'unsigned int' lvalue Var 0xa6bb1f0 'esc_length' 'size_t':'unsigned int'))
                (ImplicitCastExpr 0xa6bb348 <col:50, col:75> 'unsigned int' <IntegralCast>
                  (ParenExpr 0xa6bb320 <col:50, col:75> 'int'
                    (ConditionalOperator 0xa6bb300 <col:51, col:74> 'int'
                      (BinaryOperator 0xa6bb2b8 <col:51, col:63> '_Bool' '=='
                        (ImplicitCastExpr 0xa6bb2a8 <col:51> 'wchar_t' <LValueToRValue>
                          (DeclRefExpr 0xa6bb278 <col:51> 'wchar_t' lvalue Var 0xa6bb0a0 'esc_char' 'wchar_t'))
                        (CharacterLiteral 0xa6bb290 <col:63> 'wchar_t'117))
                      (IntegerLiteral 0xa6bb2d0 <col:70> 'int' 4)
                      (IntegerLiteral 0xa6bb2e8 <col:74> 'int' 8)))))
              (UnaryOperator 0xa6bb388 <col:78, col:88> 'size_t':'unsigned int' postfix '++'
                (DeclRefExpr 0xa6bb370 <col:78> 'size_t':'unsigned int' lvalue Var 0xa6bb1f0 'esc_length' 'size_t':'unsigned int'))
              (CompoundStmt 0xa6bb880 <line:386:9, line:398:9>
                (IfStmt 0xa6bb6b0 <line:387:13, line:395:13>
                  <<<NULL>>>
                  (UnaryOperator 0xa6bb470 <line:387:17, col:34> '_Bool' prefix '!'
                    (CallExpr 0xa6bb440 <col:19, col:34> '_Bool'
                      (ImplicitCastExpr 0xa6bb430 <col:19> '_Bool (*)(wchar_t)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa6bb414 <col:19> '_Bool (wchar_t)' lvalue Function 0xa63d520 'is_hex_digit' '_Bool (wchar_t)'))
                      (ImplicitCastExpr 0xa6bb460 <col:32, col:33> 'wchar_t' <LValueToRValue>
                        (UnaryOperator 0xa6bb400 <col:32, col:33> 'const wchar_t' lvalue prefix '*'
                          (ImplicitCastExpr 0xa6bb3f0 <col:33> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa6bb3d4 <col:33> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))))
                  (CompoundStmt 0xa6bb698 <line:388:13, line:395:13>
                    (IfStmt 0xa6bb670 <line:390:17, line:393:17>
                      <<<NULL>>>
                      (BinaryOperator 0xa6bb4d8 <line:390:21, col:35> '_Bool' '=='
                        (ImplicitCastExpr 0xa6bb4b8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                          (DeclRefExpr 0xa6bb484 <col:21> 'size_t':'unsigned int' lvalue Var 0xa6bb1f0 'esc_length' 'size_t':'unsigned int'))
                        (ImplicitCastExpr 0xa6bb4c8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0xa6bb4a0 <col:35> 'int' 0)))
                      (CompoundStmt 0xa6bb660 <line:391:17, line:393:17>)
                      <<<NULL>>>)
                    (BreakStmt 0xa6bb690 <line:394:17>))
                  <<<NULL>>>)
                (BinaryOperator 0xa6bb838 <line:396:13, col:55> 'uint32_t':'unsigned int' lvalue '='
                  (DeclRefExpr 0xa6bb6cc <col:13> 'uint32_t':'unsigned int' lvalue Var 0xa6bb170 'uni_value' 'uint32_t':'unsigned int')
                  (BinaryOperator 0xa6bb820 <col:25, col:55> 'unsigned int' '+'
                    (BinaryOperator 0xa6bb738 <col:25, col:37> 'unsigned int' '*'
                      (ImplicitCastExpr 0xa6bb718 <col:25> 'uint32_t':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0xa6bb6e4 <col:25> 'uint32_t':'unsigned int' lvalue Var 0xa6bb170 'uni_value' 'uint32_t':'unsigned int'))
                      (ImplicitCastExpr 0xa6bb728 <col:37> 'unsigned int' <IntegralCast>
                        (IntegerLiteral 0xa6bb700 <col:37> 'int' 16)))
                    (ImplicitCastExpr 0xa6bb810 <col:42, col:55> 'unsigned int' <IntegralCast>
                      (CallExpr 0xa6bb7f0 <col:42, col:55> 'int'
                        (ImplicitCastExpr 0xa6bb7e0 <col:42> 'int (*)(const wchar_t &)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa6bb7c4 <col:42> 'int (const wchar_t &)' lvalue Function 0xa63d870 'hex_to_bin' 'int (const wchar_t &)'))
                        (UnaryOperator 0xa6bb7b0 <col:53, col:54> 'const wchar_t' lvalue prefix '*'
                          (ImplicitCastExpr 0xa6bb7a0 <col:54> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa6bb784 <col:54> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))))
                (UnaryOperator 0xa6bb868 <line:397:13, col:14> 'const wchar_t *' postfix '++'
                  (DeclRefExpr 0xa6bb850 <col:13> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))))
            (IfStmt 0xa6bbb78 <line:404:9, line:415:9>
              <<<NULL>>>
              (BinaryOperator 0xa6bb918 <line:404:13, col:25> '_Bool' '>'
                (ImplicitCastExpr 0xa6bb8f8 <col:13> 'uint32_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0xa6bb8c4 <col:13> 'uint32_t':'unsigned int' lvalue Var 0xa6bb170 'uni_value' 'uint32_t':'unsigned int'))
                (ImplicitCastExpr 0xa6bb908 <col:25> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0xa6bb8e0 <col:25> 'int' 1114111)))
              (CompoundStmt 0xa6bba88 <line:405:9, line:407:9>)
              (CompoundStmt 0xa6bbb60 <line:409:9, line:415:9>
                (CXXMemberCallExpr 0xa6bbb20 <line:411:13, col:42> 'void'
                  (MemberExpr 0xa6bbb00 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
                    (CXXThisExpr 0xa6bba98 <col:13> 'struct builtin_printf_state_t *' this))
                  (ImplicitCastExpr 0xa6bbb50 <col:33> 'wchar_t' <IntegralCast>
                    (ImplicitCastExpr 0xa6bbb40 <col:33> 'uint32_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0xa6bbae8 <col:33> 'uint32_t':'unsigned int' lvalue Var 0xa6bb170 'uni_value' 'uint32_t':'unsigned int')))))))
          (CompoundStmt 0xa6bbe10 <line:418:5, line:425:5>
            (CXXMemberCallExpr 0xa6bbc48 <line:419:9, col:34> 'void'
              (MemberExpr 0xa6bbc24 <col:9, col:15> '<bound member function type>' ->append_output 0xa6b69c0
                (CXXThisExpr 0xa6bbbc0 <col:9> 'struct builtin_printf_state_t *' this))
              (CharacterLiteral 0xa6bbc10 <col:29> 'wchar_t'92))
            (IfStmt 0xa6bbdf0 <line:420:9, line:424:9>
              <<<NULL>>>
              (ImplicitCastExpr 0xa6bbcb8 <line:420:13, col:14> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0xa6bbca8 <col:13, col:14> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa6bbc90 <col:13, col:14> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa6bbc80 <col:14> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa6bbc68 <col:14> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))
              (CompoundStmt 0xa6bbdd8 <line:421:9, line:424:9>
                (CXXMemberCallExpr 0xa6bbd78 <line:422:13, col:35> 'void'
                  (MemberExpr 0xa6bbd54 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
                    (CXXThisExpr 0xa6bbcc8 <col:13> 'struct builtin_printf_state_t *' this))
                  (ImplicitCastExpr 0xa6bbd98 <col:33, col:34> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa6bbd40 <col:33, col:34> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa6bbd30 <col:34> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa6bbd18 <col:34> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))))
                (UnaryOperator 0xa6bbdc0 <line:423:13, col:14> 'const wchar_t *' postfix '++'
                  (DeclRefExpr 0xa6bbda4 <col:13> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *')))
              <<<NULL>>>))))))
  (ReturnStmt 0xa6bbf50 <line:426:5, col:27>
    (ImplicitCastExpr 0xa6bbf40 <col:12, col:27> 'long' <IntegralCast>
      (BinaryOperator 0xa6bbf28 <col:12, col:27> 'int' '-'
        (BinaryOperator 0xa6bbef8 <col:12, col:16> 'int' '-'
          (ImplicitCastExpr 0xa6bbed8 <col:12> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6bbea4 <col:12> 'const wchar_t *' lvalue Var 0xa6b9dc0 'p' 'const wchar_t *'))
          (ImplicitCastExpr 0xa6bbee8 <col:16> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6bbebc <col:16> 'const wchar_t *' lvalue ParmVar 0xa6b9c80 'escstart' 'const wchar_t *')))
        (IntegerLiteral 0xa6bbf10 <col:27> 'int' 1)))))


void print_esc_string(const wchar_t *str) (CompoundStmt 0xa6bc390 <../codeBase/fish-shell-master/builtin_printf.cpp:432:1, line:438:1>
  (ForStmt 0xa6bc368 <line:433:5, line:437:37>
    <<<NULL>>>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6bc0e0 <line:433:12, col:13> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0xa6bc0d0 <col:12, col:13> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa6bc0b8 <col:12, col:13> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa6bc0a8 <col:13> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6bc08c <col:13> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *')))))
    (UnaryOperator 0xa6bc108 <col:18, col:21> 'const wchar_t *' postfix '++'
      (DeclRefExpr 0xa6bc0ec <col:18> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *'))
    (IfStmt 0xa6bc348 <line:434:9, line:437:37>
      <<<NULL>>>
      (BinaryOperator 0xa6bc188 <line:434:13, col:21> '_Bool' '=='
        (ImplicitCastExpr 0xa6bc178 <col:13, col:14> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6bc148 <col:13, col:14> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6bc138 <col:14> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6bc11c <col:14> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *'))))
        (CharacterLiteral 0xa6bc160 <col:21> 'wchar_t'92))
      (CompoundAssignOperator 0xa6bc248 <line:435:13, col:39> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
        (DeclRefExpr 0xa6bc1a0 <col:13> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *')
        (CXXMemberCallExpr 0xa6bc210 <col:20, col:39> 'long'
          (MemberExpr 0xa6bc1c8 <col:20> '<bound member function type>' ->print_esc 0xa6b9d20
            (CXXThisExpr 0xa6bc1b8 <col:20> 'struct builtin_printf_state_t *' this))
          (ImplicitCastExpr 0xa6bc238 <col:30> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6bc1e8 <col:30> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *'))
          (CXXBoolLiteralExpr 0xa6bc200 <col:35> '_Bool' true)))
      (CXXMemberCallExpr 0xa6bc318 <line:437:13, col:37> 'void'
        (MemberExpr 0xa6bc2f4 <col:13, col:19> '<bound member function type>' ->append_output 0xa6b69c0
          (CXXThisExpr 0xa6bc268 <col:13> 'struct builtin_printf_state_t *' this))
        (ImplicitCastExpr 0xa6bc338 <col:33, col:34> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa6bc2e0 <col:33, col:34> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa6bc2d0 <col:34> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6bc2b8 <col:34> 'const wchar_t *' lvalue ParmVar 0xa6bbfb0 'str' 'const wchar_t *'))))))))


void print_direc(const wchar_t *start, size_t length, wchar_t conversion, bool have_field_width, int field_width, bool have_precision, int precision, const wchar_t *argument) (CompoundStmt 0xa6734f8 <../codeBase/fish-shell-master/builtin_printf.cpp:452:1, line:582:1>
  (DeclStmt 0xa6bc8a8 <line:454:5, col:32>
    0xa6bc6e0 "wcstring fmt =
      (ExprWithCleanups 0xa6bc888 <col:14, col:31> 'wcstring':'class std::basic_string<wchar_t>'
        (CXXTemporary 0xa6bc7e0)
        (CXXConstructExpr 0xa6bc858 <col:14, col:31> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, size_type, const class std::allocator<wchar_t> &)'
          (ImplicitCastExpr 0xa6bc788 <col:18> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa6bc714 <col:18> 'const wchar_t *' lvalue ParmVar 0xa6bc3d0 'start' 'const wchar_t *'))
          (ImplicitCastExpr 0xa6bc798 <col:25> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0xa6bc72c <col:25> 'size_t':'unsigned int' lvalue ParmVar 0xa6bc410 'length' 'size_t':'unsigned int'))
          (CXXDefaultArgExpr 0xa6bc840 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue)))")
  (SwitchStmt 0xa6bc8e0 <line:457:5, line:479:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6bc8d0 <line:457:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa6bc8b8 <col:13> 'wchar_t' lvalue ParmVar 0xa6bc450 'conversion' 'wchar_t'))
    (CompoundStmt 0xa6bcea8 <line:458:5, line:479:5>
      (CaseStmt 0xa6bc918 <line:459:9, line:462:29>
        (CharacterLiteral 0xa6bc900 <line:459:14> 'wchar_t'100)
        <<<NULL>>>
        (CaseStmt 0xa6bc950 <line:460:9, line:462:29>
          (CharacterLiteral 0xa6bc938 <line:460:14> 'wchar_t'105)
          <<<NULL>>>
          (CaseStmt 0xa6bc988 <line:461:9, line:462:29>
            (CharacterLiteral 0xa6bc970 <line:461:14> 'wchar_t'117)
            <<<NULL>>>
            (CXXMemberCallExpr 0xa6bca98 <line:462:13, col:29> 'class std::basic_string<wchar_t>' lvalue
              (MemberExpr 0xa6bca74 <col:13, col:17> '<bound member function type>' .append 0xa392c70
                (DeclRefExpr 0xa6bc9a8 <col:13> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))
              (ImplicitCastExpr 0xa6bcab8 <col:24> 'const wchar_t *' <ArrayToPointerDecay>
                (StringLiteral 0xa6bca50 <col:24> 'const wchar_t [3]' lvalue L"l\000\000\000l\000\000\000"))))))
      (BreakStmt 0xa6bcac8 <line:463:13>)
      (CaseStmt 0xa6bcae8 <line:464:9, line:472:28>
        (CharacterLiteral 0xa6bcad0 <line:464:14> 'wchar_t'97)
        <<<NULL>>>
        (CaseStmt 0xa6bcb20 <line:465:9, line:472:28>
          (CharacterLiteral 0xa6bcb08 <line:465:14> 'wchar_t'101)
          <<<NULL>>>
          (CaseStmt 0xa6bcb58 <line:466:9, line:472:28>
            (CharacterLiteral 0xa6bcb40 <line:466:14> 'wchar_t'102)
            <<<NULL>>>
            (CaseStmt 0xa6bcb90 <line:467:9, line:472:28>
              (CharacterLiteral 0xa6bcb78 <line:467:14> 'wchar_t'103)
              <<<NULL>>>
              (CaseStmt 0xa6bcbc8 <line:468:9, line:472:28>
                (CharacterLiteral 0xa6bcbb0 <line:468:14> 'wchar_t'65)
                <<<NULL>>>
                (CaseStmt 0xa6bcc00 <line:469:9, line:472:28>
                  (CharacterLiteral 0xa6bcbe8 <line:469:14> 'wchar_t'69)
                  <<<NULL>>>
                  (CaseStmt 0xa6bcc38 <line:470:9, line:472:28>
                    (CharacterLiteral 0xa6bcc20 <line:470:14> 'wchar_t'70)
                    <<<NULL>>>
                    (CaseStmt 0xa6bcc70 <line:471:9, line:472:28>
                      (CharacterLiteral 0xa6bcc58 <line:471:14> 'wchar_t'71)
                      <<<NULL>>>
                      (CXXMemberCallExpr 0xa6bcd38 <line:472:13, col:28> 'class std::basic_string<wchar_t>' lvalue
                        (MemberExpr 0xa6bcd18 <col:13, col:17> '<bound member function type>' .append 0xa392c70
                          (DeclRefExpr 0xa6bcc90 <col:13> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))
                        (ImplicitCastExpr 0xa6bcd58 <col:24> 'const wchar_t *' <ArrayToPointerDecay>
                          (StringLiteral 0xa6bccf8 <col:24> 'const wchar_t [2]' lvalue L"L\000\000\000")))))))))))
      (BreakStmt 0xa6bcd68 <line:473:13>)
      (CaseStmt 0xa6bcd88 <line:474:9, line:475:28>
        (CharacterLiteral 0xa6bcd70 <line:474:14> 'wchar_t'115)
        <<<NULL>>>
        (CXXMemberCallExpr 0xa6bce50 <line:475:13, col:28> 'class std::basic_string<wchar_t>' lvalue
          (MemberExpr 0xa6bce30 <col:13, col:17> '<bound member function type>' .append 0xa392c70
            (DeclRefExpr 0xa6bcda8 <col:13> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))
          (ImplicitCastExpr 0xa6bce70 <col:24> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0xa6bce10 <col:24> 'const wchar_t [2]' lvalue L"l\000\000\000"))))
      (BreakStmt 0xa6bce80 <line:476:13>)
      (DefaultStmt 0xa6bce90 <line:477:9, line:478:13>
        (BreakStmt 0xa6bce88 <col:13>))))
  (CXXMemberCallExpr 0xa6bcf28 <line:482:5, col:29> 'void'
    (MemberExpr 0xa6bceec <col:5, col:9> '<bound member function type>' .push_back 0xa393420
      (DeclRefExpr 0xa6bced4 <col:5> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))
    (ImplicitCastExpr 0xa6bcf48 <col:19> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa6bcf0c <col:19> 'wchar_t' lvalue ParmVar 0xa6bc450 'conversion' 'wchar_t')))
  (SwitchStmt 0xa6bcf80 <line:484:5, line:581:5>
    <<<NULL>>>
    (ImplicitCastExpr 0xa6bcf70 <line:484:13> 'wchar_t' <LValueToRValue>
      (DeclRefExpr 0xa6bcf54 <col:13> 'wchar_t' lvalue ParmVar 0xa6bc450 'conversion' 'wchar_t'))
    (CompoundStmt 0xa6734c0 <line:485:5, line:581:5>
      (CaseStmt 0xa6bcfb8 <line:486:9, line:504:9>
        (CharacterLiteral 0xa6bcfa0 <line:486:14> 'wchar_t'100)
        <<<NULL>>>
        (CaseStmt 0xa6bcff0 <line:487:9, line:504:9>
          (CharacterLiteral 0xa6bcfd8 <line:487:14> 'wchar_t'105)
          <<<NULL>>>
          (CompoundStmt 0xa671548 <line:488:9, line:504:9>
            (DeclStmt 0xa6bd450 <line:489:13, col:75>
              0xa6bd020 "intmax_t arg =
                (CallExpr 0xa6bd418 <col:28, col:74> 'long long':'long long'
                  (ImplicitCastExpr 0xa6bd408 <col:28, col:58> 'long long (*)(const wchar_t *, struct builtin_printf_state_t *)' <FunctionToPointerDecay>
                    (DeclRefExpr 0xa6bd378 <col:28, col:58> 'long long (const wchar_t *, struct builtin_printf_state_t *)' lvalue Function 0xa6bd2d0 'string_to_scalar_type' 'long long (const wchar_t *, struct builtin_printf_state_t *)' (FunctionTemplate 0xa6b8a60 'string_to_scalar_type')))
                  (ImplicitCastExpr 0xa6bd440 <col:60> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6bd0c8 <col:60> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *'))
                  (CXXThisExpr 0xa6bd0e0 <col:70> 'struct builtin_printf_state_t *' this))")
            (IfStmt 0xa671528 <line:490:13, line:503:13>
              <<<NULL>>>
              (UnaryOperator 0xa6bd488 <line:490:17, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa6bd478 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa6bd460 <col:19> '_Bool' lvalue ParmVar 0xa6bc490 'have_field_width' '_Bool')))
              (CompoundStmt 0xa671248 <line:491:13, line:496:13>
                (IfStmt 0xa671228 <line:492:17, line:495:75>
                  <<<NULL>>>
                  (UnaryOperator 0xa6bd4c8 <line:492:21, col:23> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa6bd4b8 <col:23> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa6bd49c <col:23> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                  (CXXMemberCallExpr 0xa6bd590 <line:493:21, col:64> 'void'
                    (MemberExpr 0xa6bd4f0 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                      (CXXThisExpr 0xa6bd4e0 <col:21> 'struct builtin_printf_state_t *' this))
                    (CXXMemberCallExpr 0xa6bd548 <col:48, col:58> 'const wchar_t *'
                      (MemberExpr 0xa6bd528 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                        (ImplicitCastExpr 0xa6bd568 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                          (DeclRefExpr 0xa6bd510 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                    (ImplicitCastExpr 0xa6bd5b8 <col:61> 'intmax_t':'long long' <LValueToRValue>
                      (DeclRefExpr 0xa6bd574 <col:61> 'intmax_t':'long long' lvalue Var 0xa6bd020 'arg' 'intmax_t':'long long')))
                  (CXXMemberCallExpr 0xa6711e0 <line:495:21, col:75> 'void'
                    (MemberExpr 0xa6bd5d8 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                      (CXXThisExpr 0xa6bd5c8 <col:21> 'struct builtin_printf_state_t *' this))
                    (CXXMemberCallExpr 0xa6bd630 <col:48, col:58> 'const wchar_t *'
                      (MemberExpr 0xa6bd610 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                        (ImplicitCastExpr 0xa6bd650 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                          (DeclRefExpr 0xa6bd5f8 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                    (ImplicitCastExpr 0xa671208 <col:61> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa6bd65c <col:61> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                    (ImplicitCastExpr 0xa671218 <col:72> 'intmax_t':'long long' <LValueToRValue>
                      (DeclRefExpr 0xa6bd674 <col:72> 'intmax_t':'long long' lvalue Var 0xa6bd020 'arg' 'intmax_t':'long long')))))
              (CompoundStmt 0xa671510 <line:498:13, line:503:13>
                (IfStmt 0xa6714f0 <line:499:17, line:502:88>
                  <<<NULL>>>
                  (UnaryOperator 0xa671288 <line:499:21, col:23> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa671278 <col:23> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa67125c <col:23> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                  (CXXMemberCallExpr 0xa671368 <line:500:21, col:77> 'void'
                    (MemberExpr 0xa6712b0 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                      (CXXThisExpr 0xa6712a0 <col:21> 'struct builtin_printf_state_t *' this))
                    (CXXMemberCallExpr 0xa671308 <col:48, col:58> 'const wchar_t *'
                      (MemberExpr 0xa6712e8 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                        (ImplicitCastExpr 0xa671328 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                          (DeclRefExpr 0xa6712d0 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                    (ImplicitCastExpr 0xa671390 <col:61> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa671334 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                    (ImplicitCastExpr 0xa6713a0 <col:74> 'intmax_t':'long long' <LValueToRValue>
                      (DeclRefExpr 0xa67134c <col:74> 'intmax_t':'long long' lvalue Var 0xa6bd020 'arg' 'intmax_t':'long long')))
                  (CXXMemberCallExpr 0xa671490 <line:502:21, col:88> 'void'
                    (MemberExpr 0xa6713c0 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                      (CXXThisExpr 0xa6713b0 <col:21> 'struct builtin_printf_state_t *' this))
                    (CXXMemberCallExpr 0xa671418 <col:48, col:58> 'const wchar_t *'
                      (MemberExpr 0xa6713f8 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                        (ImplicitCastExpr 0xa671438 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                          (DeclRefExpr 0xa6713e0 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                    (ImplicitCastExpr 0xa6714c0 <col:61> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa671444 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                    (ImplicitCastExpr 0xa6714d0 <col:74> 'int' <LValueToRValue>
                      (DeclRefExpr 0xa67145c <col:74> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                    (ImplicitCastExpr 0xa6714e0 <col:85> 'intmax_t':'long long' <LValueToRValue>
                      (DeclRefExpr 0xa671474 <col:85> 'intmax_t':'long long' lvalue Var 0xa6bd020 'arg' 'intmax_t':'long long')))))))))
      (BreakStmt 0xa671560 <line:505:9>)
      (CaseStmt 0xa671580 <line:507:9, line:527:9>
        (CharacterLiteral 0xa671568 <line:507:14> 'wchar_t'111)
        <<<NULL>>>
        (CaseStmt 0xa6715b8 <line:508:9, line:527:9>
          (CharacterLiteral 0xa6715a0 <line:508:14> 'wchar_t'117)
          <<<NULL>>>
          (CaseStmt 0xa6715f0 <line:509:9, line:527:9>
            (CharacterLiteral 0xa6715d8 <line:509:14> 'wchar_t'120)
            <<<NULL>>>
            (CaseStmt 0xa671628 <line:510:9, line:527:9>
              (CharacterLiteral 0xa671610 <line:510:14> 'wchar_t'88)
              <<<NULL>>>
              (CompoundStmt 0xa672008 <line:511:9, line:527:9>
                (DeclStmt 0xa671a60 <line:512:13, col:77>
                  0xa671650 "uintmax_t arg =
                    (CallExpr 0xa671a28 <col:29, col:76> 'unsigned long long':'unsigned long long'
                      (ImplicitCastExpr 0xa671a18 <col:29, col:60> 'unsigned long long (*)(const wchar_t *, struct builtin_printf_state_t *)' <FunctionToPointerDecay>
                        (DeclRefExpr 0xa671988 <col:29, col:60> 'unsigned long long (const wchar_t *, struct builtin_printf_state_t *)' lvalue Function 0xa6718e0 'string_to_scalar_type' 'unsigned long long (const wchar_t *, struct builtin_printf_state_t *)' (FunctionTemplate 0xa6b8a60 'string_to_scalar_type')))
                      (ImplicitCastExpr 0xa671a50 <col:62> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa6716f8 <col:62> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *'))
                      (CXXThisExpr 0xa671710 <col:72> 'struct builtin_printf_state_t *' this))")
                (IfStmt 0xa671fe8 <line:513:13, line:526:13>
                  <<<NULL>>>
                  (UnaryOperator 0xa671a98 <line:513:17, col:18> '_Bool' prefix '!'
                    (ImplicitCastExpr 0xa671a88 <col:18> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0xa671a70 <col:18> '_Bool' lvalue ParmVar 0xa6bc490 'have_field_width' '_Bool')))
                  (CompoundStmt 0xa671d08 <line:514:13, line:519:13>
                    (IfStmt 0xa671ce8 <line:515:17, line:518:75>
                      <<<NULL>>>
                      (UnaryOperator 0xa671ad8 <line:515:21, col:22> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa671ac8 <col:22> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa671aac <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                      (CXXMemberCallExpr 0xa671ba0 <line:516:21, col:64> 'void'
                        (MemberExpr 0xa671b00 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                          (CXXThisExpr 0xa671af0 <col:21> 'struct builtin_printf_state_t *' this))
                        (CXXMemberCallExpr 0xa671b58 <col:48, col:58> 'const wchar_t *'
                          (MemberExpr 0xa671b38 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                            (ImplicitCastExpr 0xa671b78 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                              (DeclRefExpr 0xa671b20 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                        (ImplicitCastExpr 0xa671bc8 <col:61> 'uintmax_t':'unsigned long long' <LValueToRValue>
                          (DeclRefExpr 0xa671b84 <col:61> 'uintmax_t':'unsigned long long' lvalue Var 0xa671650 'arg' 'uintmax_t':'unsigned long long')))
                      (CXXMemberCallExpr 0xa671ca0 <line:518:21, col:75> 'void'
                        (MemberExpr 0xa671be8 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                          (CXXThisExpr 0xa671bd8 <col:21> 'struct builtin_printf_state_t *' this))
                        (CXXMemberCallExpr 0xa671c40 <col:48, col:58> 'const wchar_t *'
                          (MemberExpr 0xa671c20 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                            (ImplicitCastExpr 0xa671c60 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                              (DeclRefExpr 0xa671c08 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                        (ImplicitCastExpr 0xa671cc8 <col:61> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa671c6c <col:61> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                        (ImplicitCastExpr 0xa671cd8 <col:72> 'uintmax_t':'unsigned long long' <LValueToRValue>
                          (DeclRefExpr 0xa671c84 <col:72> 'uintmax_t':'unsigned long long' lvalue Var 0xa671650 'arg' 'uintmax_t':'unsigned long long')))))
                  (CompoundStmt 0xa671fd0 <line:521:13, line:526:13>
                    (IfStmt 0xa671fb0 <line:522:17, line:525:88>
                      <<<NULL>>>
                      (UnaryOperator 0xa671d48 <line:522:21, col:22> '_Bool' prefix '!'
                        (ImplicitCastExpr 0xa671d38 <col:22> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0xa671d1c <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                      (CXXMemberCallExpr 0xa671e28 <line:523:21, col:77> 'void'
                        (MemberExpr 0xa671d70 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                          (CXXThisExpr 0xa671d60 <col:21> 'struct builtin_printf_state_t *' this))
                        (CXXMemberCallExpr 0xa671dc8 <col:48, col:58> 'const wchar_t *'
                          (MemberExpr 0xa671da8 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                            (ImplicitCastExpr 0xa671de8 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                              (DeclRefExpr 0xa671d90 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                        (ImplicitCastExpr 0xa671e50 <col:61> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa671df4 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                        (ImplicitCastExpr 0xa671e60 <col:74> 'uintmax_t':'unsigned long long' <LValueToRValue>
                          (DeclRefExpr 0xa671e0c <col:74> 'uintmax_t':'unsigned long long' lvalue Var 0xa671650 'arg' 'uintmax_t':'unsigned long long')))
                      (CXXMemberCallExpr 0xa671f50 <line:525:21, col:88> 'void'
                        (MemberExpr 0xa671e80 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                          (CXXThisExpr 0xa671e70 <col:21> 'struct builtin_printf_state_t *' this))
                        (CXXMemberCallExpr 0xa671ed8 <col:48, col:58> 'const wchar_t *'
                          (MemberExpr 0xa671eb8 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                            (ImplicitCastExpr 0xa671ef8 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                              (DeclRefExpr 0xa671ea0 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                        (ImplicitCastExpr 0xa671f80 <col:61> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa671f04 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                        (ImplicitCastExpr 0xa671f90 <col:74> 'int' <LValueToRValue>
                          (DeclRefExpr 0xa671f1c <col:74> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                        (ImplicitCastExpr 0xa671fa0 <col:85> 'uintmax_t':'unsigned long long' <LValueToRValue>
                          (DeclRefExpr 0xa671f34 <col:85> 'uintmax_t':'unsigned long long' lvalue Var 0xa671650 'arg' 'uintmax_t':'unsigned long long')))))))))))
      (BreakStmt 0xa672020 <line:528:9>)
      (CaseStmt 0xa672040 <line:530:9, line:554:9>
        (CharacterLiteral 0xa672028 <line:530:14> 'wchar_t'97)
        <<<NULL>>>
        (CaseStmt 0xa672078 <line:531:9, line:554:9>
          (CharacterLiteral 0xa672060 <line:531:14> 'wchar_t'65)
          <<<NULL>>>
          (CaseStmt 0xa6720b0 <line:532:9, line:554:9>
            (CharacterLiteral 0xa672098 <line:532:14> 'wchar_t'101)
            <<<NULL>>>
            (CaseStmt 0xa6720e8 <line:533:9, line:554:9>
              (CharacterLiteral 0xa6720d0 <line:533:14> 'wchar_t'69)
              <<<NULL>>>
              (CaseStmt 0xa672120 <line:534:9, line:554:9>
                (CharacterLiteral 0xa672108 <line:534:14> 'wchar_t'102)
                <<<NULL>>>
                (CaseStmt 0xa672158 <line:535:9, line:554:9>
                  (CharacterLiteral 0xa672140 <line:535:14> 'wchar_t'70)
                  <<<NULL>>>
                  (CaseStmt 0xa672190 <line:536:9, line:554:9>
                    (CharacterLiteral 0xa672178 <line:536:14> 'wchar_t'103)
                    <<<NULL>>>
                    (CaseStmt 0xa6721c8 <line:537:9, line:554:9>
                      (CharacterLiteral 0xa6721b0 <line:537:14> 'wchar_t'71)
                      <<<NULL>>>
                      (CompoundStmt 0xa672bc8 <line:538:9, line:554:9>
                        (DeclStmt 0xa672620 <line:539:13, col:81>
                          0xa672200 "long double arg =
                            (CallExpr 0xa6725e8 <col:31, col:80> 'long double':'long double'
                              (ImplicitCastExpr 0xa6725d8 <col:31, col:64> 'long double (*)(const wchar_t *, struct builtin_printf_state_t *)' <FunctionToPointerDecay>
                                (DeclRefExpr 0xa672548 <col:31, col:64> 'long double (const wchar_t *, struct builtin_printf_state_t *)' lvalue Function 0xa6724a0 'string_to_scalar_type' 'long double (const wchar_t *, struct builtin_printf_state_t *)' (FunctionTemplate 0xa6b8a60 'string_to_scalar_type')))
                              (ImplicitCastExpr 0xa672610 <col:66> 'const wchar_t *' <LValueToRValue>
                                (DeclRefExpr 0xa6722b0 <col:66> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *'))
                              (CXXThisExpr 0xa6722c8 <col:76> 'struct builtin_printf_state_t *' this))")
                        (IfStmt 0xa672ba8 <line:540:13, line:553:13>
                          <<<NULL>>>
                          (UnaryOperator 0xa672658 <line:540:17, col:18> '_Bool' prefix '!'
                            (ImplicitCastExpr 0xa672648 <col:18> '_Bool' <LValueToRValue>
                              (DeclRefExpr 0xa672630 <col:18> '_Bool' lvalue ParmVar 0xa6bc490 'have_field_width' '_Bool')))
                          (CompoundStmt 0xa6728c8 <line:541:13, line:546:13>
                            (IfStmt 0xa6728a8 <line:542:17, line:545:75>
                              <<<NULL>>>
                              (UnaryOperator 0xa672698 <line:542:21, col:22> '_Bool' prefix '!'
                                (ImplicitCastExpr 0xa672688 <col:22> '_Bool' <LValueToRValue>
                                  (DeclRefExpr 0xa67266c <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                              (CXXMemberCallExpr 0xa672760 <line:543:21, col:64> 'void'
                                (MemberExpr 0xa6726c0 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                                  (CXXThisExpr 0xa6726b0 <col:21> 'struct builtin_printf_state_t *' this))
                                (CXXMemberCallExpr 0xa672718 <col:48, col:58> 'const wchar_t *'
                                  (MemberExpr 0xa6726f8 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                                    (ImplicitCastExpr 0xa672738 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                                      (DeclRefExpr 0xa6726e0 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                                (ImplicitCastExpr 0xa672788 <col:61> 'long double' <LValueToRValue>
                                  (DeclRefExpr 0xa672744 <col:61> 'long double' lvalue Var 0xa672200 'arg' 'long double')))
                              (CXXMemberCallExpr 0xa672860 <line:545:21, col:75> 'void'
                                (MemberExpr 0xa6727a8 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                                  (CXXThisExpr 0xa672798 <col:21> 'struct builtin_printf_state_t *' this))
                                (CXXMemberCallExpr 0xa672800 <col:48, col:58> 'const wchar_t *'
                                  (MemberExpr 0xa6727e0 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                                    (ImplicitCastExpr 0xa672820 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                                      (DeclRefExpr 0xa6727c8 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                                (ImplicitCastExpr 0xa672888 <col:61> 'int' <LValueToRValue>
                                  (DeclRefExpr 0xa67282c <col:61> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                                (ImplicitCastExpr 0xa672898 <col:72> 'long double' <LValueToRValue>
                                  (DeclRefExpr 0xa672844 <col:72> 'long double' lvalue Var 0xa672200 'arg' 'long double')))))
                          (CompoundStmt 0xa672b90 <line:548:13, line:553:13>
                            (IfStmt 0xa672b70 <line:549:17, line:552:88>
                              <<<NULL>>>
                              (UnaryOperator 0xa672908 <line:549:21, col:22> '_Bool' prefix '!'
                                (ImplicitCastExpr 0xa6728f8 <col:22> '_Bool' <LValueToRValue>
                                  (DeclRefExpr 0xa6728dc <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
                              (CXXMemberCallExpr 0xa6729e8 <line:550:21, col:77> 'void'
                                (MemberExpr 0xa672930 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                                  (CXXThisExpr 0xa672920 <col:21> 'struct builtin_printf_state_t *' this))
                                (CXXMemberCallExpr 0xa672988 <col:48, col:58> 'const wchar_t *'
                                  (MemberExpr 0xa672968 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                                    (ImplicitCastExpr 0xa6729a8 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                                      (DeclRefExpr 0xa672950 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                                (ImplicitCastExpr 0xa672a10 <col:61> 'int' <LValueToRValue>
                                  (DeclRefExpr 0xa6729b4 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                                (ImplicitCastExpr 0xa672a20 <col:74> 'long double' <LValueToRValue>
                                  (DeclRefExpr 0xa6729cc <col:74> 'long double' lvalue Var 0xa672200 'arg' 'long double')))
                              (CXXMemberCallExpr 0xa672b10 <line:552:21, col:88> 'void'
                                (MemberExpr 0xa672a40 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                                  (CXXThisExpr 0xa672a30 <col:21> 'struct builtin_printf_state_t *' this))
                                (CXXMemberCallExpr 0xa672a98 <col:48, col:58> 'const wchar_t *'
                                  (MemberExpr 0xa672a78 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                                    (ImplicitCastExpr 0xa672ab8 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                                      (DeclRefExpr 0xa672a60 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                                (ImplicitCastExpr 0xa672b40 <col:61> 'int' <LValueToRValue>
                                  (DeclRefExpr 0xa672ac4 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                                (ImplicitCastExpr 0xa672b50 <col:74> 'int' <LValueToRValue>
                                  (DeclRefExpr 0xa672adc <col:74> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                                (ImplicitCastExpr 0xa672b60 <col:85> 'long double' <LValueToRValue>
                                  (DeclRefExpr 0xa672af4 <col:85> 'long double' lvalue Var 0xa672200 'arg' 'long double')))))))))))))))
      (BreakStmt 0xa672be0 <line:555:9>)
      (CaseStmt 0xa672c00 <line:557:9, line:561:79>
        (CharacterLiteral 0xa672be8 <line:557:14> 'wchar_t'99)
        <<<NULL>>>
        (IfStmt 0xa672ea8 <line:558:13, line:561:79>
          <<<NULL>>>
          (UnaryOperator 0xa672c48 <line:558:17, col:18> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa672c38 <col:18> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa672c20 <col:18> '_Bool' lvalue ParmVar 0xa6bc490 'have_field_width' '_Bool')))
          (CXXMemberCallExpr 0xa672d38 <line:559:17, col:66> 'void'
            (MemberExpr 0xa672c70 <col:17, col:23> '<bound member function type>' ->append_format_output 0xa6b6d00
              (CXXThisExpr 0xa672c60 <col:17> 'struct builtin_printf_state_t *' this))
            (CXXMemberCallExpr 0xa672cc8 <col:44, col:54> 'const wchar_t *'
              (MemberExpr 0xa672ca8 <col:44, col:48> '<bound member function type>' .c_str 0xa3a0780
                (ImplicitCastExpr 0xa672ce8 <col:44> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                  (DeclRefExpr 0xa672c90 <col:44> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
            (ImplicitCastExpr 0xa672d60 <col:57, col:58> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa672d20 <col:57, col:58> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa672d10 <col:58> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa672cf4 <col:58> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *')))))
          (CXXMemberCallExpr 0xa672e60 <line:561:17, col:79> 'void'
            (MemberExpr 0xa672d80 <col:17, col:23> '<bound member function type>' ->append_format_output 0xa6b6d00
              (CXXThisExpr 0xa672d70 <col:17> 'struct builtin_printf_state_t *' this))
            (CXXMemberCallExpr 0xa672dd8 <col:44, col:54> 'const wchar_t *'
              (MemberExpr 0xa672db8 <col:44, col:48> '<bound member function type>' .c_str 0xa3a0780
                (ImplicitCastExpr 0xa672df8 <col:44> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                  (DeclRefExpr 0xa672da0 <col:44> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
            (ImplicitCastExpr 0xa672e88 <col:57> 'int' <LValueToRValue>
              (DeclRefExpr 0xa672e04 <col:57> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
            (ImplicitCastExpr 0xa672e98 <col:70, col:71> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa672e48 <col:70, col:71> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa672e38 <col:71> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa672e1c <col:71> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *')))))))
      (BreakStmt 0xa672ec8 <line:562:13>)
      (CaseStmt 0xa672ee8 <line:563:9, line:579:13>
        (CharacterLiteral 0xa672ed0 <line:563:14> 'wchar_t'115)
        <<<NULL>>>
        (IfStmt 0xa673498 <line:564:13, line:579:13>
          <<<NULL>>>
          (UnaryOperator 0xa672f30 <line:564:17, col:18> '_Bool' prefix '!'
            (ImplicitCastExpr 0xa672f20 <col:18> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa672f08 <col:18> '_Bool' lvalue ParmVar 0xa6bc490 'have_field_width' '_Bool')))
          (CompoundStmt 0xa6731b8 <line:565:13, line:572:13>
            (IfStmt 0xa673198 <line:566:17, line:571:80>
              <<<NULL>>>
              (UnaryOperator 0xa672f70 <line:566:21, col:22> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa672f60 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa672f44 <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
              (CompoundStmt 0xa673070 <line:567:17, line:569:17>
                (CXXMemberCallExpr 0xa673038 <line:568:21, col:69> 'void'
                  (MemberExpr 0xa672f98 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                    (CXXThisExpr 0xa672f88 <col:21> 'struct builtin_printf_state_t *' this))
                  (CXXMemberCallExpr 0xa672ff0 <col:48, col:58> 'const wchar_t *'
                    (MemberExpr 0xa672fd0 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                      (ImplicitCastExpr 0xa673010 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                        (DeclRefExpr 0xa672fb8 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                  (ImplicitCastExpr 0xa673060 <col:61> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa67301c <col:61> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *'))))
              (CXXMemberCallExpr 0xa673150 <line:571:21, col:80> 'void'
                (MemberExpr 0xa673098 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                  (CXXThisExpr 0xa673088 <col:21> 'struct builtin_printf_state_t *' this))
                (CXXMemberCallExpr 0xa6730f0 <col:48, col:58> 'const wchar_t *'
                  (MemberExpr 0xa6730d0 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                    (ImplicitCastExpr 0xa673110 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                      (DeclRefExpr 0xa6730b8 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                (ImplicitCastExpr 0xa673178 <col:61> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa67311c <col:61> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                (ImplicitCastExpr 0xa673188 <col:72> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa673134 <col:72> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *')))))
          (CompoundStmt 0xa673480 <line:574:13, line:579:13>
            (IfStmt 0xa673460 <line:575:17, line:578:93>
              <<<NULL>>>
              (UnaryOperator 0xa6731f8 <line:575:21, col:22> '_Bool' prefix '!'
                (ImplicitCastExpr 0xa6731e8 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0xa6731cc <col:22> '_Bool' lvalue ParmVar 0xa6bc520 'have_precision' '_Bool')))
              (CXXMemberCallExpr 0xa6732d8 <line:576:21, col:82> 'void'
                (MemberExpr 0xa673220 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                  (CXXThisExpr 0xa673210 <col:21> 'struct builtin_printf_state_t *' this))
                (CXXMemberCallExpr 0xa673278 <col:48, col:58> 'const wchar_t *'
                  (MemberExpr 0xa673258 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                    (ImplicitCastExpr 0xa673298 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                      (DeclRefExpr 0xa673240 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                (ImplicitCastExpr 0xa673300 <col:61> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa6732a4 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                (ImplicitCastExpr 0xa673310 <col:74> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6732bc <col:74> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *')))
              (CXXMemberCallExpr 0xa673400 <line:578:21, col:93> 'void'
                (MemberExpr 0xa673330 <col:21, col:27> '<bound member function type>' ->append_format_output 0xa6b6d00
                  (CXXThisExpr 0xa673320 <col:21> 'struct builtin_printf_state_t *' this))
                (CXXMemberCallExpr 0xa673388 <col:48, col:58> 'const wchar_t *'
                  (MemberExpr 0xa673368 <col:48, col:52> '<bound member function type>' .c_str 0xa3a0780
                    (ImplicitCastExpr 0xa6733a8 <col:48> 'const class std::basic_string<wchar_t>' lvalue <NoOp>
                      (DeclRefExpr 0xa673350 <col:48> 'wcstring':'class std::basic_string<wchar_t>' lvalue Var 0xa6bc6e0 'fmt' 'wcstring':'class std::basic_string<wchar_t>'))))
                (ImplicitCastExpr 0xa673430 <col:61> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa6733b4 <col:61> 'int' lvalue ParmVar 0xa6bc4e0 'field_width' 'int'))
                (ImplicitCastExpr 0xa673440 <col:74> 'int' <LValueToRValue>
                  (DeclRefExpr 0xa6733cc <col:74> 'int' lvalue ParmVar 0xa6bc570 'precision' 'int'))
                (ImplicitCastExpr 0xa673450 <col:85> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6733e4 <col:85> 'const wchar_t *' lvalue ParmVar 0xa6bc5c0 'argument' 'const wchar_t *')))))))
      (BreakStmt 0xa6734b8 <line:580:13>))))


static inline void modify_allowed_format_specifiers(bool ok, const char *str, bool flag) (CompoundStmt 0xa673970 <../codeBase/fish-shell-master/builtin_printf.cpp:586:1, line:592:1>
  (ForStmt 0xa673948 <line:587:5, line:591:5>
    (DeclStmt 0xa673740 <line:587:10, col:30>
      0xa6736e0 "const char *c =
        (ImplicitCastExpr 0xa673730 <col:27> 'const char *' <LValueToRValue>
          (DeclRefExpr 0xa673714 <col:27> 'const char *' lvalue ParmVar 0xa673590 'str' 'const char *'))")
    <<<NULL>>>
    (BinaryOperator 0xa6737d8 <col:32, col:38> '_Bool' '!='
      (ImplicitCastExpr 0xa6737b8 <col:32, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0xa6737a8 <col:32, col:33> 'char' <LValueToRValue>
          (UnaryOperator 0xa673778 <col:32, col:33> 'const char' lvalue prefix '*'
            (ImplicitCastExpr 0xa673768 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0xa673750 <col:33> 'const char *' lvalue Var 0xa6736e0 'c' 'const char *')))))
      (ImplicitCastExpr 0xa6737c8 <col:38> 'int' <IntegralCast>
        (CharacterLiteral 0xa673790 <col:38> 'char'0)))
    (UnaryOperator 0xa673808 <col:44, col:45> 'const char *' postfix '++'
      (DeclRefExpr 0xa6737f0 <col:44> 'const char *' lvalue Var 0xa6736e0 'c' 'const char *'))
    (CompoundStmt 0xa673930 <line:588:5, line:591:5>
      (DeclStmt 0xa6738f0 <line:589:9, col:59>
        0xa673830 "unsigned char idx =
          (CXXStaticCastExpr 0xa6738d8 <col:29, col:58> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0xa6738c8 <col:56, col:57> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0xa6738b8 <col:56, col:57> 'char' <LValueToRValue>
                (UnaryOperator 0xa673890 <col:56, col:57> 'const char' lvalue prefix '*'
                  (ImplicitCastExpr 0xa673880 <col:57> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0xa673864 <col:57> 'const char *' lvalue Var 0xa6736e0 'c' 'const char *'))))))"))))


int print_formatted(const wchar_t *format, int argc, wchar_t **argv) (CompoundStmt 0xa676b20 <../codeBase/fish-shell-master/builtin_printf.cpp:599:1, line:762:1>
  (DeclStmt 0xa673bc0 <line:600:5, col:25>
    0xa673b60 "int save_argc =
      (ImplicitCastExpr 0xa673bb0 <col:21> 'int' <LValueToRValue>
        (DeclRefExpr 0xa673b94 <col:21> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))")
  (DeclStmt 0xa673c18 <line:601:5, col:21>
    0xa673be0 "const wchar_t *f")
  (DeclStmt 0xa673c78 <line:602:5, col:31>
    0xa673c40 "const wchar_t *direc_start")
  (DeclStmt 0xa673cc8 <line:603:5, col:24>
    0xa673c90 "size_t direc_length")
  (DeclStmt 0xa673d18 <line:604:5, col:26>
    0xa673ce0 "bool have_field_width")
  (DeclStmt 0xa673d90 <line:605:5, col:24>
    0xa673d40 "int field_width =
      (IntegerLiteral 0xa673d78 <col:23> 'int' 0)")
  (DeclStmt 0xa673de8 <line:606:5, col:24>
    0xa673db0 "bool have_precision")
  (DeclStmt 0xa673e60 <line:607:5, col:22>
    0xa673e10 "int precision =
      (IntegerLiteral 0xa673e48 <col:21> 'int' 0)")
  (DeclStmt 0xa673ef0 <line:608:5, col:33>
    0xa673e90 "bool ok")
  (ForStmt 0xa676a80 <line:610:5, line:760:5>
    (BinaryOperator 0xa673f40 <line:610:10, col:14> 'const wchar_t *' lvalue '='
      (DeclRefExpr 0xa673f00 <col:10> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')
      (ImplicitCastExpr 0xa673f30 <col:14> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0xa673f18 <col:14> 'const wchar_t *' lvalue ParmVar 0xa6739b0 'format' 'const wchar_t *')))
    <<<NULL>>>
    (BinaryOperator 0xa673fc0 <col:22, col:28> '_Bool' '!='
      (ImplicitCastExpr 0xa673fb0 <col:22, col:23> 'wchar_t' <LValueToRValue>
        (UnaryOperator 0xa673f80 <col:22, col:23> 'const wchar_t' lvalue prefix '*'
          (ImplicitCastExpr 0xa673f70 <col:23> 'const wchar_t *' <LValueToRValue>
            (DeclRefExpr 0xa673f58 <col:23> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
      (CharacterLiteral 0xa673f98 <col:28> 'wchar_t'0))
    (UnaryOperator 0xa673ff0 <col:35, col:37> 'const wchar_t *' lvalue prefix '++'
      (DeclRefExpr 0xa673fd8 <col:37> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
    (CompoundStmt 0xa676a68 <line:611:5, line:760:5>
      (SwitchStmt 0xa674058 <line:612:9, line:759:9>
        <<<NULL>>>
        (ImplicitCastExpr 0xa674048 <line:612:17, col:18> 'wchar_t' <LValueToRValue>
          (UnaryOperator 0xa674030 <col:17, col:18> 'const wchar_t' lvalue prefix '*'
            (ImplicitCastExpr 0xa674020 <col:18> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa674004 <col:18> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
        (CompoundStmt 0xa676a18 <line:613:9, line:759:9>
          (CaseStmt 0xa674090 <line:614:13, line:615:32>
            (CharacterLiteral 0xa674078 <line:614:18> 'wchar_t'37)
            <<<NULL>>>
            (BinaryOperator 0xa6740f8 <line:615:17, col:32> 'const wchar_t *' lvalue '='
              (DeclRefExpr 0xa6740b0 <col:17> 'const wchar_t *' lvalue Var 0xa673c40 'direc_start' 'const wchar_t *')
              (UnaryOperator 0xa6740e0 <col:31, col:32> 'const wchar_t *' postfix '++'
                (DeclRefExpr 0xa6740c8 <col:31> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
          (BinaryOperator 0xa674150 <line:616:17, col:32> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0xa674110 <col:17> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int')
            (ImplicitCastExpr 0xa674140 <col:32> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0xa674128 <col:32> 'int' 1)))
          (BinaryOperator 0xa6741d0 <line:617:17, col:53> '_Bool' lvalue '='
            (DeclRefExpr 0xa674168 <col:17> '_Bool' lvalue Var 0xa673ce0 'have_field_width' '_Bool')
            (ImplicitCastExpr 0xa6741c0 <col:36, col:53> '_Bool' <LValueToRValue>
              (BinaryOperator 0xa6741a8 <col:36, col:53> '_Bool' lvalue '='
                (DeclRefExpr 0xa674180 <col:36> '_Bool' lvalue Var 0xa673db0 'have_precision' '_Bool')
                (CXXBoolLiteralExpr 0xa674198 <col:53> '_Bool' false))))
          (IfStmt 0xa674330 <line:618:17, line:622:17>
            <<<NULL>>>
            (BinaryOperator 0xa674250 <line:618:21, col:27> '_Bool' '=='
              (ImplicitCastExpr 0xa674240 <col:21, col:22> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa674210 <col:21, col:22> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa674200 <col:22> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6741e8 <col:22> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
              (CharacterLiteral 0xa674228 <col:27> 'wchar_t'37))
            (CompoundStmt 0xa674318 <line:619:17, line:622:17>
              (CXXMemberCallExpr 0xa6742f0 <line:620:21, col:45> 'void'
                (MemberExpr 0xa6742cc <col:21, col:27> '<bound member function type>' ->append_output 0xa6b69c0
                  (CXXThisExpr 0xa674268 <col:21> 'struct builtin_printf_state_t *' this))
                (CharacterLiteral 0xa6742b8 <col:41> 'wchar_t'37))
              (BreakStmt 0xa674310 <line:621:21>))
            <<<NULL>>>)
          (IfStmt 0xa674598 <line:623:17, line:634:17>
            <<<NULL>>>
            (BinaryOperator 0xa6743b8 <line:623:21, col:27> '_Bool' '=='
              (ImplicitCastExpr 0xa6743a8 <col:21, col:22> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa674378 <col:21, col:22> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa674368 <col:22> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa67434c <col:22> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
              (CharacterLiteral 0xa674390 <col:27> 'wchar_t'98))
            (CompoundStmt 0xa674580 <line:624:17, line:634:17>
              (IfStmt 0xa674558 <line:627:21, line:632:21>
                <<<NULL>>>
                (BinaryOperator 0xa674410 <line:627:25, col:32> '_Bool' '>'
                  (ImplicitCastExpr 0xa674400 <col:25> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa6743d0 <col:25> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))
                  (IntegerLiteral 0xa6743e8 <col:32> 'int' 0))
                (CompoundStmt 0xa674538 <line:628:21, line:632:21>
                  (CXXMemberCallExpr 0xa674498 <line:629:25, col:47> 'void'
                    (MemberExpr 0xa674438 <col:25> '<bound member function type>' ->print_esc_string 0xa6bc000
                      (CXXThisExpr 0xa674428 <col:25> 'struct builtin_printf_state_t *' this))
                    (ImplicitCastExpr 0xa6744c8 <col:42, col:43> 'const wchar_t *' <NoOp>
                      (ImplicitCastExpr 0xa6744b8 <col:42, col:43> 'wchar_t *' <LValueToRValue>
                        (UnaryOperator 0xa674480 <col:42, col:43> 'wchar_t *' lvalue prefix '*'
                          (ImplicitCastExpr 0xa674470 <col:43> 'wchar_t **' <LValueToRValue>
                            (DeclRefExpr 0xa674458 <col:43> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **'))))))
                  (UnaryOperator 0xa6744f0 <line:630:25, col:27> 'wchar_t **' lvalue prefix '++'
                    (DeclRefExpr 0xa6744d4 <col:27> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **'))
                  (UnaryOperator 0xa674520 <line:631:25, col:27> 'int' lvalue prefix '--'
                    (DeclRefExpr 0xa674504 <col:27> 'int' lvalue ParmVar 0xa673a00 'argc' 'int')))
                <<<NULL>>>)
              (BreakStmt 0xa674578 <line:633:21>))
            <<<NULL>>>)
          (ForStmt 0xa674a38 <line:638:17, line:659:17>
            <<<NULL>>>
            <<<NULL>>>
            <<<NULL>>>
            (BinaryOperator 0xa674650 <line:638:25, col:42> 'size_t':'unsigned int' ','
              (UnaryOperator 0xa674608 <col:25, col:26> 'const wchar_t *' postfix '++'
                (DeclRefExpr 0xa6745ec <col:25> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
              (UnaryOperator 0xa674638 <col:30, col:42> 'size_t':'unsigned int' postfix '++'
                (DeclRefExpr 0xa67461c <col:30> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int')))
            (CompoundStmt 0xa674a20 <line:639:17, line:659:17>
              (SwitchStmt 0xa6746b8 <line:640:21, line:658:21>
                <<<NULL>>>
                (ImplicitCastExpr 0xa6746a8 <line:640:29, col:30> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa674690 <col:29, col:30> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa674680 <col:30> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa674668 <col:30> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                (CompoundStmt 0xa6749b0 <line:641:21, line:658:21>
                  (CaseStmt 0xa6746f0 <line:642:25, <invalid sloc>>
                    (CharacterLiteral 0xa6746d8 <col:30> 'wchar_t'73)
                    <<<NULL>>>
                    (CaseStmt 0xa674728 <line:643:25, <invalid sloc>>
                      (CharacterLiteral 0xa674710 <col:30> 'wchar_t'39)
                      <<<NULL>>>
                      (NullStmt 0xa674780 <<invalid sloc>>)))
                  (BreakStmt 0xa674790 <line:645:29>)
                  (CaseStmt 0xa6747b0 <line:646:25, line:649:29>
                    (ImplicitCastExpr 0xa674a10 <line:646:30> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0xa674798 <col:30> 'char'45))
                    <<<NULL>>>
                    (CaseStmt 0xa6747e8 <line:647:25, line:649:29>
                      (ImplicitCastExpr 0xa674a00 <line:647:30> 'wchar_t' <IntegralCast>
                        (CharacterLiteral 0xa6747d0 <col:30> 'char'43))
                      <<<NULL>>>
                      (CaseStmt 0xa674820 <line:648:25, line:649:29>
                        (ImplicitCastExpr 0xa6749f0 <line:648:30> 'wchar_t' <IntegralCast>
                          (CharacterLiteral 0xa674808 <col:30> 'char'32))
                        <<<NULL>>>
                        (BreakStmt 0xa674840 <line:649:29>))))
                  (CaseStmt 0xa674860 <line:650:25, <invalid sloc>>
                    (CharacterLiteral 0xa674848 <col:30> 'wchar_t'35)
                    <<<NULL>>>
                    (NullStmt 0xa6748b8 <<invalid sloc>>))
                  (BreakStmt 0xa6748c8 <line:652:29>)
                  (CaseStmt 0xa6748e8 <line:653:25, <invalid sloc>>
                    (ImplicitCastExpr 0xa6749e0 <col:30> 'wchar_t' <IntegralCast>
                      (CharacterLiteral 0xa6748d0 <col:30> 'char'48))
                    <<<NULL>>>
                    (NullStmt 0xa674940 <<invalid sloc>>))
                  (BreakStmt 0xa674950 <line:655:29>)
                  (DefaultStmt 0xa674998 <line:656:25, line:657:34>
                    (GotoStmt 0xa674988 <col:29, col:34> 'no_more_flag_characters':0xa674960))))))
          (LabelStmt 0xa674a70 <line:660:1, line:661:17> 'no_more_flag_characters'
            (NullStmt 0xa674a60 <col:17>))
          (IfStmt 0xa6753a0 <line:663:17, line:690:17>
            <<<NULL>>>
            (BinaryOperator 0xa674ae8 <line:663:21, col:27> '_Bool' '=='
              (ImplicitCastExpr 0xa674ad8 <col:21, col:22> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa674aa8 <col:21, col:22> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa674a98 <col:22> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa674a80 <col:22> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
              (CharacterLiteral 0xa674ac0 <col:27> 'wchar_t'42))
            (CompoundStmt 0xa6751d0 <line:664:17, line:682:17>
              (UnaryOperator 0xa674b18 <line:665:21, col:23> 'const wchar_t *' lvalue prefix '++'
                (DeclRefExpr 0xa674b00 <col:23> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
              (UnaryOperator 0xa674b48 <line:666:21, col:23> 'size_t':'unsigned int' lvalue prefix '++'
                (DeclRefExpr 0xa674b2c <col:23> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int'))
              (IfStmt 0xa675170 <line:667:21, line:680:21>
                <<<NULL>>>
                (BinaryOperator 0xa674ba0 <line:667:25, col:32> '_Bool' '>'
                  (ImplicitCastExpr 0xa674b90 <col:25> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa674b5c <col:25> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))
                  (IntegerLiteral 0xa674b78 <col:32> 'int' 0))
                (CompoundStmt 0xa6750f0 <line:668:21, line:676:21>
                  (DeclStmt 0xa674e20 <line:669:25, col:86>
                    0xa674bc0 "intmax_t width =
                      (CallExpr 0xa674dd8 <col:42, col:85> 'long long':'long long'
                        (ImplicitCastExpr 0xa674dc8 <col:42, col:72> 'long long (*)(const wchar_t *, struct builtin_printf_state_t *)' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa674d78 <col:42, col:72> 'long long (const wchar_t *, struct builtin_printf_state_t *)' lvalue Function 0xa6bd2d0 'string_to_scalar_type' 'long long (const wchar_t *, struct builtin_printf_state_t *)' (FunctionTemplate 0xa6b8a60 'string_to_scalar_type')))
                        (ImplicitCastExpr 0xa674e10 <col:74, col:75> 'const wchar_t *' <NoOp>
                          (ImplicitCastExpr 0xa674e00 <col:74, col:75> 'wchar_t *' <LValueToRValue>
                            (UnaryOperator 0xa674c90 <col:74, col:75> 'wchar_t *' lvalue prefix '*'
                              (ImplicitCastExpr 0xa674c80 <col:75> 'wchar_t **' <LValueToRValue>
                                (DeclRefExpr 0xa674c68 <col:75> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **')))))
                        (CXXThisExpr 0xa674ca8 <col:81> 'struct builtin_printf_state_t *' this))")
                  (UnaryOperator 0xa6750a8 <line:674:25, col:27> 'wchar_t **' lvalue prefix '++'
                    (DeclRefExpr 0xa67508c <col:27> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **'))
                  (UnaryOperator 0xa6750d8 <line:675:25, col:27> 'int' lvalue prefix '--'
                    (DeclRefExpr 0xa6750bc <col:27> 'int' lvalue ParmVar 0xa673a00 'argc' 'int')))
                (CompoundStmt 0xa675158 <line:678:21, line:680:21>
                  (BinaryOperator 0xa675140 <line:679:25, col:39> 'int' lvalue '='
                    (DeclRefExpr 0xa67510c <col:25> 'int' lvalue Var 0xa673d40 'field_width' 'int')
                    (IntegerLiteral 0xa675128 <col:39> 'int' 0))))
              (BinaryOperator 0xa6751b8 <line:681:21, col:40> '_Bool' lvalue '='
                (DeclRefExpr 0xa67518c <col:21> '_Bool' lvalue Var 0xa673ce0 'have_field_width' '_Bool')
                (CXXBoolLiteralExpr 0xa6751a8 <col:40> '_Bool' true)))
            (CompoundStmt 0xa675388 <line:684:17, line:690:17>
              (WhileStmt 0xa675370 <line:685:21, line:689:21>
                <<<NULL>>>
                (ImplicitCastExpr 0xa6752e8 <line:685:28, col:39> '_Bool' <IntegralToBoolean>
                  (CallExpr 0xa6752a8 <col:28, col:39> 'int'
                    (ImplicitCastExpr 0xa675298 <col:28> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                      (DeclRefExpr 0xa675264 <col:28> 'int (wint_t) throw()' lvalue Function 0xa42c5a0 'iswdigit' 'int (wint_t) throw()'))
                    (ImplicitCastExpr 0xa6752d8 <col:37, col:38> 'wint_t':'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0xa6752c8 <col:37, col:38> 'wchar_t' <LValueToRValue>
                        (UnaryOperator 0xa675250 <col:37, col:38> 'const wchar_t' lvalue prefix '*'
                          (ImplicitCastExpr 0xa675240 <col:38> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa675224 <col:38> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')))))))
                (CompoundStmt 0xa675358 <line:686:21, line:689:21>
                  (UnaryOperator 0xa675310 <line:687:25, col:27> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa6752f4 <col:27> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
                  (UnaryOperator 0xa675340 <line:688:25, col:27> 'size_t':'unsigned int' lvalue prefix '++'
                    (DeclRefExpr 0xa675324 <col:27> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int'))))))
          (IfStmt 0xa675e70 <line:691:17, line:733:17>
            <<<NULL>>>
            (BinaryOperator 0xa675428 <line:691:21, col:27> '_Bool' '=='
              (ImplicitCastExpr 0xa675418 <col:21, col:22> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa6753e8 <col:21, col:22> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa6753d8 <col:22> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa6753bc <col:22> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
              (CharacterLiteral 0xa675400 <col:27> 'wchar_t'46))
            (CompoundStmt 0xa675e50 <line:692:17, line:733:17>
              (UnaryOperator 0xa675458 <line:693:21, col:23> 'const wchar_t *' lvalue prefix '++'
                (DeclRefExpr 0xa675440 <col:23> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
              (UnaryOperator 0xa675488 <line:694:21, col:23> 'size_t':'unsigned int' lvalue prefix '++'
                (DeclRefExpr 0xa67546c <col:23> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int'))
              (IfStmt 0xa675e30 <line:696:21, line:732:21>
                <<<NULL>>>
                (BinaryOperator 0xa675540 <line:696:25, col:31> '_Bool' '=='
                  (ImplicitCastExpr 0xa675530 <col:25, col:26> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa675500 <col:25, col:26> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa6754f0 <col:26> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa6754d4 <col:26> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                  (CharacterLiteral 0xa675518 <col:31> 'wchar_t'42))
                (CompoundStmt 0xa675c78 <line:697:21, line:724:21>
                  (UnaryOperator 0xa675570 <line:698:25, col:27> 'const wchar_t *' lvalue prefix '++'
                    (DeclRefExpr 0xa675558 <col:27> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
                  (UnaryOperator 0xa6755a0 <line:699:25, col:27> 'size_t':'unsigned int' lvalue prefix '++'
                    (DeclRefExpr 0xa675584 <col:27> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int'))
                  (IfStmt 0xa675c18 <line:700:25, line:722:25>
                    <<<NULL>>>
                    (BinaryOperator 0xa6755f8 <line:700:29, col:36> '_Bool' '>'
                      (ImplicitCastExpr 0xa6755e8 <col:29> 'int' <LValueToRValue>
                        (DeclRefExpr 0xa6755b4 <col:29> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))
                      (IntegerLiteral 0xa6755d0 <col:36> 'int' 0))
                    (CompoundStmt 0xa675b98 <line:701:25, line:718:25>
                      (DeclStmt 0xa675880 <line:702:29, col:89>
                        0xa675620 "intmax_t prec =
                          (CallExpr 0xa675838 <col:45, col:88> 'long long':'long long'
                            (ImplicitCastExpr 0xa675828 <col:45, col:75> 'long long (*)(const wchar_t *, struct builtin_printf_state_t *)' <FunctionToPointerDecay>
                              (DeclRefExpr 0xa6757d8 <col:45, col:75> 'long long (const wchar_t *, struct builtin_printf_state_t *)' lvalue Function 0xa6bd2d0 'string_to_scalar_type' 'long long (const wchar_t *, struct builtin_printf_state_t *)' (FunctionTemplate 0xa6b8a60 'string_to_scalar_type')))
                            (ImplicitCastExpr 0xa675870 <col:77, col:78> 'const wchar_t *' <NoOp>
                              (ImplicitCastExpr 0xa675860 <col:77, col:78> 'wchar_t *' <LValueToRValue>
                                (UnaryOperator 0xa6756f0 <col:77, col:78> 'wchar_t *' lvalue prefix '*'
                                  (ImplicitCastExpr 0xa6756e0 <col:78> 'wchar_t **' <LValueToRValue>
                                    (DeclRefExpr 0xa6756c8 <col:78> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **')))))
                            (CXXThisExpr 0xa675708 <col:84> 'struct builtin_printf_state_t *' this))")
                      (IfStmt 0xa675b18 <line:703:29, line:710:34>
                        <<<NULL>>>
                        (BinaryOperator 0xa6758e0 <line:703:33, col:40> '_Bool' '<'
                          (ImplicitCastExpr 0xa6758c0 <col:33> 'intmax_t':'long long' <LValueToRValue>
                            (DeclRefExpr 0xa675890 <col:33> 'intmax_t':'long long' lvalue Var 0xa675620 'prec' 'intmax_t':'long long'))
                          (ImplicitCastExpr 0xa6758d0 <col:40> 'long long' <IntegralCast>
                            (IntegerLiteral 0xa6758a8 <col:40> 'int' 0)))
                        (CompoundStmt 0xa675958 <line:704:29, line:709:29>
                          (BinaryOperator 0xa675940 <line:708:33, col:46> 'int' lvalue '='
                            (DeclRefExpr 0xa6758f8 <col:33> 'int' lvalue Var 0xa673e10 'precision' 'int')
                            (UnaryOperator 0xa675928 <col:45, col:46> 'int' prefix '-'
                              (IntegerLiteral 0xa675910 <col:46> 'int' 1))))
                        (NullStmt 0xa675b08 <line:710:34>))
                      (UnaryOperator 0xa675b50 <line:716:29, col:31> 'wchar_t **' lvalue prefix '++'
                        (DeclRefExpr 0xa675b34 <col:31> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **'))
                      (UnaryOperator 0xa675b80 <line:717:29, col:31> 'int' lvalue prefix '--'
                        (DeclRefExpr 0xa675b64 <col:31> 'int' lvalue ParmVar 0xa673a00 'argc' 'int')))
                    (CompoundStmt 0xa675c00 <line:720:25, line:722:25>
                      (BinaryOperator 0xa675be8 <line:721:29, col:41> 'int' lvalue '='
                        (DeclRefExpr 0xa675bb8 <col:29> 'int' lvalue Var 0xa673e10 'precision' 'int')
                        (IntegerLiteral 0xa675bd0 <col:41> 'int' 0))))
                  (BinaryOperator 0xa675c60 <line:723:25, col:42> '_Bool' lvalue '='
                    (DeclRefExpr 0xa675c34 <col:25> '_Bool' lvalue Var 0xa673db0 'have_precision' '_Bool')
                    (CXXBoolLiteralExpr 0xa675c50 <col:42> '_Bool' true)))
                (CompoundStmt 0xa675e18 <line:726:21, line:732:21>
                  (WhileStmt 0xa675e00 <line:727:25, line:731:25>
                    <<<NULL>>>
                    (ImplicitCastExpr 0xa675d78 <line:727:32, col:43> '_Bool' <IntegralToBoolean>
                      (CallExpr 0xa675d38 <col:32, col:43> 'int'
                        (ImplicitCastExpr 0xa675d28 <col:32> 'int (*)(wint_t) throw()' <FunctionToPointerDecay>
                          (DeclRefExpr 0xa675d0c <col:32> 'int (wint_t) throw()' lvalue Function 0xa42c5a0 'iswdigit' 'int (wint_t) throw()'))
                        (ImplicitCastExpr 0xa675d68 <col:41, col:42> 'wint_t':'unsigned int' <IntegralCast>
                          (ImplicitCastExpr 0xa675d58 <col:41, col:42> 'wchar_t' <LValueToRValue>
                            (UnaryOperator 0xa675cf8 <col:41, col:42> 'const wchar_t' lvalue prefix '*'
                              (ImplicitCastExpr 0xa675ce8 <col:42> 'const wchar_t *' <LValueToRValue>
                                (DeclRefExpr 0xa675ccc <col:42> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')))))))
                    (CompoundStmt 0xa675de8 <line:728:25, line:731:25>
                      (UnaryOperator 0xa675da0 <line:729:29, col:31> 'const wchar_t *' lvalue prefix '++'
                        (DeclRefExpr 0xa675d84 <col:31> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
                      (UnaryOperator 0xa675dd0 <line:730:29, col:31> 'size_t':'unsigned int' lvalue prefix '++'
                        (DeclRefExpr 0xa675db4 <col:31> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int')))))))
            <<<NULL>>>)
          (WhileStmt 0xa676238 <line:735:17, line:736:23>
            <<<NULL>>>
            (BinaryOperator 0xa6761f0 <line:735:24, col:100> '_Bool' '||'
              (BinaryOperator 0xa676158 <col:24, col:86> '_Bool' '||'
                (BinaryOperator 0xa6760c0 <col:24, col:72> '_Bool' '||'
                  (BinaryOperator 0xa676028 <col:24, col:58> '_Bool' '||'
                    (BinaryOperator 0xa675f90 <col:24, col:44> '_Bool' '||'
                      (BinaryOperator 0xa675ef8 <col:24, col:30> '_Bool' '=='
                        (ImplicitCastExpr 0xa675ee8 <col:24, col:25> 'wchar_t' <LValueToRValue>
                          (UnaryOperator 0xa675eb8 <col:24, col:25> 'const wchar_t' lvalue prefix '*'
                            (ImplicitCastExpr 0xa675ea8 <col:25> 'const wchar_t *' <LValueToRValue>
                              (DeclRefExpr 0xa675e8c <col:25> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                        (CharacterLiteral 0xa675ed0 <col:30> 'wchar_t'108))
                      (BinaryOperator 0xa675f78 <col:38, col:44> '_Bool' '=='
                        (ImplicitCastExpr 0xa675f68 <col:38, col:39> 'wchar_t' <LValueToRValue>
                          (UnaryOperator 0xa675f38 <col:38, col:39> 'const wchar_t' lvalue prefix '*'
                            (ImplicitCastExpr 0xa675f28 <col:39> 'const wchar_t *' <LValueToRValue>
                              (DeclRefExpr 0xa675f10 <col:39> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                        (CharacterLiteral 0xa675f50 <col:44> 'wchar_t'76)))
                    (BinaryOperator 0xa676010 <col:52, col:58> '_Bool' '=='
                      (ImplicitCastExpr 0xa676000 <col:52, col:53> 'wchar_t' <LValueToRValue>
                        (UnaryOperator 0xa675fd0 <col:52, col:53> 'const wchar_t' lvalue prefix '*'
                          (ImplicitCastExpr 0xa675fc0 <col:53> 'const wchar_t *' <LValueToRValue>
                            (DeclRefExpr 0xa675fa8 <col:53> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                      (CharacterLiteral 0xa675fe8 <col:58> 'wchar_t'104)))
                  (BinaryOperator 0xa6760a8 <col:66, col:72> '_Bool' '=='
                    (ImplicitCastExpr 0xa676098 <col:66, col:67> 'wchar_t' <LValueToRValue>
                      (UnaryOperator 0xa676068 <col:66, col:67> 'const wchar_t' lvalue prefix '*'
                        (ImplicitCastExpr 0xa676058 <col:67> 'const wchar_t *' <LValueToRValue>
                          (DeclRefExpr 0xa676040 <col:67> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                    (CharacterLiteral 0xa676080 <col:72> 'wchar_t'106)))
                (BinaryOperator 0xa676140 <col:80, col:86> '_Bool' '=='
                  (ImplicitCastExpr 0xa676130 <col:80, col:81> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa676100 <col:80, col:81> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa6760f0 <col:81> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa6760d8 <col:81> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                  (CharacterLiteral 0xa676118 <col:86> 'wchar_t'116)))
              (BinaryOperator 0xa6761d8 <col:94, col:100> '_Bool' '=='
                (ImplicitCastExpr 0xa6761c8 <col:94, col:95> 'wchar_t' <LValueToRValue>
                  (UnaryOperator 0xa676198 <col:94, col:95> 'const wchar_t' lvalue prefix '*'
                    (ImplicitCastExpr 0xa676188 <col:95> 'const wchar_t *' <LValueToRValue>
                      (DeclRefExpr 0xa676170 <col:95> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
                (CharacterLiteral 0xa6761b0 <col:100> 'wchar_t'122)))
            (UnaryOperator 0xa676220 <line:736:21, col:23> 'const wchar_t *' lvalue prefix '++'
              (DeclRefExpr 0xa676208 <col:23> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')))
          (CompoundStmt 0xa676478 <line:738:17, line:745:17>
            (DeclStmt 0xa6762f8 <line:739:21, col:53>
              0xa676260 "unsigned int conversion =
                (ImplicitCastExpr 0xa6762e8 <col:51, col:52> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0xa6762d8 <col:51, col:52> 'wchar_t' <LValueToRValue>
                    (UnaryOperator 0xa6762c0 <col:51, col:52> 'const wchar_t' lvalue prefix '*'
                      (ImplicitCastExpr 0xa6762b0 <col:52> 'const wchar_t *' <LValueToRValue>
                        (DeclRefExpr 0xa676294 <col:52> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')))))"))
          (CXXMemberCallExpr 0xa676760 <line:747:17, line:750:66> 'void'
            (MemberExpr 0xa6764a0 <line:747:17> '<bound member function type>' ->print_direc 0xa6bc630
              (CXXThisExpr 0xa676490 <col:17> 'struct builtin_printf_state_t *' this))
            (ImplicitCastExpr 0xa6767a0 <col:29> 'const wchar_t *' <LValueToRValue>
              (DeclRefExpr 0xa6764c0 <col:29> 'const wchar_t *' lvalue Var 0xa673c40 'direc_start' 'const wchar_t *'))
            (ImplicitCastExpr 0xa6767b0 <col:42> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0xa6764d8 <col:42> 'size_t':'unsigned int' lvalue Var 0xa673c90 'direc_length' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0xa6767c0 <col:56, col:57> 'wchar_t' <LValueToRValue>
              (UnaryOperator 0xa676518 <col:56, col:57> 'const wchar_t' lvalue prefix '*'
                (ImplicitCastExpr 0xa676508 <col:57> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa6764f0 <col:57> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))
            (ImplicitCastExpr 0xa6767d0 <line:748:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa67652c <col:29> '_Bool' lvalue Var 0xa673ce0 'have_field_width' '_Bool'))
            (ImplicitCastExpr 0xa6767e0 <col:47> 'int' <LValueToRValue>
              (DeclRefExpr 0xa676544 <col:47> 'int' lvalue Var 0xa673d40 'field_width' 'int'))
            (ImplicitCastExpr 0xa6767f0 <line:749:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0xa67655c <col:29> '_Bool' lvalue Var 0xa673db0 'have_precision' '_Bool'))
            (ImplicitCastExpr 0xa676800 <col:45> 'int' <LValueToRValue>
              (DeclRefExpr 0xa676574 <col:45> 'int' lvalue Var 0xa673e10 'precision' 'int'))
            (ParenExpr 0xa676748 <line:750:29, col:65> 'const wchar_t *'
              (ConditionalOperator 0xa676728 <col:30, col:64> 'const wchar_t *'
                (BinaryOperator 0xa6765d0 <col:30, col:38> '_Bool' '<='
                  (ImplicitCastExpr 0xa6765c0 <col:30> 'int' <LValueToRValue>
                    (DeclRefExpr 0xa67658c <col:30> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))
                  (IntegerLiteral 0xa6765a8 <col:38> 'int' 0))
                (ImplicitCastExpr 0xa6766f8 <col:42> 'const wchar_t *' <ArrayToPointerDecay>
                  (StringLiteral 0xa676630 <col:42> 'const wchar_t [1]' lvalue L""))
                (ImplicitCastExpr 0xa676718 <col:48, col:64> 'const wchar_t *' <NoOp>
                  (ImplicitCastExpr 0xa676708 <col:48, col:64> 'wchar_t *' <LValueToRValue>
                    (ParenExpr 0xa6766e0 <col:48, col:64> 'wchar_t *' lvalue
                      (BinaryOperator 0xa6766c8 <col:49, col:62> 'wchar_t *' lvalue ','
                        (UnaryOperator 0xa676668 <col:49, col:53> 'int' postfix '--'
                          (DeclRefExpr 0xa67664c <col:49> 'int' lvalue ParmVar 0xa673a00 'argc' 'int'))
                        (UnaryOperator 0xa6766b0 <col:57, col:62> 'wchar_t *' lvalue prefix '*'
                          (UnaryOperator 0xa676698 <col:58, col:62> 'wchar_t **' postfix '++'
                            (DeclRefExpr 0xa67667c <col:58> 'wchar_t **' lvalue ParmVar 0xa673a50 'argv' 'wchar_t **'))))))))))
          (BreakStmt 0xa676810 <line:751:17>)
          (CaseStmt 0xa676830 <line:753:13, line:754:40>
            (CharacterLiteral 0xa676818 <line:753:18> 'wchar_t'92)
            <<<NULL>>>
            (CompoundAssignOperator 0xa6768f8 <line:754:17, col:40> 'const wchar_t *' lvalue '+=' ComputeLHSTy='const wchar_t *' ComputeResultTy='const wchar_t *'
              (DeclRefExpr 0xa676850 <col:17> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *')
              (CXXMemberCallExpr 0xa6768c0 <col:22, col:40> 'long'
                (MemberExpr 0xa676878 <col:22> '<bound member function type>' ->print_esc 0xa6b9d20
                  (CXXThisExpr 0xa676868 <col:22> 'struct builtin_printf_state_t *' this))
                (ImplicitCastExpr 0xa6768e8 <col:32> 'const wchar_t *' <LValueToRValue>
                  (DeclRefExpr 0xa676898 <col:32> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))
                (CXXBoolLiteralExpr 0xa6768b0 <col:35> '_Bool' false))))
          (BreakStmt 0xa676918 <line:755:17>)
          (DefaultStmt 0xa676a00 <line:757:13, line:758:39>
            (CXXMemberCallExpr 0xa6769d0 <col:17, col:39> 'void'
              (MemberExpr 0xa6769ac <col:17, col:23> '<bound member function type>' ->append_output 0xa6b69c0
                (CXXThisExpr 0xa676920 <col:17> 'struct builtin_printf_state_t *' this))
              (ImplicitCastExpr 0xa6769f0 <col:37, col:38> 'wchar_t' <LValueToRValue>
                (UnaryOperator 0xa676998 <col:37, col:38> 'const wchar_t' lvalue prefix '*'
                  (ImplicitCastExpr 0xa676988 <col:38> 'const wchar_t *' <LValueToRValue>
                    (DeclRefExpr 0xa676970 <col:38> 'const wchar_t *' lvalue Var 0xa673be0 'f' 'const wchar_t *'))))))))))
  (ReturnStmt 0xa676b10 <line:761:5, col:24>
    (BinaryOperator 0xa676af8 <col:12, col:24> 'int' '-'
      (ImplicitCastExpr 0xa676ad8 <col:12> 'int' <LValueToRValue>
        (DeclRefExpr 0xa676aa4 <col:12> 'int' lvalue Var 0xa673b60 'save_argc' 'int'))
      (ImplicitCastExpr 0xa676ae8 <col:24> 'int' <LValueToRValue>
        (DeclRefExpr 0xa676abc <col:24> 'int' lvalue ParmVar 0xa673a00 'argc' 'int')))))


static int builtin_printf;

typedef char *__builtin_va_list;
typedef typeof (((int *)0) - ((int *)0)) ptrdiff_t;
typedef typeof (sizeof(int)) size_t;
extern "C" {
    union wait {
        union wait;
        int w_status;
        struct {
            unsigned int __w_termsig : (IntegerLiteral 0x8cef280 </usr/include/i386-linux-gnu/bits/waitstatus.h:73:27> 'int' 7)
;
            unsigned int __w_coredump : (IntegerLiteral 0x8cef2e0 </usr/include/i386-linux-gnu/bits/waitstatus.h:74:28> 'int' 1)
;
            unsigned int __w_retcode : (IntegerLiteral 0x8cef340 </usr/include/i386-linux-gnu/bits/waitstatus.h:75:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x8cef3a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:76:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:70:5> __wait_terminated;
        struct {
            unsigned int __w_stopval : (IntegerLiteral 0x8cef540 </usr/include/i386-linux-gnu/bits/waitstatus.h:88:27> 'int' 8)
;
            unsigned int __w_stopsig : (IntegerLiteral 0x8cef5a0 </usr/include/i386-linux-gnu/bits/waitstatus.h:89:27> 'int' 8)
;
            unsigned int : (IntegerLiteral 0x8cef600 </usr/include/i386-linux-gnu/bits/waitstatus.h:90:15> 'int' 16)
;
        };
        struct <anonymous struct at /usr/include/i386-linux-gnu/bits/waitstatus.h:85:5> __wait_stopped;
    };
    struct {
        int quot;
        int rem;
    };
    typedef struct div_t div_t;
    struct {
        long quot;
        long rem;
    };
    typedef struct ldiv_t ldiv_t;
    struct {
        long long quot;
        long long rem;
    };
    typedef struct lldiv_t lldiv_t;
    extern size_t __ctype_get_mb_cur_max() throw();
    extern double atof(const char *__nptr) throw();
    extern int atoi(const char *__nptr) throw();
    extern long atol(const char *__nptr) throw();
    extern long long atoll(const char *__nptr) throw();
    extern double strtod(const char *restrict __nptr, char **restrict __endptr) throw();
    extern float strtof(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long double strtold(const char *restrict __nptr, char **restrict __endptr) throw();
    extern long strtol(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long strtoul(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtouq(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern long long strtoll(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    extern unsigned long long strtoull(const char *restrict __nptr, char **restrict __endptr, int __base) throw();
    struct __locale_struct {
        struct __locale_struct;
        struct __locale_data;
        struct __locale_data *__locales[13];
        const unsigned short *__ctype_b;
        const int *__ctype_tolower;
        const int *__ctype_toupper;
        const char *__names[13];
    };
    typedef struct __locale_struct *__locale_t;
    typedef __locale_t locale_t;
    extern long strtol_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long strtoul_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long strtoll_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long strtoull_l(const char *restrict __nptr, char **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double strtod_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern float strtof_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern long double strtold_l(const char *restrict __nptr, char **restrict __endptr, __locale_t __loc) throw();
    extern char *l64a(long __n) throw();
    extern long a64l(const char *__s) throw();
    extern "C" {
        typedef unsigned char __u_char;
        typedef unsigned short __u_short;
        typedef unsigned int __u_int;
        typedef unsigned long __u_long;
        typedef signed char __int8_t;
        typedef unsigned char __uint8_t;
        typedef short __int16_t;
        typedef unsigned short __uint16_t;
        typedef int __int32_t;
        typedef unsigned int __uint32_t;
        typedef long long __int64_t;
        typedef unsigned long long __uint64_t;
        typedef long long __quad_t;
        typedef unsigned long long __u_quad_t;
        typedef __u_quad_t __dev_t;
        typedef unsigned int __uid_t;
        typedef unsigned int __gid_t;
        typedef unsigned long __ino_t;
        typedef __u_quad_t __ino64_t;
        typedef unsigned int __mode_t;
        typedef unsigned int __nlink_t;
        typedef long __off_t;
        typedef __quad_t __off64_t;
        typedef int __pid_t;
        struct {
            int __val[2];
        };
        typedef struct __fsid_t __fsid_t;
        typedef long __clock_t;
        typedef unsigned long __rlim_t;
        typedef __u_quad_t __rlim64_t;
        typedef unsigned int __id_t;
        typedef long __time_t;
        typedef unsigned int __useconds_t;
        typedef long __suseconds_t;
        typedef int __daddr_t;
        typedef long __swblk_t;
        typedef int __key_t;
        typedef int __clockid_t;
        typedef void *__timer_t;
        typedef long __blksize_t;
        typedef long __blkcnt_t;
        typedef __quad_t __blkcnt64_t;
        typedef unsigned long __fsblkcnt_t;
        typedef __u_quad_t __fsblkcnt64_t;
        typedef unsigned long __fsfilcnt_t;
        typedef __u_quad_t __fsfilcnt64_t;
        typedef int __ssize_t;
        typedef __off64_t __loff_t;
        typedef __quad_t *__qaddr_t;
        typedef char *__caddr_t;
        typedef int __intptr_t;
        typedef unsigned int __socklen_t;
        typedef __u_char u_char;
        typedef __u_short u_short;
        typedef __u_int u_int;
        typedef __u_long u_long;
        typedef __quad_t quad_t;
        typedef __u_quad_t u_quad_t;
        typedef __fsid_t fsid_t;
        typedef __loff_t loff_t;
        typedef __ino_t ino_t;
        typedef __ino64_t ino64_t;
        typedef __dev_t dev_t;
        typedef __gid_t gid_t;
        typedef __mode_t mode_t;
        typedef __nlink_t nlink_t;
        typedef __uid_t uid_t;
        typedef __off_t off_t;
        typedef __off64_t off64_t;
        typedef __pid_t pid_t;
        typedef __id_t id_t;
        typedef __ssize_t ssize_t;
        typedef __daddr_t daddr_t;
        typedef __caddr_t caddr_t;
        typedef __key_t key_t;
        typedef __clock_t clock_t;
        typedef __time_t time_t;
        typedef __clockid_t clockid_t;
        typedef __timer_t timer_t;
        typedef __useconds_t useconds_t;
        typedef __suseconds_t suseconds_t;
        typedef unsigned long ulong;
        typedef unsigned short ushort;
        typedef unsigned int uint;
        typedef signed char int8_t;
        typedef short int16_t;
        typedef int int32_t;
        typedef long long int64_t;
        typedef unsigned char u_int8_t;
        typedef unsigned short u_int16_t;
        typedef unsigned int u_int32_t;
        typedef unsigned long long u_int64_t;
        typedef int register_t;
        typedef int __sig_atomic_t;
        struct {
            unsigned long __val[32];
        };
        typedef struct __sigset_t __sigset_t;
        typedef __sigset_t sigset_t;
        struct timespec {
            struct timespec;
            __time_t tv_sec;
            long tv_nsec;
        };
        struct timeval {
            struct timeval;
            __time_t tv_sec;
            __suseconds_t tv_usec;
        };
        typedef long __fd_mask;
        struct {
            __fd_mask fds_bits[32];
        };
        typedef struct fd_set fd_set;
        typedef __fd_mask fd_mask;
        extern "C" {
            extern int select(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, struct timeval *restrict __timeout);
            extern int pselect(int __nfds, fd_set *restrict __readfds, fd_set *restrict __writefds, fd_set *restrict __exceptfds, const struct timespec *restrict __timeout, const __sigset_t *restrict __sigmask);
        }
        extern "C" {
            extern unsigned int gnu_dev_major(unsigned long long __dev) throw();
            extern unsigned int gnu_dev_minor(unsigned long long __dev) throw();
            extern unsigned long long gnu_dev_makedev(unsigned int __major, unsigned int __minor) throw();
        }
        typedef __blksize_t blksize_t;
        typedef __blkcnt_t blkcnt_t;
        typedef __fsblkcnt_t fsblkcnt_t;
        typedef __fsfilcnt_t fsfilcnt_t;
        typedef __blkcnt64_t blkcnt64_t;
        typedef __fsblkcnt64_t fsblkcnt64_t;
        typedef __fsfilcnt64_t fsfilcnt64_t;
        typedef unsigned long pthread_t;
        union {
            char __size[36];
            long __align;
        };
        typedef union pthread_attr_t pthread_attr_t;
        struct __pthread_internal_slist {
            struct __pthread_internal_slist;
            struct __pthread_internal_slist *__next;
        };
        typedef struct __pthread_internal_slist __pthread_slist_t;
        union {
            struct __pthread_mutex_s {
                struct __pthread_mutex_s;
                int __lock;
                unsigned int __count;
                int __owner;
                int __kind;
                unsigned int __nusers;
                union {
                    int __spins;
                    __pthread_slist_t __list;
                } ;
                ;
                ;
            };
            struct __pthread_mutex_s __data;
            char __size[24];
            long __align;
        };
        typedef union pthread_mutex_t pthread_mutex_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_mutexattr_t pthread_mutexattr_t;
        union {
            struct {
                int __lock;
                unsigned int __futex;
                unsigned long long __total_seq;
                unsigned long long __wakeup_seq;
                unsigned long long __woken_seq;
                void *__mutex;
                unsigned int __nwaiters;
                unsigned int __broadcast_seq;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:86:3> __data;
            char __size[48];
            long long __align;
        };
        typedef union pthread_cond_t pthread_cond_t;
        union {
            char __size[4];
            long __align;
        };
        typedef union pthread_condattr_t pthread_condattr_t;
        typedef unsigned int pthread_key_t;
        typedef int pthread_once_t;
        union {
            struct {
                int __lock;
                unsigned int __nr_readers;
                unsigned int __readers_wakeup;
                unsigned int __writer_wakeup;
                unsigned int __nr_readers_queued;
                unsigned int __nr_writers_queued;
                unsigned char __flags;
                unsigned char __shared;
                unsigned char __pad1;
                unsigned char __pad2;
                int __writer;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/pthreadtypes.h:121:3> __data;
            char __size[32];
            long __align;
        };
        typedef union pthread_rwlock_t pthread_rwlock_t;
        union {
            char __size[8];
            long __align;
        };
        typedef union pthread_rwlockattr_t pthread_rwlockattr_t;
        typedef volatile int pthread_spinlock_t;
        union {
            char __size[20];
            long __align;
        };
        typedef union pthread_barrier_t pthread_barrier_t;
        union {
            char __size[4];
            int __align;
        };
        typedef union pthread_barrierattr_t pthread_barrierattr_t;
    }
    extern long random() throw();
    extern void srandom(unsigned int __seed) throw();
    extern char *initstate(unsigned int __seed, char *__statebuf, size_t __statelen) throw();
    extern char *setstate(char *__statebuf) throw();
    struct random_data {
        struct random_data;
        int32_t *fptr;
        int32_t *rptr;
        int32_t *state;
        int rand_type;
        int rand_deg;
        int rand_sep;
        int32_t *end_ptr;
    };
    extern int random_r(struct random_data *restrict __buf, int32_t *restrict __result) throw();
    extern int srandom_r(unsigned int __seed, struct random_data *__buf) throw();
    extern int initstate_r(unsigned int __seed, char *restrict __statebuf, size_t __statelen, struct random_data *restrict __buf) throw();
    extern int setstate_r(char *restrict __statebuf, struct random_data *restrict __buf) throw();
    extern int rand() throw();
    extern void srand(unsigned int __seed) throw();
    extern int rand_r(unsigned int *__seed) throw();
    extern double drand48() throw();
    extern double erand48(unsigned short __xsubi[3]) throw();
    extern long lrand48() throw();
    extern long nrand48(unsigned short __xsubi[3]) throw();
    extern long mrand48() throw();
    extern long jrand48(unsigned short __xsubi[3]) throw();
    extern void srand48(long __seedval) throw();
    extern unsigned short *seed48(unsigned short __seed16v[3]) throw();
    extern void lcong48(unsigned short __param[7]) throw();
    struct drand48_data {
        struct drand48_data;
        unsigned short __x[3];
        unsigned short __old_x[3];
        unsigned short __c;
        unsigned short __init;
        unsigned long long __a;
    };
    extern int drand48_r(struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int erand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, double *restrict __result) throw();
    extern int lrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int nrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int mrand48_r(struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int jrand48_r(unsigned short __xsubi[3], struct drand48_data *restrict __buffer, long *restrict __result) throw();
    extern int srand48_r(long __seedval, struct drand48_data *__buffer) throw();
    extern int seed48_r(unsigned short __seed16v[3], struct drand48_data *__buffer) throw();
    extern int lcong48_r(unsigned short __param[7], struct drand48_data *__buffer) throw();
    extern void *malloc(size_t __size) throw();
    extern void *calloc(size_t __nmemb, size_t __size) throw();
    extern void *realloc(void *__ptr, size_t __size) throw();
    extern void free(void *__ptr) throw();
    extern void cfree(void *__ptr) throw();
    extern "C" {
        extern void *alloca(size_t __size) throw();
    }
    extern void *valloc(size_t __size) throw();
    extern int posix_memalign(void **__memptr, size_t __alignment, size_t __size) throw();
    extern void abort() throw();
    extern int atexit(void (*__func)()) throw();
    extern "C++" extern int at_quick_exit(void (*__func)()) throw()
    extern int on_exit(void (*__func)(int, void *), void *__arg) throw();
    extern void exit(int __status) throw();
    extern void quick_exit(int __status) throw();
    extern void _Exit(int __status) throw();
    extern char *getenv(const char *__name) throw();
    extern char *__secure_getenv(const char *__name) throw();
    extern int putenv(char *__string) throw();
    extern int setenv(const char *__name, const char *__value, int __replace) throw();
    extern int unsetenv(const char *__name) throw();
    extern int clearenv() throw();
    extern char *mktemp(char *__template) throw();
    extern int mkstemp(char *__template);
    extern int mkstemp64(char *__template);
    extern int mkstemps(char *__template, int __suffixlen);
    extern int mkstemps64(char *__template, int __suffixlen);
    extern char *mkdtemp(char *__template) throw();
    extern int mkostemp(char *__template, int __flags);
    extern int mkostemp64(char *__template, int __flags);
    extern int mkostemps(char *__template, int __suffixlen, int __flags);
    extern int mkostemps64(char *__template, int __suffixlen, int __flags);
    extern int system(const char *__command);
    extern char *canonicalize_file_name(const char *__name) throw();
    extern char *realpath(const char *restrict __name, char *restrict __resolved) throw();
    typedef int (*__compar_fn_t)(const void *, const void *);
    typedef __compar_fn_t comparison_fn_t;
    typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
    extern void *bsearch(const void *__key, const void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort(void *__base, size_t __nmemb, size_t __size, __compar_fn_t __compar);
    extern void qsort_r(void *__base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void *__arg);
    extern int abs(int __x) throw();
    extern long labs(long __x) throw();
    extern long long llabs(long long __x) throw();
    extern div_t div(int __numer, int __denom) throw();
    extern ldiv_t ldiv(long __numer, long __denom) throw();
    extern lldiv_t lldiv(long long __numer, long long __denom) throw();
    extern char *ecvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *fcvt(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *gcvt(double __value, int __ndigit, char *__buf) throw();
    extern char *qecvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qfcvt(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign) throw();
    extern char *qgcvt(long double __value, int __ndigit, char *__buf) throw();
    extern int ecvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int fcvt_r(double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qecvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int qfcvt_r(long double __value, int __ndigit, int *restrict __decpt, int *restrict __sign, char *restrict __buf, size_t __len) throw();
    extern int mblen(const char *__s, size_t __n) throw();
    extern int mbtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n) throw();
    extern int wctomb(char *__s, wchar_t __wchar) throw();
    extern size_t mbstowcs(wchar_t *restrict __pwcs, const char *restrict __s, size_t __n) throw();
    extern size_t wcstombs(char *restrict __s, const wchar_t *restrict __pwcs, size_t __n) throw();
    extern int rpmatch(const char *__response) throw();
    extern int getsubopt(char **restrict __optionp, char *const *restrict __tokens, char **restrict __valuep) throw();
    extern void setkey(const char *__key) throw();
    extern int posix_openpt(int __oflag);
    extern int grantpt(int __fd) throw();
    extern int unlockpt(int __fd) throw();
    extern char *ptsname(int __fd) throw();
    extern int ptsname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int getpt();
    extern int getloadavg(double __loadavg[], int __nelem) throw();
}
extern "C" {
    struct _IO_FILE;
    typedef struct _IO_FILE FILE;
    typedef struct _IO_FILE __FILE;
    struct {
        int __count;
        union {
            unsigned int __wch;
            char __wchb[4];
        };
        union <anonymous union at /usr/include/wchar.h:86:3> __value;
    };
    typedef struct __mbstate_t __mbstate_t;
    struct {
        __off_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos_t _G_fpos_t;
    struct {
        __off64_t __pos;
        __mbstate_t __state;
    };
    typedef struct _G_fpos64_t _G_fpos64_t;
    typedef short _G_int16_t;
    typedef int _G_int32_t;
    typedef unsigned short _G_uint16_t;
    typedef unsigned int _G_uint32_t;
    typedef __builtin_va_list va_list;
    typedef __builtin_va_list __gnuc_va_list;
    struct _IO_jump_t;
    struct _IO_FILE;
    typedef void _IO_lock_t;
    struct _IO_marker {
        struct _IO_marker;
        struct _IO_marker *_next;
        struct _IO_FILE *_sbuf;
        int _pos;
    };
    enum __codecvt_result {
        __codecvt_ok,
        __codecvt_partial,
        __codecvt_error,
        __codecvt_noconv
    };
    struct _IO_FILE {
        struct _IO_FILE;
        int _flags;
        char *_IO_read_ptr;
        char *_IO_read_end;
        char *_IO_read_base;
        char *_IO_write_base;
        char *_IO_write_ptr;
        char *_IO_write_end;
        char *_IO_buf_base;
        char *_IO_buf_end;
        char *_IO_save_base;
        char *_IO_backup_base;
        char *_IO_save_end;
        struct _IO_marker *_markers;
        struct _IO_FILE *_chain;
        int _fileno;
        int _flags2;
        __off_t _old_offset;
        unsigned short _cur_column;
        signed char _vtable_offset;
        char _shortbuf[1];
        _IO_lock_t *_lock;
        __off64_t _offset;
        void *__pad1;
        void *__pad2;
        void *__pad3;
        void *__pad4;
        size_t __pad5;
        int _mode;
        char _unused2[40];
    };
    struct _IO_FILE_plus;
    extern struct _IO_FILE_plus _IO_2_1_stdin_;
    extern struct _IO_FILE_plus _IO_2_1_stdout_;
    extern struct _IO_FILE_plus _IO_2_1_stderr_;
    typedef __ssize_t (__io_read_fn)(void *, char *, size_t);
    typedef __ssize_t (__io_write_fn)(void *, const char *, size_t);
    typedef int (__io_seek_fn)(void *, __off64_t *, int);
    typedef int (__io_close_fn)(void *);
    typedef __io_read_fn cookie_read_function_t;
    typedef __io_write_fn cookie_write_function_t;
    typedef __io_seek_fn cookie_seek_function_t;
    typedef __io_close_fn cookie_close_function_t;
    struct {
        __io_read_fn *read;
        __io_write_fn *write;
        __io_seek_fn *seek;
        __io_close_fn *close;
    };
    typedef struct _IO_cookie_io_functions_t _IO_cookie_io_functions_t;
    typedef _IO_cookie_io_functions_t cookie_io_functions_t;
    struct _IO_cookie_file;
    extern void _IO_cookie_init(struct _IO_cookie_file *__cfile, int __read_write, void *__cookie, _IO_cookie_io_functions_t __fns);
    extern "C" {
        extern int __underflow(_IO_FILE *);
        extern int __uflow(_IO_FILE *);
        extern int __overflow(_IO_FILE *, int);
        extern int _IO_getc(_IO_FILE *__fp);
        extern int _IO_putc(int __c, _IO_FILE *__fp);
        extern int _IO_feof(_IO_FILE *__fp) throw();
        extern int _IO_ferror(_IO_FILE *__fp) throw();
        extern int _IO_peekc_locked(_IO_FILE *__fp);
        extern void _IO_flockfile(_IO_FILE *) throw();
        extern void _IO_funlockfile(_IO_FILE *) throw();
        extern int _IO_ftrylockfile(_IO_FILE *) throw();
        extern int _IO_vfscanf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list, int *restrict);
        extern int _IO_vfprintf(_IO_FILE *restrict, const char *restrict, __gnuc_va_list);
        extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
        extern size_t _IO_sgetn(_IO_FILE *, void *, size_t);
        extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
        extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
        extern void _IO_free_backup_area(_IO_FILE *) throw();
    }
    typedef __gnuc_va_list va_list;
    typedef _G_fpos_t fpos_t;
    typedef _G_fpos64_t fpos64_t;
    extern struct _IO_FILE *stdin;
    extern struct _IO_FILE *stdout;
    extern struct _IO_FILE *stderr;
    extern int remove(const char *__filename) throw();
    extern int rename(const char *__old, const char *__new) throw();
    extern int renameat(int __oldfd, const char *__old, int __newfd, const char *__new) throw();
    extern FILE *tmpfile();
    extern FILE *tmpfile64();
    extern char *tmpnam(char *__s) throw();
    extern char *tmpnam_r(char *__s) throw();
    extern char *tempnam(const char *__dir, const char *__pfx) throw();
    extern int fclose(FILE *__stream);
    extern int fflush(FILE *__stream);
    extern int fflush_unlocked(FILE *__stream);
    extern int fcloseall();
    extern FILE *fopen(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fopen64(const char *restrict __filename, const char *restrict __modes);
    extern FILE *freopen64(const char *restrict __filename, const char *restrict __modes, FILE *restrict __stream);
    extern FILE *fdopen(int __fd, const char *__modes) throw();
    extern FILE *fopencookie(void *restrict __magic_cookie, const char *restrict __modes, _IO_cookie_io_functions_t __io_funcs) throw();
    extern FILE *fmemopen(void *__s, size_t __len, const char *__modes) throw();
    extern FILE *open_memstream(char **__bufloc, size_t *__sizeloc) throw();
    extern void setbuf(FILE *restrict __stream, char *restrict __buf) throw();
    extern int setvbuf(FILE *restrict __stream, char *restrict __buf, int __modes, size_t __n) throw();
    extern void setbuffer(FILE *restrict __stream, char *restrict __buf, size_t __size) throw();
    extern void setlinebuf(FILE *__stream) throw();
    extern int fprintf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int printf(const char *restrict __format, ...);
    extern int sprintf(char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfprintf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vprintf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsprintf(char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int snprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, ...) throw();
    extern int vsnprintf(char *restrict __s, size_t __maxlen, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int vasprintf(char **restrict __ptr, const char *restrict __f, __gnuc_va_list __arg) throw();
    extern int __asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int asprintf(char **restrict __ptr, const char *restrict __fmt, ...) throw();
    extern int vdprintf(int __fd, const char *restrict __fmt, __gnuc_va_list __arg);
    extern int dprintf(int __fd, const char *restrict __fmt, ...);
    extern int fscanf(FILE *restrict __stream, const char *restrict __format, ...);
    extern int scanf(const char *restrict __format, ...);
    extern int sscanf(const char *restrict __s, const char *restrict __format, ...) throw();
    extern int vfscanf(FILE *restrict __s, const char *restrict __format, __gnuc_va_list __arg);
    extern int vscanf(const char *restrict __format, __gnuc_va_list __arg);
    extern int vsscanf(const char *restrict __s, const char *restrict __format, __gnuc_va_list __arg) throw();
    extern int fgetc(FILE *__stream);
    extern int getc(FILE *__stream);
    extern int getchar();
    extern int getc_unlocked(FILE *__stream);
    extern int getchar_unlocked();
    extern int fgetc_unlocked(FILE *__stream);
    extern int fputc(int __c, FILE *__stream);
    extern int putc(int __c, FILE *__stream);
    extern int putchar(int __c);
    extern int fputc_unlocked(int __c, FILE *__stream);
    extern int putc_unlocked(int __c, FILE *__stream);
    extern int putchar_unlocked(int __c);
    extern int getw(FILE *__stream);
    extern int putw(int __w, FILE *__stream);
    extern char *fgets(char *restrict __s, int __n, FILE *restrict __stream);
    extern char *gets(char *__s);
    extern char *fgets_unlocked(char *restrict __s, int __n, FILE *restrict __stream);
    extern __ssize_t __getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getdelim(char **restrict __lineptr, size_t *restrict __n, int __delimiter, FILE *restrict __stream);
    extern __ssize_t getline(char **restrict __lineptr, size_t *restrict __n, FILE *restrict __stream);
    extern int fputs(const char *restrict __s, FILE *restrict __stream);
    extern int puts(const char *__s);
    extern int ungetc(int __c, FILE *__stream);
    extern size_t fread(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __s);
    extern int fputs_unlocked(const char *restrict __s, FILE *restrict __stream);
    extern size_t fread_unlocked(void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern size_t fwrite_unlocked(const void *restrict __ptr, size_t __size, size_t __n, FILE *restrict __stream);
    extern int fseek(FILE *__stream, long __off, int __whence);
    extern long ftell(FILE *__stream);
    extern void rewind(FILE *__stream);
    extern int fseeko(FILE *__stream, __off_t __off, int __whence);
    extern __off_t ftello(FILE *__stream);
    extern int fgetpos(FILE *restrict __stream, fpos_t *restrict __pos);
    extern int fsetpos(FILE *__stream, const fpos_t *__pos);
    extern int fseeko64(FILE *__stream, __off64_t __off, int __whence);
    extern __off64_t ftello64(FILE *__stream);
    extern int fgetpos64(FILE *restrict __stream, fpos64_t *restrict __pos);
    extern int fsetpos64(FILE *__stream, const fpos64_t *__pos);
    extern void clearerr(FILE *__stream) throw();
    extern int feof(FILE *__stream) throw();
    extern int ferror(FILE *__stream) throw();
    extern void clearerr_unlocked(FILE *__stream) throw();
    extern int feof_unlocked(FILE *__stream) throw();
    extern int ferror_unlocked(FILE *__stream) throw();
    extern void perror(const char *__s);
    extern int sys_nerr;
    extern const char *const sys_errlist[];
    extern int _sys_nerr;
    extern const char *const _sys_errlist[];
    extern int fileno(FILE *__stream) throw();
    extern int fileno_unlocked(FILE *__stream) throw();
    extern FILE *popen(const char *__command, const char *__modes);
    extern int pclose(FILE *__stream);
    extern char *ctermid(char *__s) throw();
    extern char *cuserid(char *__s);
    struct obstack;
    extern int obstack_printf(struct obstack *restrict __obstack, const char *restrict __format, ...) throw();
    extern int obstack_vprintf(struct obstack *restrict __obstack, const char *restrict __format, __gnuc_va_list __args) throw();
    extern void flockfile(FILE *__stream) throw();
    extern int ftrylockfile(FILE *__stream) throw();
    extern void funlockfile(FILE *__stream) throw();
}
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned long long uint64_t;
typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;
typedef long long int_least64_t;
typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;
typedef unsigned long long uint_least64_t;
typedef signed char int_fast8_t;
typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;
typedef unsigned char uint_fast8_t;
typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
typedef int intptr_t;
typedef unsigned int uintptr_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
typedef unsigned int wint_t;
typedef unsigned long wctype_t;
enum  {
    __ISwupper = (IntegerLiteral 0x8d91600 </usr/include/wctype.h:74:16> 'int' 0)
,
    __ISwlower = (IntegerLiteral 0x8d91658 </usr/include/wctype.h:75:16> 'int' 1)
,
    __ISwalpha = (IntegerLiteral 0x8d916a8 </usr/include/wctype.h:76:16> 'int' 2)
,
    __ISwdigit = (IntegerLiteral 0x8d916f8 </usr/include/wctype.h:77:16> 'int' 3)
,
    __ISwxdigit = (IntegerLiteral 0x8d91748 </usr/include/wctype.h:78:17> 'int' 4)
,
    __ISwspace = (IntegerLiteral 0x8d91798 </usr/include/wctype.h:79:16> 'int' 5)
,
    __ISwprint = (IntegerLiteral 0x8d917e8 </usr/include/wctype.h:80:16> 'int' 6)
,
    __ISwgraph = (IntegerLiteral 0x8d91838 </usr/include/wctype.h:81:16> 'int' 7)
,
    __ISwblank = (IntegerLiteral 0x8d91888 </usr/include/wctype.h:82:16> 'int' 8)
,
    __ISwcntrl = (IntegerLiteral 0x8d918d8 </usr/include/wctype.h:83:16> 'int' 9)
,
    __ISwpunct = (IntegerLiteral 0x8d91928 </usr/include/wctype.h:84:16> 'int' 10)
,
    __ISwalnum = (IntegerLiteral 0x8d91978 </usr/include/wctype.h:85:16> 'int' 11)
,
    _ISwupper = (ParenExpr 0x8d91f58 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d91f38 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d91a10 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d919e0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d919c4 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d919f8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d91b08 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d91af8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d91ad0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d91ab8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d91a88 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d91a70 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d91a28 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d91a58 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d91a40 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d91aa0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d91f20 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d91f00 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d91b68 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d91b38 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d91b20 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d91b50 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d91c60 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d91c50 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d91c28 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d91c10 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d91be0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d91bc8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d91b80 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d91bb0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d91b98 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d91bf8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d91ee8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d91ec8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d91cc0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d91c90 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d91c78 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d91ca8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d91db8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d91da8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d91d80 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d91d68 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d91d38 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d91d20 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d91cd8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d91d08 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d91cf0 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d91d50 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d91eb0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d91ea0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d91e78 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d91e60 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d91e30 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d91e18 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d91dd0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d91e00 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d91de8 <line:87:24> 'int' EnumConstant 0x8d91620 '__ISwupper' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d91e48 <line:69:36> 'int' 24)))))))))))
,
    _ISwlower = (ParenExpr 0x8d95f80 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d95f60 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d91ff0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d91fc0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d91fa4 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d91fd8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d95b30 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d95b20 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d95af8 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d95ae0 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d95ab0 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d95a98 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d92008 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d92038 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d92020 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d95ac8 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d95f48 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d95f28 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d95b90 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d95b60 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d95b48 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d95b78 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d95c88 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d95c78 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d95c50 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d95c38 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d95c08 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d95bf0 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d95ba8 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d95bd8 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d95bc0 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d95c20 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d95f10 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d95ef0 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d95ce8 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d95cb8 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d95ca0 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d95cd0 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d95de0 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d95dd0 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d95da8 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d95d90 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d95d60 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d95d48 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d95d00 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d95d30 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d95d18 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d95d78 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d95ed8 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d95ec8 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d95ea0 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d95e88 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d95e58 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d95e40 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d95df8 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d95e28 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d95e10 <line:88:24> 'int' EnumConstant 0x8d91670 '__ISwlower' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d95e70 <line:69:36> 'int' 24)))))))))))
,
    _ISwalpha = (ParenExpr 0x8d96568 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d96548 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d96020 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d95ff0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d95fd4 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d96008 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d96118 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d96108 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d960e0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d960c8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d96098 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d96080 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d96038 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d96068 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d96050 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d960b0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d96530 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d96510 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d96178 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d96148 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d96130 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d96160 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d96270 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d96260 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d96238 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d96220 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d961f0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d961d8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d96190 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d961c0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d961a8 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d96208 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d964f8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d964d8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d962d0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d962a0 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d96288 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d962b8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d963c8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d963b8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d96390 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d96378 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d96348 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d96330 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d962e8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d96318 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d96300 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d96360 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d964c0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d964b0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d96488 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d96470 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d96440 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d96428 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d963e0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d96410 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d963f8 <line:89:24> 'int' EnumConstant 0x8d916c0 '__ISwalpha' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d96458 <line:69:36> 'int' 24)))))))))))
,
    _ISwdigit = (ParenExpr 0x8d96b58 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d96b38 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d96600 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d965d0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d965b4 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d965e8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d966f8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d966e8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d966c0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d966a8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d96678 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d96660 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d96618 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d96648 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d96630 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d96690 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d96b20 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d96b00 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d96758 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d96728 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d96710 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d96740 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d96850 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d96840 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d96818 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d96800 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d967d0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d967b8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d96770 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d967a0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d96788 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d967e8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d96ae8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d96ac8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d968b0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d96880 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d96868 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d96898 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d969a8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d96998 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d96970 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d96958 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d96928 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d96910 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d968c8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d968f8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d968e0 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d96940 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d96ab0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d96aa0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d96a68 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d96a50 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d96a20 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d96a08 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d969c0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d969f0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d969d8 <line:90:24> 'int' EnumConstant 0x8d91710 '__ISwdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d96a38 <line:69:36> 'int' 24)))))))))))
,
    _ISwxdigit = (ParenExpr 0x8d97138 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d97118 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d96bf0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d96bc0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d96ba4 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d96bd8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d96ce8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d96cd8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d96cb0 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d96c98 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d96c68 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d96c50 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d96c08 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d96c38 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d96c20 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d96c80 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d97100 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d970e0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d96d48 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d96d18 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d96d00 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d96d30 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d96e40 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d96e30 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d96e08 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d96df0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d96dc0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d96da8 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d96d60 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d96d90 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d96d78 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d96dd8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d970c8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d970a8 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d96ea0 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d96e70 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d96e58 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d96e88 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d96f98 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d96f88 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d96f60 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d96f48 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d96f18 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d96f00 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d96eb8 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d96ee8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d96ed0 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d96f30 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d97090 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d97080 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d97058 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d97040 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d97010 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d96ff8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d96fb0 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d96fe0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d96fc8 <line:91:25> 'int' EnumConstant 0x8d91760 '__ISwxdigit' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d97028 <line:69:36> 'int' 24)))))))))))
,
    _ISwspace = (ParenExpr 0x8d97718 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d976f8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d971d0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d971a0 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d97184 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d971b8 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d972c8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d972b8 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d97290 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d97278 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d97248 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d97230 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d971e8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d97218 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d97200 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d97260 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d976e0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d976c0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d97328 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d972f8 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d972e0 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d97310 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d97420 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d97410 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d973e8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d973d0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d973a0 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d97388 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d97340 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d97370 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d97358 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d973b8 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d976a8 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d97688 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d97480 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d97450 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d97438 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d97468 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d97578 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d97568 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d97540 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d97528 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d974f8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d974e0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d97498 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d974c8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d974b0 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d97510 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d97670 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d97660 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d97638 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d97620 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d975f0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d975d8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d97590 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d975c0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d975a8 <line:92:24> 'int' EnumConstant 0x8d917b0 '__ISwspace' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d97608 <line:69:36> 'int' 24)))))))))))
,
    _ISwprint = (ParenExpr 0x8d97d10 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d97cf0 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d977b0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d97780 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d97764 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d97798 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d978a8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d97898 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d97870 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d97858 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d97828 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d97810 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d977c8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d977f8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d977e0 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d97840 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d97cd8 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d97cb8 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d97908 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d978d8 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d978c0 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d978f0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d97a00 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d979f0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d979c8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d979b0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d97980 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d97968 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d97920 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d97950 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d97938 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d97998 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d97ca0 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d97c80 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d97a60 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d97a30 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d97a18 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d97a48 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d97b70 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d97b60 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d97b38 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d97b20 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d97af0 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d97ad8 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d97a78 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d97ac0 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d97aa8 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d97b08 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d97c68 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d97c58 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d97c30 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d97c18 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d97be8 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d97bd0 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d97b88 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d97bb8 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d97ba0 <line:93:24> 'int' EnumConstant 0x8d91800 '__ISwprint' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d97c00 <line:69:36> 'int' 24)))))))))))
,
    _ISwgraph = (ParenExpr 0x8d982f8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d982d8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d97db0 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d97d80 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d97d64 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d97d98 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d97ea8 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d97e98 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d97e70 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d97e58 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d97e28 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d97e10 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d97dc8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d97df8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d97de0 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d97e40 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d982c0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d982a0 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d97f08 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d97ed8 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d97ec0 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d97ef0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d98000 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d97ff0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d97fc8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d97fb0 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d97f80 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d97f68 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d97f20 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d97f50 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d97f38 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d97f98 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d98288 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d98268 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d98060 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d98030 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d98018 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d98048 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d98158 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98148 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d98120 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d98108 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d980d8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d980c0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98078 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d980a8 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d98090 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d980f0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d98250 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98240 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d98218 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d98200 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d981d0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d981b8 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98170 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d981a0 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d98188 <line:94:24> 'int' EnumConstant 0x8d91850 '__ISwgraph' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d981e8 <line:69:36> 'int' 24)))))))))))
,
    _ISwblank = (ParenExpr 0x8d988d8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d988b8 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d98390 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d98360 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d98344 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d98378 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d98488 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d98478 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d98450 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d98438 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d98408 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d983f0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d983a8 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d983d8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d983c0 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d98420 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d988a0 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d98880 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d984e8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d984b8 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d984a0 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d984d0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d985e0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d985d0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d985a8 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d98590 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d98560 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d98548 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d98500 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d98530 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d98518 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d98578 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d98868 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d98848 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d98640 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d98610 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d985f8 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d98628 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d98738 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98728 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d98700 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d986e8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d986b8 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d986a0 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98658 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d98688 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d98670 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d986d0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d98830 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98820 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d987f8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d987e0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d987b0 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d98798 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98750 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d98780 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d98768 <line:95:24> 'int' EnumConstant 0x8d918a0 '__ISwblank' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d987c8 <line:69:36> 'int' 24)))))))))))
,
    _ISwcntrl = (ParenExpr 0x8d98ed0 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d98eb0 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d98970 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d98940 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d98924 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d98958 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d98a68 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d98a58 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d98a30 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d98a18 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d989e8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d989d0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d98988 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d989b8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d989a0 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d98a00 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d98e98 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d98e78 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d98ae0 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d98ab0 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d98a80 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d98ac8 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d98bd8 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d98bc8 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d98ba0 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d98b88 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d98b58 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d98b40 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d98af8 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d98b28 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d98b10 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d98b70 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d98e60 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d98e40 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d98c38 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d98c08 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d98bf0 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d98c20 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d98d30 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98d20 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d98cf8 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d98ce0 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d98cb0 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d98c98 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98c50 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d98c80 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d98c68 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d98cc8 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d98e28 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d98e18 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d98df0 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d98dd8 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d98da8 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d98d90 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d98d48 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d98d78 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d98d60 <line:96:24> 'int' EnumConstant 0x8d918f0 '__ISwcntrl' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d98dc0 <line:69:36> 'int' 24)))))))))))
,
    _ISwpunct = (ParenExpr 0x8d994b8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d99498 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d98f70 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d98f40 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d98f24 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d98f58 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d99068 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d99058 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d99030 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d99018 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d98fe8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d98fd0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d98f88 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d98fb8 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d98fa0 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d99000 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d99480 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d99460 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d990c8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d99098 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d99080 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d990b0 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d991c0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d991b0 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d99188 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d99170 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d99140 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d99128 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d990e0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d99110 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d990f8 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d99158 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d99448 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d99428 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d99220 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d991f0 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d991d8 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d99208 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d99318 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d99308 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d992e0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d992c8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d99298 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d99280 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d99238 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d99268 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d99250 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d992b0 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d99410 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d99400 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d993d8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d993c0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d99390 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d99378 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d99330 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d99360 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d99348 <line:97:24> 'int' EnumConstant 0x8d91940 '__ISwpunct' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d993a8 <line:69:36> 'int' 24)))))))))))
,
    _ISwalnum = (ParenExpr 0x8d99ab8 </usr/include/wctype.h:66:2, line:69:41> 'int'
  (ConditionalOperator 0x8d99a78 <line:66:3, line:69:40> 'int'
    (BinaryOperator 0x8d99550 <line:66:3, col:11> '_Bool' '<'
      (ParenExpr 0x8d99520 <col:3, col:7> 'int'
        (DeclRefExpr 0x8d99504 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
      (IntegerLiteral 0x8d99538 <line:66:11> 'int' 8))
    (CStyleCastExpr 0x8d99648 <col:15, col:42> 'int' <NoOp>
      (ImplicitCastExpr 0x8d99638 <col:21, col:42> 'int' <IntegralCast>
        (ParenExpr 0x8d99610 <col:21, col:42> 'unsigned long'
          (BinaryOperator 0x8d995f8 <col:22, col:40> 'unsigned long' '<<'
            (ParenExpr 0x8d995c8 <col:22, col:35> 'unsigned long'
              (BinaryOperator 0x8d995b0 <col:23, col:34> 'unsigned long' '<<'
                (IntegerLiteral 0x8d99568 <col:23> 'unsigned long' 1)
                (ParenExpr 0x8d99598 <col:30, col:34> 'int'
                  (DeclRefExpr 0x8d99580 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
            (IntegerLiteral 0x8d995e0 <line:66:40> 'int' 24)))))
    (ParenExpr 0x8d99a60 <line:67:5, line:69:40> 'int'
      (ConditionalOperator 0x8d99a40 <line:67:6, line:69:39> 'int'
        (BinaryOperator 0x8d996a8 <line:67:6, col:14> '_Bool' '<'
          (ParenExpr 0x8d99678 <col:6, col:10> 'int'
            (DeclRefExpr 0x8d99660 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
          (IntegerLiteral 0x8d99690 <line:67:14> 'int' 16))
        (CStyleCastExpr 0x8d997a0 <col:19, col:45> 'int' <NoOp>
          (ImplicitCastExpr 0x8d99790 <col:25, col:45> 'int' <IntegralCast>
            (ParenExpr 0x8d99768 <col:25, col:45> 'unsigned long'
              (BinaryOperator 0x8d99750 <col:26, col:44> 'unsigned long' '<<'
                (ParenExpr 0x8d99720 <col:26, col:39> 'unsigned long'
                  (BinaryOperator 0x8d99708 <col:27, col:38> 'unsigned long' '<<'
                    (IntegerLiteral 0x8d996c0 <col:27> 'unsigned long' 1)
                    (ParenExpr 0x8d996f0 <col:34, col:38> 'int'
                      (DeclRefExpr 0x8d996d8 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                (IntegerLiteral 0x8d99738 <line:67:44> 'int' 8)))))
        (ParenExpr 0x8d99a28 <line:68:8, line:69:39> 'int'
          (ConditionalOperator 0x8d99a08 <line:68:9, line:69:38> 'int'
            (BinaryOperator 0x8d99800 <line:68:9, col:17> '_Bool' '<'
              (ParenExpr 0x8d997d0 <col:9, col:13> 'int'
                (DeclRefExpr 0x8d997b8 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))
              (IntegerLiteral 0x8d997e8 <line:68:17> 'int' 24))
            (CStyleCastExpr 0x8d998f8 <col:22, col:48> 'int' <NoOp>
              (ImplicitCastExpr 0x8d998e8 <col:28, col:48> 'int' <IntegralCast>
                (ParenExpr 0x8d998c0 <col:28, col:48> 'unsigned long'
                  (BinaryOperator 0x8d998a8 <col:29, col:47> 'unsigned long' '>>'
                    (ParenExpr 0x8d99878 <col:29, col:42> 'unsigned long'
                      (BinaryOperator 0x8d99860 <col:30, col:41> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d99818 <col:30> 'unsigned long' 1)
                        (ParenExpr 0x8d99848 <col:37, col:41> 'int'
                          (DeclRefExpr 0x8d99830 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d99890 <line:68:47> 'int' 8)))))
            (CStyleCastExpr 0x8d999f0 <line:69:11, col:38> 'int' <NoOp>
              (ImplicitCastExpr 0x8d999e0 <col:17, col:38> 'int' <IntegralCast>
                (ParenExpr 0x8d999b8 <col:17, col:38> 'unsigned long'
                  (BinaryOperator 0x8d999a0 <col:18, col:36> 'unsigned long' '>>'
                    (ParenExpr 0x8d99970 <col:18, col:31> 'unsigned long'
                      (BinaryOperator 0x8d99958 <col:19, col:30> 'unsigned long' '<<'
                        (IntegerLiteral 0x8d99910 <col:19> 'unsigned long' 1)
                        (ParenExpr 0x8d99940 <col:26, col:30> 'int'
                          (DeclRefExpr 0x8d99928 <line:98:24> 'int' EnumConstant 0x8d91990 '__ISwalnum' 'enum <anonymous at /usr/include/wctype.h:72:1>'))))
                    (IntegerLiteral 0x8d99988 <line:69:36> 'int' 24)))))))))))

};
extern "C" {
    extern int iswalnum(wint_t __wc) throw();
    extern int iswalpha(wint_t __wc) throw();
    extern int iswcntrl(wint_t __wc) throw();
    extern int iswdigit(wint_t __wc) throw();
    extern int iswgraph(wint_t __wc) throw();
    extern int iswlower(wint_t __wc) throw();
    extern int iswprint(wint_t __wc) throw();
    extern int iswpunct(wint_t __wc) throw();
    extern int iswspace(wint_t __wc) throw();
    extern int iswupper(wint_t __wc) throw();
    extern int iswxdigit(wint_t __wc) throw();
    extern int iswblank(wint_t __wc) throw();
    extern wctype_t wctype(const char *__property) throw();
    extern int iswctype(wint_t __wc, wctype_t __desc) throw();
    typedef const __int32_t *wctrans_t;
    extern wint_t towlower(wint_t __wc) throw();
    extern wint_t towupper(wint_t __wc) throw();
}
extern "C" {
    extern wctrans_t wctrans(const char *__property) throw();
    extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
    extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
    extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
    extern wctype_t wctype_l(const char *__property, __locale_t __locale) throw();
    extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
    extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
    extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
    extern wctrans_t wctrans_l(const char *__property, __locale_t __locale) throw();
    extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
}
typedef __mbstate_t mbstate_t;
extern "C" {
    struct tm;
    extern wchar_t *wcscpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern wchar_t *wcscat(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcsncat(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern int wcscmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern int wcsncasecmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern int wcscasecmp_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern int wcsncasecmp_l(const wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern int wcscoll(const wchar_t *__s1, const wchar_t *__s2) throw();
    extern size_t wcsxfrm(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern int wcscoll_l(const wchar_t *__s1, const wchar_t *__s2, __locale_t __loc) throw();
    extern size_t wcsxfrm_l(wchar_t *__s1, const wchar_t *__s2, size_t __n, __locale_t __loc) throw();
    extern wchar_t *wcsdup(const wchar_t *__s) throw();
    extern wchar_t *wcschr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcsrchr(const wchar_t *__wcs, wchar_t __wc) throw();
    extern wchar_t *wcschrnul(const wchar_t *__s, wchar_t __wc) throw();
    extern size_t wcscspn(const wchar_t *__wcs, const wchar_t *__reject) throw();
    extern size_t wcsspn(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcspbrk(const wchar_t *__wcs, const wchar_t *__accept) throw();
    extern wchar_t *wcsstr(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern wchar_t *wcstok(wchar_t *restrict __s, const wchar_t *restrict __delim, wchar_t **restrict __ptr) throw();
    extern size_t wcslen(const wchar_t *__s) throw();
    extern wchar_t *wcswcs(const wchar_t *__haystack, const wchar_t *__needle) throw();
    extern size_t wcsnlen(const wchar_t *__s, size_t __maxlen) throw();
    extern wchar_t *wmemchr(const wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern int wmemcmp(const wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wchar_t *wmemmove(wchar_t *__s1, const wchar_t *__s2, size_t __n) throw();
    extern wchar_t *wmemset(wchar_t *__s, wchar_t __c, size_t __n) throw();
    extern wchar_t *wmempcpy(wchar_t *restrict __s1, const wchar_t *restrict __s2, size_t __n) throw();
    extern wint_t btowc(int __c) throw();
    extern int wctob(wint_t __c) throw();
    extern int mbsinit(const mbstate_t *__ps) throw();
    extern size_t mbrtowc(wchar_t *restrict __pwc, const char *restrict __s, size_t __n, mbstate_t *__p) throw();
    extern size_t wcrtomb(char *restrict __s, wchar_t __wc, mbstate_t *restrict __ps) throw();
    extern size_t __mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbrlen(const char *restrict __s, size_t __n, mbstate_t *restrict __ps) throw();
    extern size_t mbsrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t mbsnrtowcs(wchar_t *restrict __dst, const char **restrict __src, size_t __nmc, size_t __len, mbstate_t *restrict __ps) throw();
    extern size_t wcsnrtombs(char *restrict __dst, const wchar_t **restrict __src, size_t __nwc, size_t __len, mbstate_t *restrict __ps) throw();
    extern int wcwidth(wchar_t __c) throw();
    extern int wcswidth(const wchar_t *__s, size_t __n) throw();
    extern double wcstod(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern float wcstof(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long double wcstold(const wchar_t *restrict __nptr, wchar_t **restrict __endptr) throw();
    extern long wcstol(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long wcstoul(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoll(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstoull(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long long wcstoq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern unsigned long long wcstouq(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base) throw();
    extern long wcstol_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long wcstoul_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern long long wcstoll_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern unsigned long long wcstoull_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, int __base, __locale_t __loc) throw();
    extern double wcstod_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern float wcstof_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern long double wcstold_l(const wchar_t *restrict __nptr, wchar_t **restrict __endptr, __locale_t __loc) throw();
    extern wchar_t *wcpcpy(wchar_t *restrict __dest, const wchar_t *restrict __src) throw();
    extern wchar_t *wcpncpy(wchar_t *restrict __dest, const wchar_t *restrict __src, size_t __n) throw();
    extern __FILE *open_wmemstream(wchar_t **__bufloc, size_t *__sizeloc) throw();
    extern int fwide(__FILE *__fp, int __mode) throw();
    extern int fwprintf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wprintf(const wchar_t *restrict __format, ...);
    extern int swprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, ...) throw();
    extern int vfwprintf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwprintf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswprintf(wchar_t *restrict __s, size_t __n, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern int fwscanf(__FILE *restrict __stream, const wchar_t *restrict __format, ...);
    extern int wscanf(const wchar_t *restrict __format, ...);
    extern int swscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, ...) throw();
    extern int vfwscanf(__FILE *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vwscanf(const wchar_t *restrict __format, __gnuc_va_list __arg);
    extern int vswscanf(const wchar_t *restrict __s, const wchar_t *restrict __format, __gnuc_va_list __arg) throw();
    extern wint_t fgetwc(__FILE *__stream);
    extern wint_t getwc(__FILE *__stream);
    extern wint_t getwchar();
    extern wint_t fputwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar(wchar_t __wc);
    extern wchar_t *fgetws(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern wint_t ungetwc(wint_t __wc, __FILE *__stream);
    extern wint_t getwc_unlocked(__FILE *__stream);
    extern wint_t getwchar_unlocked();
    extern wint_t fgetwc_unlocked(__FILE *__stream);
    extern wint_t fputwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwc_unlocked(wchar_t __wc, __FILE *__stream);
    extern wint_t putwchar_unlocked(wchar_t __wc);
    extern wchar_t *fgetws_unlocked(wchar_t *restrict __ws, int __n, __FILE *restrict __stream);
    extern int fputws_unlocked(const wchar_t *restrict __ws, __FILE *restrict __stream);
    extern size_t wcsftime(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp) throw();
    extern size_t wcsftime_l(wchar_t *restrict __s, size_t __maxsize, const wchar_t *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
}
extern "C" {
    struct timezone {
        struct timezone;
        int tz_minuteswest;
        int tz_dsttime;
    };
    typedef struct timezone *restrict __timezone_ptr_t;
    extern int gettimeofday(struct timeval *restrict __tv, __timezone_ptr_t __tz) throw();
    extern int settimeofday(const struct timeval *__tv, const struct timezone *__tz) throw();
    extern int adjtime(const struct timeval *__delta, struct timeval *__olddelta) throw();
    enum __itimer_which {
        ITIMER_REAL = (ImplicitCastExpr 0x8daeff8 </usr/include/i386-linux-gnu/sys/time.h:96:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8daef00 <col:19> 'int' 0))
,
        ITIMER_VIRTUAL = (ImplicitCastExpr 0x8daf008 </usr/include/i386-linux-gnu/sys/time.h:99:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8daef58 <col:22> 'int' 1))
,
        ITIMER_PROF = (ImplicitCastExpr 0x8daf018 </usr/include/i386-linux-gnu/sys/time.h:103:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8daefa8 <col:19> 'int' 2))

    };
    struct itimerval {
        struct itimerval;
        struct timeval it_interval;
        struct timeval it_value;
    };
    typedef int __itimer_which_t;
    extern int getitimer(__itimer_which_t __which, struct itimerval *__value) throw();
    extern int setitimer(__itimer_which_t __which, const struct itimerval *restrict __new, struct itimerval *restrict __old) throw();
    extern int utimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int lutimes(const char *__file, const struct timeval __tvp[2]) throw();
    extern int futimes(int __fd, const struct timeval __tvp[2]) throw();
    extern int futimesat(int __fd, const char *__file, const struct timeval __tvp[2]) throw();
}
extern "C" {
    extern int __sigismember(const __sigset_t *, int);
    extern int __sigaddset(__sigset_t *, int);
    extern int __sigdelset(__sigset_t *, int);
    typedef __sig_atomic_t sig_atomic_t;
    union sigval {
        union sigval;
        int sival_int;
        void *sival_ptr;
    };
    typedef union sigval sigval_t;
    struct siginfo {
        struct siginfo;
        int si_signo;
        int si_errno;
        int si_code;
        union {
            int _pad[29];
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:63:2> _kill;
            struct {
                int si_tid;
                int si_overrun;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:70:2> _timer;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                sigval_t si_sigval;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:78:2> _rt;
            struct {
                __pid_t si_pid;
                __uid_t si_uid;
                int si_status;
                __clock_t si_utime;
                __clock_t si_stime;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:86:2> _sigchld;
            struct {
                void *si_addr;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:96:2> _sigfault;
            struct {
                long si_band;
                int si_fd;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:102:2> _sigpoll;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:58:5> _sifields;
    };
    typedef struct siginfo siginfo_t;
    enum  {
        SI_ASYNCNL = (UnaryOperator 0x8d62388 </usr/include/i386-linux-gnu/bits/siginfo.h:131:16, col:17> 'int' prefix '-'
  (IntegerLiteral 0x8d62370 <col:17> 'int' 60))
,
        SI_TKILL = (UnaryOperator 0x8d623f0 </usr/include/i386-linux-gnu/bits/siginfo.h:133:14, col:15> 'int' prefix '-'
  (IntegerLiteral 0x8d623d8 <col:15> 'int' 6))
,
        SI_SIGIO,
        SI_ASYNCIO,
        SI_MESGQ,
        SI_TIMER,
        SI_QUEUE,
        SI_USER,
        SI_KERNEL = (IntegerLiteral 0x8d625c8 </usr/include/i386-linux-gnu/bits/siginfo.h:147:15> 'int' 128)

    };
    enum  {
        ILL_ILLOPC = (ImplicitCastExpr 0x8d62898 </usr/include/i386-linux-gnu/bits/siginfo.h:155:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62680 <col:16> 'int' 1))
,
        ILL_ILLOPN,
        ILL_ILLADR,
        ILL_ILLTRP,
        ILL_PRVOPC,
        ILL_PRVREG,
        ILL_COPROC,
        ILL_BADSTK
    };
    enum  {
        FPE_INTDIV = (ImplicitCastExpr 0x8d62b28 </usr/include/i386-linux-gnu/bits/siginfo.h:176:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62910 <col:16> 'int' 1))
,
        FPE_INTOVF,
        FPE_FLTDIV,
        FPE_FLTOVF,
        FPE_FLTUND,
        FPE_FLTRES,
        FPE_FLTINV,
        FPE_FLTSUB
    };
    enum  {
        SEGV_MAPERR = (ImplicitCastExpr 0x8d62c38 </usr/include/i386-linux-gnu/bits/siginfo.h:197:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62ba0 <col:17> 'int' 1))
,
        SEGV_ACCERR
    };
    enum  {
        BUS_ADRALN = (ImplicitCastExpr 0x8d62d88 </usr/include/i386-linux-gnu/bits/siginfo.h:206:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62cb0 <col:16> 'int' 1))
,
        BUS_ADRERR,
        BUS_OBJERR
    };
    enum  {
        TRAP_BRKPT = (ImplicitCastExpr 0x8d62e98 </usr/include/i386-linux-gnu/bits/siginfo.h:217:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62e00 <col:16> 'int' 1))
,
        TRAP_TRACE
    };
    enum  {
        CLD_EXITED = (ImplicitCastExpr 0x8d630a8 </usr/include/i386-linux-gnu/bits/siginfo.h:226:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d62f10 <col:16> 'int' 1))
,
        CLD_KILLED,
        CLD_DUMPED,
        CLD_TRAPPED,
        CLD_STOPPED,
        CLD_CONTINUED
    };
    enum  {
        POLL_IN = (ImplicitCastExpr 0x8d632b8 </usr/include/i386-linux-gnu/bits/siginfo.h:243:13> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8d63120 <col:13> 'int' 1))
,
        POLL_OUT,
        POLL_MSG,
        POLL_ERR,
        POLL_PRI,
        POLL_HUP
    };
    struct sigevent {
        struct sigevent;
        sigval_t sigev_value;
        int sigev_signo;
        int sigev_notify;
        union {
            int _pad[13];
            __pid_t _tid;
            struct {
                void (*_function)(sigval_t);
                void *_attribute;
            };
            struct <anonymous struct at /usr/include/i386-linux-gnu/bits/siginfo.h:287:2> _sigev_thread;
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/siginfo.h:279:5> _sigev_un;
    };
    typedef struct sigevent sigevent_t;
    enum  {
        SIGEV_SIGNAL = (ImplicitCastExpr 0x8dcb9b8 </usr/include/i386-linux-gnu/bits/siginfo.h:302:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8dcb890 <col:18> 'int' 0))
,
        SIGEV_NONE,
        SIGEV_THREAD,
        SIGEV_THREAD_ID = (ImplicitCastExpr 0x8dcb9c8 </usr/include/i386-linux-gnu/bits/siginfo.h:309:21> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8dcb968 <col:21> 'int' 4))

    };
    typedef void (*__sighandler_t)(int);
    extern __sighandler_t __sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t sysv_signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t signal(int __sig, __sighandler_t __handler) throw();
    extern __sighandler_t bsd_signal(int __sig, __sighandler_t __handler) throw();
    extern int kill(__pid_t __pid, int __sig) throw();
    extern int killpg(__pid_t __pgrp, int __sig) throw();
    extern int raise(int __sig) throw();
    extern __sighandler_t ssignal(int __sig, __sighandler_t __handler) throw();
    extern int gsignal(int __sig) throw();
    extern void psignal(int __sig, const char *__s);
    extern void psiginfo(const siginfo_t *__pinfo, const char *__s);
    extern int __sigpause(int __sig_or_mask, int __is_sig);
    extern int sigpause(int __sig);
    extern int sigblock(int __mask) throw();
    extern int sigsetmask(int __mask) throw();
    extern int siggetmask() throw();
    typedef __sighandler_t sighandler_t;
    typedef __sighandler_t sig_t;
    extern int sigemptyset(sigset_t *__set) throw();
    extern int sigfillset(sigset_t *__set) throw();
    extern int sigaddset(sigset_t *__set, int __signo) throw();
    extern int sigdelset(sigset_t *__set, int __signo) throw();
    extern int sigismember(const sigset_t *__set, int __signo) throw();
    extern int sigisemptyset(const sigset_t *__set) throw();
    extern int sigandset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    extern int sigorset(sigset_t *__set, const sigset_t *__left, const sigset_t *__right) throw();
    struct sigaction {
        struct sigaction;
        union {
            __sighandler_t sa_handler;
            void (*sa_sigaction)(int, siginfo_t *, void *);
        };
        union <anonymous union at /usr/include/i386-linux-gnu/bits/sigaction.h:29:5> __sigaction_handler;
        __sigset_t sa_mask;
        int sa_flags;
        void (*sa_restorer)();
    };
    extern int sigprocmask(int __how, const sigset_t *restrict __set, sigset_t *restrict __oset) throw();
    extern int sigsuspend(const sigset_t *__set);
    extern int sigaction(int __sig, const struct sigaction *restrict __act, struct sigaction *restrict __oact) throw();
    extern int sigpending(sigset_t *__set) throw();
    extern int sigwait(const sigset_t *restrict __set, int *restrict __sig);
    extern int sigwaitinfo(const sigset_t *restrict __set, siginfo_t *restrict __info);
    extern int sigtimedwait(const sigset_t *restrict __set, siginfo_t *restrict __info, const struct timespec *restrict __timeout);
    extern int sigqueue(__pid_t __pid, int __sig, const union sigval __val) throw();
    extern const char *const _sys_siglist[65];
    extern const char *const sys_siglist[65];
    struct sigvec {
        struct sigvec;
        __sighandler_t sv_handler;
        int sv_mask;
        int sv_flags;
    };
    extern int sigvec(int __sig, const struct sigvec *__vec, struct sigvec *__ovec) throw();
    typedef signed char __s8;
    typedef unsigned char __u8;
    typedef short __s16;
    typedef unsigned short __u16;
    typedef int __s32;
    typedef unsigned int __u32;
    typedef long long __s64;
    typedef unsigned long long __u64;
    typedef unsigned short umode_t;
    struct {
        unsigned long fds_bits[32];
    };
    typedef struct __kernel_fd_set __kernel_fd_set;
    typedef void (*__kernel_sighandler_t)(int);
    typedef int __kernel_key_t;
    typedef int __kernel_mqd_t;
    typedef unsigned long __kernel_ino_t;
    typedef unsigned short __kernel_mode_t;
    typedef unsigned short __kernel_nlink_t;
    typedef long __kernel_off_t;
    typedef int __kernel_pid_t;
    typedef unsigned short __kernel_ipc_pid_t;
    typedef unsigned short __kernel_uid_t;
    typedef unsigned short __kernel_gid_t;
    typedef unsigned int __kernel_size_t;
    typedef int __kernel_ssize_t;
    typedef int __kernel_ptrdiff_t;
    typedef long __kernel_time_t;
    typedef long __kernel_suseconds_t;
    typedef long __kernel_clock_t;
    typedef int __kernel_timer_t;
    typedef int __kernel_clockid_t;
    typedef int __kernel_daddr_t;
    typedef char *__kernel_caddr_t;
    typedef unsigned short __kernel_uid16_t;
    typedef unsigned short __kernel_gid16_t;
    typedef unsigned int __kernel_uid32_t;
    typedef unsigned int __kernel_gid32_t;
    typedef unsigned short __kernel_old_uid_t;
    typedef unsigned short __kernel_old_gid_t;
    typedef unsigned short __kernel_old_dev_t;
    typedef long long __kernel_loff_t;
    struct {
        int val[2];
    };
    typedef struct __kernel_fsid_t __kernel_fsid_t;
    typedef __u16 __le16;
    typedef __u16 __be16;
    typedef __u32 __le32;
    typedef __u32 __be32;
    typedef __u64 __le64;
    typedef __u64 __be64;
    typedef __u16 __sum16;
    typedef __u32 __wsum;
    struct _fpx_sw_bytes {
        struct _fpx_sw_bytes;
        __u32 magic1;
        __u32 extended_size;
        __u64 xstate_bv;
        __u32 xstate_size;
        __u32 padding[7];
    };
    struct _fpreg {
        struct _fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _fpxreg {
        struct _fpxreg;
        unsigned short significand[4];
        unsigned short exponent;
        unsigned short padding[3];
    };
    struct _xmmreg {
        struct _xmmreg;
        unsigned long element[4];
    };
    struct _fpstate {
        struct _fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _fpreg _st[8];
        unsigned short status;
        unsigned short magic;
        unsigned long _fxsr_env[6];
        unsigned long mxcsr;
        unsigned long reserved;
        struct _fpxreg _fxsr_st[8];
        struct _xmmreg _xmm[8];
        unsigned long padding1[44];
        union {
            unsigned long padding2[12];
            struct _fpx_sw_bytes sw_reserved;
        } ;
        ;
        ;
    };
    struct sigcontext {
        struct sigcontext;
        unsigned short gs;
        unsigned short __gsh;
        unsigned short fs;
        unsigned short __fsh;
        unsigned short es;
        unsigned short __esh;
        unsigned short ds;
        unsigned short __dsh;
        unsigned long edi;
        unsigned long esi;
        unsigned long ebp;
        unsigned long esp;
        unsigned long ebx;
        unsigned long edx;
        unsigned long ecx;
        unsigned long eax;
        unsigned long trapno;
        unsigned long err;
        unsigned long eip;
        unsigned short cs;
        unsigned short __csh;
        unsigned long eflags;
        unsigned long esp_at_signal;
        unsigned short ss;
        unsigned short __ssh;
        struct _fpstate *fpstate;
        unsigned long oldmask;
        unsigned long cr2;
    };
    struct _xsave_hdr {
        struct _xsave_hdr;
        __u64 xstate_bv;
        __u64 reserved1[2];
        __u64 reserved2[5];
    };
    struct _ymmh_state {
        struct _ymmh_state;
        __u32 ymmh_space[64];
    };
    struct _xstate {
        struct _xstate;
        struct _fpstate fpstate;
        struct _xsave_hdr xstate_hdr;
        struct _ymmh_state ymmh;
    };
    extern int sigreturn(struct sigcontext *__scp) throw();
    extern int siginterrupt(int __sig, int __interrupt) throw();
    struct sigstack {
        struct sigstack;
        void *ss_sp;
        int ss_onstack;
    };
    enum  {
        SS_ONSTACK = (ImplicitCastExpr 0x8de3c28 </usr/include/i386-linux-gnu/bits/sigstack.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8de3b90 <col:16> 'int' 1))
,
        SS_DISABLE
    };
    struct sigaltstack {
        struct sigaltstack;
        void *ss_sp;
        int ss_flags;
        size_t ss_size;
    };
    typedef struct sigaltstack stack_t;
    typedef int greg_t;
    typedef greg_t gregset_t[19];
    enum  {
        REG_GS = (ImplicitCastExpr 0x8de44d8 </usr/include/i386-linux-gnu/sys/ucontext.h:43:12> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8de4000 <col:12> 'int' 0))
,
        REG_FS,
        REG_ES,
        REG_DS,
        REG_EDI,
        REG_ESI,
        REG_EBP,
        REG_ESP,
        REG_EBX,
        REG_EDX,
        REG_ECX,
        REG_EAX,
        REG_TRAPNO,
        REG_ERR,
        REG_EIP,
        REG_CS,
        REG_EFL,
        REG_UESP,
        REG_SS
    };
    struct _libc_fpreg {
        struct _libc_fpreg;
        unsigned short significand[4];
        unsigned short exponent;
    };
    struct _libc_fpstate {
        struct _libc_fpstate;
        unsigned long cw;
        unsigned long sw;
        unsigned long tag;
        unsigned long ipoff;
        unsigned long cssel;
        unsigned long dataoff;
        unsigned long datasel;
        struct _libc_fpreg _st[8];
        unsigned long status;
    };
    typedef struct _libc_fpstate *fpregset_t;
    struct {
        gregset_t gregs;
        fpregset_t fpregs;
        unsigned long oldmask;
        unsigned long cr2;
    };
    typedef struct mcontext_t mcontext_t;
    struct ucontext {
        struct ucontext;
        unsigned long uc_flags;
        struct ucontext *uc_link;
        stack_t uc_stack;
        mcontext_t uc_mcontext;
        __sigset_t uc_sigmask;
        struct _libc_fpstate __fpregs_mem;
    };
    typedef struct ucontext ucontext_t;
    extern int sigstack(struct sigstack *__ss, struct sigstack *__oss) throw();
    extern int sigaltstack(const struct sigaltstack *restrict __ss, struct sigaltstack *restrict __oss) throw();
    extern int sighold(int __sig) throw();
    extern int sigrelse(int __sig) throw();
    extern int sigignore(int __sig) throw();
    extern __sighandler_t sigset(int __sig, __sighandler_t __disp) throw();
    extern int pthread_sigmask(int __how, const __sigset_t *restrict __newmask, __sigset_t *restrict __oldmask) throw();
    extern int pthread_kill(pthread_t __threadid, int __signo) throw();
    extern int pthread_sigqueue(pthread_t __threadid, int __signo, const union sigval __value) throw();
    extern int __libc_current_sigrtmin() throw();
    extern int __libc_current_sigrtmax() throw();
}
int fish_wcwidth(wchar_t wc);
int fish_wcswidth(const wchar_t *str, size_t n);
typedef char tputs_arg_t;
wchar_t *wcsndup(const wchar_t *in, size_t c);
long convert_digit(wchar_t d, int base);
size_t wcslcat(wchar_t *dst, const wchar_t *src, size_t siz);
size_t wcslcpy(wchar_t *dst, const wchar_t *src, size_t siz);
char *fish_gettext(const char *msgid);
char *fish_bindtextdomain(const char *domainname, const char *dirname);
char *fish_textdomain(const char *domainname);
char *fish_dcgettext(const char *domainname, const char *msgid, int category);
extern int _nl_msg_cat_cntr;
extern "C" {
    typedef unsigned char cc_t;
    typedef unsigned int speed_t;
    typedef unsigned int tcflag_t;
    struct termios {
        struct termios;
        tcflag_t c_iflag;
        tcflag_t c_oflag;
        tcflag_t c_cflag;
        tcflag_t c_lflag;
        cc_t c_line;
        cc_t c_cc[32];
        speed_t c_ispeed;
        speed_t c_ospeed;
    };
    extern speed_t cfgetospeed(const struct termios *__termios_p) throw();
    extern speed_t cfgetispeed(const struct termios *__termios_p) throw();
    extern int cfsetospeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetispeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int cfsetspeed(struct termios *__termios_p, speed_t __speed) throw();
    extern int tcgetattr(int __fd, struct termios *__termios_p) throw();
    extern int tcsetattr(int __fd, int __optional_actions, const struct termios *__termios_p) throw();
    extern void cfmakeraw(struct termios *__termios_p) throw();
    extern int tcsendbreak(int __fd, int __duration) throw();
    extern int tcdrain(int __fd);
    extern int tcflush(int __fd, int __queue_selector) throw();
    extern int tcflow(int __fd, int __action) throw();
    extern __pid_t tcgetsid(int __fd) throw();
}
namespace std {
    typedef unsigned int size_t;
    typedef int ptrdiff_t;
}
namespace std {
    template <typename _Alloc = std::basic_string<wchar_t>> class allocator
template <typename _Alloc = std::basic_string<char>> class allocator
template <typename _Alloc = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x92fed80 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x92fead4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x8ecf610 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Alloc = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Alloc = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Alloc> class allocator;
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7e38 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x8eb7e20 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x8eb7de0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x8eb5080 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb7e10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x8eb7df8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7ec8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x8eb7eb8 <col:9, col:24>
    (BinaryOperator 0x8eb7ea0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb7e80 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e4c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5230 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7e90 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e64 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5280 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7f58 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x8eb7f48 <col:9, col:23>
    (BinaryOperator 0x8eb7f30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb7f10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7edc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53a0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7f20 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7ef4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53f0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb80c0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x8eb80b0 <col:9, col:39>
    (CallExpr 0x8eb8058 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x8eb8048 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb7fec <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da1060 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea2610 'wmemcmp')))
      (ImplicitCastExpr 0x8eb8080 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fa4 <col:24> 'const char_type *' lvalue ParmVar 0x8eb54f0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8090 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fbc <col:30> 'const char_type *' lvalue ParmVar 0x8eb5540 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb80a0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb7fd4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb5580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb81c8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x8eb81b8 <col:9, col:26>
    (CallExpr 0x8eb8188 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x8eb8178 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8124 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x8da0990 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x8e9db90 'wcslen')))
      (ImplicitCastExpr 0x8eb81a8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb810c <col:23> 'const char_type *' lvalue ParmVar 0x8eb5690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb8308 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x8eb82f8 <col:9, col:37>
    (ImplicitCastExpr 0x8eb82e8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x8eb8290 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x8eb8280 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb8260 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da0eb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2a70 'wmemchr')))
        (ImplicitCastExpr 0x8eb82b8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb8218 <col:24> 'const char_type *' lvalue ParmVar 0x8eb5790 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x8eb82c8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb8230 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5820 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x8eb82d8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8248 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb57d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb8470 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x8eb8460 <col:9, col:40>
    (CallExpr 0x8eb8408 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x8eb83f8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb839c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da13b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea26f0 'wmemmove')))
      (ImplicitCastExpr 0x8eb8430 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb8354 <col:25> 'char_type *' lvalue ParmVar 0x8eb7380 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8440 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb836c <col:31> 'const char_type *' lvalue ParmVar 0x8eb73d0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8450 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8384 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x8eb7410 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb85b0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x8eb85a0 <col:9, col:39>
    (CallExpr 0x8eb8548 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8538 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8504 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x8da1210 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x8ea2680 'wmemcpy')))
      (ImplicitCastExpr 0x8eb8570 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84bc <col:24> 'char_type *' lvalue ParmVar 0x8eb7520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8580 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84d4 <col:30> 'const char_type *' lvalue ParmVar 0x8eb7570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8590 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb84ec <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb75b0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb8710 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x8eb8700 <col:9, col:37>
    (CallExpr 0x8eb86a8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8698 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8644 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da1570 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2760 'wmemset')))
      (ImplicitCastExpr 0x8eb86d0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb85fc <col:24> 'char_type *' lvalue ParmVar 0x8eb7690 '__s' 'char_type *'))
      (ImplicitCastExpr 0x8eb86e0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb8614 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x8eb7710 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x8eb86f0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb862c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb76d0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb8790 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x8eb8780 <col:9, col:29>
    (CXXFunctionalCastExpr 0x8eb8768 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x8eb8758 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x8eb8748 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8730 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7880 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb8810 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x8eb8800 <col:9, col:28>
    (CXXFunctionalCastExpr 0x8eb87e8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x8eb87d8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x8eb87c8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb87b0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb79a0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb88a0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x8eb8890 <col:9, col:24>
    (BinaryOperator 0x8eb8878 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb8858 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8824 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7ac0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb8868 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb883c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7b10 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb8918 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x8eb8908 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb88f0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x8eb88d0 </usr/include/wctype.h:39:16, col:28> 'unsigned int'
        (IntegerLiteral 0x8eb88b8 <col:17> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb8af0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x8eb8ae0 <col:9, col:46>
    (ConditionalOperator 0x8eb8ac0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x8eb8a38 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x8eb8a28 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb892c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x8eb7bb0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x8eb8944 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x8eb8a60 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x8eb89c8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x8eb89b8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb895c <col:33> 'int_type (void)' lvalue CXXMethod 0x8eb7c50 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x8eb8ab0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8eb8a70 <col:42> 'int' 0))
      (ImplicitCastExpr 0x8eb8aa0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8a88 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3cd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x8eb3cc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x8eb3c80 <col:9> 'char_type':'char' lvalue ParmVar 0x8eb14e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb3cb0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x8eb3c98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3d88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x8eb3d78 <col:9, col:24>
    (BinaryOperator 0x8eb3d60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb3d30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3cec <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1690 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3d50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x8eb16e0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3e38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x8eb3e28 <col:9, col:23>
    (BinaryOperator 0x8eb3e10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb3de0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3dd0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1800 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3e00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3df0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3db4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x8eb1850 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb3f60 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x8eb3f50 <col:9, col:48>
    (CallExpr 0x8eb3ed8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x8eb3ec8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb3e4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x8eb3f10 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f00 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e64 <col:33> 'const char_type *' lvalue ParmVar 0x8eb1950 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f30 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f20 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e7c <col:39> 'const char_type *' lvalue ParmVar 0x8eb19a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f40 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb3e94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x8eb19e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb40f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x8eb40e8 <col:9, col:36>
    (CallExpr 0x8eb40b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x8eb40a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb4054 <col:16> 'unsigned int (const char *)' lvalue Function 0x8eb3f80 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x8eb40d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb406c <col:33> 'const char_type *' lvalue ParmVar 0x8eb1b20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb43e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x8eb43d8 <col:9, col:77>
    (CXXStaticCastExpr 0x8eb43c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x8eb4338 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x8eb4328 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb42a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x8eb4140 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb4370 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4360 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb42bc <col:63> 'const char_type *' lvalue ParmVar 0x8eb1c40 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4390 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb4380 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb42d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x8eb1cd0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x8eb43a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb42ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1c80 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb4538 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x8eb4528 <col:9, col:74>
    (CXXStaticCastExpr 0x8eb4510 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4488 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x8eb4478 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb43fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb44c0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb44b0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4414 <col:58> 'char_type *' lvalue ParmVar 0x8eb1e30 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb44e0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb44d0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb442c <col:64> 'const char_type *' lvalue ParmVar 0x8eb1e80 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb44f0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4444 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1ec0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb47d8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x8eb47c8 <col:9, col:73>
    (CXXStaticCastExpr 0x8eb47b0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4728 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x8eb4718 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb46b4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb4760 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb4750 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46cc <col:57> 'char_type *' lvalue ParmVar 0x8eb2000 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb4780 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4770 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46e4 <col:63> 'const char_type *' lvalue ParmVar 0x8eb2050 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4790 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb46fc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x8eb2090 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb4928 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x8eb4918 <col:9, col:71>
    (CXXStaticCastExpr 0x8eb4900 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4878 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x8eb4868 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb47ec <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x8e8a1e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb48b0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb48a0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4804 <col:57> 'char_type *' lvalue ParmVar 0x8eb2170 '__s' 'char_type *')))
        (ImplicitCastExpr 0x8eb48d0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb48c0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb481c <col:62> 'char_type':'char' lvalue ParmVar 0x8eb21f0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x8eb48e0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4834 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x8eb21b0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb49a8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x8eb4998 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb4980 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x8eb4970 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x8eb4960 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x8eb493c <col:39> 'const int_type':'const int' lvalue ParmVar 0x8eb2380 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb4a60 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x8eb4a50 <col:9, col:69>
    (CXXStaticCastExpr 0x8eb4a38 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x8eb4a28 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x8eb4a08 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x8eb49f8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x8eb49e8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x8eb49bc <col:65> 'const char_type':'const char' lvalue ParmVar 0x8eb24a0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb4af0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x8eb4ae0 <col:9, col:24>
    (BinaryOperator 0x8eb4ac8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb4aa8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a74 <col:16> 'const int_type':'const int' lvalue ParmVar 0x8eb3960 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb4ab8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a8c <col:24> 'const int_type':'const int' lvalue ParmVar 0x8eb39b0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb4b68 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x8eb4b58 <col:9, col:56>
    (CXXStaticCastExpr 0x8eb4b40 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x8eb4b20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x8eb4b08 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb4cc8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x8eb4cb8 <col:9, col:37>
    (ConditionalOperator 0x8eb4c98 <col:16, col:37> 'int'
      (ParenExpr 0x8eb4c40 <col:16, col:29> '_Bool'
        (BinaryOperator 0x8eb4c28 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x8eb4c18 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x8eb4b7c <col:17> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &'))
          (CallExpr 0x8eb4bf8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x8eb4be8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb4b94 <col:24> 'int_type (void)' lvalue CXXMethod 0x8eb3af0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x8eb4c58 <col:33> 'int' 0)
      (ImplicitCastExpr 0x8eb4c88 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4c70 <col:37> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x92fe8e8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x92fe748 <line:180:4, col:62>
    0x92fe570 "void *__p =
      (CXXReinterpretCastExpr 0x92fe730 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x92fe718 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x92fe6c0 <col:41> 'size_type []' lvalue Var 0x907a460 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x92fe8d8 <line:181:4, col:39>
    (UnaryOperator 0x92fe8c0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x92fe8a8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x92fe898 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x92fe87c <col:36> 'void *' lvalue Var 0x92fe570 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x92fe550 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x92fe530 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x92fb980 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x92fb938 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x92fb928 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fdc67c <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x92fb960 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x92fb910 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x92fb770 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x92fb8f8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x92fb8d8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x92fb8c8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92fb890 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x907a5e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x92fb970 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x8fdc768 <col:50> '_Bool' false))))
    (CompoundStmt 0x92fe518 <line:236:6, line:245:6>
      (NullStmt 0x8fdc7a0 <line:238:67>)
      (IfStmt 0x92fbc20 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x92fba78 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x92fba50 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x92fba40 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8fdc7d0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x92fba28 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x92fba08 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9079c30
                (ImplicitCastExpr 0x92fb9f8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x92fb9d0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x8fdc868 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x8fdc850 <col:10> 'int' 1)))
          (IntegerLiteral 0x8fdc8a8 <col:16> 'int' 0))
        (CompoundStmt 0x92fbc08 <line:241:3, line:244:3>
          (NullStmt 0x8fdc928 <line:242:63>)
          (CXXMemberCallExpr 0x92fbbe8 <line:243:5, col:19> 'void'
            (MemberExpr 0x92fbbb0 <col:5> '<bound member function type>' ->_M_destroy 0x907b290
              (CXXThisExpr 0x92fba90 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x92fbbd0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x907b170 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x92faed0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x90575b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x90575a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x92fb710 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92fb700 <col:9, col:29>
    (ImplicitCastExpr 0x92fb6f0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x92fb6d0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9057b40
        (MemberExpr 0x92fb6b0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
          (CXXThisExpr 0x92fb590 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x92fb578 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92fb568 <col:9, col:59>
    (UnaryOperator 0x92fb550 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x92fb538 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92fb520 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x92fb508 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x92fb4f0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92fb4d0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x92fb4b0 <col:44> '<bound member function type>' ->_M_data 0x9057bf0
                  (CXXThisExpr 0x92fb4a0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x92fae20 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x92fae00 <col:9, col:51> 'void'
    (CXXTemporary 0x92fad80)
    (CXXMemberCallExpr 0x92fad98 <col:9, col:51> 'void'
      (MemberExpr 0x92facfc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x907b1c0
        (CXXMemberCallExpr 0x92facd0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x92facb0 <col:9> '<bound member function type>' ->_M_rep 0x9057ee0
            (ImplicitCastExpr 0x92facf0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x92fab90 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x92fadf0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x92fade0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x92fad88 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x92fad80)
            (CXXMemberCallExpr 0x92fad50 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x92fad30 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9071a00
                (ImplicitCastExpr 0x92fad70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x92fad20 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9300230 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9300220 <col:9, col:26>
    (ImplicitCastExpr 0x9300210 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x93001f0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9079ab0
        (ImplicitCastExpr 0x93001e0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x93001c0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x93001a0 <col:16> '<bound member function type>' ->_M_rep 0x9057ee0
              (CXXThisExpr 0x9300080 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9300068 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9300058 <col:9, col:32>
    (BinaryOperator 0x9300040 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9300010 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92ffff0 <col:16, col:22> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x92fffe0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9300030 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x93008d0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9300358 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9300300 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x93002f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9300284 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x93002d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x93002b0 <col:13, col:19> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x93002a0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9300328 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9300318 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9300348 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x93008c0 <line:859:2, col:22>
    (ImplicitCastExpr 0x93008b0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9300898 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9300850 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9300830 <col:9> '<bound member function type>' ->_M_data 0x9057bf0
            (CXXThisExpr 0x9300820 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9300888 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x930086c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9300e00 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9300df0 <col:9, col:24>
    (ImplicitCastExpr 0x9300de0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9300dc0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9300da0 <col:16> '<bound member function type>' ->_M_data 0x9057bf0
          (CXXThisExpr 0x9300d90 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x92feac0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x92feab0 <col:9, col:16>
    (CXXConstructExpr 0x92fea88 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x92fea78 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x92fea68 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x92fea20 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
            (CXXThisExpr 0x92fe900 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9031fa8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9031f98 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x92ff8e0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92ff8d0 <col:9, col:29>
    (ImplicitCastExpr 0x92ff8c0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x92ff8a0 <col:17, col:29> 'char *' lvalue ._M_p 0x9032530
        (MemberExpr 0x92ff880 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9032560
          (CXXThisExpr 0x92ff760 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x92ff748 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92ff738 <col:9, col:59>
    (UnaryOperator 0x92ff720 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x92ff708 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92ff6f0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x92ff6d8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x92ff6c0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92ff6a0 <col:44, col:52> 'char *'
                (MemberExpr 0x92ff680 <col:44> '<bound member function type>' ->_M_data 0x90325e0
                  (CXXThisExpr 0x92ff670 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x92ff098 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x92ff088 <col:9, col:26>
    (ImplicitCastExpr 0x92ff078 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x92ff058 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x90524f0
        (ImplicitCastExpr 0x92ff048 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x92ff010 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x92feff0 <col:16> '<bound member function type>' ->_M_rep 0x90328b0
              (CXXThisExpr 0x92feec8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x92feeb0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x92feea0 <col:9, col:32>
    (BinaryOperator 0x92fee88 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x92fee58 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92fee38 <col:16, col:22> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92fee28 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x92fee78 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x92fff80 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x92ffa08 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x92ff9b0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x92ff9a0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x92ff934 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x92ff980 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x92ff960 <col:13, col:19> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92ff950 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x92ff9d8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x92ff9c8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92ff9f8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x92fff70 <line:859:2, col:22>
    (ImplicitCastExpr 0x92fff60 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x92fff48 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x92fff00 <col:9, col:17> 'char *'
          (MemberExpr 0x92ffee0 <col:9> '<bound member function type>' ->_M_data 0x90325e0
            (CXXThisExpr 0x92ffed0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x92fff38 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92fff1c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string;
    struct char_traits;
    typedef basic_string<char> string;
    struct char_traits;
    typedef basic_string<wchar_t> wstring;
}
namespace std {
    void __throw_bad_exception();
    void __throw_bad_alloc();
    void __throw_bad_cast();
    void __throw_bad_typeid();
    void __throw_logic_error(const char *);
    void __throw_domain_error(const char *);
    void __throw_invalid_argument(const char *);
    void __throw_length_error(const char *);
    void __throw_out_of_range(const char *);
    void __throw_runtime_error(const char *);
    void __throw_range_error(const char *);
    void __throw_overflow_error(const char *);
    void __throw_underflow_error(const char *);
    void __throw_ios_failure(const char *);
    void __throw_system_error(int);
    void __throw_future_error(int);
    void __throw_bad_function_call();
}
namespace __gnu_cxx {
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator;
}
namespace std {
    struct __true_type {
        struct __true_type;
    };
    struct __false_type {
        struct __false_type;
    };
    template <bool = true> struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    }
template <bool> struct __truth_type {
        struct __truth_type;
        typedef std::__false_type __type;
    };
    struct __truth_type {
        struct __truth_type;
        typedef std::__true_type __type;
    };
    template <class _Sp = std::__is_integer<int>, class _Tp = std::__is_floating<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x92f9618 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x92f95c8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x92f9388 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x92f9378 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x92f9354 <col:29, col:34> 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>' EnumConstant 0x8e1c830 '__value' 'enum std::__is_integer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:215:7>')))
    (CXXFunctionalCastExpr 0x92f95b0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x92f95a0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x92f957c <col:51, col:56> 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>' EnumConstant 0x92f9500 '__value' 'enum std::__is_floating<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:260:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp = std::__is_arithmetic<int>, class _Tp = std::__is_pointer<int>> struct __traitor {
        struct __traitor;
        enum  {
            __value = (ImplicitCastExpr 0x92f9b48 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x92f9af8 <col:24, col:63> '_Bool' '||'
    (CXXFunctionalCastExpr 0x92f98b0 <col:24, col:41> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x92f98a0 <col:29, col:34> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x92f9880 <col:29, col:34> 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>' EnumConstant 0x92f95e0 '__value' 'enum std::__traitor<struct std::__is_integer<int>, struct std::__is_floating<int> >::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:98:7>')))
    (CXXFunctionalCastExpr 0x92f9ae0 <col:46, col:63> '_Bool' functional cast to _Bool <NoOp>
      (ImplicitCastExpr 0x92f9ad0 <col:51, col:56> '_Bool' <IntegralToBoolean>
        (DeclRefExpr 0x92f9aac <col:51, col:56> 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>' EnumConstant 0x92f9a30 '__value' 'enum std::__is_pointer<int>::<anonymous at /usr/include/c++/4.6/bits/cpp_type_traits.h:292:7>')))))

        };
        typedef typename __truth_type<__value>::__type __type;
    }
template <class _Sp, class _Tp> struct __traitor {
        struct __traitor;
        enum  {
            __value = (BinaryOperator 0x8e179e0 </usr/include/c++/4.6/bits/cpp_type_traits.h:98:24, col:63> '_Bool' '||'
  (CXXUnresolvedConstructExpr 0x8e17948 <col:24, col:41> '_Bool'
    (DependentScopeDeclRefExpr 0x8e17920 <col:29, col:34> '<dependent type>' lvalue))
  (CXXUnresolvedConstructExpr 0x8e179c0 <col:46, col:63> '_Bool'
    (DependentScopeDeclRefExpr 0x8e17998 <col:51, col:56> '<dependent type>' lvalue)))

        };
        typedef typename __truth_type<__value>::__type __type;
    };
    template <typename , typename > struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x8e17f10 </usr/include/c++/4.6/bits/cpp_type_traits.h:106:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __are_same {
        struct __are_same;
        enum  {
            __value = (IntegerLiteral 0x8e18ce0 </usr/include/c++/4.6/bits/cpp_type_traits.h:113:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = void> struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x8e19388 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_void {
        struct __is_void;
        enum  {
            __value = (IntegerLiteral 0x8e19030 </usr/include/c++/4.6/bits/cpp_type_traits.h:121:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_void {
        struct __is_void;
        enum  {
            __value = (ImplicitCastExpr 0x8e19388 </usr/include/c++/4.6/bits/cpp_type_traits.h:128:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19330 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ce88 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ce30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e30af8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19690 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b798 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b740 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e31ab8 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19690 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = unsigned int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1cb78 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1cb20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b178 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b120 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = wchar_t> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b488 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b430 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned short> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1c558 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1c500 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1d198 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1d140 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e30588 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19690 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp = signed char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ae68 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ae10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ab58 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ab00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1df58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1df00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1c868 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1c810 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = unsigned long long> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1e268 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1e210 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = bool> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e199e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (IntegerLiteral 0x8e19690 </usr/include/c++/4.6/bits/cpp_type_traits.h:138:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e199e8 </usr/include/c++/4.6/bits/cpp_type_traits.h:148:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e19990 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ab58 </usr/include/c++/4.6/bits/cpp_type_traits.h:155:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ab00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ae68 </usr/include/c++/4.6/bits/cpp_type_traits.h:162:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ae10 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b178 </usr/include/c++/4.6/bits/cpp_type_traits.h:169:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b120 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b488 </usr/include/c++/4.6/bits/cpp_type_traits.h:177:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b430 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1b798 </usr/include/c++/4.6/bits/cpp_type_traits.h:201:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1b740 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1c558 </usr/include/c++/4.6/bits/cpp_type_traits.h:208:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1c500 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1c868 </usr/include/c++/4.6/bits/cpp_type_traits.h:215:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1c810 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1cb78 </usr/include/c++/4.6/bits/cpp_type_traits.h:222:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1cb20 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ce88 </usr/include/c++/4.6/bits/cpp_type_traits.h:229:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ce30 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1d198 </usr/include/c++/4.6/bits/cpp_type_traits.h:236:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1d140 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1df58 </usr/include/c++/4.6/bits/cpp_type_traits.h:243:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1df00 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_integer {
        struct __is_integer;
        enum  {
            __value = (ImplicitCastExpr 0x8e1e268 </usr/include/c++/4.6/bits/cpp_type_traits.h:250:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1e210 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ebd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1eb80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = float> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1e8c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1e870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = long double> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1fdd0 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ee90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = int> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x92f9538 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1e570 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (IntegerLiteral 0x8e1e570 </usr/include/c++/4.6/bits/cpp_type_traits.h:260:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1e8c8 </usr/include/c++/4.6/bits/cpp_type_traits.h:268:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1e870 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1ebd8 </usr/include/c++/4.6/bits/cpp_type_traits.h:275:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1eb80 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_floating {
        struct __is_floating;
        enum  {
            __value = (ImplicitCastExpr 0x8e1fdd0 </usr/include/c++/4.6/bits/cpp_type_traits.h:282:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e1ee90 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (ImplicitCastExpr 0x92f9a68 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e200e0 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x8e200e0 </usr/include/c++/4.6/bits/cpp_type_traits.h:292:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_pointer {
        struct __is_pointer;
        enum  {
            __value = (IntegerLiteral 0x8e20500 </usr/include/c++/4.6/bits/cpp_type_traits.h:299:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned long *> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (ImplicitCastExpr 0x92f7f88 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e20850 <col:24> 'int' 0))

        };
        typedef std::__false_type __type;
    }
template <typename _Tp> struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x8e20850 </usr/include/c++/4.6/bits/cpp_type_traits.h:309:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_normal_iterator {
        struct __is_normal_iterator;
        enum  {
            __value = (IntegerLiteral 0x8e21b90 </usr/include/c++/4.6/bits/cpp_type_traits.h:317:24> 'int' 1)

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = int> struct __is_arithmetic : public __traitor<__is_integer<int>, __is_floating<int> > {
        struct __is_arithmetic;
    }
template <typename _Tp> struct __is_arithmetic : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> > {
        struct __is_arithmetic;
    };
    template <typename _Tp> struct __is_fundamental : public __traitor<__is_void<_Tp>, __is_arithmetic<_Tp> > {
        struct __is_fundamental;
    };
    template <typename _Tp = int> struct __is_scalar : public __traitor<__is_arithmetic<int>, __is_pointer<int> > {
        struct __is_scalar;
    }
template <typename _Tp> struct __is_scalar : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> > {
        struct __is_scalar;
    };
    template <typename _Tp = wchar_t> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x8e243b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e24360 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x8e240a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e24050 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_char {
        struct __is_char;
        enum  {
            __value = (IntegerLiteral 0x8e23d50 </usr/include/c++/4.6/bits/cpp_type_traits.h:351:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x8e240a8 </usr/include/c++/4.6/bits/cpp_type_traits.h:358:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e24050 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_char {
        struct __is_char;
        enum  {
            __value = (ImplicitCastExpr 0x8e243b8 </usr/include/c++/4.6/bits/cpp_type_traits.h:366:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e24360 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp = unsigned char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e25fa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e25f50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = signed char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e25c98 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e25c40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp = char> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e24a18 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e249c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    }
template <typename _Tp> struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (IntegerLiteral 0x8e246c0 </usr/include/c++/4.6/bits/cpp_type_traits.h:374:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e24a18 </usr/include/c++/4.6/bits/cpp_type_traits.h:381:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e249c0 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e25c98 </usr/include/c++/4.6/bits/cpp_type_traits.h:388:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e25c40 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    struct __is_byte {
        struct __is_byte;
        enum  {
            __value = (ImplicitCastExpr 0x8e25fa8 </usr/include/c++/4.6/bits/cpp_type_traits.h:395:24> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8e25f50 <col:24> 'int' 1))

        };
        typedef std::__true_type __type;
    };
    template <typename _Tp> struct __is_move_iterator {
        struct __is_move_iterator;
        enum  {
            __value = (IntegerLiteral 0x8e262b0 </usr/include/c++/4.6/bits/cpp_type_traits.h:405:24> 'int' 0)

        };
        typedef std::__false_type __type;
    };
}
namespace __gnu_cxx {
    template <bool = false, typename  = void> struct __enable_if {
        struct __enable_if;
    }
template <bool = true, typename  = void> struct __enable_if {
        struct __enable_if;
        typedef void __type;
    }
template <bool, typename > struct __enable_if {
        struct __enable_if;
    };
    struct __enable_if {
        struct __enable_if;
        typedef _Tp __type;
    };
    template <bool _Cond = true, typename _Iftrue = unsigned long, typename _Iffalse = unsigned long long> struct __conditional_type {
        struct __conditional_type;
        typedef unsigned long __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<char>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<char>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<char> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<short>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<short>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<short> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<int>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<int>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<int> __type;
    }
template <bool _Cond = true, typename _Iftrue = __gnu_cxx::__numeric_traits_integer<unsigned long>, typename _Iffalse = __gnu_cxx::__numeric_traits_floating<unsigned long>> struct __conditional_type {
        struct __conditional_type;
        typedef __gnu_cxx::__numeric_traits_integer<unsigned long> __type;
    }
template <bool _Cond, typename _Iftrue, typename _Iffalse> struct __conditional_type {
        struct __conditional_type;
        typedef _Iftrue __type;
    };
    struct __conditional_type {
        struct __conditional_type;
        typedef _Iffalse __type;
    };
    template <typename _Tp = long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    }
template <typename _Tp = short> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    }
template <typename _Tp = wchar_t> struct __add_unsigned
template <typename _Tp = signed char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = char> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    }
template <typename _Tp = long long> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    }
template <typename _Tp = int> struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    }
template <typename _Tp = bool> struct __add_unsigned
template <typename _Tp> struct __add_unsigned {
        struct __add_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned char __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned short __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned int __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long __type;
    };
    struct __add_unsigned {
        struct __add_unsigned;
        typedef unsigned long long __type;
    };
    struct __add_unsigned;
    struct __add_unsigned;
    template <typename _Tp = unsigned int> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    }
template <typename _Tp = unsigned char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = wchar_t> struct __remove_unsigned
template <typename _Tp = unsigned short> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    }
template <typename _Tp = unsigned long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    }
template <typename _Tp = char> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    }
template <typename _Tp = bool> struct __remove_unsigned
template <typename _Tp = unsigned long long> struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    }
template <typename _Tp> struct __remove_unsigned {
        struct __remove_unsigned;
    private:
    private:
        typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;
    public:
    public:
        typedef typename __if_type::__type __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef signed char __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef short __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef int __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long __type;
    };
    struct __remove_unsigned {
        struct __remove_unsigned;
        typedef long long __type;
    };
    struct __remove_unsigned;
    struct __remove_unsigned;
    template <typename _Type> inline bool __is_null_pointer(_Type *__ptr) (CompoundStmt 0x8e2ed88 </usr/include/c++/4.6/ext/type_traits.h:151:5, col:26>
  (ReturnStmt 0x8e2ed78 <col:7, col:23>
    (BinaryOperator 0x8e2ed60 <col:14, col:23> '<dependent type>' '=='
      (DeclRefExpr 0x8e2ed2c <col:14> '_Type *' lvalue ParmVar 0x8e2ec00 '__ptr' '_Type *')
      (IntegerLiteral 0x8e2ed48 <col:23> 'int' 0))))

;
    template <typename _Type> inline bool __is_null_pointer(_Type) (CompoundStmt 0x8e2ef50 </usr/include/c++/4.6/ext/type_traits.h:156:5, col:21>
  (ReturnStmt 0x8e2ef40 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8e2ef30 <col:14> '_Bool' false)))

;
    template <typename _Tp = double, bool = false> struct __promote {
        struct __promote;
        typedef double __type;
    }
template <typename _Tp = long double, bool = false> struct __promote {
        struct __promote;
        typedef long double __type;
    }
template <typename _Tp = float, bool = false> struct __promote {
        struct __promote;
        typedef float __type;
    }
template <typename _Tp, bool = (DependentScopeDeclRefExpr 0x8e2f070 </usr/include/c++/4.6/ext/type_traits.h:160:33, col:57> '<dependent type>' lvalue)
> struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
    };
    struct __promote {
        struct __promote;
        typedef long double __type;
    };
    struct __promote {
        struct __promote;
        typedef double __type;
    };
    struct __promote {
        struct __promote;
        typedef float __type;
    };
    template <typename _Tp, typename _Up, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type> struct __promote_2 {
        struct __promote_2;
        typedef typeof (_Tp2() + _Up2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type> struct __promote_3 {
        struct __promote_3;
        typedef typeof (_Tp2() + _Up2() + _Vp2()) __type;
    };
    template <typename _Tp, typename _Up, typename _Vp, typename _Wp, typename _Tp2 = typename __promote<_Tp>::__type, typename _Up2 = typename __promote<_Up>::__type, typename _Vp2 = typename __promote<_Vp>::__type, typename _Wp2 = typename __promote<_Wp>::__type> struct __promote_4 {
        struct __promote_4;
        typedef typeof (_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };
}
namespace __gnu_cxx {
    template <typename _Value = short> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const short __min = (ImplicitCastExpr 0x91ff800 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x91ff7e8 <col:3, col:68> 'int'
    (ConditionalOperator 0x91ff7c8 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x91ff620 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x91ff608 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x91ff5f8 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x91ff5e0 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x91ff5d0 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x8e35578 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e35560 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e35548 <col:39> 'int' 1))))))
          (IntegerLiteral 0x8e355b0 <col:44> 'int' 0)))
      (BinaryOperator 0x91ff770 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x91ff760 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x91ff650 <col:28, col:33> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x91ff640 <col:33> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x8e355f8 <col:33> 'int' 1))))
        (ParenExpr 0x91ff748 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x91ff730 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x91ff698 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x91ff670 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
              (ImplicitCastExpr 0x91ff688 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x8e35650 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x91ff720 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x91ff708 <col:31, col:45> '_Bool'
                (BinaryOperator 0x91ff6f0 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x91ff6e0 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x91ff6c8 <col:32, col:40> 'short':'short' <NoOp>
                      (ImplicitCastExpr 0x91ff6b8 <col:37, col:40> 'short':'short' <IntegralCast>
                        (ParenExpr 0x8e356c0 <col:37, col:40> 'int'
                          (UnaryOperator 0x8e356a8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x8e35690 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x8e356f8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x91ff7b8 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x91ff7a0 <col:62, col:67> 'short':'short' <NoOp>
          (ImplicitCastExpr 0x91ff790 <col:67> 'short':'short' <IntegralCast>
            (IntegerLiteral 0x8e35788 <col:67> 'int' 0)))))))
;
        static const short __max = (ImplicitCastExpr 0x91ffba0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const short':'const short' <IntegralCast>
  (ParenExpr 0x91ffb88 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x91ffb68 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x91ff8c0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x91ff8a8 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x91ff898 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x91ff880 <col:32, col:40> 'short':'short' <NoOp>
              (ImplicitCastExpr 0x91ff870 <col:37, col:40> 'short':'short' <IntegralCast>
                (ParenExpr 0x8e37c28 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e37c10 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e37bf8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x8e37c60 <col:44> 'int' 0)))
      (ParenExpr 0x91ffaf8 <line:51:4, col:61> 'int'
        (BinaryOperator 0x91ffae0 <col:5, col:60> 'int' '+'
          (ParenExpr 0x91ffac8 <col:5, col:56> 'int'
            (BinaryOperator 0x91ffab0 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x91ffa98 <col:6, col:50> 'int'
                (BinaryOperator 0x91ffa80 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x91ffa68 <col:7, col:45> 'int'
                    (BinaryOperator 0x91ffa50 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x91ffa40 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x91ff8f0 <col:8, col:13> 'short':'short' <NoOp>
                          (ImplicitCastExpr 0x91ff8e0 <col:13> 'short':'short' <IntegralCast>
                            (IntegerLiteral 0x8e37ca8 <col:13> 'int' 1))))
                      (ParenExpr 0x91ffa28 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x91ffa10 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x91ff9e8 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x91ff9d0 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x91ff938 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x91ff910 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
                                (ImplicitCastExpr 0x91ff928 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x8e37d00 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x91ff9c0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x91ff9a8 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x91ff990 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x91ff980 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x91ff968 <col:32, col:40> 'short':'short' <NoOp>
                                        (ImplicitCastExpr 0x91ff958 <col:37, col:40> 'short':'short' <IntegralCast>
                                          (ParenExpr 0x8e37d70 <col:37, col:40> 'int'
                                            (UnaryOperator 0x8e37d58 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x8e37d40 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x8e37da8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x91ffa00 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x8e37e20 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x8e37e98 <col:49> 'int' 1)))
              (IntegerLiteral 0x8e37ee0 <col:55> 'int' 1)))
          (IntegerLiteral 0x8e37f28 <col:60> 'int' 1)))
      (UnaryOperator 0x91ffb50 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x91ffb40 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x91ffb28 <col:66, col:71> 'short':'short' <NoOp>
            (ImplicitCastExpr 0x91ffb18 <col:71> 'short':'short' <IntegralCast>
              (IntegerLiteral 0x8e37f70 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x91ffc50 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x91ffc38 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x91ffc28 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x91ffc10 <col:32, col:40> 'short':'short' <NoOp>
        (ImplicitCastExpr 0x91ffc00 <col:37, col:40> 'short':'short' <IntegralCast>
          (ParenExpr 0x8e38068 <col:37, col:40> 'int'
            (UnaryOperator 0x8e38050 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e38038 <col:39> 'int' 1))))))
    (IntegerLiteral 0x8e380a0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x91ffdb0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x91ffd98 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x91ffd80 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x91ffce8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x91ffcc0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'short':'short')
        (ImplicitCastExpr 0x91ffcd8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8e38158 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x91ffd70 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x91ffd58 <col:31, col:45> '_Bool'
          (BinaryOperator 0x91ffd40 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x91ffd30 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x91ffd18 <col:32, col:40> 'short':'short' <NoOp>
                (ImplicitCastExpr 0x91ffd08 <col:37, col:40> 'short':'short' <IntegralCast>
                  (ParenExpr 0x8e381c8 <col:37, col:40> 'int'
                    (UnaryOperator 0x8e381b0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x8e38198 <col:39> 'int' 1))))))
            (IntegerLiteral 0x8e38200 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = unsigned long> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const unsigned long __min = (ParenExpr 0x90a2950 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'unsigned long':'unsigned long'
  (ConditionalOperator 0x90a2930 <line:42:31, line:47:67> 'unsigned long':'unsigned long'
    (ParenExpr 0x90a27a8 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x90a2790 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x90a2768 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x8f0eeb0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x8e35578 <col:37, col:40> 'int'
              (UnaryOperator 0x8e35560 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x8e35548 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x90a2780 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x8e355b0 <col:44> 'int' 0))))
    (BinaryOperator 0x90a28e8 <line:47:28, line:44:54> 'unsigned long':'unsigned long' '<<'
      (CStyleCastExpr 0x90a27d8 <line:47:28, col:33> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x90a27c8 <col:33> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x8e355f8 <col:33> 'int' 1)))
      (ParenExpr 0x90a28d0 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x90a28b8 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x90a2820 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x90a27f8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
            (ImplicitCastExpr 0x90a2810 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e35650 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x90a28a8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x90a2890 <col:31, col:45> '_Bool'
              (BinaryOperator 0x90a2878 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x90a2850 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                  (ImplicitCastExpr 0x90a2840 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                    (ParenExpr 0x8e356c0 <col:37, col:40> 'int'
                      (UnaryOperator 0x8e356a8 <col:38, col:39> 'int' prefix '-'
                        (IntegerLiteral 0x8e35690 <col:39> 'int' 1)))))
                (ImplicitCastExpr 0x90a2868 <col:44> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x8e356f8 <col:44> 'int' 0))))))))
    (CStyleCastExpr 0x90a2918 <line:47:62, col:67> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x90a2908 <col:67> 'unsigned long':'unsigned long' <IntegralCast>
        (IntegerLiteral 0x8e35788 <col:67> 'int' 0)))))
;
        static const unsigned long __max = (ParenExpr 0x90a2cd8 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'unsigned long'
  (ConditionalOperator 0x90a2cb8 <line:42:31, line:51:71> 'unsigned long'
    (ParenExpr 0x90a2a10 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x90a29f8 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x90a29d0 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
          (ImplicitCastExpr 0x90a29c0 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
            (ParenExpr 0x8e37c28 <col:37, col:40> 'int'
              (UnaryOperator 0x8e37c10 <col:38, col:39> 'int' prefix '-'
                (IntegerLiteral 0x8e37bf8 <col:39> 'int' 1)))))
        (ImplicitCastExpr 0x90a29e8 <col:44> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x8e37c60 <col:44> 'int' 0))))
    (ParenExpr 0x90a2c58 <line:51:4, col:61> 'unsigned long'
      (BinaryOperator 0x90a2c40 <col:5, col:60> 'unsigned long' '+'
        (ParenExpr 0x90a2c18 <col:5, col:56> 'unsigned long'
          (BinaryOperator 0x90a2c00 <col:6, col:55> 'unsigned long' '<<'
            (ParenExpr 0x90a2be8 <col:6, col:50> 'unsigned long'
              (BinaryOperator 0x90a2bd0 <col:7, col:49> 'unsigned long' '-'
                (ParenExpr 0x90a2ba8 <col:7, col:45> 'unsigned long':'unsigned long'
                  (BinaryOperator 0x90a2b90 <col:8, col:44> 'unsigned long':'unsigned long' '<<'
                    (CStyleCastExpr 0x90a2a40 <col:8, col:13> 'unsigned long':'unsigned long' <NoOp>
                      (ImplicitCastExpr 0x90a2a30 <col:13> 'unsigned long':'unsigned long' <IntegralCast>
                        (IntegerLiteral 0x8e37ca8 <col:13> 'int' 1)))
                    (ParenExpr 0x90a2b78 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x90a2b60 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x90a2b38 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x90a2b20 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x90a2a88 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x90a2a60 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
                              (ImplicitCastExpr 0x90a2a78 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x8e37d00 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x90a2b10 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x90a2af8 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x90a2ae0 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x90a2ab8 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
                                    (ImplicitCastExpr 0x90a2aa8 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                                      (ParenExpr 0x8e37d70 <col:37, col:40> 'int'
                                        (UnaryOperator 0x8e37d58 <col:38, col:39> 'int' prefix '-'
                                          (IntegerLiteral 0x8e37d40 <col:39> 'int' 1)))))
                                  (ImplicitCastExpr 0x90a2ad0 <col:44> 'unsigned long' <IntegralCast>
                                    (IntegerLiteral 0x8e37da8 <col:44> 'int' 0)))))))
                        (ImplicitCastExpr 0x90a2b50 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x8e37e20 <col:43> 'int' 1))))))
                (ImplicitCastExpr 0x90a2bc0 <col:49> 'unsigned long' <IntegralCast>
                  (IntegerLiteral 0x8e37e98 <col:49> 'int' 1))))
            (IntegerLiteral 0x8e37ee0 <col:55> 'int' 1)))
        (ImplicitCastExpr 0x90a2c30 <col:60> 'unsigned long' <IntegralCast>
          (IntegerLiteral 0x8e37f28 <col:60> 'int' 1))))
    (UnaryOperator 0x90a2ca0 <col:65, col:71> 'unsigned long':'unsigned long' prefix '~'
      (CStyleCastExpr 0x90a2c88 <col:66, col:71> 'unsigned long':'unsigned long' <NoOp>
        (ImplicitCastExpr 0x90a2c78 <col:71> 'unsigned long':'unsigned long' <IntegralCast>
          (IntegerLiteral 0x8e37f70 <col:71> 'int' 0))))))
;
        static const bool __is_signed = (ParenExpr 0x90a2d90 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x90a2d78 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x90a2d50 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
      (ImplicitCastExpr 0x90a2d40 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
        (ParenExpr 0x8e38068 <col:37, col:40> 'int'
          (UnaryOperator 0x8e38050 <col:38, col:39> 'int' prefix '-'
            (IntegerLiteral 0x8e38038 <col:39> 'int' 1)))))
    (ImplicitCastExpr 0x90a2d68 <col:44> 'unsigned long' <IntegralCast>
      (IntegerLiteral 0x8e380a0 <col:44> 'int' 0))))
;
        static const int __digits = (ImplicitCastExpr 0x90a2ef0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x90a2ed8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x90a2ec0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x90a2e28 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x90a2e00 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'unsigned long':'unsigned long')
        (ImplicitCastExpr 0x90a2e18 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8e38158 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x90a2eb0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x90a2e98 <col:31, col:45> '_Bool'
          (BinaryOperator 0x90a2e80 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x90a2e58 <col:32, col:40> 'unsigned long':'unsigned long' <NoOp>
              (ImplicitCastExpr 0x90a2e48 <col:37, col:40> 'unsigned long':'unsigned long' <IntegralCast>
                (ParenExpr 0x8e381c8 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e381b0 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e38198 <col:39> 'int' 1)))))
            (ImplicitCastExpr 0x90a2e70 <col:44> 'unsigned long' <IntegralCast>
              (IntegerLiteral 0x8e38200 <col:44> 'int' 0))))))))
;
    }
template <typename _Value = char> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const char __min = (ImplicitCastExpr 0x9150190 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9150178 <col:3, col:68> 'int'
    (ConditionalOperator 0x9150158 <line:42:31, line:47:67> 'int'
      (ParenExpr 0x914ffb0 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x914ff98 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x914ff88 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x914ff70 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x914ff60 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x8e35578 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e35560 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e35548 <col:39> 'int' 1))))))
          (IntegerLiteral 0x8e355b0 <col:44> 'int' 0)))
      (BinaryOperator 0x9150100 <line:47:28, line:44:54> 'int' '<<'
        (ImplicitCastExpr 0x91500f0 <line:47:28, col:33> 'int' <IntegralCast>
          (CStyleCastExpr 0x914ffe0 <col:28, col:33> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x914ffd0 <col:33> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x8e355f8 <col:33> 'int' 1))))
        (ParenExpr 0x91500d8 <line:44:3, col:54> 'unsigned int'
          (BinaryOperator 0x91500c0 <col:4, line:42:45> 'unsigned int' '-'
            (BinaryOperator 0x9150028 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
              (UnaryExprOrTypeTraitExpr 0x9150000 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
              (ImplicitCastExpr 0x9150018 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x8e35650 <col:22> 'int' 8)))
            (ImplicitCastExpr 0x91500b0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
              (ParenExpr 0x9150098 <col:31, col:45> '_Bool'
                (BinaryOperator 0x9150080 <col:32, col:44> '_Bool' '<'
                  (ImplicitCastExpr 0x9150070 <col:32, col:40> 'int' <IntegralCast>
                    (CStyleCastExpr 0x9150058 <col:32, col:40> 'char':'char' <NoOp>
                      (ImplicitCastExpr 0x9150048 <col:37, col:40> 'char':'char' <IntegralCast>
                        (ParenExpr 0x8e356c0 <col:37, col:40> 'int'
                          (UnaryOperator 0x8e356a8 <col:38, col:39> 'int' prefix '-'
                            (IntegerLiteral 0x8e35690 <col:39> 'int' 1))))))
                  (IntegerLiteral 0x8e356f8 <col:44> 'int' 0)))))))
      (ImplicitCastExpr 0x9150148 <line:47:62, col:67> 'int' <IntegralCast>
        (CStyleCastExpr 0x9150130 <col:62, col:67> 'char':'char' <NoOp>
          (ImplicitCastExpr 0x9150120 <col:67> 'char':'char' <IntegralCast>
            (IntegerLiteral 0x8e35788 <col:67> 'int' 0)))))))
;
        static const char __max = (ImplicitCastExpr 0x9150530 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'const char':'const char' <IntegralCast>
  (ParenExpr 0x9150518 <line:50:3, line:51:72> 'int'
    (ConditionalOperator 0x91504f8 <line:42:31, line:51:71> 'int'
      (ParenExpr 0x9150250 <line:42:31, col:45> '_Bool'
        (BinaryOperator 0x9150238 <col:32, col:44> '_Bool' '<'
          (ImplicitCastExpr 0x9150228 <col:32, col:40> 'int' <IntegralCast>
            (CStyleCastExpr 0x9150210 <col:32, col:40> 'char':'char' <NoOp>
              (ImplicitCastExpr 0x9150200 <col:37, col:40> 'char':'char' <IntegralCast>
                (ParenExpr 0x8e37c28 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e37c10 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e37bf8 <col:39> 'int' 1))))))
          (IntegerLiteral 0x8e37c60 <col:44> 'int' 0)))
      (ParenExpr 0x9150488 <line:51:4, col:61> 'int'
        (BinaryOperator 0x9150470 <col:5, col:60> 'int' '+'
          (ParenExpr 0x9150458 <col:5, col:56> 'int'
            (BinaryOperator 0x9150440 <col:6, col:55> 'int' '<<'
              (ParenExpr 0x9150428 <col:6, col:50> 'int'
                (BinaryOperator 0x9150410 <col:7, col:49> 'int' '-'
                  (ParenExpr 0x91503f8 <col:7, col:45> 'int'
                    (BinaryOperator 0x91503e0 <col:8, col:44> 'int' '<<'
                      (ImplicitCastExpr 0x91503d0 <col:8, col:13> 'int' <IntegralCast>
                        (CStyleCastExpr 0x9150280 <col:8, col:13> 'char':'char' <NoOp>
                          (ImplicitCastExpr 0x9150270 <col:13> 'char':'char' <IntegralCast>
                            (IntegerLiteral 0x8e37ca8 <col:13> 'int' 1))))
                      (ParenExpr 0x91503b8 <col:18, col:44> 'unsigned int'
                        (BinaryOperator 0x91503a0 <line:44:3, line:51:43> 'unsigned int' '-'
                          (ParenExpr 0x9150378 <line:44:3, col:54> 'unsigned int'
                            (BinaryOperator 0x9150360 <col:4, line:42:45> 'unsigned int' '-'
                              (BinaryOperator 0x91502c8 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                                (UnaryExprOrTypeTraitExpr 0x91502a0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
                                (ImplicitCastExpr 0x91502b8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                  (IntegerLiteral 0x8e37d00 <col:22> 'int' 8)))
                              (ImplicitCastExpr 0x9150350 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                                (ParenExpr 0x9150338 <col:31, col:45> '_Bool'
                                  (BinaryOperator 0x9150320 <col:32, col:44> '_Bool' '<'
                                    (ImplicitCastExpr 0x9150310 <col:32, col:40> 'int' <IntegralCast>
                                      (CStyleCastExpr 0x91502f8 <col:32, col:40> 'char':'char' <NoOp>
                                        (ImplicitCastExpr 0x91502e8 <col:37, col:40> 'char':'char' <IntegralCast>
                                          (ParenExpr 0x8e37d70 <col:37, col:40> 'int'
                                            (UnaryOperator 0x8e37d58 <col:38, col:39> 'int' prefix '-'
                                              (IntegerLiteral 0x8e37d40 <col:39> 'int' 1))))))
                                    (IntegerLiteral 0x8e37da8 <col:44> 'int' 0))))))
                          (ImplicitCastExpr 0x9150390 <line:51:43> 'unsigned int' <IntegralCast>
                            (IntegerLiteral 0x8e37e20 <col:43> 'int' 1))))))
                  (IntegerLiteral 0x8e37e98 <col:49> 'int' 1)))
              (IntegerLiteral 0x8e37ee0 <col:55> 'int' 1)))
          (IntegerLiteral 0x8e37f28 <col:60> 'int' 1)))
      (UnaryOperator 0x91504e0 <col:65, col:71> 'int' prefix '~'
        (ImplicitCastExpr 0x91504d0 <col:66, col:71> 'int' <IntegralCast>
          (CStyleCastExpr 0x91504b8 <col:66, col:71> 'char':'char' <NoOp>
            (ImplicitCastExpr 0x91504a8 <col:71> 'char':'char' <IntegralCast>
              (IntegerLiteral 0x8e37f70 <col:71> 'int' 0))))))))
;
        static const bool __is_signed = (ParenExpr 0x91505e0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x91505c8 <col:32, col:44> '_Bool' '<'
    (ImplicitCastExpr 0x91505b8 <col:32, col:40> 'int' <IntegralCast>
      (CStyleCastExpr 0x91505a0 <col:32, col:40> 'char':'char' <NoOp>
        (ImplicitCastExpr 0x9150590 <col:37, col:40> 'char':'char' <IntegralCast>
          (ParenExpr 0x8e38068 <col:37, col:40> 'int'
            (UnaryOperator 0x8e38050 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e38038 <col:39> 'int' 1))))))
    (IntegerLiteral 0x8e380a0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x9150740 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x9150728 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x9150710 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x9150678 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x9150650 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'char':'char')
        (ImplicitCastExpr 0x9150668 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8e38158 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x9150700 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x91506e8 <col:31, col:45> '_Bool'
          (BinaryOperator 0x91506d0 <col:32, col:44> '_Bool' '<'
            (ImplicitCastExpr 0x91506c0 <col:32, col:40> 'int' <IntegralCast>
              (CStyleCastExpr 0x91506a8 <col:32, col:40> 'char':'char' <NoOp>
                (ImplicitCastExpr 0x9150698 <col:37, col:40> 'char':'char' <IntegralCast>
                  (ParenExpr 0x8e381c8 <col:37, col:40> 'int'
                    (UnaryOperator 0x8e381b0 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x8e38198 <col:39> 'int' 1))))))
            (IntegerLiteral 0x8e38200 <col:44> 'int' 0)))))))
;
    }
template <typename _Value = int> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const int __min = (ParenExpr 0x8fe2808 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> 'int':'int'
  (ConditionalOperator 0x8fe27e8 <line:42:31, line:47:67> 'int':'int'
    (ParenExpr 0x8fe26a0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x8fe2688 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x8fe2670 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x8e35578 <col:37, col:40> 'int'
            (UnaryOperator 0x8e35560 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e35548 <col:39> 'int' 1))))
        (IntegerLiteral 0x8e355b0 <col:44> 'int' 0)))
    (BinaryOperator 0x8fe27b0 <line:47:28, line:44:54> 'int':'int' '<<'
      (CStyleCastExpr 0x8fe26c0 <line:47:28, col:33> 'int':'int' <NoOp>
        (IntegerLiteral 0x8e355f8 <col:33> 'int' 1))
      (ParenExpr 0x8fe2798 <line:44:3, col:54> 'unsigned int'
        (BinaryOperator 0x8fe2780 <col:4, line:42:45> 'unsigned int' '-'
          (BinaryOperator 0x8fe2708 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x8fe26e0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
            (ImplicitCastExpr 0x8fe26f8 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e35650 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x8fe2770 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
            (ParenExpr 0x8fe2758 <col:31, col:45> '_Bool'
              (BinaryOperator 0x8fe2740 <col:32, col:44> '_Bool' '<'
                (CStyleCastExpr 0x8fe2728 <col:32, col:40> 'int':'int' <NoOp>
                  (ParenExpr 0x8e356c0 <col:37, col:40> 'int'
                    (UnaryOperator 0x8e356a8 <col:38, col:39> 'int' prefix '-'
                      (IntegerLiteral 0x8e35690 <col:39> 'int' 1))))
                (IntegerLiteral 0x8e356f8 <col:44> 'int' 0)))))))
    (CStyleCastExpr 0x8fe27d0 <line:47:62, col:67> 'int':'int' <NoOp>
      (IntegerLiteral 0x8e35788 <col:67> 'int' 0))))
;
        static const int __max = (ParenExpr 0x8fe2b18 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> 'int'
  (ConditionalOperator 0x8fe2af8 <line:42:31, line:51:71> 'int'
    (ParenExpr 0x8fe28b0 <line:42:31, col:45> '_Bool'
      (BinaryOperator 0x8fe2898 <col:32, col:44> '_Bool' '<'
        (CStyleCastExpr 0x8fe2880 <col:32, col:40> 'int':'int' <NoOp>
          (ParenExpr 0x8e37c28 <col:37, col:40> 'int'
            (UnaryOperator 0x8e37c10 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e37bf8 <col:39> 'int' 1))))
        (IntegerLiteral 0x8e37c60 <col:44> 'int' 0)))
    (ParenExpr 0x8fe2aa8 <line:51:4, col:61> 'int'
      (BinaryOperator 0x8fe2a90 <col:5, col:60> 'int' '+'
        (ParenExpr 0x8fe2a78 <col:5, col:56> 'int'
          (BinaryOperator 0x8fe2a60 <col:6, col:55> 'int' '<<'
            (ParenExpr 0x8fe2a48 <col:6, col:50> 'int'
              (BinaryOperator 0x8fe2a30 <col:7, col:49> 'int' '-'
                (ParenExpr 0x8fe2a18 <col:7, col:45> 'int':'int'
                  (BinaryOperator 0x8fe2a00 <col:8, col:44> 'int':'int' '<<'
                    (CStyleCastExpr 0x8fe28d0 <col:8, col:13> 'int':'int' <NoOp>
                      (IntegerLiteral 0x8e37ca8 <col:13> 'int' 1))
                    (ParenExpr 0x8fe29e8 <col:18, col:44> 'unsigned int'
                      (BinaryOperator 0x8fe29d0 <line:44:3, line:51:43> 'unsigned int' '-'
                        (ParenExpr 0x8fe29a8 <line:44:3, col:54> 'unsigned int'
                          (BinaryOperator 0x8fe2990 <col:4, line:42:45> 'unsigned int' '-'
                            (BinaryOperator 0x8fe2918 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x8fe28f0 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
                              (ImplicitCastExpr 0x8fe2908 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x8e37d00 <col:22> 'int' 8)))
                            (ImplicitCastExpr 0x8fe2980 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
                              (ParenExpr 0x8fe2968 <col:31, col:45> '_Bool'
                                (BinaryOperator 0x8fe2950 <col:32, col:44> '_Bool' '<'
                                  (CStyleCastExpr 0x8fe2938 <col:32, col:40> 'int':'int' <NoOp>
                                    (ParenExpr 0x8e37d70 <col:37, col:40> 'int'
                                      (UnaryOperator 0x8e37d58 <col:38, col:39> 'int' prefix '-'
                                        (IntegerLiteral 0x8e37d40 <col:39> 'int' 1))))
                                  (IntegerLiteral 0x8e37da8 <col:44> 'int' 0))))))
                        (ImplicitCastExpr 0x8fe29c0 <line:51:43> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x8e37e20 <col:43> 'int' 1))))))
                (IntegerLiteral 0x8e37e98 <col:49> 'int' 1)))
            (IntegerLiteral 0x8e37ee0 <col:55> 'int' 1)))
        (IntegerLiteral 0x8e37f28 <col:60> 'int' 1)))
    (UnaryOperator 0x8fe2ae0 <col:65, col:71> 'int':'int' prefix '~'
      (CStyleCastExpr 0x8fe2ac8 <col:66, col:71> 'int':'int' <NoOp>
        (IntegerLiteral 0x8e37f70 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x8fe2bb0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '_Bool'
  (BinaryOperator 0x8fe2b98 <col:32, col:44> '_Bool' '<'
    (CStyleCastExpr 0x8fe2b80 <col:32, col:40> 'int':'int' <NoOp>
      (ParenExpr 0x8e38068 <col:37, col:40> 'int'
        (UnaryOperator 0x8e38050 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x8e38038 <col:39> 'int' 1))))
    (IntegerLiteral 0x8e380a0 <col:44> 'int' 0)))
;
        static const int __digits = (ImplicitCastExpr 0x8fe2cf0 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> 'const int' <IntegralCast>
  (ParenExpr 0x8fe2cd8 <col:3, col:54> 'unsigned int'
    (BinaryOperator 0x8fe2cc0 <col:4, line:42:45> 'unsigned int' '-'
      (BinaryOperator 0x8fe2c48 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x8fe2c20 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof 'int':'int')
        (ImplicitCastExpr 0x8fe2c38 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8e38158 <col:22> 'int' 8)))
      (ImplicitCastExpr 0x8fe2cb0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> 'unsigned int' <IntegralCast>
        (ParenExpr 0x8fe2c98 <col:31, col:45> '_Bool'
          (BinaryOperator 0x8fe2c80 <col:32, col:44> '_Bool' '<'
            (CStyleCastExpr 0x8fe2c68 <col:32, col:40> 'int':'int' <NoOp>
              (ParenExpr 0x8e381c8 <col:37, col:40> 'int'
                (UnaryOperator 0x8e381b0 <col:38, col:39> 'int' prefix '-'
                  (IntegerLiteral 0x8e38198 <col:39> 'int' 1))))
            (IntegerLiteral 0x8e38200 <col:44> 'int' 0)))))))
;
    }
template <typename _Value> struct __numeric_traits_integer {
        struct __numeric_traits_integer;
        static const _Value __min = (ParenExpr 0x8e357e0 </usr/include/c++/4.6/ext/numeric_traits.h:47:3, col:68> '<dependent type>'
  (ConditionalOperator 0x8e357c0 <line:42:31, line:47:67> '<dependent type>'
    (ParenExpr 0x8e355e0 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x8e355c8 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x8e35598 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x8e35578 <col:37, col:40> 'int'
            (UnaryOperator 0x8e35560 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e35548 <col:39> 'int' 1))))
        (IntegerLiteral 0x8e355b0 <col:44> 'int' 0)))
    (BinaryOperator 0x8e35770 <line:47:28, line:44:54> '<dependent type>' '<<'
      (CStyleCastExpr 0x8e35618 <line:47:28, col:33> '_Value' <Dependent>
        (IntegerLiteral 0x8e355f8 <col:33> 'int' 1))
      (ParenExpr 0x8e35758 <line:44:3, col:54> '<dependent type>'
        (BinaryOperator 0x8e35740 <col:4, line:42:45> '<dependent type>' '-'
          (BinaryOperator 0x8e35678 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x8e35638 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
            (ImplicitCastExpr 0x8e35668 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e35650 <col:22> 'int' 8)))
          (ParenExpr 0x8e35728 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
            (BinaryOperator 0x8e35710 <col:32, col:44> '<dependent type>' '<'
              (CStyleCastExpr 0x8e356e0 <col:32, col:40> '_Value' <Dependent>
                (ParenExpr 0x8e356c0 <col:37, col:40> 'int'
                  (UnaryOperator 0x8e356a8 <col:38, col:39> 'int' prefix '-'
                    (IntegerLiteral 0x8e35690 <col:39> 'int' 1))))
              (IntegerLiteral 0x8e356f8 <col:44> 'int' 0))))))
    (CStyleCastExpr 0x8e357a8 <line:47:62, col:67> '_Value' <Dependent>
      (IntegerLiteral 0x8e35788 <col:67> 'int' 0))))
;
        static const _Value __max = (ParenExpr 0x8e37fe0 </usr/include/c++/4.6/ext/numeric_traits.h:50:3, line:51:72> '<dependent type>'
  (ConditionalOperator 0x8e37fc0 <line:42:31, line:51:71> '<dependent type>'
    (ParenExpr 0x8e37c90 <line:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x8e37c78 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x8e37c48 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x8e37c28 <col:37, col:40> 'int'
            (UnaryOperator 0x8e37c10 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e37bf8 <col:39> 'int' 1))))
        (IntegerLiteral 0x8e37c60 <col:44> 'int' 0)))
    (ParenExpr 0x8e37f58 <line:51:4, col:61> '<dependent type>'
      (BinaryOperator 0x8e37f40 <col:5, col:60> '<dependent type>' '+'
        (ParenExpr 0x8e37f10 <col:5, col:56> '<dependent type>'
          (BinaryOperator 0x8e37ef8 <col:6, col:55> '<dependent type>' '<<'
            (ParenExpr 0x8e37ec8 <col:6, col:50> '<dependent type>'
              (BinaryOperator 0x8e37eb0 <col:7, col:49> '<dependent type>' '-'
                (ParenExpr 0x8e37e80 <col:7, col:45> '<dependent type>'
                  (BinaryOperator 0x8e37e68 <col:8, col:44> '<dependent type>' '<<'
                    (CStyleCastExpr 0x8e37cc8 <col:8, col:13> '_Value' <Dependent>
                      (IntegerLiteral 0x8e37ca8 <col:13> 'int' 1))
                    (ParenExpr 0x8e37e50 <col:18, col:44> '<dependent type>'
                      (BinaryOperator 0x8e37e38 <line:44:3, line:51:43> '<dependent type>' '-'
                        (ParenExpr 0x8e37e08 <line:44:3, col:54> '<dependent type>'
                          (BinaryOperator 0x8e37df0 <col:4, line:42:45> '<dependent type>' '-'
                            (BinaryOperator 0x8e37d28 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
                              (UnaryExprOrTypeTraitExpr 0x8e37ce8 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
                              (ImplicitCastExpr 0x8e37d18 <<built-in>:17:22> 'unsigned int' <IntegralCast>
                                (IntegerLiteral 0x8e37d00 <col:22> 'int' 8)))
                            (ParenExpr 0x8e37dd8 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
                              (BinaryOperator 0x8e37dc0 <col:32, col:44> '<dependent type>' '<'
                                (CStyleCastExpr 0x8e37d90 <col:32, col:40> '_Value' <Dependent>
                                  (ParenExpr 0x8e37d70 <col:37, col:40> 'int'
                                    (UnaryOperator 0x8e37d58 <col:38, col:39> 'int' prefix '-'
                                      (IntegerLiteral 0x8e37d40 <col:39> 'int' 1))))
                                (IntegerLiteral 0x8e37da8 <col:44> 'int' 0)))))
                        (IntegerLiteral 0x8e37e20 <line:51:43> 'int' 1)))))
                (IntegerLiteral 0x8e37e98 <col:49> 'int' 1)))
            (IntegerLiteral 0x8e37ee0 <col:55> 'int' 1)))
        (IntegerLiteral 0x8e37f28 <col:60> 'int' 1)))
    (UnaryOperator 0x8e37fa8 <col:65, col:71> '<dependent type>' prefix '~'
      (CStyleCastExpr 0x8e37f90 <col:66, col:71> '_Value' <Dependent>
        (IntegerLiteral 0x8e37f70 <col:71> 'int' 0)))))
;
        static const bool __is_signed = (ParenExpr 0x8e380d0 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
  (BinaryOperator 0x8e380b8 <col:32, col:44> '<dependent type>' '<'
    (CStyleCastExpr 0x8e38088 <col:32, col:40> '_Value' <Dependent>
      (ParenExpr 0x8e38068 <col:37, col:40> 'int'
        (UnaryOperator 0x8e38050 <col:38, col:39> 'int' prefix '-'
          (IntegerLiteral 0x8e38038 <col:39> 'int' 1))))
    (IntegerLiteral 0x8e380a0 <col:44> 'int' 0)))
;
        static const int __digits = (ParenExpr 0x8e38260 </usr/include/c++/4.6/ext/numeric_traits.h:44:3, col:54> '<dependent type>'
  (BinaryOperator 0x8e38248 <col:4, line:42:45> '<dependent type>' '-'
    (BinaryOperator 0x8e38180 <line:44:4, <built-in>:17:22> 'unsigned int' '*'
      (UnaryExprOrTypeTraitExpr 0x8e38140 </usr/include/c++/4.6/ext/numeric_traits.h:44:4, col:14> 'unsigned int' sizeof '_Value')
      (ImplicitCastExpr 0x8e38170 <<built-in>:17:22> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8e38158 <col:22> 'int' 8)))
    (ParenExpr 0x8e38230 </usr/include/c++/4.6/ext/numeric_traits.h:42:31, col:45> '<dependent type>'
      (BinaryOperator 0x8e38218 <col:32, col:44> '<dependent type>' '<'
        (CStyleCastExpr 0x8e381e8 <col:32, col:40> '_Value' <Dependent>
          (ParenExpr 0x8e381c8 <col:37, col:40> 'int'
            (UnaryOperator 0x8e381b0 <col:38, col:39> 'int' prefix '-'
              (IntegerLiteral 0x8e38198 <col:39> 'int' 1))))
        (IntegerLiteral 0x8e38200 <col:44> 'int' 0)))))
;
    };
    static const _Value __min;
    static const _Value __max;
    static const bool __is_signed;
    static const int __digits;
    template <typename _Value = short> struct __numeric_traits_floating
template <typename _Value = unsigned long> struct __numeric_traits_floating
template <typename _Value = char> struct __numeric_traits_floating
template <typename _Value = int> struct __numeric_traits_floating
template <typename _Value> struct __numeric_traits_floating {
        struct __numeric_traits_floating;
        static const int __max_digits10 = (ImplicitCastExpr 0x8e392b8 </usr/include/c++/4.6/ext/numeric_traits.h:88:3, line:89:38> 'const int' <IntegralCast>
  (ParenExpr 0x8e392a0 <line:88:3, line:89:38> 'long'
    (BinaryOperator 0x8e39288 <line:88:4, line:89:34> 'long' '+'
      (ImplicitCastExpr 0x8e39278 <line:88:4> 'long' <IntegralCast>
        (IntegerLiteral 0x8e38df8 <col:4> 'int' 2))
      (BinaryOperator 0x8e39260 <line:84:3, line:89:34> 'long' '/'
        (BinaryOperator 0x8e39220 <line:84:3, line:89:27> 'long' '*'
          (ImplicitCastExpr 0x8e39210 <line:84:3, line:85:60> 'long' <IntegralCast>
            (ParenExpr 0x8e391e0 <line:84:3, line:85:60> 'int'
              (ConditionalOperator 0x8e391c0 <line:84:4, <built-in>:85:27> 'int'
                (DependentScopeDeclRefExpr 0x8e38fa0 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
                (IntegerLiteral 0x8e38fc8 <<built-in>:59:26> 'int' 24)
                (ConditionalOperator 0x8e391a0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:85:27> 'int'
                  (DependentScopeDeclRefExpr 0x8e39148 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
                  (IntegerLiteral 0x8e39170 <<built-in>:72:26> 'int' 53)
                  (IntegerLiteral 0x8e39188 <line:85:27> 'int' 64)))))
          (IntegerLiteral 0x8e391f8 </usr/include/c++/4.6/ext/numeric_traits.h:89:27> 'long' 643))
        (ImplicitCastExpr 0x8e39250 <col:34> 'long' <IntegralCast>
          (IntegerLiteral 0x8e39238 <col:34> 'int' 2136))))))
;
        static const bool __is_signed = (CXXBoolLiteralExpr 0x8e39308 </usr/include/c++/4.6/ext/numeric_traits.h:105:39> '_Bool' true)
;
        static const int __digits10 = (ParenExpr 0x8e39680 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x8e39660 <line:84:4, <built-in>:81:22> 'int'
    (DependentScopeDeclRefExpr 0x8e39490 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x8e394b8 <<built-in>:55:21> 'int' 6)
    (ConditionalOperator 0x8e39640 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:81:22> 'int'
      (DependentScopeDeclRefExpr 0x8e395e8 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x8e39610 <<built-in>:68:21> 'int' 15)
      (IntegerLiteral 0x8e39628 <line:81:22> 'int' 18))))
;
        static const int __max_exponent10 = (ParenExpr 0x8e39a00 </usr/include/c++/4.6/ext/numeric_traits.h:84:3, line:85:60> 'int'
  (ConditionalOperator 0x8e399e0 <line:84:4, <built-in>:86:29> 'int'
    (DependentScopeDeclRefExpr 0x8e39810 </usr/include/c++/4.6/ext/numeric_traits.h:84:4, col:33> '<dependent type>' lvalue)
    (IntegerLiteral 0x8e39838 <<built-in>:60:28> 'int' 38)
    (ConditionalOperator 0x8e399c0 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, <built-in>:86:29> 'int'
      (DependentScopeDeclRefExpr 0x8e39968 </usr/include/c++/4.6/ext/numeric_traits.h:85:6, col:36> '<dependent type>' lvalue)
      (IntegerLiteral 0x8e39990 <<built-in>:73:28> 'int' 308)
      (IntegerLiteral 0x8e399a8 <line:86:29> 'int' 4932))))
;
    };
    static const int __max_digits10;
    static const bool __is_signed;
    static const int __digits10;
    static const int __max_exponent10;
    template <typename _Value = short> struct __numeric_traits : public typename __conditional_type<std::__is_integer<short>::__value, __numeric_traits_integer<short>, __numeric_traits_floating<short> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = unsigned long> struct __numeric_traits : public typename __conditional_type<std::__is_integer<unsigned long>::__value, __numeric_traits_integer<unsigned long>, __numeric_traits_floating<unsigned long> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = char> struct __numeric_traits : public typename __conditional_type<std::__is_integer<char>::__value, __numeric_traits_integer<char>, __numeric_traits_floating<char> >::__type {
        struct __numeric_traits;
    }
template <typename _Value = int> struct __numeric_traits : public typename __conditional_type<std::__is_integer<int>::__value, __numeric_traits_integer<int>, __numeric_traits_floating<int> >::__type {
        struct __numeric_traits;
    }
template <typename _Value> struct __numeric_traits : public __conditional_type<std::__is_integer<_Value>::__value, __numeric_traits_integer<_Value>, __numeric_traits_floating<_Value> >::__type {
        struct __numeric_traits;
    };
}
namespace std {
    template <typename _Tp> inline _Tp *__addressof(_Tp &__r) (CompoundStmt 0x8e3f940 </usr/include/c++/4.6/bits/move.h:44:5, line:47:5>
  (ReturnStmt 0x8e3f930 <line:45:7, line:46:66>
    (CXXReinterpretCastExpr 0x8e3f918 <line:45:14, line:46:66> '_Tp *' reinterpret_cast<_Tp *> <Dependent>
      (UnaryOperator 0x8e3f8f0 <col:3, col:65> 'char *' prefix '&'
        (CXXConstCastExpr 0x8e3f8d8 <col:4, col:65> 'char' lvalue const_cast<char &> <NoOp>
          (CXXReinterpretCastExpr 0x8e3f878 <col:22, col:64> 'const volatile char' lvalue reinterpret_cast<const volatile char &> <Dependent>
            (DeclRefExpr 0x8e3f82c <col:61> '_Tp' lvalue ParmVar 0x8e3af50 '__r' '_Tp &')))))))

;
}
namespace std {
    template <typename _Tp> inline void swap(_Tp &__a, _Tp &__b) (CompoundStmt 0x8e3fd68 </usr/include/c++/4.6/bits/move.h:123:5, line:130:5>
  (DeclStmt 0x8e3fc98 <line:127:7, col:37>
    0x8e3fc30 "_Tp __tmp =
      (ParenExpr 0x8e3fc80 <line:105:30, col:36> '_Tp' lvalue
        (DeclRefExpr 0x8e3fc64 <line:127:33> '_Tp' lvalue ParmVar 0x8e3faa0 '__a' '_Tp &'))")
  (BinaryOperator 0x8e3fcf0 <line:128:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x8e3fca8 <line:128:7> '_Tp' lvalue ParmVar 0x8e3faa0 '__a' '_Tp &')
    (ParenExpr 0x8e3fcd8 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x8e3fcc0 <line:128:27> '_Tp' lvalue ParmVar 0x8e3faf0 '__b' '_Tp &')))
  (BinaryOperator 0x8e3fd50 <line:129:7, line:105:36> '<dependent type>' '='
    (DeclRefExpr 0x8e3fd08 <line:129:7> '_Tp' lvalue ParmVar 0x8e3faf0 '__b' '_Tp &')
    (ParenExpr 0x8e3fd38 <line:105:30, col:36> '_Tp' lvalue
      (DeclRefExpr 0x8e3fd20 <line:129:27> '_Tp' lvalue Var 0x8e3fc30 '__tmp' '_Tp'))))

;
    template <typename _Tp, size_t _Nm> inline void swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) (CompoundStmt 0x8e40380 </usr/include/c++/4.6/bits/move.h:137:5, line:140:5>
  (ForStmt 0x8e40358 <line:138:7, line:139:25>
    (DeclStmt 0x8e401d0 <line:138:12, col:26>
      0x8e40170 "size_t __n =
        (ImplicitCastExpr 0x8e401c0 <col:25> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8e401a8 <col:25> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x8e40220 <col:28, col:34> '_Bool' '<'
      (ImplicitCastExpr 0x8e40210 <col:28> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8e401e0 <col:28> 'size_t':'unsigned int' lvalue Var 0x8e40170 '__n' 'size_t':'unsigned int'))
      (DeclRefExpr 0x8e401f8 <col:34> 'size_t':'unsigned int' NonTypeTemplateParm 0x8e3fe00 '_Nm' 'size_t':'unsigned int'))
    (UnaryOperator 0x8e40250 <col:39, col:41> 'size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x8e40238 <col:41> 'size_t':'unsigned int' lvalue Var 0x8e40170 '__n' 'size_t':'unsigned int'))
    (CallExpr 0x8e40330 <line:139:2, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8e40268 <col:2> '<overloaded function type>' lvalue (ADL) = '1' 0x8e40130 0x8e3fbf0)
      (ArraySubscriptExpr 0x8e402d0 <col:7, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x8e402a0 <col:7> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x8e3ff50 '__a' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x8e402b8 <col:11> 'size_t':'unsigned int' lvalue Var 0x8e40170 '__n' 'size_t':'unsigned int'))
      (ArraySubscriptExpr 0x8e40318 <col:17, col:24> '<dependent type>' lvalue
        (DeclRefExpr 0x8e402e4 <col:17> '_Tp [_Nm]':'_Tp [_Nm]' lvalue ParmVar 0x8e40030 '__b' '_Tp (&)[_Nm]')
        (DeclRefExpr 0x8e402fc <col:21> 'size_t':'unsigned int' lvalue Var 0x8e40170 '__n' 'size_t':'unsigned int')))))

;
}
namespace std {
    template <class _T1, class _T2> struct pair {
        struct pair;
        typedef _T1 first_type;
        typedef _T2 second_type;
        _T1 first;
        _T2 second;
        pair<_T1, _T2>() : first(), second() (CompoundStmt 0x8e42240 </usr/include/c++/4.6/bits/stl_pair.h:100:27, col:29>)


        pair<_T1, _T2>(const _T1 &__a, const _T2 &__b) : first((DeclRefExpr 0x8e42250 </usr/include/c++/4.6/bits/stl_pair.h:104:15> 'const _T1' lvalue ParmVar 0x8e41c60 '__a' 'const _T1 &')
), second((DeclRefExpr 0x8e422a8 </usr/include/c++/4.6/bits/stl_pair.h:104:28> 'const _T2' lvalue ParmVar 0x8e41cf0 '__b' 'const _T2 &')
) (CompoundStmt 0x8e42300 </usr/include/c++/4.6/bits/stl_pair.h:104:33, col:35>)


        template <class _U1, class _U2> pair<_T1, _T2>(const pair<_U1, _U2> &__p) : first((CXXDependentScopeMemberExpr 0x8e42328 </usr/include/c++/4.6/bits/stl_pair.h:109:10, col:14> '<dependent type>' lvalue
  (DeclRefExpr 0x8e42310 <col:10> 'const pair<_U1, _U2>' lvalue ParmVar 0x8e42090 '__p' 'const pair<_U1, _U2> &'))
), second((CXXDependentScopeMemberExpr 0x8e423b0 </usr/include/c++/4.6/bits/stl_pair.h:109:29, col:33> '<dependent type>' lvalue
  (DeclRefExpr 0x8e42398 <col:29> 'const pair<_U1, _U2>' lvalue ParmVar 0x8e42090 '__p' 'const pair<_U1, _U2> &'))
) (CompoundStmt 0x8e42430 </usr/include/c++/4.6/bits/stl_pair.h:109:41, col:43>)

;
    };
    template <class _T1, class _T2> inline bool operator==(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e42db0 </usr/include/c++/4.6/bits/stl_pair.h:202:5, col:66>
  (ReturnStmt 0x8e42da0 <col:7, col:58>
    (BinaryOperator 0x8e42d88 <col:14, col:58> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e429b8 <col:14, col:31> '<dependent type>'
        (UnresolvedLookupExpr 0x8e42980 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0)
        (CXXDependentScopeMemberExpr 0x8e428f8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e428e0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e42640 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x8e42948 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x8e4292c <col:27> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e427b0 '__y' 'const pair<_T1, _T2> &')))
      (CXXOperatorCallExpr 0x8e42d60 <col:40, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x8e42a80 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0)
        (CXXDependentScopeMemberExpr 0x8e429f8 <col:40, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x8e429dc <col:40> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e42640 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x8e42a48 <col:54, col:58> '<dependent type>' lvalue
          (DeclRefExpr 0x8e42a2c <col:54> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e427b0 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator<(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e435b8 </usr/include/c++/4.6/bits/stl_pair.h:208:5, line:209:65>
  (ReturnStmt 0x8e435a8 <line:208:7, line:209:62>
    (BinaryOperator 0x8e43590 <line:208:14, line:209:62> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x8e43308 <line:208:14, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x8e432d0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
        (CXXDependentScopeMemberExpr 0x8e43248 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e43230 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e42fb0 '__x' 'const pair<_T1, _T2> &'))
        (CXXDependentScopeMemberExpr 0x8e43298 <col:26, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x8e4327c <col:26> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e43120 '__y' 'const pair<_T1, _T2> &')))
      (ParenExpr 0x8e43578 <line:209:10, col:62> '<dependent type>'
        (BinaryOperator 0x8e43560 <col:11, col:56> '<dependent type>' '&&'
          (UnaryOperator 0x8e43448 <col:11, col:34> '<dependent type>' prefix '!'
            (ParenExpr 0x8e43430 <col:12, col:34> '<dependent type>'
              (CXXOperatorCallExpr 0x8e43408 <col:13, col:29> '<dependent type>'
                (UnresolvedLookupExpr 0x8e433d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
                (CXXDependentScopeMemberExpr 0x8e43348 <col:13, col:17> '<dependent type>' lvalue
                  (DeclRefExpr 0x8e4332c <col:13> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e43120 '__y' 'const pair<_T1, _T2> &'))
                (CXXDependentScopeMemberExpr 0x8e43398 <col:25, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x8e4337c <col:25> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e42fb0 '__x' 'const pair<_T1, _T2> &')))))
          (CXXOperatorCallExpr 0x8e43538 <col:39, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x8e43500 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
            (CXXDependentScopeMemberExpr 0x8e43478 <col:39, col:43> '<dependent type>' lvalue
              (DeclRefExpr 0x8e4345c <col:39> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e42fb0 '__x' 'const pair<_T1, _T2> &'))
            (CXXDependentScopeMemberExpr 0x8e434c8 <col:52, col:56> '<dependent type>' lvalue
              (DeclRefExpr 0x8e434ac <col:52> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e43120 '__y' 'const pair<_T1, _T2> &'))))))))

;
    template <class _T1, class _T2> inline bool operator!=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e43b00 </usr/include/c++/4.6/bits/stl_pair.h:215:5, col:29>
  (ReturnStmt 0x8e43af0 <col:7, col:26>
    (UnaryOperator 0x8e43ad8 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x8e43ac0 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x8e43a98 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x8e43a60 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0)
          (DeclRefExpr 0x8e43a30 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e437b0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x8e43a48 <col:23> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e43920 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e45450 </usr/include/c++/4.6/bits/stl_pair.h:221:5, col:25>
  (ReturnStmt 0x8e45440 <col:7, col:20>
    (CXXOperatorCallExpr 0x8e45418 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x8e453e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
      (DeclRefExpr 0x8e453b0 <col:14> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e452a0 '__y' 'const pair<_T1, _T2> &')
      (DeclRefExpr 0x8e453c8 <col:20> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e43d00 '__x' 'const pair<_T1, _T2> &'))))

;
    template <class _T1, class _T2> inline bool operator<=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e459a0 </usr/include/c++/4.6/bits/stl_pair.h:227:5, col:28>
  (ReturnStmt 0x8e45990 <col:7, col:25>
    (UnaryOperator 0x8e45978 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e45960 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e45938 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e45900 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
          (DeclRefExpr 0x8e458d0 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e457c0 '__y' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x8e458e8 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e45650 '__x' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline bool operator>=(const pair<_T1, _T2> &__x, const pair<_T1, _T2> &__y) (CompoundStmt 0x8e45ef0 </usr/include/c++/4.6/bits/stl_pair.h:233:5, col:28>
  (ReturnStmt 0x8e45ee0 <col:7, col:25>
    (UnaryOperator 0x8e45ec8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e45eb0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e45e88 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e45e50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200)
          (DeclRefExpr 0x8e45e20 <col:16> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e45ba0 '__x' 'const pair<_T1, _T2> &')
          (DeclRefExpr 0x8e45e38 <col:22> 'const pair<_T1, _T2>' lvalue ParmVar 0x8e45d10 '__y' 'const pair<_T1, _T2> &'))))))

;
    template <class _T1, class _T2> inline pair<_T1, _T2> make_pair(_T1 __x, _T2 __y) (CompoundStmt 0x8e46be8 </usr/include/c++/4.6/bits/stl_pair.h:273:5, col:40>
  (ReturnStmt 0x8e46bd8 <col:7, col:37>
    (CXXUnresolvedConstructExpr 0x8e46bb8 <col:14, col:37> 'pair<_T1, _T2>'
      (DeclRefExpr 0x8e46b88 <col:29> '_T1' lvalue ParmVar 0x8e460a0 '__x' '_T1')
      (DeclRefExpr 0x8e46ba0 <col:34> '_T2' lvalue ParmVar 0x8e460e0 '__y' '_T2'))))

;
}
namespace std {
    struct input_iterator_tag {
        struct input_iterator_tag;
    };
    struct output_iterator_tag {
        struct output_iterator_tag;
    };
    struct forward_iterator_tag : public std::input_iterator_tag {
        struct forward_iterator_tag;
    };
    struct bidirectional_iterator_tag : public std::forward_iterator_tag {
        struct bidirectional_iterator_tag;
    };
    struct random_access_iterator_tag : public std::bidirectional_iterator_tag {
        struct random_access_iterator_tag;
    };
    template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = bool *, typename _Reference = bool &> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef bool *pointer;
        typedef bool &reference;
        inline iterator() throw() (CompoundStmt 0x92865c0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


        inline iterator(const std::iterator<std::random_access_iterator_tag, bool, int, bool *, bool &> &) throw() (CompoundStmt 0x928a9d0 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:118:12>)


    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = std::_Bit_reference *, typename _Reference = std::_Bit_reference> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_reference reference;
    }
template <typename _Category = std::random_access_iterator_tag, typename _Tp = bool, typename _Distance = int, typename _Pointer = const bool *, typename _Reference = bool> struct iterator {
        struct iterator;
        typedef std::random_access_iterator_tag iterator_category;
        typedef bool value_type;
        typedef int difference_type;
        typedef const bool *pointer;
        typedef bool reference;
    }
template <typename _Category = std::output_iterator_tag, typename _Tp = void, typename _Distance = void, typename _Pointer = void, typename _Reference = void> struct iterator {
        struct iterator;
        typedef std::output_iterator_tag iterator_category;
        typedef void value_type;
        typedef void difference_type;
        typedef void pointer;
        typedef void reference;
    }
template <typename _Category, typename _Tp, typename _Distance = ptrdiff_t, typename _Pointer = _Tp *, typename _Reference = _Tp &> struct iterator {
        struct iterator;
        typedef _Category iterator_category;
        typedef _Tp value_type;
        typedef _Distance difference_type;
        typedef _Pointer pointer;
        typedef _Reference reference;
    };
    template <typename _Iterator = std::_Bit_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_iterator::iterator_category iterator_category;
        typedef typename _Bit_iterator::value_type value_type;
        typedef typename _Bit_iterator::difference_type difference_type;
        typedef typename _Bit_iterator::pointer pointer;
        typedef typename _Bit_iterator::reference reference;
    }
template <typename _Iterator = std::_Bit_const_iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Bit_const_iterator::iterator_category iterator_category;
        typedef typename _Bit_const_iterator::value_type value_type;
        typedef typename _Bit_const_iterator::difference_type difference_type;
        typedef typename _Bit_const_iterator::pointer pointer;
        typedef typename _Bit_const_iterator::reference reference;
    }
template <typename _Iterator> struct iterator_traits {
        struct iterator_traits;
        typedef typename _Iterator::iterator_category iterator_category;
        typedef typename _Iterator::value_type value_type;
        typedef typename _Iterator::difference_type difference_type;
        typedef typename _Iterator::pointer pointer;
        typedef typename _Iterator::reference reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef _Tp &reference;
    };
    struct iterator_traits {
        struct iterator_traits;
        typedef std::random_access_iterator_tag iterator_category;
        typedef _Tp value_type;
        typedef ptrdiff_t difference_type;
        typedef const _Tp *pointer;
        typedef const _Tp &reference;
    };
    template <typename _Iter> inline typename iterator_traits<_Iter>::iterator_category __iterator_category(const _Iter &) (CompoundStmt 0x8e4e760 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:202:5, col:68>
  (ReturnStmt 0x8e4e750 <col:7, col:65>
    (CXXUnresolvedConstructExpr 0x8e4e738 <col:14, col:65> 'typename iterator_traits<_Iter>::iterator_category')))

;
    template <typename _Iterator = unsigned long *, bool _HasBase = false> struct _Iter_base {
        struct _Iter_base;
        typedef unsigned long *iterator_type;
        static iterator_type _S_base(unsigned long *__it) (CompoundStmt 0x92fa898 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x92fa888 <col:9, col:16>
    (ImplicitCastExpr 0x92fa878 <col:16> 'unsigned long *':'unsigned long *' <LValueToRValue>
      (DeclRefExpr 0x92fa85c <col:16> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92f8360 '__it' 'unsigned long *':'unsigned long *'))))


    }
template <typename _Iterator, bool _HasBase> struct _Iter_base {
        struct _Iter_base;
        typedef _Iterator iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x8e4ec28 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:213:7, col:22>
  (ReturnStmt 0x8e4ec18 <col:9, col:16>
    (DeclRefExpr 0x8e4ec00 <col:16> '_Iterator' lvalue ParmVar 0x8e4eae0 '__it' '_Iterator')))


    };
    struct _Iter_base {
        struct _Iter_base;
        typedef typename _Iterator::iterator_type iterator_type;
        static iterator_type _S_base(_Iterator __it) (CompoundStmt 0x8e4f250 </usr/include/c++/4.6/bits/stl_iterator_base_types.h:221:7, col:29>
  (ReturnStmt 0x8e4f240 <col:9, col:26>
    (CallExpr 0x8e4f220 <col:16, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8e4f1e8 <col:16, col:21> '<dependent type>' lvalue
        (DeclRefExpr 0x8e4f1d0 <col:16> '_Iterator' lvalue ParmVar 0x8e4f0b0 '__it' '_Iterator')))))


    };
}
namespace std {
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type __distance(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x8e51b98 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:74:5, line:85:5>
  (DeclStmt 0x8e51a40 <line:78:7, col:72>
    0x8e519f0 "typename iterator_traits<_InputIterator>::difference_type __n =
      (IntegerLiteral 0x8e51a28 <col:71> 'int' 0)")
  (WhileStmt 0x8e51b58 <line:79:7, line:83:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e51ab8 <line:79:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8e51a80 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00)
      (DeclRefExpr 0x8e51a50 <col:14> '_InputIterator' lvalue ParmVar 0x8e51720 '__first' '_InputIterator')
      (DeclRefExpr 0x8e51a68 <col:25> '_InputIterator' lvalue ParmVar 0x8e51760 '__last' '_InputIterator'))
    (CompoundStmt 0x8e51b40 <line:80:2, line:83:2>
      (UnaryOperator 0x8e51af8 <line:81:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e51adc <col:6> '_InputIterator' lvalue ParmVar 0x8e51720 '__first' '_InputIterator'))
      (UnaryOperator 0x8e51b28 <line:82:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e51b0c <col:6> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x8e519f0 '__n' 'typename iterator_traits<_InputIterator>::difference_type'))))
  (ReturnStmt 0x8e51b88 <line:84:7, col:14>
    (DeclRefExpr 0x8e51b6c <col:14> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x8e519f0 '__n' 'typename iterator_traits<_InputIterator>::difference_type')))

;
    template <typename _RandomAccessIterator> inline typename iterator_traits<_RandomAccessIterator>::difference_type __distance(_RandomAccessIterator __first, _RandomAccessIterator __last, std::random_access_iterator_tag) (CompoundStmt 0x8e51f30 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:91:5, line:96:5>
  (ReturnStmt 0x8e51f20 <line:95:7, col:23>
    (BinaryOperator 0x8e51f08 <col:14, col:23> '<dependent type>' '-'
      (DeclRefExpr 0x8e51ed4 <col:14> '_RandomAccessIterator' lvalue ParmVar 0x8e51d30 '__last' '_RandomAccessIterator')
      (DeclRefExpr 0x8e51eec <col:23> '_RandomAccessIterator' lvalue ParmVar 0x8e51cf0 '__first' '_RandomAccessIterator'))))

;
    template <typename _InputIterator> inline typename iterator_traits<_InputIterator>::difference_type distance(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x8e52350 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:113:5, line:117:5>
  (ReturnStmt 0x8e52340 <line:115:7, line:116:42>
    (CallExpr 0x8e52318 <line:115:14, line:116:42> '<dependent type>'
      (UnresolvedLookupExpr 0x8e52228 <line:115:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e518d0 0x8e51ea0)
      (DeclRefExpr 0x8e52260 <col:30> '_InputIterator' lvalue ParmVar 0x8e52080 '__first' '_InputIterator')
      (DeclRefExpr 0x8e52278 <col:39> '_InputIterator' lvalue ParmVar 0x8e520c0 '__last' '_InputIterator')
      (CallExpr 0x8e522f8 <line:116:9, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x8e522a8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e4e620)
        (DeclRefExpr 0x8e522dc <col:34> '_InputIterator' lvalue ParmVar 0x8e52080 '__first' '_InputIterator')))))

;
    template <typename _InputIterator, typename _Distance> inline void __advance(_InputIterator &__i, _Distance __n, std::input_iterator_tag) (CompoundStmt 0x8e526b8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:122:5, line:127:5>
  (WhileStmt 0x8e526a0 <line:125:7, line:126:4>
    <<<NULL>>>
    (UnaryOperator 0x8e52658 <line:125:14, col:17> '<dependent type>' postfix '--'
      (DeclRefExpr 0x8e52624 <col:14> '_Distance' lvalue ParmVar 0x8e52490 '__n' '_Distance'))
    (UnaryOperator 0x8e52688 <line:126:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x8e5266c <col:4> '_InputIterator' lvalue ParmVar 0x8e52450 '__i' '_InputIterator &'))))

;
    template <typename _BidirectionalIterator, typename _Distance> inline void __advance(_BidirectionalIterator &__i, _Distance __n, std::bidirectional_iterator_tag) (CompoundStmt 0x8e533c8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:133:5, line:143:5>
  (IfStmt 0x8e533a8 <line:137:7, line:142:6>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e53260 <line:137:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x8e53228 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380)
      (DeclRefExpr 0x8e531f4 <col:11> '_Distance' lvalue ParmVar 0x8e53060 '__n' '_Distance')
      (IntegerLiteral 0x8e53210 <col:17> 'int' 0))
    (WhileStmt 0x8e53300 <line:138:9, line:139:6>
      <<<NULL>>>
      (UnaryOperator 0x8e532b8 <line:138:16, col:19> '<dependent type>' postfix '--'
        (DeclRefExpr 0x8e53284 <col:16> '_Distance' lvalue ParmVar 0x8e53060 '__n' '_Distance'))
      (UnaryOperator 0x8e532e8 <line:139:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e532cc <col:6> '_BidirectionalIterator' lvalue ParmVar 0x8e53020 '__i' '_BidirectionalIterator &')))
    (WhileStmt 0x8e53390 <line:141:9, line:142:6>
      <<<NULL>>>
      (UnaryOperator 0x8e53348 <line:141:16, col:19> '<dependent type>' postfix '++'
        (DeclRefExpr 0x8e53314 <col:16> '_Distance' lvalue ParmVar 0x8e53060 '__n' '_Distance'))
      (UnaryOperator 0x8e53378 <line:142:4, col:6> '<dependent type>' prefix '--'
        (DeclRefExpr 0x8e5335c <col:6> '_BidirectionalIterator' lvalue ParmVar 0x8e53020 '__i' '_BidirectionalIterator &')))))

;
    template <typename _RandomAccessIterator, typename _Distance> inline void __advance(_RandomAccessIterator &__i, _Distance __n, std::random_access_iterator_tag) (CompoundStmt 0x8e536e8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:149:5, line:154:5>
  (CompoundAssignOperator 0x8e536c8 <line:153:7, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x8e53694 <col:7> '_RandomAccessIterator' lvalue ParmVar 0x8e534c0 '__i' '_RandomAccessIterator &')
    (DeclRefExpr 0x8e536ac <col:14> '_Distance' lvalue ParmVar 0x8e53500 '__n' '_Distance')))

;
    template <typename _InputIterator, typename _Distance> inline void advance(_InputIterator &__i, _Distance __n) (CompoundStmt 0x8e53be8 </usr/include/c++/4.6/bits/stl_iterator_base_funcs.h:171:5, line:175:5>
  (DeclStmt 0x8e53a90 <line:173:7, col:74>
    0x8e53a40 "typename iterator_traits<_InputIterator>::difference_type __d =
      (DeclRefExpr 0x8e53a74 <col:71> '_Distance' lvalue ParmVar 0x8e53820 '__n' '_Distance')")
  (CallExpr 0x8e53bc0 <line:174:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x8e53ac8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e525f0 0x8e531c0 0x8e53660)
    (DeclRefExpr 0x8e53b04 <col:22> '_InputIterator' lvalue ParmVar 0x8e537e0 '__i' '_InputIterator &')
    (DeclRefExpr 0x8e53b1c <col:27> 'typename iterator_traits<_InputIterator>::difference_type' lvalue Var 0x8e53a40 '__d' 'typename iterator_traits<_InputIterator>::difference_type')
    (CallExpr 0x8e53ba0 <col:32, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x8e53b50 <col:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e4e620)
      (DeclRefExpr 0x8e53b84 <col:57> '_InputIterator' lvalue ParmVar 0x8e537e0 '__i' '_InputIterator &'))))

;
}
namespace std {
    template <typename _Iterator = __gnu_cxx::__normal_iterator<const char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<char *, std::basic_string<char> >> class reverse_iterator
template <typename _Iterator = __gnu_cxx::__normal_iterator<wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator = std::_Bit_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_iterator>::iterator_category, typename iterator_traits<_Bit_iterator>::value_type, typename iterator_traits<_Bit_iterator>::difference_type, typename iterator_traits<_Bit_iterator>::pointer, typename iterator_traits<_Bit_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_iterator current;
        typedef iterator_traits<std::_Bit_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_iterator> &__x);
        template <typename _Iter = std::_Bit_iterator> reverse_iterator(const reverse_iterator<std::_Bit_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_iterator> &operator++();
        std::reverse_iterator<std::_Bit_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_iterator> &operator--();
        std::reverse_iterator<std::_Bit_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = std::_Bit_const_iterator> class reverse_iterator : public iterator<typename iterator_traits<_Bit_const_iterator>::iterator_category, typename iterator_traits<_Bit_const_iterator>::value_type, typename iterator_traits<_Bit_const_iterator>::difference_type, typename iterator_traits<_Bit_const_iterator>::pointer, typename iterator_traits<_Bit_const_iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        std::_Bit_const_iterator current;
        typedef iterator_traits<std::_Bit_const_iterator> __traits_type;
    public:
    public:
        typedef std::_Bit_const_iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator();
        reverse_iterator(iterator_type __x);
        reverse_iterator(const std::reverse_iterator<std::_Bit_const_iterator> &__x);
        template <typename _Iter = std::_Bit_const_iterator> reverse_iterator(const reverse_iterator<std::_Bit_const_iterator> &__x)template <typename _Iter> reverse_iterator(const reverse_iterator<_Iter> &__x);
        iterator_type base() const;
        reference operator*() const;
        pointer operator->() const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator++();
        std::reverse_iterator<std::_Bit_const_iterator> operator++(int);
        std::reverse_iterator<std::_Bit_const_iterator> &operator--();
        std::reverse_iterator<std::_Bit_const_iterator> operator--(int);
        std::reverse_iterator<std::_Bit_const_iterator> operator+(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator+=(difference_type __n);
        std::reverse_iterator<std::_Bit_const_iterator> operator-(difference_type __n) const;
        std::reverse_iterator<std::_Bit_const_iterator> &operator-=(difference_type __n);
        reference operator[](difference_type __n) const;
    }
template <typename _Iterator = __gnu_cxx::__normal_iterator<const wchar_t *, std::basic_string<wchar_t> >> class reverse_iterator
template <typename _Iterator> class reverse_iterator : public iterator<typename iterator_traits<_Iterator>::iterator_category, typename iterator_traits<_Iterator>::value_type, typename iterator_traits<_Iterator>::difference_type, typename iterator_traits<_Iterator>::pointer, typename iterator_traits<_Iterator>::reference> {
        class reverse_iterator;
    protected:
    protected:
        _Iterator current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::pointer pointer;
        typedef typename __traits_type::reference reference;
        reverse_iterator<_Iterator>() : current() (CompoundStmt 0x8e56f90 </usr/include/c++/4.6/bits/stl_iterator.h:121:38, col:40>)


        reverse_iterator<_Iterator>(iterator_type __x) : current((DeclRefExpr 0x8e56fa0 </usr/include/c++/4.6/bits/stl_iterator.h:127:53> 'iterator_type':'_Iterator' lvalue ParmVar 0x8e557c0 '__x' 'iterator_type':'_Iterator')
) (CompoundStmt 0x8e57000 </usr/include/c++/4.6/bits/stl_iterator.h:127:58, col:60>)


        reverse_iterator<_Iterator>(const reverse_iterator<_Iterator> &__x) : current((CXXDependentScopeMemberExpr 0x8e57028 </usr/include/c++/4.6/bits/stl_iterator.h:133:17, col:21> '<dependent type>' lvalue
  (DeclRefExpr 0x8e57010 <col:17> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e55900 '__x' 'const reverse_iterator<_Iterator> &'))
) (CompoundStmt 0x8e570a0 </usr/include/c++/4.6/bits/stl_iterator.h:133:30, col:32>)


        template <typename _Iter> reverse_iterator<_Iterator>(const reverse_iterator<_Iter> &__x) : current((CallExpr 0x8e57100 </usr/include/c++/4.6/bits/stl_iterator.h:141:12, col:21> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x8e570c8 <col:12, col:16> '<dependent type>' lvalue
    (DeclRefExpr 0x8e570b0 <col:12> 'const reverse_iterator<_Iter>' lvalue ParmVar 0x8e55b60 '__x' 'const reverse_iterator<_Iter> &')))
) (CompoundStmt 0x8e57160 </usr/include/c++/4.6/bits/stl_iterator.h:141:24, col:26>)

;
        iterator_type base() const (CompoundStmt 0x8e571e8 </usr/include/c++/4.6/bits/stl_iterator.h:148:7, col:25>
  (ReturnStmt 0x8e571d8 <col:9, col:16>
    (MemberExpr 0x8e571b4 <col:16> 'const _Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e57188 <col:16> 'const reverse_iterator<_Iterator> *' this))))


        reference operator*() const (CompoundStmt 0x8e572e0 </usr/include/c++/4.6/bits/stl_iterator.h:157:7, line:160:7>
  (DeclStmt 0x8e57278 <line:158:2, col:27>
    0x8e57210 "_Iterator __tmp =
      (MemberExpr 0x8e57258 <col:20> 'const _Iterator' lvalue ->current 0x8e553a0
        (CXXThisExpr 0x8e57248 <col:20> 'const reverse_iterator<_Iterator> *' this))")
  (ReturnStmt 0x8e572d0 <line:159:2, col:12>
    (UnaryOperator 0x8e572b8 <col:9, col:12> '<dependent type>' prefix '*'
      (UnaryOperator 0x8e572a0 <col:10, col:12> '<dependent type>' prefix '--'
        (DeclRefExpr 0x8e57288 <col:12> '_Iterator' lvalue Var 0x8e57210 '__tmp' '_Iterator')))))


        pointer operator->() const (CompoundStmt 0x8e57388 </usr/include/c++/4.6/bits/stl_iterator.h:169:7, col:32>
  (ReturnStmt 0x8e57378 <col:9, col:29>
    (UnaryOperator 0x8e57360 <col:16, col:29> '<dependent type>' prefix '&'
      (ParenExpr 0x8e57348 <col:17, col:29> '<dependent type>'
        (CallExpr 0x8e57328 <col:18, col:28> '<dependent type>'
          (MemberExpr 0x8e57308 <col:18, col:26> '<bound member function type>' ->operator* 0x8e56670
            (CXXThisExpr 0x8e572f8 <col:18> 'const reverse_iterator<_Iterator> *' this)))))))


        reverse_iterator<_Iterator> &operator++() (CompoundStmt 0x8e57420 </usr/include/c++/4.6/bits/stl_iterator.h:178:7, line:181:7>
  (UnaryOperator 0x8e573d0 <line:179:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x8e573b0 <col:4> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e573a0 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x8e57410 <line:180:2, col:10>
    (UnaryOperator 0x8e573f8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e573e8 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator++(int) (CompoundStmt 0x8e59028 </usr/include/c++/4.6/bits/stl_iterator.h:190:7, line:194:7>
  (DeclStmt 0x8e574a0 <line:191:2, col:32>
    0x8e57440 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x8e57488 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x8e57478 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x8e58fe8 <line:192:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x8e58fc8 <col:4> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e58fb8 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x8e59018 <line:193:2, col:9>
    (DeclRefExpr 0x8e58ffc <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x8e57440 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> &operator--() (CompoundStmt 0x8e590c8 </usr/include/c++/4.6/bits/stl_iterator.h:203:7, line:206:7>
  (UnaryOperator 0x8e59078 <line:204:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x8e59058 <col:4> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e59048 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x8e590b8 <line:205:2, col:10>
    (UnaryOperator 0x8e590a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e59090 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator--(int) (CompoundStmt 0x8e591d0 </usr/include/c++/4.6/bits/stl_iterator.h:215:7, line:219:7>
  (DeclStmt 0x8e59150 <line:216:2, col:32>
    0x8e590f0 "reverse_iterator<_Iterator> __tmp =
      (UnaryOperator 0x8e59138 <col:27, col:28> '<dependent type>' prefix '*'
        (CXXThisExpr 0x8e59128 <col:28> 'reverse_iterator<_Iterator> *' this))")
  (UnaryOperator 0x8e59190 <line:217:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x8e59170 <col:4> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e59160 <col:4> 'reverse_iterator<_Iterator> *' this)))
  (ReturnStmt 0x8e591c0 <line:218:2, col:9>
    (DeclRefExpr 0x8e591a4 <col:9> 'reverse_iterator<_Iterator>' lvalue Var 0x8e590f0 '__tmp' 'reverse_iterator<_Iterator>')))


        reverse_iterator<_Iterator> operator+(difference_type __n) const (CompoundStmt 0x8e59288 </usr/include/c++/4.6/bits/stl_iterator.h:228:7, col:49>
  (ReturnStmt 0x8e59278 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x8e59258 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x8e59240 <col:33, col:43> '<dependent type>' '-'
        (MemberExpr 0x8e59208 <col:33> 'const _Iterator' lvalue ->current 0x8e553a0
          (CXXThisExpr 0x8e591f8 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x8e59228 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x8e56aa0 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator+=(difference_type __n) (CompoundStmt 0x8e59340 </usr/include/c++/4.6/bits/stl_iterator.h:237:7, line:240:7>
  (CompoundAssignOperator 0x8e592e8 <line:238:2, col:13> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8e592b0 <col:2> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e592a0 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x8e592d0 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x8e56bb0 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x8e59330 <line:239:2, col:10>
    (UnaryOperator 0x8e59318 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e59308 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reverse_iterator<_Iterator> operator-(difference_type __n) const (CompoundStmt 0x8e593f0 </usr/include/c++/4.6/bits/stl_iterator.h:249:7, col:49>
  (ReturnStmt 0x8e593e0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x8e593c0 <col:16, col:46> 'reverse_iterator<_Iterator>'
      (BinaryOperator 0x8e593a8 <col:33, col:43> '<dependent type>' '+'
        (MemberExpr 0x8e59370 <col:33> 'const _Iterator' lvalue ->current 0x8e553a0
          (CXXThisExpr 0x8e59360 <col:33> 'const reverse_iterator<_Iterator> *' this))
        (DeclRefExpr 0x8e59390 <col:43> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x8e56cc0 '__n' 'difference_type':'typename __traits_type::difference_type')))))


        reverse_iterator<_Iterator> &operator-=(difference_type __n) (CompoundStmt 0x8e594a8 </usr/include/c++/4.6/bits/stl_iterator.h:258:7, line:261:7>
  (CompoundAssignOperator 0x8e59450 <line:259:2, col:13> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8e59418 <col:2> '_Iterator' lvalue ->current 0x8e553a0
      (CXXThisExpr 0x8e59408 <col:2> 'reverse_iterator<_Iterator> *' this))
    (DeclRefExpr 0x8e59438 <col:13> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x8e56d80 '__n' 'difference_type':'typename __traits_type::difference_type'))
  (ReturnStmt 0x8e59498 <line:260:2, col:10>
    (UnaryOperator 0x8e59480 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e59470 <col:10> 'reverse_iterator<_Iterator> *' this))))


        reference operator[](difference_type __n) const (CompoundStmt 0x8e59558 </usr/include/c++/4.6/bits/stl_iterator.h:270:7, col:32>
  (ReturnStmt 0x8e59548 <col:9, col:29>
    (UnaryOperator 0x8e59530 <col:16, col:29> '<dependent type>' prefix '*'
      (ParenExpr 0x8e59518 <col:17, col:29> '<dependent type>'
        (BinaryOperator 0x8e59500 <col:18, col:26> '<dependent type>' '+'
          (UnaryOperator 0x8e594d0 <col:18, col:19> '<dependent type>' prefix '*'
            (CXXThisExpr 0x8e594c0 <col:19> 'const reverse_iterator<_Iterator> *' this))
          (DeclRefExpr 0x8e594e4 <col:26> 'difference_type':'typename __traits_type::difference_type' lvalue ParmVar 0x8e56e50 '__n' 'difference_type':'typename __traits_type::difference_type'))))))


    };
    template <typename _Iterator> inline bool operator==(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e59a30 </usr/include/c++/4.6/bits/stl_iterator.h:287:5, col:40>
  (ReturnStmt 0x8e59a20 <col:7, col:37>
    (CXXOperatorCallExpr 0x8e599f8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8e599c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e598b0 0x8e428b0)
      (CallExpr 0x8e59930 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e598f8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e598e0 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e596b0 '__x' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x8e599a0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e59968 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5994c <col:28> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e597b0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator<(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e59ed0 </usr/include/c++/4.6/bits/stl_iterator.h:293:5, col:39>
  (ReturnStmt 0x8e59ec0 <col:7, col:36>
    (CXXOperatorCallExpr 0x8e59e98 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x8e59e60 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e59d50 0x8e43200)
      (CallExpr 0x8e59dd0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e59d98 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e59d80 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e59c70 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x8e59e40 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e59e08 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x8e59dec <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e59b70 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator!=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e5b3b0 </usr/include/c++/4.6/bits/stl_iterator.h:299:5, col:29>
  (ReturnStmt 0x8e5b3a0 <col:7, col:26>
    (UnaryOperator 0x8e5b388 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5b370 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5b348 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5b310 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e598b0 0x8e428b0)
          (DeclRefExpr 0x8e5b2e0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b0d0 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x8e5b2f8 <col:23> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b1d0 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e5b7a0 </usr/include/c++/4.6/bits/stl_iterator.h:305:5, col:25>
  (ReturnStmt 0x8e5b790 <col:7, col:20>
    (CXXOperatorCallExpr 0x8e5b768 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5b730 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e59d50 0x8e43200)
      (DeclRefExpr 0x8e5b700 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b5f0 '__y' 'const reverse_iterator<_Iterator> &')
      (DeclRefExpr 0x8e5b718 <col:20> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b4f0 '__x' 'const reverse_iterator<_Iterator> &'))))

;
    template <typename _Iterator> inline bool operator<=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e5bbc0 </usr/include/c++/4.6/bits/stl_iterator.h:311:5, col:28>
  (ReturnStmt 0x8e5bbb0 <col:7, col:25>
    (UnaryOperator 0x8e5bb98 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5bb80 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5bb58 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5bb20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e59d50 0x8e43200)
          (DeclRefExpr 0x8e5baf0 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b9e0 '__y' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x8e5bb08 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5b8e0 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline bool operator>=(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e5bfe0 </usr/include/c++/4.6/bits/stl_iterator.h:317:5, col:28>
  (ReturnStmt 0x8e5bfd0 <col:7, col:25>
    (UnaryOperator 0x8e5bfb8 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5bfa0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5bf78 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5bf40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e59d50 0x8e43200)
          (DeclRefExpr 0x8e5bf10 <col:16> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5bd00 '__x' 'const reverse_iterator<_Iterator> &')
          (DeclRefExpr 0x8e5bf28 <col:22> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5be00 '__y' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline typename reverse_iterator<_Iterator>::difference_type operator-(const reverse_iterator<_Iterator> &__x, const reverse_iterator<_Iterator> &__y) (CompoundStmt 0x8e5c5c0 </usr/include/c++/4.6/bits/stl_iterator.h:323:5, col:39>
  (ReturnStmt 0x8e5c5b0 <col:7, col:36>
    (CXXOperatorCallExpr 0x8e5c588 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5c550 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440)
      (CallExpr 0x8e5c4c0 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5c488 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5c470 <col:14> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5c330 '__y' 'const reverse_iterator<_Iterator> &')))
      (CallExpr 0x8e5c530 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5c4f8 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5c4dc <col:27> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5c230 '__x' 'const reverse_iterator<_Iterator> &'))))))

;
    template <typename _Iterator> inline reverse_iterator<_Iterator> operator+(typename reverse_iterator<_Iterator>::difference_type __n, const reverse_iterator<_Iterator> &__x) (CompoundStmt 0x8e5cbc8 </usr/include/c++/4.6/bits/stl_iterator.h:329:5, col:61>
  (ReturnStmt 0x8e5cbb8 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x8e5cb98 <col:14, col:58> 'reverse_iterator<_Iterator>'
      (CXXOperatorCallExpr 0x8e5cb70 <col:42, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x8e5cb38 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440)
        (CallExpr 0x8e5cb00 <col:42, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8e5cac8 <col:42, col:46> '<dependent type>' lvalue
            (DeclRefExpr 0x8e5cab0 <col:42> 'const reverse_iterator<_Iterator>' lvalue ParmVar 0x8e5c8b0 '__x' 'const reverse_iterator<_Iterator> &')))
        (DeclRefExpr 0x8e5cb1c <col:55> 'typename reverse_iterator<_Iterator>::difference_type' lvalue ParmVar 0x8e5c7b0 '__n' 'typename reverse_iterator<_Iterator>::difference_type')))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator==(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5d148 </usr/include/c++/4.6/bits/stl_iterator.h:337:5, col:40>
  (ReturnStmt 0x8e5d138 <col:7, col:37>
    (CXXOperatorCallExpr 0x8e5d110 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5d0d0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5cfb0 0x8e598b0 0x8e428b0)
      (CallExpr 0x8e5d030 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5cff8 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5cfe0 <col:14> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5cd60 '__x' 'const reverse_iterator<_IteratorL> &')))
      (CallExpr 0x8e5d0b0 <col:28, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5d078 <col:28, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5d04c <col:28> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5ceb0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5d648 </usr/include/c++/4.6/bits/stl_iterator.h:343:5, col:39>
  (ReturnStmt 0x8e5d638 <col:7, col:36>
    (CXXOperatorCallExpr 0x8e5d610 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5d5d0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5d4c0 0x8e59d50 0x8e43200)
      (CallExpr 0x8e5d540 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5d508 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5d4f0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5d3e0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x8e5d5b0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5d578 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5d55c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5d2e0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator!=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5dac8 </usr/include/c++/4.6/bits/stl_iterator.h:349:5, col:29>
  (ReturnStmt 0x8e5dab8 <col:7, col:26>
    (UnaryOperator 0x8e5daa0 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5da88 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5da60 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5da20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5cfb0 0x8e598b0 0x8e428b0)
          (DeclRefExpr 0x8e5d9f0 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5d7e0 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x8e5da08 <col:23> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5d8e0 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5df18 </usr/include/c++/4.6/bits/stl_iterator.h:355:5, col:25>
  (ReturnStmt 0x8e5df08 <col:7, col:20>
    (CXXOperatorCallExpr 0x8e5dee0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5dea0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5d4c0 0x8e59d50 0x8e43200)
      (DeclRefExpr 0x8e5de70 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5dd60 '__y' 'const reverse_iterator<_IteratorR> &')
      (DeclRefExpr 0x8e5de88 <col:20> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5dc60 '__x' 'const reverse_iterator<_IteratorL> &'))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator<=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5e9c8 </usr/include/c++/4.6/bits/stl_iterator.h:361:5, col:28>
  (ReturnStmt 0x8e5e9b8 <col:7, col:25>
    (UnaryOperator 0x8e5e9a0 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5e988 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5e960 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5e920 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5d4c0 0x8e59d50 0x8e43200)
          (DeclRefExpr 0x8e5e8f0 <col:16> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5e7e0 '__y' 'const reverse_iterator<_IteratorR> &')
          (DeclRefExpr 0x8e5e908 <col:22> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5e6e0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline bool operator>=(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5ee48 </usr/include/c++/4.6/bits/stl_iterator.h:367:5, col:28>
  (ReturnStmt 0x8e5ee38 <col:7, col:25>
    (UnaryOperator 0x8e5ee20 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x8e5ee08 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x8e5ede0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x8e5eda0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5d4c0 0x8e59d50 0x8e43200)
          (DeclRefExpr 0x8e5ed70 <col:16> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5eb60 '__x' 'const reverse_iterator<_IteratorL> &')
          (DeclRefExpr 0x8e5ed88 <col:22> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5ec60 '__y' 'const reverse_iterator<_IteratorR> &'))))))

;
    template <typename _IteratorL, typename _IteratorR> inline typename reverse_iterator<_IteratorL>::difference_type operator-(const reverse_iterator<_IteratorL> &__x, const reverse_iterator<_IteratorR> &__y) (CompoundStmt 0x8e5f440 </usr/include/c++/4.6/bits/stl_iterator.h:381:5, col:39>
  (ReturnStmt 0x8e5f430 <col:7, col:36>
    (CXXOperatorCallExpr 0x8e5f408 <col:14, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x8e5f3d0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5f2c0 0x8e5c440)
      (CallExpr 0x8e5f340 <col:14, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5f308 <col:14, col:18> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5f2f0 <col:14> 'const reverse_iterator<_IteratorR>' lvalue ParmVar 0x8e5f1b0 '__y' 'const reverse_iterator<_IteratorR> &')))
      (CallExpr 0x8e5f3b0 <col:27, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e5f378 <col:27, col:31> '<dependent type>' lvalue
          (DeclRefExpr 0x8e5f35c <col:27> 'const reverse_iterator<_IteratorL>' lvalue ParmVar 0x8e5f0b0 '__x' 'const reverse_iterator<_IteratorL> &'))))))

;
    template <typename _Container> class back_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class back_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        back_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x8e607e0 </usr/include/c++/4.6/bits/stl_iterator.h:408:57, col:58> '<dependent type>' prefix '&'
  (DeclRefExpr 0x8e607c4 <col:58> '_Container' lvalue ParmVar 0x8e602e0 '__x' '_Container &'))
) (CompoundStmt 0x8e60840 </usr/include/c++/4.6/bits/stl_iterator.h:408:63, col:65>)


        back_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x8e60940 </usr/include/c++/4.6/bits/stl_iterator.h:424:7, line:427:7>
  (CallExpr 0x8e608e8 <line:425:2, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8e60898 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x8e60878 <col:2> '_Container *' lvalue ->container 0x8e60200
        (CXXThisExpr 0x8e60868 <col:2> 'back_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x8e608cc <col:23> 'typename _Container::const_reference' lvalue ParmVar 0x8e60490 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x8e60930 <line:426:2, col:10>
    (UnaryOperator 0x8e60918 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e60908 <col:10> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator*() (CompoundStmt 0x8e60990 </usr/include/c++/4.6/bits/stl_iterator.h:447:7, col:23>
  (ReturnStmt 0x8e60980 <col:9, col:17>
    (UnaryOperator 0x8e60968 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e60958 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> &operator++() (CompoundStmt 0x8e609e0 </usr/include/c++/4.6/bits/stl_iterator.h:452:7, col:23>
  (ReturnStmt 0x8e609d0 <col:9, col:17>
    (UnaryOperator 0x8e609b8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e609a8 <col:17> 'back_insert_iterator<_Container> *' this))))


        back_insert_iterator<_Container> operator++(int) (CompoundStmt 0x8e60a30 </usr/include/c++/4.6/bits/stl_iterator.h:457:7, col:23>
  (ReturnStmt 0x8e60a20 <col:9, col:17>
    (UnaryOperator 0x8e60a08 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e609f8 <col:17> 'back_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline back_insert_iterator<_Container> back_inserter(_Container &__x) (CompoundStmt 0x8e619b8 </usr/include/c++/4.6/bits/stl_iterator.h:474:5, col:53>
  (ReturnStmt 0x8e619a8 <col:7, col:50>
    (CXXUnresolvedConstructExpr 0x8e61988 <col:14, col:50> 'back_insert_iterator<_Container>'
      (DeclRefExpr 0x8e61970 <col:47> '_Container' lvalue ParmVar 0x8e60b60 '__x' '_Container &'))))

;
    template <typename _Container> class front_insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class front_insert_iterator;
    protected:
    protected:
        _Container *container;
    public:
    public:
        typedef _Container container_type;
        front_insert_iterator<_Container>(_Container &__x) : container((UnaryOperator 0x8e62380 </usr/include/c++/4.6/bits/stl_iterator.h:498:67, col:68> '<dependent type>' prefix '&'
  (DeclRefExpr 0x8e62364 <col:68> '_Container' lvalue ParmVar 0x8e61ec0 '__x' '_Container &'))
) (CompoundStmt 0x8e623e0 </usr/include/c++/4.6/bits/stl_iterator.h:498:73, col:75>)


        front_insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x8e624e0 </usr/include/c++/4.6/bits/stl_iterator.h:514:7, line:517:7>
  (CallExpr 0x8e62488 <line:515:2, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8e62438 <col:2, col:13> '<dependent type>' lvalue
      (MemberExpr 0x8e62418 <col:2> '_Container *' lvalue ->container 0x8e61de0
        (CXXThisExpr 0x8e62408 <col:2> 'front_insert_iterator<_Container> *' this)))
    (DeclRefExpr 0x8e6246c <col:24> 'typename _Container::const_reference' lvalue ParmVar 0x8e62030 '__value' 'typename _Container::const_reference'))
  (ReturnStmt 0x8e624d0 <line:516:2, col:10>
    (UnaryOperator 0x8e624b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e624a8 <col:10> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator*() (CompoundStmt 0x8e62530 </usr/include/c++/4.6/bits/stl_iterator.h:537:7, col:23>
  (ReturnStmt 0x8e62520 <col:9, col:17>
    (UnaryOperator 0x8e62508 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e624f8 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> &operator++() (CompoundStmt 0x8e62580 </usr/include/c++/4.6/bits/stl_iterator.h:542:7, col:23>
  (ReturnStmt 0x8e62570 <col:9, col:17>
    (UnaryOperator 0x8e62558 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e62548 <col:17> 'front_insert_iterator<_Container> *' this))))


        front_insert_iterator<_Container> operator++(int) (CompoundStmt 0x8e625d0 </usr/include/c++/4.6/bits/stl_iterator.h:547:7, col:23>
  (ReturnStmt 0x8e625c0 <col:9, col:17>
    (UnaryOperator 0x8e625a8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e62598 <col:17> 'front_insert_iterator<_Container> *' this))))


    };
    template <typename _Container> inline front_insert_iterator<_Container> front_inserter(_Container &__x) (CompoundStmt 0x8e632b0 </usr/include/c++/4.6/bits/stl_iterator.h:564:5, col:54>
  (ReturnStmt 0x8e632a0 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x8e63280 <col:14, col:51> 'front_insert_iterator<_Container>'
      (DeclRefExpr 0x8e63268 <col:48> '_Container' lvalue ParmVar 0x8e62700 '__x' '_Container &'))))

;
    template <typename _Container> class insert_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class insert_iterator;
    protected:
    protected:
        _Container *container;
        typename _Container::iterator iter;
    public:
    public:
        typedef _Container container_type;
        insert_iterator<_Container>(_Container &__x, typename _Container::iterator __i) : container((UnaryOperator 0x8e63dd0 </usr/include/c++/4.6/bits/stl_iterator.h:597:19, col:20> '<dependent type>' prefix '&'
  (DeclRefExpr 0x8e63db4 <col:20> '_Container' lvalue ParmVar 0x8e63880 '__x' '_Container &'))
), iter((DeclRefExpr 0x8e63e28 </usr/include/c++/4.6/bits/stl_iterator.h:597:31> 'typename _Container::iterator' lvalue ParmVar 0x8e63900 '__i' 'typename _Container::iterator')
) (CompoundStmt 0x8e63e80 </usr/include/c++/4.6/bits/stl_iterator.h:597:36, col:37>)


        insert_iterator<_Container> &operator=(typename _Container::const_reference __value) (CompoundStmt 0x8e64048 </usr/include/c++/4.6/bits/stl_iterator.h:625:7, line:629:7>
  (BinaryOperator 0x8e63fb0 <line:626:2, col:40> '<dependent type>' '='
    (MemberExpr 0x8e63eb8 <col:2> 'typename _Container::iterator' lvalue ->iter 0x8e637a0
      (CXXThisExpr 0x8e63ea8 <col:2> 'insert_iterator<_Container> *' this))
    (CallExpr 0x8e63f88 <col:9, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8e63f08 <col:9, col:20> '<dependent type>' lvalue
        (MemberExpr 0x8e63ee8 <col:9> '_Container *' lvalue ->container 0x8e636e0
          (CXXThisExpr 0x8e63ed8 <col:9> 'insert_iterator<_Container> *' this)))
      (MemberExpr 0x8e63f50 <col:27> 'typename _Container::iterator' lvalue ->iter 0x8e637a0
        (CXXThisExpr 0x8e63f40 <col:27> 'insert_iterator<_Container> *' this))
      (DeclRefExpr 0x8e63f70 <col:33> 'typename _Container::const_reference' lvalue ParmVar 0x8e63a80 '__value' 'typename _Container::const_reference')))
  (UnaryOperator 0x8e63ff8 <line:627:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x8e63fd8 <col:4> 'typename _Container::iterator' lvalue ->iter 0x8e637a0
      (CXXThisExpr 0x8e63fc8 <col:4> 'insert_iterator<_Container> *' this)))
  (ReturnStmt 0x8e64038 <line:628:2, col:10>
    (UnaryOperator 0x8e64020 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e64010 <col:10> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator*() (CompoundStmt 0x8e640a0 </usr/include/c++/4.6/bits/stl_iterator.h:651:7, col:23>
  (ReturnStmt 0x8e64090 <col:9, col:17>
    (UnaryOperator 0x8e64078 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e64068 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++() (CompoundStmt 0x8e640f0 </usr/include/c++/4.6/bits/stl_iterator.h:656:7, col:23>
  (ReturnStmt 0x8e640e0 <col:9, col:17>
    (UnaryOperator 0x8e640c8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e640b8 <col:17> 'insert_iterator<_Container> *' this))))


        insert_iterator<_Container> &operator++(int) (CompoundStmt 0x8e64140 </usr/include/c++/4.6/bits/stl_iterator.h:661:7, col:23>
  (ReturnStmt 0x8e64130 <col:9, col:17>
    (UnaryOperator 0x8e64118 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e64108 <col:17> 'insert_iterator<_Container> *' this))))


    };
    template <typename _Container, typename _Iterator> inline insert_iterator<_Container> inserter(_Container &__x, _Iterator __i) (CompoundStmt 0x8e652d0 </usr/include/c++/4.6/bits/stl_iterator.h:678:5, line:681:5>
  (ReturnStmt 0x8e652c0 <line:679:7, line:680:41>
    (CXXUnresolvedConstructExpr 0x8e652a0 <line:679:14, line:680:41> 'insert_iterator<_Container>'
      (DeclRefExpr 0x8e651f0 <line:679:42> '_Container' lvalue ParmVar 0x8e64fb0 '__x' '_Container &')
      (CXXUnresolvedConstructExpr 0x8e65280 <line:680:7, col:40> 'typename _Container::iterator'
        (DeclRefExpr 0x8e65264 <col:37> '_Iterator' lvalue ParmVar 0x8e64ff0 '__i' '_Iterator')))))

;
}
namespace __gnu_cxx {
    using std::iterator_traits;
    ;
    using std::iterator;
    ;
    template <typename _Iterator = const wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator = char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = const char *, typename _Container = std::basic_string<char>> class __normal_iterator
template <typename _Iterator = wchar_t *, typename _Container = std::basic_string<wchar_t>> class __normal_iterator
template <typename _Iterator, typename _Container> class __normal_iterator {
        class __normal_iterator;
    protected:
    protected:
        _Iterator _M_current;
        typedef iterator_traits<_Iterator> __traits_type;
    public:
    public:
        typedef _Iterator iterator_type;
        typedef typename __traits_type::iterator_category iterator_category;
        typedef typename __traits_type::value_type value_type;
        typedef typename __traits_type::difference_type difference_type;
        typedef typename __traits_type::reference reference;
        typedef typename __traits_type::pointer pointer;
        __normal_iterator<_Iterator, _Container>() : _M_current((CXXUnresolvedConstructExpr 0x8e6a218 </usr/include/c++/4.6/bits/stl_iterator.h:717:59, col:69> '_Iterator')
) (CompoundStmt 0x8e6a270 </usr/include/c++/4.6/bits/stl_iterator.h:717:72, col:74>)


        __normal_iterator<_Iterator, _Container>(const _Iterator &__i) : _M_current((DeclRefExpr 0x8e6a280 </usr/include/c++/4.6/bits/stl_iterator.h:720:60> 'const _Iterator' lvalue ParmVar 0x8e65c20 '__i' 'const _Iterator &')
) (CompoundStmt 0x8e6a2e0 </usr/include/c++/4.6/bits/stl_iterator.h:720:65, col:67>)


        template <typename _Iter> __normal_iterator<_Iterator, _Container>(const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &__i) : _M_current((CallExpr 0x8e6a340 </usr/include/c++/4.6/bits/stl_iterator.h:728:22, col:31> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x8e6a308 <col:22, col:26> '<dependent type>' lvalue
    (DeclRefExpr 0x8e6a2f0 <col:22> 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type>' lvalue ParmVar 0x8e0c770 '__i' 'const __normal_iterator<_Iter, typename __enable_if<(std::__are_same<_Iter, typename _Container::pointer>::__value), _Container>::__type> &')))
) (CompoundStmt 0x8e6a3a0 </usr/include/c++/4.6/bits/stl_iterator.h:728:34, col:36>)

;
        reference operator*() const (CompoundStmt 0x8e6a440 </usr/include/c++/4.6/bits/stl_iterator.h:733:7, col:29>
  (ReturnStmt 0x8e6a430 <col:9, col:17>
    (UnaryOperator 0x8e6a418 <col:16, col:17> '<dependent type>' prefix '*'
      (MemberExpr 0x8e6a3f4 <col:17> 'const _Iterator' lvalue ->_M_current 0x8e656d0
        (CXXThisExpr 0x8e6a3c8 <col:17> 'const __normal_iterator<_Iterator, _Container> *' this)))))


        pointer operator->() const (CompoundStmt 0x8e6a498 </usr/include/c++/4.6/bits/stl_iterator.h:737:7, col:28>
  (ReturnStmt 0x8e6a488 <col:9, col:16>
    (MemberExpr 0x8e6a468 <col:16> 'const _Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6a458 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> &operator++() (CompoundStmt 0x8e6a530 </usr/include/c++/4.6/bits/stl_iterator.h:741:7, line:744:7>
  (UnaryOperator 0x8e6a4e0 <line:742:2, col:4> '<dependent type>' prefix '++'
    (MemberExpr 0x8e6a4c0 <col:4> '_Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6a4b0 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x8e6a520 <line:743:2, col:10>
    (UnaryOperator 0x8e6a508 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e6a4f8 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator++(int) (CompoundStmt 0x8e6a5e0 </usr/include/c++/4.6/bits/stl_iterator.h:748:7, col:49>
  (ReturnStmt 0x8e6a5d0 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x8e6a5b0 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x8e6a598 <col:34, col:44> '<dependent type>' postfix '++'
        (MemberExpr 0x8e6a560 <col:34> '_Iterator' lvalue ->_M_current 0x8e656d0
          (CXXThisExpr 0x8e6a550 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        __normal_iterator<_Iterator, _Container> &operator--() (CompoundStmt 0x8e6a678 </usr/include/c++/4.6/bits/stl_iterator.h:753:7, line:756:7>
  (UnaryOperator 0x8e6a628 <line:754:2, col:4> '<dependent type>' prefix '--'
    (MemberExpr 0x8e6a608 <col:4> '_Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6a5f8 <col:4> '__normal_iterator<_Iterator, _Container> *' this)))
  (ReturnStmt 0x8e6a668 <line:755:2, col:10>
    (UnaryOperator 0x8e6a650 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e6a640 <col:10> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator--(int) (CompoundStmt 0x8e6a728 </usr/include/c++/4.6/bits/stl_iterator.h:760:7, col:49>
  (ReturnStmt 0x8e6a718 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x8e6a6f8 <col:16, col:46> '__normal_iterator<_Iterator, _Container>'
      (UnaryOperator 0x8e6a6e0 <col:34, col:44> '<dependent type>' postfix '--'
        (MemberExpr 0x8e6a6a8 <col:34> '_Iterator' lvalue ->_M_current 0x8e656d0
          (CXXThisExpr 0x8e6a698 <col:34> '__normal_iterator<_Iterator, _Container> *' this))))))


        reference operator[](const difference_type &__n) const (CompoundStmt 0x8e6a7b0 </usr/include/c++/4.6/bits/stl_iterator.h:765:7, col:33>
  (ReturnStmt 0x8e6a7a0 <col:9, col:30>
    (ArraySubscriptExpr 0x8e6a788 <col:16, col:30> '<dependent type>' lvalue
      (MemberExpr 0x8e6a750 <col:16> 'const _Iterator' lvalue ->_M_current 0x8e656d0
        (CXXThisExpr 0x8e6a740 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))
      (DeclRefExpr 0x8e6a770 <col:27> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x8e0cd40 '__n' 'const difference_type &'))))


        __normal_iterator<_Iterator, _Container> &operator+=(const difference_type &__n) (CompoundStmt 0x8e6a868 </usr/include/c++/4.6/bits/stl_iterator.h:769:7, col:42>
  (CompoundAssignOperator 0x8e6a810 <col:9, col:23> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8e6a7d8 <col:9> '_Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6a7c8 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x8e6a7f8 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x8e0ce60 '__n' 'const difference_type &'))
  (ReturnStmt 0x8e6a858 <col:28, col:36>
    (UnaryOperator 0x8e6a840 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e6a830 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator+(const difference_type &__n) const (CompoundStmt 0x8e6a918 </usr/include/c++/4.6/bits/stl_iterator.h:773:7, col:53>
  (ReturnStmt 0x8e6a908 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x8e6a8e8 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x8e6a8d0 <col:34, col:47> '<dependent type>' '+'
        (MemberExpr 0x8e6a898 <col:34> 'const _Iterator' lvalue ->_M_current 0x8e656d0
          (CXXThisExpr 0x8e6a888 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x8e6a8b8 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x8e0cf80 '__n' 'const difference_type &')))))


        __normal_iterator<_Iterator, _Container> &operator-=(const difference_type &__n) (CompoundStmt 0x8e6a9d0 </usr/include/c++/4.6/bits/stl_iterator.h:777:7, col:42>
  (CompoundAssignOperator 0x8e6a978 <col:9, col:23> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8e6a940 <col:9> '_Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6a930 <col:9> '__normal_iterator<_Iterator, _Container> *' this))
    (DeclRefExpr 0x8e6a960 <col:23> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x8e0d0a0 '__n' 'const difference_type &'))
  (ReturnStmt 0x8e6a9c0 <col:28, col:36>
    (UnaryOperator 0x8e6a9a8 <col:35, col:36> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8e6a998 <col:36> '__normal_iterator<_Iterator, _Container> *' this))))


        __normal_iterator<_Iterator, _Container> operator-(const difference_type &__n) const (CompoundStmt 0x8e6aa80 </usr/include/c++/4.6/bits/stl_iterator.h:781:7, col:53>
  (ReturnStmt 0x8e6aa70 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x8e6aa50 <col:16, col:50> '__normal_iterator<_Iterator, _Container>'
      (BinaryOperator 0x8e6aa38 <col:34, col:47> '<dependent type>' '-'
        (MemberExpr 0x8e6aa00 <col:34> 'const _Iterator' lvalue ->_M_current 0x8e656d0
          (CXXThisExpr 0x8e6a9f0 <col:34> 'const __normal_iterator<_Iterator, _Container> *' this))
        (DeclRefExpr 0x8e6aa20 <col:47> 'const difference_type':'const typename __traits_type::difference_type' lvalue ParmVar 0x8e0d180 '__n' 'const difference_type &')))))


        const _Iterator &base() const (CompoundStmt 0x8e6aad8 </usr/include/c++/4.6/bits/stl_iterator.h:785:7, col:28>
  (ReturnStmt 0x8e6aac8 <col:9, col:16>
    (MemberExpr 0x8e6aaa8 <col:16> 'const _Iterator' lvalue ->_M_current 0x8e656d0
      (CXXThisExpr 0x8e6aa98 <col:16> 'const __normal_iterator<_Iterator, _Container> *' this))))


    };
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator==(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e6b1f0 </usr/include/c++/4.6/bits/stl_iterator.h:801:5, col:44>
  (ReturnStmt 0x8e6b1e0 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e6b1b8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6b180 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6b070)
      (CallExpr 0x8e6b0f0 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6b0b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6b0a0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e6ad90 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e6b160 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6b128 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6b10c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e6af70 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator==(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e6c510 </usr/include/c++/4.6/bits/stl_iterator.h:807:5, col:44>
  (ReturnStmt 0x8e6c500 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e6c4d8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6c4a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6c390 0x8e6b070)
      (CallExpr 0x8e6c410 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6c3d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6c3c0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6c120 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e6c480 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6c448 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6c42c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6c290 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator!=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e6cb30 </usr/include/c++/4.6/bits/stl_iterator.h:813:5, col:44>
  (ReturnStmt 0x8e6cb20 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e6caf8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6cac0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6c9b0)
      (CallExpr 0x8e6ca30 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6c9f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6c9e0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e6c760 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e6caa0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6ca68 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6ca4c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e6c8d0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator!=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e6d130 </usr/include/c++/4.6/bits/stl_iterator.h:819:5, col:44>
  (ReturnStmt 0x8e6d120 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e6d0f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6d0c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6cfb0 0x8e6c9b0)
      (CallExpr 0x8e6d030 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6cff8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6cfe0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6cd30 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e6d0a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6d068 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6d04c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6cea0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e6d750 </usr/include/c++/4.6/bits/stl_iterator.h:826:5, col:43>
  (ReturnStmt 0x8e6d740 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e6d718 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6d6e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6d5d0)
      (CallExpr 0x8e6d650 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6d618 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6d600 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e6d380 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e6d6c0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6d688 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6d66c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e6d4f0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e6dd20 </usr/include/c++/4.6/bits/stl_iterator.h:832:5, col:43>
  (ReturnStmt 0x8e6dd10 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e6dce8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6dcb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6dba0 0x8e6d5d0)
      (CallExpr 0x8e6dc20 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6dbe8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6dbd0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6d950 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e6dc90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6dc58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6dc3c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6dac0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e6e350 </usr/include/c++/4.6/bits/stl_iterator.h:838:5, col:43>
  (ReturnStmt 0x8e6e340 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e6e318 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6e2e0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6e1d0)
      (CallExpr 0x8e6e250 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6e218 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6e200 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e6df80 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e6e2c0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6e288 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6e26c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e6e0f0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e6e920 </usr/include/c++/4.6/bits/stl_iterator.h:844:5, col:43>
  (ReturnStmt 0x8e6e910 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e6e8e8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6e8b0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6e7a0 0x8e6e1d0)
      (CallExpr 0x8e6e820 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6e7e8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6e7d0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6e550 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e6e890 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6e858 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6e83c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e6e6c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator<=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e6ff60 </usr/include/c++/4.6/bits/stl_iterator.h:850:5, col:44>
  (ReturnStmt 0x8e6ff50 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e6ef08 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e6eed0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6edc0)
      (CallExpr 0x8e6ee40 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6ee08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6edf0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e6eb70 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e6eeb0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e6ee78 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e6ee5c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e6ece0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator<=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e70530 </usr/include/c++/4.6/bits/stl_iterator.h:856:5, col:44>
  (ReturnStmt 0x8e70520 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e704f8 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e704c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e703b0 0x8e6edc0)
      (CallExpr 0x8e70430 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e703f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e703e0 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e70160 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e704a0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e70468 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e7044c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e702d0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline bool operator>=(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e70b50 </usr/include/c++/4.6/bits/stl_iterator.h:862:5, col:44>
  (ReturnStmt 0x8e70b40 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e70b18 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e70ae0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e709d0)
      (CallExpr 0x8e70a50 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e70a18 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e70a00 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e70780 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e70ac0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e70a88 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e70a6c <col:30> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e708f0 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline bool operator>=(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e71560 </usr/include/c++/4.6/bits/stl_iterator.h:868:5, col:44>
  (ReturnStmt 0x8e71550 <col:7, col:41>
    (CXXOperatorCallExpr 0x8e71528 <col:14, col:41> '<dependent type>'
      (UnresolvedLookupExpr 0x8e714f0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e713e0 0x8e709d0)
      (CallExpr 0x8e71460 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e71428 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e71410 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e70d50 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e714d0 <col:30, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e71498 <col:30, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x8e7147c <col:30> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e70ec0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _IteratorL, typename _IteratorR, typename _Container> inline typename __normal_iterator<_IteratorL, _Container>::difference_type operator-(const __normal_iterator<_IteratorL, _Container> &__lhs, const __normal_iterator<_IteratorR, _Container> &__rhs) (CompoundStmt 0x8e71d00 </usr/include/c++/4.6/bits/stl_iterator.h:886:5, col:43>
  (ReturnStmt 0x8e71cf0 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e71cc8 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e71c90 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e71b80)
      (CallExpr 0x8e71c00 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e71bc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e71bb0 <col:14> 'const __normal_iterator<_IteratorL, _Container>' lvalue ParmVar 0x8e71900 '__lhs' 'const __normal_iterator<_IteratorL, _Container> &')))
      (CallExpr 0x8e71c70 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e71c38 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e71c1c <col:29> 'const __normal_iterator<_IteratorR, _Container>' lvalue ParmVar 0x8e71a70 '__rhs' 'const __normal_iterator<_IteratorR, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline typename __normal_iterator<_Iterator, _Container>::difference_type operator-(const __normal_iterator<_Iterator, _Container> &__lhs, const __normal_iterator<_Iterator, _Container> &__rhs) (CompoundStmt 0x8e72870 </usr/include/c++/4.6/bits/stl_iterator.h:892:5, col:43>
  (ReturnStmt 0x8e72860 <col:7, col:40>
    (CXXOperatorCallExpr 0x8e72838 <col:14, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e72800 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e722d0 0x8e71b80)
      (CallExpr 0x8e72770 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e72318 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8e72300 <col:14> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e72050 '__lhs' 'const __normal_iterator<_Iterator, _Container> &')))
      (CallExpr 0x8e727e0 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8e727a8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x8e7278c <col:29> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e721c0 '__rhs' 'const __normal_iterator<_Iterator, _Container> &'))))))

;
    template <typename _Iterator, typename _Container> inline __normal_iterator<_Iterator, _Container> operator+(typename __normal_iterator<_Iterator, _Container>::difference_type __n, const __normal_iterator<_Iterator, _Container> &__i) (CompoundStmt 0x8e73050 </usr/include/c++/4.6/bits/stl_iterator.h:898:5, col:74>
  (ReturnStmt 0x8e73040 <col:7, col:71>
    (CXXUnresolvedConstructExpr 0x8e73020 <col:14, col:71> '__normal_iterator<_Iterator, _Container>'
      (CXXOperatorCallExpr 0x8e72ff8 <col:55, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x8e72fc0 <col:66, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e72e00)
        (CallExpr 0x8e72f88 <col:55, col:64> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8e72f50 <col:55, col:59> '<dependent type>' lvalue
            (DeclRefExpr 0x8e72f38 <col:55> 'const __normal_iterator<_Iterator, _Container>' lvalue ParmVar 0x8e72cd0 '__i' 'const __normal_iterator<_Iterator, _Container> &')))
        (DeclRefExpr 0x8e72fa4 <col:68> 'typename __normal_iterator<_Iterator, _Container>::difference_type' lvalue ParmVar 0x8e72b60 '__n' 'typename __normal_iterator<_Iterator, _Container>::difference_type')))))

;
}
namespace std {
    namespace __debug {
    }
}
namespace __gnu_debug {
    using namespace std::__debug;
}
namespace std {
    template <bool _BoolType = true> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x8e76ef0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x8e76ec8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x8e76e30 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x8e3fbf0 0x8e40130)
    (UnaryOperator 0x8e76e80 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e76e68 <col:17> '_ForwardIterator1' lvalue ParmVar 0x8e76cb0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x8e76eb0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e76e94 <col:23> '_ForwardIterator2' lvalue ParmVar 0x8e76cf0 '__b' '_ForwardIterator2'))))

;
    }
template <bool _BoolType> struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x8e769c8 </usr/include/c++/4.6/bits/stl_algobase.h:86:9, line:92:2>
  (DeclStmt 0x8e76800 <line:87:11, line:88:24>
    0x8e767d0 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x8e768b0 <line:89:11, col:50>
    0x8e76830 "_ValueType1 __tmp =
      (ParenExpr 0x8e76898 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
        (UnaryOperator 0x8e76880 </usr/include/c++/4.6/bits/stl_algobase.h:89:45, col:46> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e76864 <col:46> '_ForwardIterator1' lvalue ParmVar 0x8e73590 '__a' '_ForwardIterator1')))")
  (BinaryOperator 0x8e76938 <line:90:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x8e768d8 </usr/include/c++/4.6/bits/stl_algobase.h:90:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e768c0 <col:12> '_ForwardIterator1' lvalue ParmVar 0x8e73590 '__a' '_ForwardIterator1'))
    (ParenExpr 0x8e76920 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
      (UnaryOperator 0x8e76908 </usr/include/c++/4.6/bits/stl_algobase.h:90:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e768ec <col:33> '_ForwardIterator2' lvalue ParmVar 0x8e735d0 '__b' '_ForwardIterator2'))))
  (BinaryOperator 0x8e769b0 <line:91:11, /usr/include/c++/4.6/bits/move.h:105:36> '<dependent type>' '='
    (UnaryOperator 0x8e76968 </usr/include/c++/4.6/bits/stl_algobase.h:91:11, col:12> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e76950 <col:12> '_ForwardIterator2' lvalue ParmVar 0x8e735d0 '__b' '_ForwardIterator2'))
    (ParenExpr 0x8e76998 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue
      (DeclRefExpr 0x8e7697c </usr/include/c++/4.6/bits/stl_algobase.h:91:32> '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type' lvalue Var 0x8e76830 '__tmp' '_ValueType1':'typename iterator_traits<_ForwardIterator1>::value_type'))))

;
    };
    struct __iter_swap {
        struct __iter_swap;
        template <typename _ForwardIterator1, typename _ForwardIterator2> static void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x8e76ef0 </usr/include/c++/4.6/bits/stl_algobase.h:101:9, line:103:9>
  (CallExpr 0x8e76ec8 <line:102:11, col:26> '<dependent type>'
    (UnresolvedLookupExpr 0x8e76e30 <col:11> '<overloaded function type>' lvalue (ADL) = '1' 0x8e3fbf0 0x8e40130)
    (UnaryOperator 0x8e76e80 <col:16, col:17> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e76e68 <col:17> '_ForwardIterator1' lvalue ParmVar 0x8e76cb0 '__a' '_ForwardIterator1'))
    (UnaryOperator 0x8e76eb0 <col:22, col:23> '<dependent type>' prefix '*'
      (DeclRefExpr 0x8e76e94 <col:23> '_ForwardIterator2' lvalue ParmVar 0x8e76cf0 '__b' '_ForwardIterator2'))))

;
    };
    template <typename _ForwardIterator1, typename _ForwardIterator2> inline void iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b) (CompoundStmt 0x8e791c8 </usr/include/c++/4.6/bits/stl_algobase.h:119:5, line:143:5>
  (DeclStmt 0x8e77240 <line:120:7, line:121:13>
    0x8e77210 "typedef typename iterator_traits<_ForwardIterator1>::value_type _ValueType1")
  (DeclStmt 0x8e773d0 <line:122:7, line:123:13>
    0x8e773a0 "typedef typename iterator_traits<_ForwardIterator2>::value_type _ValueType2")
  (DeclStmt 0x8e77500 <line:135:7, line:136:17>
    0x8e774d0 "typedef typename iterator_traits<_ForwardIterator1>::reference _ReferenceType1")
  (DeclStmt 0x8e77650 <line:137:7, line:138:17>
    0x8e77620 "typedef typename iterator_traits<_ForwardIterator2>::reference _ReferenceType2")
  (CallExpr 0x8e791a0 <line:139:7, line:142:20> '<dependent type>'
    (DependentScopeDeclRefExpr 0x8e79148 <line:139:7, line:142:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x8e7916c <col:12> '_ForwardIterator1' lvalue ParmVar 0x8e76fd0 '__a' '_ForwardIterator1')
    (DeclRefExpr 0x8e79184 <col:17> '_ForwardIterator2' lvalue ParmVar 0x8e77010 '__b' '_ForwardIterator2')))

;
    template <typename _ForwardIterator1, typename _ForwardIterator2> _ForwardIterator2 swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2) (CompoundStmt 0x8e796b0 </usr/include/c++/4.6/bits/stl_algobase.h:161:5, line:172:5>
  (NullStmt 0x8e79488 <line:167:56>)
  (ForStmt 0x8e79660 <line:169:7, line:170:35>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e79508 <line:169:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x8e794c8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e79494 <col:14> '_ForwardIterator1' lvalue ParmVar 0x8e792b0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x8e794ac <col:26> '_ForwardIterator1' lvalue ParmVar 0x8e792f0 '__last1' '_ForwardIterator1'))
    (BinaryOperator 0x8e79590 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x8e79548 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7952c <col:37> '_ForwardIterator1' lvalue ParmVar 0x8e792b0 '__first1' '_ForwardIterator1'))
      (UnaryOperator 0x8e79578 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7955c <col:49> '_ForwardIterator2' lvalue ParmVar 0x8e79330 '__first2' '_ForwardIterator2')))
    (CallExpr 0x8e79638 <line:170:2, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x8e795d0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e770f0)
      (DeclRefExpr 0x8e79604 <col:17> '_ForwardIterator1' lvalue ParmVar 0x8e792b0 '__first1' '_ForwardIterator1')
      (DeclRefExpr 0x8e7961c <col:27> '_ForwardIterator2' lvalue ParmVar 0x8e79330 '__first2' '_ForwardIterator2')))
  (ReturnStmt 0x8e796a0 <line:171:7, col:14>
    (DeclRefExpr 0x8e79684 <col:14> '_ForwardIterator2' lvalue ParmVar 0x8e79330 '__first2' '_ForwardIterator2')))

;
    template <typename _Tp = unsigned int> inline const unsigned int &min(const unsigned int &__a, const unsigned int &__b)template <typename _Tp = int> inline const int &min(const int &__a, const int &__b)template <typename _Tp> inline const _Tp &min(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x8e799e8 </usr/include/c++/4.6/bits/stl_algobase.h:188:5, line:195:5>
  (IfStmt 0x8e799a0 <line:192:7, line:193:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e79950 <line:192:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x8e79910 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
      (DeclRefExpr 0x8e798e0 <col:11> 'const _Tp' lvalue ParmVar 0x8e797b0 '__b' 'const _Tp &')
      (DeclRefExpr 0x8e798f8 <col:17> 'const _Tp' lvalue ParmVar 0x8e79760 '__a' 'const _Tp &'))
    (ReturnStmt 0x8e79990 <line:193:2, col:9>
      (DeclRefExpr 0x8e79974 <col:9> 'const _Tp' lvalue ParmVar 0x8e797b0 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x8e799d8 <line:194:7, col:14>
    (DeclRefExpr 0x8e799bc <col:14> 'const _Tp' lvalue ParmVar 0x8e79760 '__a' 'const _Tp &')))

;
    template <typename _Tp> inline const _Tp &max(const _Tp &__a, const _Tp &__b) (CompoundStmt 0x8e7a118 </usr/include/c++/4.6/bits/stl_algobase.h:211:5, line:218:5>
  (IfStmt 0x8e7a0d0 <line:215:7, line:216:9>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e7a080 <line:215:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x8e7a040 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
      (DeclRefExpr 0x8e7a010 <col:11> 'const _Tp' lvalue ParmVar 0x8e79a90 '__a' 'const _Tp &')
      (DeclRefExpr 0x8e7a028 <col:17> 'const _Tp' lvalue ParmVar 0x8e79f00 '__b' 'const _Tp &'))
    (ReturnStmt 0x8e7a0c0 <line:216:2, col:9>
      (DeclRefExpr 0x8e7a0a4 <col:9> 'const _Tp' lvalue ParmVar 0x8e79f00 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x8e7a108 <line:217:7, col:14>
    (DeclRefExpr 0x8e7a0ec <col:14> 'const _Tp' lvalue ParmVar 0x8e79a90 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &min(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x8e7a4d8 </usr/include/c++/4.6/bits/stl_algobase.h:234:5, line:239:5>
  (IfStmt 0x8e7a490 <line:236:7, line:237:9>
    <<<NULL>>>
    (CallExpr 0x8e7a440 <line:236:11, col:26> '<dependent type>'
      (DeclRefExpr 0x8e7a3f4 <col:11> '_Compare' lvalue ParmVar 0x8e7a2a0 '__comp' '_Compare')
      (DeclRefExpr 0x8e7a40c <col:18> 'const _Tp' lvalue ParmVar 0x8e7a260 '__b' 'const _Tp &')
      (DeclRefExpr 0x8e7a424 <col:23> 'const _Tp' lvalue ParmVar 0x8e7a210 '__a' 'const _Tp &'))
    (ReturnStmt 0x8e7a480 <line:237:2, col:9>
      (DeclRefExpr 0x8e7a464 <col:9> 'const _Tp' lvalue ParmVar 0x8e7a260 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x8e7a4c8 <line:238:7, col:14>
    (DeclRefExpr 0x8e7a4ac <col:14> 'const _Tp' lvalue ParmVar 0x8e7a210 '__a' 'const _Tp &')))

;
    template <typename _Tp, typename _Compare> inline const _Tp &max(const _Tp &__a, const _Tp &__b, _Compare __comp) (CompoundStmt 0x8e7a868 </usr/include/c++/4.6/bits/stl_algobase.h:255:5, line:260:5>
  (IfStmt 0x8e7a820 <line:257:7, line:258:9>
    <<<NULL>>>
    (CallExpr 0x8e7a7d0 <line:257:11, col:26> '<dependent type>'
      (DeclRefExpr 0x8e7a784 <col:11> '_Compare' lvalue ParmVar 0x8e7a660 '__comp' '_Compare')
      (DeclRefExpr 0x8e7a79c <col:18> 'const _Tp' lvalue ParmVar 0x8e7a5d0 '__a' 'const _Tp &')
      (DeclRefExpr 0x8e7a7b4 <col:23> 'const _Tp' lvalue ParmVar 0x8e7a620 '__b' 'const _Tp &'))
    (ReturnStmt 0x8e7a810 <line:258:2, col:9>
      (DeclRefExpr 0x8e7a7f4 <col:9> 'const _Tp' lvalue ParmVar 0x8e7a620 '__b' 'const _Tp &'))
    <<<NULL>>>)
  (ReturnStmt 0x8e7a858 <line:259:7, col:14>
    (DeclRefExpr 0x8e7a83c <col:14> 'const _Tp' lvalue ParmVar 0x8e7a5d0 '__a' 'const _Tp &')))

;
    template <typename _Iterator = unsigned long *> struct _Niter_base :  _Iter_base<unsigned long *, __is_normal_iterator<unsigned long *>::__value> {
        struct _Niter_base;
    }
template <typename _Iterator> struct _Niter_base :  _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value> {
        struct _Niter_base;
    };
    template <typename _Iterator = unsigned long *> inline typename _Niter_base<unsigned long *>::iterator_type __niter_base(unsigned long *__it) (CompoundStmt 0x92fa848 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x92fa838 <col:7, col:55>
    (CallExpr 0x92fa808 <col:14, col:55> 'iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x92fa7f8 <col:14, col:43> 'iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92fa79c <col:14, col:43> 'iterator_type (unsigned long *)' lvalue CXXMethod 0x92f8400 '_S_base' 'iterator_type (unsigned long *)'))
      (ImplicitCastExpr 0x92fa828 <col:51> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x92fa7bc <col:51> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92f8510 '__it' 'unsigned long *':'unsigned long *')))))

template <typename _Iterator> inline typename _Niter_base<_Iterator>::iterator_type __niter_base(_Iterator __it) (CompoundStmt 0x8e7b640 </usr/include/c++/4.6/bits/stl_algobase.h:272:5, col:58>
  (ReturnStmt 0x8e7b630 <col:7, col:55>
    (CallExpr 0x8e7b610 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e7b5d0 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e7b5f4 <col:51> '_Iterator' lvalue ParmVar 0x8e7ae80 '__it' '_Iterator'))))

;
    template <typename _Iterator> struct _Miter_base :  _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value> {
        struct _Miter_base;
    };
    template <typename _Iterator> inline typename _Miter_base<_Iterator>::iterator_type __miter_base(_Iterator __it) (CompoundStmt 0x8e7bed0 </usr/include/c++/4.6/bits/stl_algobase.h:283:5, col:58>
  (ReturnStmt 0x8e7bec0 <col:7, col:55>
    (CallExpr 0x8e7bea0 <col:14, col:55> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e7be60 <col:14, col:43> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e7be84 <col:51> '_Iterator' lvalue ParmVar 0x8e7bc60 '__it' '_Iterator'))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e7df78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x8e7db40 <line:326:4, col:68>
    0x8e7db10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x8e7df28 <line:327:4, line:332:6>
    (DeclStmt 0x8e7dc38 <line:327:8, col:40>
      0x8e7db70 "_Distance __n =
        (CXXOperatorCallExpr 0x8e7dc10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x8e7dbd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x8e7dba4 <col:24> '_II' lvalue ParmVar 0x8e7d8a0 '__last' '_II')
          (DeclRefExpr 0x8e7dbbc <col:33> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e7dcb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x8e7dc78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e7dc48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x8e7db70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x8e7dc60 <col:48> 'int' 0))
    (UnaryOperator 0x8e7dcf8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x8e7dcdc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x8e7db70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x8e7df08 <line:328:6, line:332:6>
      (BinaryOperator 0x8e7de90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x8e7dd28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e7dd0c <col:9> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI'))
        (UnaryOperator 0x8e7dd58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e7dd3c <col:21> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II')))
      (UnaryOperator 0x8e7dec0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7dea8 <col:10> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II'))
      (UnaryOperator 0x8e7def0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7ded4 <col:10> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI'))))
  (ReturnStmt 0x8e7df68 <line:333:4, col:11>
    (DeclRefExpr 0x8e7df4c <col:11> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e7d4e8 </usr/include/c++/4.6/bits/stl_algobase.h:297:9, line:301:2>
  (ForStmt 0x8e7d498 <line:298:4, line:299:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e7d380 <line:298:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e7d340 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e7d310 <col:11> '_II' lvalue ParmVar 0x8e7c320 '__first' '_II')
      (DeclRefExpr 0x8e7d328 <col:22> '_II' lvalue ParmVar 0x8e7c360 '__last' '_II'))
    (BinaryOperator 0x8e7d408 <col:30, col:44> '<dependent type>' ','
      (UnaryOperator 0x8e7d3c0 <col:30, col:32> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7d3a4 <col:32> '_OI' lvalue ParmVar 0x8e7c3a0 '__result' '_OI'))
      (UnaryOperator 0x8e7d3f0 <col:42, col:44> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7d3d4 <col:44> '_II' lvalue ParmVar 0x8e7c320 '__first' '_II')))
    (BinaryOperator 0x8e7d480 <line:299:6, col:19> '<dependent type>' '='
      (UnaryOperator 0x8e7d438 <col:6, col:7> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e7d420 <col:7> '_OI' lvalue ParmVar 0x8e7c3a0 '__result' '_OI'))
      (UnaryOperator 0x8e7d468 <col:18, col:19> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e7d44c <col:19> '_II' lvalue ParmVar 0x8e7c320 '__first' '_II'))))
  (ReturnStmt 0x8e7d4d8 <line:300:4, col:11>
    (DeclRefExpr 0x8e7d4bc <col:11> '_OI' lvalue ParmVar 0x8e7c3a0 '__result' '_OI')))

;
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _II, typename _OI> static _OI __copy_m(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e7df78 </usr/include/c++/4.6/bits/stl_algobase.h:325:9, line:334:2>
  (DeclStmt 0x8e7db40 <line:326:4, col:68>
    0x8e7db10 "typedef typename iterator_traits<_II>::difference_type _Distance")
  (ForStmt 0x8e7df28 <line:327:4, line:332:6>
    (DeclStmt 0x8e7dc38 <line:327:8, col:40>
      0x8e7db70 "_Distance __n =
        (CXXOperatorCallExpr 0x8e7dc10 <col:24, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x8e7dbd8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x8e7dba4 <col:24> '_II' lvalue ParmVar 0x8e7d8a0 '__last' '_II')
          (DeclRefExpr 0x8e7dbbc <col:33> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II'))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e7dcb8 <col:42, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x8e7dc78 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e7dc48 <col:42> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x8e7db70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type')
      (IntegerLiteral 0x8e7dc60 <col:48> 'int' 0))
    (UnaryOperator 0x8e7dcf8 <col:51, col:53> '<dependent type>' prefix '--'
      (DeclRefExpr 0x8e7dcdc <col:53> '_Distance':'typename iterator_traits<_II>::difference_type' lvalue Var 0x8e7db70 '__n' '_Distance':'typename iterator_traits<_II>::difference_type'))
    (CompoundStmt 0x8e7df08 <line:328:6, line:332:6>
      (BinaryOperator 0x8e7de90 <line:329:8, col:21> '<dependent type>' '='
        (UnaryOperator 0x8e7dd28 <col:8, col:9> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e7dd0c <col:9> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI'))
        (UnaryOperator 0x8e7dd58 <col:20, col:21> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e7dd3c <col:21> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II')))
      (UnaryOperator 0x8e7dec0 <line:330:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7dea8 <col:10> '_II' lvalue ParmVar 0x8e7d860 '__first' '_II'))
      (UnaryOperator 0x8e7def0 <line:331:8, col:10> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e7ded4 <col:10> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI'))))
  (ReturnStmt 0x8e7df68 <line:333:4, col:11>
    (DeclRefExpr 0x8e7df4c <col:11> '_OI' lvalue ParmVar 0x8e7d8e0 '__result' '_OI')))

;
        inline std::__copy_move<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move {
        struct __copy_move;
        template <typename _Tp> static _Tp *__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x8e7f8d8 </usr/include/c++/4.6/bits/stl_algobase.h:363:9, line:368:2>
  (DeclStmt 0x8e7f558 <line:364:4, col:43>
    0x8e7f490 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x8e7f530 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e7f4f8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e7f4c4 <col:27> 'const _Tp *' lvalue ParmVar 0x8e7f280 '__last' 'const _Tp *')
        (DeclRefExpr 0x8e7f4dc <col:36> 'const _Tp *' lvalue ParmVar 0x8e7f230 '__first' 'const _Tp *'))")
  (IfStmt 0x8e7f818 <line:365:4, line:366:61>
    <<<NULL>>>
    (ImplicitCastExpr 0x8e7f590 <line:365:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x8e7f580 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x8e7f568 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x8e7f490 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x8e7f7f0 <line:366:6, col:61> '<dependent type>'
      (DeclRefExpr 0x8e7f734 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (DeclRefExpr 0x8e7f74c <col:24> '_Tp *' lvalue ParmVar 0x8e7f310 '__result' '_Tp *')
      (DeclRefExpr 0x8e7f764 <col:34> 'const _Tp *' lvalue ParmVar 0x8e7f230 '__first' 'const _Tp *')
      (BinaryOperator 0x8e7f7d8 <col:43, col:57> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x8e7f788 <col:43, col:53> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x8e7f7c8 <col:57> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x8e7f7b8 <col:57> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x8e7f7a0 <col:57> 'const ptrdiff_t':'const int' lvalue Var 0x8e7f490 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x8e7f8c8 <line:367:4, col:22>
    (CXXOperatorCallExpr 0x8e7f8a0 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e7f868 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
      (DeclRefExpr 0x8e7f834 <col:11> '_Tp *' lvalue ParmVar 0x8e7f310 '__result' '_Tp *')
      (DeclRefExpr 0x8e7f84c <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x8e7f490 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e80928 </usr/include/c++/4.6/bits/stl_algobase.h:374:5, line:385:5>
  (DeclStmt 0x8e7fcf0 <line:375:7, col:68>
    0x8e7fcc0 "typedef typename iterator_traits<_II>::value_type _ValueTypeI")
  (DeclStmt 0x8e7fe80 <line:376:7, col:68>
    0x8e7fe50 "typedef typename iterator_traits<_OI>::value_type _ValueTypeO")
  (DeclStmt 0x8e801f0 <line:377:7, col:73>
    0x8e801c0 "typedef typename iterator_traits<_II>::iterator_category _Category")
  (DeclStmt 0x8e80680 <line:378:7, line:381:58>
    0x8e80210 "const bool __simple =
      (ParenExpr 0x8e80668 <line:378:29, line:381:57> '<dependent type>'
        (BinaryOperator 0x8e80650 <line:378:30, line:381:50> '<dependent type>' '&&'
          (BinaryOperator 0x8e804a8 <line:378:30, line:380:45> '<dependent type>' '&&'
            (BinaryOperator 0x8e80388 <line:378:30, line:379:45> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x8e80268 <line:378:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x8e80360 <line:379:26, col:45> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x8e80480 <line:380:26, col:45> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x8e80628 <line:381:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x8e80918 <line:383:7, line:384:70>
    (CallExpr 0x8e808f0 <line:383:14, line:384:70> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e80880 <line:383:14, line:384:36> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e808a4 <col:45> '_II' lvalue ParmVar 0x8e7fa00 '__first' '_II')
      (DeclRefExpr 0x8e808bc <col:54> '_II' lvalue ParmVar 0x8e7fa40 '__last' '_II')
      (DeclRefExpr 0x8e808d4 <col:62> '_OI' lvalue ParmVar 0x8e7fa80 '__result' '_OI'))))

;
    template <typename _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7e38 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x8eb7e20 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x8eb7de0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x8eb5080 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb7e10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x8eb7df8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7ec8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x8eb7eb8 <col:9, col:24>
    (BinaryOperator 0x8eb7ea0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb7e80 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e4c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5230 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7e90 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e64 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5280 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7f58 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x8eb7f48 <col:9, col:23>
    (BinaryOperator 0x8eb7f30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb7f10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7edc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53a0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7f20 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7ef4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53f0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb80c0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x8eb80b0 <col:9, col:39>
    (CallExpr 0x8eb8058 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x8eb8048 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb7fec <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da1060 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea2610 'wmemcmp')))
      (ImplicitCastExpr 0x8eb8080 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fa4 <col:24> 'const char_type *' lvalue ParmVar 0x8eb54f0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8090 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fbc <col:30> 'const char_type *' lvalue ParmVar 0x8eb5540 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb80a0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb7fd4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb5580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb81c8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x8eb81b8 <col:9, col:26>
    (CallExpr 0x8eb8188 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x8eb8178 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8124 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x8da0990 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x8e9db90 'wcslen')))
      (ImplicitCastExpr 0x8eb81a8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb810c <col:23> 'const char_type *' lvalue ParmVar 0x8eb5690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb8308 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x8eb82f8 <col:9, col:37>
    (ImplicitCastExpr 0x8eb82e8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x8eb8290 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x8eb8280 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb8260 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da0eb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2a70 'wmemchr')))
        (ImplicitCastExpr 0x8eb82b8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb8218 <col:24> 'const char_type *' lvalue ParmVar 0x8eb5790 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x8eb82c8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb8230 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5820 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x8eb82d8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8248 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb57d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb8470 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x8eb8460 <col:9, col:40>
    (CallExpr 0x8eb8408 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x8eb83f8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb839c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da13b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea26f0 'wmemmove')))
      (ImplicitCastExpr 0x8eb8430 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb8354 <col:25> 'char_type *' lvalue ParmVar 0x8eb7380 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8440 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb836c <col:31> 'const char_type *' lvalue ParmVar 0x8eb73d0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8450 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8384 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x8eb7410 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb85b0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x8eb85a0 <col:9, col:39>
    (CallExpr 0x8eb8548 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8538 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8504 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x8da1210 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x8ea2680 'wmemcpy')))
      (ImplicitCastExpr 0x8eb8570 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84bc <col:24> 'char_type *' lvalue ParmVar 0x8eb7520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8580 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84d4 <col:30> 'const char_type *' lvalue ParmVar 0x8eb7570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8590 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb84ec <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb75b0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb8710 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x8eb8700 <col:9, col:37>
    (CallExpr 0x8eb86a8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8698 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8644 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da1570 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2760 'wmemset')))
      (ImplicitCastExpr 0x8eb86d0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb85fc <col:24> 'char_type *' lvalue ParmVar 0x8eb7690 '__s' 'char_type *'))
      (ImplicitCastExpr 0x8eb86e0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb8614 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x8eb7710 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x8eb86f0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb862c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb76d0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb8790 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x8eb8780 <col:9, col:29>
    (CXXFunctionalCastExpr 0x8eb8768 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x8eb8758 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x8eb8748 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8730 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7880 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb8810 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x8eb8800 <col:9, col:28>
    (CXXFunctionalCastExpr 0x8eb87e8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x8eb87d8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x8eb87c8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb87b0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb79a0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb88a0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x8eb8890 <col:9, col:24>
    (BinaryOperator 0x8eb8878 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb8858 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8824 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7ac0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb8868 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb883c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7b10 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb8918 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x8eb8908 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb88f0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x8eb88d0 </usr/include/wctype.h:39:16, col:28> 'unsigned int'
        (IntegerLiteral 0x8eb88b8 <col:17> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb8af0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x8eb8ae0 <col:9, col:46>
    (ConditionalOperator 0x8eb8ac0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x8eb8a38 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x8eb8a28 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb892c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x8eb7bb0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x8eb8944 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x8eb8a60 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x8eb89c8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x8eb89b8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb895c <col:33> 'int_type (void)' lvalue CXXMethod 0x8eb7c50 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x8eb8ab0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8eb8a70 <col:42> 'int' 0))
      (ImplicitCastExpr 0x8eb8aa0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8a88 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')))))


    }
template <typename _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3cd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x8eb3cc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x8eb3c80 <col:9> 'char_type':'char' lvalue ParmVar 0x8eb14e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb3cb0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x8eb3c98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3d88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x8eb3d78 <col:9, col:24>
    (BinaryOperator 0x8eb3d60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb3d30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3cec <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1690 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3d50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x8eb16e0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3e38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x8eb3e28 <col:9, col:23>
    (BinaryOperator 0x8eb3e10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb3de0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3dd0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1800 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3e00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3df0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3db4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x8eb1850 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb3f60 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x8eb3f50 <col:9, col:48>
    (CallExpr 0x8eb3ed8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x8eb3ec8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb3e4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x8eb3f10 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f00 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e64 <col:33> 'const char_type *' lvalue ParmVar 0x8eb1950 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f30 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f20 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e7c <col:39> 'const char_type *' lvalue ParmVar 0x8eb19a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f40 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb3e94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x8eb19e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb40f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x8eb40e8 <col:9, col:36>
    (CallExpr 0x8eb40b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x8eb40a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb4054 <col:16> 'unsigned int (const char *)' lvalue Function 0x8eb3f80 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x8eb40d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb406c <col:33> 'const char_type *' lvalue ParmVar 0x8eb1b20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb43e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x8eb43d8 <col:9, col:77>
    (CXXStaticCastExpr 0x8eb43c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x8eb4338 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x8eb4328 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb42a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x8eb4140 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb4370 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4360 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb42bc <col:63> 'const char_type *' lvalue ParmVar 0x8eb1c40 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4390 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb4380 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb42d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x8eb1cd0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x8eb43a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb42ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1c80 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb4538 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x8eb4528 <col:9, col:74>
    (CXXStaticCastExpr 0x8eb4510 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4488 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x8eb4478 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb43fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb44c0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb44b0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4414 <col:58> 'char_type *' lvalue ParmVar 0x8eb1e30 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb44e0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb44d0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb442c <col:64> 'const char_type *' lvalue ParmVar 0x8eb1e80 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb44f0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4444 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1ec0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb47d8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x8eb47c8 <col:9, col:73>
    (CXXStaticCastExpr 0x8eb47b0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4728 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x8eb4718 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb46b4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb4760 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb4750 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46cc <col:57> 'char_type *' lvalue ParmVar 0x8eb2000 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb4780 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4770 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46e4 <col:63> 'const char_type *' lvalue ParmVar 0x8eb2050 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4790 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb46fc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x8eb2090 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb4928 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x8eb4918 <col:9, col:71>
    (CXXStaticCastExpr 0x8eb4900 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4878 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x8eb4868 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb47ec <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x8e8a1e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb48b0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb48a0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4804 <col:57> 'char_type *' lvalue ParmVar 0x8eb2170 '__s' 'char_type *')))
        (ImplicitCastExpr 0x8eb48d0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb48c0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb481c <col:62> 'char_type':'char' lvalue ParmVar 0x8eb21f0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x8eb48e0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4834 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x8eb21b0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb49a8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x8eb4998 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb4980 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x8eb4970 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x8eb4960 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x8eb493c <col:39> 'const int_type':'const int' lvalue ParmVar 0x8eb2380 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb4a60 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x8eb4a50 <col:9, col:69>
    (CXXStaticCastExpr 0x8eb4a38 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x8eb4a28 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x8eb4a08 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x8eb49f8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x8eb49e8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x8eb49bc <col:65> 'const char_type':'const char' lvalue ParmVar 0x8eb24a0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb4af0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x8eb4ae0 <col:9, col:24>
    (BinaryOperator 0x8eb4ac8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb4aa8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a74 <col:16> 'const int_type':'const int' lvalue ParmVar 0x8eb3960 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb4ab8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a8c <col:24> 'const int_type':'const int' lvalue ParmVar 0x8eb39b0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb4b68 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x8eb4b58 <col:9, col:56>
    (CXXStaticCastExpr 0x8eb4b40 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x8eb4b20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x8eb4b08 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb4cc8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x8eb4cb8 <col:9, col:37>
    (ConditionalOperator 0x8eb4c98 <col:16, col:37> 'int'
      (ParenExpr 0x8eb4c40 <col:16, col:29> '_Bool'
        (BinaryOperator 0x8eb4c28 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x8eb4c18 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x8eb4b7c <col:17> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &'))
          (CallExpr 0x8eb4bf8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x8eb4be8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb4b94 <col:24> 'int_type (void)' lvalue CXXMethod 0x8eb3af0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x8eb4c58 <col:33> 'int' 0)
      (ImplicitCastExpr 0x8eb4c88 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4c70 <col:37> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &')))))


    }
template <typename _CharT> struct char_traits;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits> class ostreambuf_iterator;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator<_CharT, char_traits<_CharT> >);
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT *);
    template <bool _IsMove, typename _II, typename _OI> inline _OI __copy_move_a2(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e83188 </usr/include/c++/4.6/bits/stl_algobase.h:419:5, line:423:5>
  (ReturnStmt 0x8e83178 <line:420:7, line:422:39>
    (CXXUnresolvedConstructExpr 0x8e83158 <line:420:14, line:422:39> '_OI'
      (CallExpr 0x8e83130 <line:420:18, line:422:38> '<dependent type>'
        (UnresolvedLookupExpr 0x8e82f30 <line:420:18, col:44> '<dependent type>' lvalue (no ADL) = '1' 0x8e7fba0)
        (CallExpr 0x8e83000 <col:46, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x8e82fb0 <col:46, col:51> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e82fe4 <col:64> '_II' lvalue ParmVar 0x8e82d40 '__first' '_II'))
        (CallExpr 0x8e83088 <line:421:11, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x8e83038 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e8306c <col:29> '_II' lvalue ParmVar 0x8e82d80 '__last' '_II'))
        (CallExpr 0x8e83110 <line:422:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x8e830c0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e830f4 <col:29> '_OI' lvalue ParmVar 0x8e82dc0 '__result' '_OI'))))))

;
    template <typename _II = std::_Bit_const_iterator, typename _OI = std::_Bit_iterator> inline std::_Bit_iterator copy(std::_Bit_const_iterator __first, std::_Bit_const_iterator __last, std::_Bit_iterator __result)template <typename _II = unsigned long *, typename _OI = unsigned long *> inline unsigned long *copy(unsigned long *__first, unsigned long *__last, unsigned long *__result)template <typename _II, typename _OI> inline _OI copy(_II __first, _II __last, _OI __result) (CompoundStmt 0x8e83c58 </usr/include/c++/4.6/bits/stl_algobase.h:445:5, line:455:5>
  (NullStmt 0x8e83408 <line:450:54>)
  (ReturnStmt 0x8e83c48 <line:452:7, line:454:18>
    (ParenExpr 0x8e83c30 <line:452:14, line:454:18> '<dependent type>'
      (CallExpr 0x8e83c08 <line:452:15, line:454:17> '<dependent type>'
        (UnresolvedLookupExpr 0x8e83a68 <line:452:15, col:67> '<dependent type>' lvalue (no ADL) = '1' 0x8e81a90 0x8e822e0 0x8e82c00 0x8e82eb0)
        (CallExpr 0x8e83b48 <line:453:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x8e83af8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7bd70)
          (DeclRefExpr 0x8e83b2c <col:27> '_II' lvalue ParmVar 0x8e83260 '__first' '_II'))
        (CallExpr 0x8e83bd0 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x8e83b80 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7bd70)
          (DeclRefExpr 0x8e83bb4 <col:55> '_II' lvalue ParmVar 0x8e832a0 '__last' '_II'))
        (DeclRefExpr 0x8e83bf0 <line:454:9> '_OI' lvalue ParmVar 0x8e832e0 '__result' '_OI')))))

;
    template <bool = false, bool = false, typename  = std::random_access_iterator_tag> struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e85c38 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x8e85888 <line:529:4, col:55>
    0x8e85850 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x8e85be8 <line:530:4, line:531:23>
    (BinaryOperator 0x8e85a60 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x8e85898 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x8e85918 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x8e858e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e858b0 <col:15> '_BI1' lvalue ParmVar 0x8e847a0 '__last' '_BI1')
        (DeclRefExpr 0x8e858c8 <col:24> '_BI1' lvalue ParmVar 0x8e84760 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e85ae8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x8e85aa8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e85a78 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x8e85a90 <col:39> 'int' 0))
    (UnaryOperator 0x8e85b28 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x8e85b0c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x8e85bd0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x8e85b70 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e85b58 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e85b3c <col:9> '_BI2' lvalue ParmVar 0x8e847e0 '__result' '_BI2')))
      (UnaryOperator 0x8e85bb8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e85ba0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e85b84 <col:23> '_BI1' lvalue ParmVar 0x8e847a0 '__last' '_BI1')))))
  (ReturnStmt 0x8e85c28 <line:532:4, col:11>
    (DeclRefExpr 0x8e85c0c <col:11> '_BI2' lvalue ParmVar 0x8e847e0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    }
template <bool, bool, typename > struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e843f0 </usr/include/c++/4.6/bits/stl_algobase.h:500:9, line:504:2>
  (WhileStmt 0x8e843b0 <line:501:4, line:502:23>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e842e0 <line:501:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e842a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e84270 <col:11> '_BI1' lvalue ParmVar 0x8e840b0 '__first' '_BI1')
      (DeclRefExpr 0x8e84288 <col:22> '_BI1' lvalue ParmVar 0x8e840f0 '__last' '_BI1'))
    (BinaryOperator 0x8e84398 <line:502:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x8e84338 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e84320 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e84304 <col:9> '_BI2' lvalue ParmVar 0x8e84130 '__result' '_BI2')))
      (UnaryOperator 0x8e84380 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e84368 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e8434c <col:23> '_BI1' lvalue ParmVar 0x8e840f0 '__last' '_BI1')))))
  (ReturnStmt 0x8e843e0 <line:503:4, col:11>
    (DeclRefExpr 0x8e843c4 <col:11> '_BI2' lvalue ParmVar 0x8e84130 '__result' '_BI2')))

;
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _BI1, typename _BI2> static _BI2 __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e85c38 </usr/include/c++/4.6/bits/stl_algobase.h:528:9, line:533:2>
  (DeclStmt 0x8e85888 <line:529:4, col:55>
    0x8e85850 "typename iterator_traits<_BI1>::difference_type __n")
  (ForStmt 0x8e85be8 <line:530:4, line:531:23>
    (BinaryOperator 0x8e85a60 <line:530:9, col:24> '<dependent type>' '='
      (DeclRefExpr 0x8e85898 <col:9> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (CXXOperatorCallExpr 0x8e85918 <col:15, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x8e858e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e858b0 <col:15> '_BI1' lvalue ParmVar 0x8e847a0 '__last' '_BI1')
        (DeclRefExpr 0x8e858c8 <col:24> '_BI1' lvalue ParmVar 0x8e84760 '__first' '_BI1')))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e85ae8 <col:33, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x8e85aa8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e85a78 <col:33> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type')
      (IntegerLiteral 0x8e85a90 <col:39> 'int' 0))
    (UnaryOperator 0x8e85b28 <col:42, col:44> '<dependent type>' prefix '--'
      (DeclRefExpr 0x8e85b0c <col:44> 'typename iterator_traits<_BI1>::difference_type' lvalue Var 0x8e85850 '__n' 'typename iterator_traits<_BI1>::difference_type'))
    (BinaryOperator 0x8e85bd0 <line:531:6, col:23> '<dependent type>' '='
      (UnaryOperator 0x8e85b70 <col:6, col:9> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e85b58 <col:7, col:9> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e85b3c <col:9> '_BI2' lvalue ParmVar 0x8e847e0 '__result' '_BI2')))
      (UnaryOperator 0x8e85bb8 <col:20, col:23> '<dependent type>' prefix '*'
        (UnaryOperator 0x8e85ba0 <col:21, col:23> '<dependent type>' prefix '--'
          (DeclRefExpr 0x8e85b84 <col:23> '_BI1' lvalue ParmVar 0x8e847a0 '__last' '_BI1')))))
  (ReturnStmt 0x8e85c28 <line:532:4, col:11>
    (DeclRefExpr 0x8e85c0c <col:11> '_BI2' lvalue ParmVar 0x8e847e0 '__result' '_BI2')))

;
        inline std::__copy_move_backward<false, false, std::random_access_iterator_tag> &operator=(const std::__copy_move_backward<false, false, std::random_access_iterator_tag> &) throw();
    };
    struct __copy_move_backward {
        struct __copy_move_backward;
        template <typename _Tp> static _Tp *__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result) (CompoundStmt 0x8e86648 </usr/include/c++/4.6/bits/stl_algobase.h:558:9, line:563:2>
  (DeclStmt 0x8e863e8 <line:559:4, col:43>
    0x8e86320 "const ptrdiff_t _Num =
      (CXXOperatorCallExpr 0x8e863c0 <col:27, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e86388 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e86354 <col:27> 'const _Tp *' lvalue ParmVar 0x8e86160 '__last' 'const _Tp *')
        (DeclRefExpr 0x8e8636c <col:36> 'const _Tp *' lvalue ParmVar 0x8e86110 '__first' 'const _Tp *'))")
  (IfStmt 0x8e86588 <line:560:4, line:561:68>
    <<<NULL>>>
    (ImplicitCastExpr 0x8e86420 <line:560:8> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x8e86410 <col:8> 'ptrdiff_t':'int' <LValueToRValue>
        (DeclRefExpr 0x8e863f8 <col:8> 'const ptrdiff_t':'const int' lvalue Var 0x8e86320 '_Num' 'const ptrdiff_t':'const int')))
    (CallExpr 0x8e86560 <line:561:6, col:68> '<dependent type>'
      (DeclRefExpr 0x8e8642c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
      (CXXOperatorCallExpr 0x8e864b0 <col:24, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x8e86478 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e86444 <col:24> '_Tp *' lvalue ParmVar 0x8e861d0 '__result' '_Tp *')
        (DeclRefExpr 0x8e8645c <col:35> 'const ptrdiff_t':'const int' lvalue Var 0x8e86320 '_Num' 'const ptrdiff_t':'const int'))
      (DeclRefExpr 0x8e864d4 <col:41> 'const _Tp *' lvalue ParmVar 0x8e86110 '__first' 'const _Tp *')
      (BinaryOperator 0x8e86548 <col:50, col:64> 'unsigned int' '*'
        (UnaryExprOrTypeTraitExpr 0x8e864f8 <col:50, col:60> 'unsigned int' sizeof '_Tp')
        (ImplicitCastExpr 0x8e86538 <col:64> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x8e86528 <col:64> 'ptrdiff_t':'int' <LValueToRValue>
            (DeclRefExpr 0x8e86510 <col:64> 'const ptrdiff_t':'const int' lvalue Var 0x8e86320 '_Num' 'const ptrdiff_t':'const int')))))
    <<<NULL>>>)
  (ReturnStmt 0x8e86638 <line:562:4, col:22>
    (CXXOperatorCallExpr 0x8e86610 <col:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e865d8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8e865a4 <col:11> '_Tp *' lvalue ParmVar 0x8e861d0 '__result' '_Tp *')
      (DeclRefExpr 0x8e865bc <col:22> 'const ptrdiff_t':'const int' lvalue Var 0x8e86320 '_Num' 'const ptrdiff_t':'const int'))))

;
    };
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e879d8 </usr/include/c++/4.6/bits/stl_algobase.h:569:5, line:582:5>
  (DeclStmt 0x8e870f0 <line:570:7, col:69>
    0x8e870c0 "typedef typename iterator_traits<_BI1>::value_type _ValueType1")
  (DeclStmt 0x8e87220 <line:571:7, col:69>
    0x8e871f0 "typedef typename iterator_traits<_BI2>::value_type _ValueType2")
  (DeclStmt 0x8e87350 <line:572:7, col:74>
    0x8e87320 "typedef typename iterator_traits<_BI1>::iterator_category _Category")
  (DeclStmt 0x8e87730 <line:573:7, line:576:58>
    0x8e87370 "const bool __simple =
      (ParenExpr 0x8e87718 <line:573:29, line:576:57> '<dependent type>'
        (BinaryOperator 0x8e87700 <line:573:30, line:576:50> '<dependent type>' '&&'
          (BinaryOperator 0x8e875a8 <line:573:30, line:575:46> '<dependent type>' '&&'
            (BinaryOperator 0x8e874b8 <line:573:30, line:574:46> '<dependent type>' '&&'
              (UnaryTypeTraitExpr 0x8e873c8 <line:573:30, col:54> '_Bool')
              (DependentScopeDeclRefExpr 0x8e87490 <line:574:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x8e87580 <line:575:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x8e876d8 <line:576:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x8e879c8 <line:578:7, line:581:18>
    (CallExpr 0x8e879a0 <line:578:14, line:581:18> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e87930 <line:578:14, line:579:45> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e87954 <col:59> '_BI1' lvalue ParmVar 0x8e86e30 '__first' '_BI1')
      (DeclRefExpr 0x8e8796c <line:580:10> '_BI1' lvalue ParmVar 0x8e86e70 '__last' '_BI1')
      (DeclRefExpr 0x8e87984 <line:581:10> '_BI2' lvalue ParmVar 0x8e86eb0 '__result' '_BI2'))))

;
    template <bool _IsMove, typename _BI1, typename _BI2> inline _BI2 __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e88190 </usr/include/c++/4.6/bits/stl_algobase.h:587:5, line:591:5>
  (ReturnStmt 0x8e88180 <line:588:7, line:590:34>
    (CXXUnresolvedConstructExpr 0x8e88160 <line:588:14, line:590:34> '_BI2'
      (CallExpr 0x8e88138 <line:588:19, line:590:33> '<dependent type>'
        (UnresolvedLookupExpr 0x8e87d00 <line:588:19, col:54> '<dependent type>' lvalue (no ADL) = '1' 0x8e86fa0)
        (CallExpr 0x8e87dd0 <line:589:6, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x8e87d80 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e87db4 <col:24> '_BI1' lvalue ParmVar 0x8e87b10 '__first' '_BI1'))
        (CallExpr 0x8e88090 <col:34, col:58> '<dependent type>'
          (UnresolvedLookupExpr 0x8e88040 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e88074 <col:52> '_BI1' lvalue ParmVar 0x8e87b50 '__last' '_BI1'))
        (CallExpr 0x8e88118 <line:590:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x8e880c8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e880fc <col:24> '_BI2' lvalue ParmVar 0x8e87b90 '__result' '_BI2'))))))

;
    template <typename _BI1, typename _BI2> inline _BI2 copy_backward(_BI1 __first, _BI1 __last, _BI2 __result) (CompoundStmt 0x8e88718 </usr/include/c++/4.6/bits/stl_algobase.h:614:5, line:626:5>
  (NullStmt 0x8e88418 <line:621:54>)
  (ReturnStmt 0x8e88708 <line:623:7, line:625:18>
    (ParenExpr 0x8e886f0 <line:623:14, line:625:18> '<dependent type>'
      (CallExpr 0x8e886c8 <line:623:15, line:625:17> '<dependent type>'
        (UnresolvedLookupExpr 0x8e88538 <line:623:15, col:77> '<dependent type>' lvalue (no ADL) = '1' 0x8e87c80)
        (CallExpr 0x8e88608 <line:624:9, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x8e885b8 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7bd70)
          (DeclRefExpr 0x8e885ec <col:27> '_BI1' lvalue ParmVar 0x8e88270 '__first' '_BI1'))
        (CallExpr 0x8e88690 <col:37, col:61> '<dependent type>'
          (UnresolvedLookupExpr 0x8e88640 <col:37, col:42> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7bd70)
          (DeclRefExpr 0x8e88674 <col:55> '_BI1' lvalue ParmVar 0x8e882b0 '__last' '_BI1'))
        (DeclRefExpr 0x8e886b0 <line:625:9> '_BI2' lvalue ParmVar 0x8e882f0 '__result' '_BI2')))))

;
    template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x8e88e28 </usr/include/c++/4.6/bits/stl_algobase.h:674:5, line:677:5>
  (ForStmt 0x8e88e00 <line:675:7, line:676:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e88d48 <line:675:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8e88d08 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e88cd4 <col:14> '_ForwardIterator' lvalue ParmVar 0x8e88ac0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x8e88cec <col:25> '_ForwardIterator' lvalue ParmVar 0x8e88b00 '__last' '_ForwardIterator'))
    (UnaryOperator 0x8e88d88 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x8e88d6c <col:35> '_ForwardIterator' lvalue ParmVar 0x8e88ac0 '__first' '_ForwardIterator'))
    (BinaryOperator 0x8e88de8 <line:676:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x8e88db8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e88d9c <col:3> '_ForwardIterator' lvalue ParmVar 0x8e88ac0 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x8e88dcc <col:13> 'const _Tp' lvalue ParmVar 0x8e88b70 '__value' 'const _Tp &'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type __fill_a(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x92faaf8 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x92fa920 <line:685:7, col:32>
    0x92fa8c0 "const int __tmp =
      (ImplicitCastExpr 0x92fa910 <col:25> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x92fa8f4 <col:25> 'const int':'const int' lvalue ParmVar 0x92fa500 '__value' 'const int &'))")
  (ForStmt 0x92faad0 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x92fa9c0 <line:686:14, col:25> '_Bool' '!='
      (ImplicitCastExpr 0x92fa9a0 <col:14> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x92fa96c <col:14> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92fa450 '__first' 'unsigned long *':'unsigned long *'))
      (ImplicitCastExpr 0x92fa9b0 <col:25> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x92fa984 <col:25> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92fa490 '__last' 'unsigned long *':'unsigned long *')))
    (UnaryOperator 0x92fa9f0 <col:33, col:35> 'unsigned long *':'unsigned long *' lvalue prefix '++'
      (DeclRefExpr 0x92fa9d8 <col:35> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92fa450 '__first' 'unsigned long *':'unsigned long *'))
    (BinaryOperator 0x92faa80 <line:687:2, col:13> 'unsigned long' lvalue '='
      (UnaryOperator 0x92faa30 <col:2, col:3> 'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x92faa20 <col:3> 'unsigned long *':'unsigned long *' <LValueToRValue>
          (DeclRefExpr 0x92faa04 <col:3> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x92fa450 '__first' 'unsigned long *':'unsigned long *')))
      (ImplicitCastExpr 0x92faa70 <col:13> 'unsigned long' <IntegralCast>
        (ImplicitCastExpr 0x92faa60 <col:13> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x92faa44 <col:13> 'const int':'const int' lvalue Var 0x92fa8c0 '__tmp' 'const int':'const int'))))))

template <typename _ForwardIterator, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type __fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x8e89bf0 </usr/include/c++/4.6/bits/stl_algobase.h:684:5, line:688:5>
  (DeclStmt 0x8e89a90 <line:685:7, col:32>
    0x8e89a40 "const _Tp __tmp =
      (DeclRefExpr 0x8e89a74 <col:25> 'const _Tp' lvalue ParmVar 0x8e898d0 '__value' 'const _Tp &')")
  (ForStmt 0x8e89bc8 <line:686:7, line:687:13>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e89b10 <line:686:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8e89ad0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e89aa0 <col:14> '_ForwardIterator' lvalue ParmVar 0x8e89820 '__first' '_ForwardIterator')
      (DeclRefExpr 0x8e89ab8 <col:25> '_ForwardIterator' lvalue ParmVar 0x8e89860 '__last' '_ForwardIterator'))
    (UnaryOperator 0x8e89b50 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x8e89b34 <col:35> '_ForwardIterator' lvalue ParmVar 0x8e89820 '__first' '_ForwardIterator'))
    (BinaryOperator 0x8e89bb0 <line:687:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x8e89b80 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e89b64 <col:3> '_ForwardIterator' lvalue ParmVar 0x8e89820 '__first' '_ForwardIterator'))
      (DeclRefExpr 0x8e89b94 <col:13> 'const _Tp' lvalue Var 0x8e89a40 '__tmp' 'const _Tp'))))

;
    template <typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type __fill_a(_Tp *__first, _Tp *__last, const _Tp &__c) (CompoundStmt 0x8e8a470 </usr/include/c++/4.6/bits/stl_algobase.h:695:5, line:699:5>
  (DeclStmt 0x8e8a1a0 <line:696:7, col:28>
    0x8e8a150 "const _Tp __tmp =
      (DeclRefExpr 0x8e8a184 <col:25> 'const _Tp' lvalue ParmVar 0x8e89fe0 '__c' 'const _Tp &')")
  (CallExpr 0x8e8a448 <line:697:7, line:698:26> '<dependent type>'
    (DeclRefExpr 0x8e8a344 <line:697:7> 'void *(void *, int, unsigned int)' lvalue Function 0x8e8a1e0 '__builtin_memset' 'void *(void *, int, unsigned int)')
    (DeclRefExpr 0x8e8a35c <col:24> '_Tp *' lvalue ParmVar 0x8e89f20 '__first' '_Tp *')
    (CXXStaticCastExpr 0x8e8a3a0 <col:33, col:65> 'unsigned char' static_cast<unsigned char> <Dependent>
      (DeclRefExpr 0x8e8a374 <col:60> 'const _Tp' lvalue Var 0x8e8a150 '__tmp' 'const _Tp'))
    (CXXOperatorCallExpr 0x8e8a420 <line:698:10, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8a3e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8e8a3b8 <col:10> '_Tp *' lvalue ParmVar 0x8e89f70 '__last' '_Tp *')
      (DeclRefExpr 0x8e8a3d0 <col:19> '_Tp *' lvalue ParmVar 0x8e89f20 '__first' '_Tp *'))))

;
    template <typename _ForwardIterator = unsigned long *, typename _Tp = int> inline void fill(unsigned long *__first, unsigned long *__last, const int &__value) (CompoundStmt 0x92fa710 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x8e8ab78 <line:720:54>)
  (CallExpr 0x92fa6e8 <line:722:7, line:723:14> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type':'void'
    (ImplicitCastExpr 0x92fa6d8 <line:722:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x92fa694 <col:7, col:12> 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' lvalue Function 0x92fa590 '__fill_a' 'typename __gnu_cxx::__enable_if<__is_scalar<int>::__value, void>::__type (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x8e89a00 '__fill_a')))
    (CallExpr 0x92f86a8 <col:21, col:46> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x92f8698 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92f8638 <col:21, col:26> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x92f8590 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x8e7b4e0 '__niter_base')))
      (ImplicitCastExpr 0x92f86c8 <col:39> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x92f7ac4 <col:39> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x928e310 '__first' 'unsigned long *':'unsigned long *')))
    (CallExpr 0x92f8790 <col:49, col:73> 'typename _Niter_base<unsigned long *>::iterator_type':'unsigned long *'
      (ImplicitCastExpr 0x92f8780 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (*)(unsigned long *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92f8758 <col:49, col:54> 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' lvalue Function 0x92f8590 '__niter_base' 'typename _Niter_base<unsigned long *>::iterator_type (unsigned long *)' (FunctionTemplate 0x8e7b4e0 '__niter_base')))
      (ImplicitCastExpr 0x92f87b0 <col:67> 'unsigned long *':'unsigned long *' <LValueToRValue>
        (DeclRefExpr 0x92f870c <col:67> 'unsigned long *':'unsigned long *' lvalue ParmVar 0x928e350 '__last' 'unsigned long *':'unsigned long *')))
    (DeclRefExpr 0x92f87bc <line:723:7> 'const int':'const int' lvalue ParmVar 0x928e3e0 '__value' 'const int &')))

template <typename _ForwardIterator = std::_Bit_iterator, typename _Tp = bool> inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__value)template <typename _ForwardIterator, typename _Tp> inline void fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value) (CompoundStmt 0x8e8ad38 </usr/include/c++/4.6/bits/stl_algobase.h:716:5, line:724:5>
  (NullStmt 0x8e8ab78 <line:720:54>)
  (CallExpr 0x8e8ad10 <line:722:7, line:723:14> '<dependent type>'
    (UnresolvedLookupExpr 0x8e8aba8 <line:722:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e88ca0 0x8e89a00 0x8e8a110)
    (CallExpr 0x8e8ac50 <col:21, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8ac00 <col:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
      (DeclRefExpr 0x8e8ac34 <col:39> '_ForwardIterator' lvalue ParmVar 0x8e8a550 '__first' '_ForwardIterator'))
    (CallExpr 0x8e8acd8 <col:49, col:73> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8ac88 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
      (DeclRefExpr 0x8e8acbc <col:67> '_ForwardIterator' lvalue ParmVar 0x8e8a590 '__last' '_ForwardIterator'))
    (DeclRefExpr 0x8e8acf8 <line:723:7> 'const _Tp' lvalue ParmVar 0x8e8a600 '__value' 'const _Tp &')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x8e8b650 </usr/include/c++/4.6/bits/stl_algobase.h:730:5, line:735:5>
  (ForStmt 0x8e8b600 <line:731:7, line:733:13>
    (DeclStmt 0x8e8b480 <line:731:12, col:45>
      0x8e8b430 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x8e8b464 <col:42> '_Size' lvalue ParmVar 0x8e8b170 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e8b500 <line:732:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8b4c0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e8b490 <col:5> 'decltype(__n + 0)' lvalue Var 0x8e8b430 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x8e8b4a8 <col:15> 'int' 0))
    (BinaryOperator 0x8e8b588 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x8e8b540 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x8e8b524 <col:20> 'decltype(__n + 0)' lvalue Var 0x8e8b430 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x8e8b570 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e8b554 <col:31> '_OutputIterator' lvalue ParmVar 0x8e8b130 '__first' '_OutputIterator')))
    (BinaryOperator 0x8e8b5e8 <line:733:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x8e8b5b8 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e8b5a0 <col:3> '_OutputIterator' lvalue ParmVar 0x8e8b130 '__first' '_OutputIterator'))
      (DeclRefExpr 0x8e8b5cc <col:13> 'const _Tp' lvalue ParmVar 0x8e8b200 '__value' 'const _Tp &')))
  (ReturnStmt 0x8e8b640 <line:734:7, col:14>
    (DeclRefExpr 0x8e8b624 <col:14> '_OutputIterator' lvalue ParmVar 0x8e8b130 '__first' '_OutputIterator')))

;
    template <typename _OutputIterator, typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type __fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value) (CompoundStmt 0x8e8c3a0 </usr/include/c++/4.6/bits/stl_algobase.h:741:5, line:747:5>
  (DeclStmt 0x8e8c0c0 <line:742:7, col:32>
    0x8e8c070 "const _Tp __tmp =
      (DeclRefExpr 0x8e8c0a4 <col:25> 'const _Tp' lvalue ParmVar 0x8e8bf00 '__value' 'const _Tp &')")
  (ForStmt 0x8e8c350 <line:743:7, line:745:13>
    (DeclStmt 0x8e8c1d0 <line:743:12, col:45>
      0x8e8c180 "decltype(__n + 0) __niter =
        (DeclRefExpr 0x8e8c1b4 <col:42> '_Size' lvalue ParmVar 0x8e8ba40 '__n' '_Size')")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e8c250 <line:744:5, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8c210 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e8c1e0 <col:5> 'decltype(__n + 0)' lvalue Var 0x8e8c180 '__niter' 'decltype(__n + 0)')
      (IntegerLiteral 0x8e8c1f8 <col:15> 'int' 0))
    (BinaryOperator 0x8e8c2d8 <col:18, col:31> '<dependent type>' ','
      (UnaryOperator 0x8e8c290 <col:18, col:20> '<dependent type>' prefix '--'
        (DeclRefExpr 0x8e8c274 <col:20> 'decltype(__n + 0)' lvalue Var 0x8e8c180 '__niter' 'decltype(__n + 0)'))
      (UnaryOperator 0x8e8c2c0 <col:29, col:31> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e8c2a4 <col:31> '_OutputIterator' lvalue ParmVar 0x8e8ba00 '__first' '_OutputIterator')))
    (BinaryOperator 0x8e8c338 <line:745:2, col:13> '<dependent type>' '='
      (UnaryOperator 0x8e8c308 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8e8c2f0 <col:3> '_OutputIterator' lvalue ParmVar 0x8e8ba00 '__first' '_OutputIterator'))
      (DeclRefExpr 0x8e8c31c <col:13> 'const _Tp' lvalue Var 0x8e8c070 '__tmp' 'const _Tp')))
  (ReturnStmt 0x8e8c390 <line:746:7, col:14>
    (DeclRefExpr 0x8e8c374 <col:14> '_OutputIterator' lvalue ParmVar 0x8e8ba00 '__first' '_OutputIterator')))

;
    template <typename _Size, typename _Tp> inline typename __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp *>::__type __fill_n_a(_Tp *__first, _Size __n, const _Tp &__c) (CompoundStmt 0x8e8cb60 </usr/include/c++/4.6/bits/stl_algobase.h:753:5, line:756:5>
  (CallExpr 0x8e8ca98 <line:754:7, col:48> '<dependent type>'
    (UnresolvedLookupExpr 0x8e8c998 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e88ca0 0x8e89a00 0x8e8a110)
    (DeclRefExpr 0x8e8c9d4 <col:21> '_Tp *' lvalue ParmVar 0x8e8c760 '__first' '_Tp *')
    (CXXOperatorCallExpr 0x8e8ca58 <col:30, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8ca20 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
      (DeclRefExpr 0x8e8c9ec <col:30> '_Tp *' lvalue ParmVar 0x8e8c760 '__first' '_Tp *')
      (DeclRefExpr 0x8e8ca04 <col:40> '_Size' lvalue ParmVar 0x8e8c7a0 '__n' '_Size'))
    (DeclRefExpr 0x8e8ca7c <col:45> 'const _Tp' lvalue ParmVar 0x8e8c810 '__c' 'const _Tp &'))
  (ReturnStmt 0x8e8cb50 <line:755:7, col:24>
    (CXXOperatorCallExpr 0x8e8cb28 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8caf0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
      (DeclRefExpr 0x8e8cac0 <col:14> '_Tp *' lvalue ParmVar 0x8e8c760 '__first' '_Tp *')
      (DeclRefExpr 0x8e8cad8 <col:24> '_Size' lvalue ParmVar 0x8e8c7a0 '__n' '_Size'))))

;
    template <typename _OI, typename _Size, typename _Tp> inline _OI fill_n(_OI __first, _Size __n, const _Tp &__value) (CompoundStmt 0x8e8e040 </usr/include/c++/4.6/bits/stl_algobase.h:776:5, line:781:5>
  (ReturnStmt 0x8e8e030 <line:780:7, col:75>
    (CXXUnresolvedConstructExpr 0x8e8e010 <col:14, col:75> '_OI'
      (CallExpr 0x8e8dfe8 <col:18, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x8e8ceb8 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8b330 0x8e8c030 0x8e8c940)
        (CallExpr 0x8e8df98 <col:34, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x8e8df48 <col:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
          (DeclRefExpr 0x8e8df7c <col:52> '_OI' lvalue ParmVar 0x8e8cc90 '__first' '_OI'))
        (DeclRefExpr 0x8e8dfb8 <col:62> '_Size' lvalue ParmVar 0x8e8ccd0 '__n' '_Size')
        (DeclRefExpr 0x8e8dfd0 <col:67> 'const _Tp' lvalue ParmVar 0x8e8cd40 '__value' 'const _Tp &')))))

;
    template <bool _BoolType = true> struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x8e8fc08 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x8e8fbf8 <line:804:4, line:805:30>
    (UnaryOperator 0x8e8fbe0 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x8e8fbb8 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x8e8ee54 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x8e8ee6c <col:29> 'const _Tp *' lvalue ParmVar 0x8e8eab0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x8e8ee84 <col:39> 'const _Tp *' lvalue ParmVar 0x8e8eb50 '__first2' 'const _Tp *')
        (BinaryOperator 0x8e8fba0 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x8e8eea8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x8e8fb88 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x8e8fb60 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x8e8fb28 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x8e8eec0 <col:11> 'const _Tp *' lvalue ParmVar 0x8e8eb00 '__last1' 'const _Tp *')
              (DeclRefExpr 0x8e8eed8 <col:21> 'const _Tp *' lvalue ParmVar 0x8e8eab0 '__first1' 'const _Tp *'))))))))

;
    }
template <bool _BoolType> struct __equal {
        struct __equal;
        template <typename _II1, typename _II2> static bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x8e8e800 </usr/include/c++/4.6/bits/stl_algobase.h:789:9, line:794:2>
  (ForStmt 0x8e8e7b8 <line:790:4, line:792:15>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e8e5e0 <line:790:11, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8e8e5a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e8e570 <col:11> '_II1' lvalue ParmVar 0x8e8e380 '__first1' '_II1')
      (DeclRefExpr 0x8e8e588 <col:23> '_II1' lvalue ParmVar 0x8e8e3c0 '__last1' '_II1'))
    (BinaryOperator 0x8e8e668 <col:32, col:46> '<dependent type>' ','
      (UnaryOperator 0x8e8e620 <col:32, col:34> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e8e604 <col:34> '_II1' lvalue ParmVar 0x8e8e380 '__first1' '_II1'))
      (UnaryOperator 0x8e8e650 <col:44, col:46> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e8e634 <col:46> '_II2' lvalue ParmVar 0x8e8e400 '__first2' '_II2')))
    (IfStmt 0x8e8e798 <line:791:6, line:792:15>
      <<<NULL>>>
      (UnaryOperator 0x8e8e760 <line:791:10, col:34> '<dependent type>' prefix '!'
        (ParenExpr 0x8e8e748 <col:11, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x8e8e720 <col:12, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x8e8e6e0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0)
            (UnaryOperator 0x8e8e698 <col:12, col:13> '<dependent type>' prefix '*'
              (DeclRefExpr 0x8e8e680 <col:13> '_II1' lvalue ParmVar 0x8e8e380 '__first1' '_II1'))
            (UnaryOperator 0x8e8e6c8 <col:25, col:26> '<dependent type>' prefix '*'
              (DeclRefExpr 0x8e8e6ac <col:26> '_II2' lvalue ParmVar 0x8e8e400 '__first2' '_II2')))))
      (ReturnStmt 0x8e8e788 <line:792:8, col:15>
        (CXXBoolLiteralExpr 0x8e8e778 <col:15> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x8e8e7f0 <line:793:4, col:11>
    (CXXBoolLiteralExpr 0x8e8e7e0 <col:11> '_Bool' true)))

;
    };
    struct __equal {
        struct __equal;
        template <typename _Tp> static bool equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2) (CompoundStmt 0x8e8fc08 </usr/include/c++/4.6/bits/stl_algobase.h:803:9, line:806:2>
  (ReturnStmt 0x8e8fbf8 <line:804:4, line:805:30>
    (UnaryOperator 0x8e8fbe0 <line:804:11, line:805:30> '<dependent type>' prefix '!'
      (CallExpr 0x8e8fbb8 <line:804:12, line:805:30> '<dependent type>'
        (DeclRefExpr 0x8e8ee54 <line:804:12> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x8e8ee6c <col:29> 'const _Tp *' lvalue ParmVar 0x8e8eab0 '__first1' 'const _Tp *')
        (DeclRefExpr 0x8e8ee84 <col:39> 'const _Tp *' lvalue ParmVar 0x8e8eb50 '__first2' 'const _Tp *')
        (BinaryOperator 0x8e8fba0 <col:49, line:805:29> '<dependent type>' '*'
          (UnaryExprOrTypeTraitExpr 0x8e8eea8 <line:804:49, col:59> 'unsigned int' sizeof '_Tp')
          (ParenExpr 0x8e8fb88 <line:805:10, col:29> '<dependent type>'
            (CXXOperatorCallExpr 0x8e8fb60 <col:11, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x8e8fb28 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x8e8eec0 <col:11> 'const _Tp *' lvalue ParmVar 0x8e8eb00 '__last1' 'const _Tp *')
              (DeclRefExpr 0x8e8eed8 <col:21> 'const _Tp *' lvalue ParmVar 0x8e8eab0 '__first1' 'const _Tp *'))))))))

;
    };
    template <typename _II1, typename _II2> inline bool __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x8e90798 </usr/include/c++/4.6/bits/stl_algobase.h:812:5, line:821:5>
  (DeclStmt 0x8e8ffd0 <line:813:7, col:69>
    0x8e8ffa0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x8e90100 <line:814:7, col:69>
    0x8e900d0 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x8e905d0 <line:815:7, line:818:58>
    0x8e90120 "const bool __simple =
      (ParenExpr 0x8e905b8 <line:815:29, line:818:57> '<dependent type>'
        (BinaryOperator 0x8e905a0 <line:815:30, line:818:50> '<dependent type>' '&&'
          (BinaryOperator 0x8e90448 <line:815:30, line:817:46> '<dependent type>' '&&'
            (BinaryOperator 0x8e90358 <line:815:30, line:816:46> '<dependent type>' '&&'
              (DependentScopeDeclRefExpr 0x8e90260 <line:815:30, col:57> '<dependent type>' lvalue)
              (DependentScopeDeclRefExpr 0x8e90330 <line:816:26, col:46> '<dependent type>' lvalue))
            (DependentScopeDeclRefExpr 0x8e90420 <line:817:26, col:46> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x8e90578 <line:818:12, col:50> '<dependent type>' lvalue)))")
  (ReturnStmt 0x8e90788 <line:820:7, col:71>
    (CallExpr 0x8e90760 <col:14, col:71> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e906f0 <col:14, col:38> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e90714 <col:44> '_II1' lvalue ParmVar 0x8e8fce0 '__first1' '_II1')
      (DeclRefExpr 0x8e9072c <col:54> '_II1' lvalue ParmVar 0x8e8fd20 '__last1' '_II1')
      (DeclRefExpr 0x8e90744 <col:63> '_II2' lvalue ParmVar 0x8e8fd60 '__first2' '_II2'))))

;
    template <typename  = std::random_access_iterator_tag, typename  = std::random_access_iterator_tag> struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x8e92ca0 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x8e91d48 <line:846:4, line:847:34>
    0x8e91c80 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x8e91d20 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e91ce8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e91cb4 <col:16> '_RAI1' lvalue ParmVar 0x8e917d0 '__last1' '_RAI1')
        (DeclRefExpr 0x8e91ccc <col:26> '_RAI1' lvalue ParmVar 0x8e91790 '__first1' '_RAI1'))")
  (DeclStmt 0x8e91f28 <line:848:4, line:849:34>
    0x8e91e60 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x8e91f00 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e91ec8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e91e94 <col:16> '_RAI2' lvalue ParmVar 0x8e91850 '__last2' '_RAI2')
        (DeclRefExpr 0x8e91eac <col:26> '_RAI2' lvalue ParmVar 0x8e91810 '__first2' '_RAI2'))")
  (ReturnStmt 0x8e92c90 <line:850:4, col:52>
    (ConditionalOperator 0x8e92c70 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x8e92ba0 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x8e92b60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
        (DeclRefExpr 0x8e92b30 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x8e91e60 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x8e92b48 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x8e91c80 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x8e92c30 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x8e92bf8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (DeclRefExpr 0x8e92bc4 <col:31> '_RAI1' lvalue ParmVar 0x8e91790 '__first1' '_RAI1')
        (DeclRefExpr 0x8e92bdc <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x8e91e60 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x8e92c54 <col:52> '_RAI1' lvalue ParmVar 0x8e917d0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x8e92ce0 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x8e92cd0 <col:11, col:18>
    (CXXBoolLiteralExpr 0x8e92cc0 <col:18> '_Bool' true)))

;
    }
template <typename , typename > struct __lc_rai {
        struct __lc_rai;
        template <typename _II1, typename _II2> static _II1 __newlast1(_II1, _II1 __last1, _II2, _II2) (CompoundStmt 0x8e913b8 </usr/include/c++/4.6/bits/stl_algobase.h:830:9, col:27>
  (ReturnStmt 0x8e913a8 <col:11, col:18>
    (DeclRefExpr 0x8e91390 <col:18> '_II1' lvalue ParmVar 0x8e90fd0 '__last1' '_II1')))

;
        template <typename _II> static bool __cnd2(_II __first, _II __last) (CompoundStmt 0x8e91478 </usr/include/c++/4.6/bits/stl_algobase.h:835:9, col:37>
  (ReturnStmt 0x8e91468 <col:11, col:29>
    (CXXOperatorCallExpr 0x8e91440 <col:18, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x8e91400 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e913cc <col:18> '_II' lvalue ParmVar 0x8e91210 '__first' '_II')
      (DeclRefExpr 0x8e913e4 <col:29> '_II' lvalue ParmVar 0x8e91250 '__last' '_II'))))

;
    };
    struct __lc_rai {
        struct __lc_rai;
        template <typename _RAI1, typename _RAI2> static _RAI1 __newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2 __first2, _RAI2 __last2) (CompoundStmt 0x8e92ca0 </usr/include/c++/4.6/bits/stl_algobase.h:845:9, line:851:2>
  (DeclStmt 0x8e91d48 <line:846:4, line:847:34>
    0x8e91c80 "const typename iterator_traits<_RAI1>::difference_type __diff1 =
      (CXXOperatorCallExpr 0x8e91d20 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e91ce8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e91cb4 <col:16> '_RAI1' lvalue ParmVar 0x8e917d0 '__last1' '_RAI1')
        (DeclRefExpr 0x8e91ccc <col:26> '_RAI1' lvalue ParmVar 0x8e91790 '__first1' '_RAI1'))")
  (DeclStmt 0x8e91f28 <line:848:4, line:849:34>
    0x8e91e60 "const typename iterator_traits<_RAI2>::difference_type __diff2 =
      (CXXOperatorCallExpr 0x8e91f00 <col:16, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e91ec8 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e91e94 <col:16> '_RAI2' lvalue ParmVar 0x8e91850 '__last2' '_RAI2')
        (DeclRefExpr 0x8e91eac <col:26> '_RAI2' lvalue ParmVar 0x8e91810 '__first2' '_RAI2'))")
  (ReturnStmt 0x8e92c90 <line:850:4, col:52>
    (ConditionalOperator 0x8e92c70 <col:11, col:52> '<dependent type>'
      (CXXOperatorCallExpr 0x8e92ba0 <col:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x8e92b60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
        (DeclRefExpr 0x8e92b30 <col:11> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x8e91e60 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type')
        (DeclRefExpr 0x8e92b48 <col:21> 'const typename iterator_traits<_RAI1>::difference_type' lvalue Var 0x8e91c80 '__diff1' 'const typename iterator_traits<_RAI1>::difference_type'))
      (CXXOperatorCallExpr 0x8e92c30 <col:31, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x8e92bf8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (DeclRefExpr 0x8e92bc4 <col:31> '_RAI1' lvalue ParmVar 0x8e91790 '__first1' '_RAI1')
        (DeclRefExpr 0x8e92bdc <col:42> 'const typename iterator_traits<_RAI2>::difference_type' lvalue Var 0x8e91e60 '__diff2' 'const typename iterator_traits<_RAI2>::difference_type'))
      (DeclRefExpr 0x8e92c54 <col:52> '_RAI1' lvalue ParmVar 0x8e917d0 '__last1' '_RAI1'))))

;
        template <typename _RAI> static bool __cnd2(_RAI, _RAI) (CompoundStmt 0x8e92ce0 </usr/include/c++/4.6/bits/stl_algobase.h:856:9, col:24>
  (ReturnStmt 0x8e92cd0 <col:11, col:18>
    (CXXBoolLiteralExpr 0x8e92cc0 <col:18> '_Bool' true)))

;
    };
    template <bool _BoolType = true> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x8e95c00 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x8e94c68 <line:897:4, col:44>
    0x8e94ba0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x8e94c40 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e94c08 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e94bd4 <col:26> 'const _Tp *' lvalue ParmVar 0x8e94960 '__last1' 'const _Tp *')
        (DeclRefExpr 0x8e94bec <col:36> 'const _Tp *' lvalue ParmVar 0x8e94910 '__first1' 'const _Tp *'))")
  (DeclStmt 0x8e94d48 <line:898:4, col:44>
    0x8e94c80 "const size_t __len2 =
      (CXXOperatorCallExpr 0x8e94d20 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e94ce8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e94cb4 <col:26> 'const _Up *' lvalue ParmVar 0x8e94a20 '__last2' 'const _Up *')
        (DeclRefExpr 0x8e94ccc <col:36> 'const _Up *' lvalue ParmVar 0x8e949d0 '__first2' 'const _Up *'))")
  (DeclStmt 0x8e95aa8 <line:899:4, line:900:32>
    0x8e94d70 "const int __result =
      (CallExpr 0x8e95a80 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x8e94da4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x8e94dbc <col:42> 'const _Tp *' lvalue ParmVar 0x8e94910 '__first1' 'const _Tp *')
        (DeclRefExpr 0x8e94dd4 <col:52> 'const _Up *' lvalue ParmVar 0x8e949d0 '__first2' 'const _Up *')
        (CallExpr 0x8e95a58 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x8e95a48 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x8e959e8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x8e95940 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x8e798b0 'min')))
          (DeclRefExpr 0x8e95758 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x8e94ba0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x8e95770 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x8e94c80 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x8e95bf0 <line:901:4, col:51>
    (ConditionalOperator 0x8e95bd0 <col:11, col:51> '_Bool'
      (BinaryOperator 0x8e95af8 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x8e95ae8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x8e95ab8 <col:11> 'const int' lvalue Var 0x8e94d70 '__result' 'const int'))
        (IntegerLiteral 0x8e95ad0 <col:23> 'int' 0))
      (BinaryOperator 0x8e95b50 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x8e95b40 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x8e95b10 <col:27> 'const int' lvalue Var 0x8e94d70 '__result' 'const int'))
        (IntegerLiteral 0x8e95b28 <col:38> 'int' 0))
      (BinaryOperator 0x8e95bb8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x8e95b98 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8e95b68 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x8e94ba0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x8e95ba8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8e95b80 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x8e94c80 '__len2' 'const size_t':'const unsigned int'))))))

;
    }
template <bool _BoolType> struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _II1, typename _II2> static bool __lc(_II1, _II1, _II2, _II2);
    };
    template <typename _II1, typename _II2> static bool __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x8e94608 </usr/include/c++/4.6/bits/stl_algobase.h:871:7, line:887:7>
  (DeclStmt 0x8e93850 <line:872:2, col:70>
    0x8e93820 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x8e939e0 <line:873:2, col:70>
    0x8e939b0 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x8e93f60 <line:874:2, col:59>
    0x8e93f30 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (BinaryOperator 0x8e94080 <line:876:2, line:877:24> '<dependent type>' '='
    (DeclRefExpr 0x8e93f70 <line:876:2> '_II1' lvalue ParmVar 0x8e93500 '__last1' '_II1')
    (CallExpr 0x8e94050 <col:12, line:877:24> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e93fc8 <line:876:12, col:24> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e93fec <col:35> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1')
      (DeclRefExpr 0x8e94004 <col:45> '_II1' lvalue ParmVar 0x8e93500 '__last1' '_II1')
      (DeclRefExpr 0x8e9401c <line:877:7> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2')
      (DeclRefExpr 0x8e94034 <col:17> '_II2' lvalue ParmVar 0x8e93580 '__last2' '_II2')))
  (ForStmt 0x8e94488 <line:878:2, line:885:4>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x8e941d0 <line:878:9, col:68> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e94108 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x8e940c8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e94098 <col:9> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1')
        (DeclRefExpr 0x8e940b0 <col:21> '_II1' lvalue ParmVar 0x8e93500 '__last1' '_II1'))
      (CallExpr 0x8e941a8 <col:32, col:68> '<dependent type>'
        (DependentScopeDeclRefExpr 0x8e94150 <col:32, col:44> '<dependent type>' lvalue)
        (DeclRefExpr 0x8e94174 <col:51> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2')
        (DeclRefExpr 0x8e9418c <col:61> '_II2' lvalue ParmVar 0x8e93580 '__last2' '_II2')))
    (BinaryOperator 0x8e94248 <line:879:7, col:21> '<dependent type>' ','
      (UnaryOperator 0x8e94200 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e941e8 <col:9> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1'))
      (UnaryOperator 0x8e94230 <col:19, col:21> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e94214 <col:21> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2')))
    (CompoundStmt 0x8e94470 <line:880:4, line:885:4>
      (IfStmt 0x8e94348 <line:881:6, line:882:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x8e94300 <line:881:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x8e942c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
          (UnaryOperator 0x8e94278 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e94260 <col:11> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1'))
          (UnaryOperator 0x8e942a8 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9428c <col:23> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2')))
        (ReturnStmt 0x8e94338 <line:882:8, col:15>
          (CXXBoolLiteralExpr 0x8e94328 <col:15> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x8e94450 <line:883:6, line:884:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x8e94408 <line:883:10, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x8e943c8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
          (UnaryOperator 0x8e94380 <col:10, col:11> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e94364 <col:11> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2'))
          (UnaryOperator 0x8e943b0 <col:22, col:23> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e94394 <col:23> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1')))
        (ReturnStmt 0x8e94440 <line:884:8, col:15>
          (CXXBoolLiteralExpr 0x8e94430 <col:15> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x8e945f8 <line:886:2, col:44>
    (BinaryOperator 0x8e945e0 <col:9, col:44> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e94520 <col:9, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x8e944e0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0)
        (DeclRefExpr 0x8e944ac <col:9> '_II1' lvalue ParmVar 0x8e934c0 '__first1' '_II1')
        (DeclRefExpr 0x8e944c4 <col:21> '_II1' lvalue ParmVar 0x8e93500 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x8e945b8 <col:32, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x8e94578 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e94544 <col:32> '_II2' lvalue ParmVar 0x8e93540 '__first2' '_II2')
        (DeclRefExpr 0x8e9455c <col:44> '_II2' lvalue ParmVar 0x8e93580 '__last2' '_II2')))))

;
    struct __lexicographical_compare {
        struct __lexicographical_compare;
        template <typename _Tp, typename _Up> static bool __lc(const _Tp *__first1, const _Tp *__last1, const _Up *__first2, const _Up *__last2) (CompoundStmt 0x8e95c00 </usr/include/c++/4.6/bits/stl_algobase.h:896:2, line:902:2>
  (DeclStmt 0x8e94c68 <line:897:4, col:44>
    0x8e94ba0 "const size_t __len1 =
      (CXXOperatorCallExpr 0x8e94c40 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e94c08 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e94bd4 <col:26> 'const _Tp *' lvalue ParmVar 0x8e94960 '__last1' 'const _Tp *')
        (DeclRefExpr 0x8e94bec <col:36> 'const _Tp *' lvalue ParmVar 0x8e94910 '__first1' 'const _Tp *'))")
  (DeclStmt 0x8e94d48 <line:898:4, col:44>
    0x8e94c80 "const size_t __len2 =
      (CXXOperatorCallExpr 0x8e94d20 <col:26, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e94ce8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8e94cb4 <col:26> 'const _Up *' lvalue ParmVar 0x8e94a20 '__last2' 'const _Up *')
        (DeclRefExpr 0x8e94ccc <col:36> 'const _Up *' lvalue ParmVar 0x8e949d0 '__first2' 'const _Up *'))")
  (DeclStmt 0x8e95aa8 <line:899:4, line:900:32>
    0x8e94d70 "const int __result =
      (CallExpr 0x8e95a80 <line:899:25, line:900:31> '<dependent type>'
        (DeclRefExpr 0x8e94da4 <line:899:25> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)')
        (DeclRefExpr 0x8e94dbc <col:42> 'const _Tp *' lvalue ParmVar 0x8e94910 '__first1' 'const _Tp *')
        (DeclRefExpr 0x8e94dd4 <col:52> 'const _Up *' lvalue ParmVar 0x8e949d0 '__first2' 'const _Up *')
        (CallExpr 0x8e95a58 <line:900:7, col:30> 'const unsigned int':'const unsigned int' lvalue
          (ImplicitCastExpr 0x8e95a48 <col:7, col:12> 'const unsigned int &(*)(const unsigned int &, const unsigned int &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x8e959e8 <col:7, col:12> 'const unsigned int &(const unsigned int &, const unsigned int &)' lvalue Function 0x8e95940 'min' 'const unsigned int &(const unsigned int &, const unsigned int &)' (FunctionTemplate 0x8e798b0 'min')))
          (DeclRefExpr 0x8e95758 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x8e94ba0 '__len1' 'const size_t':'const unsigned int')
          (DeclRefExpr 0x8e95770 <col:24> 'const size_t':'const unsigned int' lvalue Var 0x8e94c80 '__len2' 'const size_t':'const unsigned int')))")
  (ReturnStmt 0x8e95bf0 <line:901:4, col:51>
    (ConditionalOperator 0x8e95bd0 <col:11, col:51> '_Bool'
      (BinaryOperator 0x8e95af8 <col:11, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x8e95ae8 <col:11> 'int' <LValueToRValue>
          (DeclRefExpr 0x8e95ab8 <col:11> 'const int' lvalue Var 0x8e94d70 '__result' 'const int'))
        (IntegerLiteral 0x8e95ad0 <col:23> 'int' 0))
      (BinaryOperator 0x8e95b50 <col:27, col:38> '_Bool' '<'
        (ImplicitCastExpr 0x8e95b40 <col:27> 'int' <LValueToRValue>
          (DeclRefExpr 0x8e95b10 <col:27> 'const int' lvalue Var 0x8e94d70 '__result' 'const int'))
        (IntegerLiteral 0x8e95b28 <col:38> 'int' 0))
      (BinaryOperator 0x8e95bb8 <col:42, col:51> '_Bool' '<'
        (ImplicitCastExpr 0x8e95b98 <col:42> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8e95b68 <col:42> 'const size_t':'const unsigned int' lvalue Var 0x8e94ba0 '__len1' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x8e95ba8 <col:51> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8e95b80 <col:51> 'const size_t':'const unsigned int' lvalue Var 0x8e94c80 '__len2' 'const size_t':'const unsigned int'))))))

;
    };
    template <typename _II1, typename _II2> inline bool __lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x8e96b88 </usr/include/c++/4.6/bits/stl_algobase.h:909:5, line:921:5>
  (DeclStmt 0x8e96010 <line:910:7, col:69>
    0x8e95fe0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x8e96140 <line:911:7, col:69>
    0x8e96110 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (DeclStmt 0x8e969a8 <line:912:7, line:917:34>
    0x8e96160 "const bool __simple =
      (ParenExpr 0x8e96990 <line:913:2, line:917:33> '<dependent type>'
        (BinaryOperator 0x8e96978 <line:913:3, line:917:26> '<dependent type>' '&&'
          (BinaryOperator 0x8e96890 <line:913:3, line:916:26> '<dependent type>' '&&'
            (BinaryOperator 0x8e96680 <line:913:3, line:915:49> '<dependent type>' '&&'
              (BinaryOperator 0x8e96540 <line:913:3, line:914:49> '<dependent type>' '&&'
                (BinaryOperator 0x8e963e8 <line:913:3, col:62> '<dependent type>' '&&'
                  (DependentScopeDeclRefExpr 0x8e962a0 <col:3, col:27> '<dependent type>' lvalue)
                  (DependentScopeDeclRefExpr 0x8e963c0 <col:38, col:62> '<dependent type>' lvalue))
                (UnaryOperator 0x8e96528 <line:914:6, col:49> '<dependent type>' prefix '!'
                  (DependentScopeDeclRefExpr 0x8e96500 <col:7, col:49> '<dependent type>' lvalue)))
              (UnaryOperator 0x8e96668 <line:915:6, col:49> '<dependent type>' prefix '!'
                (DependentScopeDeclRefExpr 0x8e96640 <col:7, col:49> '<dependent type>' lvalue)))
            (DependentScopeDeclRefExpr 0x8e96868 <line:916:6, col:26> '<dependent type>' lvalue))
          (DependentScopeDeclRefExpr 0x8e96950 <line:917:6, col:26> '<dependent type>' lvalue)))")
  (ReturnStmt 0x8e96b78 <line:919:7, line:920:29>
    (CallExpr 0x8e96b48 <line:919:14, line:920:29> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e96ac0 <line:919:14, col:56> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e96ae4 <col:61> '_II1' lvalue ParmVar 0x8e95ce0 '__first1' '_II1')
      (DeclRefExpr 0x8e96afc <col:71> '_II1' lvalue ParmVar 0x8e95d20 '__last1' '_II1')
      (DeclRefExpr 0x8e96b14 <line:920:12> '_II2' lvalue ParmVar 0x8e95d60 '__first2' '_II2')
      (DeclRefExpr 0x8e96b2c <col:22> '_II2' lvalue ParmVar 0x8e95da0 '__last2' '_II2'))))

;
    template <typename _ForwardIterator, typename _Tp> _ForwardIterator lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__val) (CompoundStmt 0x8e97790 </usr/include/c++/4.6/bits/stl_algobase.h:938:5, line:966:5>
  (DeclStmt 0x8e96f90 <line:939:7, line:940:12>
    0x8e96f60 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (DeclStmt 0x8e970c0 <line:941:7, line:942:15>
    0x8e97090 "typedef typename iterator_traits<_ForwardIterator>::difference_type _DistanceType")
  (NullStmt 0x8e970d0 <line:947:67>)
  (DeclStmt 0x8e971e0 <line:949:7, col:59>
    0x8e97100 "_DistanceType __len =
      (CallExpr 0x8e971b8 <col:29, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x8e97150 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
        (DeclRefExpr 0x8e97184 <col:43> '_ForwardIterator' lvalue ParmVar 0x8e96c70 '__first' '_ForwardIterator')
        (DeclRefExpr 0x8e9719c <col:52> '_ForwardIterator' lvalue ParmVar 0x8e96cb0 '__last' '_ForwardIterator'))")
  (WhileStmt 0x8e97750 <line:951:7, line:964:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e97260 <line:951:14, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e97220 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e971f0 <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97100 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
      (IntegerLiteral 0x8e97208 <col:22> 'int' 0))
    (CompoundStmt 0x8e97730 <line:952:2, line:964:2>
      (DeclStmt 0x8e97310 <line:953:4, col:37>
        0x8e97290 "_DistanceType __half =
          (BinaryOperator 0x8e972f8 <col:27, col:36> '<dependent type>' '>>'
            (DeclRefExpr 0x8e972c4 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97100 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (IntegerLiteral 0x8e972e0 <col:36> 'int' 1))")
      (DeclStmt 0x8e97380 <line:954:4, col:39>
        0x8e97330 "_ForwardIterator __middle =
          (DeclRefExpr 0x8e97364 <col:32> '_ForwardIterator' lvalue ParmVar 0x8e96c70 '__first' '_ForwardIterator')")
      (CallExpr 0x8e97420 <line:955:4, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x8e973b8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e53920)
        (DeclRefExpr 0x8e973ec <col:17> '_ForwardIterator' lvalue Var 0x8e97330 '__middle' '_ForwardIterator')
        (DeclRefExpr 0x8e97404 <col:27> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97290 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
      (IfStmt 0x8e97710 <line:956:4, line:963:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x8e974d0 <line:956:8, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x8e97490 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
          (UnaryOperator 0x8e97460 <col:8, col:9> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e97444 <col:9> '_ForwardIterator' lvalue Var 0x8e97330 '__middle' '_ForwardIterator'))
          (DeclRefExpr 0x8e97474 <col:20> 'const _Tp' lvalue ParmVar 0x8e96d20 '__val' 'const _Tp &'))
        (CompoundStmt 0x8e976a8 <line:957:6, line:961:6>
          (BinaryOperator 0x8e97528 <line:958:8, col:18> '<dependent type>' '='
            (DeclRefExpr 0x8e974f4 <col:8> '_ForwardIterator' lvalue ParmVar 0x8e96c70 '__first' '_ForwardIterator')
            (DeclRefExpr 0x8e9750c <col:18> '_ForwardIterator' lvalue Var 0x8e97330 '__middle' '_ForwardIterator'))
          (UnaryOperator 0x8e97558 <line:959:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x8e97540 <col:10> '_ForwardIterator' lvalue ParmVar 0x8e96c70 '__first' '_ForwardIterator'))
          (BinaryOperator 0x8e97690 <line:960:8, col:33> '<dependent type>' '='
            (DeclRefExpr 0x8e9756c <col:8> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97100 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
            (CXXOperatorCallExpr 0x8e97668 <col:16, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x8e97630 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (CXXOperatorCallExpr 0x8e975f0 <col:16, col:24> '<dependent type>'
                (UnresolvedLookupExpr 0x8e975b8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (DeclRefExpr 0x8e97584 <col:16> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97100 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
                (DeclRefExpr 0x8e9759c <col:24> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97290 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type'))
              (IntegerLiteral 0x8e97618 <col:33> 'int' 1))))
        (BinaryOperator 0x8e976f8 <line:963:6, col:14> '<dependent type>' '='
          (DeclRefExpr 0x8e976c4 <col:6> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97100 '__len' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')
          (DeclRefExpr 0x8e976dc <col:14> '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type' lvalue Var 0x8e97290 '__half' '_DistanceType':'typename iterator_traits<_ForwardIterator>::difference_type')))))
  (ReturnStmt 0x8e97780 <line:965:7, col:14>
    (DeclRefExpr 0x8e97764 <col:14> '_ForwardIterator' lvalue ParmVar 0x8e96c70 '__first' '_ForwardIterator')))

;
    template <typename _Size> inline _Size __lg(_Size __n) (CompoundStmt 0x8e97dd0 </usr/include/c++/4.6/bits/stl_algobase.h:973:5, line:978:5>
  (DeclStmt 0x8e97b98 <line:974:7, col:16>
    0x8e97b60 "_Size __k")
  (ForStmt 0x8e97d08 <line:975:7, line:976:4>
    (BinaryOperator 0x8e97bd8 <line:975:12, col:18> '<dependent type>' '='
      (DeclRefExpr 0x8e97ba8 <col:12> '_Size' lvalue Var 0x8e97b60 '__k' '_Size')
      (IntegerLiteral 0x8e97bc0 <col:18> 'int' 0))
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e97c60 <col:21, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x8e97c20 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e97bf0 <col:21> '_Size' lvalue ParmVar 0x8e97820 '__n' '_Size')
      (IntegerLiteral 0x8e97c08 <col:28> 'int' 0))
    (CompoundAssignOperator 0x8e97cb8 <col:31, col:39> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x8e97c84 <col:31> '_Size' lvalue ParmVar 0x8e97820 '__n' '_Size')
      (IntegerLiteral 0x8e97ca0 <col:39> 'int' 1))
    (UnaryOperator 0x8e97cf0 <line:976:2, col:4> '<dependent type>' prefix '++'
      (DeclRefExpr 0x8e97cd8 <col:4> '_Size' lvalue Var 0x8e97b60 '__k' '_Size')))
  (ReturnStmt 0x8e97dc0 <line:977:7, col:20>
    (CXXOperatorCallExpr 0x8e97d98 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x8e97d60 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8e97d2c <col:14> '_Size' lvalue Var 0x8e97b60 '__k' '_Size')
      (IntegerLiteral 0x8e97d48 <col:20> 'int' 1))))

;
    inline int __lg(int __n) (CompoundStmt 0x8e98140 </usr/include/c++/4.6/bits/stl_algobase.h:982:3, col:66>
  (ReturnStmt 0x8e98130 <col:5, col:63>
    (ImplicitCastExpr 0x8e98120 <col:12, col:63> 'int' <IntegralCast>
      (BinaryOperator 0x8e98108 <col:12, col:63> 'unsigned int' '-'
        (BinaryOperator 0x8e97f58 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x8e97f18 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x8e97ed8 </usr/include/c++/4.6/bits/stl_algobase.h:982:12, col:22> 'unsigned int' sizeof 'int')
            (ImplicitCastExpr 0x8e97f08 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e97ef0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x8e97f48 </usr/include/c++/4.6/bits/stl_algobase.h:982:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x8e97f30 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x8e980f8 <col:46, col:63> 'unsigned int' <IntegralCast>
          (CallExpr 0x8e980b8 <col:46, col:63> 'int'
            (ImplicitCastExpr 0x8e980a8 <col:46> 'int (*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8e98060 <col:46> 'int (unsigned int)' lvalue Function 0x8e97f70 '__builtin_clz' 'int (unsigned int)'))
            (ImplicitCastExpr 0x8e980e8 <col:60> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x8e980d8 <col:60> 'int' <LValueToRValue>
                (DeclRefExpr 0x8e98078 <col:60> 'int' lvalue ParmVar 0x8e97e00 '__n' 'int')))))))))


    inline long __lg(long __n) (CompoundStmt 0x8e984d0 </usr/include/c++/4.6/bits/stl_algobase.h:986:3, col:67>
  (ReturnStmt 0x8e984c0 <col:5, col:64>
    (ImplicitCastExpr 0x8e984b0 <col:12, col:64> 'long' <IntegralCast>
      (BinaryOperator 0x8e98498 <col:12, col:64> 'unsigned int' '-'
        (BinaryOperator 0x8e982c8 <col:12, col:42> 'unsigned int' '-'
          (BinaryOperator 0x8e98288 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x8e98248 </usr/include/c++/4.6/bits/stl_algobase.h:986:12, col:23> 'unsigned int' sizeof 'long')
            (ImplicitCastExpr 0x8e98278 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e98260 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x8e982b8 </usr/include/c++/4.6/bits/stl_algobase.h:986:42> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x8e982a0 <col:42> 'int' 1)))
        (ImplicitCastExpr 0x8e98488 <col:46, col:64> 'unsigned int' <IntegralCast>
          (CallExpr 0x8e98448 <col:46, col:64> 'int'
            (ImplicitCastExpr 0x8e98438 <col:46> 'int (*)(unsigned long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8e983f0 <col:46> 'int (unsigned long)' lvalue Function 0x8e98300 '__builtin_clzl' 'int (unsigned long)'))
            (ImplicitCastExpr 0x8e98478 <col:61> 'unsigned long' <IntegralCast>
              (ImplicitCastExpr 0x8e98468 <col:61> 'long' <LValueToRValue>
                (DeclRefExpr 0x8e98408 <col:61> 'long' lvalue ParmVar 0x8e98170 '__n' 'long')))))))))


    inline long long __lg(long long __n) (CompoundStmt 0x8e98860 </usr/include/c++/4.6/bits/stl_algobase.h:990:3, col:73>
  (ReturnStmt 0x8e98850 <col:5, col:70>
    (ImplicitCastExpr 0x8e98840 <col:12, col:70> 'long long' <IntegralCast>
      (BinaryOperator 0x8e98828 <col:12, col:70> 'unsigned int' '-'
        (BinaryOperator 0x8e98658 <col:12, col:47> 'unsigned int' '-'
          (BinaryOperator 0x8e98618 <col:12, <built-in>:17:22> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x8e985d8 </usr/include/c++/4.6/bits/stl_algobase.h:990:12, col:28> 'unsigned int' sizeof 'long long')
            (ImplicitCastExpr 0x8e98608 <<built-in>:17:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x8e985f0 <col:22> 'int' 8)))
          (ImplicitCastExpr 0x8e98648 </usr/include/c++/4.6/bits/stl_algobase.h:990:47> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x8e98630 <col:47> 'int' 1)))
        (ImplicitCastExpr 0x8e98818 <col:51, col:70> 'unsigned int' <IntegralCast>
          (CallExpr 0x8e987d8 <col:51, col:70> 'int'
            (ImplicitCastExpr 0x8e987c8 <col:51> 'int (*)(unsigned long long)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8e98780 <col:51> 'int (unsigned long long)' lvalue Function 0x8e98690 '__builtin_clzll' 'int (unsigned long long)'))
            (ImplicitCastExpr 0x8e98808 <col:67> 'unsigned long long' <IntegralCast>
              (ImplicitCastExpr 0x8e987f8 <col:67> 'long long' <LValueToRValue>
                (DeclRefExpr 0x8e98798 <col:67> 'long long' lvalue ParmVar 0x8e98500 '__n' 'long long')))))))))


    template <typename _II1, typename _II2> inline bool equal(_II1 __first1, _II1 __last1, _II2 __first2) (CompoundStmt 0x8e99778 </usr/include/c++/4.6/bits/stl_algobase.h:1011:5, line:1023:5>
  (NullStmt 0x8e99548 <line:1018:56>)
  (ReturnStmt 0x8e99768 <line:1020:7, line:1022:37>
    (CallExpr 0x8e99740 <line:1020:14, line:1022:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8e99570 <line:1020:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8fe80)
      (CallExpr 0x8e99610 <col:31, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x8e995c0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e995f4 <col:49> '_II1' lvalue ParmVar 0x8e98940 '__first1' '_II1'))
      (CallExpr 0x8e99698 <line:1021:10, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x8e99648 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e9967c <col:28> '_II1' lvalue ParmVar 0x8e98980 '__last1' '_II1'))
      (CallExpr 0x8e99720 <line:1022:10, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x8e996d0 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e99704 <col:28> '_II2' lvalue ParmVar 0x8e989c0 '__first2' '_II2')))))

;
    template <typename _IIter1, typename _IIter2, typename _BinaryPredicate> inline bool equal(_IIter1 __first1, _IIter1 __last1, _IIter2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x8e99d40 </usr/include/c++/4.6/bits/stl_algobase.h:1044:5, line:1054:5>
  (NullStmt 0x8e99ab8 <line:1048:56>)
  (ForStmt 0x8e99cf8 <line:1050:7, line:1052:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8e99b38 <line:1050:14, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x8e99af8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
      (DeclRefExpr 0x8e99ac4 <col:14> '_IIter1' lvalue ParmVar 0x8e998a0 '__first1' '_IIter1')
      (DeclRefExpr 0x8e99adc <col:26> '_IIter1' lvalue ParmVar 0x8e998e0 '__last1' '_IIter1'))
    (BinaryOperator 0x8e99bc0 <col:35, col:49> '<dependent type>' ','
      (UnaryOperator 0x8e99b78 <col:35, col:37> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e99b5c <col:37> '_IIter1' lvalue ParmVar 0x8e998a0 '__first1' '_IIter1'))
      (UnaryOperator 0x8e99ba8 <col:47, col:49> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e99b8c <col:49> '_IIter2' lvalue ParmVar 0x8e99920 '__first2' '_IIter2')))
    (IfStmt 0x8e99cd8 <line:1051:2, line:1052:11>
      <<<NULL>>>
      (UnaryOperator 0x8e99ca0 <line:1051:6, col:47> '_Bool' prefix '!'
        (CXXUnresolvedConstructExpr 0x8e99c80 <col:7, col:47> '_Bool'
          (CallExpr 0x8e99c58 <col:12, col:46> '<dependent type>'
            (DeclRefExpr 0x8e99be0 <col:12> '_BinaryPredicate' lvalue ParmVar 0x8e99960 '__binary_pred' '_BinaryPredicate')
            (UnaryOperator 0x8e99c10 <col:26, col:27> '<dependent type>' prefix '*'
              (DeclRefExpr 0x8e99bf8 <col:27> '_IIter1' lvalue ParmVar 0x8e998a0 '__first1' '_IIter1'))
            (UnaryOperator 0x8e99c40 <col:37, col:38> '<dependent type>' prefix '*'
              (DeclRefExpr 0x8e99c24 <col:38> '_IIter2' lvalue ParmVar 0x8e99920 '__first2' '_IIter2')))))
      (ReturnStmt 0x8e99cc8 <line:1052:4, col:11>
        (CXXBoolLiteralExpr 0x8e99cb8 <col:11> '_Bool' false))
      <<<NULL>>>))
  (ReturnStmt 0x8e99d30 <line:1053:7, col:14>
    (CXXBoolLiteralExpr 0x8e99d20 <col:14> '_Bool' true)))

;
    template <typename _II1, typename _II2> inline bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2) (CompoundStmt 0x8e9ab78 </usr/include/c++/4.6/bits/stl_algobase.h:1075:5, line:1090:5>
  (DeclStmt 0x8e9a120 <line:1077:7, col:69>
    0x8e9a0f0 "typedef typename iterator_traits<_II1>::value_type _ValueType1")
  (DeclStmt 0x8e9a250 <line:1078:7, col:69>
    0x8e9a220 "typedef typename iterator_traits<_II2>::value_type _ValueType2")
  (NullStmt 0x8e9a260 <line:1083:56>)
  (NullStmt 0x8e9a270 <line:1084:56>)
  (ReturnStmt 0x8e9ab68 <line:1086:7, line:1089:33>
    (CallExpr 0x8e9ab38 <line:1086:14, line:1089:33> '<dependent type>'
      (UnresolvedLookupExpr 0x8e9a298 <line:1086:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e95ec0)
      (CallExpr 0x8e9a338 <col:49, col:75> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9a2e8 <col:49, col:54> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e9a31c <col:67> '_II1' lvalue ParmVar 0x8e99e20 '__first1' '_II1'))
      (CallExpr 0x8e9a3c0 <line:1087:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9a370 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e9a3a4 <col:25> '_II1' lvalue ParmVar 0x8e99e60 '__last1' '_II1'))
      (CallExpr 0x8e9a448 <line:1088:7, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9a3f8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e9a42c <col:25> '_II2' lvalue ParmVar 0x8e99ea0 '__first2' '_II2'))
      (CallExpr 0x8e9ab18 <line:1089:7, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9aac8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e7b4e0)
        (DeclRefExpr 0x8e9aafc <col:25> '_II2' lvalue ParmVar 0x8e99ee0 '__last2' '_II2')))))

;
    template <typename _II1, typename _II2, typename _Compare> bool lexicographical_compare(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _Compare __comp) (CompoundStmt 0x8e9b9f8 </usr/include/c++/4.6/bits/stl_algobase.h:1109:5, line:1130:5>
  (DeclStmt 0x8e9b040 <line:1110:7, col:75>
    0x8e9b010 "typedef typename iterator_traits<_II1>::iterator_category _Category1")
  (DeclStmt 0x8e9b170 <line:1111:7, col:75>
    0x8e9b140 "typedef typename iterator_traits<_II2>::iterator_category _Category2")
  (DeclStmt 0x8e9b380 <line:1112:7, col:64>
    0x8e9b350 "typedef std::__lc_rai<_Category1, _Category2> __rai_type")
  (NullStmt 0x8e9b390 <line:1117:56>)
  (NullStmt 0x8e9b3a0 <line:1118:56>)
  (BinaryOperator 0x8e9b4c0 <line:1120:7, col:76> '<dependent type>' '='
    (DeclRefExpr 0x8e9b3ac <col:7> '_II1' lvalue ParmVar 0x8e9acf0 '__last1' '_II1')
    (CallExpr 0x8e9b490 <col:17, col:76> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8e9b408 <col:17, col:29> '<dependent type>' lvalue)
      (DeclRefExpr 0x8e9b42c <col:40> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1')
      (DeclRefExpr 0x8e9b444 <col:50> '_II1' lvalue ParmVar 0x8e9acf0 '__last1' '_II1')
      (DeclRefExpr 0x8e9b45c <col:59> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2')
      (DeclRefExpr 0x8e9b474 <col:69> '_II2' lvalue ParmVar 0x8e9ad70 '__last2' '_II2')))
  (ForStmt 0x8e9b878 <line:1121:7, line:1128:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x8e9b610 <line:1121:14, col:73> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e9b548 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9b508 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e9b4d8 <col:14> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1')
        (DeclRefExpr 0x8e9b4f0 <col:26> '_II1' lvalue ParmVar 0x8e9acf0 '__last1' '_II1'))
      (CallExpr 0x8e9b5e8 <col:37, col:73> '<dependent type>'
        (DependentScopeDeclRefExpr 0x8e9b590 <col:37, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x8e9b5b4 <col:56> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2')
        (DeclRefExpr 0x8e9b5cc <col:66> '_II2' lvalue ParmVar 0x8e9ad70 '__last2' '_II2')))
    (BinaryOperator 0x8e9b688 <line:1122:5, col:19> '<dependent type>' ','
      (UnaryOperator 0x8e9b640 <col:5, col:7> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9b628 <col:7> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1'))
      (UnaryOperator 0x8e9b670 <col:17, col:19> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9b654 <col:19> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2')))
    (CompoundStmt 0x8e9b860 <line:1123:2, line:1128:2>
      (IfStmt 0x8e9b760 <line:1124:4, line:1125:13>
        <<<NULL>>>
        (CallExpr 0x8e9b718 <line:1124:8, col:35> '<dependent type>'
          (DeclRefExpr 0x8e9b6a0 <col:8> '_Compare' lvalue ParmVar 0x8e9adb0 '__comp' '_Compare')
          (UnaryOperator 0x8e9b6d0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9b6b8 <col:16> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1'))
          (UnaryOperator 0x8e9b700 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9b6e4 <col:27> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2')))
        (ReturnStmt 0x8e9b750 <line:1125:6, col:13>
          (CXXBoolLiteralExpr 0x8e9b740 <col:13> '_Bool' true))
        <<<NULL>>>)
      (IfStmt 0x8e9b840 <line:1126:4, line:1127:13>
        <<<NULL>>>
        (CallExpr 0x8e9b7f8 <line:1126:8, col:35> '<dependent type>'
          (DeclRefExpr 0x8e9b77c <col:8> '_Compare' lvalue ParmVar 0x8e9adb0 '__comp' '_Compare')
          (UnaryOperator 0x8e9b7b0 <col:15, col:16> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9b794 <col:16> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2'))
          (UnaryOperator 0x8e9b7e0 <col:26, col:27> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9b7c4 <col:27> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1')))
        (ReturnStmt 0x8e9b830 <line:1127:6, col:13>
          (CXXBoolLiteralExpr 0x8e9b820 <col:13> '_Bool' false))
        <<<NULL>>>)))
  (ReturnStmt 0x8e9b9e8 <line:1129:7, col:49>
    (BinaryOperator 0x8e9b9d0 <col:14, col:49> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e9b910 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9b8d0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0)
        (DeclRefExpr 0x8e9b89c <col:14> '_II1' lvalue ParmVar 0x8e9acb0 '__first1' '_II1')
        (DeclRefExpr 0x8e9b8b4 <col:26> '_II1' lvalue ParmVar 0x8e9acf0 '__last1' '_II1'))
      (CXXOperatorCallExpr 0x8e9b9a8 <col:37, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9b968 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e9b934 <col:37> '_II2' lvalue ParmVar 0x8e9ad30 '__first2' '_II2')
        (DeclRefExpr 0x8e9b94c <col:49> '_II2' lvalue ParmVar 0x8e9ad70 '__last2' '_II2')))))

;
    template <typename _InputIterator1, typename _InputIterator2> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2) (CompoundStmt 0x8e9c368 </usr/include/c++/4.6/bits/stl_algobase.h:1149:5, line:1164:5>
  (NullStmt 0x8e9bfe8 <line:1156:56>)
  (WhileStmt 0x8e9c1e8 <line:1158:7, line:1162:9>
    <<<NULL>>>
    (BinaryOperator 0x8e9c158 <line:1158:14, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e9c068 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9c028 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e9bff4 <col:14> '_InputIterator1' lvalue ParmVar 0x8e9bdf0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x8e9c00c <col:26> '_InputIterator1' lvalue ParmVar 0x8e9be30 '__last1' '_InputIterator1'))
      (CXXOperatorCallExpr 0x8e9c130 <col:37, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9c0f0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0)
        (UnaryOperator 0x8e9c0a8 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e9c08c <col:38> '_InputIterator1' lvalue ParmVar 0x8e9bdf0 '__first1' '_InputIterator1'))
        (UnaryOperator 0x8e9c0d8 <col:50, col:51> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8e9c0bc <col:51> '_InputIterator2' lvalue ParmVar 0x8e9be70 '__first2' '_InputIterator2'))))
    (CompoundStmt 0x8e9c1d0 <line:1159:9, line:1162:9>
      (UnaryOperator 0x8e9c188 <line:1160:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9c170 <col:6> '_InputIterator1' lvalue ParmVar 0x8e9bdf0 '__first1' '_InputIterator1'))
      (UnaryOperator 0x8e9c1b8 <line:1161:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9c19c <col:6> '_InputIterator2' lvalue ParmVar 0x8e9be70 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x8e9c358 <line:1163:7, col:71>
    (CXXUnresolvedConstructExpr 0x8e9c338 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x8e9c308 <col:53> '_InputIterator1' lvalue ParmVar 0x8e9bdf0 '__first1' '_InputIterator1')
      (DeclRefExpr 0x8e9c320 <col:63> '_InputIterator2' lvalue ParmVar 0x8e9be70 '__first2' '_InputIterator2'))))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _BinaryPredicate> pair<_InputIterator1, _InputIterator2> mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __binary_pred) (CompoundStmt 0x8e9cb38 </usr/include/c++/4.6/bits/stl_algobase.h:1187:5, line:1199:5>
  (NullStmt 0x8e9c7b8 <line:1191:56>)
  (WhileStmt 0x8e9c9b8 <line:1193:7, line:1197:9>
    <<<NULL>>>
    (BinaryOperator 0x8e9c928 <line:1193:14, col:77> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x8e9c838 <col:14, col:26> '<dependent type>'
        (UnresolvedLookupExpr 0x8e9c7f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0)
        (DeclRefExpr 0x8e9c7c4 <col:14> '_InputIterator1' lvalue ParmVar 0x8e9c570 '__first1' '_InputIterator1')
        (DeclRefExpr 0x8e9c7dc <col:26> '_InputIterator1' lvalue ParmVar 0x8e9c5b0 '__last1' '_InputIterator1'))
      (CXXUnresolvedConstructExpr 0x8e9c908 <col:37, col:77> '_Bool'
        (CallExpr 0x8e9c8e0 <col:42, col:76> '<dependent type>'
          (DeclRefExpr 0x8e9c868 <col:42> '_BinaryPredicate' lvalue ParmVar 0x8e9c630 '__binary_pred' '_BinaryPredicate')
          (UnaryOperator 0x8e9c898 <col:56, col:57> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9c880 <col:57> '_InputIterator1' lvalue ParmVar 0x8e9c570 '__first1' '_InputIterator1'))
          (UnaryOperator 0x8e9c8c8 <col:67, col:68> '<dependent type>' prefix '*'
            (DeclRefExpr 0x8e9c8ac <col:68> '_InputIterator2' lvalue ParmVar 0x8e9c5f0 '__first2' '_InputIterator2')))))
    (CompoundStmt 0x8e9c9a0 <line:1194:9, line:1197:9>
      (UnaryOperator 0x8e9c958 <line:1195:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9c940 <col:6> '_InputIterator1' lvalue ParmVar 0x8e9c570 '__first1' '_InputIterator1'))
      (UnaryOperator 0x8e9c988 <line:1196:4, col:6> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8e9c96c <col:6> '_InputIterator2' lvalue ParmVar 0x8e9c5f0 '__first2' '_InputIterator2'))))
  (ReturnStmt 0x8e9cb28 <line:1198:7, col:71>
    (CXXUnresolvedConstructExpr 0x8e9cb08 <col:14, col:71> 'pair<_InputIterator1, _InputIterator2>'
      (DeclRefExpr 0x8e9cad8 <col:53> '_InputIterator1' lvalue ParmVar 0x8e9c570 '__first1' '_InputIterator1')
      (DeclRefExpr 0x8e9caf0 <col:63> '_InputIterator2' lvalue ParmVar 0x8e9c5f0 '__first2' '_InputIterator2'))))

;
}
extern void *__builtin_memmove(void *, const void *, unsigned int);
extern void *__builtin_memset(void *, int, unsigned int);
extern int __builtin_memcmp(const void *, const void *, unsigned int);
extern int __builtin_clz(unsigned int);
extern int __builtin_clzl(unsigned long);
extern int __builtin_clzll(unsigned long long);
namespace std {
    using ::mbstate_t;
    ;
}
namespace std {
    using ::wint_t;
    ;
    using ::btowc;
    ;
    using ::fgetwc;
    ;
    using ::fgetws;
    ;
    using ::fputwc;
    ;
    using ::fputws;
    ;
    using ::fwide;
    ;
    using ::fwprintf;
    ;
    using ::fwscanf;
    ;
    using ::getwc;
    ;
    using ::getwchar;
    ;
    using ::mbrlen;
    ;
    using ::mbrtowc;
    ;
    using ::mbsinit;
    ;
    using ::mbsrtowcs;
    ;
    using ::putwc;
    ;
    using ::putwchar;
    ;
    using ::swprintf;
    ;
    using ::swscanf;
    ;
    using ::ungetwc;
    ;
    using ::vfwprintf;
    ;
    using ::vfwscanf;
    ;
    using ::vswprintf;
    ;
    using ::vswscanf;
    ;
    using ::vwprintf;
    ;
    using ::vwscanf;
    ;
    using ::wcrtomb;
    ;
    using ::wcscat;
    ;
    using ::wcscmp;
    ;
    using ::wcscoll;
    ;
    using ::wcscpy;
    ;
    using ::wcscspn;
    ;
    using ::wcsftime;
    ;
    using ::wcslen;
    ;
    using ::wcsncat;
    ;
    using ::wcsncmp;
    ;
    using ::wcsncpy;
    ;
    using ::wcsrtombs;
    ;
    using ::wcsspn;
    ;
    using ::wcstod;
    ;
    using ::wcstof;
    ;
    using ::wcstok;
    ;
    using ::wcstol;
    ;
    using ::wcstoul;
    ;
    using ::wcsxfrm;
    ;
    using ::wctob;
    ;
    using ::wmemcmp;
    ;
    using ::wmemcpy;
    ;
    using ::wmemmove;
    ;
    using ::wmemset;
    ;
    using ::wprintf;
    ;
    using ::wscanf;
    ;
    using ::wcschr;
    ;
    using ::wcspbrk;
    ;
    using ::wcsrchr;
    ;
    using ::wcsstr;
    ;
    using ::wmemchr;
    ;
    inline wchar_t *wcschr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x8ea2d30 </usr/include/c++/4.6/cwchar:214:3, col:58>
  (ReturnStmt 0x8ea2d20 <col:5, col:55>
    (CallExpr 0x8ea2ce8 <col:12, col:55> 'wchar_t *'
      (ImplicitCastExpr 0x8ea2cd8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ea2c78 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x8d9fd30 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x8ea28b0 'wcschr')))
      (CXXConstCastExpr 0x8ea2c48 <col:19, col:49> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x8ea2c38 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x8ea2c10 <col:46> 'wchar_t *' lvalue ParmVar 0x8ea2ab0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x8ea2d10 <col:52> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8ea2c60 <col:52> 'wchar_t' lvalue ParmVar 0x8ea2af0 '__c' 'wchar_t')))))


    inline wchar_t *wcspbrk(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x8ea2fd0 </usr/include/c++/4.6/cwchar:218:3, col:61>
  (ReturnStmt 0x8ea2fc0 <col:5, col:58>
    (CallExpr 0x8ea2f88 <col:12, col:58> 'wchar_t *'
      (ImplicitCastExpr 0x8ea2f78 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ea2f18 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x8da04c0 'wcspbrk' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x8ea2920 'wcspbrk')))
      (CXXConstCastExpr 0x8ea2ee8 <col:20, col:51> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x8ea2ed8 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x8ea2eb0 <col:47> 'wchar_t *' lvalue ParmVar 0x8ea2d60 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x8ea2fb0 <col:54> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x8ea2f00 <col:54> 'const wchar_t *' lvalue ParmVar 0x8ea2db0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wcsrchr(wchar_t *__p, wchar_t __c) (CompoundStmt 0x8ea3220 </usr/include/c++/4.6/cwchar:222:3, col:59>
  (ReturnStmt 0x8ea3210 <col:5, col:56>
    (CallExpr 0x8ea31d8 <col:12, col:56> 'wchar_t *'
      (ImplicitCastExpr 0x8ea31c8 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ea31a8 <col:12> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x8d9fe90 'wcsrchr' 'wchar_t *(const wchar_t *, wchar_t) throw()' (UsingShadow 0x8ea2990 'wcsrchr')))
      (CXXConstCastExpr 0x8ea3178 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x8ea3168 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x8ea3140 <col:47> 'wchar_t *' lvalue ParmVar 0x8ea3000 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x8ea3200 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8ea3190 <col:53> 'wchar_t' lvalue ParmVar 0x8ea3040 '__c' 'wchar_t')))))


    inline wchar_t *wcsstr(wchar_t *__s1, const wchar_t *__s2) (CompoundStmt 0x8ea3480 </usr/include/c++/4.6/cwchar:226:3, col:60>
  (ReturnStmt 0x8ea3470 <col:5, col:57>
    (CallExpr 0x8ea3438 <col:12, col:57> 'wchar_t *'
      (ImplicitCastExpr 0x8ea3428 <col:12> 'wchar_t *(*)(const wchar_t *, const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ea3408 <col:12> 'wchar_t *(const wchar_t *, const wchar_t *) throw()' lvalue Function 0x8da0630 'wcsstr' 'wchar_t *(const wchar_t *, const wchar_t *) throw()' (UsingShadow 0x8ea2a00 'wcsstr')))
      (CXXConstCastExpr 0x8ea33d8 <col:19, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x8ea33c8 <col:46> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x8ea33a0 <col:46> 'wchar_t *' lvalue ParmVar 0x8ea3250 '__s1' 'wchar_t *')))
      (ImplicitCastExpr 0x8ea3460 <col:53> 'const wchar_t *' <LValueToRValue>
        (DeclRefExpr 0x8ea33f0 <col:53> 'const wchar_t *' lvalue ParmVar 0x8ea32a0 '__s2' 'const wchar_t *')))))


    inline wchar_t *wmemchr(wchar_t *__p, wchar_t __c, size_t __n) (CompoundStmt 0x8ea37b0 </usr/include/c++/4.6/cwchar:230:3, col:64>
  (ReturnStmt 0x8ea37a0 <col:5, col:61>
    (CallExpr 0x8ea3758 <col:12, col:61> 'wchar_t *'
      (ImplicitCastExpr 0x8ea3748 <col:12> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ea36e8 <col:12> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da0eb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2a70 'wmemchr')))
      (CXXConstCastExpr 0x8ea36a0 <col:20, col:50> 'const wchar_t *' const_cast<const wchar_t *> <NoOp>
        (ImplicitCastExpr 0x8ea3690 <col:47> 'wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x8ea3668 <col:47> 'wchar_t *' lvalue ParmVar 0x8ea34b0 '__p' 'wchar_t *')))
      (ImplicitCastExpr 0x8ea3780 <col:53> 'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8ea36b8 <col:53> 'wchar_t' lvalue ParmVar 0x8ea34f0 '__c' 'wchar_t'))
      (ImplicitCastExpr 0x8ea3790 <col:58> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8ea36d0 <col:58> 'size_t':'unsigned int' lvalue ParmVar 0x8ea3530 '__n' 'size_t':'unsigned int')))))


}
namespace __gnu_cxx {
    using ::wcstold;
    ;
    using ::wcstoll;
    ;
    using ::wcstoull;
    ;
}
namespace std {
    using ::__gnu_cxx::wcstold;
    ;
    using ::__gnu_cxx::wcstoll;
    ;
    using ::__gnu_cxx::wcstoull;
    ;
}
namespace std {
    typedef long long streamoff;
    typedef ptrdiff_t streamsize;
    template <typename _StateT = __mbstate_t> class fpos
template <typename _StateT> class fpos {
        class fpos;
    private:
    private:
        streamoff _M_off;
        _StateT _M_state;
    public:
    public:
        fpos<_StateT>() : _M_off((IntegerLiteral 0x8ea5d98 </usr/include/c++/4.6/bits/postypes.h:125:16> 'int' 0)
), _M_state() (CompoundStmt 0x8ea5e30 </usr/include/c++/4.6/bits/postypes.h:125:31, col:33>)


        fpos<_StateT>(streamoff __off) : _M_off((DeclRefExpr 0x8ea5e40 </usr/include/c++/4.6/bits/postypes.h:135:16> 'streamoff':'long long' lvalue ParmVar 0x8ea4050 '__off' 'streamoff':'long long')
), _M_state() (CompoundStmt 0x8ea5ee0 </usr/include/c++/4.6/bits/postypes.h:135:35, col:37>)


        streamoff operator streamoff() const (CompoundStmt 0x8ea5f68 </usr/include/c++/4.6/bits/postypes.h:138:34, col:51>
  (ReturnStmt 0x8ea5f58 <col:36, col:43>
    (MemberExpr 0x8ea5f34 <col:43> 'const streamoff':'const long long' lvalue ->_M_off 0x8ea3f00
      (CXXThisExpr 0x8ea5f08 <col:43> 'const fpos<_StateT> *' this))))


        void state(_StateT __st) (CompoundStmt 0x8ea5fe0 </usr/include/c++/4.6/bits/postypes.h:143:7, col:26>
  (BinaryOperator 0x8ea5fc8 <col:9, col:20> '<dependent type>' '='
    (MemberExpr 0x8ea5f90 <col:9> '_StateT' lvalue ->_M_state 0x8ea3f40
      (CXXThisExpr 0x8ea5f80 <col:9> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x8ea5fb0 <col:20> '_StateT' lvalue ParmVar 0x8ea5700 '__st' '_StateT')))


        _StateT state() const (CompoundStmt 0x8ea6038 </usr/include/c++/4.6/bits/postypes.h:148:7, col:26>
  (ReturnStmt 0x8ea6028 <col:9, col:16>
    (MemberExpr 0x8ea6008 <col:16> 'const _StateT' lvalue ->_M_state 0x8ea3f40
      (CXXThisExpr 0x8ea5ff8 <col:16> 'const fpos<_StateT> *' this))))


        fpos<_StateT> &operator+=(streamoff __off) (CompoundStmt 0x8ea60f0 </usr/include/c++/4.6/bits/postypes.h:156:7, line:159:7>
  (CompoundAssignOperator 0x8ea6098 <line:157:2, col:12> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8ea6060 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x8ea3f00
      (CXXThisExpr 0x8ea6050 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x8ea6080 <col:12> 'streamoff':'long long' lvalue ParmVar 0x8ea5890 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x8ea60e0 <line:158:2, col:10>
    (UnaryOperator 0x8ea60c8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8ea60b8 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> &operator-=(streamoff __off) (CompoundStmt 0x8ea61a8 </usr/include/c++/4.6/bits/postypes.h:167:7, line:170:7>
  (CompoundAssignOperator 0x8ea6150 <line:168:2, col:12> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x8ea6118 <col:2> 'streamoff':'long long' lvalue ->_M_off 0x8ea3f00
      (CXXThisExpr 0x8ea6108 <col:2> 'fpos<_StateT> *' this))
    (DeclRefExpr 0x8ea6138 <col:12> 'streamoff':'long long' lvalue ParmVar 0x8ea59c0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x8ea6198 <line:169:2, col:10>
    (UnaryOperator 0x8ea6180 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8ea6170 <col:10> 'fpos<_StateT> *' this))))


        fpos<_StateT> operator+(streamoff __off) const (CompoundStmt 0x8ea62d8 </usr/include/c++/4.6/bits/postypes.h:180:7, line:184:7>
  (DeclStmt 0x8ea6250 <line:181:2, col:19>
    0x8ea61d0 "fpos<_StateT> __pos =
      (ParenListExpr 0x8ea6230 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x8ea6218 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x8ea6208 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x8ea6290 <line:182:2, col:11> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x8ea6260 <col:2> 'fpos<_StateT>' lvalue Var 0x8ea61d0 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x8ea6278 <col:11> 'streamoff':'long long' lvalue ParmVar 0x8ea5a90 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x8ea62c8 <line:183:2, col:9>
    (DeclRefExpr 0x8ea62b0 <col:9> 'fpos<_StateT>' lvalue Var 0x8ea61d0 '__pos' 'fpos<_StateT>')))


        fpos<_StateT> operator-(streamoff __off) const (CompoundStmt 0x8ea6408 </usr/include/c++/4.6/bits/postypes.h:194:7, line:198:7>
  (DeclStmt 0x8ea6380 <line:195:2, col:19>
    0x8ea6300 "fpos<_StateT> __pos =
      (ParenListExpr 0x8ea6360 <col:12, col:18> 'fpos<_StateT>'
        (UnaryOperator 0x8ea6348 <col:13, col:14> '<dependent type>' prefix '*'
          (CXXThisExpr 0x8ea6338 <col:14> 'const fpos<_StateT> *' this)))")
  (CompoundAssignOperator 0x8ea63c0 <line:196:2, col:11> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x8ea6390 <col:2> 'fpos<_StateT>' lvalue Var 0x8ea6300 '__pos' 'fpos<_StateT>')
    (DeclRefExpr 0x8ea63a8 <col:11> 'streamoff':'long long' lvalue ParmVar 0x8ea5ba0 '__off' 'streamoff':'long long'))
  (ReturnStmt 0x8ea63f8 <line:197:2, col:9>
    (DeclRefExpr 0x8ea63e0 <col:9> 'fpos<_StateT>' lvalue Var 0x8ea6300 '__pos' 'fpos<_StateT>')))


        streamoff operator-(const fpos<_StateT> &__other) const (CompoundStmt 0x8ea6518 </usr/include/c++/4.6/bits/postypes.h:207:7, col:41>
  (ReturnStmt 0x8ea6508 <col:9, col:33>
    (CXXOperatorCallExpr 0x8ea64e0 <col:16, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x8ea64a8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (MemberExpr 0x8ea6438 <col:16> 'const streamoff':'const long long' lvalue ->_M_off 0x8ea3f00
        (CXXThisExpr 0x8ea6428 <col:16> 'const fpos<_StateT> *' this))
      (CXXDependentScopeMemberExpr 0x8ea6470 <col:25, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x8ea6458 <col:25> 'const fpos<_StateT>' lvalue ParmVar 0x8ea5c90 '__other' 'const fpos<_StateT> &')))))


    };
    template <typename _StateT> inline bool operator==(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x8ea6948 </usr/include/c++/4.6/bits/postypes.h:218:5, col:52>
  (ReturnStmt 0x8ea6938 <col:7, col:49>
    (BinaryOperator 0x8ea6920 <col:14, col:49> '_Bool' '=='
      (CXXUnresolvedConstructExpr 0x8ea68c0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x8ea68a8 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x8ea6670 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x8ea6900 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x8ea68e8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x8ea6770 '__rhs' 'const fpos<_StateT> &')))))

;
    template <typename _StateT> inline bool operator!=(const fpos<_StateT> &__lhs, const fpos<_StateT> &__rhs) (CompoundStmt 0x8ea6d38 </usr/include/c++/4.6/bits/postypes.h:223:5, col:52>
  (ReturnStmt 0x8ea6d28 <col:7, col:49>
    (BinaryOperator 0x8ea6d10 <col:14, col:49> '_Bool' '!='
      (CXXUnresolvedConstructExpr 0x8ea6cb0 <col:14, col:29> 'streamoff':'long long'
        (DeclRefExpr 0x8ea6c98 <col:24> 'const fpos<_StateT>' lvalue ParmVar 0x8ea6a80 '__lhs' 'const fpos<_StateT> &'))
      (CXXUnresolvedConstructExpr 0x8ea6cf0 <col:34, col:49> 'streamoff':'long long'
        (DeclRefExpr 0x8ea6cd8 <col:44> 'const fpos<_StateT>' lvalue ParmVar 0x8ea6b80 '__rhs' 'const fpos<_StateT> &')))))

;
    typedef fpos<mbstate_t> streampos;
    typedef fpos<mbstate_t> wstreampos;
}
namespace __gnu_cxx {
    template <typename _CharT> struct _Char_types {
        struct _Char_types;
        typedef unsigned long int_type;
        typedef std::streampos pos_type;
        typedef std::streamoff off_type;
        typedef std::mbstate_t state_type;
    };
    template <typename _CharT> struct char_traits {
        struct char_traits;
        typedef _CharT char_type;
        typedef typename _Char_types<_CharT>::int_type int_type;
        typedef typename _Char_types<_CharT>::pos_type pos_type;
        typedef typename _Char_types<_CharT>::off_type off_type;
        typedef typename _Char_types<_CharT>::state_type state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eabaa8 </usr/include/c++/4.6/bits/char_traits.h:94:7, col:22>
  (BinaryOperator 0x8eaba90 <col:9, col:16> '<dependent type>' '='
    (DeclRefExpr 0x8eaba60 <col:9> 'char_type':'_CharT' lvalue ParmVar 0x8eaa580 '__c1' 'char_type &')
    (DeclRefExpr 0x8eaba78 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaa5f0 '__c2' 'const char_type &')))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eabb60 </usr/include/c++/4.6/bits/char_traits.h:98:7, col:30>
  (ReturnStmt 0x8eabb50 <col:9, col:24>
    (CXXOperatorCallExpr 0x8eabb28 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x8eabaf0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6b070 0x8e6c390)
      (DeclRefExpr 0x8eababc <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaa710 '__c1' 'const char_type &')
      (DeclRefExpr 0x8eabad4 <col:24> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaa760 '__c2' 'const char_type &'))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eabc18 </usr/include/c++/4.6/bits/char_traits.h:102:7, col:29>
  (ReturnStmt 0x8eabc08 <col:9, col:23>
    (CXXOperatorCallExpr 0x8eabbe0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8eabba8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6d5d0 0x8e6dba0)
      (DeclRefExpr 0x8eabb74 <col:16> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaa880 '__c1' 'const char_type &')
      (DeclRefExpr 0x8eabb8c <col:23> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaa8d0 '__c2' 'const char_type &'))))


        static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n);
        static std::size_t length(const char_type *__s);
        static const char_type *find(const char_type *__s, std::size_t __n, const char_type &__a);
        static char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n);
        static char_type *assign(char_type *__s, std::size_t __n, char_type __a);
        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eabc78 </usr/include/c++/4.6/bits/char_traits.h:124:7, col:45>
  (ReturnStmt 0x8eabc68 <col:9, col:42>
    (CXXStaticCastExpr 0x8eabc50 <col:16, col:42> 'char_type':'_CharT' static_cast<char_type> <Dependent>
      (DeclRefExpr 0x8eabc2c <col:39> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x8eab4e0 '__c' 'const int_type &'))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eabcd8 </usr/include/c++/4.6/bits/char_traits.h:128:7, col:44>
  (ReturnStmt 0x8eabcc8 <col:9, col:41>
    (CXXStaticCastExpr 0x8eabcb0 <col:16, col:41> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (DeclRefExpr 0x8eabc8c <col:38> 'const char_type':'const _CharT' lvalue ParmVar 0x8eab600 '__c' 'const char_type &'))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eabd90 </usr/include/c++/4.6/bits/char_traits.h:132:7, col:30>
  (ReturnStmt 0x8eabd80 <col:9, col:24>
    (CXXOperatorCallExpr 0x8eabd58 <col:16, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x8eabd20 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6b070 0x8e6c390)
      (DeclRefExpr 0x8eabcec <col:16> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x8eab720 '__c1' 'const int_type &')
      (DeclRefExpr 0x8eabd04 <col:24> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x8eab770 '__c2' 'const int_type &'))))


        static int_type eof() (CompoundStmt 0x8eabe08 </usr/include/c++/4.6/bits/char_traits.h:136:7, col:59>
  (ReturnStmt 0x8eabdf8 <col:9, col:56>
    (CXXStaticCastExpr 0x8eabde0 <col:16, col:56> 'int_type':'typename _Char_types<_CharT>::int_type' static_cast<int_type> <Dependent>
      (UnaryOperator 0x8eabdc0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x8eabda8 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eae558 </usr/include/c++/4.6/bits/char_traits.h:140:7, col:75>
  (ReturnStmt 0x8eae548 <col:9, col:72>
    (ConditionalOperator 0x8eae528 <col:16, col:72> '<dependent type>'
      (UnaryOperator 0x8eabeb0 <col:16, col:39> '<dependent type>' prefix '!'
        (CallExpr 0x8eabe88 <col:17, col:39> '<dependent type>'
          (DeclRefExpr 0x8eabe1c <col:17> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x8eab810 'eq_int_type' '_Bool (const int_type &, const int_type &)')
          (DeclRefExpr 0x8eabe34 <col:29> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x8eab940 '__c' 'const int_type &')
          (CallExpr 0x8eabe68 <col:34, col:38> '<dependent type>'
            (DeclRefExpr 0x8eabe4c <col:34> 'int_type (void)' lvalue CXXMethod 0x8eab8d0 'eof' 'int_type (void)'))))
      (DeclRefExpr 0x8eabec4 <col:43> 'const int_type':'const typename _Char_types<_CharT>::int_type' lvalue ParmVar 0x8eab940 '__c' 'const int_type &')
      (CallExpr 0x8eae508 <col:49, col:72> '<dependent type>'
        (DeclRefExpr 0x8eabedc <col:49> 'int_type (const char_type &)' lvalue CXXMethod 0x8eab6a0 'to_int_type' 'int_type (const char_type &)')
        (CXXUnresolvedConstructExpr 0x8eabf00 <col:61, col:71> 'char_type':'_CharT')))))


    };
    static int compare(const char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x8eaeca0 </usr/include/c++/4.6/bits/char_traits.h:147:5, line:154:5>
  (ForStmt 0x8eaec50 <line:148:7, line:152:11>
    (DeclStmt 0x8eae960 <line:148:12, col:31>
      0x8eae900 "std::size_t __i =
        (ImplicitCastExpr 0x8eae950 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8eae938 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x8eae9c0 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x8eae9a0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eae970 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x8eae9b0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eae988 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x8eae7d0 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x8eae9f0 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x8eae9d8 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x8eaec30 <line:149:2, line:152:11>
      <<<NULL>>>
      (CallExpr 0x8eaeab0 <line:149:6, col:29> '<dependent type>'
        (DeclRefExpr 0x8eaea04 <col:6> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x8eaa930 'lt' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x8eaea50 <col:9, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x8eaea1c <col:9> 'const char_type *' lvalue ParmVar 0x8eae720 '__s1' 'const char_type *')
          (DeclRefExpr 0x8eaea34 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int'))
        (ArraySubscriptExpr 0x8eaea98 <col:20, col:28> '<dependent type>' lvalue
          (DeclRefExpr 0x8eaea64 <col:20> 'const char_type *' lvalue ParmVar 0x8eae770 '__s2' 'const char_type *')
          (DeclRefExpr 0x8eaea7c <col:25> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int')))
      (ReturnStmt 0x8eaeb08 <line:150:4, col:12>
        (UnaryOperator 0x8eaeaf0 <col:11, col:12> 'int' prefix '-'
          (IntegerLiteral 0x8eaead8 <col:12> 'int' 1)))
      (IfStmt 0x8eaec10 <line:151:7, line:152:11>
        <<<NULL>>>
        (CallExpr 0x8eaebc0 <line:151:11, col:34> '<dependent type>'
          (DeclRefExpr 0x8eaeb18 <col:11> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x8eaa930 'lt' '_Bool (const char_type &, const char_type &)')
          (ArraySubscriptExpr 0x8eaeb60 <col:14, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x8eaeb30 <col:14> 'const char_type *' lvalue ParmVar 0x8eae770 '__s2' 'const char_type *')
            (DeclRefExpr 0x8eaeb48 <col:19> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int'))
          (ArraySubscriptExpr 0x8eaeba8 <col:25, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x8eaeb74 <col:25> 'const char_type *' lvalue ParmVar 0x8eae720 '__s1' 'const char_type *')
            (DeclRefExpr 0x8eaeb8c <col:30> 'std::size_t':'unsigned int' lvalue Var 0x8eae900 '__i' 'std::size_t':'unsigned int')))
        (ReturnStmt 0x8eaec00 <line:152:4, col:11>
          (IntegerLiteral 0x8eaebe8 <col:11> 'int' 1))
        <<<NULL>>>)))
  (ReturnStmt 0x8eaec90 <line:153:7, col:14>
    (IntegerLiteral 0x8eaec78 <col:14> 'int' 0)))


    static std::size_t length(const char_type *__p) (CompoundStmt 0x8eaf160 </usr/include/c++/4.6/bits/char_traits.h:160:5, line:165:5>
  (DeclStmt 0x8eaf010 <line:161:7, col:26>
    0x8eaefb0 "std::size_t __i =
      (ImplicitCastExpr 0x8eaf000 <col:25> 'std::size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8eaefe8 <col:25> 'int' 0))")
  (WhileStmt 0x8eaf110 <line:162:7, line:163:11>
    <<<NULL>>>
    (UnaryOperator 0x8eaf0c8 <line:162:14, col:39> '<dependent type>' prefix '!'
      (CallExpr 0x8eaf0a0 <col:15, col:39> '<dependent type>'
        (DeclRefExpr 0x8eaf020 <col:15> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x8eaa800 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x8eaf068 <col:18, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x8eaf038 <col:18> 'const char_type *' lvalue ParmVar 0x8eaee90 '__p' 'const char_type *')
          (DeclRefExpr 0x8eaf050 <col:22> 'std::size_t':'unsigned int' lvalue Var 0x8eaefb0 '__i' 'std::size_t':'unsigned int'))
        (CXXUnresolvedConstructExpr 0x8eaf088 <col:28, col:38> 'char_type':'_CharT')))
    (UnaryOperator 0x8eaf0f8 <line:163:9, col:11> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x8eaf0dc <col:11> 'std::size_t':'unsigned int' lvalue Var 0x8eaefb0 '__i' 'std::size_t':'unsigned int')))
  (ReturnStmt 0x8eaf150 <line:164:7, col:14>
    (ImplicitCastExpr 0x8eaf140 <col:14> 'std::size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x8eaf124 <col:14> 'std::size_t':'unsigned int' lvalue Var 0x8eaefb0 '__i' 'std::size_t':'unsigned int'))))


    static const typename char_traits<_CharT>::char_type *find(const char_type *__s, std::size_t __n, const char_type &__a) (CompoundStmt 0x8eaf9f8 </usr/include/c++/4.6/bits/char_traits.h:171:5, line:176:5>
  (ForStmt 0x8eaf9a8 <line:172:7, line:174:24>
    (DeclStmt 0x8eaf7a0 <line:172:12, col:31>
      0x8eaf740 "std::size_t __i =
        (ImplicitCastExpr 0x8eaf790 <col:30> 'std::size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x8eaf778 <col:30> 'int' 0))")
    <<<NULL>>>
    (BinaryOperator 0x8eaf800 <col:33, col:39> '_Bool' '<'
      (ImplicitCastExpr 0x8eaf7e0 <col:33> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eaf7b0 <col:33> 'std::size_t':'unsigned int' lvalue Var 0x8eaf740 '__i' 'std::size_t':'unsigned int'))
      (ImplicitCastExpr 0x8eaf7f0 <col:39> 'std::size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eaf7c8 <col:39> 'std::size_t':'unsigned int' lvalue ParmVar 0x8eaf490 '__n' 'std::size_t':'unsigned int')))
    (UnaryOperator 0x8eaf830 <col:44, col:46> 'std::size_t':'unsigned int' lvalue prefix '++'
      (DeclRefExpr 0x8eaf818 <col:46> 'std::size_t':'unsigned int' lvalue Var 0x8eaf740 '__i' 'std::size_t':'unsigned int'))
    (IfStmt 0x8eaf988 <line:173:9, line:174:24>
      <<<NULL>>>
      (CallExpr 0x8eaf8c0 <line:173:13, col:29> '<dependent type>'
        (DeclRefExpr 0x8eaf844 <col:13> '_Bool (const char_type &, const char_type &)' lvalue CXXMethod 0x8eaa800 'eq' '_Bool (const char_type &, const char_type &)')
        (ArraySubscriptExpr 0x8eaf890 <col:16, col:23> '<dependent type>' lvalue
          (DeclRefExpr 0x8eaf85c <col:16> 'const char_type *' lvalue ParmVar 0x8eaf430 '__s' 'const char_type *')
          (DeclRefExpr 0x8eaf874 <col:20> 'std::size_t':'unsigned int' lvalue Var 0x8eaf740 '__i' 'std::size_t':'unsigned int'))
        (DeclRefExpr 0x8eaf8a4 <col:26> 'const char_type':'const _CharT' lvalue ParmVar 0x8eaf4e0 '__a' 'const char_type &'))
      (ReturnStmt 0x8eaf978 <line:174:11, col:24>
        (CXXOperatorCallExpr 0x8eaf950 <col:18, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x8eaf918 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e72e00)
          (DeclRefExpr 0x8eaf8e4 <col:18> 'const char_type *' lvalue ParmVar 0x8eaf430 '__s' 'const char_type *')
          (DeclRefExpr 0x8eaf8fc <col:24> 'std::size_t':'unsigned int' lvalue Var 0x8eaf740 '__i' 'std::size_t':'unsigned int')))
      <<<NULL>>>))
  (ReturnStmt 0x8eaf9e8 <line:175:7, col:14>
    (IntegerLiteral 0x8eaf9d0 <col:14> 'int' 0)))


    static typename char_traits<_CharT>::char_type *move(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x8eb0090 </usr/include/c++/4.6/bits/char_traits.h:182:5, line:185:5>
  (ReturnStmt 0x8eb0080 <line:183:7, line:184:35>
    (CXXStaticCastExpr 0x8eb0068 <line:183:14, line:184:35> '_CharT *' static_cast<_CharT *> <Dependent>
      (CallExpr 0x8eb0018 <line:183:35, line:184:34> '<dependent type>'
        (DeclRefExpr 0x8eaff6c <line:183:35> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)')
        (DeclRefExpr 0x8eaff84 <col:53> 'char_type *' lvalue ParmVar 0x8eafc90 '__s1' 'char_type *')
        (DeclRefExpr 0x8eaff9c <col:59> 'const char_type *' lvalue ParmVar 0x8eafce0 '__s2' 'const char_type *')
        (BinaryOperator 0x8eb0000 <line:184:11, col:33> 'unsigned int' '*'
          (ImplicitCastExpr 0x8eafff0 <col:11> 'std::size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x8eaffb4 <col:11> 'std::size_t':'unsigned int' lvalue ParmVar 0x8eafd40 '__n' 'std::size_t':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x8eaffd8 <col:17, col:33> 'unsigned int' sizeof 'char_type':'_CharT'))))))


    static typename char_traits<_CharT>::char_type *copy(char_type *__s1, const char_type *__s2, std::size_t __n) (CompoundStmt 0x8eb0798 </usr/include/c++/4.6/bits/char_traits.h:191:5, line:195:5>
  (CallExpr 0x8eb0748 <line:193:7, col:39> '<dependent type>'
    (UnresolvedLookupExpr 0x8eb0650 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0)
    (DeclRefExpr 0x8eb0684 <col:17> 'const char_type *' lvalue ParmVar 0x8eb0380 '__s2' 'const char_type *')
    (CXXOperatorCallExpr 0x8eb0708 <col:23, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x8eb06d0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e72e00)
      (DeclRefExpr 0x8eb069c <col:23> 'const char_type *' lvalue ParmVar 0x8eb0380 '__s2' 'const char_type *')
      (DeclRefExpr 0x8eb06b4 <col:30> 'std::size_t':'unsigned int' lvalue ParmVar 0x8eb03e0 '__n' 'std::size_t':'unsigned int'))
    (DeclRefExpr 0x8eb072c <col:35> 'char_type *' lvalue ParmVar 0x8eb0330 '__s1' 'char_type *'))
  (ReturnStmt 0x8eb0788 <line:194:7, col:14>
    (DeclRefExpr 0x8eb0770 <col:14> 'char_type *' lvalue ParmVar 0x8eb0330 '__s1' 'char_type *')))


    static typename char_traits<_CharT>::char_type *assign(char_type *__s, std::size_t __n, char_type __a) (CompoundStmt 0x8eb0df0 </usr/include/c++/4.6/bits/char_traits.h:201:5, line:205:5>
  (CallExpr 0x8eb0da0 <line:203:7, col:32> '<dependent type>'
    (UnresolvedLookupExpr 0x8eb0d20 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ce60)
    (DeclRefExpr 0x8eb0d54 <col:19> 'char_type *' lvalue ParmVar 0x8eb0a30 '__s' 'char_type *')
    (DeclRefExpr 0x8eb0d6c <col:24> 'std::size_t':'unsigned int' lvalue ParmVar 0x8eb0a90 '__n' 'std::size_t':'unsigned int')
    (DeclRefExpr 0x8eb0d84 <col:29> 'char_type':'_CharT' lvalue ParmVar 0x8eb0ad0 '__a' 'char_type':'_CharT'))
  (ReturnStmt 0x8eb0de0 <line:204:7, col:14>
    (DeclRefExpr 0x8eb0dc8 <col:14> 'char_type *' lvalue ParmVar 0x8eb0a30 '__s' 'char_type *')))


}
namespace std {
    template <class _CharT = wchar_t> struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7e38 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x8eb7e20 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x8eb7de0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x8eb5080 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb7e10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x8eb7df8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7ec8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x8eb7eb8 <col:9, col:24>
    (BinaryOperator 0x8eb7ea0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb7e80 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e4c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5230 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7e90 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e64 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5280 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7f58 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x8eb7f48 <col:9, col:23>
    (BinaryOperator 0x8eb7f30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb7f10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7edc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53a0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7f20 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7ef4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53f0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb80c0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x8eb80b0 <col:9, col:39>
    (CallExpr 0x8eb8058 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x8eb8048 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb7fec <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da1060 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea2610 'wmemcmp')))
      (ImplicitCastExpr 0x8eb8080 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fa4 <col:24> 'const char_type *' lvalue ParmVar 0x8eb54f0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8090 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fbc <col:30> 'const char_type *' lvalue ParmVar 0x8eb5540 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb80a0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb7fd4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb5580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb81c8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x8eb81b8 <col:9, col:26>
    (CallExpr 0x8eb8188 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x8eb8178 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8124 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x8da0990 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x8e9db90 'wcslen')))
      (ImplicitCastExpr 0x8eb81a8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb810c <col:23> 'const char_type *' lvalue ParmVar 0x8eb5690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb8308 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x8eb82f8 <col:9, col:37>
    (ImplicitCastExpr 0x8eb82e8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x8eb8290 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x8eb8280 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb8260 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da0eb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2a70 'wmemchr')))
        (ImplicitCastExpr 0x8eb82b8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb8218 <col:24> 'const char_type *' lvalue ParmVar 0x8eb5790 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x8eb82c8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb8230 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5820 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x8eb82d8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8248 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb57d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb8470 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x8eb8460 <col:9, col:40>
    (CallExpr 0x8eb8408 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x8eb83f8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb839c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da13b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea26f0 'wmemmove')))
      (ImplicitCastExpr 0x8eb8430 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb8354 <col:25> 'char_type *' lvalue ParmVar 0x8eb7380 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8440 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb836c <col:31> 'const char_type *' lvalue ParmVar 0x8eb73d0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8450 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8384 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x8eb7410 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb85b0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x8eb85a0 <col:9, col:39>
    (CallExpr 0x8eb8548 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8538 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8504 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x8da1210 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x8ea2680 'wmemcpy')))
      (ImplicitCastExpr 0x8eb8570 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84bc <col:24> 'char_type *' lvalue ParmVar 0x8eb7520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8580 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84d4 <col:30> 'const char_type *' lvalue ParmVar 0x8eb7570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8590 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb84ec <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb75b0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb8710 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x8eb8700 <col:9, col:37>
    (CallExpr 0x8eb86a8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8698 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8644 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da1570 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2760 'wmemset')))
      (ImplicitCastExpr 0x8eb86d0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb85fc <col:24> 'char_type *' lvalue ParmVar 0x8eb7690 '__s' 'char_type *'))
      (ImplicitCastExpr 0x8eb86e0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb8614 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x8eb7710 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x8eb86f0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb862c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb76d0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb8790 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x8eb8780 <col:9, col:29>
    (CXXFunctionalCastExpr 0x8eb8768 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x8eb8758 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x8eb8748 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8730 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7880 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb8810 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x8eb8800 <col:9, col:28>
    (CXXFunctionalCastExpr 0x8eb87e8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x8eb87d8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x8eb87c8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb87b0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb79a0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb88a0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x8eb8890 <col:9, col:24>
    (BinaryOperator 0x8eb8878 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb8858 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8824 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7ac0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb8868 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb883c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7b10 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb8918 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x8eb8908 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb88f0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x8eb88d0 </usr/include/wctype.h:39:16, col:28> 'unsigned int'
        (IntegerLiteral 0x8eb88b8 <col:17> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb8af0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x8eb8ae0 <col:9, col:46>
    (ConditionalOperator 0x8eb8ac0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x8eb8a38 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x8eb8a28 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb892c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x8eb7bb0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x8eb8944 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x8eb8a60 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x8eb89c8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x8eb89b8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb895c <col:33> 'int_type (void)' lvalue CXXMethod 0x8eb7c50 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x8eb8ab0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8eb8a70 <col:42> 'int' 0))
      (ImplicitCastExpr 0x8eb8aa0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8a88 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')))))


    }
template <class _CharT = char> struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3cd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x8eb3cc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x8eb3c80 <col:9> 'char_type':'char' lvalue ParmVar 0x8eb14e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb3cb0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x8eb3c98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3d88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x8eb3d78 <col:9, col:24>
    (BinaryOperator 0x8eb3d60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb3d30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3cec <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1690 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3d50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x8eb16e0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3e38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x8eb3e28 <col:9, col:23>
    (BinaryOperator 0x8eb3e10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb3de0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3dd0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1800 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3e00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3df0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3db4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x8eb1850 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb3f60 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x8eb3f50 <col:9, col:48>
    (CallExpr 0x8eb3ed8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x8eb3ec8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb3e4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x8eb3f10 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f00 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e64 <col:33> 'const char_type *' lvalue ParmVar 0x8eb1950 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f30 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f20 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e7c <col:39> 'const char_type *' lvalue ParmVar 0x8eb19a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f40 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb3e94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x8eb19e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb40f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x8eb40e8 <col:9, col:36>
    (CallExpr 0x8eb40b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x8eb40a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb4054 <col:16> 'unsigned int (const char *)' lvalue Function 0x8eb3f80 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x8eb40d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb406c <col:33> 'const char_type *' lvalue ParmVar 0x8eb1b20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb43e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x8eb43d8 <col:9, col:77>
    (CXXStaticCastExpr 0x8eb43c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x8eb4338 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x8eb4328 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb42a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x8eb4140 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb4370 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4360 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb42bc <col:63> 'const char_type *' lvalue ParmVar 0x8eb1c40 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4390 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb4380 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb42d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x8eb1cd0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x8eb43a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb42ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1c80 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb4538 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x8eb4528 <col:9, col:74>
    (CXXStaticCastExpr 0x8eb4510 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4488 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x8eb4478 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb43fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb44c0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb44b0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4414 <col:58> 'char_type *' lvalue ParmVar 0x8eb1e30 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb44e0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb44d0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb442c <col:64> 'const char_type *' lvalue ParmVar 0x8eb1e80 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb44f0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4444 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1ec0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb47d8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x8eb47c8 <col:9, col:73>
    (CXXStaticCastExpr 0x8eb47b0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4728 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x8eb4718 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb46b4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb4760 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb4750 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46cc <col:57> 'char_type *' lvalue ParmVar 0x8eb2000 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb4780 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4770 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46e4 <col:63> 'const char_type *' lvalue ParmVar 0x8eb2050 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4790 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb46fc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x8eb2090 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb4928 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x8eb4918 <col:9, col:71>
    (CXXStaticCastExpr 0x8eb4900 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4878 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x8eb4868 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb47ec <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x8e8a1e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb48b0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb48a0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4804 <col:57> 'char_type *' lvalue ParmVar 0x8eb2170 '__s' 'char_type *')))
        (ImplicitCastExpr 0x8eb48d0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb48c0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb481c <col:62> 'char_type':'char' lvalue ParmVar 0x8eb21f0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x8eb48e0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4834 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x8eb21b0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb49a8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x8eb4998 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb4980 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x8eb4970 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x8eb4960 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x8eb493c <col:39> 'const int_type':'const int' lvalue ParmVar 0x8eb2380 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb4a60 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x8eb4a50 <col:9, col:69>
    (CXXStaticCastExpr 0x8eb4a38 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x8eb4a28 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x8eb4a08 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x8eb49f8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x8eb49e8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x8eb49bc <col:65> 'const char_type':'const char' lvalue ParmVar 0x8eb24a0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb4af0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x8eb4ae0 <col:9, col:24>
    (BinaryOperator 0x8eb4ac8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb4aa8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a74 <col:16> 'const int_type':'const int' lvalue ParmVar 0x8eb3960 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb4ab8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a8c <col:24> 'const int_type':'const int' lvalue ParmVar 0x8eb39b0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb4b68 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x8eb4b58 <col:9, col:56>
    (CXXStaticCastExpr 0x8eb4b40 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x8eb4b20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x8eb4b08 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb4cc8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x8eb4cb8 <col:9, col:37>
    (ConditionalOperator 0x8eb4c98 <col:16, col:37> 'int'
      (ParenExpr 0x8eb4c40 <col:16, col:29> '_Bool'
        (BinaryOperator 0x8eb4c28 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x8eb4c18 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x8eb4b7c <col:17> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &'))
          (CallExpr 0x8eb4bf8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x8eb4be8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb4b94 <col:24> 'int_type (void)' lvalue CXXMethod 0x8eb3af0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x8eb4c58 <col:33> 'int' 0)
      (ImplicitCastExpr 0x8eb4c88 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4c70 <col:37> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &')))))


    }
template <class _CharT> struct char_traits : public __gnu_cxx::char_traits<_CharT> {
        struct char_traits;
    };
    struct char_traits {
        struct char_traits;
        typedef char char_type;
        typedef int int_type;
        typedef streampos pos_type;
        typedef streamoff off_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3cd8 </usr/include/c++/4.6/bits/char_traits.h:244:7, col:22>
  (BinaryOperator 0x8eb3cc0 <col:9, col:16> 'char_type':'char' lvalue '='
    (DeclRefExpr 0x8eb3c80 <col:9> 'char_type':'char' lvalue ParmVar 0x8eb14e0 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb3cb0 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x8eb3c98 <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1570 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3d88 </usr/include/c++/4.6/bits/char_traits.h:248:7, col:30>
  (ReturnStmt 0x8eb3d78 <col:9, col:24>
    (BinaryOperator 0x8eb3d60 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb3d30 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d20 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3cec <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1690 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3d50 <col:24> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3d40 <col:24> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d04 <col:24> 'const char_type':'const char' lvalue ParmVar 0x8eb16e0 '__c2' 'const char_type &'))))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb3e38 </usr/include/c++/4.6/bits/char_traits.h:252:7, col:29>
  (ReturnStmt 0x8eb3e28 <col:9, col:23>
    (BinaryOperator 0x8eb3e10 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb3de0 <col:16> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3dd0 <col:16> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3d9c <col:16> 'const char_type':'const char' lvalue ParmVar 0x8eb1800 '__c1' 'const char_type &')))
      (ImplicitCastExpr 0x8eb3e00 <col:23> 'int' <IntegralCast>
        (ImplicitCastExpr 0x8eb3df0 <col:23> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x8eb3db4 <col:23> 'const char_type':'const char' lvalue ParmVar 0x8eb1850 '__c2' 'const char_type &'))))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb3f60 </usr/include/c++/4.6/bits/char_traits.h:256:7, col:51>
  (ReturnStmt 0x8eb3f50 <col:9, col:48>
    (CallExpr 0x8eb3ed8 <col:16, col:48> 'int'
      (ImplicitCastExpr 0x8eb3ec8 <col:16> 'int (*)(const void *, const void *, unsigned int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb3e4c <col:16> 'int (const void *, const void *, unsigned int)' lvalue Function 0x8e8ecf0 '__builtin_memcmp' 'int (const void *, const void *, unsigned int)'))
      (ImplicitCastExpr 0x8eb3f10 <col:33> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f00 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e64 <col:33> 'const char_type *' lvalue ParmVar 0x8eb1950 '__s1' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f30 <col:39> 'const void *' <BitCast>
        (ImplicitCastExpr 0x8eb3f20 <col:39> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb3e7c <col:39> 'const char_type *' lvalue ParmVar 0x8eb19a0 '__s2' 'const char_type *')))
      (ImplicitCastExpr 0x8eb3f40 <col:45> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb3e94 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x8eb19e0 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb40f8 </usr/include/c++/4.6/bits/char_traits.h:260:7, col:39>
  (ReturnStmt 0x8eb40e8 <col:9, col:36>
    (CallExpr 0x8eb40b8 <col:16, col:36> 'unsigned int'
      (ImplicitCastExpr 0x8eb40a8 <col:16> 'unsigned int (*)(const char *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb4054 <col:16> 'unsigned int (const char *)' lvalue Function 0x8eb3f80 '__builtin_strlen' 'unsigned int (const char *)'))
      (ImplicitCastExpr 0x8eb40d8 <col:33> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb406c <col:33> 'const char_type *' lvalue ParmVar 0x8eb1b20 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb43e8 </usr/include/c++/4.6/bits/char_traits.h:264:7, col:80>
  (ReturnStmt 0x8eb43d8 <col:9, col:77>
    (CXXStaticCastExpr 0x8eb43c0 <col:16, col:77> 'const char_type *' static_cast<const char_type *> <BitCast>
      (CallExpr 0x8eb4338 <col:46, col:76> 'void *'
        (ImplicitCastExpr 0x8eb4328 <col:46> 'void *(*)(const void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb42a4 <col:46> 'void *(const void *, int, unsigned int)' lvalue Function 0x8eb4140 '__builtin_memchr' 'void *(const void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb4370 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4360 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb42bc <col:63> 'const char_type *' lvalue ParmVar 0x8eb1c40 '__s' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4390 <col:68> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb4380 <col:68> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb42d4 <col:68> 'const char_type':'const char' lvalue ParmVar 0x8eb1cd0 '__a' 'const char_type &')))
        (ImplicitCastExpr 0x8eb43a0 <col:73> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb42ec <col:73> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1c80 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb4538 </usr/include/c++/4.6/bits/char_traits.h:268:7, col:77>
  (ReturnStmt 0x8eb4528 <col:9, col:74>
    (CXXStaticCastExpr 0x8eb4510 <col:16, col:74> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4488 <col:40, col:73> 'void *'
        (ImplicitCastExpr 0x8eb4478 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb43fc <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8e7f5d0 '__builtin_memmove' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb44c0 <col:58> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb44b0 <col:58> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4414 <col:58> 'char_type *' lvalue ParmVar 0x8eb1e30 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb44e0 <col:64> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb44d0 <col:64> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb442c <col:64> 'const char_type *' lvalue ParmVar 0x8eb1e80 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb44f0 <col:70> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4444 <col:70> 'size_t':'unsigned int' lvalue ParmVar 0x8eb1ec0 '__n' 'size_t':'unsigned int'))))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb47d8 </usr/include/c++/4.6/bits/char_traits.h:272:7, col:76>
  (ReturnStmt 0x8eb47c8 <col:9, col:73>
    (CXXStaticCastExpr 0x8eb47b0 <col:16, col:73> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4728 <col:40, col:72> 'void *'
        (ImplicitCastExpr 0x8eb4718 <col:40> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb46b4 <col:40> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x8eb4760 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb4750 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46cc <col:57> 'char_type *' lvalue ParmVar 0x8eb2000 '__s1' 'char_type *')))
        (ImplicitCastExpr 0x8eb4780 <col:63> 'const void *' <BitCast>
          (ImplicitCastExpr 0x8eb4770 <col:63> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb46e4 <col:63> 'const char_type *' lvalue ParmVar 0x8eb2050 '__s2' 'const char_type *')))
        (ImplicitCastExpr 0x8eb4790 <col:69> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb46fc <col:69> 'size_t':'unsigned int' lvalue ParmVar 0x8eb2090 '__n' 'size_t':'unsigned int'))))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb4928 </usr/include/c++/4.6/bits/char_traits.h:276:7, col:74>
  (ReturnStmt 0x8eb4918 <col:9, col:71>
    (CXXStaticCastExpr 0x8eb4900 <col:16, col:71> 'char_type *' static_cast<char_type *> <BitCast>
      (CallExpr 0x8eb4878 <col:40, col:70> 'void *'
        (ImplicitCastExpr 0x8eb4868 <col:40> 'void *(*)(void *, int, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb47ec <col:40> 'void *(void *, int, unsigned int)' lvalue Function 0x8e8a1e0 '__builtin_memset' 'void *(void *, int, unsigned int)'))
        (ImplicitCastExpr 0x8eb48b0 <col:57> 'void *' <BitCast>
          (ImplicitCastExpr 0x8eb48a0 <col:57> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x8eb4804 <col:57> 'char_type *' lvalue ParmVar 0x8eb2170 '__s' 'char_type *')))
        (ImplicitCastExpr 0x8eb48d0 <col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x8eb48c0 <col:62> 'char_type':'char' <LValueToRValue>
            (DeclRefExpr 0x8eb481c <col:62> 'char_type':'char' lvalue ParmVar 0x8eb21f0 '__a' 'char_type':'char')))
        (ImplicitCastExpr 0x8eb48e0 <col:67> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb4834 <col:67> 'size_t':'unsigned int' lvalue ParmVar 0x8eb21b0 '__n' 'size_t':'unsigned int'))))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb49a8 </usr/include/c++/4.6/bits/char_traits.h:280:7, col:45>
  (ReturnStmt 0x8eb4998 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb4980 <col:16, col:42> 'char_type':'char' static_cast<char_type> <NoOp>
      (ImplicitCastExpr 0x8eb4970 <col:39> 'char_type':'char' <IntegralCast>
        (ImplicitCastExpr 0x8eb4960 <col:39> 'int_type':'int' <LValueToRValue>
          (DeclRefExpr 0x8eb493c <col:39> 'const int_type':'const int' lvalue ParmVar 0x8eb2380 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb4a60 </usr/include/c++/4.6/bits/char_traits.h:286:7, col:72>
  (ReturnStmt 0x8eb4a50 <col:9, col:69>
    (CXXStaticCastExpr 0x8eb4a38 <col:16, col:69> 'int_type':'int' static_cast<int_type> <NoOp>
      (ImplicitCastExpr 0x8eb4a28 <col:38, col:68> 'int_type':'int' <IntegralCast>
        (CXXStaticCastExpr 0x8eb4a08 <col:38, col:68> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x8eb49f8 <col:65> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x8eb49e8 <col:65> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x8eb49bc <col:65> 'const char_type':'const char' lvalue ParmVar 0x8eb24a0 '__c' 'const char_type &'))))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb4af0 </usr/include/c++/4.6/bits/char_traits.h:290:7, col:30>
  (ReturnStmt 0x8eb4ae0 <col:9, col:24>
    (BinaryOperator 0x8eb4ac8 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb4aa8 <col:16> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a74 <col:16> 'const int_type':'const int' lvalue ParmVar 0x8eb3960 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb4ab8 <col:24> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4a8c <col:24> 'const int_type':'const int' lvalue ParmVar 0x8eb39b0 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb4b68 </usr/include/c++/4.6/bits/char_traits.h:294:7, col:59>
  (ReturnStmt 0x8eb4b58 <col:9, col:56>
    (CXXStaticCastExpr 0x8eb4b40 <col:16, col:56> 'int_type':'int' static_cast<int_type> <NoOp>
      (UnaryOperator 0x8eb4b20 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1149:28, col:29> 'int' prefix '-'
        (IntegerLiteral 0x8eb4b08 <col:29> 'int' 1)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb4cc8 </usr/include/c++/4.6/bits/char_traits.h:298:7, col:42>
  (ReturnStmt 0x8eb4cb8 <col:9, col:37>
    (ConditionalOperator 0x8eb4c98 <col:16, col:37> 'int'
      (ParenExpr 0x8eb4c40 <col:16, col:29> '_Bool'
        (BinaryOperator 0x8eb4c28 <col:17, col:28> '_Bool' '=='
          (ImplicitCastExpr 0x8eb4c18 <col:17> 'int_type':'int' <LValueToRValue>
            (DeclRefExpr 0x8eb4b7c <col:17> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &'))
          (CallExpr 0x8eb4bf8 <col:24, col:28> 'int_type':'int'
            (ImplicitCastExpr 0x8eb4be8 <col:24> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb4b94 <col:24> 'int_type (void)' lvalue CXXMethod 0x8eb3af0 'eof' 'int_type (void)')))))
      (IntegerLiteral 0x8eb4c58 <col:33> 'int' 0)
      (ImplicitCastExpr 0x8eb4c88 <col:37> 'int_type':'int' <LValueToRValue>
        (DeclRefExpr 0x8eb4c70 <col:37> 'const int_type':'const int' lvalue ParmVar 0x8eb3b60 '__c' 'const int_type &')))))


    };
    struct char_traits {
        struct char_traits;
        typedef wchar_t char_type;
        typedef wint_t int_type;
        typedef streamoff off_type;
        typedef wstreampos pos_type;
        typedef mbstate_t state_type;
        static void assign(char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7e38 </usr/include/c++/4.6/bits/char_traits.h:315:7, col:22>
  (BinaryOperator 0x8eb7e20 <col:9, col:16> 'char_type':'wchar_t' lvalue '='
    (DeclRefExpr 0x8eb7de0 <col:9> 'char_type':'wchar_t' lvalue ParmVar 0x8eb5080 '__c1' 'char_type &')
    (ImplicitCastExpr 0x8eb7e10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
      (DeclRefExpr 0x8eb7df8 <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5110 '__c2' 'const char_type &'))))


        static bool eq(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7ec8 </usr/include/c++/4.6/bits/char_traits.h:319:7, col:30>
  (ReturnStmt 0x8eb7eb8 <col:9, col:24>
    (BinaryOperator 0x8eb7ea0 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb7e80 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e4c <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5230 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7e90 <col:24> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7e64 <col:24> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5280 '__c2' 'const char_type &')))))


        static bool lt(const char_type &__c1, const char_type &__c2) (CompoundStmt 0x8eb7f58 </usr/include/c++/4.6/bits/char_traits.h:323:7, col:29>
  (ReturnStmt 0x8eb7f48 <col:9, col:23>
    (BinaryOperator 0x8eb7f30 <col:16, col:23> '_Bool' '<'
      (ImplicitCastExpr 0x8eb7f10 <col:16> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7edc <col:16> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53a0 '__c1' 'const char_type &'))
      (ImplicitCastExpr 0x8eb7f20 <col:23> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb7ef4 <col:23> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb53f0 '__c2' 'const char_type &')))))


        static int compare(const char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb80c0 </usr/include/c++/4.6/bits/char_traits.h:327:7, col:42>
  (ReturnStmt 0x8eb80b0 <col:9, col:39>
    (CallExpr 0x8eb8058 <col:16, col:39> 'int'
      (ImplicitCastExpr 0x8eb8048 <col:16> 'int (*)(const wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb7fec <col:16> 'int (const wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da1060 'wmemcmp' 'int (const wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea2610 'wmemcmp')))
      (ImplicitCastExpr 0x8eb8080 <col:24> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fa4 <col:24> 'const char_type *' lvalue ParmVar 0x8eb54f0 '__s1' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8090 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb7fbc <col:30> 'const char_type *' lvalue ParmVar 0x8eb5540 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb80a0 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb7fd4 <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb5580 '__n' 'size_t':'unsigned int')))))


        static size_t length(const char_type *__s) (CompoundStmt 0x8eb81c8 </usr/include/c++/4.6/bits/char_traits.h:331:7, col:29>
  (ReturnStmt 0x8eb81b8 <col:9, col:26>
    (CallExpr 0x8eb8188 <col:16, col:26> 'size_t':'unsigned int'
      (ImplicitCastExpr 0x8eb8178 <col:16> 'size_t (*)(const wchar_t *) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8124 <col:16> 'size_t (const wchar_t *) throw()' lvalue Function 0x8da0990 'wcslen' 'size_t (const wchar_t *) throw()' (UsingShadow 0x8e9db90 'wcslen')))
      (ImplicitCastExpr 0x8eb81a8 <col:23> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb810c <col:23> 'const char_type *' lvalue ParmVar 0x8eb5690 '__s' 'const char_type *')))))


        static const char_type *find(const char_type *__s, size_t __n, const char_type &__a) (CompoundStmt 0x8eb8308 </usr/include/c++/4.6/bits/char_traits.h:335:7, col:40>
  (ReturnStmt 0x8eb82f8 <col:9, col:37>
    (ImplicitCastExpr 0x8eb82e8 <col:16, col:37> 'const char_type *' <NoOp>
      (CallExpr 0x8eb8290 <col:16, col:37> 'wchar_t *'
        (ImplicitCastExpr 0x8eb8280 <col:16> 'wchar_t *(*)(const wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb8260 <col:16> 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da0eb0 'wmemchr' 'wchar_t *(const wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2a70 'wmemchr')))
        (ImplicitCastExpr 0x8eb82b8 <col:24> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x8eb8218 <col:24> 'const char_type *' lvalue ParmVar 0x8eb5790 '__s' 'const char_type *'))
        (ImplicitCastExpr 0x8eb82c8 <col:29> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb8230 <col:29> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb5820 '__a' 'const char_type &'))
        (ImplicitCastExpr 0x8eb82d8 <col:34> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8248 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb57d0 '__n' 'size_t':'unsigned int'))))))


        static char_type *move(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb8470 </usr/include/c++/4.6/bits/char_traits.h:339:7, col:43>
  (ReturnStmt 0x8eb8460 <col:9, col:40>
    (CallExpr 0x8eb8408 <col:16, col:40> 'wchar_t *'
      (ImplicitCastExpr 0x8eb83f8 <col:16> 'wchar_t *(*)(wchar_t *, const wchar_t *, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb839c <col:16> 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' lvalue Function 0x8da13b0 'wmemmove' 'wchar_t *(wchar_t *, const wchar_t *, size_t) throw()' (UsingShadow 0x8ea26f0 'wmemmove')))
      (ImplicitCastExpr 0x8eb8430 <col:25> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb8354 <col:25> 'char_type *' lvalue ParmVar 0x8eb7380 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8440 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb836c <col:31> 'const char_type *' lvalue ParmVar 0x8eb73d0 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8450 <col:37> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8384 <col:37> 'size_t':'unsigned int' lvalue ParmVar 0x8eb7410 '__n' 'size_t':'unsigned int')))))


        static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n) (CompoundStmt 0x8eb85b0 </usr/include/c++/4.6/bits/char_traits.h:343:7, col:42>
  (ReturnStmt 0x8eb85a0 <col:9, col:39>
    (CallExpr 0x8eb8548 <col:16, col:39> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8538 <col:16> 'wchar_t *(*)(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8504 <col:16> 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' lvalue Function 0x8da1210 'wmemcpy' 'wchar_t *(wchar_t *restrict, const wchar_t *restrict, size_t) throw()' (UsingShadow 0x8ea2680 'wmemcpy')))
      (ImplicitCastExpr 0x8eb8570 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84bc <col:24> 'char_type *' lvalue ParmVar 0x8eb7520 '__s1' 'char_type *'))
      (ImplicitCastExpr 0x8eb8580 <col:30> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb84d4 <col:30> 'const char_type *' lvalue ParmVar 0x8eb7570 '__s2' 'const char_type *'))
      (ImplicitCastExpr 0x8eb8590 <col:36> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb84ec <col:36> 'size_t':'unsigned int' lvalue ParmVar 0x8eb75b0 '__n' 'size_t':'unsigned int')))))


        static char_type *assign(char_type *__s, size_t __n, char_type __a) (CompoundStmt 0x8eb8710 </usr/include/c++/4.6/bits/char_traits.h:347:7, col:40>
  (ReturnStmt 0x8eb8700 <col:9, col:37>
    (CallExpr 0x8eb86a8 <col:16, col:37> 'wchar_t *'
      (ImplicitCastExpr 0x8eb8698 <col:16> 'wchar_t *(*)(wchar_t *, wchar_t, size_t) throw()' <FunctionToPointerDecay>
        (DeclRefExpr 0x8eb8644 <col:16> 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' lvalue Function 0x8da1570 'wmemset' 'wchar_t *(wchar_t *, wchar_t, size_t) throw()' (UsingShadow 0x8ea2760 'wmemset')))
      (ImplicitCastExpr 0x8eb86d0 <col:24> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x8eb85fc <col:24> 'char_type *' lvalue ParmVar 0x8eb7690 '__s' 'char_type *'))
      (ImplicitCastExpr 0x8eb86e0 <col:29> 'char_type':'wchar_t' <LValueToRValue>
        (DeclRefExpr 0x8eb8614 <col:29> 'char_type':'wchar_t' lvalue ParmVar 0x8eb7710 '__a' 'char_type':'wchar_t'))
      (ImplicitCastExpr 0x8eb86f0 <col:34> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb862c <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x8eb76d0 '__n' 'size_t':'unsigned int')))))


        static char_type to_char_type(const int_type &__c) (CompoundStmt 0x8eb8790 </usr/include/c++/4.6/bits/char_traits.h:351:7, col:32>
  (ReturnStmt 0x8eb8780 <col:9, col:29>
    (CXXFunctionalCastExpr 0x8eb8768 <col:16, col:29> 'char_type':'wchar_t' functional cast to char_type <NoOp>
      (ImplicitCastExpr 0x8eb8758 <col:26> 'char_type':'wchar_t' <IntegralCast>
        (ImplicitCastExpr 0x8eb8748 <col:26> 'int_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8eb8730 <col:26> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7880 '__c' 'const int_type &'))))))


        static int_type to_int_type(const char_type &__c) (CompoundStmt 0x8eb8810 </usr/include/c++/4.6/bits/char_traits.h:355:7, col:31>
  (ReturnStmt 0x8eb8800 <col:9, col:28>
    (CXXFunctionalCastExpr 0x8eb87e8 <col:16, col:28> 'int_type':'unsigned int' functional cast to int_type <NoOp>
      (ImplicitCastExpr 0x8eb87d8 <col:25> 'int_type':'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x8eb87c8 <col:25> 'char_type':'wchar_t' <LValueToRValue>
          (DeclRefExpr 0x8eb87b0 <col:25> 'const char_type':'const wchar_t' lvalue ParmVar 0x8eb79a0 '__c' 'const char_type &'))))))


        static bool eq_int_type(const int_type &__c1, const int_type &__c2) (CompoundStmt 0x8eb88a0 </usr/include/c++/4.6/bits/char_traits.h:359:7, col:30>
  (ReturnStmt 0x8eb8890 <col:9, col:24>
    (BinaryOperator 0x8eb8878 <col:16, col:24> '_Bool' '=='
      (ImplicitCastExpr 0x8eb8858 <col:16> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8824 <col:16> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7ac0 '__c1' 'const int_type &'))
      (ImplicitCastExpr 0x8eb8868 <col:24> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb883c <col:24> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7b10 '__c2' 'const int_type &')))))


        static int_type eof() (CompoundStmt 0x8eb8918 </usr/include/c++/4.6/bits/char_traits.h:363:7, col:45>
  (ReturnStmt 0x8eb8908 <col:9, col:42>
    (CXXStaticCastExpr 0x8eb88f0 <col:16, col:42> 'int_type':'unsigned int' static_cast<int_type> <NoOp>
      (ParenExpr 0x8eb88d0 </usr/include/wctype.h:39:16, col:28> 'unsigned int'
        (IntegerLiteral 0x8eb88b8 <col:17> 'unsigned int' 4294967295)))))


        static int_type not_eof(const int_type &__c) (CompoundStmt 0x8eb8af0 </usr/include/c++/4.6/bits/char_traits.h:367:7, col:51>
  (ReturnStmt 0x8eb8ae0 <col:9, col:46>
    (ConditionalOperator 0x8eb8ac0 <col:16, col:46> 'unsigned int'
      (CallExpr 0x8eb8a38 <col:16, col:38> '_Bool'
        (ImplicitCastExpr 0x8eb8a28 <col:16> '_Bool (*)(const int_type &, const int_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8eb892c <col:16> '_Bool (const int_type &, const int_type &)' lvalue CXXMethod 0x8eb7bb0 'eq_int_type' '_Bool (const int_type &, const int_type &)'))
        (DeclRefExpr 0x8eb8944 <col:28> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')
        (MaterializeTemporaryExpr 0x8eb8a60 <col:33, col:37> 'const int_type':'const unsigned int' lvalue
          (CallExpr 0x8eb89c8 <col:33, col:37> 'int_type':'unsigned int'
            (ImplicitCastExpr 0x8eb89b8 <col:33> 'int_type (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8eb895c <col:33> 'int_type (void)' lvalue CXXMethod 0x8eb7c50 'eof' 'int_type (void)')))))
      (ImplicitCastExpr 0x8eb8ab0 <col:42> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8eb8a70 <col:42> 'int' 0))
      (ImplicitCastExpr 0x8eb8aa0 <col:46> 'int_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8eb8a88 <col:46> 'const int_type':'const unsigned int' lvalue ParmVar 0x8eb7cc0 '__c' 'const int_type &')))))


    };
}
extern unsigned int __builtin_strlen(const char *);
extern void *__builtin_memchr(const void *, int, unsigned int);
extern void *__builtin_memcpy(void *, const void *, unsigned int);
extern "C++" {
    namespace std {
        class exception {
            class exception;
        public:
        public:
            exception() throw() (CompoundStmt 0x8eb9010 </usr/include/c++/4.6/exception:63:25, col:27>)


            virtual void ~exception() throw();
            virtual const char *what() const throw();
            inline std::exception &operator=(const std::exception &) throw();
            inline exception(const std::exception &) throw();
        };
        class bad_exception : public std::exception {
            class bad_exception;
        public:
        public:
            bad_exception() throw() : std::exception() (CompoundStmt 0x8ec0190 </usr/include/c++/4.6/exception:76:29, col:31>)


            virtual void ~bad_exception() throw();
            virtual const char *what() const throw();
            inline std::bad_exception &operator=(const std::bad_exception &) throw();
        };
        typedef void (*terminate_handler)();
        typedef void (*unexpected_handler)();
        terminate_handler set_terminate(terminate_handler) throw();
        void terminate() throw();
        unexpected_handler set_unexpected(unexpected_handler) throw();
        void unexpected();
        bool uncaught_exception() throw();
    }
    namespace __gnu_cxx {
        void __verbose_terminate_handler();
    }
}
extern "C++" {
    namespace std {
        class bad_alloc : public std::exception {
            class bad_alloc;
        public:
        public:
            bad_alloc() throw() : std::exception() (CompoundStmt 0x8ec0ca0 </usr/include/c++/4.6/new:58:25, col:27>)


            virtual void ~bad_alloc() throw();
            virtual const char *what() const throw();
            inline std::bad_alloc &operator=(const std::bad_alloc &) throw();
        };
        struct nothrow_t {
            struct nothrow_t;
        };
        extern const std::nothrow_t nothrow;
        typedef void (*new_handler)();
        new_handler set_new_handler(new_handler) throw();
    }
    void *operator new(std::size_t) throw(std::bad_alloc);
    void *operator new[](std::size_t) throw(std::bad_alloc);
    void operator delete(void *) throw();
    void operator delete[](void *) throw();
    void *operator new(std::size_t, const std::nothrow_t &) throw();
    void *operator new[](std::size_t, const std::nothrow_t &) throw();
    void operator delete(void *, const std::nothrow_t &) throw();
    void operator delete[](void *, const std::nothrow_t &) throw();
    inline void *operator new(std::size_t, void *__p) throw() (CompoundStmt 0x8ec2538 </usr/include/c++/4.6/new:102:59, col:73>
  (ReturnStmt 0x8ec2528 <col:61, col:68>
    (ImplicitCastExpr 0x8ec2518 <col:68> 'void *' <LValueToRValue>
      (DeclRefExpr 0x8ec24fc <col:68> 'void *' lvalue ParmVar 0x8ec1d60 '__p' 'void *'))))


    inline void *operator new[](std::size_t, void *__p) throw() (CompoundStmt 0x8ec2718 </usr/include/c++/4.6/new:103:61, col:75>
  (ReturnStmt 0x8ec2708 <col:63, col:70>
    (ImplicitCastExpr 0x8ec26f8 <col:70> 'void *' <LValueToRValue>
      (DeclRefExpr 0x8ec26dc <col:70> 'void *' lvalue ParmVar 0x8ec25d0 '__p' 'void *'))))


    inline void operator delete(void *, void *) throw() (CompoundStmt 0x8ec28e0 </usr/include/c++/4.6/new:106:54, col:56>)


    inline void operator delete[](void *, void *) throw() (CompoundStmt 0x8ec2a60 </usr/include/c++/4.6/new:107:54, col:56>)


}
namespace __gnu_cxx {
    using std::size_t;
    ;
    using std::ptrdiff_t;
    ;
    template <typename _Tp = wchar_t> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw() (CompoundStmt 0x8ec41f0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator(const __gnu_cxx::new_allocator<wchar_t> &) throw() (CompoundStmt 0x8ec4200 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1 = wchar_t> new_allocator(const new_allocator<wchar_t> &) throw()template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw() (CompoundStmt 0x8ec4220 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const wchar_t &__val);
        void destroy(pointer __p);
    }
template <typename _Tp = char> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1> struct rebind;
        new_allocator() throw();
        new_allocator(const __gnu_cxx::new_allocator<char> &) throw();
        template <typename _Tp1> new_allocator(const new_allocator<_Tp1> &) throw();
        void ~new_allocator() throw();
        pointer address(reference __x) const;
        const_pointer address(const_reference __x) const;
        pointer allocate(size_type __n, const void *);
        void deallocate(pointer __p, size_type);
        size_type max_size() const throw();
        void construct(pointer __p, const char &__val);
        void destroy(pointer __p);
    }
template <typename _Tp> class new_allocator {
        class new_allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef new_allocator<_Tp1> other;
        };
        new_allocator<_Tp>() throw() (CompoundStmt 0x8ec41f0 </usr/include/c++/4.6/ext/new_allocator.h:69:31, col:33>)


        new_allocator<_Tp>(const new_allocator<_Tp> &) throw() (CompoundStmt 0x8ec4200 </usr/include/c++/4.6/ext/new_allocator.h:71:51, col:53>)


        template <typename _Tp1> new_allocator<_Tp>(const new_allocator<_Tp1> &) throw() (CompoundStmt 0x8ec4210 </usr/include/c++/4.6/ext/new_allocator.h:74:59, col:61>)

;
        void ~new_allocator<_Tp>() throw() (CompoundStmt 0x8ec4220 </usr/include/c++/4.6/ext/new_allocator.h:76:32, col:34>)


        pointer address(reference __x) const (CompoundStmt 0x8ec42c8 </usr/include/c++/4.6/ext/new_allocator.h:79:36, col:68>
  (ReturnStmt 0x8ec42b8 <col:38, col:65>
    (CallExpr 0x8ec4298 <col:45, col:65> '<dependent type>'
      (UnresolvedLookupExpr 0x8ec4248 <col:45, col:50> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
      (DeclRefExpr 0x8ec427c <col:62> '_Tp' lvalue ParmVar 0x8ec3980 '__x' 'reference':'_Tp &'))))


        const_pointer address(const_reference __x) const (CompoundStmt 0x8ec4378 </usr/include/c++/4.6/ext/new_allocator.h:82:42, col:74>
  (ReturnStmt 0x8ec4368 <col:44, col:71>
    (CallExpr 0x8ec4348 <col:51, col:71> '<dependent type>'
      (UnresolvedLookupExpr 0x8ec42f8 <col:51, col:56> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
      (DeclRefExpr 0x8ec432c <col:68> 'const _Tp' lvalue ParmVar 0x8ec3ac0 '__x' 'const_reference':'const _Tp &'))))


        pointer allocate(size_type __n, const void * = (ImplicitCastExpr 0x8ec41e0 </usr/include/c++/4.6/ext/new_allocator.h:87:45> 'const void *' <NullToPointer>
  (IntegerLiteral 0x8ec41c8 <col:45> 'int' 0))
) (CompoundStmt 0x8ec69b0 </usr/include/c++/4.6/ext/new_allocator.h:88:7, line:93:7>
  (IfStmt 0x8ec67f8 <line:89:2, line:90:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8ec6740 <line:89:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x8ec6708 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e6e1d0 0x8e6e7a0)
      (DeclRefExpr 0x8ec438c <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x8ec3bf0 '__n' 'size_type':'unsigned int')
      (CallExpr 0x8ec4410 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ec43d8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x8ec43c8 <col:12> 'new_allocator<_Tp> *' this))))
    (CallExpr 0x8ec67d8 <line:90:4, col:27> 'void'
      (ImplicitCastExpr 0x8ec67c8 <col:4, col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8ec6788 <col:4, col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x8e0eed0 '__throw_bad_alloc' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x8ec69a0 <line:92:2, col:60>
    (CXXStaticCastExpr 0x8ec6988 <col:9, col:60> '_Tp *' static_cast<_Tp *> <Dependent>
      (CallExpr 0x8ec6958 <col:27, col:59> 'void *'
        (ImplicitCastExpr 0x8ec6948 <col:27, <invalid sloc>> 'void *(*)(std::size_t) throw(std::bad_alloc)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8ec68f0 <col:27, <invalid sloc>> 'void *(std::size_t) throw(std::bad_alloc)' lvalue Function 0x8ec1160 'operator new' 'void *(std::size_t) throw(std::bad_alloc)'))
        (BinaryOperator 0x8ec68d8 <col:42, col:58> 'unsigned int' '*'
          (ImplicitCastExpr 0x8ec68c8 <col:42> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x8ec688c <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x8ec3bf0 '__n' 'size_type':'unsigned int'))
          (UnaryExprOrTypeTraitExpr 0x8ec68b0 <col:48, col:58> 'unsigned int' sizeof '_Tp'))))))


        void deallocate(pointer __p, size_type) (CompoundStmt 0x8ec6a58 </usr/include/c++/4.6/ext/new_allocator.h:98:7, col:33>
  (CallExpr 0x8ec6a38 <col:9, col:30> '<dependent type>'
    (UnresolvedLookupExpr 0x8ec69e0 <col:9, col:20> '<overloaded function type>' lvalue (no ADL) = '1' 0x8ec13d0 0x8ec1aa0 0x8ec2830)
    (DeclRefExpr 0x8ec6a1c <col:27> 'pointer':'_Tp *' lvalue ParmVar 0x8ec3d50 '__p' 'pointer':'_Tp *')))


        size_type max_size() const throw() (CompoundStmt 0x8ec6b18 </usr/include/c++/4.6/ext/new_allocator.h:102:7, col:42>
  (ReturnStmt 0x8ec6b08 <col:9, col:39>
    (BinaryOperator 0x8ec6af0 <col:16, col:39> 'unsigned int' '/'
      (CXXFunctionalCastExpr 0x8ec6ab8 <col:16, col:25> 'size_t':'unsigned int' functional cast to size_t <NoOp>
        (ImplicitCastExpr 0x8ec6aa8 <col:23, col:24> 'size_t':'unsigned int' <IntegralCast>
          (UnaryOperator 0x8ec6a90 <col:23, col:24> 'int' prefix '-'
            (IntegerLiteral 0x8ec6a78 <col:24> 'int' 1))))
      (UnaryExprOrTypeTraitExpr 0x8ec6ad8 <col:29, col:39> 'unsigned int' sizeof '_Tp'))))


        void construct(pointer __p, const _Tp &__val) (CompoundStmt 0x8ec6bd0 </usr/include/c++/4.6/ext/new_allocator.h:108:7, col:40>
  (CXXNewExpr 0x8ec6b90 <col:9, col:37> '_Tp *'
    (CStyleCastExpr 0x8ec6b58 <col:15, col:23> 'void *' <Dependent>
      (DeclRefExpr 0x8ec6b2c <col:23> 'pointer':'_Tp *' lvalue ParmVar 0x8ec3f60 '__p' 'pointer':'_Tp *'))
    (DeclRefExpr 0x8ec6b70 <col:32> 'const _Tp' lvalue ParmVar 0x8ec3fb0 '__val' 'const _Tp &')))


        void destroy(pointer __p) (CompoundStmt 0x8ec6c58 </usr/include/c++/4.6/ext/new_allocator.h:118:28, col:43>
  (CallExpr 0x8ec6c38 <col:30, col:40> 'void'
    (CXXPseudoDestructorExpr 0x8ec6c08 <col:30, col:36> 'void (*)(void)'
      (DeclRefExpr 0x8ec6be4 <col:30> 'pointer':'_Tp *' lvalue ParmVar 0x8ec40c0 '__p' 'pointer':'_Tp *'))))


    };
    template <typename _Tp> inline bool operator==(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x8ec7000 </usr/include/c++/4.6/ext/new_allocator.h:124:5, col:20>
  (ReturnStmt 0x8ec6ff0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec6fe0 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator!=(const new_allocator<_Tp> &, const new_allocator<_Tp> &) (CompoundStmt 0x8ec7370 </usr/include/c++/4.6/ext/new_allocator.h:129:5, col:21>
  (ReturnStmt 0x8ec7360 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec7350 <col:14> '_Bool' false)))

;
}
namespace std {
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x92fed80 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x92fead4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x8ecf610 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    };
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x92fed80 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x92fead4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x8ecf610 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator : public __gnu_cxx::new_allocator<_Tp> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Tp *pointer;
        typedef const _Tp *const_pointer;
        typedef _Tp &reference;
        typedef const _Tp &const_reference;
        typedef _Tp value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
        allocator<_Alloc>() throw() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator<_Alloc>(const allocator<_Alloc> &__a) throw() : __gnu_cxx::new_allocator<_Tp>((DeclRefExpr 0x8ec9078 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const allocator<_Alloc>' lvalue ParmVar 0x8ec8520 '__a' 'const allocator<_Alloc> &')
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1> allocator<_Alloc>(const allocator<_Tp1> &) throw() (CompoundStmt 0x8ec90e0 </usr/include/c++/4.6/bits/allocator.h:113:51, col:53>)

;
        void ~allocator<_Alloc>() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _T1, typename _T2> inline bool operator==(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x8ec9540 </usr/include/c++/4.6/bits/allocator.h:123:5, col:20>
  (ReturnStmt 0x8ec9530 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec9520 <col:14> '_Bool' true)))

;
    template <typename _Tp> inline bool operator==(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x8ec98d0 </usr/include/c++/4.6/bits/allocator.h:128:5, col:20>
  (ReturnStmt 0x8ec98c0 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec98b0 <col:14> '_Bool' true)))

;
    template <typename _T1, typename _T2> inline bool operator!=(const allocator<_T1> &, const allocator<_T2> &) (CompoundStmt 0x8ec9ca0 </usr/include/c++/4.6/bits/allocator.h:133:5, col:21>
  (ReturnStmt 0x8ec9c90 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec9c80 <col:14> '_Bool' false)))

;
    template <typename _Tp> inline bool operator!=(const allocator<_Tp> &, const allocator<_Tp> &) (CompoundStmt 0x8eca010 </usr/include/c++/4.6/bits/allocator.h:138:5, col:21>
  (ReturnStmt 0x8eca000 <col:7, col:14>
    (CXXBoolLiteralExpr 0x8ec9ff0 <col:14> '_Bool' false)))

;
    class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    };
    class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x92fed80 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x92fead4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x8ecf610 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x8ed0590 </usr/include/c++/4.6/bits/allocator.h:151:36, col:53> '_Bool')
> struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &, _Alloc &) (CompoundStmt 0x8ed09e0 </usr/include/c++/4.6/bits/allocator.h:153:46, col:48>)


    };
    struct __alloc_swap {
        struct __alloc_swap;
        static void _S_do_it(_Alloc &__one, _Alloc &__two) (CompoundStmt 0x8ed1050 </usr/include/c++/4.6/bits/allocator.h:160:7, line:164:7>
  (IfStmt 0x8ed1030 <line:162:2, line:163:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8ed0f78 <line:162:6, col:15> '<dependent type>'
      (UnresolvedLookupExpr 0x8ed0f30 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ec9fc0 0x8ec9c50 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60)
      (DeclRefExpr 0x8ed0f00 <col:6> '_Alloc' lvalue ParmVar 0x8ed0db0 '__one' '_Alloc &')
      (DeclRefExpr 0x8ed0f18 <col:15> '_Alloc' lvalue ParmVar 0x8ed0e00 '__two' '_Alloc &'))
    (CallExpr 0x8ed1008 <line:163:4, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x8ed0fa0 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x8e3fbf0 0x8e40130)
      (DeclRefExpr 0x8ed0fd8 <col:9> '_Alloc' lvalue ParmVar 0x8ed0db0 '__one' '_Alloc &')
      (DeclRefExpr 0x8ed0ff0 <col:16> '_Alloc' lvalue ParmVar 0x8ed0e00 '__two' '_Alloc &'))
    <<<NULL>>>))


    };
    template <typename _Alloc, bool = (UnaryTypeTraitExpr 0x8ed10c0 </usr/include/c++/4.6/bits/allocator.h:168:36, col:53> '_Bool')
> struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &, const _Alloc &) (CompoundStmt 0x8ed1530 </usr/include/c++/4.6/bits/allocator.h:173:7, col:23>
  (ReturnStmt 0x8ed1520 <col:9, col:16>
    (CXXBoolLiteralExpr 0x8ed1510 <col:16> '_Bool' false)))


    };
    struct __alloc_neq {
        struct __alloc_neq;
        static bool _S_do_it(const _Alloc &__one, const _Alloc &__two) (CompoundStmt 0x8ed1b10 </usr/include/c++/4.6/bits/allocator.h:181:7, col:32>
  (ReturnStmt 0x8ed1b00 <col:9, col:25>
    (CXXOperatorCallExpr 0x8ed1ad8 <col:16, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8ed1a90 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ec9fc0 0x8ec9c50 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60)
      (DeclRefExpr 0x8ed1a60 <col:16> 'const _Alloc' lvalue ParmVar 0x8ed1910 '__one' 'const _Alloc &')
      (DeclRefExpr 0x8ed1a78 <col:25> 'const _Alloc' lvalue ParmVar 0x8ed1960 '__two' 'const _Alloc &'))))


    };
}
enum  {
    __LC_CTYPE = (ImplicitCastExpr 0x8ed1fa8 </usr/include/i386-linux-gnu/bits/locale.h:29:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1b90 <col:16> 'int' 0))
,
    __LC_NUMERIC = (ImplicitCastExpr 0x8ed1fb8 </usr/include/i386-linux-gnu/bits/locale.h:30:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1be8 <col:18> 'int' 1))
,
    __LC_TIME = (ImplicitCastExpr 0x8ed1fc8 </usr/include/i386-linux-gnu/bits/locale.h:31:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1c38 <col:15> 'int' 2))
,
    __LC_COLLATE = (ImplicitCastExpr 0x8ed1fd8 </usr/include/i386-linux-gnu/bits/locale.h:32:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1c88 <col:18> 'int' 3))
,
    __LC_MONETARY = (ImplicitCastExpr 0x8ed1fe8 </usr/include/i386-linux-gnu/bits/locale.h:33:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1cd8 <col:19> 'int' 4))
,
    __LC_MESSAGES = (ImplicitCastExpr 0x8ed1ff8 </usr/include/i386-linux-gnu/bits/locale.h:34:19> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1d28 <col:19> 'int' 5))
,
    __LC_ALL = (ImplicitCastExpr 0x8ed2008 </usr/include/i386-linux-gnu/bits/locale.h:35:14> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1d78 <col:14> 'int' 6))
,
    __LC_PAPER = (ImplicitCastExpr 0x8ed2018 </usr/include/i386-linux-gnu/bits/locale.h:36:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1dc8 <col:16> 'int' 7))
,
    __LC_NAME = (ImplicitCastExpr 0x8ed2028 </usr/include/i386-linux-gnu/bits/locale.h:37:15> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1e18 <col:15> 'int' 8))
,
    __LC_ADDRESS = (ImplicitCastExpr 0x8ed2038 </usr/include/i386-linux-gnu/bits/locale.h:38:18> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1e68 <col:18> 'int' 9))
,
    __LC_TELEPHONE = (ImplicitCastExpr 0x8ed2048 </usr/include/i386-linux-gnu/bits/locale.h:39:20> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1eb8 <col:20> 'int' 10))
,
    __LC_MEASUREMENT = (ImplicitCastExpr 0x8ed2058 </usr/include/i386-linux-gnu/bits/locale.h:40:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1f08 <col:22> 'int' 11))
,
    __LC_IDENTIFICATION = (ImplicitCastExpr 0x8ed2068 </usr/include/i386-linux-gnu/bits/locale.h:41:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8ed1f58 <col:25> 'int' 12))

};
extern "C" {
    struct lconv {
        struct lconv;
        char *decimal_point;
        char *thousands_sep;
        char *grouping;
        char *int_curr_symbol;
        char *currency_symbol;
        char *mon_decimal_point;
        char *mon_thousands_sep;
        char *mon_grouping;
        char *positive_sign;
        char *negative_sign;
        char int_frac_digits;
        char frac_digits;
        char p_cs_precedes;
        char p_sep_by_space;
        char n_cs_precedes;
        char n_sep_by_space;
        char p_sign_posn;
        char n_sign_posn;
        char int_p_cs_precedes;
        char int_p_sep_by_space;
        char int_n_cs_precedes;
        char int_n_sep_by_space;
        char int_p_sign_posn;
        char int_n_sign_posn;
    };
    extern char *setlocale(int __category, const char *__locale) throw();
    extern struct lconv *localeconv() throw();
    extern __locale_t newlocale(int __category_mask, const char *__locale, __locale_t __base) throw();
    extern __locale_t duplocale(__locale_t __dataset) throw();
    extern void freelocale(__locale_t __dataset) throw();
    extern __locale_t uselocale(__locale_t __dataset) throw();
}
namespace std {
    using ::lconv;
    ;
    using ::setlocale;
    ;
    using ::localeconv;
    ;
}
namespace __gnu_cxx {
    extern "C" extern typeof (uselocale) __uselocale
}
namespace std {
    typedef __locale_t __c_locale;
    inline int __convert_from_v(const __c_locale &__cloc, char *__out, const int __size, const char *__fmt, ...) (CompoundStmt 0x8edb8b0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:73:3, line:109:3>
  (DeclStmt 0x8edb028 <line:75:5, col:54>
    0x8edaf20 "__c_locale __old =
      (CallExpr 0x8edaff8 <col:24, col:53> '__locale_t':'struct __locale_struct *'
        (ImplicitCastExpr 0x8edafe8 <col:24, col:35> 'typeof (uselocale) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8edaf78 <col:24, col:35> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x8edaa70 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
        (ImplicitCastExpr 0x8edb018 <col:47> '__c_locale':'struct __locale_struct *' <LValueToRValue>
          (DeclRefExpr 0x8edaf98 <col:47> 'const __c_locale':'struct __locale_struct *const' lvalue ParmVar 0x8edac70 '__cloc' 'const __c_locale &')))")
  (DeclStmt 0x8edb078 <line:88:5, col:29>
    0x8edb040 "__builtin_va_list __args")
  (CallExpr 0x8edb278 <line:89:5, col:37> '_Bool'
    (ImplicitCastExpr 0x8edb268 <col:5> 'void (*)(__builtin_va_list &, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x8edb1e4 <col:5> 'void (__builtin_va_list &, ...)' lvalue Function 0x8edb110 '__builtin_va_start' 'void (__builtin_va_list &, ...)'))
    (DeclRefExpr 0x8edb1fc <col:24> '__builtin_va_list':'char *' lvalue Var 0x8edb040 '__args' '__builtin_va_list':'char *')
    (DeclRefExpr 0x8edb214 <col:32> 'const char *' lvalue ParmVar 0x8edade0 '__fmt' 'const char *'))
  (DeclStmt 0x8edb608 <line:92:5, col:72>
    0x8edb2b0 "const int __ret =
      (CallExpr 0x8edb588 <col:23, col:71> 'int'
        (ImplicitCastExpr 0x8edb578 <col:23> 'int (*)(char *, unsigned int, const char *, __builtin_va_list)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8edb4c0 <col:23> 'int (char *, unsigned int, const char *, __builtin_va_list)' lvalue Function 0x8edb2f0 '__builtin_vsnprintf' 'int (char *, unsigned int, const char *, __builtin_va_list)'))
        (ImplicitCastExpr 0x8edb5b8 <col:43> 'char *' <LValueToRValue>
          (DeclRefExpr 0x8edb4d8 <col:43> 'char *' lvalue ParmVar 0x8edad00 '__out' 'char *'))
        (ImplicitCastExpr 0x8edb5d8 <col:50> 'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x8edb5c8 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x8edb4f0 <col:50> 'const int' lvalue ParmVar 0x8edad50 '__size' 'const int')))
        (ImplicitCastExpr 0x8edb5e8 <col:58> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x8edb508 <col:58> 'const char *' lvalue ParmVar 0x8edade0 '__fmt' 'const char *'))
        (ImplicitCastExpr 0x8edb5f8 <col:65> '__builtin_va_list':'char *' <LValueToRValue>
          (DeclRefExpr 0x8edb520 <col:65> '__builtin_va_list':'char *' lvalue Var 0x8edb040 '__args' '__builtin_va_list':'char *')))")
  (CallExpr 0x8edb7b8 <line:97:5, col:28> 'void'
    (ImplicitCastExpr 0x8edb7a8 <col:5> 'void (*)(__builtin_va_list &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x8edb734 <col:5> 'void (__builtin_va_list &)' lvalue Function 0x8edb660 '__builtin_va_end' 'void (__builtin_va_list &)'))
    (DeclRefExpr 0x8edb74c <col:22> '__builtin_va_list':'char *' lvalue Var 0x8edb040 '__args' '__builtin_va_list':'char *'))
  (CallExpr 0x8edb848 <line:100:5, col:33> '__locale_t':'struct __locale_struct *'
    (ImplicitCastExpr 0x8edb838 <col:5, col:16> 'typeof (uselocale) *' <FunctionToPointerDecay>
      (DeclRefExpr 0x8edb7fc <col:5, col:16> 'typeof (uselocale)':'__locale_t (__locale_t) throw()' lvalue Function 0x8edaa70 '__uselocale' 'typeof (uselocale)':'__locale_t (__locale_t) throw()'))
    (ImplicitCastExpr 0x8edb868 <col:28> '__c_locale':'struct __locale_struct *' <LValueToRValue>
      (DeclRefExpr 0x8edb81c <col:28> '__c_locale':'struct __locale_struct *' lvalue Var 0x8edaf20 '__old' '__c_locale':'struct __locale_struct *')))
  (ReturnStmt 0x8edb8a0 <line:108:5, col:12>
    (ImplicitCastExpr 0x8edb890 <col:12> 'int' <LValueToRValue>
      (DeclRefExpr 0x8edb874 <col:12> 'const int' lvalue Var 0x8edb2b0 '__ret' 'const int'))))


}
extern void __builtin_va_start(__builtin_va_list &, ...);
extern int __builtin_vsnprintf(char *, unsigned int, const char *, __builtin_va_list);
extern void __builtin_va_end(__builtin_va_list &);
namespace std {
    class ios_base;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_filebuf
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_filebuf
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_filebuf;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ifstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ifstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ifstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ofstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ofstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ofstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_fstream
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_fstream
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_fstream;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator;
    typedef basic_ios<char> ios;
    typedef basic_streambuf<char> streambuf;
    typedef basic_istream<char> istream;
    typedef basic_ostream<char> ostream;
    typedef basic_iostream<char> iostream;
    typedef basic_stringbuf<char> stringbuf;
    typedef basic_istringstream<char> istringstream;
    typedef basic_ostringstream<char> ostringstream;
    typedef basic_stringstream<char> stringstream;
    typedef basic_filebuf<char> filebuf;
    typedef basic_ifstream<char> ifstream;
    typedef basic_ofstream<char> ofstream;
    typedef basic_fstream<char> fstream;
    typedef basic_ios<wchar_t> wios;
    typedef basic_streambuf<wchar_t> wstreambuf;
    typedef basic_istream<wchar_t> wistream;
    typedef basic_ostream<wchar_t> wostream;
    typedef basic_iostream<wchar_t> wiostream;
    typedef basic_stringbuf<wchar_t> wstringbuf;
    typedef basic_istringstream<wchar_t> wistringstream;
    typedef basic_ostringstream<wchar_t> wostringstream;
    typedef basic_stringstream<wchar_t> wstringstream;
    typedef basic_filebuf<wchar_t> wfilebuf;
    typedef basic_ifstream<wchar_t> wifstream;
    typedef basic_ofstream<wchar_t> wofstream;
    typedef basic_fstream<wchar_t> wfstream;
}
extern "C" {
    enum  {
        _ISupper = (ImplicitCastExpr 0x8eef8b8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8ee8200 <col:23, col:77> 'int'
    (ConditionalOperator 0x8ee81e0 <col:24, col:76> 'int'
      (BinaryOperator 0x8ee8048 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8ee8018 <col:24, col:28> 'int'
          (IntegerLiteral 0x8ee8000 <line:50:22> 'int' 0))
        (IntegerLiteral 0x8ee8030 <line:45:32> 'int' 8))
      (ParenExpr 0x8ee8108 <col:36, col:54> 'int'
        (BinaryOperator 0x8ee80f0 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8ee80c0 <col:37, col:48> 'int'
            (BinaryOperator 0x8ee80a8 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8ee8060 <col:38> 'int' 1)
              (ParenExpr 0x8ee8090 <col:43, col:47> 'int'
                (IntegerLiteral 0x8ee8078 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x8ee80d8 <line:45:53> 'int' 8)))
      (ParenExpr 0x8ee81c8 <col:58, col:76> 'int'
        (BinaryOperator 0x8ee81b0 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8ee8180 <col:59, col:70> 'int'
            (BinaryOperator 0x8ee8168 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8ee8120 <col:60> 'int' 1)
              (ParenExpr 0x8ee8150 <col:65, col:69> 'int'
                (IntegerLiteral 0x8ee8138 <line:50:22> 'int' 0))))
          (IntegerLiteral 0x8ee8198 <line:45:75> 'int' 8))))))
,
        _ISlower = (ImplicitCastExpr 0x8eef8c8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eee148 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eee128 <col:24, col:76> 'int'
      (BinaryOperator 0x8eedf90 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eedf60 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eedf48 <line:51:22> 'int' 1))
        (IntegerLiteral 0x8eedf78 <line:45:32> 'int' 8))
      (ParenExpr 0x8eee050 <col:36, col:54> 'int'
        (BinaryOperator 0x8eee038 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eee008 <col:37, col:48> 'int'
            (BinaryOperator 0x8eedff0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eedfa8 <col:38> 'int' 1)
              (ParenExpr 0x8eedfd8 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eedfc0 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x8eee020 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eee110 <col:58, col:76> 'int'
        (BinaryOperator 0x8eee0f8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eee0c8 <col:59, col:70> 'int'
            (BinaryOperator 0x8eee0b0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eee068 <col:60> 'int' 1)
              (ParenExpr 0x8eee098 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eee080 <line:51:22> 'int' 1))))
          (IntegerLiteral 0x8eee0e0 <line:45:75> 'int' 8))))))
,
        _ISalpha = (ImplicitCastExpr 0x8eef8d8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eee398 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eee378 <col:24, col:76> 'int'
      (BinaryOperator 0x8eee1e0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eee1b0 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eee198 <line:52:22> 'int' 2))
        (IntegerLiteral 0x8eee1c8 <line:45:32> 'int' 8))
      (ParenExpr 0x8eee2a0 <col:36, col:54> 'int'
        (BinaryOperator 0x8eee288 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eee258 <col:37, col:48> 'int'
            (BinaryOperator 0x8eee240 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eee1f8 <col:38> 'int' 1)
              (ParenExpr 0x8eee228 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eee210 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x8eee270 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eee360 <col:58, col:76> 'int'
        (BinaryOperator 0x8eee348 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eee318 <col:59, col:70> 'int'
            (BinaryOperator 0x8eee300 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eee2b8 <col:60> 'int' 1)
              (ParenExpr 0x8eee2e8 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eee2d0 <line:52:22> 'int' 2))))
          (IntegerLiteral 0x8eee330 <line:45:75> 'int' 8))))))
,
        _ISdigit = (ImplicitCastExpr 0x8eef8e8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eee5e8 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eee5c8 <col:24, col:76> 'int'
      (BinaryOperator 0x8eee430 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eee400 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eee3e8 <line:53:22> 'int' 3))
        (IntegerLiteral 0x8eee418 <line:45:32> 'int' 8))
      (ParenExpr 0x8eee4f0 <col:36, col:54> 'int'
        (BinaryOperator 0x8eee4d8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eee4a8 <col:37, col:48> 'int'
            (BinaryOperator 0x8eee490 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eee448 <col:38> 'int' 1)
              (ParenExpr 0x8eee478 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eee460 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x8eee4c0 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eee5b0 <col:58, col:76> 'int'
        (BinaryOperator 0x8eee598 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eee568 <col:59, col:70> 'int'
            (BinaryOperator 0x8eee550 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eee508 <col:60> 'int' 1)
              (ParenExpr 0x8eee538 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eee520 <line:53:22> 'int' 3))))
          (IntegerLiteral 0x8eee580 <line:45:75> 'int' 8))))))
,
        _ISxdigit = (ImplicitCastExpr 0x8eef8f8 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eee838 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eee818 <col:24, col:76> 'int'
      (BinaryOperator 0x8eee680 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eee650 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eee638 <line:54:23> 'int' 4))
        (IntegerLiteral 0x8eee668 <line:45:32> 'int' 8))
      (ParenExpr 0x8eee740 <col:36, col:54> 'int'
        (BinaryOperator 0x8eee728 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eee6f8 <col:37, col:48> 'int'
            (BinaryOperator 0x8eee6e0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eee698 <col:38> 'int' 1)
              (ParenExpr 0x8eee6c8 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eee6b0 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x8eee710 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eee800 <col:58, col:76> 'int'
        (BinaryOperator 0x8eee7e8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eee7b8 <col:59, col:70> 'int'
            (BinaryOperator 0x8eee7a0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eee758 <col:60> 'int' 1)
              (ParenExpr 0x8eee788 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eee770 <line:54:23> 'int' 4))))
          (IntegerLiteral 0x8eee7d0 <line:45:75> 'int' 8))))))
,
        _ISspace = (ImplicitCastExpr 0x8eef908 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eeea88 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eeea68 <col:24, col:76> 'int'
      (BinaryOperator 0x8eee8d0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eee8a0 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eee888 <line:55:22> 'int' 5))
        (IntegerLiteral 0x8eee8b8 <line:45:32> 'int' 8))
      (ParenExpr 0x8eee990 <col:36, col:54> 'int'
        (BinaryOperator 0x8eee978 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eee948 <col:37, col:48> 'int'
            (BinaryOperator 0x8eee930 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eee8e8 <col:38> 'int' 1)
              (ParenExpr 0x8eee918 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eee900 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x8eee960 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eeea50 <col:58, col:76> 'int'
        (BinaryOperator 0x8eeea38 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eeea08 <col:59, col:70> 'int'
            (BinaryOperator 0x8eee9f0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eee9a8 <col:60> 'int' 1)
              (ParenExpr 0x8eee9d8 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eee9c0 <line:55:22> 'int' 5))))
          (IntegerLiteral 0x8eeea20 <line:45:75> 'int' 8))))))
,
        _ISprint = (ImplicitCastExpr 0x8eef918 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eeecd8 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eeecb8 <col:24, col:76> 'int'
      (BinaryOperator 0x8eeeb20 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eeeaf0 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eeead8 <line:56:22> 'int' 6))
        (IntegerLiteral 0x8eeeb08 <line:45:32> 'int' 8))
      (ParenExpr 0x8eeebe0 <col:36, col:54> 'int'
        (BinaryOperator 0x8eeebc8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eeeb98 <col:37, col:48> 'int'
            (BinaryOperator 0x8eeeb80 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eeeb38 <col:38> 'int' 1)
              (ParenExpr 0x8eeeb68 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eeeb50 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x8eeebb0 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eeeca0 <col:58, col:76> 'int'
        (BinaryOperator 0x8eeec88 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eeec58 <col:59, col:70> 'int'
            (BinaryOperator 0x8eeec40 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eeebf8 <col:60> 'int' 1)
              (ParenExpr 0x8eeec28 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eeec10 <line:56:22> 'int' 6))))
          (IntegerLiteral 0x8eeec70 <line:45:75> 'int' 8))))))
,
        _ISgraph = (ImplicitCastExpr 0x8eef928 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eeef28 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eeef08 <col:24, col:76> 'int'
      (BinaryOperator 0x8eeed70 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eeed40 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eeed28 <line:57:22> 'int' 7))
        (IntegerLiteral 0x8eeed58 <line:45:32> 'int' 8))
      (ParenExpr 0x8eeee30 <col:36, col:54> 'int'
        (BinaryOperator 0x8eeee18 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eeede8 <col:37, col:48> 'int'
            (BinaryOperator 0x8eeedd0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eeed88 <col:38> 'int' 1)
              (ParenExpr 0x8eeedb8 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eeeda0 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x8eeee00 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eeeef0 <col:58, col:76> 'int'
        (BinaryOperator 0x8eeeed8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eeeea8 <col:59, col:70> 'int'
            (BinaryOperator 0x8eeee90 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eeee48 <col:60> 'int' 1)
              (ParenExpr 0x8eeee78 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eeee60 <line:57:22> 'int' 7))))
          (IntegerLiteral 0x8eeeec0 <line:45:75> 'int' 8))))))
,
        _ISblank = (ImplicitCastExpr 0x8eef938 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eef178 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eef158 <col:24, col:76> 'int'
      (BinaryOperator 0x8eeefc0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eeef90 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eeef78 <line:58:22> 'int' 8))
        (IntegerLiteral 0x8eeefa8 <line:45:32> 'int' 8))
      (ParenExpr 0x8eef080 <col:36, col:54> 'int'
        (BinaryOperator 0x8eef068 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eef038 <col:37, col:48> 'int'
            (BinaryOperator 0x8eef020 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eeefd8 <col:38> 'int' 1)
              (ParenExpr 0x8eef008 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eeeff0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x8eef050 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eef140 <col:58, col:76> 'int'
        (BinaryOperator 0x8eef128 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eef0f8 <col:59, col:70> 'int'
            (BinaryOperator 0x8eef0e0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eef098 <col:60> 'int' 1)
              (ParenExpr 0x8eef0c8 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eef0b0 <line:58:22> 'int' 8))))
          (IntegerLiteral 0x8eef110 <line:45:75> 'int' 8))))))
,
        _IScntrl = (ImplicitCastExpr 0x8eef948 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eef3c8 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eef3a8 <col:24, col:76> 'int'
      (BinaryOperator 0x8eef210 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eef1e0 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eef1c8 <line:59:22> 'int' 9))
        (IntegerLiteral 0x8eef1f8 <line:45:32> 'int' 8))
      (ParenExpr 0x8eef2d0 <col:36, col:54> 'int'
        (BinaryOperator 0x8eef2b8 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eef288 <col:37, col:48> 'int'
            (BinaryOperator 0x8eef270 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eef228 <col:38> 'int' 1)
              (ParenExpr 0x8eef258 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eef240 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x8eef2a0 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eef390 <col:58, col:76> 'int'
        (BinaryOperator 0x8eef378 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eef348 <col:59, col:70> 'int'
            (BinaryOperator 0x8eef330 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eef2e8 <col:60> 'int' 1)
              (ParenExpr 0x8eef318 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eef300 <line:59:22> 'int' 9))))
          (IntegerLiteral 0x8eef360 <line:45:75> 'int' 8))))))
,
        _ISpunct = (ImplicitCastExpr 0x8eef958 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eef618 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eef5f8 <col:24, col:76> 'int'
      (BinaryOperator 0x8eef460 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eef430 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eef418 <line:60:22> 'int' 10))
        (IntegerLiteral 0x8eef448 <line:45:32> 'int' 8))
      (ParenExpr 0x8eef520 <col:36, col:54> 'int'
        (BinaryOperator 0x8eef508 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eef4d8 <col:37, col:48> 'int'
            (BinaryOperator 0x8eef4c0 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eef478 <col:38> 'int' 1)
              (ParenExpr 0x8eef4a8 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eef490 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x8eef4f0 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eef5e0 <col:58, col:76> 'int'
        (BinaryOperator 0x8eef5c8 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eef598 <col:59, col:70> 'int'
            (BinaryOperator 0x8eef580 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eef538 <col:60> 'int' 1)
              (ParenExpr 0x8eef568 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eef550 <line:60:22> 'int' 10))))
          (IntegerLiteral 0x8eef5b0 <line:45:75> 'int' 8))))))
,
        _ISalnum = (ImplicitCastExpr 0x8eef968 </usr/include/ctype.h:45:23, col:77> 'unsigned int' <IntegralCast>
  (ParenExpr 0x8eef868 <col:23, col:77> 'int'
    (ConditionalOperator 0x8eef848 <col:24, col:76> 'int'
      (BinaryOperator 0x8eef6b0 <col:24, col:32> '_Bool' '<'
        (ParenExpr 0x8eef680 <col:24, col:28> 'int'
          (IntegerLiteral 0x8eef668 <line:61:22> 'int' 11))
        (IntegerLiteral 0x8eef698 <line:45:32> 'int' 8))
      (ParenExpr 0x8eef770 <col:36, col:54> 'int'
        (BinaryOperator 0x8eef758 <col:37, col:53> 'int' '<<'
          (ParenExpr 0x8eef728 <col:37, col:48> 'int'
            (BinaryOperator 0x8eef710 <col:38, col:47> 'int' '<<'
              (IntegerLiteral 0x8eef6c8 <col:38> 'int' 1)
              (ParenExpr 0x8eef6f8 <col:43, col:47> 'int'
                (IntegerLiteral 0x8eef6e0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x8eef740 <line:45:53> 'int' 8)))
      (ParenExpr 0x8eef830 <col:58, col:76> 'int'
        (BinaryOperator 0x8eef818 <col:59, col:75> 'int' '>>'
          (ParenExpr 0x8eef7e8 <col:59, col:70> 'int'
            (BinaryOperator 0x8eef7d0 <col:60, col:69> 'int' '<<'
              (IntegerLiteral 0x8eef788 <col:60> 'int' 1)
              (ParenExpr 0x8eef7b8 <col:65, col:69> 'int'
                (IntegerLiteral 0x8eef7a0 <line:61:22> 'int' 11))))
          (IntegerLiteral 0x8eef800 <line:45:75> 'int' 8))))))

    };
    extern const unsigned short **__ctype_b_loc() throw();
    extern const __int32_t **__ctype_tolower_loc() throw();
    extern const __int32_t **__ctype_toupper_loc() throw();
    extern int isalnum(int) throw();
    extern int isalpha(int) throw();
    extern int iscntrl(int) throw();
    extern int isdigit(int) throw();
    extern int islower(int) throw();
    extern int isgraph(int) throw();
    extern int isprint(int) throw();
    extern int ispunct(int) throw();
    extern int isspace(int) throw();
    extern int isupper(int) throw();
    extern int isxdigit(int) throw();
    extern int tolower(int __c) throw();
    extern int toupper(int __c) throw();
    extern int isblank(int) throw();
    extern int isctype(int __c, int __mask) throw();
    extern int isascii(int __c) throw();
    extern int toascii(int __c) throw();
    extern int _toupper(int) throw();
    extern int _tolower(int) throw();
    extern int isalnum_l(int, __locale_t) throw();
    extern int isalpha_l(int, __locale_t) throw();
    extern int iscntrl_l(int, __locale_t) throw();
    extern int isdigit_l(int, __locale_t) throw();
    extern int islower_l(int, __locale_t) throw();
    extern int isgraph_l(int, __locale_t) throw();
    extern int isprint_l(int, __locale_t) throw();
    extern int ispunct_l(int, __locale_t) throw();
    extern int isspace_l(int, __locale_t) throw();
    extern int isupper_l(int, __locale_t) throw();
    extern int isxdigit_l(int, __locale_t) throw();
    extern int isblank_l(int, __locale_t) throw();
    extern int __tolower_l(int __c, __locale_t __l) throw();
    extern int tolower_l(int __c, __locale_t __l) throw();
    extern int __toupper_l(int __c, __locale_t __l) throw();
    extern int toupper_l(int __c, __locale_t __l) throw();
}
namespace std {
    using ::isalnum;
    ;
    using ::isalpha;
    ;
    using ::iscntrl;
    ;
    using ::isdigit;
    ;
    using ::isgraph;
    ;
    using ::islower;
    ;
    using ::isprint;
    ;
    using ::ispunct;
    ;
    using ::isspace;
    ;
    using ::isupper;
    ;
    using ::isxdigit;
    ;
    using ::tolower;
    ;
    using ::toupper;
    ;
}
namespace std {
    class locale;
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &) throw();
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &);
    template <typename _CharT> bool isspace(_CharT, const std::locale &);
    template <typename _CharT> bool isprint(_CharT, const std::locale &);
    template <typename _CharT> bool iscntrl(_CharT, const std::locale &);
    template <typename _CharT> bool isupper(_CharT, const std::locale &);
    template <typename _CharT> bool islower(_CharT, const std::locale &);
    template <typename _CharT> bool isalpha(_CharT, const std::locale &);
    template <typename _CharT> bool isdigit(_CharT, const std::locale &);
    template <typename _CharT> bool ispunct(_CharT, const std::locale &);
    template <typename _CharT> bool isxdigit(_CharT, const std::locale &);
    template <typename _CharT> bool isalnum(_CharT, const std::locale &);
    template <typename _CharT> bool isgraph(_CharT, const std::locale &);
    template <typename _CharT> _CharT toupper(_CharT, const std::locale &);
    template <typename _CharT> _CharT tolower(_CharT, const std::locale &);
    class ctype_base;
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x912bc38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x912bc60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x911f030 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x911f018 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x911ef88 <col:45> 'int' 1)
    (ImplicitCastExpr 0x911f008 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x911eff0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x911efe0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x911efb8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x911efa0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x91223b8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x91223a0 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x91223c8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x91223f0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91223d8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9122418 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9122400 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9122428 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9122450 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9122438 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9122540 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9122530 <col:9, col:36>
    (CXXMemberCallExpr 0x9122500 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91224e0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9121770
        (CXXThisExpr 0x9122478 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122520 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91224c8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fae0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122650 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9122640 <col:9, col:43>
    (CXXMemberCallExpr 0x91225f8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91225d8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x91218a0
        (CXXThisExpr 0x9122558 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122620 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225a8 <col:33> 'char_type *' lvalue ParmVar 0x911fc20 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122630 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225c0 <col:39> 'const char_type *' lvalue ParmVar 0x911fc90 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9122730 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9122720 <col:9, col:36>
    (CXXMemberCallExpr 0x91226f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91226d0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121960
        (CXXThisExpr 0x9122668 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122710 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91226b8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fda0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122840 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9122830 <col:9, col:43>
    (CXXMemberCallExpr 0x91227e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91227c8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121a90
        (CXXThisExpr 0x9122748 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122810 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122798 <col:33> 'char_type *' lvalue ParmVar 0x911fe70 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122820 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91227b0 <col:39> 'const char_type *' lvalue ParmVar 0x911fec0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9122ad8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x91229a0 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x91228b8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91228a8 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9122884 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
          (CXXThisExpr 0x9122858 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9122990 <line:868:4, col:51>
      (ImplicitCastExpr 0x9122980 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122968 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9122958 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x91228d8 <col:11> 'char [256]' lvalue ->_M_widen 0x911ed40
              (CXXThisExpr 0x91228c8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122940 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122930 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122920 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x91228f8 <col:47> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x91229f0 <line:869:2, col:22> 'void'
    (MemberExpr 0x91229d0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9122100
      (CXXThisExpr 0x91229c0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9122ac8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9122a98 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9122a78 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121b50
        (CXXThisExpr 0x9122a10 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ab8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9122a60 <col:24> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9122f18 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9122d00 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9122b60 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9122b50 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9122b40 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9122b08 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122af8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9122b28 <col:21> 'int' 1))
    (CompoundStmt 0x9122ce8 <line:895:4, line:898:4>
      (CallExpr 0x9122c38 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9122c28 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9122b78 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9122c70 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9122c60 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9122b90 <col:23> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9122c90 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9122c80 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9122ba8 <col:29> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9122ca0 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9122c10 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9122bf0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bc0 <col:35> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9122c00 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bd8 <col:42> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))))
      (ReturnStmt 0x9122cd8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9122cc8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9122cac <col:13> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9122dd8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9122d70 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9122d60 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9122d50 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9122d30 <col:7> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122d20 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9122db8 <line:900:4, col:18> 'void'
      (MemberExpr 0x9122d98 <col:4> '<bound member function type>' ->_M_widen_init 0x9122100
        (CXXThisExpr 0x9122d88 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9122f08 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9122eb0 <col:9, col:40> 'const char *'
      (MemberExpr 0x9122e90 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121cd0
        (CXXThisExpr 0x9122df8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ed8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e48 <col:24> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9122ee8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e60 <col:30> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9122ef8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122e78 <col:36> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9123460 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x91230e8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123000 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9122ff0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122fd8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9122fc8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9122f48 <col:6> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9122f38 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122fb0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122fa0 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122f90 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9122f68 <col:43> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x91230d8 <line:926:4, col:52>
      (ImplicitCastExpr 0x91230c8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x91230b0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x91230a0 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9123020 <col:11> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9123010 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9123088 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9123078 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9123068 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9123040 <col:48> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9123240 <line:927:2, col:43>
    0x9123110 "const char __t =
      (CXXMemberCallExpr 0x91231f8 <col:19, col:42> 'char'
        (MemberExpr 0x91231d8 <col:19> '<bound member function type>' ->do_narrow 0x9121df0
          (CXXThisExpr 0x91231c8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9123220 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9123198 <col:29> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9123230 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x91231b0 <col:34> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char')))")
  (IfStmt 0x9123408 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x91232c0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9123290 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9123280 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123250 <col:6> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
      (ImplicitCastExpr 0x91232b0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x91232a0 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123268 <col:13> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char'))))
    (BinaryOperator 0x91233f0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x91233b0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x91233a0 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9123320 <col:4> 'char [256]' lvalue ->_M_narrow 0x911ee30
            (CXXThisExpr 0x9123310 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9123388 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9123378 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9123368 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9123340 <col:41> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x91233e0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x91233c4 <col:49> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9123450 <line:930:2, col:9>
    (ImplicitCastExpr 0x9123440 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9123424 <col:9> 'const char' lvalue Var 0x9123110 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9123960 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9123718 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123580 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9123538 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9123528 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9123480 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9123560 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9123500 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x91234f0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91234e0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x91234a8 <col:23> 'char' lvalue ->_M_narrow_ok 0x911ee70
                  (CXXThisExpr 0x9123498 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x91234c8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9123570 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9123518 <col:42> '_Bool' true))))
    (CompoundStmt 0x9123700 <line:960:4, line:963:4>
      (CallExpr 0x9123650 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9123640 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x912358c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9123688 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9123678 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x91235a4 <col:23> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))
        (ImplicitCastExpr 0x91236a8 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9123698 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x91235bc <col:29> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x91236b8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9123628 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9123608 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235d4 <col:35> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9123618 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235ec <col:42> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))))
      (ReturnStmt 0x91236f0 <line:962:6, col:13>
        (ImplicitCastExpr 0x91236e0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x91236c4 <col:13> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x91237f0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9123788 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9123778 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9123768 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9123748 <col:7> 'char' lvalue ->_M_narrow_ok 0x911ee70
            (CXXThisExpr 0x9123738 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x91237d0 <line:965:4, col:19> 'void'
      (MemberExpr 0x91237b0 <col:4> '<bound member function type>' ->_M_narrow_init 0x9122080
        (CXXThisExpr 0x91237a0 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9123950 <line:966:2, col:51>
    (CXXMemberCallExpr 0x91238e0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x91238c0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9121fb0
        (CXXThisExpr 0x9123810 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9123910 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123860 <col:25> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9123920 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123878 <col:31> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9123930 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9123890 <col:37> 'char' lvalue ParmVar 0x9120460 '__dfault' 'char'))
      (ImplicitCastExpr 0x9123940 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x91238a8 <col:47> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x91239d0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x91239c0 <col:9, col:16>
    (ImplicitCastExpr 0x91239b0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9123990 <col:16> 'const mask *const' lvalue ->_M_table 0x911ebe0
        (CXXThisExpr 0x9123980 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9123a20 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9123a10 <col:9, col:16>
    (ImplicitCastExpr 0x9123a00 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x91239e4 <col:16> 'char' lvalue ParmVar 0x9121b00 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9123ba8 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9123af8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123ae8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123a34 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123b30 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123b20 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123a4c <col:19> 'char_type *' lvalue ParmVar 0x9121c70 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9123b50 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123b40 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9123a64 <col:27> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9123b60 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ad0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123ab0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a7c <col:33> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9123ac0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a94 <col:40> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))))
  (ReturnStmt 0x9123b98 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9123b88 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9123b6c <col:9> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9123bf8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9123be8 <col:9, col:16>
    (ImplicitCastExpr 0x9123bd8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9123bc0 <col:16> 'char_type':'char' lvalue ParmVar 0x9121d50 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9123d80 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9123cd0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123cc0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123c0c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123d08 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123cf8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9123c24 <col:19> 'char *' lvalue ParmVar 0x9121f50 '__dest' 'char *')))
    (ImplicitCastExpr 0x9123d28 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123d18 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123c3c <col:27> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9123d38 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ca8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123c88 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c54 <col:33> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9123c98 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c6c <col:40> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9123d70 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9123d60 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9123d44 <col:9> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype;
    class ctype;
    class ctype;
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname;
    class codecvt_base;
    template <typename _InternT = char, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT = wchar_t, typename _ExternT = char, typename _StateT = __mbstate_t> class codecvt
template <typename _InternT, typename _ExternT, typename _StateT> class codecvt;
    class codecvt;
    class codecvt;
    template <typename _InternT, typename _ExternT, typename _StateT> class codecvt_byname;
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put;
    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct;
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname;
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate;
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname;
    class time_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class time_get_byname;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class time_put_byname;
    class money_base;
    template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class money_get;
    template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class money_put;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x8efac78 </usr/include/c++/4.6/bits/localefwd.h:176:42> '_Bool' false)
> class moneypunct;
    template <typename _CharT, bool _Intl = (CXXBoolLiteralExpr 0x8efaec8 </usr/include/c++/4.6/bits/localefwd.h:178:42> '_Bool' false)
> class moneypunct_byname;
    class messages_base;
    template <typename _CharT> class messages;
    template <typename _CharT> class messages_byname;
}
namespace __cxxabiv1 {
    class __forced_unwind {
        class __forced_unwind;
        virtual void ~__forced_unwind() throw();
        virtual void __pure_dummy() = 0;
        inline __cxxabiv1::__forced_unwind &operator=(const __cxxabiv1::__forced_unwind &) throw();
    };
}
namespace std {
    template <typename _CharT, typename _Traits> inline void __ostream_write(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x8eff220 </usr/include/c++/4.6/bits/ostream_insert.h:45:5, line:52:5>
  (DeclStmt 0x8efee70 <line:46:7, col:66>
    0x8efee40 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x8efef60 <line:47:7, col:62>
    0x8efef30 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x8eff0b8 <line:49:7, col:62>
    0x8efef80 "const streamsize __put =
      (CallExpr 0x8eff090 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8eff028 <col:32, col:47> '<dependent type>' lvalue
          (CallExpr 0x8eff008 <col:32, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8efefd0 <col:32, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x8efefb4 <col:32> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efeb00 '__out' 'basic_ostream<_CharT, _Traits> &'))))
        (DeclRefExpr 0x8eff05c <col:53> 'const _CharT *' lvalue ParmVar 0x8efeb70 '__s' 'const _CharT *')
        (DeclRefExpr 0x8eff074 <col:58> 'streamsize':'int' lvalue ParmVar 0x8efebd0 '__n' 'streamsize':'int'))")
  (IfStmt 0x8eff200 <line:50:7, line:51:35>
    <<<NULL>>>
    (BinaryOperator 0x8eff118 <line:50:11, col:20> '_Bool' '!='
      (ImplicitCastExpr 0x8eff0f8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x8eff0c8 <col:11> 'const streamsize':'const int' lvalue Var 0x8efef80 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x8eff108 <col:20> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x8eff0e0 <col:20> 'streamsize':'int' lvalue ParmVar 0x8efebd0 '__n' 'streamsize':'int')))
    (CallExpr 0x8eff1e0 <line:51:2, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8eff148 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x8eff130 <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efeb00 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DependentScopeDeclRefExpr 0x8eff1b8 <col:17, col:29> '<dependent type>' lvalue))
    <<<NULL>>>))

;
    template <typename _CharT, typename _Traits> inline void __ostream_fill(basic_ostream<_CharT, _Traits> &__out, streamsize __n) (CompoundStmt 0x8effcf0 </usr/include/c++/4.6/bits/ostream_insert.h:57:5, line:71:5>
  (DeclStmt 0x8eff6d0 <line:58:7, col:66>
    0x8eff6a0 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x8eff790 <line:59:7, col:62>
    0x8eff760 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x8eff858 <line:61:7, col:38>
    0x8eff7b0 "const _CharT __c =
      (CallExpr 0x8eff838 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8eff800 <col:26, col:32> '<dependent type>' lvalue
          (DeclRefExpr 0x8eff7e4 <col:26> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8eff420 '__out' 'basic_ostream<_CharT, _Traits> &')))")
  (ForStmt 0x8effcc8 <line:62:7, line:70:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x8eff8a8 <line:62:14, col:20> '_Bool' '>'
      (ImplicitCastExpr 0x8eff898 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x8eff868 <col:14> 'streamsize':'int' lvalue ParmVar 0x8eff460 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x8eff880 <col:20> 'int' 0))
    (UnaryOperator 0x8eff8d8 <col:23, col:25> 'streamsize':'int' lvalue prefix '--'
      (DeclRefExpr 0x8eff8c0 <col:25> 'streamsize':'int' lvalue ParmVar 0x8eff460 '__n' 'streamsize':'int'))
    (CompoundStmt 0x8effcb0 <line:63:2, line:70:2>
      (DeclStmt 0x8effa98 <line:64:4, col:70>
        0x8eff980 "const typename _Traits::int_type __put =
          (CallExpr 0x8effa78 <col:45, col:69> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8effa28 <col:45, col:60> '<dependent type>' lvalue
              (CallExpr 0x8effa08 <col:45, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x8eff9d0 <col:45, col:51> '<dependent type>' lvalue
                  (DeclRefExpr 0x8eff9b4 <col:45> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8eff420 '__out' 'basic_ostream<_CharT, _Traits> &'))))
            (DeclRefExpr 0x8effa5c <col:66> 'const _CharT' lvalue Var 0x8eff7b0 '__c' 'const _CharT'))")
      (IfStmt 0x8effc90 <line:65:4, line:69:6>
        <<<NULL>>>
        (CallExpr 0x8effb78 <line:65:8, col:50> '<dependent type>'
          (DependentScopeDeclRefExpr 0x8effad0 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x8effaf4 <col:29> 'const typename _Traits::int_type' lvalue Var 0x8eff980 '__put' 'const typename _Traits::int_type')
          (CallExpr 0x8effb58 <col:36, col:49> '<dependent type>'
            (DependentScopeDeclRefExpr 0x8effb30 <col:36, col:45> '<dependent type>' lvalue)))
        (CompoundStmt 0x8effc78 <line:66:6, line:69:6>
          (CallExpr 0x8effc50 <line:67:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8effbb8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8effb9c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8eff420 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x8effc28 <col:23, col:35> '<dependent type>' lvalue))
          (BreakStmt 0x8effc70 <line:68:8>))
        <<<NULL>>>))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &__ostream_insert(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s, streamsize __n)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &__ostream_insert(basic_ostream<char, std::char_traits<char> > &__out, const char *__s, streamsize __n)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &__ostream_insert(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s, streamsize __n) (CompoundStmt 0x8f015b0 </usr/include/c++/4.6/bits/ostream_insert.h:77:5, line:112:5>
  (DeclStmt 0x8f00370 <line:78:7, col:66>
    0x8f00340 "typedef basic_ostream<_CharT, _Traits> __ostream_type")
  (DeclStmt 0x8f00430 <line:79:7, col:62>
    0x8f00400 "typedef typename __ostream_type::ios_base __ios_base")
  (DeclStmt 0x8f00530 <line:81:7, col:52>
    0x8f004c0 "typename __ostream_type::sentry __cerb =
      (ParenListExpr 0x8f00510 <col:45, col:51> 'typename __ostream_type::sentry'
        (DeclRefExpr 0x8f004f4 <col:46> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &'))")
  (IfStmt 0x8f01568 <line:82:7, line:110:2>
    <<<NULL>>>
    (DeclRefExpr 0x8f00540 <line:82:11> 'typename __ostream_type::sentry' lvalue Var 0x8f004c0 '__cerb' 'typename __ostream_type::sentry')
    (CompoundStmt 0x8f01548 <line:83:2, line:110:2>
      (IfStmt 0x8f01318 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream_insert.h:102:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x8f00558 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x8f012f8 </usr/include/c++/4.6/bits/ostream_insert.h:85:6, line:102:6>
          (DeclStmt 0x8f00618 <line:86:8, col:44>
            0x8f00570 "const streamsize __w =
              (CallExpr 0x8f005f8 <col:31, col:43> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x8f005c0 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x8f005a4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')))")
          (IfStmt 0x8f01250 <line:87:8, line:100:34>
            <<<NULL>>>
            (BinaryOperator 0x8f00b30 <line:87:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x8f00658 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x8f00628 <col:12> 'const streamsize':'const int' lvalue Var 0x8f00570 '__w' 'const streamsize':'const int'))
              (ImplicitCastExpr 0x8f00668 <col:18> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x8f00640 <col:18> 'streamsize':'int' lvalue ParmVar 0x8f00080 '__n' 'streamsize':'int')))
            (CompoundStmt 0x8f01188 <line:88:3, line:98:3>
              (DeclStmt 0x8f00d60 <line:89:5, line:91:32>
                0x8f00b50 "const bool __left =
                  (ParenExpr 0x8f00d48 <line:89:25, line:91:31> '<dependent type>'
                    (CXXOperatorCallExpr 0x8f00d20 <line:89:26, line:91:27> '<dependent type>'
                      (UnresolvedLookupExpr 0x8f00cd8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
                      (ParenExpr 0x8f00c78 <line:89:26, line:90:31> '<dependent type>'
                        (BinaryOperator 0x8f00c60 <line:89:27, line:90:20> '<dependent type>' '&'
                          (CallExpr 0x8f00bd8 <line:89:27, col:39> '<dependent type>'
                            (CXXDependentScopeMemberExpr 0x8f00ba0 <col:27, col:33> '<dependent type>' lvalue
                              (DeclRefExpr 0x8f00b84 <col:27> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                          (DependentScopeDeclRefExpr 0x8f00c38 <line:90:8, col:20> '<dependent type>' lvalue)))
                      (DependentScopeDeclRefExpr 0x8f00cb0 <line:91:15, col:27> '<dependent type>' lvalue)))")
              (IfStmt 0x8f00e90 <line:92:5, line:93:38>
                <<<NULL>>>
                (UnaryOperator 0x8f00d98 <line:92:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x8f00d88 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x8f00d70 <col:10> 'const _Bool' lvalue Var 0x8f00b50 '__left' 'const _Bool')))
                (CallExpr 0x8f00e68 <line:93:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x8f00db0 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x8eff560)
                  (DeclRefExpr 0x8f00de4 <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x8f00e50 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x8f00e30 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x8f00dfc <col:29> 'const streamsize':'const int' lvalue Var 0x8f00570 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x8f00e40 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x8f00e14 <col:35> 'streamsize':'int' lvalue ParmVar 0x8f00080 '__n' 'streamsize':'int'))))
                <<<NULL>>>)
              (IfStmt 0x8f00fc8 <line:94:5, line:95:38>
                <<<NULL>>>
                (CallExpr 0x8f00f00 <line:94:9, col:20> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x8f00ec8 <col:9, col:15> '<dependent type>' lvalue
                    (DeclRefExpr 0x8f00eac <col:9> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')))
                (CallExpr 0x8f00fa0 <line:95:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x8f00f20 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x8efecf0)
                  (DeclRefExpr 0x8f00f54 <col:23> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (DeclRefExpr 0x8f00f6c <col:30> 'const _CharT *' lvalue ParmVar 0x8f00040 '__s' 'const _CharT *')
                  (DeclRefExpr 0x8f00f84 <col:35> 'streamsize':'int' lvalue ParmVar 0x8f00080 '__n' 'streamsize':'int'))
                <<<NULL>>>)
              (IfStmt 0x8f01168 <line:96:5, line:97:38>
                <<<NULL>>>
                (BinaryOperator 0x8f01070 <line:96:9, col:30> '<dependent type>' '&&'
                  (DeclRefExpr 0x8f00fe4 <col:9> 'const _Bool' lvalue Var 0x8f00b50 '__left' 'const _Bool')
                  (CallExpr 0x8f01050 <col:19, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x8f01018 <col:19, col:25> '<dependent type>' lvalue
                      (DeclRefExpr 0x8f00ffc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &'))))
                (CallExpr 0x8f01140 <line:97:7, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x8f01088 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x8eff560)
                  (DeclRefExpr 0x8f010bc <col:22> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')
                  (BinaryOperator 0x8f01128 <col:29, col:35> 'int' '-'
                    (ImplicitCastExpr 0x8f01108 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x8f010d4 <col:29> 'const streamsize':'const int' lvalue Var 0x8f00570 '__w' 'const streamsize':'const int'))
                    (ImplicitCastExpr 0x8f01118 <col:35> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x8f010ec <col:35> 'streamsize':'int' lvalue ParmVar 0x8f00080 '__n' 'streamsize':'int'))))
                <<<NULL>>>))
            (CallExpr 0x8f01228 <line:100:3, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x8f011a8 <col:3> '<overloaded function type>' lvalue (ADL) = '1' 0x8efecf0)
              (DeclRefExpr 0x8f011dc <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')
              (DeclRefExpr 0x8f011f4 <col:26> 'const _CharT *' lvalue ParmVar 0x8f00040 '__s' 'const _CharT *')
              (DeclRefExpr 0x8f0120c <col:31> 'streamsize':'int' lvalue ParmVar 0x8f00080 '__n' 'streamsize':'int')))
          (CallExpr 0x8f012d8 <line:101:8, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8f01288 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8f0126c <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (IntegerLiteral 0x8f012c0 <col:20> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x8f01428 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:107:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x8f01338 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x8f01410 </usr/include/c++/4.6/bits/ostream_insert.h:104:6, line:107:6>
          (CallExpr 0x8f013e0 <line:105:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8f01360 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8f01348 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x8f013b8 <col:26, col:38> '<dependent type>' lvalue))
          (NullStmt 0x8f01400 <line:106:31>))
        <<<NULL>>>)
      (IfStmt 0x8f01528 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream_insert.h:109:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x8f01448 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x8f01510 </usr/include/c++/4.6/bits/ostream_insert.h:109:6, col:47>
          (CallExpr 0x8f014f0 <col:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8f01470 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8f01458 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x8f014c8 <col:26, col:38> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x8f015a0 <line:111:7, col:14>
    (DeclRefExpr 0x8f01584 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8efffd0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
}
namespace std {
    template <typename _Arg, typename _Result> struct unary_function {
        struct unary_function;
        typedef _Arg argument_type;
        typedef _Result result_type;
    };
    template <typename _Arg1, typename _Arg2, typename _Result> struct binary_function {
        struct binary_function;
        typedef _Arg1 first_argument_type;
        typedef _Arg2 second_argument_type;
        typedef _Result result_type;
    };
    template <typename _Tp> struct plus : public binary_function<_Tp, _Tp, _Tp> {
        struct plus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f03d20 </usr/include/c++/4.6/bits/stl_function.h:145:7, col:27>
  (ReturnStmt 0x8f03d10 <col:9, col:22>
    (CXXOperatorCallExpr 0x8f03ce8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8f03cb0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
      (DeclRefExpr 0x8f03c80 <col:16> 'const _Tp' lvalue ParmVar 0x8f03b10 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f03c98 <col:22> 'const _Tp' lvalue ParmVar 0x8f03b60 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct minus : public binary_function<_Tp, _Tp, _Tp> {
        struct minus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f04300 </usr/include/c++/4.6/bits/stl_function.h:154:7, col:27>
  (ReturnStmt 0x8f042f0 <col:9, col:22>
    (CXXOperatorCallExpr 0x8f042c8 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8f04290 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8f04260 <col:16> 'const _Tp' lvalue ParmVar 0x8f04110 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f04278 <col:22> 'const _Tp' lvalue ParmVar 0x8f04160 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct multiplies : public binary_function<_Tp, _Tp, _Tp> {
        struct multiplies;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f04898 </usr/include/c++/4.6/bits/stl_function.h:163:7, col:27>
  (ReturnStmt 0x8f04888 <col:9, col:22>
    (BinaryOperator 0x8f04870 <col:16, col:22> '<dependent type>' '*'
      (DeclRefExpr 0x8f04840 <col:16> 'const _Tp' lvalue ParmVar 0x8f046f0 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f04858 <col:22> 'const _Tp' lvalue ParmVar 0x8f04740 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct divides : public binary_function<_Tp, _Tp, _Tp> {
        struct divides;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f04e28 </usr/include/c++/4.6/bits/stl_function.h:172:7, col:27>
  (ReturnStmt 0x8f04e18 <col:9, col:22>
    (BinaryOperator 0x8f04e00 <col:16, col:22> '<dependent type>' '/'
      (DeclRefExpr 0x8f04dd0 <col:16> 'const _Tp' lvalue ParmVar 0x8f04c80 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f04de8 <col:22> 'const _Tp' lvalue ParmVar 0x8f04cd0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct modulus : public binary_function<_Tp, _Tp, _Tp> {
        struct modulus;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f053b8 </usr/include/c++/4.6/bits/stl_function.h:181:7, col:27>
  (ReturnStmt 0x8f053a8 <col:9, col:22>
    (BinaryOperator 0x8f05390 <col:16, col:22> '<dependent type>' '%'
      (DeclRefExpr 0x8f05360 <col:16> 'const _Tp' lvalue ParmVar 0x8f05210 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f05378 <col:22> 'const _Tp' lvalue ParmVar 0x8f05260 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct negate : public unary_function<_Tp, _Tp> {
        struct negate;
        _Tp operator()(const _Tp &__x) const (CompoundStmt 0x8e66210 </usr/include/c++/4.6/bits/stl_function.h:190:7, col:22>
  (ReturnStmt 0x8e66200 <col:9, col:17>
    (CXXOperatorCallExpr 0x8e661e0 <col:16, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x8e661a8 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8e66190 <col:17> 'const _Tp' lvalue ParmVar 0x8f057b0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct equal_to : public binary_function<_Tp, _Tp, bool> {
        struct equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8e66880 </usr/include/c++/4.6/bits/stl_function.h:209:7, col:28>
  (ReturnStmt 0x8e66870 <col:9, col:23>
    (CXXOperatorCallExpr 0x8e66848 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8e66800 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (DeclRefExpr 0x8e667d0 <col:16> 'const _Tp' lvalue ParmVar 0x8e66660 '__x' 'const _Tp &')
      (DeclRefExpr 0x8e667e8 <col:23> 'const _Tp' lvalue ParmVar 0x8e666b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct not_equal_to : public binary_function<_Tp, _Tp, bool> {
        struct not_equal_to;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8e66e70 </usr/include/c++/4.6/bits/stl_function.h:218:7, col:28>
  (ReturnStmt 0x8e66e60 <col:9, col:23>
    (CXXOperatorCallExpr 0x8e66e38 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8e66df0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0)
      (DeclRefExpr 0x8e66dc0 <col:16> 'const _Tp' lvalue ParmVar 0x8e66c70 '__x' 'const _Tp &')
      (DeclRefExpr 0x8e66dd8 <col:23> 'const _Tp' lvalue ParmVar 0x8e66cc0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater : public binary_function<_Tp, _Tp, bool> {
        struct greater;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8e67458 </usr/include/c++/4.6/bits/stl_function.h:227:7, col:27>
  (ReturnStmt 0x8e67448 <col:9, col:22>
    (CXXOperatorCallExpr 0x8e67420 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e673e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8e673b0 <col:16> 'const _Tp' lvalue ParmVar 0x8e67260 '__x' 'const _Tp &')
      (DeclRefExpr 0x8e673c8 <col:22> 'const _Tp' lvalue ParmVar 0x8e672b0 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less : public binary_function<_Tp, _Tp, bool> {
        struct less;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8e67a38 </usr/include/c++/4.6/bits/stl_function.h:236:7, col:27>
  (ReturnStmt 0x8e67a28 <col:9, col:22>
    (CXXOperatorCallExpr 0x8e67a00 <col:16, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x8e679c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
      (DeclRefExpr 0x8e67990 <col:16> 'const _Tp' lvalue ParmVar 0x8e67840 '__x' 'const _Tp &')
      (DeclRefExpr 0x8e679a8 <col:22> 'const _Tp' lvalue ParmVar 0x8e67890 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct greater_equal : public binary_function<_Tp, _Tp, bool> {
        struct greater_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8e68018 </usr/include/c++/4.6/bits/stl_function.h:245:7, col:28>
  (ReturnStmt 0x8e68008 <col:9, col:23>
    (CXXOperatorCallExpr 0x8e67fe0 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8e67fa0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (DeclRefExpr 0x8e67f70 <col:16> 'const _Tp' lvalue ParmVar 0x8e67e20 '__x' 'const _Tp &')
      (DeclRefExpr 0x8e67f88 <col:23> 'const _Tp' lvalue ParmVar 0x8e67e70 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct less_equal : public binary_function<_Tp, _Tp, bool> {
        struct less_equal;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f10bc8 </usr/include/c++/4.6/bits/stl_function.h:254:7, col:28>
  (ReturnStmt 0x8f10bb8 <col:9, col:23>
    (CXXOperatorCallExpr 0x8f10b90 <col:16, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x8f10b50 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0)
      (DeclRefExpr 0x8f10b20 <col:16> 'const _Tp' lvalue ParmVar 0x8f109d0 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f10b38 <col:23> 'const _Tp' lvalue ParmVar 0x8f10a20 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_and : public binary_function<_Tp, _Tp, bool> {
        struct logical_and;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f11158 </usr/include/c++/4.6/bits/stl_function.h:273:7, col:28>
  (ReturnStmt 0x8f11148 <col:9, col:23>
    (BinaryOperator 0x8f11130 <col:16, col:23> '<dependent type>' '&&'
      (DeclRefExpr 0x8f11100 <col:16> 'const _Tp' lvalue ParmVar 0x8f10fb0 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f11118 <col:23> 'const _Tp' lvalue ParmVar 0x8f11000 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_or : public binary_function<_Tp, _Tp, bool> {
        struct logical_or;
        bool operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f116e8 </usr/include/c++/4.6/bits/stl_function.h:282:7, col:28>
  (ReturnStmt 0x8f116d8 <col:9, col:23>
    (BinaryOperator 0x8f116c0 <col:16, col:23> '<dependent type>' '||'
      (DeclRefExpr 0x8f11690 <col:16> 'const _Tp' lvalue ParmVar 0x8f11540 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f116a8 <col:23> 'const _Tp' lvalue ParmVar 0x8f11590 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct logical_not : public unary_function<_Tp, bool> {
        struct logical_not;
        bool operator()(const _Tp &__x) const (CompoundStmt 0x8f11c40 </usr/include/c++/4.6/bits/stl_function.h:291:7, col:22>
  (ReturnStmt 0x8f11c30 <col:9, col:17>
    (UnaryOperator 0x8f11c18 <col:16, col:17> '<dependent type>' prefix '!'
      (DeclRefExpr 0x8f11c00 <col:17> 'const _Tp' lvalue ParmVar 0x8f11ae0 '__x' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_and : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_and;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f121d8 </usr/include/c++/4.6/bits/stl_function.h:302:7, col:27>
  (ReturnStmt 0x8f121c8 <col:9, col:22>
    (BinaryOperator 0x8f121b0 <col:16, col:22> '<dependent type>' '&'
      (DeclRefExpr 0x8f12180 <col:16> 'const _Tp' lvalue ParmVar 0x8f12030 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f12198 <col:22> 'const _Tp' lvalue ParmVar 0x8f12080 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_or : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_or;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f14b38 </usr/include/c++/4.6/bits/stl_function.h:310:7, col:27>
  (ReturnStmt 0x8f14b28 <col:9, col:22>
    (BinaryOperator 0x8f14b10 <col:16, col:22> '<dependent type>' '|'
      (DeclRefExpr 0x8f14ae0 <col:16> 'const _Tp' lvalue ParmVar 0x8f125c0 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f14af8 <col:22> 'const _Tp' lvalue ParmVar 0x8f12610 '__y' 'const _Tp &'))))


    };
    template <typename _Tp> struct bit_xor : public binary_function<_Tp, _Tp, _Tp> {
        struct bit_xor;
        _Tp operator()(const _Tp &__x, const _Tp &__y) const (CompoundStmt 0x8f150c8 </usr/include/c++/4.6/bits/stl_function.h:318:7, col:27>
  (ReturnStmt 0x8f150b8 <col:9, col:22>
    (BinaryOperator 0x8f150a0 <col:16, col:22> '<dependent type>' '^'
      (DeclRefExpr 0x8f15070 <col:16> 'const _Tp' lvalue ParmVar 0x8f14f20 '__x' 'const _Tp &')
      (DeclRefExpr 0x8f15088 <col:22> 'const _Tp' lvalue ParmVar 0x8f14f70 '__y' 'const _Tp &'))))


    };
    template <typename _Predicate> class unary_negate : public unary_function<typename _Predicate::argument_type, bool> {
        class unary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        unary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x8f15884 </usr/include/c++/4.6/bits/stl_function.h:360:53> 'const _Predicate' lvalue ParmVar 0x8f15600 '__x' 'const _Predicate &')
) (CompoundStmt 0x8f158e0 </usr/include/c++/4.6/bits/stl_function.h:360:58, col:60>)


        bool operator()(const typename _Predicate::argument_type &__x) const (CompoundStmt 0x8f159b8 </usr/include/c++/4.6/bits/stl_function.h:364:7, col:31>
  (ReturnStmt 0x8f159a8 <col:9, col:28>
    (UnaryOperator 0x8f15990 <col:16, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x8f15970 <col:17, col:28> '<dependent type>'
        (MemberExpr 0x8f15934 <col:17> 'const _Predicate' lvalue ->_M_pred 0x8f15560
          (CXXThisExpr 0x8f15908 <col:17> 'const unary_negate<_Predicate> *' this))
        (DeclRefExpr 0x8f15954 <col:25> 'const typename _Predicate::argument_type' lvalue ParmVar 0x8f15780 '__x' 'const typename _Predicate::argument_type &')))))


    };
    template <typename _Predicate> inline unary_negate<_Predicate> not1(const _Predicate &__pred) (CompoundStmt 0x8f15d18 </usr/include/c++/4.6/bits/stl_function.h:371:5, col:48>
  (ReturnStmt 0x8f15d08 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x8f15ce8 <col:14, col:45> 'unary_negate<_Predicate>'
      (DeclRefExpr 0x8f15cd0 <col:39> 'const _Predicate' lvalue ParmVar 0x8f15ae0 '__pred' 'const _Predicate &'))))

;
    template <typename _Predicate> class binary_negate : public binary_function<typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
        class binary_negate;
    protected:
    protected:
        _Predicate _M_pred;
    public:
    public:
        binary_negate<_Predicate>(const _Predicate &__x) : _M_pred((DeclRefExpr 0x8f16648 </usr/include/c++/4.6/bits/stl_function.h:384:54> 'const _Predicate' lvalue ParmVar 0x8f16310 '__x' 'const _Predicate &')
) (CompoundStmt 0x8f166a0 </usr/include/c++/4.6/bits/stl_function.h:384:59, col:61>)


        bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &__y) const (CompoundStmt 0x8f16798 </usr/include/c++/4.6/bits/stl_function.h:389:7, col:36>
  (ReturnStmt 0x8f16788 <col:9, col:33>
    (UnaryOperator 0x8f16770 <col:16, col:33> '<dependent type>' prefix '!'
      (CallExpr 0x8f16748 <col:17, col:33> '<dependent type>'
        (MemberExpr 0x8f166f4 <col:17> 'const _Predicate' lvalue ->_M_pred 0x8f16270
          (CXXThisExpr 0x8f166c8 <col:17> 'const binary_negate<_Predicate> *' this))
        (DeclRefExpr 0x8f16714 <col:25> 'const typename _Predicate::first_argument_type' lvalue ParmVar 0x8f16490 '__x' 'const typename _Predicate::first_argument_type &')
        (DeclRefExpr 0x8f1672c <col:30> 'const typename _Predicate::second_argument_type' lvalue ParmVar 0x8f16540 '__y' 'const typename _Predicate::second_argument_type &')))))


    };
    template <typename _Predicate> inline binary_negate<_Predicate> not2(const _Predicate &__pred) (CompoundStmt 0x8f18808 </usr/include/c++/4.6/bits/stl_function.h:396:5, col:49>
  (ReturnStmt 0x8f187f8 <col:7, col:46>
    (CXXUnresolvedConstructExpr 0x8f187d8 <col:14, col:46> 'binary_negate<_Predicate>'
      (DeclRefExpr 0x8f187c0 <col:40> 'const _Predicate' lvalue ParmVar 0x8f168c0 '__pred' 'const _Predicate &'))))

;
    template <typename _Arg, typename _Result> class pointer_to_unary_function : public unary_function<_Arg, _Result> {
        class pointer_to_unary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg);
    public:
    public:
        pointer_to_unary_function<_Arg, _Result>() (CompoundStmt 0x8f190f8 </usr/include/c++/4.6/bits/stl_function.h:429:35, col:37>)


        pointer_to_unary_function<_Arg, _Result>(_Result (*__x)(_Arg)) : _M_ptr((DeclRefExpr 0x8f19108 </usr/include/c++/4.6/bits/stl_function.h:433:16> '_Result (*)(_Arg)' lvalue ParmVar 0x8f18ed0 '__x' '_Result (*)(_Arg)')
) (CompoundStmt 0x8f19160 </usr/include/c++/4.6/bits/stl_function.h:433:21, col:23>)


        _Result operator()(_Arg __x) const (CompoundStmt 0x8f19220 </usr/include/c++/4.6/bits/stl_function.h:437:7, col:29>
  (ReturnStmt 0x8f19210 <col:9, col:26>
    (CallExpr 0x8f191f0 <col:16, col:26> '<dependent type>'
      (MemberExpr 0x8f191b4 <col:16> '_Result (*const)(_Arg)' lvalue ->_M_ptr 0x8f18d60
        (CXXThisExpr 0x8f19188 <col:16> 'const pointer_to_unary_function<_Arg, _Result> *' this))
      (DeclRefExpr 0x8f191d4 <col:23> '_Arg' lvalue ParmVar 0x8f18ff0 '__x' '_Arg'))))


    };
    template <typename _Arg, typename _Result> inline pointer_to_unary_function<_Arg, _Result> ptr_fun(_Result (*__x)(_Arg)) (CompoundStmt 0x8f19730 </usr/include/c++/4.6/bits/stl_function.h:444:5, col:61>
  (ReturnStmt 0x8f19720 <col:7, col:58>
    (CXXUnresolvedConstructExpr 0x8f19700 <col:14, col:58> 'pointer_to_unary_function<_Arg, _Result>'
      (DeclRefExpr 0x8f196e8 <col:55> '_Result (*)(_Arg)' lvalue ParmVar 0x8f19490 '__x' '_Result (*)(_Arg)'))))

;
    template <typename _Arg1, typename _Arg2, typename _Result> class pointer_to_binary_function : public binary_function<_Arg1, _Arg2, _Result> {
        class pointer_to_binary_function;
    protected:
    protected:
        _Result (*_M_ptr)(_Arg1, _Arg2);
    public:
    public:
        pointer_to_binary_function<_Arg1, _Arg2, _Result>() (CompoundStmt 0x8f1a198 </usr/include/c++/4.6/bits/stl_function.h:455:36, col:38>)


        pointer_to_binary_function<_Arg1, _Arg2, _Result>(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr((DeclRefExpr 0x8f1a1a8 </usr/include/c++/4.6/bits/stl_function.h:459:16> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x8f19f30 '__x' '_Result (*)(_Arg1, _Arg2)')
) (CompoundStmt 0x8f1a200 </usr/include/c++/4.6/bits/stl_function.h:459:21, col:23>)


        _Result operator()(_Arg1 __x, _Arg2 __y) const (CompoundStmt 0x8f1a2e0 </usr/include/c++/4.6/bits/stl_function.h:463:7, col:34>
  (ReturnStmt 0x8f1a2d0 <col:9, col:31>
    (CallExpr 0x8f1a2a8 <col:16, col:31> '<dependent type>'
      (MemberExpr 0x8f1a254 <col:16> '_Result (*const)(_Arg1, _Arg2)' lvalue ->_M_ptr 0x8f19d80
        (CXXThisExpr 0x8f1a228 <col:16> 'const pointer_to_binary_function<_Arg1, _Arg2, _Result> *' this))
      (DeclRefExpr 0x8f1a274 <col:23> '_Arg1' lvalue ParmVar 0x8f1a050 '__x' '_Arg1')
      (DeclRefExpr 0x8f1a28c <col:28> '_Arg2' lvalue ParmVar 0x8f1a090 '__y' '_Arg2'))))


    };
    template <typename _Arg1, typename _Arg2, typename _Result> inline pointer_to_binary_function<_Arg1, _Arg2, _Result> ptr_fun(_Result (*__x)(_Arg1, _Arg2)) (CompoundStmt 0x8f1b6c8 </usr/include/c++/4.6/bits/stl_function.h:470:5, col:70>
  (ReturnStmt 0x8f1b6b8 <col:7, col:67>
    (CXXUnresolvedConstructExpr 0x8f1b698 <col:14, col:67> 'pointer_to_binary_function<_Arg1, _Arg2, _Result>'
      (DeclRefExpr 0x8f1b680 <col:64> '_Result (*)(_Arg1, _Arg2)' lvalue ParmVar 0x8f1a630 '__x' '_Result (*)(_Arg1, _Arg2)'))))

;
    template <typename _Tp> struct _Identity : public unary_function<_Tp, _Tp> {
        struct _Identity;
        _Tp &operator()(_Tp &__x) const (CompoundStmt 0x8f1bcf8 </usr/include/c++/4.6/bits/stl_function.h:478:7, col:21>
  (ReturnStmt 0x8f1bce8 <col:9, col:16>
    (DeclRefExpr 0x8f1bcd0 <col:16> '_Tp' lvalue ParmVar 0x8f1ba70 '__x' '_Tp &')))


        const _Tp &operator()(const _Tp &__x) const (CompoundStmt 0x8f1bd38 </usr/include/c++/4.6/bits/stl_function.h:482:7, col:21>
  (ReturnStmt 0x8f1bd28 <col:9, col:16>
    (DeclRefExpr 0x8f1bd0c <col:16> 'const _Tp' lvalue ParmVar 0x8f1bbb0 '__x' 'const _Tp &')))


    };
    template <typename _Pair> struct _Select1st : public unary_function<_Pair, typename _Pair::first_type> {
        struct _Select1st;
        typename _Pair::first_type &operator()(_Pair &__x) const (CompoundStmt 0x8f1c560 </usr/include/c++/4.6/bits/stl_function.h:491:7, col:27>
  (ReturnStmt 0x8f1c550 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x8f1c518 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x8f1c500 <col:16> '_Pair' lvalue ParmVar 0x8f1c1e0 '__x' '_Pair &'))))


        const typename _Pair::first_type &operator()(const _Pair &__x) const (CompoundStmt 0x8f1c5d8 </usr/include/c++/4.6/bits/stl_function.h:495:7, col:27>
  (ReturnStmt 0x8f1c5c8 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x8f1c590 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x8f1c574 <col:16> 'const _Pair' lvalue ParmVar 0x8f1c390 '__x' 'const _Pair &'))))


    };
    template <typename _Pair> struct _Select2nd : public unary_function<_Pair, typename _Pair::second_type> {
        struct _Select2nd;
        typename _Pair::second_type &operator()(_Pair &__x) const (CompoundStmt 0x8f1ce00 </usr/include/c++/4.6/bits/stl_function.h:516:7, col:28>
  (ReturnStmt 0x8f1cdf0 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x8f1cdb8 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x8f1cda0 <col:16> '_Pair' lvalue ParmVar 0x8f1ca80 '__x' '_Pair &'))))


        const typename _Pair::second_type &operator()(const _Pair &__x) const (CompoundStmt 0x8f1ce78 </usr/include/c++/4.6/bits/stl_function.h:520:7, col:28>
  (ReturnStmt 0x8f1ce68 <col:9, col:20>
    (CXXDependentScopeMemberExpr 0x8f1ce30 <col:16, col:20> '<dependent type>' lvalue
      (DeclRefExpr 0x8f1ce14 <col:16> 'const _Pair' lvalue ParmVar 0x8f1cc30 '__x' 'const _Pair &'))))


    };
    template <typename _Ret, typename _Tp> class mem_fun_t : public unary_function<_Tp *, _Ret> {
        class mem_fun_t;
    public:
    public:
        mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x8f1ebc0 </usr/include/c++/4.6/bits/stl_function.h:547:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x8f1d420 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x8f1ec20 </usr/include/c++/4.6/bits/stl_function.h:547:20, col:22>)


        _Ret operator()(_Tp *__p) const (CompoundStmt 0x8f1ed18 </usr/include/c++/4.6/bits/stl_function.h:551:7, col:32>
  (ReturnStmt 0x8f1ed08 <col:9, col:29>
    (CallExpr 0x8f1ece8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x8f1ecd0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x8f1ecb8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x8f1ec30 <col:17> '_Tp *' lvalue ParmVar 0x8f1ea00 '__p' '_Tp *')
          (MemberExpr 0x8f1ec94 <col:23> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x8f1eb90
            (CXXThisExpr 0x8f1ec68 <col:23> 'const mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_t : public unary_function<const _Tp *, _Ret> {
        class const_mem_fun_t;
    public:
    public:
        const_mem_fun_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x8f1f590 </usr/include/c++/4.6/bits/stl_function.h:565:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x8f1f2a0 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x8f1f5f0 </usr/include/c++/4.6/bits/stl_function.h:565:20, col:22>)


        _Ret operator()(const _Tp *__p) const (CompoundStmt 0x8f1f6e8 </usr/include/c++/4.6/bits/stl_function.h:569:7, col:32>
  (ReturnStmt 0x8f1f6d8 <col:9, col:29>
    (CallExpr 0x8f1f6b8 <col:16, col:29> '<dependent type>'
      (ParenExpr 0x8f1f6a0 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x8f1f688 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x8f1f600 <col:17> 'const _Tp *' lvalue ParmVar 0x8f1f3d0 '__p' 'const _Tp *')
          (MemberExpr 0x8f1f664 <col:23> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x8f1f560
            (CXXThisExpr 0x8f1f638 <col:23> 'const const_mem_fun_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp> class mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class mem_fun_ref_t;
    public:
    public:
        mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)()) : _M_f((DeclRefExpr 0x8f1ff20 </usr/include/c++/4.6/bits/stl_function.h:583:14> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x8f1fc30 '__pf' '_Ret (_Tp::*)(void)')
) (CompoundStmt 0x8f1ff80 </usr/include/c++/4.6/bits/stl_function.h:583:20, col:22>)


        _Ret operator()(_Tp &__r) const (CompoundStmt 0x8f20078 </usr/include/c++/4.6/bits/stl_function.h:587:7, col:31>
  (ReturnStmt 0x8f20068 <col:9, col:28>
    (CallExpr 0x8f20048 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x8f20030 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x8f20018 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x8f1ff90 <col:17> '_Tp' lvalue ParmVar 0x8f1fd60 '__r' '_Tp &')
          (MemberExpr 0x8f1fff4 <col:22> '_Ret (_Tp::*const)(void)' lvalue ->_M_f 0x8f1fef0
            (CXXThisExpr 0x8f1ffc8 <col:22> 'const mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)();
    };
    template <typename _Ret, typename _Tp> class const_mem_fun_ref_t : public unary_function<_Tp, _Ret> {
        class const_mem_fun_ref_t;
    public:
    public:
        const_mem_fun_ref_t<_Ret, _Tp>(_Ret (_Tp::*__pf)() const) : _M_f((DeclRefExpr 0x8f20860 </usr/include/c++/4.6/bits/stl_function.h:601:14> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x8f20570 '__pf' '_Ret (_Tp::*)(void) const')
) (CompoundStmt 0x8f208c0 </usr/include/c++/4.6/bits/stl_function.h:601:20, col:22>)


        _Ret operator()(const _Tp &__r) const (CompoundStmt 0x8f21c38 </usr/include/c++/4.6/bits/stl_function.h:605:7, col:31>
  (ReturnStmt 0x8f21c28 <col:9, col:28>
    (CallExpr 0x8f21c08 <col:16, col:28> '<dependent type>'
      (ParenExpr 0x8f21bf0 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x8f21bd8 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x8f208d0 <col:17> 'const _Tp' lvalue ParmVar 0x8f206a0 '__r' 'const _Tp &')
          (MemberExpr 0x8f21bb4 <col:22> '_Ret (_Tp::*const)(void) const' lvalue ->_M_f 0x8f20830
            (CXXThisExpr 0x8f20908 <col:22> 'const const_mem_fun_ref_t<_Ret, _Tp> *' this)))))))


    private:
    private:
        _Ret (_Tp::*_M_f)() const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_t : public binary_function<_Tp *, _Arg, _Ret> {
        class mem_fun1_t;
    public:
    public:
        mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x8f22660 </usr/include/c++/4.6/bits/stl_function.h:619:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x8f222f0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x8f226c0 </usr/include/c++/4.6/bits/stl_function.h:619:20, col:22>)


        _Ret operator()(_Tp *__p, _Arg __x) const (CompoundStmt 0x8f227d0 </usr/include/c++/4.6/bits/stl_function.h:623:7, col:35>
  (ReturnStmt 0x8f227c0 <col:9, col:32>
    (CallExpr 0x8f227a0 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x8f22770 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x8f22758 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x8f226d0 <col:17> '_Tp *' lvalue ParmVar 0x8f22420 '__p' '_Tp *')
          (MemberExpr 0x8f22734 <col:23> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x8f22630
            (CXXThisExpr 0x8f22708 <col:23> 'const mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x8f22784 <col:29> '_Arg' lvalue ParmVar 0x8f22460 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_t : public binary_function<const _Tp *, _Arg, _Ret> {
        class const_mem_fun1_t;
    public:
    public:
        const_mem_fun1_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x8f23200 </usr/include/c++/4.6/bits/stl_function.h:637:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x8f22e90 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x8f23260 </usr/include/c++/4.6/bits/stl_function.h:637:20, col:22>)


        _Ret operator()(const _Tp *__p, _Arg __x) const (CompoundStmt 0x8f23370 </usr/include/c++/4.6/bits/stl_function.h:641:7, col:35>
  (ReturnStmt 0x8f23360 <col:9, col:32>
    (CallExpr 0x8f23340 <col:16, col:32> '<dependent type>'
      (ParenExpr 0x8f23310 <col:16, col:27> '<dependent type>'
        (BinaryOperator 0x8f232f8 <col:17, col:23> '<dependent type>' '->*'
          (DeclRefExpr 0x8f23270 <col:17> 'const _Tp *' lvalue ParmVar 0x8f22fc0 '__p' 'const _Tp *')
          (MemberExpr 0x8f232d4 <col:23> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x8f231d0
            (CXXThisExpr 0x8f232a8 <col:23> 'const const_mem_fun1_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x8f23324 <col:29> '_Arg' lvalue ParmVar 0x8f23000 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp, typename _Arg> class mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class mem_fun1_ref_t;
    public:
    public:
        mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg)) : _M_f((DeclRefExpr 0x8f24d80 </usr/include/c++/4.6/bits/stl_function.h:655:14> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x8f239d0 '__pf' '_Ret (_Tp::*)(_Arg)')
) (CompoundStmt 0x8f24de0 </usr/include/c++/4.6/bits/stl_function.h:655:20, col:22>)


        _Ret operator()(_Tp &__r, _Arg __x) const (CompoundStmt 0x8f24ef0 </usr/include/c++/4.6/bits/stl_function.h:659:7, col:34>
  (ReturnStmt 0x8f24ee0 <col:9, col:31>
    (CallExpr 0x8f24ec0 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x8f24e90 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x8f24e78 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x8f24df0 <col:17> '_Tp' lvalue ParmVar 0x8f23b00 '__r' '_Tp &')
          (MemberExpr 0x8f24e54 <col:22> '_Ret (_Tp::*const)(_Arg)' lvalue ->_M_f 0x8f24d50
            (CXXThisExpr 0x8f24e28 <col:22> 'const mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x8f24ea4 <col:28> '_Arg' lvalue ParmVar 0x8f23b40 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg);
    };
    template <typename _Ret, typename _Tp, typename _Arg> class const_mem_fun1_ref_t : public binary_function<_Tp, _Arg, _Ret> {
        class const_mem_fun1_ref_t;
    public:
    public:
        const_mem_fun1_ref_t<_Ret, _Tp, _Arg>(_Ret (_Tp::*__pf)(_Arg) const) : _M_f((DeclRefExpr 0x8f25860 </usr/include/c++/4.6/bits/stl_function.h:673:14> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x8f254f0 '__pf' '_Ret (_Tp::*)(_Arg) const')
) (CompoundStmt 0x8f258c0 </usr/include/c++/4.6/bits/stl_function.h:673:20, col:22>)


        _Ret operator()(const _Tp &__r, _Arg __x) const (CompoundStmt 0x8f259d0 </usr/include/c++/4.6/bits/stl_function.h:677:7, col:34>
  (ReturnStmt 0x8f259c0 <col:9, col:31>
    (CallExpr 0x8f259a0 <col:16, col:31> '<dependent type>'
      (ParenExpr 0x8f25970 <col:16, col:26> '<dependent type>'
        (BinaryOperator 0x8f25958 <col:17, col:22> '<dependent type>' '.*'
          (DeclRefExpr 0x8f258d0 <col:17> 'const _Tp' lvalue ParmVar 0x8f25620 '__r' 'const _Tp &')
          (MemberExpr 0x8f25934 <col:22> '_Ret (_Tp::*const)(_Arg) const' lvalue ->_M_f 0x8f25830
            (CXXThisExpr 0x8f25908 <col:22> 'const const_mem_fun1_ref_t<_Ret, _Tp, _Arg> *' this))))
      (DeclRefExpr 0x8f25984 <col:28> '_Arg' lvalue ParmVar 0x8f25660 '__x' '_Arg'))))


    private:
    private:
        _Ret (_Tp::*_M_f)(_Arg) const;
    };
    template <typename _Ret, typename _Tp> inline mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)()) (CompoundStmt 0x8f25ed0 </usr/include/c++/4.6/bits/stl_function.h:688:5, col:41>
  (ReturnStmt 0x8f25ec0 <col:7, col:38>
    (CXXUnresolvedConstructExpr 0x8f25ea0 <col:14, col:38> 'mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x8f25e88 <col:35> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x8f25c30 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_t<_Ret, _Tp> mem_fun(_Ret (_Tp::*__f)() const) (CompoundStmt 0x8f263d0 </usr/include/c++/4.6/bits/stl_function.h:693:5, col:47>
  (ReturnStmt 0x8f263c0 <col:7, col:44>
    (CXXUnresolvedConstructExpr 0x8f263a0 <col:14, col:44> 'const_mem_fun_t<_Ret, _Tp>'
      (DeclRefExpr 0x8f26388 <col:41> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x8f26130 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp> inline mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)()) (CompoundStmt 0x8f268d0 </usr/include/c++/4.6/bits/stl_function.h:698:5, col:45>
  (ReturnStmt 0x8f268c0 <col:7, col:42>
    (CXXUnresolvedConstructExpr 0x8f268a0 <col:14, col:42> 'mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x8f26888 <col:39> '_Ret (_Tp::*)(void)' lvalue ParmVar 0x8f26630 '__f' '_Ret (_Tp::*)(void)'))))

;
    template <typename _Ret, typename _Tp> inline const_mem_fun_ref_t<_Ret, _Tp> mem_fun_ref(_Ret (_Tp::*__f)() const) (CompoundStmt 0x8f27820 </usr/include/c++/4.6/bits/stl_function.h:703:5, col:51>
  (ReturnStmt 0x8f27810 <col:7, col:48>
    (CXXUnresolvedConstructExpr 0x8f277f0 <col:14, col:48> 'const_mem_fun_ref_t<_Ret, _Tp>'
      (DeclRefExpr 0x8f277d8 <col:45> '_Ret (_Tp::*)(void) const' lvalue ParmVar 0x8f26b30 '__f' '_Ret (_Tp::*)(void) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x8f27e68 </usr/include/c++/4.6/bits/stl_function.h:708:5, col:48>
  (ReturnStmt 0x8f27e58 <col:7, col:45>
    (CXXUnresolvedConstructExpr 0x8f27e38 <col:14, col:45> 'mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x8f27e20 <col:42> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x8f27b60 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_t<_Ret, _Tp, _Arg> mem_fun(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x8f284a8 </usr/include/c++/4.6/bits/stl_function.h:713:5, col:54>
  (ReturnStmt 0x8f28498 <col:7, col:51>
    (CXXUnresolvedConstructExpr 0x8f28478 <col:14, col:51> 'const_mem_fun1_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x8f28460 <col:48> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x8f281a0 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg)) (CompoundStmt 0x8f28ae8 </usr/include/c++/4.6/bits/stl_function.h:718:5, col:52>
  (ReturnStmt 0x8f28ad8 <col:7, col:49>
    (CXXUnresolvedConstructExpr 0x8f28ab8 <col:14, col:49> 'mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x8f28aa0 <col:46> '_Ret (_Tp::*)(_Arg)' lvalue ParmVar 0x8f287e0 '__f' '_Ret (_Tp::*)(_Arg)'))))

;
    template <typename _Ret, typename _Tp, typename _Arg> inline const_mem_fun1_ref_t<_Ret, _Tp, _Arg> mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const) (CompoundStmt 0x8f29128 </usr/include/c++/4.6/bits/stl_function.h:723:5, col:58>
  (ReturnStmt 0x8f29118 <col:7, col:55>
    (CXXUnresolvedConstructExpr 0x8f290f8 <col:14, col:55> 'const_mem_fun1_ref_t<_Ret, _Tp, _Arg>'
      (DeclRefExpr 0x8f290e0 <col:52> '_Ret (_Tp::*)(_Arg) const' lvalue ParmVar 0x8f28e20 '__f' '_Ret (_Tp::*)(_Arg) const'))))

;
}
namespace std {
    template <typename _Operation> class binder1st : public unary_function<typename _Operation::second_argument_type, typename _Operation::result_type> {
        class binder1st;
    protected:
    protected:
        _Operation op;
        typename _Operation::first_argument_type value;
    public:
    public:
        binder1st<_Operation>(const _Operation &__x, const typename _Operation::first_argument_type &__y) : op((DeclRefExpr 0x8f2e254 </usr/include/c++/4.6/backward/binders.h:111:12> 'const _Operation' lvalue ParmVar 0x8f2dd50 '__x' 'const _Operation &')
), value((DeclRefExpr 0x8f2e2a8 </usr/include/c++/4.6/backward/binders.h:111:24> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x8f2dde0 '__y' 'const typename _Operation::first_argument_type &')
) (CompoundStmt 0x8f2e300 </usr/include/c++/4.6/backward/binders.h:111:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const (CompoundStmt 0x8f2e3f8 </usr/include/c++/4.6/backward/binders.h:115:7, col:32>
  (ReturnStmt 0x8f2e3e8 <col:9, col:29>
    (CallExpr 0x8f2e3c0 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x8f2e354 <col:16> 'const _Operation' lvalue ->op 0x8f2dc20
        (CXXThisExpr 0x8f2e328 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x8f2e388 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x8f2dcb0
        (CXXThisExpr 0x8f2e378 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x8f2e3a8 <col:26> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x8f2df80 '__x' 'const typename _Operation::second_argument_type &'))))


        typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const (CompoundStmt 0x8f2e4c0 </usr/include/c++/4.6/backward/binders.h:121:7, col:32>
  (ReturnStmt 0x8f2e4b0 <col:9, col:29>
    (CallExpr 0x8f2e488 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x8f2e420 <col:16> 'const _Operation' lvalue ->op 0x8f2dc20
        (CXXThisExpr 0x8f2e410 <col:16> 'const binder1st<_Operation> *' this))
      (MemberExpr 0x8f2e450 <col:19> 'const typename _Operation::first_argument_type' lvalue ->value 0x8f2dcb0
        (CXXThisExpr 0x8f2e440 <col:19> 'const binder1st<_Operation> *' this))
      (DeclRefExpr 0x8f2e470 <col:26> 'typename _Operation::second_argument_type' lvalue ParmVar 0x8f2e140 '__x' 'typename _Operation::second_argument_type &'))))


    };
    template <typename _Operation, typename _Tp> inline binder1st<_Operation> bind1st(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x8f2ea10 </usr/include/c++/4.6/backward/binders.h:128:5, line:131:5>
  (DeclStmt 0x8f2e8b0 <line:129:7, col:66>
    0x8f2e880 "typedef typename _Operation::first_argument_type _Arg1_type")
  (ReturnStmt 0x8f2ea00 <line:130:7, col:57>
    (CXXUnresolvedConstructExpr 0x8f2e9e0 <col:14, col:57> 'binder1st<_Operation>'
      (DeclRefExpr 0x8f2e970 <col:36> 'const _Operation' lvalue ParmVar 0x8f2e650 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x8f2e9c0 <col:42, col:56> '_Arg1_type':'typename _Operation::first_argument_type'
        (DeclRefExpr 0x8f2e9a8 <col:53> 'const _Tp' lvalue ParmVar 0x8f2e6c0 '__x' 'const _Tp &')))))

;
    template <typename _Operation> class binder2nd : public unary_function<typename _Operation::first_argument_type, typename _Operation::result_type> {
        class binder2nd;
    protected:
    protected:
        _Operation op;
        typename _Operation::second_argument_type value;
    public:
    public:
        binder2nd<_Operation>(const _Operation &__x, const typename _Operation::second_argument_type &__y) : op((DeclRefExpr 0x8f2f524 </usr/include/c++/4.6/backward/binders.h:146:12> 'const _Operation' lvalue ParmVar 0x8f2f020 '__x' 'const _Operation &')
), value((DeclRefExpr 0x8f2f578 </usr/include/c++/4.6/backward/binders.h:146:24> 'const typename _Operation::second_argument_type' lvalue ParmVar 0x8f2f0b0 '__y' 'const typename _Operation::second_argument_type &')
) (CompoundStmt 0x8f2f5d0 </usr/include/c++/4.6/backward/binders.h:146:29, col:31>)


        typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const (CompoundStmt 0x8f2f6c8 </usr/include/c++/4.6/backward/binders.h:150:7, col:32>
  (ReturnStmt 0x8f2f6b8 <col:9, col:29>
    (CallExpr 0x8f2f690 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x8f2f624 <col:16> 'const _Operation' lvalue ->op 0x8f2eef0
        (CXXThisExpr 0x8f2f5f8 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x8f2f644 <col:19> 'const typename _Operation::first_argument_type' lvalue ParmVar 0x8f2f250 '__x' 'const typename _Operation::first_argument_type &')
      (MemberExpr 0x8f2f670 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x8f2ef80
        (CXXThisExpr 0x8f2f660 <col:24> 'const binder2nd<_Operation> *' this)))))


        typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const (CompoundStmt 0x8f2f790 </usr/include/c++/4.6/backward/binders.h:156:7, col:32>
  (ReturnStmt 0x8f2f780 <col:9, col:29>
    (CallExpr 0x8f2f758 <col:16, col:29> '<dependent type>'
      (MemberExpr 0x8f2f6f0 <col:16> 'const _Operation' lvalue ->op 0x8f2eef0
        (CXXThisExpr 0x8f2f6e0 <col:16> 'const binder2nd<_Operation> *' this))
      (DeclRefExpr 0x8f2f710 <col:19> 'typename _Operation::first_argument_type' lvalue ParmVar 0x8f2f410 '__x' 'typename _Operation::first_argument_type &')
      (MemberExpr 0x8f2f738 <col:24> 'const typename _Operation::second_argument_type' lvalue ->value 0x8f2ef80
        (CXXThisExpr 0x8f2f728 <col:24> 'const binder2nd<_Operation> *' this)))))


    };
    template <typename _Operation, typename _Tp> inline binder2nd<_Operation> bind2nd(const _Operation &__fn, const _Tp &__x) (CompoundStmt 0x8f30100 </usr/include/c++/4.6/backward/binders.h:163:5, line:166:5>
  (DeclStmt 0x8f2ffa0 <line:164:7, col:67>
    0x8f2ff70 "typedef typename _Operation::second_argument_type _Arg2_type")
  (ReturnStmt 0x8f300f0 <line:165:7, col:57>
    (CXXUnresolvedConstructExpr 0x8f300d0 <col:14, col:57> 'binder2nd<_Operation>'
      (DeclRefExpr 0x8f30060 <col:36> 'const _Operation' lvalue ParmVar 0x8f2f920 '__fn' 'const _Operation &')
      (CXXUnresolvedConstructExpr 0x8f300b0 <col:42, col:56> '_Arg2_type':'typename _Operation::second_argument_type'
        (DeclRefExpr 0x8f30098 <col:53> 'const _Tp' lvalue ParmVar 0x8f2f990 '__x' 'const _Tp &')))))

;
}
struct sched_param {
    struct sched_param;
    int __sched_priority;
};
extern "C" {
    extern int clone(int (*__fn)(void *), void *__child_stack, int __flags, void *__arg, ...) throw();
    extern int unshare(int __flags) throw();
    extern int sched_getcpu() throw();
    extern int setns(int __fd, int __nstype) throw();
}
struct __sched_param {
    struct __sched_param;
    int __sched_priority;
};
typedef unsigned long __cpu_mask;
struct {
    __cpu_mask __bits[32];
};
typedef struct cpu_set_t cpu_set_t;
extern "C" {
    extern int __sched_cpucount(size_t __setsize, const cpu_set_t *__setp) throw();
    extern cpu_set_t *__sched_cpualloc(size_t __count) throw();
    extern void __sched_cpufree(cpu_set_t *__set) throw();
}
extern "C" {
    extern int sched_setparam(__pid_t __pid, const struct sched_param *__param) throw();
    extern int sched_getparam(__pid_t __pid, struct sched_param *__param) throw();
    extern int sched_setscheduler(__pid_t __pid, int __policy, const struct sched_param *__param) throw();
    extern int sched_getscheduler(__pid_t __pid) throw();
    extern int sched_yield() throw();
    extern int sched_get_priority_max(int __algorithm) throw();
    extern int sched_get_priority_min(int __algorithm) throw();
    extern int sched_rr_get_interval(__pid_t __pid, struct timespec *__t) throw();
    extern int sched_setaffinity(__pid_t __pid, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int sched_getaffinity(__pid_t __pid, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
}
extern "C" {
    struct timex {
        struct timex;
        unsigned int modes;
        long offset;
        long freq;
        long maxerror;
        long esterror;
        int status;
        long constant;
        long precision;
        long tolerance;
        struct timeval time;
        long tick;
        long ppsfreq;
        long jitter;
        int shift;
        long stabil;
        long jitcnt;
        long calcnt;
        long errcnt;
        long stbcnt;
        int tai;
        int : (IntegerLiteral 0x8f46670 </usr/include/i386-linux-gnu/bits/timex.h:50:9> 'int' 32)
;
        int : (IntegerLiteral 0x8f466d0 </usr/include/i386-linux-gnu/bits/timex.h:50:19> 'int' 32)
;
        int : (IntegerLiteral 0x8f46730 </usr/include/i386-linux-gnu/bits/timex.h:50:29> 'int' 32)
;
        int : (IntegerLiteral 0x8f46790 </usr/include/i386-linux-gnu/bits/timex.h:50:39> 'int' 32)
;
        int : (IntegerLiteral 0x8f467f0 </usr/include/i386-linux-gnu/bits/timex.h:51:9> 'int' 32)
;
        int : (IntegerLiteral 0x8f46850 </usr/include/i386-linux-gnu/bits/timex.h:51:19> 'int' 32)
;
        int : (IntegerLiteral 0x8f468b0 </usr/include/i386-linux-gnu/bits/timex.h:51:29> 'int' 32)
;
        int : (IntegerLiteral 0x8f46910 </usr/include/i386-linux-gnu/bits/timex.h:51:39> 'int' 32)
;
        int : (IntegerLiteral 0x8f46970 </usr/include/i386-linux-gnu/bits/timex.h:52:9> 'int' 32)
;
        int : (IntegerLiteral 0x8f469d0 </usr/include/i386-linux-gnu/bits/timex.h:52:19> 'int' 32)
;
        int : (IntegerLiteral 0x8f46a30 </usr/include/i386-linux-gnu/bits/timex.h:52:29> 'int' 32)
;
    };
    extern "C" {
        extern int clock_adjtime(__clockid_t __clock_id, struct timex *__utx) throw();
    }
    struct tm {
        struct tm;
        int tm_sec;
        int tm_min;
        int tm_hour;
        int tm_mday;
        int tm_mon;
        int tm_year;
        int tm_wday;
        int tm_yday;
        int tm_isdst;
        long tm_gmtoff;
        const char *tm_zone;
    };
    struct itimerspec {
        struct itimerspec;
        struct timespec it_interval;
        struct timespec it_value;
    };
    struct sigevent;
    extern clock_t clock() throw();
    extern time_t time(time_t *__timer) throw();
    extern double difftime(time_t __time1, time_t __time0) throw();
    extern time_t mktime(struct tm *__tp) throw();
    extern size_t strftime(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp) throw();
    extern char *strptime(const char *restrict __s, const char *restrict __fmt, struct tm *__tp) throw();
    extern size_t strftime_l(char *restrict __s, size_t __maxsize, const char *restrict __format, const struct tm *restrict __tp, __locale_t __loc) throw();
    extern char *strptime_l(const char *restrict __s, const char *restrict __fmt, struct tm *__tp, __locale_t __loc) throw();
    extern struct tm *gmtime(const time_t *__timer) throw();
    extern struct tm *localtime(const time_t *__timer) throw();
    extern struct tm *gmtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern struct tm *localtime_r(const time_t *restrict __timer, struct tm *restrict __tp) throw();
    extern char *asctime(const struct tm *__tp) throw();
    extern char *ctime(const time_t *__timer) throw();
    extern char *asctime_r(const struct tm *restrict __tp, char *restrict __buf) throw();
    extern char *ctime_r(const time_t *restrict __timer, char *restrict __buf) throw();
    extern char *__tzname[2];
    extern int __daylight;
    extern long __timezone;
    extern char *tzname[2];
    extern void tzset() throw();
    extern int daylight;
    extern long timezone;
    extern int stime(const time_t *__when) throw();
    extern time_t timegm(struct tm *__tp) throw();
    extern time_t timelocal(struct tm *__tp) throw();
    extern int dysize(int __year) throw();
    extern int nanosleep(const struct timespec *__requested_time, struct timespec *__remaining);
    extern int clock_getres(clockid_t __clock_id, struct timespec *__res) throw();
    extern int clock_gettime(clockid_t __clock_id, struct timespec *__tp) throw();
    extern int clock_settime(clockid_t __clock_id, const struct timespec *__tp) throw();
    extern int clock_nanosleep(clockid_t __clock_id, int __flags, const struct timespec *__req, struct timespec *__rem);
    extern int clock_getcpuclockid(pid_t __pid, clockid_t *__clock_id) throw();
    extern int timer_create(clockid_t __clock_id, struct sigevent *restrict __evp, timer_t *restrict __timerid) throw();
    extern int timer_delete(timer_t __timerid) throw();
    extern int timer_settime(timer_t __timerid, int __flags, const struct itimerspec *restrict __value, struct itimerspec *restrict __ovalue) throw();
    extern int timer_gettime(timer_t __timerid, struct itimerspec *__value) throw();
    extern int timer_getoverrun(timer_t __timerid) throw();
    extern int getdate_err;
    extern struct tm *getdate(const char *__string);
    extern int getdate_r(const char *restrict __string, struct tm *restrict __resbufp);
}
typedef int __jmp_buf[6];
enum  {
    PTHREAD_CREATE_JOINABLE,
    PTHREAD_CREATE_DETACHED
};
enum  {
    PTHREAD_MUTEX_TIMED_NP,
    PTHREAD_MUTEX_RECURSIVE_NP,
    PTHREAD_MUTEX_ERRORCHECK_NP,
    PTHREAD_MUTEX_ADAPTIVE_NP,
    PTHREAD_MUTEX_NORMAL = (ImplicitCastExpr 0x8f4f818 </usr/include/pthread.h:52:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f684 <col:26> 'int' EnumConstant 0x8f4f590 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_RECURSIVE = (ImplicitCastExpr 0x8f4f828 </usr/include/pthread.h:53:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f6d4 <col:29> 'int' EnumConstant 0x8f4f5d0 'PTHREAD_MUTEX_RECURSIVE_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_ERRORCHECK = (ImplicitCastExpr 0x8f4f838 </usr/include/pthread.h:54:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f724 <col:30> 'int' EnumConstant 0x8f4f610 'PTHREAD_MUTEX_ERRORCHECK_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_DEFAULT = (ImplicitCastExpr 0x8f4f848 </usr/include/pthread.h:55:27> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f774 <col:27> 'int' EnumConstant 0x8f4f6a0 'PTHREAD_MUTEX_NORMAL' 'enum <anonymous at /usr/include/pthread.h:44:1>'))
,
    PTHREAD_MUTEX_FAST_NP = (ImplicitCastExpr 0x8f4f858 </usr/include/pthread.h:59:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f7c4 <col:29> 'int' EnumConstant 0x8f4f590 'PTHREAD_MUTEX_TIMED_NP' 'enum <anonymous at /usr/include/pthread.h:44:1>'))

};
enum  {
    PTHREAD_MUTEX_STALLED,
    PTHREAD_MUTEX_STALLED_NP = (ImplicitCastExpr 0x8f4f9e8 </usr/include/pthread.h:69:30> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f904 <col:30> 'int' EnumConstant 0x8f4f8d0 'PTHREAD_MUTEX_STALLED' 'enum <anonymous at /usr/include/pthread.h:66:1>'))
,
    PTHREAD_MUTEX_ROBUST,
    PTHREAD_MUTEX_ROBUST_NP = (ImplicitCastExpr 0x8f4f9f8 </usr/include/pthread.h:71:29> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4f994 <col:29> 'int' EnumConstant 0x8f4f960 'PTHREAD_MUTEX_ROBUST' 'enum <anonymous at /usr/include/pthread.h:66:1>'))

};
enum  {
    PTHREAD_PRIO_NONE,
    PTHREAD_PRIO_INHERIT,
    PTHREAD_PRIO_PROTECT
};
enum  {
    PTHREAD_RWLOCK_PREFER_READER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NP,
    PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
    PTHREAD_RWLOCK_DEFAULT_NP = (ImplicitCastExpr 0x8f4fc98 </usr/include/pthread.h:120:31> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f4fc44 <col:31> 'int' EnumConstant 0x8f4fb90 'PTHREAD_RWLOCK_PREFER_READER_NP' 'enum <anonymous at /usr/include/pthread.h:115:1>'))

};
enum  {
    PTHREAD_INHERIT_SCHED,
    PTHREAD_EXPLICIT_SCHED
};
enum  {
    PTHREAD_SCOPE_SYSTEM,
    PTHREAD_SCOPE_PROCESS
};
enum  {
    PTHREAD_PROCESS_PRIVATE,
    PTHREAD_PROCESS_SHARED
};
struct _pthread_cleanup_buffer {
    struct _pthread_cleanup_buffer;
    void (*__routine)(void *);
    void *__arg;
    int __canceltype;
    struct _pthread_cleanup_buffer *__prev;
};
enum  {
    PTHREAD_CANCEL_ENABLE,
    PTHREAD_CANCEL_DISABLE
};
enum  {
    PTHREAD_CANCEL_DEFERRED,
    PTHREAD_CANCEL_ASYNCHRONOUS
};
extern "C" {
    extern int pthread_create(pthread_t *restrict __newthread, const pthread_attr_t *restrict __attr, void *(*__start_routine)(void *), void *restrict __arg) throw();
    extern void pthread_exit(void *__retval);
    extern int pthread_join(pthread_t __th, void **__thread_return);
    extern int pthread_tryjoin_np(pthread_t __th, void **__thread_return) throw();
    extern int pthread_timedjoin_np(pthread_t __th, void **__thread_return, const struct timespec *__abstime);
    extern int pthread_detach(pthread_t __th) throw();
    extern pthread_t pthread_self() throw();
    extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw();
    extern int pthread_attr_init(pthread_attr_t *__attr) throw();
    extern int pthread_attr_destroy(pthread_attr_t *__attr) throw();
    extern int pthread_attr_getdetachstate(const pthread_attr_t *__attr, int *__detachstate) throw();
    extern int pthread_attr_setdetachstate(pthread_attr_t *__attr, int __detachstate) throw();
    extern int pthread_attr_getguardsize(const pthread_attr_t *__attr, size_t *__guardsize) throw();
    extern int pthread_attr_setguardsize(pthread_attr_t *__attr, size_t __guardsize) throw();
    extern int pthread_attr_getschedparam(const pthread_attr_t *restrict __attr, struct sched_param *restrict __param) throw();
    extern int pthread_attr_setschedparam(pthread_attr_t *restrict __attr, const struct sched_param *restrict __param) throw();
    extern int pthread_attr_getschedpolicy(const pthread_attr_t *restrict __attr, int *restrict __policy) throw();
    extern int pthread_attr_setschedpolicy(pthread_attr_t *__attr, int __policy) throw();
    extern int pthread_attr_getinheritsched(const pthread_attr_t *restrict __attr, int *restrict __inherit) throw();
    extern int pthread_attr_setinheritsched(pthread_attr_t *__attr, int __inherit) throw();
    extern int pthread_attr_getscope(const pthread_attr_t *restrict __attr, int *restrict __scope) throw();
    extern int pthread_attr_setscope(pthread_attr_t *__attr, int __scope) throw();
    extern int pthread_attr_getstackaddr(const pthread_attr_t *restrict __attr, void **restrict __stackaddr) throw();
    extern int pthread_attr_setstackaddr(pthread_attr_t *__attr, void *__stackaddr) throw();
    extern int pthread_attr_getstacksize(const pthread_attr_t *restrict __attr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstacksize(pthread_attr_t *__attr, size_t __stacksize) throw();
    extern int pthread_attr_getstack(const pthread_attr_t *restrict __attr, void **restrict __stackaddr, size_t *restrict __stacksize) throw();
    extern int pthread_attr_setstack(pthread_attr_t *__attr, void *__stackaddr, size_t __stacksize) throw();
    extern int pthread_attr_setaffinity_np(pthread_attr_t *__attr, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_attr_getaffinity_np(const pthread_attr_t *__attr, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_getattr_np(pthread_t __th, pthread_attr_t *__attr) throw();
    extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const struct sched_param *__param) throw();
    extern int pthread_getschedparam(pthread_t __target_thread, int *restrict __policy, struct sched_param *restrict __param) throw();
    extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
    extern int pthread_getname_np(pthread_t __target_thread, char *__buf, size_t __buflen) throw();
    extern int pthread_setname_np(pthread_t __target_thread, const char *__name) throw();
    extern int pthread_getconcurrency() throw();
    extern int pthread_setconcurrency(int __level) throw();
    extern int pthread_yield() throw();
    extern int pthread_setaffinity_np(pthread_t __th, size_t __cpusetsize, const cpu_set_t *__cpuset) throw();
    extern int pthread_getaffinity_np(pthread_t __th, size_t __cpusetsize, cpu_set_t *__cpuset) throw();
    extern int pthread_once(pthread_once_t *__once_control, void (*__init_routine)());
    extern int pthread_setcancelstate(int __state, int *__oldstate);
    extern int pthread_setcanceltype(int __type, int *__oldtype);
    extern int pthread_cancel(pthread_t __th);
    extern void pthread_testcancel();
    struct {
        struct {
            __jmp_buf __cancel_jmp_buf;
            int __mask_was_saved;
        };
        struct <anonymous struct at /usr/include/pthread.h:509:3> __cancel_jmp_buf[1];
        void *__pad[4];
    };
    typedef struct __pthread_unwind_buf_t __pthread_unwind_buf_t;
    struct __pthread_cleanup_frame {
        struct __pthread_cleanup_frame;
        void (*__cancel_routine)(void *);
        void *__cancel_arg;
        int __do_it;
        int __cancel_type;
    };
    extern void __pthread_register_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel(__pthread_unwind_buf_t *__buf);
    extern void __pthread_register_cancel_defer(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unregister_cancel_restore(__pthread_unwind_buf_t *__buf);
    extern void __pthread_unwind_next(__pthread_unwind_buf_t *__buf);
    struct __jmp_buf_tag;
    extern int __sigsetjmp(struct __jmp_buf_tag *__env, int __savemask) throw() __attribute((returns_twice));
    extern int pthread_mutex_init(pthread_mutex_t *__mutex, const pthread_mutexattr_t *__mutexattr) throw();
    extern int pthread_mutex_destroy(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_trylock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_lock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_timedlock(pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime) throw();
    extern int pthread_mutex_unlock(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_getprioceiling(const pthread_mutex_t *restrict __mutex, int *restrict __prioceiling) throw();
    extern int pthread_mutex_setprioceiling(pthread_mutex_t *restrict __mutex, int __prioceiling, int *restrict __old_ceiling) throw();
    extern int pthread_mutex_consistent(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutex_consistent_np(pthread_mutex_t *__mutex) throw();
    extern int pthread_mutexattr_init(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_destroy(pthread_mutexattr_t *__attr) throw();
    extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_mutexattr_setpshared(pthread_mutexattr_t *__attr, int __pshared) throw();
    extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict __attr, int *restrict __kind) throw();
    extern int pthread_mutexattr_settype(pthread_mutexattr_t *__attr, int __kind) throw();
    extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict __attr, int *restrict __protocol) throw();
    extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t *__attr, int __protocol) throw();
    extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict __attr, int *restrict __prioceiling) throw();
    extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t *__attr, int __prioceiling) throw();
    extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t *__attr, int *__robustness) throw();
    extern int pthread_mutexattr_setrobust(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t *__attr, int __robustness) throw();
    extern int pthread_rwlock_init(pthread_rwlock_t *restrict __rwlock, const pthread_rwlockattr_t *restrict __attr) throw();
    extern int pthread_rwlock_destroy(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_tryrdlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_trywrlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *restrict __rwlock, const struct timespec *restrict __abstime) throw();
    extern int pthread_rwlock_unlock(pthread_rwlock_t *__rwlock) throw();
    extern int pthread_rwlockattr_init(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t *__attr) throw();
    extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *__attr, int __pshared) throw();
    extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *restrict __attr, int *restrict __pref) throw();
    extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t *__attr, int __pref) throw();
    extern int pthread_cond_init(pthread_cond_t *restrict __cond, const pthread_condattr_t *restrict __cond_attr) throw();
    extern int pthread_cond_destroy(pthread_cond_t *__cond) throw();
    extern int pthread_cond_signal(pthread_cond_t *__cond) throw();
    extern int pthread_cond_broadcast(pthread_cond_t *__cond) throw();
    extern int pthread_cond_wait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex);
    extern int pthread_cond_timedwait(pthread_cond_t *restrict __cond, pthread_mutex_t *restrict __mutex, const struct timespec *restrict __abstime);
    extern int pthread_condattr_init(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_destroy(pthread_condattr_t *__attr) throw();
    extern int pthread_condattr_getpshared(const pthread_condattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_condattr_setpshared(pthread_condattr_t *__attr, int __pshared) throw();
    extern int pthread_condattr_getclock(const pthread_condattr_t *restrict __attr, __clockid_t *restrict __clock_id) throw();
    extern int pthread_condattr_setclock(pthread_condattr_t *__attr, __clockid_t __clock_id) throw();
    extern int pthread_spin_init(pthread_spinlock_t *__lock, int __pshared) throw();
    extern int pthread_spin_destroy(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_lock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_trylock(pthread_spinlock_t *__lock) throw();
    extern int pthread_spin_unlock(pthread_spinlock_t *__lock) throw();
    extern int pthread_barrier_init(pthread_barrier_t *restrict __barrier, const pthread_barrierattr_t *restrict __attr, unsigned int __count) throw();
    extern int pthread_barrier_destroy(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrier_wait(pthread_barrier_t *__barrier) throw();
    extern int pthread_barrierattr_init(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_destroy(pthread_barrierattr_t *__attr) throw();
    extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *restrict __attr, int *restrict __pshared) throw();
    extern int pthread_barrierattr_setpshared(pthread_barrierattr_t *__attr, int __pshared) throw();
    extern int pthread_key_create(pthread_key_t *__key, void (*__destr_function)(void *)) throw();
    extern int pthread_key_delete(pthread_key_t __key) throw();
    extern void *pthread_getspecific(pthread_key_t __key) throw();
    extern int pthread_setspecific(pthread_key_t __key, const void *__pointer) throw();
    extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t *__clock_id) throw();
    extern int pthread_atfork(void (*__prepare)(), void (*__parent)(), void (*__child)()) throw();
}
extern "C" {
    typedef __socklen_t socklen_t;
    extern int access(const char *__name, int __type) throw();
    extern int euidaccess(const char *__name, int __type) throw();
    extern int eaccess(const char *__name, int __type) throw();
    extern int faccessat(int __fd, const char *__file, int __type, int __flag) throw();
    extern __off_t lseek(int __fd, __off_t __offset, int __whence) throw();
    extern __off64_t lseek64(int __fd, __off64_t __offset, int __whence) throw();
    extern int close(int __fd);
    extern ssize_t read(int __fd, void *__buf, size_t __nbytes);
    extern ssize_t write(int __fd, const void *__buf, size_t __n);
    extern ssize_t pread(int __fd, void *__buf, size_t __nbytes, __off_t __offset);
    extern ssize_t pwrite(int __fd, const void *__buf, size_t __n, __off_t __offset);
    extern ssize_t pread64(int __fd, void *__buf, size_t __nbytes, __off64_t __offset);
    extern ssize_t pwrite64(int __fd, const void *__buf, size_t __n, __off64_t __offset);
    extern int pipe(int __pipedes[2]) throw();
    extern int pipe2(int __pipedes[2], int __flags) throw();
    extern unsigned int alarm(unsigned int __seconds) throw();
    extern unsigned int sleep(unsigned int __seconds);
    extern __useconds_t ualarm(__useconds_t __value, __useconds_t __interval) throw();
    extern int usleep(__useconds_t __useconds);
    extern int pause();
    extern int chown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchown(int __fd, __uid_t __owner, __gid_t __group) throw();
    extern int lchown(const char *__file, __uid_t __owner, __gid_t __group) throw();
    extern int fchownat(int __fd, const char *__file, __uid_t __owner, __gid_t __group, int __flag) throw();
    extern int chdir(const char *__path) throw();
    extern int fchdir(int __fd) throw();
    extern char *getcwd(char *__buf, size_t __size) throw();
    extern char *get_current_dir_name() throw();
    extern char *getwd(char *__buf) throw();
    extern int dup(int __fd) throw();
    extern int dup2(int __fd, int __fd2) throw();
    extern int dup3(int __fd, int __fd2, int __flags) throw();
    extern char **__environ;
    extern char **environ;
    extern int execve(const char *__path, char *const __argv[], char *const __envp[]) throw();
    extern int fexecve(int __fd, char *const __argv[], char *const __envp[]) throw();
    extern int execv(const char *__path, char *const __argv[]) throw();
    extern int execle(const char *__path, const char *__arg, ...) throw();
    extern int execl(const char *__path, const char *__arg, ...) throw();
    extern int execvp(const char *__file, char *const __argv[]) throw();
    extern int execlp(const char *__file, const char *__arg, ...) throw();
    extern int execvpe(const char *__file, char *const __argv[], char *const __envp[]) throw();
    extern int nice(int __inc) throw();
    extern void _exit(int __status);
    enum  {
        _PC_LINK_MAX,
        _PC_MAX_CANON,
        _PC_MAX_INPUT,
        _PC_NAME_MAX,
        _PC_PATH_MAX,
        _PC_PIPE_BUF,
        _PC_CHOWN_RESTRICTED,
        _PC_NO_TRUNC,
        _PC_VDISABLE,
        _PC_SYNC_IO,
        _PC_ASYNC_IO,
        _PC_PRIO_IO,
        _PC_SOCK_MAXBUF,
        _PC_FILESIZEBITS,
        _PC_REC_INCR_XFER_SIZE,
        _PC_REC_MAX_XFER_SIZE,
        _PC_REC_MIN_XFER_SIZE,
        _PC_REC_XFER_ALIGN,
        _PC_ALLOC_SIZE_MIN,
        _PC_SYMLINK_MAX,
        _PC_2_SYMLINKS
    };
    enum  {
        _SC_ARG_MAX,
        _SC_CHILD_MAX,
        _SC_CLK_TCK,
        _SC_NGROUPS_MAX,
        _SC_OPEN_MAX,
        _SC_STREAM_MAX,
        _SC_TZNAME_MAX,
        _SC_JOB_CONTROL,
        _SC_SAVED_IDS,
        _SC_REALTIME_SIGNALS,
        _SC_PRIORITY_SCHEDULING,
        _SC_TIMERS,
        _SC_ASYNCHRONOUS_IO,
        _SC_PRIORITIZED_IO,
        _SC_SYNCHRONIZED_IO,
        _SC_FSYNC,
        _SC_MAPPED_FILES,
        _SC_MEMLOCK,
        _SC_MEMLOCK_RANGE,
        _SC_MEMORY_PROTECTION,
        _SC_MESSAGE_PASSING,
        _SC_SEMAPHORES,
        _SC_SHARED_MEMORY_OBJECTS,
        _SC_AIO_LISTIO_MAX,
        _SC_AIO_MAX,
        _SC_AIO_PRIO_DELTA_MAX,
        _SC_DELAYTIMER_MAX,
        _SC_MQ_OPEN_MAX,
        _SC_MQ_PRIO_MAX,
        _SC_VERSION,
        _SC_PAGESIZE,
        _SC_RTSIG_MAX,
        _SC_SEM_NSEMS_MAX,
        _SC_SEM_VALUE_MAX,
        _SC_SIGQUEUE_MAX,
        _SC_TIMER_MAX,
        _SC_BC_BASE_MAX,
        _SC_BC_DIM_MAX,
        _SC_BC_SCALE_MAX,
        _SC_BC_STRING_MAX,
        _SC_COLL_WEIGHTS_MAX,
        _SC_EQUIV_CLASS_MAX,
        _SC_EXPR_NEST_MAX,
        _SC_LINE_MAX,
        _SC_RE_DUP_MAX,
        _SC_CHARCLASS_NAME_MAX,
        _SC_2_VERSION,
        _SC_2_C_BIND,
        _SC_2_C_DEV,
        _SC_2_FORT_DEV,
        _SC_2_FORT_RUN,
        _SC_2_SW_DEV,
        _SC_2_LOCALEDEF,
        _SC_PII,
        _SC_PII_XTI,
        _SC_PII_SOCKET,
        _SC_PII_INTERNET,
        _SC_PII_OSI,
        _SC_POLL,
        _SC_SELECT,
        _SC_UIO_MAXIOV,
        _SC_IOV_MAX = (ImplicitCastExpr 0x8f864f8 </usr/include/i386-linux-gnu/bits/confname.h:202:26> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x8f7b194 <col:26> 'int' EnumConstant 0x8f7b160 '_SC_UIO_MAXIOV' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>'))
,
        _SC_PII_INTERNET_STREAM,
        _SC_PII_INTERNET_DGRAM,
        _SC_PII_OSI_COTS,
        _SC_PII_OSI_CLTS,
        _SC_PII_OSI_M,
        _SC_T_IOV_MAX,
        _SC_THREADS,
        _SC_THREAD_SAFE_FUNCTIONS,
        _SC_GETGR_R_SIZE_MAX,
        _SC_GETPW_R_SIZE_MAX,
        _SC_LOGIN_NAME_MAX,
        _SC_TTY_NAME_MAX,
        _SC_THREAD_DESTRUCTOR_ITERATIONS,
        _SC_THREAD_KEYS_MAX,
        _SC_THREAD_STACK_MIN,
        _SC_THREAD_THREADS_MAX,
        _SC_THREAD_ATTR_STACKADDR,
        _SC_THREAD_ATTR_STACKSIZE,
        _SC_THREAD_PRIORITY_SCHEDULING,
        _SC_THREAD_PRIO_INHERIT,
        _SC_THREAD_PRIO_PROTECT,
        _SC_THREAD_PROCESS_SHARED,
        _SC_NPROCESSORS_CONF,
        _SC_NPROCESSORS_ONLN,
        _SC_PHYS_PAGES,
        _SC_AVPHYS_PAGES,
        _SC_ATEXIT_MAX,
        _SC_PASS_MAX,
        _SC_XOPEN_VERSION,
        _SC_XOPEN_XCU_VERSION,
        _SC_XOPEN_UNIX,
        _SC_XOPEN_CRYPT,
        _SC_XOPEN_ENH_I18N,
        _SC_XOPEN_SHM,
        _SC_2_CHAR_TERM,
        _SC_2_C_VERSION,
        _SC_2_UPE,
        _SC_XOPEN_XPG2,
        _SC_XOPEN_XPG3,
        _SC_XOPEN_XPG4,
        _SC_CHAR_BIT,
        _SC_CHAR_MAX,
        _SC_CHAR_MIN,
        _SC_INT_MAX,
        _SC_INT_MIN,
        _SC_LONG_BIT,
        _SC_WORD_BIT,
        _SC_MB_LEN_MAX,
        _SC_NZERO,
        _SC_SSIZE_MAX,
        _SC_SCHAR_MAX,
        _SC_SCHAR_MIN,
        _SC_SHRT_MAX,
        _SC_SHRT_MIN,
        _SC_UCHAR_MAX,
        _SC_UINT_MAX,
        _SC_ULONG_MAX,
        _SC_USHRT_MAX,
        _SC_NL_ARGMAX,
        _SC_NL_LANGMAX,
        _SC_NL_MSGMAX,
        _SC_NL_NMAX,
        _SC_NL_SETMAX,
        _SC_NL_TEXTMAX,
        _SC_XBS5_ILP32_OFF32,
        _SC_XBS5_ILP32_OFFBIG,
        _SC_XBS5_LP64_OFF64,
        _SC_XBS5_LPBIG_OFFBIG,
        _SC_XOPEN_LEGACY,
        _SC_XOPEN_REALTIME,
        _SC_XOPEN_REALTIME_THREADS,
        _SC_ADVISORY_INFO,
        _SC_BARRIERS,
        _SC_BASE,
        _SC_C_LANG_SUPPORT,
        _SC_C_LANG_SUPPORT_R,
        _SC_CLOCK_SELECTION,
        _SC_CPUTIME,
        _SC_THREAD_CPUTIME,
        _SC_DEVICE_IO,
        _SC_DEVICE_SPECIFIC,
        _SC_DEVICE_SPECIFIC_R,
        _SC_FD_MGMT,
        _SC_FIFO,
        _SC_PIPE,
        _SC_FILE_ATTRIBUTES,
        _SC_FILE_LOCKING,
        _SC_FILE_SYSTEM,
        _SC_MONOTONIC_CLOCK,
        _SC_MULTI_PROCESS,
        _SC_SINGLE_PROCESS,
        _SC_NETWORKING,
        _SC_READER_WRITER_LOCKS,
        _SC_SPIN_LOCKS,
        _SC_REGEXP,
        _SC_REGEX_VERSION,
        _SC_SHELL,
        _SC_SIGNALS,
        _SC_SPAWN,
        _SC_SPORADIC_SERVER,
        _SC_THREAD_SPORADIC_SERVER,
        _SC_SYSTEM_DATABASE,
        _SC_SYSTEM_DATABASE_R,
        _SC_TIMEOUTS,
        _SC_TYPED_MEMORY_OBJECTS,
        _SC_USER_GROUPS,
        _SC_USER_GROUPS_R,
        _SC_2_PBS,
        _SC_2_PBS_ACCOUNTING,
        _SC_2_PBS_LOCATE,
        _SC_2_PBS_MESSAGE,
        _SC_2_PBS_TRACK,
        _SC_SYMLOOP_MAX,
        _SC_STREAMS,
        _SC_2_PBS_CHECKPOINT,
        _SC_V6_ILP32_OFF32,
        _SC_V6_ILP32_OFFBIG,
        _SC_V6_LP64_OFF64,
        _SC_V6_LPBIG_OFFBIG,
        _SC_HOST_NAME_MAX,
        _SC_TRACE,
        _SC_TRACE_EVENT_FILTER,
        _SC_TRACE_INHERIT,
        _SC_TRACE_LOG,
        _SC_LEVEL1_ICACHE_SIZE,
        _SC_LEVEL1_ICACHE_ASSOC,
        _SC_LEVEL1_ICACHE_LINESIZE,
        _SC_LEVEL1_DCACHE_SIZE,
        _SC_LEVEL1_DCACHE_ASSOC,
        _SC_LEVEL1_DCACHE_LINESIZE,
        _SC_LEVEL2_CACHE_SIZE,
        _SC_LEVEL2_CACHE_ASSOC,
        _SC_LEVEL2_CACHE_LINESIZE,
        _SC_LEVEL3_CACHE_SIZE,
        _SC_LEVEL3_CACHE_ASSOC,
        _SC_LEVEL3_CACHE_LINESIZE,
        _SC_LEVEL4_CACHE_SIZE,
        _SC_LEVEL4_CACHE_ASSOC,
        _SC_LEVEL4_CACHE_LINESIZE,
        _SC_IPV6 = (ImplicitCastExpr 0x8f86508 </usr/include/i386-linux-gnu/bits/confname.h:468:33, line:499:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x8f86168 <line:468:33, line:499:41> 'int' '+'
    (DeclRefExpr 0x8f86134 <line:468:33> 'int' EnumConstant 0x8f85d80 '_SC_LEVEL1_ICACHE_SIZE' 'enum <anonymous at /usr/include/i386-linux-gnu/bits/confname.h:73:1>')
    (IntegerLiteral 0x8f86150 <line:499:41> 'int' 50)))
,
        _SC_RAW_SOCKETS,
        _SC_V7_ILP32_OFF32,
        _SC_V7_ILP32_OFFBIG,
        _SC_V7_LP64_OFF64,
        _SC_V7_LPBIG_OFFBIG,
        _SC_SS_REPL_MAX,
        _SC_TRACE_EVENT_NAME_MAX,
        _SC_TRACE_NAME_MAX,
        _SC_TRACE_SYS_MAX,
        _SC_TRACE_USER_EVENT_MAX,
        _SC_XOPEN_STREAMS,
        _SC_THREAD_ROBUST_PRIO_INHERIT,
        _SC_THREAD_ROBUST_PRIO_PROTECT
    };
    enum  {
        _CS_PATH,
        _CS_V6_WIDTH_RESTRICTED_ENVS,
        _CS_GNU_LIBC_VERSION,
        _CS_GNU_LIBPTHREAD_VERSION,
        _CS_V5_WIDTH_RESTRICTED_ENVS,
        _CS_V7_WIDTH_RESTRICTED_ENVS,
        _CS_LFS_CFLAGS = (ImplicitCastExpr 0x8f87598 </usr/include/i386-linux-gnu/bits/confname.h:557:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8f866f8 <col:22> 'int' 1000))
,
        _CS_LFS_LDFLAGS,
        _CS_LFS_LIBS,
        _CS_LFS_LINTFLAGS,
        _CS_LFS64_CFLAGS,
        _CS_LFS64_LDFLAGS,
        _CS_LFS64_LIBS,
        _CS_LFS64_LINTFLAGS,
        _CS_XBS5_ILP32_OFF32_CFLAGS = (ImplicitCastExpr 0x8f875a8 </usr/include/i386-linux-gnu/bits/confname.h:574:35> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x8f86908 <col:35> 'int' 1100))
,
        _CS_XBS5_ILP32_OFF32_LDFLAGS,
        _CS_XBS5_ILP32_OFF32_LIBS,
        _CS_XBS5_ILP32_OFF32_LINTFLAGS,
        _CS_XBS5_ILP32_OFFBIG_CFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LDFLAGS,
        _CS_XBS5_ILP32_OFFBIG_LIBS,
        _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,
        _CS_XBS5_LP64_OFF64_CFLAGS,
        _CS_XBS5_LP64_OFF64_LDFLAGS,
        _CS_XBS5_LP64_OFF64_LIBS,
        _CS_XBS5_LP64_OFF64_LINTFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_CFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,
        _CS_XBS5_LPBIG_OFFBIG_LIBS,
        _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFF32_LIBS,
        _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V6_LP64_OFF64_CFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V6_LP64_OFF64_LIBS,
        _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_CFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFF32_LIBS,
        _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_ILP32_OFFBIG_LIBS,
        _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,
        _CS_POSIX_V7_LP64_OFF64_CFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LDFLAGS,
        _CS_POSIX_V7_LP64_OFF64_LIBS,
        _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,
        _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,
        _CS_V6_ENV,
        _CS_V7_ENV
    };
    extern long pathconf(const char *__path, int __name) throw();
    extern long fpathconf(int __fd, int __name) throw();
    extern long sysconf(int __name) throw();
    extern size_t confstr(int __name, char *__buf, size_t __len) throw();
    extern __pid_t getpid() throw();
    extern __pid_t getppid() throw();
    extern __pid_t getpgrp() throw();
    extern __pid_t __getpgid(__pid_t __pid) throw();
    extern __pid_t getpgid(__pid_t __pid) throw();
    extern int setpgid(__pid_t __pid, __pid_t __pgid) throw();
    extern int setpgrp() throw();
    extern __pid_t setsid() throw();
    extern __pid_t getsid(__pid_t __pid) throw();
    extern __uid_t getuid() throw();
    extern __uid_t geteuid() throw();
    extern __gid_t getgid() throw();
    extern __gid_t getegid() throw();
    extern int getgroups(int __size, __gid_t __list[]) throw();
    extern int group_member(__gid_t __gid) throw();
    extern int setuid(__uid_t __uid) throw();
    extern int setreuid(__uid_t __ruid, __uid_t __euid) throw();
    extern int seteuid(__uid_t __uid) throw();
    extern int setgid(__gid_t __gid) throw();
    extern int setregid(__gid_t __rgid, __gid_t __egid) throw();
    extern int setegid(__gid_t __gid) throw();
    extern int getresuid(__uid_t *__ruid, __uid_t *__euid, __uid_t *__suid) throw();
    extern int getresgid(__gid_t *__rgid, __gid_t *__egid, __gid_t *__sgid) throw();
    extern int setresuid(__uid_t __ruid, __uid_t __euid, __uid_t __suid) throw();
    extern int setresgid(__gid_t __rgid, __gid_t __egid, __gid_t __sgid) throw();
    extern __pid_t fork() throw();
    extern __pid_t vfork() throw() __attribute((returns_twice));
    extern char *ttyname(int __fd) throw();
    extern int ttyname_r(int __fd, char *__buf, size_t __buflen) throw();
    extern int isatty(int __fd) throw();
    extern int ttyslot() throw();
    extern int link(const char *__from, const char *__to) throw();
    extern int linkat(int __fromfd, const char *__from, int __tofd, const char *__to, int __flags) throw();
    extern int symlink(const char *__from, const char *__to) throw();
    extern ssize_t readlink(const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int symlinkat(const char *__from, int __tofd, const char *__to) throw();
    extern ssize_t readlinkat(int __fd, const char *restrict __path, char *restrict __buf, size_t __len) throw();
    extern int unlink(const char *__name) throw();
    extern int unlinkat(int __fd, const char *__name, int __flag) throw();
    extern int rmdir(const char *__path) throw();
    extern __pid_t tcgetpgrp(int __fd) throw();
    extern int tcsetpgrp(int __fd, __pid_t __pgrp_id) throw();
    extern char *getlogin();
    extern int getlogin_r(char *__name, size_t __name_len);
    extern int setlogin(const char *__name) throw();
    extern "C" {
        extern char *optarg;
        extern int optind;
        extern int opterr;
        extern int optopt;
        extern int getopt(int ___argc, char *const *___argv, const char *__shortopts) throw();
    }
    extern int gethostname(char *__name, size_t __len) throw();
    extern int sethostname(const char *__name, size_t __len) throw();
    extern int sethostid(long __id) throw();
    extern int getdomainname(char *__name, size_t __len) throw();
    extern int setdomainname(const char *__name, size_t __len) throw();
    extern int vhangup() throw();
    extern int revoke(const char *__file) throw();
    extern int profil(unsigned short *__sample_buffer, size_t __size, size_t __offset, unsigned int __scale) throw();
    extern int acct(const char *__name) throw();
    extern char *getusershell() throw();
    extern void endusershell() throw();
    extern void setusershell() throw();
    extern int daemon(int __nochdir, int __noclose) throw();
    extern int chroot(const char *__path) throw();
    extern char *getpass(const char *__prompt);
    extern int fsync(int __fd);
    extern int syncfs(int __fd) throw();
    extern long gethostid();
    extern void sync() throw();
    extern int getpagesize() throw();
    extern int getdtablesize() throw();
    extern int truncate(const char *__file, __off_t __length) throw();
    extern int truncate64(const char *__file, __off64_t __length) throw();
    extern int ftruncate(int __fd, __off_t __length) throw();
    extern int ftruncate64(int __fd, __off64_t __length) throw();
    extern int brk(void *__addr) throw();
    extern void *sbrk(intptr_t __delta) throw();
    extern long syscall(long __sysno, ...) throw();
    extern int lockf(int __fd, int __cmd, __off_t __len);
    extern int lockf64(int __fd, int __cmd, __off64_t __len);
    extern int fdatasync(int __fildes);
    extern char *crypt(const char *__key, const char *__salt) throw();
    extern void encrypt(char *__libc_block, int __edflag) throw();
    extern void swab(const void *restrict __from, void *restrict __to, ssize_t __n) throw();
    extern char *ctermid(char *__s) throw();
}
typedef pthread_t __gthread_t;
typedef pthread_key_t __gthread_key_t;
typedef pthread_once_t __gthread_once_t;
typedef pthread_mutex_t __gthread_mutex_t;
typedef pthread_mutex_t __gthread_recursive_mutex_t;
typedef pthread_cond_t __gthread_cond_t;
typedef struct timespec __gthread_time_t;
static typeof (pthread_once) __gthrw_pthread_once;
static typeof (pthread_getspecific) __gthrw_pthread_getspecific;
static typeof (pthread_setspecific) __gthrw_pthread_setspecific;
static typeof (pthread_create) __gthrw_pthread_create;
static typeof (pthread_join) __gthrw_pthread_join;
static typeof (pthread_equal) __gthrw_pthread_equal;
static typeof (pthread_self) __gthrw_pthread_self;
static typeof (pthread_detach) __gthrw_pthread_detach;
static typeof (pthread_cancel) __gthrw_pthread_cancel;
static typeof (sched_yield) __gthrw_sched_yield;
static typeof (pthread_mutex_lock) __gthrw_pthread_mutex_lock;
static typeof (pthread_mutex_trylock) __gthrw_pthread_mutex_trylock;
static typeof (pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock;
static typeof (pthread_mutex_unlock) __gthrw_pthread_mutex_unlock;
static typeof (pthread_mutex_init) __gthrw_pthread_mutex_init;
static typeof (pthread_mutex_destroy) __gthrw_pthread_mutex_destroy;
static typeof (pthread_cond_broadcast) __gthrw_pthread_cond_broadcast;
static typeof (pthread_cond_signal) __gthrw_pthread_cond_signal;
static typeof (pthread_cond_wait) __gthrw_pthread_cond_wait;
static typeof (pthread_cond_timedwait) __gthrw_pthread_cond_timedwait;
static typeof (pthread_cond_destroy) __gthrw_pthread_cond_destroy;
static typeof (pthread_key_create) __gthrw_pthread_key_create;
static typeof (pthread_key_delete) __gthrw_pthread_key_delete;
static typeof (pthread_mutexattr_init) __gthrw_pthread_mutexattr_init;
static typeof (pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype;
static typeof (pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy;
static inline int __gthread_active_p() (CompoundStmt 0x8dc9ed8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:241:1, line:253:1>
  (DeclStmt 0x8dc9e40 <line:242:3, line:251:13>
    0x8dc9d80 "static void *const __gthread_active_ptr =
      (UnaryOperator 0x8dc9e28 <line:243:7, <scratch space>:99:1> 'void *' prefix '__extension__'
        (CStyleCastExpr 0x8dc9e10 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:21, <scratch space>:99:1> 'void *' <BitCast>
          (UnaryOperator 0x8dc9de8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:243:30, <scratch space>:99:1> 'typeof (pthread_cancel) *' prefix '&'
            (DeclRefExpr 0x8dc9db4 <col:1> 'typeof (pthread_cancel)':'int (pthread_t)' lvalue Function 0x8dc6bc0 '__gthrw_pthread_cancel' 'typeof (pthread_cancel)':'int (pthread_t)'))))")
  (ReturnStmt 0x8dc9ec8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:252:3, col:34>
    (ImplicitCastExpr 0x8dc9eb8 <col:10, col:34> 'int' <IntegralCast>
      (BinaryOperator 0x8dc9ea0 <col:10, col:34> '_Bool' '!='
        (ImplicitCastExpr 0x8dc9e80 <col:10> 'void *' <LValueToRValue>
          (DeclRefExpr 0x8dc9e50 <col:10> 'void *const' lvalue Var 0x8dc9d80 '__gthread_active_ptr' 'void *const'))
        (ImplicitCastExpr 0x8dc9e90 <col:34> 'void *' <NullToPointer>
          (IntegerLiteral 0x8dc9e68 <col:34> 'int' 0))))))


static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *__args) (CompoundStmt 0x8fadd88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:662:1, line:664:1>
  (ReturnStmt 0x8fadd78 <line:663:3, col:68>
    (CallExpr 0x8fadd08 <<scratch space>:100:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:68> 'int'
      (ImplicitCastExpr 0x8fadcf8 <<scratch space>:100:1> 'typeof (pthread_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fadca8 <col:1> 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()' lvalue Function 0x8dc62a0 '__gthrw_pthread_create' 'typeof (pthread_create)':'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict) throw()'))
      (ImplicitCastExpr 0x8fadd38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:36> '__gthread_t *' <LValueToRValue>
        (DeclRefExpr 0x8fadc44 <col:36> '__gthread_t *' lvalue ParmVar 0x8dc9f30 '__threadid' '__gthread_t *'))
      (ImplicitCastExpr 0x8fadd48 </usr/include/linux/stddef.h:8:14> 'const pthread_attr_t *' <NullToPointer>
        (IntegerLiteral 0x8fadc60 <col:14> 'int' 0))
      (ImplicitCastExpr 0x8fadd58 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:663:54> 'void *(*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x8fadc78 <col:54> 'void *(*)(void *)' lvalue ParmVar 0x8dc9fe0 '__func' 'void *(*)(void *)'))
      (ImplicitCastExpr 0x8fadd68 <col:62> 'void *' <LValueToRValue>
        (DeclRefExpr 0x8fadc90 <col:62> 'void *' lvalue ParmVar 0x8fadae0 '__args' 'void *')))))


static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr) (CompoundStmt 0x8fae010 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:668:1, line:670:1>
  (ReturnStmt 0x8fae000 <line:669:3, col:57>
    (CallExpr 0x8fadfb8 <<scratch space>:101:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:57> 'int'
      (ImplicitCastExpr 0x8fadfa8 <<scratch space>:101:1> 'typeof (pthread_join) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fadf4c <col:1> 'typeof (pthread_join)':'int (pthread_t, void **)' lvalue Function 0x8dc6540 '__gthrw_pthread_join' 'typeof (pthread_join)':'int (pthread_t, void **)'))
      (ImplicitCastExpr 0x8fadfe0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:669:34> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x8fadf1c <col:34> '__gthread_t':'unsigned long' lvalue ParmVar 0x8faddb0 '__threadid' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x8fadff0 <col:46> 'void **' <LValueToRValue>
        (DeclRefExpr 0x8fadf34 <col:46> 'void **' lvalue ParmVar 0x8fade00 '__value_ptr' 'void **')))))


static inline int __gthread_detach(__gthread_t __threadid) (CompoundStmt 0x8fae1e8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:674:1, line:676:1>
  (ReturnStmt 0x8fae1d8 <line:675:3, col:46>
    (CallExpr 0x8fae1a8 <<scratch space>:102:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:46> 'int'
      (ImplicitCastExpr 0x8fae198 <<scratch space>:102:1> 'typeof (pthread_detach) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fae164 <col:1> 'typeof (pthread_detach)':'int (pthread_t) throw()' lvalue Function 0x8dc6a30 '__gthrw_pthread_detach' 'typeof (pthread_detach)':'int (pthread_t) throw()'))
      (ImplicitCastExpr 0x8fae1c8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:675:36> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x8fae14c <col:36> '__gthread_t':'unsigned long' lvalue ParmVar 0x8fae030 '__threadid' '__gthread_t':'unsigned long')))))


static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2) (CompoundStmt 0x8fae460 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:680:1, line:682:1>
  (ReturnStmt 0x8fae450 <line:681:3, col:45>
    (CallExpr 0x8fae408 <<scratch space>:103:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:45> 'int'
      (ImplicitCastExpr 0x8fae3f8 <<scratch space>:103:1> 'typeof (pthread_equal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fae39c <col:1> 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()' lvalue Function 0x8dc6720 '__gthrw_pthread_equal' 'typeof (pthread_equal)':'int (pthread_t, pthread_t) throw()'))
      (ImplicitCastExpr 0x8fae430 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:681:35> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x8fae36c <col:35> '__gthread_t':'unsigned long' lvalue ParmVar 0x8fae210 '__t1' '__gthread_t':'unsigned long'))
      (ImplicitCastExpr 0x8fae440 <col:41> '__gthread_t':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x8fae384 <col:41> '__gthread_t':'unsigned long' lvalue ParmVar 0x8fae250 '__t2' '__gthread_t':'unsigned long')))))


static inline __gthread_t __gthread_self() (CompoundStmt 0x8fae618 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:686:1, line:688:1>
  (ReturnStmt 0x8fae608 <line:687:3, col:34>
    (CallExpr 0x8fae5e8 <<scratch space>:104:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:687:34> 'pthread_t':'unsigned long'
      (ImplicitCastExpr 0x8fae5d8 <<scratch space>:104:1> 'typeof (pthread_self) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fae584 <col:1> 'typeof (pthread_self)':'pthread_t (void) throw()' lvalue Function 0x8dc68f0 '__gthrw_pthread_self' 'typeof (pthread_self)':'pthread_t (void) throw()')))))


static inline int __gthread_yield() (CompoundStmt 0x8fae798 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:692:1, line:694:1>
  (ReturnStmt 0x8fae788 <line:693:3, col:33>
    (CallExpr 0x8fae768 <<scratch space>:105:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:693:33> 'int'
      (ImplicitCastExpr 0x8fae758 <<scratch space>:105:1> 'typeof (sched_yield) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fae724 <col:1> 'typeof (sched_yield)':'int (void) throw()' lvalue Function 0x8dc6d90 '__gthrw_sched_yield' 'typeof (sched_yield)':'int (void) throw()')))))


static inline int __gthread_once(__gthread_once_t *__once, void (*__func)()) (CompoundStmt 0x8faeb90 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:698:1, line:703:1>
  (IfStmt 0x8faeb70 <line:699:3, line:702:13>
    <<<NULL>>>
    (ImplicitCastExpr 0x8fae9f8 <line:699:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8fae9d8 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8fae9c8 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fae9ac <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8faeb20 <line:700:5, col:50>
      (CallExpr 0x8faead8 <<scratch space>:106:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:50> 'int'
        (ImplicitCastExpr 0x8faeac8 <<scratch space>:106:1> 'typeof (pthread_once) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faea6c <col:1> 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))' lvalue Function 0x8dc5d00 '__gthrw_pthread_once' 'typeof (pthread_once)':'int (pthread_once_t *, void (*)(void))'))
        (ImplicitCastExpr 0x8faeb00 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:700:36> '__gthread_once_t *' <LValueToRValue>
          (DeclRefExpr 0x8faea3c <col:36> '__gthread_once_t *' lvalue ParmVar 0x8fae7f0 '__once' '__gthread_once_t *'))
        (ImplicitCastExpr 0x8faeb10 <col:44> 'void (*)(void)' <LValueToRValue>
          (DeclRefExpr 0x8faea54 <col:44> 'void (*)(void)' lvalue ParmVar 0x8fae890 '__func' 'void (*)(void)'))))
    (ReturnStmt 0x8faeb60 <line:702:5, col:13>
      (UnaryOperator 0x8faeb48 <col:12, col:13> 'int' prefix '-'
        (IntegerLiteral 0x8faeb30 <col:13> 'int' 1)))))


static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *)) (CompoundStmt 0x8faeeb0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:707:1, line:709:1>
  (ReturnStmt 0x8faeea0 <line:708:3, col:53>
    (CallExpr 0x8faee58 <<scratch space>:107:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:53> 'int'
      (ImplicitCastExpr 0x8faee48 <<scratch space>:107:1> 'typeof (pthread_key_create) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8faedec <col:1> 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()' lvalue Function 0x8dc9400 '__gthrw_pthread_key_create' 'typeof (pthread_key_create)':'int (pthread_key_t *, void (*)(void *)) throw()'))
      (ImplicitCastExpr 0x8faee80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:708:40> '__gthread_key_t *' <LValueToRValue>
        (DeclRefExpr 0x8faedbc <col:40> '__gthread_key_t *' lvalue ParmVar 0x8faebf0 '__key' '__gthread_key_t *'))
      (ImplicitCastExpr 0x8faee90 <col:47> 'void (*)(void *)' <LValueToRValue>
        (DeclRefExpr 0x8faedd4 <col:47> 'void (*)(void *)' lvalue ParmVar 0x8faeca0 '__dtor' 'void (*)(void *)')))))


static inline int __gthread_key_delete(__gthread_key_t __key) (CompoundStmt 0x8faf088 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:713:1, line:715:1>
  (ReturnStmt 0x8faf078 <line:714:3, col:45>
    (CallExpr 0x8faf048 <<scratch space>:108:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:45> 'int'
      (ImplicitCastExpr 0x8faf038 <<scratch space>:108:1> 'typeof (pthread_key_delete) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8faf004 <col:1> 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()' lvalue Function 0x8dc9600 '__gthrw_pthread_key_delete' 'typeof (pthread_key_delete)':'int (pthread_key_t) throw()'))
      (ImplicitCastExpr 0x8faf068 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:714:40> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8faefec <col:40> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x8faeed0 '__key' '__gthread_key_t':'unsigned int')))))


static inline void *__gthread_getspecific(__gthread_key_t __key) (CompoundStmt 0x8faf268 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:719:1, line:721:1>
  (ReturnStmt 0x8faf258 <line:720:3, col:46>
    (CallExpr 0x8faf228 <<scratch space>:109:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:46> 'void *'
      (ImplicitCastExpr 0x8faf218 <<scratch space>:109:1> 'typeof (pthread_getspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8faf1e4 <col:1> 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()' lvalue Function 0x8dc5f10 '__gthrw_pthread_getspecific' 'typeof (pthread_getspecific)':'void *(pthread_key_t) throw()'))
      (ImplicitCastExpr 0x8faf248 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:720:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8faf1cc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x8faf0b0 '__key' '__gthread_key_t':'unsigned int')))))


static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr) (CompoundStmt 0x8faf4f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:725:1, line:727:1>
  (ReturnStmt 0x8faf4e0 <line:726:3, col:53>
    (CallExpr 0x8faf498 <<scratch space>:110:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:53> 'int'
      (ImplicitCastExpr 0x8faf488 <<scratch space>:110:1> 'typeof (pthread_setspecific) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8faf42c <col:1> 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()' lvalue Function 0x8dc60b0 '__gthrw_pthread_setspecific' 'typeof (pthread_setspecific)':'int (pthread_key_t, const void *) throw()'))
      (ImplicitCastExpr 0x8faf4c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:726:41> '__gthread_key_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x8faf3fc <col:41> '__gthread_key_t':'unsigned int' lvalue ParmVar 0x8faf290 '__key' '__gthread_key_t':'unsigned int'))
      (ImplicitCastExpr 0x8faf4d0 <col:48> 'const void *' <LValueToRValue>
        (DeclRefExpr 0x8faf414 <col:48> 'const void *' lvalue ParmVar 0x8faf2e0 '__ptr' 'const void *')))))


static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex) (CompoundStmt 0x8faf800 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:731:1, line:736:1>
  (IfStmt 0x8faf7e0 <line:732:3, line:735:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x8faf6b8 <line:732:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8faf698 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8faf688 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faf66c <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8faf7a8 <line:733:5, col:52>
      (CallExpr 0x8faf778 <<scratch space>:111:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:52> 'int'
        (ImplicitCastExpr 0x8faf768 <<scratch space>:111:1> 'typeof (pthread_mutex_destroy) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faf714 <col:1> 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()' lvalue Function 0x8dc88b0 '__gthrw_pthread_mutex_destroy' 'typeof (pthread_mutex_destroy)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x8faf798 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:733:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x8faf6fc <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x8faf550 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x8faf7d0 <line:735:5, col:12>
      (IntegerLiteral 0x8faf7b8 <col:12> 'int' 0))))


static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex) (CompoundStmt 0x8fafaa0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:740:1, line:745:1>
  (IfStmt 0x8fafa80 <line:741:3, line:744:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x8faf978 <line:741:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8faf958 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8faf948 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faf92c <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8fafa48 <line:742:5, col:49>
      (CallExpr 0x8fafa18 <<scratch space>:112:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:49> 'int'
        (ImplicitCastExpr 0x8fafa08 <<scratch space>:112:1> 'typeof (pthread_mutex_lock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faf9d4 <col:1> 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x8dc6f10 '__gthrw_pthread_mutex_lock' 'typeof (pthread_mutex_lock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x8fafa38 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:742:42> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x8faf9bc <col:42> '__gthread_mutex_t *' lvalue ParmVar 0x8faf830 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x8fafa70 <line:744:5, col:12>
      (IntegerLiteral 0x8fafa58 <col:12> 'int' 0))))


static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex) (CompoundStmt 0x8fafd60 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:749:1, line:754:1>
  (IfStmt 0x8fafd40 <line:750:3, line:753:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x8fafc38 <line:750:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8fafc18 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8fafc08 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fafbec <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8fafd08 <line:751:5, col:52>
      (CallExpr 0x8fafcd8 <<scratch space>:113:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:52> 'int'
        (ImplicitCastExpr 0x8fafcc8 <<scratch space>:113:1> 'typeof (pthread_mutex_trylock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fafc94 <col:1> 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x8dc8120 '__gthrw_pthread_mutex_trylock' 'typeof (pthread_mutex_trylock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x8fafcf8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:751:45> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x8fafc7c <col:45> '__gthread_mutex_t *' lvalue ParmVar 0x8fafaf0 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x8fafd30 <line:753:5, col:12>
      (IntegerLiteral 0x8fafd18 <col:12> 'int' 0))))


static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x8fb00f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:761:1, line:766:1>
  (IfStmt 0x8fb00d8 <line:762:3, line:765:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x8faff78 <line:762:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8faff58 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8faff48 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faff2c <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8fb00a0 <line:763:5, col:69>
      (CallExpr 0x8fb0058 <<scratch space>:114:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:69> 'int'
        (ImplicitCastExpr 0x8fb0048 <<scratch space>:114:1> 'typeof (pthread_mutex_timedlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8faffec <col:1> 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()' lvalue Function 0x8dc82f0 '__gthrw_pthread_mutex_timedlock' 'typeof (pthread_mutex_timedlock)':'int (pthread_mutex_t *restrict, const struct timespec *restrict) throw()'))
        (ImplicitCastExpr 0x8fb0080 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:763:47> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x8faffbc <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x8fafd90 '__mutex' '__gthread_mutex_t *'))
        (ImplicitCastExpr 0x8fb0090 <col:56> 'const __gthread_time_t *' <LValueToRValue>
          (DeclRefExpr 0x8faffd4 <col:56> 'const __gthread_time_t *' lvalue ParmVar 0x8fafe10 '__abs_timeout' 'const __gthread_time_t *'))))
    (ReturnStmt 0x8fb00c8 <line:765:5, col:12>
      (IntegerLiteral 0x8fb00b0 <col:12> 'int' 0))))


static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex) (CompoundStmt 0x8fb0390 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:772:1, line:777:1>
  (IfStmt 0x8fb0370 <line:773:3, line:776:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x8fb0268 <line:773:7, col:27> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8fb0248 <col:7, col:27> 'int'
        (ImplicitCastExpr 0x8fb0238 <col:7> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb021c <col:7> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8fb0338 <line:774:5, col:51>
      (CallExpr 0x8fb0308 <<scratch space>:115:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:51> 'int'
        (ImplicitCastExpr 0x8fb02f8 <<scratch space>:115:1> 'typeof (pthread_mutex_unlock) *' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb02c4 <col:1> 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()' lvalue Function 0x8dc8520 '__gthrw_pthread_mutex_unlock' 'typeof (pthread_mutex_unlock)':'int (pthread_mutex_t *) throw()'))
        (ImplicitCastExpr 0x8fb0328 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:774:44> '__gthread_mutex_t *' <LValueToRValue>
          (DeclRefExpr 0x8fb02ac <col:44> '__gthread_mutex_t *' lvalue ParmVar 0x8fb0120 '__mutex' '__gthread_mutex_t *'))))
    (ReturnStmt 0x8fb0360 <line:776:5, col:12>
      (IntegerLiteral 0x8fb0348 <col:12> 'int' 0))))


static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x8fb05a8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:804:1, line:806:1>
  (ReturnStmt 0x8fb0598 <line:805:3, col:39>
    (CallExpr 0x8fb0568 <col:10, col:39> 'int'
      (ImplicitCastExpr 0x8fb0558 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb0524 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x8faf890 '__gthread_mutex_lock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x8fb0588 <col:32> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb050c <col:32> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb03f0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x8fb0750 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:810:1, line:812:1>
  (ReturnStmt 0x8fb0740 <line:811:3, col:42>
    (CallExpr 0x8fb0710 <col:10, col:42> 'int'
      (ImplicitCastExpr 0x8fb0700 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb06e4 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x8fafb50 '__gthread_mutex_trylock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x8fb0730 <col:35> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb06cc <col:35> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb05d0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x8fb09c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:819:1, line:821:1>
  (ReturnStmt 0x8fb09b0 <line:820:3, col:59>
    (CallExpr 0x8fb0968 <col:10, col:59> 'int'
      (ImplicitCastExpr 0x8fb0958 <col:10> 'int (*)(__gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb091c <col:10> 'int (__gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x8fafe90 '__gthread_mutex_timedlock' 'int (__gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x8fb0990 <col:37> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb08ec <col:37> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb0780 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x8fb09a0 <col:46> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb0904 <col:46> 'const __gthread_time_t *' lvalue ParmVar 0x8fb07d0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x8fb0b70 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:827:1, line:829:1>
  (ReturnStmt 0x8fb0b60 <line:828:3, col:41>
    (CallExpr 0x8fb0b30 <col:10, col:41> 'int'
      (ImplicitCastExpr 0x8fb0b20 <col:10> 'int (*)(__gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb0b04 <col:10> 'int (__gthread_mutex_t *)' lvalue Function 0x8fb0180 '__gthread_mutex_unlock' 'int (__gthread_mutex_t *)'))
      (ImplicitCastExpr 0x8fb0b50 <col:34> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb0aec <col:34> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb09f0 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond) (CompoundStmt 0x8fb0da8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:833:1, line:835:1>
  (ReturnStmt 0x8fb0d98 <line:834:3, col:50>
    (CallExpr 0x8fb0d68 <<scratch space>:116:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:50> 'int'
      (ImplicitCastExpr 0x8fb0d58 <<scratch space>:116:1> 'typeof (pthread_cond_broadcast) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb0d04 <col:1> 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()' lvalue Function 0x8dc8aa0 '__gthrw_pthread_cond_broadcast' 'typeof (pthread_cond_broadcast)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x8fb0d88 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:834:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb0cec <col:44> '__gthread_cond_t *' lvalue ParmVar 0x8fb0bd0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_signal(__gthread_cond_t *__cond) (CompoundStmt 0x8fb0f68 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:839:1, line:841:1>
  (ReturnStmt 0x8fb0f58 <line:840:3, col:47>
    (CallExpr 0x8fb0f28 <<scratch space>:117:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:47> 'int'
      (ImplicitCastExpr 0x8fb0f18 <<scratch space>:117:1> 'typeof (pthread_cond_signal) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb0ee4 <col:1> 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()' lvalue Function 0x8dc8c40 '__gthrw_pthread_cond_signal' 'typeof (pthread_cond_signal)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x8fb0f48 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:840:41> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb0ecc <col:41> '__gthread_cond_t *' lvalue ParmVar 0x8fb0dd0 '__cond' '__gthread_cond_t *')))))


static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex) (CompoundStmt 0x8fb11f0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:845:1, line:847:1>
  (ReturnStmt 0x8fb11e0 <line:846:3, col:54>
    (CallExpr 0x8fb1198 <<scratch space>:118:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:54> 'int'
      (ImplicitCastExpr 0x8fb1188 <<scratch space>:118:1> 'typeof (pthread_cond_wait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb112c <col:1> 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' lvalue Function 0x8dc8e20 '__gthrw_pthread_cond_wait' 'typeof (pthread_cond_wait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)'))
      (ImplicitCastExpr 0x8fb11c0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:846:39> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb10fc <col:39> '__gthread_cond_t *' lvalue ParmVar 0x8fb0f90 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x8fb11d0 <col:47> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb1114 <col:47> '__gthread_mutex_t *' lvalue ParmVar 0x8fb0fe0 '__mutex' '__gthread_mutex_t *')))))


static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x8fb1510 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:852:1, line:854:1>
  (ReturnStmt 0x8fb1500 <line:853:3, col:74>
    (CallExpr 0x8fb14a8 <<scratch space>:119:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:74> 'int'
      (ImplicitCastExpr 0x8fb1498 <<scratch space>:119:1> 'typeof (pthread_cond_timedwait) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb143c <col:1> 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' lvalue Function 0x8dc9010 '__gthrw_pthread_cond_timedwait' 'typeof (pthread_cond_timedwait)':'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)'))
      (ImplicitCastExpr 0x8fb14d0 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:853:44> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb13f4 <col:44> '__gthread_cond_t *' lvalue ParmVar 0x8fb1220 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x8fb14e0 <col:52> '__gthread_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb140c <col:52> '__gthread_mutex_t *' lvalue ParmVar 0x8fb1270 '__mutex' '__gthread_mutex_t *'))
      (ImplicitCastExpr 0x8fb14f0 <col:61> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb1424 <col:61> 'const __gthread_time_t *' lvalue ParmVar 0x8fb12c0 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex) (CompoundStmt 0x8fb1780 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:859:1, line:861:1>
  (ReturnStmt 0x8fb1770 <line:860:3, col:46>
    (CallExpr 0x8fb1728 <col:10, col:46> 'int'
      (ImplicitCastExpr 0x8fb1718 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb16dc <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *)' lvalue Function 0x8fb1060 '__gthread_cond_wait' 'int (__gthread_cond_t *, __gthread_mutex_t *)'))
      (ImplicitCastExpr 0x8fb1750 <col:31> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb16ac <col:31> '__gthread_cond_t *' lvalue ParmVar 0x8fb1540 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x8fb1760 <col:39> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb16c4 <col:39> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb1590 '__mutex' '__gthread_recursive_mutex_t *')))))


static inline int __gthread_cond_timedwait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *__mutex, const __gthread_time_t *__abs_timeout) (CompoundStmt 0x8fb1a80 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:867:1, line:869:1>
  (ReturnStmt 0x8fb1a70 <line:868:3, col:66>
    (CallExpr 0x8fb1a18 <col:10, col:66> 'int'
      (ImplicitCastExpr 0x8fb1a08 <col:10> 'int (*)(__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb19cc <col:10> 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)' lvalue Function 0x8fb1350 '__gthread_cond_timedwait' 'int (__gthread_cond_t *, __gthread_mutex_t *, const __gthread_time_t *)'))
      (ImplicitCastExpr 0x8fb1a40 <col:36> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb1984 <col:36> '__gthread_cond_t *' lvalue ParmVar 0x8fb17b0 '__cond' '__gthread_cond_t *'))
      (ImplicitCastExpr 0x8fb1a50 <col:44> '__gthread_recursive_mutex_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb199c <col:44> '__gthread_recursive_mutex_t *' lvalue ParmVar 0x8fb1800 '__mutex' '__gthread_recursive_mutex_t *'))
      (ImplicitCastExpr 0x8fb1a60 <col:53> 'const __gthread_time_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb19b4 <col:53> 'const __gthread_time_t *' lvalue ParmVar 0x8fb1850 '__abs_timeout' 'const __gthread_time_t *')))))


static inline int __gthread_cond_destroy(__gthread_cond_t *__cond) (CompoundStmt 0x8fb36f8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:873:1, line:875:1>
  (ReturnStmt 0x8fb36e8 <line:874:3, col:48>
    (CallExpr 0x8fb36b8 <<scratch space>:120:1, /usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:48> 'int'
      (ImplicitCastExpr 0x8fb36a8 <<scratch space>:120:1> 'typeof (pthread_cond_destroy) *' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb3674 <col:1> 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()' lvalue Function 0x8dc9260 '__gthrw_pthread_cond_destroy' 'typeof (pthread_cond_destroy)':'int (pthread_cond_t *) throw()'))
      (ImplicitCastExpr 0x8fb36d8 </usr/include/c++/4.6//i686-linux-gnu/bits/gthr-default.h:874:42> '__gthread_cond_t *' <LValueToRValue>
        (DeclRefExpr 0x8fb365c <col:42> '__gthread_cond_t *' lvalue ParmVar 0x8fb3560 '__cond' '__gthread_cond_t *')))))


typedef int _Atomic_word;
namespace __gnu_cxx {
    static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x8fb3c58 </usr/include/c++/4.6/ext/atomicity.h:48:3, col:48>
  (ReturnStmt 0x8fb3c48 <col:5, col:45>
    (CallExpr 0x8fb3a78 <col:12, col:45> '_Atomic_word':'int'
      (ImplicitCastExpr 0x8fb3c38 <col:12> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb3c04 <col:12> 'int (volatile int *, int, ...)' lvalue Function 0x8fb3ae0 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
      (ImplicitCastExpr 0x8fb3aa0 <col:33> 'volatile _Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x8fb3a14 <col:33> 'volatile _Atomic_word *' lvalue ParmVar 0x8fb3840 '__mem' 'volatile _Atomic_word *'))
      (ImplicitCastExpr 0x8fb3bf8 <col:40> 'int' <LValueToRValue>
        (DeclRefExpr 0x8fb3a2c <col:40> 'int' lvalue ParmVar 0x8fb3890 '__val' 'int')))))


    static inline void __atomic_add(volatile _Atomic_word *__mem, int __val) (CompoundStmt 0x8fb3fd0 </usr/include/c++/4.6/ext/atomicity.h:52:3, col:41>
  (CallExpr 0x8fb3e30 <col:5, col:38> '_Atomic_word':'int'
    (ImplicitCastExpr 0x8fb3fc0 <col:5> 'int (*)(volatile int *, int, ...)' <FunctionToPointerDecay>
      (DeclRefExpr 0x8fb3fa4 <col:5> 'int (volatile int *, int, ...)' lvalue Function 0x8fb3e80 '__sync_fetch_and_add_4' 'int (volatile int *, int, ...)'))
    (ImplicitCastExpr 0x8fb3e58 <col:26> 'volatile _Atomic_word *' <LValueToRValue>
      (DeclRefExpr 0x8fb3df0 <col:26> 'volatile _Atomic_word *' lvalue ParmVar 0x8fb3c80 '__mem' 'volatile _Atomic_word *'))
    (ImplicitCastExpr 0x8fb3f98 <col:33> 'int' <LValueToRValue>
      (DeclRefExpr 0x8fb3e08 <col:33> 'int' lvalue ParmVar 0x8fb3cd0 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x8fb42b8 </usr/include/c++/4.6/ext/atomicity.h:65:3, line:69:3>
  (DeclStmt 0x8fb41e8 <line:66:5, col:35>
    0x8fb4160 "_Atomic_word __result =
      (ImplicitCastExpr 0x8fb41d8 <col:29, col:30> '_Atomic_word':'int' <LValueToRValue>
        (UnaryOperator 0x8fb41c0 <col:29, col:30> '_Atomic_word':'int' lvalue prefix '*'
          (ImplicitCastExpr 0x8fb41b0 <col:30> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x8fb4194 <col:30> '_Atomic_word *' lvalue ParmVar 0x8fb4020 '__mem' '_Atomic_word *'))))")
  (CompoundAssignOperator 0x8fb4260 <line:67:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x8fb4220 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x8fb4210 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x8fb41f8 <col:6> '_Atomic_word *' lvalue ParmVar 0x8fb4020 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x8fb4250 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x8fb4234 <col:15> 'int' lvalue ParmVar 0x8fb4070 '__val' 'int')))
  (ReturnStmt 0x8fb42a8 <line:68:5, col:12>
    (ImplicitCastExpr 0x8fb4298 <col:12> '_Atomic_word':'int' <LValueToRValue>
      (DeclRefExpr 0x8fb4280 <col:12> '_Atomic_word':'int' lvalue Var 0x8fb4160 '__result' '_Atomic_word':'int'))))


    static inline void __atomic_add_single(_Atomic_word *__mem, int __val) (CompoundStmt 0x8fb44d0 </usr/include/c++/4.6/ext/atomicity.h:73:3, col:22>
  (CompoundAssignOperator 0x8fb44b0 <col:5, col:15> '_Atomic_word':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
    (UnaryOperator 0x8fb4470 <col:5, col:6> '_Atomic_word':'int' lvalue prefix '*'
      (ImplicitCastExpr 0x8fb4460 <col:6> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x8fb4448 <col:6> '_Atomic_word *' lvalue ParmVar 0x8fb42f0 '__mem' '_Atomic_word *')))
    (ImplicitCastExpr 0x8fb44a0 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x8fb4484 <col:15> 'int' lvalue ParmVar 0x8fb4340 '__val' 'int'))))


    static inline _Atomic_word __exchange_and_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x8fb4960 </usr/include/c++/4.6/ext/atomicity.h:78:3, line:87:3>
  (IfStmt 0x8fb4940 <line:80:5, line:83:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x8fb46d8 <line:80:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8fb46b8 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x8fb46a8 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb468c <col:9> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (ReturnStmt 0x8fb4810 <line:81:7, col:45>
      (CallExpr 0x8fb47b8 <col:14, col:45> '_Atomic_word':'int'
        (ImplicitCastExpr 0x8fb47a8 <col:14> '_Atomic_word (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb474c <col:14> '_Atomic_word (volatile _Atomic_word *, int)' lvalue Function 0x8fb3910 '__exchange_and_add' '_Atomic_word (volatile _Atomic_word *, int)'))
        (ImplicitCastExpr 0x8fb47f0 <col:33> 'volatile _Atomic_word *' <NoOp>
          (ImplicitCastExpr 0x8fb47e0 <col:33> '_Atomic_word *' <LValueToRValue>
            (DeclRefExpr 0x8fb471c <col:33> '_Atomic_word *' lvalue ParmVar 0x8fb4500 '__mem' '_Atomic_word *')))
        (ImplicitCastExpr 0x8fb4800 <col:40> 'int' <LValueToRValue>
          (DeclRefExpr 0x8fb4734 <col:40> 'int' lvalue ParmVar 0x8fb4550 '__val' 'int'))))
    (ReturnStmt 0x8fb4930 <line:83:7, col:52>
      (CallExpr 0x8fb48e8 <col:14, col:52> '_Atomic_word':'int'
        (ImplicitCastExpr 0x8fb48d8 <col:14> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb4884 <col:14> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb40f0 '__exchange_and_add_single' '_Atomic_word (_Atomic_word *, int)'))
        (ImplicitCastExpr 0x8fb4910 <col:40> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x8fb4854 <col:40> '_Atomic_word *' lvalue ParmVar 0x8fb4500 '__mem' '_Atomic_word *'))
        (ImplicitCastExpr 0x8fb4920 <col:47> 'int' <LValueToRValue>
          (DeclRefExpr 0x8fb486c <col:47> 'int' lvalue ParmVar 0x8fb4550 '__val' 'int'))))))


    static inline void __atomic_add_dispatch(_Atomic_word *__mem, int __val) (CompoundStmt 0x8fb4dd0 </usr/include/c++/4.6/ext/atomicity.h:92:3, line:101:3>
  (IfStmt 0x8fb4db0 <line:94:5, line:97:39>
    <<<NULL>>>
    (ImplicitCastExpr 0x8fb4b68 <line:94:9, col:28> '_Bool' <IntegralToBoolean>
      (CallExpr 0x8fb4b48 <col:9, col:28> 'int'
        (ImplicitCastExpr 0x8fb4b38 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fb4b1c <col:9> 'int (void)' lvalue Function 0x8dc9d10 '__gthread_active_p' 'int (void)'))))
    (CallExpr 0x8fb4c48 <line:95:7, col:32> 'void'
      (ImplicitCastExpr 0x8fb4c38 <col:7> 'void (*)(volatile _Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb4bdc <col:7> 'void (volatile _Atomic_word *, int)' lvalue Function 0x8fb3d70 '__atomic_add' 'void (volatile _Atomic_word *, int)'))
      (ImplicitCastExpr 0x8fb4c80 <col:20> 'volatile _Atomic_word *' <NoOp>
        (ImplicitCastExpr 0x8fb4c70 <col:20> '_Atomic_word *' <LValueToRValue>
          (DeclRefExpr 0x8fb4bac <col:20> '_Atomic_word *' lvalue ParmVar 0x8fb4990 '__mem' '_Atomic_word *')))
      (ImplicitCastExpr 0x8fb4c90 <col:27> 'int' <LValueToRValue>
        (DeclRefExpr 0x8fb4bc4 <col:27> 'int' lvalue ParmVar 0x8fb49e0 '__val' 'int')))
    (CallExpr 0x8fb4d68 <line:97:7, col:39> 'void'
      (ImplicitCastExpr 0x8fb4d58 <col:7> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fb4d04 <col:7> 'void (_Atomic_word *, int)' lvalue Function 0x8fb43e0 '__atomic_add_single' 'void (_Atomic_word *, int)'))
      (ImplicitCastExpr 0x8fb4d90 <col:27> '_Atomic_word *' <LValueToRValue>
        (DeclRefExpr 0x8fb4cd4 <col:27> '_Atomic_word *' lvalue ParmVar 0x8fb4990 '__mem' '_Atomic_word *'))
      (ImplicitCastExpr 0x8fb4da0 <col:34> 'int' <LValueToRValue>
        (DeclRefExpr 0x8fb4cec <col:34> 'int' lvalue ParmVar 0x8fb49e0 '__val' 'int')))))


}
extern void __sync_fetch_and_add();
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
extern int __sync_fetch_and_add_4(volatile int *, int, ...);
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x92fe8e8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x92fe748 <line:180:4, col:62>
    0x92fe570 "void *__p =
      (CXXReinterpretCastExpr 0x92fe730 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x92fe718 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x92fe6c0 <col:41> 'size_type []' lvalue Var 0x907a460 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x92fe8d8 <line:181:4, col:39>
    (UnaryOperator 0x92fe8c0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x92fe8a8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x92fe898 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x92fe87c <col:36> 'void *' lvalue Var 0x92fe570 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x92fe550 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x92fe530 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x92fb980 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x92fb938 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x92fb928 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fdc67c <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x92fb960 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x92fb910 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x92fb770 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x92fb8f8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x92fb8d8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x92fb8c8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92fb890 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x907a5e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x92fb970 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x8fdc768 <col:50> '_Bool' false))))
    (CompoundStmt 0x92fe518 <line:236:6, line:245:6>
      (NullStmt 0x8fdc7a0 <line:238:67>)
      (IfStmt 0x92fbc20 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x92fba78 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x92fba50 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x92fba40 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8fdc7d0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x92fba28 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x92fba08 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9079c30
                (ImplicitCastExpr 0x92fb9f8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x92fb9d0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x8fdc868 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x8fdc850 <col:10> 'int' 1)))
          (IntegerLiteral 0x8fdc8a8 <col:16> 'int' 0))
        (CompoundStmt 0x92fbc08 <line:241:3, line:244:3>
          (NullStmt 0x8fdc928 <line:242:63>)
          (CXXMemberCallExpr 0x92fbbe8 <line:243:5, col:19> 'void'
            (MemberExpr 0x92fbbb0 <col:5> '<bound member function type>' ->_M_destroy 0x907b290
              (CXXThisExpr 0x92fba90 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x92fbbd0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x907b170 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x92faed0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x90575b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x90575a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x92fb710 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92fb700 <col:9, col:29>
    (ImplicitCastExpr 0x92fb6f0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x92fb6d0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9057b40
        (MemberExpr 0x92fb6b0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
          (CXXThisExpr 0x92fb590 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x92fb578 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92fb568 <col:9, col:59>
    (UnaryOperator 0x92fb550 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x92fb538 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92fb520 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x92fb508 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x92fb4f0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92fb4d0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x92fb4b0 <col:44> '<bound member function type>' ->_M_data 0x9057bf0
                  (CXXThisExpr 0x92fb4a0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x92fae20 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x92fae00 <col:9, col:51> 'void'
    (CXXTemporary 0x92fad80)
    (CXXMemberCallExpr 0x92fad98 <col:9, col:51> 'void'
      (MemberExpr 0x92facfc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x907b1c0
        (CXXMemberCallExpr 0x92facd0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x92facb0 <col:9> '<bound member function type>' ->_M_rep 0x9057ee0
            (ImplicitCastExpr 0x92facf0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x92fab90 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x92fadf0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x92fade0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x92fad88 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x92fad80)
            (CXXMemberCallExpr 0x92fad50 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x92fad30 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9071a00
                (ImplicitCastExpr 0x92fad70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x92fad20 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9300230 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9300220 <col:9, col:26>
    (ImplicitCastExpr 0x9300210 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x93001f0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9079ab0
        (ImplicitCastExpr 0x93001e0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x93001c0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x93001a0 <col:16> '<bound member function type>' ->_M_rep 0x9057ee0
              (CXXThisExpr 0x9300080 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9300068 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9300058 <col:9, col:32>
    (BinaryOperator 0x9300040 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9300010 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92ffff0 <col:16, col:22> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x92fffe0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9300030 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x93008d0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9300358 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9300300 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x93002f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9300284 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x93002d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x93002b0 <col:13, col:19> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x93002a0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9300328 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9300318 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9300348 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x93008c0 <line:859:2, col:22>
    (ImplicitCastExpr 0x93008b0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9300898 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9300850 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9300830 <col:9> '<bound member function type>' ->_M_data 0x9057bf0
            (CXXThisExpr 0x9300820 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9300888 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x930086c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9300e00 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9300df0 <col:9, col:24>
    (ImplicitCastExpr 0x9300de0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9300dc0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9300da0 <col:16> '<bound member function type>' ->_M_data 0x9057bf0
          (CXXThisExpr 0x9300d90 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x92feac0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x92feab0 <col:9, col:16>
    (CXXConstructExpr 0x92fea88 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x92fea78 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x92fea68 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x92fea20 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
            (CXXThisExpr 0x92fe900 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9031fa8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9031f98 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x92ff8e0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92ff8d0 <col:9, col:29>
    (ImplicitCastExpr 0x92ff8c0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x92ff8a0 <col:17, col:29> 'char *' lvalue ._M_p 0x9032530
        (MemberExpr 0x92ff880 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9032560
          (CXXThisExpr 0x92ff760 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x92ff748 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92ff738 <col:9, col:59>
    (UnaryOperator 0x92ff720 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x92ff708 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92ff6f0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x92ff6d8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x92ff6c0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92ff6a0 <col:44, col:52> 'char *'
                (MemberExpr 0x92ff680 <col:44> '<bound member function type>' ->_M_data 0x90325e0
                  (CXXThisExpr 0x92ff670 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x92ff098 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x92ff088 <col:9, col:26>
    (ImplicitCastExpr 0x92ff078 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x92ff058 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x90524f0
        (ImplicitCastExpr 0x92ff048 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x92ff010 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x92feff0 <col:16> '<bound member function type>' ->_M_rep 0x90328b0
              (CXXThisExpr 0x92feec8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x92feeb0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x92feea0 <col:9, col:32>
    (BinaryOperator 0x92fee88 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x92fee58 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92fee38 <col:16, col:22> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92fee28 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x92fee78 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x92fff80 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x92ffa08 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x92ff9b0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x92ff9a0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x92ff934 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x92ff980 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x92ff960 <col:13, col:19> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92ff950 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x92ff9d8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x92ff9c8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92ff9f8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x92fff70 <line:859:2, col:22>
    (ImplicitCastExpr 0x92fff60 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x92fff48 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x92fff00 <col:9, col:17> 'char *'
          (MemberExpr 0x92ffee0 <col:9> '<bound member function type>' ->_M_data 0x90325e0
            (CXXThisExpr 0x92ffed0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x92fff38 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92fff1c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_string {
        class basic_string;
        typedef typename _Alloc::_Alloc::rebind<_CharT>::other _CharT_alloc_type;
    public:
    public:
        typedef _Traits traits_type;
        typedef typename _Traits::char_type value_type;
        typedef _Alloc allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string::_Rep_base {
            struct _Rep;
            typedef typename _Alloc::_Alloc::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const _CharT _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x8fdbb28 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x8fdbab0 <line:180:4, col:62>
    0x8fdba20 "void *__p =
      (CXXReinterpretCastExpr 0x8fdba98 <col:16, col:61> 'void *' reinterpret_cast<void *> <Dependent>
        (UnaryOperator 0x8fdba70 <col:40, col:41> '<dependent type>' prefix '&'
          (DeclRefExpr 0x8fdba54 <col:41> 'size_type []' lvalue Var 0x8fbb2b0 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x8fdbb18 <line:181:4, col:39>
    (UnaryOperator 0x8fdbb00 <col:11, col:39> '<dependent type>' prefix '*'
      (CXXReinterpretCastExpr 0x8fdbae8 <col:12, col:39> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
        (DeclRefExpr 0x8fdbac0 <col:36> 'void *' lvalue Var 0x8fdba20 '__p' 'void *')))))


            bool _M_is_leaked() const (CompoundStmt 0x8fdbc30 </usr/include/c++/4.6/bits/basic_string.h:186:9, col:41>
  (ReturnStmt 0x8fdbc20 <col:11, col:38>
    (CXXOperatorCallExpr 0x8fdbbf8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdbbb8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
      (CXXDependentScopeMemberExpr 0x8fdbb68 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x8fdbb58 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x8fdbba0 <col:38> 'int' 0))))


            bool _M_is_shared() const (CompoundStmt 0x8fdbd20 </usr/include/c++/4.6/bits/basic_string.h:190:9, col:41>
  (ReturnStmt 0x8fdbd10 <col:11, col:38>
    (CXXOperatorCallExpr 0x8fdbce8 <col:18, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdbca8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (CXXDependentScopeMemberExpr 0x8fdbc58 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x8fdbc48 <col:18> 'const struct std::basic_string::_Rep *' this))
      (IntegerLiteral 0x8fdbc90 <col:38> 'int' 0))))


            void _M_set_leaked() (CompoundStmt 0x8fdbdc8 </usr/include/c++/4.6/bits/basic_string.h:194:9, col:35>
  (BinaryOperator 0x8fdbdb0 <col:11, col:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x8fdbd48 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x8fdbd38 <col:11> 'struct std::basic_string::_Rep *' this))
    (UnaryOperator 0x8fdbd98 <col:31, col:32> 'int' prefix '-'
      (IntegerLiteral 0x8fdbd80 <col:32> 'int' 1))))


            void _M_set_sharable() (CompoundStmt 0x8fdbe58 </usr/include/c++/4.6/bits/basic_string.h:198:9, col:34>
  (BinaryOperator 0x8fdbe40 <col:11, col:31> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x8fdbdf0 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x8fdbde0 <col:11> 'struct std::basic_string::_Rep *' this))
    (IntegerLiteral 0x8fdbe28 <col:31> 'int' 0)))


            void _M_set_length_and_sharable(size_type __n) (CompoundStmt 0x8fdc358 </usr/include/c++/4.6/bits/basic_string.h:202:2, line:213:2>
  (IfStmt 0x8fdc338 <line:204:4, line:212:6>
    <<<NULL>>>
    (CallExpr 0x8fdc0b8 <line:204:8, col:55> '<dependent type>'
      (DeclRefExpr 0x8fdbfc0 <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8fdc080 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdc038 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0)
        (CXXThisExpr 0x8fdbfd8 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x8fdc020 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x8fdc000 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x8fdbfe8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbb340 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x8fdc0a8 <col:50> '_Bool' false))
    (CompoundStmt 0x8fdc318 <line:206:6, line:212:6>
      (CallExpr 0x8fdc128 <line:207:8, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fdc0f0 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x8fdc0e0 <col:8> 'struct std::basic_string::_Rep *' this)))
      (BinaryOperator 0x8fdc1a8 <line:208:8, col:26> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x8fdc158 <col:8, col:14> '<dependent type>' lvalue
          (CXXThisExpr 0x8fdc148 <col:8> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x8fdc18c <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbb5c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x8fdc2f0 <line:209:8, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fdc208 <col:8, col:21> '<dependent type>' lvalue)
        (ArraySubscriptExpr 0x8fdc2c0 <col:28, col:50> '<dependent type>' lvalue
          (CallExpr 0x8fdc288 <col:28, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8fdc250 <col:28, col:34> '<dependent type>' lvalue
              (CXXThisExpr 0x8fdc240 <col:28> 'struct std::basic_string::_Rep *' this)))
          (DeclRefExpr 0x8fdc2a4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbb5c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x8fdc2d4 <col:53> 'const _CharT' lvalue Var 0x8fbb220 '_S_terminal' 'const _CharT')))
    <<<NULL>>>))


            _CharT *_M_refdata() throw() (CompoundStmt 0x8fdc430 </usr/include/c++/4.6/bits/basic_string.h:217:2, col:48>
  (ReturnStmt 0x8fdc420 <col:4, col:45>
    (CXXReinterpretCastExpr 0x8fdc408 <col:11, col:45> '_CharT *' reinterpret_cast<_CharT *> <Dependent>
      (CXXOperatorCallExpr 0x8fdc3d0 <col:37, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdc398 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CXXThisExpr 0x8fdc370 <col:37> 'struct std::basic_string::_Rep *' this)
        (IntegerLiteral 0x8fdc380 <col:44> 'int' 1)))))


            _CharT *_M_grab(const _Alloc &__alloc1, const _Alloc &__alloc2) (CompoundStmt 0x8fdc668 </usr/include/c++/4.6/bits/basic_string.h:221:2, line:224:2>
  (ReturnStmt 0x8fdc658 <line:222:4, line:223:46>
    (ConditionalOperator 0x8fdc638 <line:222:11, line:223:46> '<dependent type>'
      (ParenExpr 0x8fdc568 <line:222:11, col:51> '<dependent type>'
        (BinaryOperator 0x8fdc550 <col:12, col:43> '<dependent type>' '&&'
          (UnaryOperator 0x8fdc498 <col:12, col:26> '<dependent type>' prefix '!'
            (CallExpr 0x8fdc478 <col:13, col:26> '<dependent type>'
              (MemberExpr 0x8fdc458 <col:13> '<bound member function type>' ->_M_is_leaked 0x8fbb3d0
                (CXXThisExpr 0x8fdc448 <col:13> 'struct std::basic_string::_Rep *' this))))
          (CXXOperatorCallExpr 0x8fdc528 <col:31, col:43> '<dependent type>'
            (UnresolvedLookupExpr 0x8fdc4e0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
            (DeclRefExpr 0x8fdc4ac <col:31> 'const _Alloc' lvalue ParmVar 0x8fbb7d0 '__alloc1' 'const _Alloc &')
            (DeclRefExpr 0x8fdc4c4 <col:43> 'const _Alloc' lvalue ParmVar 0x8fbb820 '__alloc2' 'const _Alloc &'))))
      (CallExpr 0x8fdc5b0 <line:223:14, col:25> '<dependent type>'
        (MemberExpr 0x8fdc590 <col:14> '<bound member function type>' ->_M_refcopy 0x8fbbd40
          (CXXThisExpr 0x8fdc580 <col:14> 'struct std::basic_string::_Rep *' this)))
      (CallExpr 0x8fdc618 <col:29, col:46> '<dependent type>'
        (MemberExpr 0x8fdc5e0 <col:29> '<bound member function type>' ->_M_clone 0x8fbbe90
          (CXXThisExpr 0x8fdc5d0 <col:29> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x8fdc600 <col:38> 'const _Alloc' lvalue ParmVar 0x8fbb7d0 '__alloc1' 'const _Alloc &')))))


            static std::basic_string::_Rep *_S_create(size_type, size_type, const _Alloc &);
            void _M_dispose(const _Alloc &__a) (CompoundStmt 0x8fdca10 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x8fdc9f0 <line:234:4, line:245:6>
    <<<NULL>>>
    (CallExpr 0x8fdc778 <line:234:8, col:55> '<dependent type>'
      (DeclRefExpr 0x8fdc67c <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8fdc740 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdc6f8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0)
        (CXXThisExpr 0x8fdc698 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x8fdc6e0 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x8fdc6c0 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x8fdc6a8 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbb340 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x8fdc768 <col:50> '_Bool' false))
    (CompoundStmt 0x8fdc9d8 <line:236:6, line:245:6>
      (NullStmt 0x8fdc7a0 <line:238:67>)
      (IfStmt 0x8fdc9b8 <line:239:8, line:244:3>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x8fdc900 <line:239:12, line:240:16> '<dependent type>'
          (UnresolvedLookupExpr 0x8fdc8c0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0)
          (CallExpr 0x8fdc880 <line:239:12, line:240:11> '<dependent type>'
            (DeclRefExpr 0x8fdc7d0 <line:239:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)')
            (UnaryOperator 0x8fdc838 <col:51, col:58> '<dependent type>' prefix '&'
              (CXXDependentScopeMemberExpr 0x8fdc800 <col:52, col:58> '<dependent type>' lvalue
                (CXXThisExpr 0x8fdc7f0 <col:52> 'struct std::basic_string::_Rep *' this)))
            (UnaryOperator 0x8fdc868 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x8fdc850 <col:10> 'int' 1)))
          (IntegerLiteral 0x8fdc8a8 <col:16> 'int' 0))
        (CompoundStmt 0x8fdc9a0 <line:241:3, line:244:3>
          (NullStmt 0x8fdc928 <line:242:63>)
          (CallExpr 0x8fdc980 <line:243:5, col:19> '<dependent type>'
            (MemberExpr 0x8fdc948 <col:5> '<bound member function type>' ->_M_destroy 0x8fbbcc0
              (CXXThisExpr 0x8fdc938 <col:5> 'struct std::basic_string::_Rep *' this))
            (DeclRefExpr 0x8fdc968 <col:16> 'const _Alloc' lvalue ParmVar 0x8fbbb20 '__a' 'const _Alloc &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const _Alloc &) throw();
            _CharT *_M_refcopy() throw() (CompoundStmt 0x8fdcca8 </usr/include/c++/4.6/bits/basic_string.h:253:2, line:259:2>
  (IfStmt 0x8fdcc28 <line:255:4, line:257:67>
    <<<NULL>>>
    (CallExpr 0x8fdcb20 <line:255:8, col:55> '<dependent type>'
      (DeclRefExpr 0x8fdca24 <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8fdcae8 <col:25, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdcaa0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0)
        (CXXThisExpr 0x8fdca40 <col:25> 'struct std::basic_string::_Rep *' this)
        (UnaryOperator 0x8fdca88 <col:33, col:47> '<dependent type>' prefix '&'
          (CallExpr 0x8fdca68 <col:34, col:47> '<dependent type>'
            (DeclRefExpr 0x8fdca50 <col:34> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbb340 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
      (CXXBoolLiteralExpr 0x8fdcb10 <col:50> '_Bool' false))
    (CallExpr 0x8fdcc00 <line:257:13, col:67> '<dependent type>'
      (DeclRefExpr 0x8fdcb68 <col:13, col:24> 'void (_Atomic_word *, int)' lvalue Function 0x8fb4a40 '__atomic_add_dispatch' 'void (_Atomic_word *, int)')
      (UnaryOperator 0x8fdcbd0 <col:46, col:53> '<dependent type>' prefix '&'
        (CXXDependentScopeMemberExpr 0x8fdcb98 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x8fdcb88 <col:47> 'struct std::basic_string::_Rep *' this)))
      (IntegerLiteral 0x8fdcbe8 <col:66> 'int' 1))
    <<<NULL>>>)
  (ReturnStmt 0x8fdcc98 <line:258:4, col:22>
    (CallExpr 0x8fdcc78 <col:11, col:22> '<dependent type>'
      (MemberExpr 0x8fdcc58 <col:11> '<bound member function type>' ->_M_refdata 0x8fbb740
        (CXXThisExpr 0x8fdcc48 <col:11> 'struct std::basic_string::_Rep *' this)))))


            _CharT *_M_clone(const _Alloc &, size_type __res = (IntegerLiteral 0x8fdb710 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
);
        };
        struct _Alloc_hider :  _Alloc {
            struct _Alloc_hider;
            _Alloc_hider(_CharT *__dat, const _Alloc &__a) : _Alloc((DeclRefExpr 0x8fdccc0 </usr/include/c++/4.6/bits/basic_string.h:269:11> 'const _Alloc' lvalue ParmVar 0x8fbc0c0 '__a' 'const _Alloc &')
), _M_p((DeclRefExpr 0x8fdcd18 </usr/include/c++/4.6/bits/basic_string.h:269:22> '_CharT *' lvalue ParmVar 0x8fbc070 '__dat' '_CharT *')
) (CompoundStmt 0x8fdcd70 </usr/include/c++/4.6/bits/basic_string.h:269:29, col:31>)


            _CharT *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x8fbd990 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
  (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
    (IntegerLiteral 0x8fbd958 <col:61> 'int' 1)))
;
    private:
    private:
        mutable std::basic_string::_Alloc_hider _M_dataplus;
        _CharT *_M_data() const (CompoundStmt 0x8fdce30 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x8fdce20 <col:9, col:29>
    (CXXDependentScopeMemberExpr 0x8fdcde8 <col:17, col:29> '<dependent type>' lvalue
      (MemberExpr 0x8fdcdc4 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x8fbda00
        (CXXThisExpr 0x8fdcd98 <col:17> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))


        _CharT *_M_data(_CharT *__p) (CompoundStmt 0x8fdcf08 </usr/include/c++/4.6/bits/basic_string.h:291:7, col:42>
  (ReturnStmt 0x8fdcef8 <col:9, col:39>
    (ParenExpr 0x8fdcee0 <col:16, col:39> '<dependent type>'
      (BinaryOperator 0x8fdcec8 <col:17, col:36> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x8fdce78 <col:17, col:29> '<dependent type>' lvalue
          (MemberExpr 0x8fdce58 <col:17> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x8fbda00
            (CXXThisExpr 0x8fdce48 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x8fdceac <col:36> '_CharT *' lvalue ParmVar 0x8fbdaf0 '__p' '_CharT *')))))


        std::basic_string::_Rep *_M_rep() const (CompoundStmt 0x8fdd058 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x8fdd048 <col:9, col:59>
    (UnaryOperator 0x8fdd030 <col:16, col:59> '<dependent type>' prefix '&'
      (ParenExpr 0x8fdd018 <col:17, col:59> '<dependent type>' lvalue
        (ArraySubscriptExpr 0x8fdd000 <col:18, col:58> '<dependent type>' lvalue
          (ParenExpr 0x8fdcfb8 <col:18, col:54> 'struct std::basic_string::_Rep *'
            (CXXReinterpretCastExpr 0x8fdcfa0 <col:19, col:53> 'struct std::basic_string::_Rep *' reinterpret_cast<struct std::basic_string::_Rep *> <Dependent>
              (CallExpr 0x8fdcf70 <col:44, col:52> '<dependent type>'
                (UnresolvedMemberExpr 0x8fdcf30 <col:44> '<bound member function type>' lvalue))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const (CompoundStmt 0x8fde2f8 </usr/include/c++/4.6/bits/basic_string.h:301:7, col:37>
  (ReturnStmt 0x8fde2e8 <col:9, col:34>
    (CXXUnresolvedConstructExpr 0x8fde2c8 <col:16, col:34> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x8fde2a8 <col:25, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x8fdd088 <col:25> '<bound member function type>' lvalue)))))


        iterator _M_iend() const (CompoundStmt 0x8fde480 </usr/include/c++/4.6/bits/basic_string.h:305:7, col:52>
  (ReturnStmt 0x8fde470 <col:9, col:49>
    (CXXUnresolvedConstructExpr 0x8fde450 <col:16, col:49> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x8fde428 <col:25, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x8fde3f0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fde368 <col:25, col:33> '<dependent type>'
          (UnresolvedMemberExpr 0x8fde328 <col:25> '<bound member function type>' lvalue))
        (CallExpr 0x8fde3d0 <col:37, col:48> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fde398 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x8fde388 <col:37> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        void _M_leak() (CompoundStmt 0x8fde5c8 </usr/include/c++/4.6/bits/basic_string.h:309:7, line:312:7>
  (IfStmt 0x8fde5a8 <line:310:2, line:311:17>
    <<<NULL>>>
    (UnaryOperator 0x8fde540 <line:310:6, col:30> '<dependent type>' prefix '!'
      (CallExpr 0x8fde520 <col:7, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fde4e8 <col:7, col:17> '<dependent type>' lvalue
          (CallExpr 0x8fde4c8 <col:7, col:14> '<dependent type>'
            (MemberExpr 0x8fde4a8 <col:7> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x8fde498 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x8fde588 <line:311:4, col:17> '<dependent type>'
      (MemberExpr 0x8fde568 <col:4> '<bound member function type>' ->_M_leak_hard 0x8fbf5d0
        (CXXThisExpr 0x8fde558 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    <<<NULL>>>))


        size_type _M_check(size_type __pos, const char *__s) const (CompoundStmt 0x8fde7f0 </usr/include/c++/4.6/bits/basic_string.h:316:7, line:320:7>
  (IfStmt 0x8fde7a8 <line:317:2, line:318:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fde6a0 <line:317:6, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x8fde660 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8fde5dc <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbde50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fde640 <col:14, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fde608 <col:14, col:20> '<dependent type>' lvalue
          (CXXThisExpr 0x8fde5f8 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x8fde778 <line:318:4, col:33> 'void'
      (ImplicitCastExpr 0x8fde768 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fde72c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x8fde798 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x8fde718 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x8fde6fc </usr/include/c++/4.6/bits/basic_string.h:318:29> 'const char *' lvalue ParmVar 0x8fbdea0 '__s' 'const char *'))))
    <<<NULL>>>)
  (ReturnStmt 0x8fde7e0 <line:319:2, col:9>
    (DeclRefExpr 0x8fde7c4 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbde50 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))


        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const (CompoundStmt 0x8fdeb28 </usr/include/c++/4.6/bits/basic_string.h:324:7, line:327:7>
  (IfStmt 0x8fdeb08 <line:325:2, line:326:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fdea20 <line:325:6, col:49> '<dependent type>'
      (UnresolvedLookupExpr 0x8fde9e0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
      (CXXOperatorCallExpr 0x8fde9a0 <col:6, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x8fde968 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CallExpr 0x8fde850 <col:6, col:21> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fde818 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x8fde808 <col:6> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (ParenExpr 0x8fde950 <col:25, col:45> '<dependent type>'
          (CXXOperatorCallExpr 0x8fde928 <col:26, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x8fde8f0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (CallExpr 0x8fde8b8 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8fde880 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x8fde870 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x8fde8d4 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbdfb0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (DeclRefExpr 0x8fde9c4 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbdff0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x8fdead8 <line:326:4, col:33> 'void'
      (ImplicitCastExpr 0x8fdeac8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fdeaac <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x8fdeaf8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x8fdea98 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x8fdea7c </usr/include/c++/4.6/bits/basic_string.h:326:29> 'const char *' lvalue ParmVar 0x8fbe040 '__s' 'const char *'))))
    <<<NULL>>>))


        size_type _M_limit(size_type __pos, size_type __off) const (CompoundStmt 0x8fdee48 </usr/include/c++/4.6/bits/basic_string.h:332:7, line:335:7>
  (DeclStmt 0x8fdece8 <line:333:2, col:54>
    0x8fdeb50 "const bool __testoff =
      (CXXOperatorCallExpr 0x8fdecc0 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdec80 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
        (DeclRefExpr 0x8fdeb84 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe1c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x8fdec58 <col:34, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x8fdec20 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x8fdebe8 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8fdebb0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x8fdeba0 <col:34> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
          (DeclRefExpr 0x8fdec04 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe180 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (ReturnStmt 0x8fdee38 <line:334:2, col:44>
    (ConditionalOperator 0x8fdee18 <col:9, col:44> '<dependent type>'
      (ImplicitCastExpr 0x8fdee08 <col:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x8fdecf8 <col:9> 'const _Bool' lvalue Var 0x8fdeb50 '__testoff' 'const _Bool'))
      (DeclRefExpr 0x8fded10 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe1c0 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x8fdede0 <col:29, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x8fdeda8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CallExpr 0x8fded70 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fded38 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x8fded28 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x8fded8c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe180 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))


        bool _M_disjunct(const _CharT *__s) const (CompoundStmt 0x8fdf290 </usr/include/c++/4.6/bits/basic_string.h:340:7, line:343:7>
  (ReturnStmt 0x8fdf280 <line:341:2, line:342:58>
    (ParenExpr 0x8fdf268 <line:341:9, line:342:58> '<dependent type>'
      (BinaryOperator 0x8fdf250 <line:341:10, line:342:57> '<dependent type>' '||'
        (CallExpr 0x8fdefe0 <line:341:10, col:46> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x8fdef40 <col:10, col:30> 'less<const _CharT *>')
          (DeclRefExpr 0x8fdef58 <col:32> 'const _CharT *' lvalue ParmVar 0x8fbe300 '__s' 'const _CharT *')
          (CallExpr 0x8fdefc0 <col:37, col:45> '<dependent type>'
            (UnresolvedMemberExpr 0x8fdef80 <col:37> '<bound member function type>' lvalue)))
        (CallExpr 0x8fdf228 <line:342:6, col:57> '<dependent type>'
          (CXXUnresolvedConstructExpr 0x8fdf0c0 <col:6, col:26> 'less<const _CharT *>')
          (CXXOperatorCallExpr 0x8fdf1e8 <col:28, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x8fdf1b0 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
            (CallExpr 0x8fdf128 <col:28, col:36> '<dependent type>'
              (UnresolvedMemberExpr 0x8fdf0e8 <col:28> '<bound member function type>' lvalue))
            (CallExpr 0x8fdf190 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8fdf158 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x8fdf148 <col:40> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
          (DeclRefExpr 0x8fdf20c <col:54> 'const _CharT *' lvalue ParmVar 0x8fbe300 '__s' 'const _CharT *'))))))


        static void _M_copy(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x8fdf500 </usr/include/c++/4.6/bits/basic_string.h:349:7, line:354:7>
  (IfStmt 0x8fdf4e0 <line:350:2, line:353:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fdf320 <line:350:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdf2d8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (DeclRefExpr 0x8fdf2a4 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe4b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x8fdf2c0 <col:13> 'int' 1))
    (CallExpr 0x8fdf3f8 <line:351:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf370 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x8fdf3b0 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdf394 <col:25> '_CharT *' lvalue ParmVar 0x8fbe420 '__d' '_CharT *'))
      (UnaryOperator 0x8fdf3e0 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdf3c4 <col:31> 'const _CharT *' lvalue ParmVar 0x8fbe470 '__s' 'const _CharT *')))
    (CallExpr 0x8fdf4b8 <line:353:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf448 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x8fdf46c <col:22> '_CharT *' lvalue ParmVar 0x8fbe420 '__d' '_CharT *')
      (DeclRefExpr 0x8fdf484 <col:27> 'const _CharT *' lvalue ParmVar 0x8fbe470 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fdf49c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe4b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_move(_CharT *__d, const _CharT *__s, size_type __n) (CompoundStmt 0x8fdf770 </usr/include/c++/4.6/bits/basic_string.h:358:7, line:363:7>
  (IfStmt 0x8fdf750 <line:359:2, line:362:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fdf590 <line:359:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdf548 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (DeclRefExpr 0x8fdf514 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe680 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x8fdf530 <col:13> 'int' 1))
    (CallExpr 0x8fdf668 <line:360:4, col:34> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf5e0 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x8fdf620 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdf604 <col:25> '_CharT *' lvalue ParmVar 0x8fbe5f0 '__d' '_CharT *'))
      (UnaryOperator 0x8fdf650 <col:30, col:31> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdf634 <col:31> 'const _CharT *' lvalue ParmVar 0x8fbe640 '__s' 'const _CharT *')))
    (CallExpr 0x8fdf728 <line:362:4, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf6b8 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x8fdf6dc <col:22> '_CharT *' lvalue ParmVar 0x8fbe5f0 '__d' '_CharT *')
      (DeclRefExpr 0x8fdf6f4 <col:27> 'const _CharT *' lvalue ParmVar 0x8fbe640 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fdf70c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe680 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        static void _M_assign(_CharT *__d, size_type __n, _CharT __c) (CompoundStmt 0x8fdf9c8 </usr/include/c++/4.6/bits/basic_string.h:367:7, line:372:7>
  (IfStmt 0x8fdf9a8 <line:368:2, line:371:37>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fdf800 <line:368:6, col:13> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdf7b8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (DeclRefExpr 0x8fdf784 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe7a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x8fdf7a0 <col:13> 'int' 1))
    (CallExpr 0x8fdf8c0 <line:369:4, col:33> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf850 <col:4, col:17> '<dependent type>' lvalue)
      (UnaryOperator 0x8fdf890 <col:24, col:25> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdf874 <col:25> '_CharT *' lvalue ParmVar 0x8fbe760 '__d' '_CharT *'))
      (DeclRefExpr 0x8fdf8a4 <col:30> '_CharT' lvalue ParmVar 0x8fbe7e0 '__c' '_CharT'))
    (CallExpr 0x8fdf980 <line:371:4, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdf910 <col:4, col:17> '<dependent type>' lvalue)
      (DeclRefExpr 0x8fdf934 <col:24> '_CharT *' lvalue ParmVar 0x8fbe760 '__d' '_CharT *')
      (DeclRefExpr 0x8fdf94c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbe7a0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fdf964 <col:34> '_CharT' lvalue ParmVar 0x8fbe7e0 '__c' '_CharT'))))


        template <class _Iterator> static void _S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2) (CompoundStmt 0x8fdfbf8 </usr/include/c++/4.6/bits/basic_string.h:379:9, line:382:2>
  (ForStmt 0x8fdfbd0 <line:380:4, line:381:37>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fdfa58 <line:380:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdfa10 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0)
      (DeclRefExpr 0x8fdf9dc <col:11> '_Iterator' lvalue ParmVar 0x8fbe9c0 '__k1' '_Iterator')
      (DeclRefExpr 0x8fdf9f4 <col:19> '_Iterator' lvalue ParmVar 0x8fbea00 '__k2' '_Iterator'))
    (BinaryOperator 0x8fdfae0 <col:25, col:35> '<dependent type>' ','
      (UnaryOperator 0x8fdfa98 <col:25, col:27> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8fdfa7c <col:27> '_Iterator' lvalue ParmVar 0x8fbe9c0 '__k1' '_Iterator'))
      (UnaryOperator 0x8fdfac8 <col:33, col:35> '<dependent type>' prefix '++'
        (DeclRefExpr 0x8fdfaac <col:35> '_CharT *' lvalue ParmVar 0x8fbe980 '__p' '_CharT *')))
    (CallExpr 0x8fdfba8 <line:381:6, col:37> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fdfb20 <col:6, col:19> '<dependent type>' lvalue)
      (UnaryOperator 0x8fdfb60 <col:26, col:27> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdfb44 <col:27> '_CharT *' lvalue ParmVar 0x8fbe980 '__p' '_CharT *'))
      (UnaryOperator 0x8fdfb90 <col:32, col:33> '<dependent type>' prefix '*'
        (DeclRefExpr 0x8fdfb74 <col:33> '_Iterator' lvalue ParmVar 0x8fbe9c0 '__k1' '_Iterator')))))

;
        static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) (CompoundStmt 0x8fdfd78 </usr/include/c++/4.6/bits/basic_string.h:386:7, col:55>
  (CallExpr 0x8fdfd50 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x8fdfc10 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x8fbf230 0x8fbf050 0x8fbee70 0x8fbecb0 0x8fbeb20)
    (DeclRefExpr 0x8fdfc54 <col:23> '_CharT *' lvalue ParmVar 0x8fbeb70 '__p' '_CharT *')
    (CallExpr 0x8fdfcc0 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fdfc88 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x8fdfc6c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fbebb0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x8fdfd30 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fdfcf8 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x8fdfcdc <col:41> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fbebf0 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x8fdfef8 </usr/include/c++/4.6/bits/basic_string.h:390:7, col:55>
  (CallExpr 0x8fdfed0 <col:9, col:52> '<dependent type>'
    (UnresolvedLookupExpr 0x8fdfd90 <col:9> '<dependent type>' lvalue (no ADL) = '1' 0x8fbf230 0x8fbf050 0x8fbee70 0x8fbecb0 0x8fbeb20)
    (DeclRefExpr 0x8fdfdd4 <col:23> '_CharT *' lvalue ParmVar 0x8fbed30 '__p' '_CharT *')
    (CallExpr 0x8fdfe40 <col:28, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fdfe08 <col:28, col:33> '<dependent type>' lvalue
        (DeclRefExpr 0x8fdfdec <col:28> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fbed70 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
    (CallExpr 0x8fdfeb0 <col:41, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fdfe78 <col:41, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x8fdfe5c <col:41> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fbedb0 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x8fe0010 </usr/include/c++/4.6/bits/basic_string.h:394:7, col:42>
  (CallExpr 0x8fdffe8 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x8fdff0c <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x8fdff24 <col:17> '_CharT *' lvalue ParmVar 0x8fbeef0 '__p' '_CharT *')
    (DeclRefExpr 0x8fdff3c <col:22> '_CharT *' lvalue ParmVar 0x8fbef40 '__k1' '_CharT *')
    (CXXOperatorCallExpr 0x8fdffc0 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x8fdff88 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8fdff54 <col:28> '_CharT *' lvalue ParmVar 0x8fbef90 '__k2' '_CharT *')
      (DeclRefExpr 0x8fdff6c <col:35> '_CharT *' lvalue ParmVar 0x8fbef40 '__k1' '_CharT *'))))


        static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x8fe0128 </usr/include/c++/4.6/bits/basic_string.h:398:7, col:42>
  (CallExpr 0x8fe0100 <col:9, col:39> '<dependent type>'
    (DeclRefExpr 0x8fe0024 <col:9> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (DeclRefExpr 0x8fe003c <col:17> '_CharT *' lvalue ParmVar 0x8fbf0d0 '__p' '_CharT *')
    (DeclRefExpr 0x8fe0054 <col:22> 'const _CharT *' lvalue ParmVar 0x8fbf120 '__k1' 'const _CharT *')
    (CXXOperatorCallExpr 0x8fe00d8 <col:28, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x8fe00a0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x8fe006c <col:28> 'const _CharT *' lvalue ParmVar 0x8fbf170 '__k2' 'const _CharT *')
      (DeclRefExpr 0x8fe0084 <col:35> 'const _CharT *' lvalue ParmVar 0x8fbf120 '__k1' 'const _CharT *'))))


        static int _S_compare(size_type __n1, size_type __n2) (CompoundStmt 0x8fe31a8 </usr/include/c++/4.6/bits/basic_string.h:402:7, line:411:7>
  (DeclStmt 0x8fe0250 <line:403:2, col:58>
    0x8fe0160 "const difference_type __d =
      (CXXUnresolvedConstructExpr 0x8fe0230 <col:30, col:57> 'difference_type':'typename _CharT_alloc_type::difference_type'
        (CXXOperatorCallExpr 0x8fe0208 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x8fe01d0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x8fe01a0 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbf2b0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x8fe01b8 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fbf2f0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))")
  (IfStmt 0x8fe3188 <line:405:2, line:410:18>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fe2e08 <line:405:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x8fe2dc8 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (DeclRefExpr 0x8fe0260 <col:6> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x8fe0160 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
      (DeclRefExpr 0x8fe2da8 <col:12, col:46> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
    (ReturnStmt 0x8fe2ef0 <line:406:4, col:45>
      (ImplicitCastExpr 0x8fe2ee0 <col:11, col:45> 'int':'int' <LValueToRValue>
        (DeclRefExpr 0x8fe2ec0 <col:11, col:45> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int')))
    (IfStmt 0x8fe3168 <line:407:7, line:410:18>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x8fe3010 <line:407:11, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe2fd0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0)
        (DeclRefExpr 0x8fe2f00 <col:11> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x8fe0160 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type')
        (DeclRefExpr 0x8fe2fb0 <col:17, col:51> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int'))
      (ReturnStmt 0x8fe3100 <line:408:4, col:45>
        (ImplicitCastExpr 0x8fe30f0 <col:11, col:45> 'int':'int' <LValueToRValue>
          (DeclRefExpr 0x8fe30d0 <col:11, col:45> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int')))
      (ReturnStmt 0x8fe3158 <line:410:4, col:18>
        (CXXUnresolvedConstructExpr 0x8fe3138 <col:11, col:18> 'int'
          (DeclRefExpr 0x8fe311c <col:15> 'const difference_type':'const typename _CharT_alloc_type::difference_type' lvalue Var 0x8fe0160 '__d' 'const difference_type':'const typename _CharT_alloc_type::difference_type'))))))


        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string::_Rep &_S_empty_rep() (CompoundStmt 0x8fe3240 </usr/include/c++/4.6/bits/basic_string.h:421:7, col:38>
  (ReturnStmt 0x8fe3230 <col:9, col:35>
    (CallExpr 0x8fe3210 <col:16, col:35> '<dependent type>'
      (DependentScopeDeclRefExpr 0x8fe31e8 <col:16, col:22> '<dependent type>' lvalue))))


    public:
    public:
        basic_string<_CharT, _Traits, _Alloc>() : _M_dataplus((CallExpr 0x8fe32c8 </usr/include/c++/4.6/bits/basic_string.h:433:21, col:47> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x8fe3290 <col:21, col:36> '<dependent type>' lvalue
    (CallExpr 0x8fe3270 <col:21, col:34> '<dependent type>'
      (DeclRefExpr 0x8fe3254 <col:21> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbf650 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
, (CXXUnresolvedConstructExpr 0x8fe32f0 </usr/include/c++/4.6/bits/basic_string.h:433:50, col:57> '_Alloc')
) (CompoundStmt 0x8fe3350 </usr/include/c++/4.6/bits/basic_string.h:433:60, col:62>)


        basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x8fdb728 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
);
        basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb748 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb768 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
);
        basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb788 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb7a8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
);
        void ~basic_string<_CharT, _Traits, _Alloc>() (CompoundStmt 0x8fe3470 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (CallExpr 0x8fe3450 <col:9, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe33b0 <col:9, col:19> '<dependent type>' lvalue
      (CallExpr 0x8fe3390 <col:9, col:16> '<dependent type>'
        (MemberExpr 0x8fe3370 <col:9> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe3360 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x8fe3430 <col:30, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe33f8 <col:30, col:36> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe33e8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8fe3518 </usr/include/c++/4.6/bits/basic_string.h:541:7, col:37>
  (ReturnStmt 0x8fe3508 <col:9, col:34>
    (CallExpr 0x8fe34e8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe3498 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe3488 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe34cc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc3a40 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(const _CharT *__s) (CompoundStmt 0x8fe35c0 </usr/include/c++/4.6/bits/basic_string.h:549:7, col:35>
  (ReturnStmt 0x8fe35b0 <col:9, col:32>
    (CallExpr 0x8fe3590 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe3540 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe3530 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe3574 <col:29> 'const _CharT *' lvalue ParmVar 0x8fc3b60 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator=(_CharT __c) (CompoundStmt 0x8fe36b0 </usr/include/c++/4.6/bits/basic_string.h:560:7, line:563:7>
  (CallExpr 0x8fe3650 <line:561:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe35e8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x8fe35d8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x8fe3620 <col:15> 'int' 1)
    (DeclRefExpr 0x8fe3638 <col:18> '_CharT' lvalue ParmVar 0x8fc3c70 '__c' '_CharT'))
  (ReturnStmt 0x8fe36a0 <line:562:2, col:10>
    (UnaryOperator 0x8fe3688 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8fe3678 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator begin() (CompoundStmt 0x8fe37c0 </usr/include/c++/4.6/bits/basic_string.h:600:7, line:603:7>
  (CallExpr 0x8fe36f8 <line:601:2, col:10> '<dependent type>'
    (MemberExpr 0x8fe36d8 <col:2> '<bound member function type>' ->_M_leak 0x8fbdde0
      (CXXThisExpr 0x8fe36c8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x8fe37b0 <line:602:2, col:27>
    (CXXUnresolvedConstructExpr 0x8fe3790 <col:9, col:27> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x8fe3770 <col:18, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe3730 <col:18> '<bound member function type>' lvalue)))))


        const_iterator begin() const (CompoundStmt 0x8fe3880 </usr/include/c++/4.6/bits/basic_string.h:611:7, col:43>
  (ReturnStmt 0x8fe3870 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x8fe3850 <col:16, col:40> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CallExpr 0x8fe3830 <col:31, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe37f0 <col:31> '<bound member function type>' lvalue)))))


        iterator end() (CompoundStmt 0x8fe3a58 </usr/include/c++/4.6/bits/basic_string.h:619:7, line:622:7>
  (CallExpr 0x8fe38c8 <line:620:2, col:10> '<dependent type>'
    (MemberExpr 0x8fe38a8 <col:2> '<bound member function type>' ->_M_leak 0x8fbdde0
      (CXXThisExpr 0x8fe3898 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x8fe3a48 <line:621:2, col:42>
    (CXXUnresolvedConstructExpr 0x8fe3a28 <col:9, col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x8fe3a00 <col:18, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe39c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe3940 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x8fe3900 <col:18> '<bound member function type>' lvalue))
        (CallExpr 0x8fe39a8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe3970 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x8fe3960 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        const_iterator end() const (CompoundStmt 0x8fe3be0 </usr/include/c++/4.6/bits/basic_string.h:630:7, col:58>
  (ReturnStmt 0x8fe3bd0 <col:9, col:55>
    (CXXUnresolvedConstructExpr 0x8fe3bb0 <col:16, col:55> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x8fe3b88 <col:31, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe3b50 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe3ac8 <col:31, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x8fe3a88 <col:31> '<bound member function type>' lvalue))
        (CallExpr 0x8fe3b30 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe3af8 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x8fe3ae8 <col:43> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))))


        reverse_iterator rbegin() (CompoundStmt 0x8fe3c98 </usr/include/c++/4.6/bits/basic_string.h:639:7, col:47>
  (ReturnStmt 0x8fe3c88 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x8fe3c68 <col:16, col:44> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x8fe3c48 <col:33, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe3c10 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe3c00 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x8fe3d50 </usr/include/c++/4.6/bits/basic_string.h:648:7, col:53>
  (ReturnStmt 0x8fe3d40 <col:9, col:50>
    (CXXUnresolvedConstructExpr 0x8fe3d20 <col:16, col:50> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x8fe3d00 <col:39, col:49> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe3cc8 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe3cb8 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        reverse_iterator rend() (CompoundStmt 0x8fe5458 </usr/include/c++/4.6/bits/basic_string.h:657:7, col:49>
  (ReturnStmt 0x8fe5448 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x8fe5428 <col:16, col:46> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x8fe3db8 <col:33, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe3d80 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe3d70 <col:33> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


        const_reverse_iterator rend() const (CompoundStmt 0x8fe5510 </usr/include/c++/4.6/bits/basic_string.h:666:7, col:55>
  (ReturnStmt 0x8fe5500 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x8fe54e0 <col:16, col:52> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x8fe54c0 <col:39, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe5488 <col:39, col:45> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe5478 <col:39> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


    public:
    public:
        size_type size() const (CompoundStmt 0x8fe55c0 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x8fe55b0 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x8fe5578 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x8fe5558 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x8fe5538 <col:16> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe5528 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type length() const (CompoundStmt 0x8fe5670 </usr/include/c++/4.6/bits/basic_string.h:716:7, col:37>
  (ReturnStmt 0x8fe5660 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x8fe5628 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x8fe5608 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x8fe55e8 <col:16> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe55d8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        size_type max_size() const (CompoundStmt 0x8fe56f0 </usr/include/c++/4.6/bits/basic_string.h:721:7, col:35>
  (ReturnStmt 0x8fe56e0 <col:9, col:22>
    (CXXDependentScopeMemberExpr 0x8fe56a8 <col:16, col:22> '<dependent type>' lvalue)))


        void resize(size_type __n, _CharT __c);
        void resize(size_type __n) (CompoundStmt 0x8fe57b0 </usr/include/c++/4.6/bits/basic_string.h:748:7, col:38>
  (CallExpr 0x8fe5788 <col:9, col:35> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe5718 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x8fe5708 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe574c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc45b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x8fe5770 <col:27, col:34> '_CharT')))


        size_type capacity() const (CompoundStmt 0x8fe5860 </usr/include/c++/4.6/bits/basic_string.h:768:7, col:39>
  (ReturnStmt 0x8fe5850 <col:9, col:26>
    (CXXDependentScopeMemberExpr 0x8fe5818 <col:16, col:26> '<dependent type>' lvalue
      (CallExpr 0x8fe57f8 <col:16, col:23> '<dependent type>'
        (MemberExpr 0x8fe57d8 <col:16> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe57c8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))))


        void reserve(size_type __res_arg = (IntegerLiteral 0x8fdb7c0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
);
        void clear() (CompoundStmt 0x8fe5968 </usr/include/c++/4.6/bits/basic_string.h:795:7, col:40>
  (CallExpr 0x8fe5940 <col:9, col:37> '<dependent type>'
    (MemberExpr 0x8fe5888 <col:9> '<bound member function type>' ->_M_mutate 0x8fbf540
      (CXXThisExpr 0x8fe5878 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x8fe58a8 <col:19> 'int' 0)
    (CallExpr 0x8fe5908 <col:22, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe58d0 <col:22, col:28> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe58c0 <col:22> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (IntegerLiteral 0x8fe5928 <col:36> 'int' 0)))


        bool empty() const (CompoundStmt 0x8fe5a80 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x8fe5a70 <col:9, col:32>
    (CXXOperatorCallExpr 0x8fe5a48 <col:16, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x8fe5a00 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (CallExpr 0x8fe59c8 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe5990 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe5980 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))
      (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0))))


        const_reference operator[](size_type __pos) const (CompoundStmt 0x8fe5b58 </usr/include/c++/4.6/bits/basic_string.h:818:7, line:821:7>
  (NullStmt 0x8fe5a98 <line:819:40>)
  (ReturnStmt 0x8fe5b48 <line:820:2, col:24>
    (ArraySubscriptExpr 0x8fe5b30 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x8fe5af8 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe5ab8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x8fe5b14 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc48c0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference operator[](size_type __pos) (CompoundStmt 0x8fe5c90 </usr/include/c++/4.6/bits/basic_string.h:835:7, line:842:7>
  (NullStmt 0x8fe5b70 <line:837:40>)
  (NullStmt 0x8fe5b80 <line:839:42>)
  (CallExpr 0x8fe5bc0 <line:840:2, col:10> '<dependent type>'
    (MemberExpr 0x8fe5ba0 <col:2> '<bound member function type>' ->_M_leak 0x8fbdde0
      (CXXThisExpr 0x8fe5b90 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x8fe5c80 <line:841:2, col:24>
    (ArraySubscriptExpr 0x8fe5c68 <col:9, col:24> '<dependent type>' lvalue
      (CallExpr 0x8fe5c30 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe5bf0 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x8fe5c4c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc49f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        const_reference at(size_type __n) const (CompoundStmt 0x8fe5f80 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x8fe5eb0 <line:857:2, line:858:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fe5d70 <line:857:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x8fe5d30 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (DeclRefExpr 0x8fe5cb0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc4b00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fe5d10 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe5cd8 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe5cc8 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x8fe5e80 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x8fe5e70 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x8fe5ea0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x8fe5f70 <line:859:2, col:22>
    (ArraySubscriptExpr 0x8fe5f58 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x8fe5f20 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe5ee0 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x8fe5f3c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc4b00 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        reference at(size_type __n) (CompoundStmt 0x8fe6258 </usr/include/c++/4.6/bits/basic_string.h:909:7, line:914:7>
  (IfStmt 0x8fe6138 <line:910:2, line:911:48>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8fe6040 <line:910:6, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x8fe6000 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (DeclRefExpr 0x8fe5f98 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc4bc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fe5fe0 <col:13, col:18> '<dependent type>'
        (MemberExpr 0x8fe5fc0 <col:13> '<bound member function type>' ->size 0x8fc42f0
          (CXXThisExpr 0x8fe5fb0 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (CallExpr 0x8fe6108 <line:911:4, col:48> 'void'
      (ImplicitCastExpr 0x8fe60f8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe60dc <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x8fe6128 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe60c8 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe609c </usr/include/c++/4.6/bits/basic_string.h:911:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (CallExpr 0x8fe6188 <line:912:2, col:10> '<dependent type>'
    (MemberExpr 0x8fe6168 <col:2> '<bound member function type>' ->_M_leak 0x8fbdde0
      (CXXThisExpr 0x8fe6158 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
  (ReturnStmt 0x8fe6248 <line:913:2, col:22>
    (ArraySubscriptExpr 0x8fe6230 <col:9, col:22> '<dependent type>' lvalue
      (CallExpr 0x8fe61f8 <col:9, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe61b8 <col:9> '<bound member function type>' lvalue))
      (DeclRefExpr 0x8fe6214 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc4bc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8fe6308 </usr/include/c++/4.6/bits/basic_string.h:924:7, col:37>
  (ReturnStmt 0x8fe62f8 <col:9, col:34>
    (CallExpr 0x8fe62d8 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe6288 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe6278 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe62bc <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc4c90 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(const _CharT *__s) (CompoundStmt 0x8fe63b0 </usr/include/c++/4.6/bits/basic_string.h:933:7, col:35>
  (ReturnStmt 0x8fe63a0 <col:9, col:32>
    (CallExpr 0x8fe6380 <col:16, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe6330 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe6320 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe6364 <col:29> 'const _CharT *' lvalue ParmVar 0x8fc80f0 '__s' 'const _CharT *'))))


        basic_string<_CharT, _Traits, _Alloc> &operator+=(_CharT __c) (CompoundStmt 0x8fe6480 </usr/include/c++/4.6/bits/basic_string.h:942:7, line:945:7>
  (CallExpr 0x8fe6428 <line:943:2, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe63d8 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x8fe63c8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe640c <col:18> '_CharT' lvalue ParmVar 0x8fc81c0 '__c' '_CharT'))
  (ReturnStmt 0x8fe6470 <line:944:2, col:10>
    (UnaryOperator 0x8fe6458 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8fe6448 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s) (CompoundStmt 0x8fe65d0 </usr/include/c++/4.6/bits/basic_string.h:997:7, line:1000:7>
  (NullStmt 0x8fe6498 <line:998:32>)
  (ReturnStmt 0x8fe65c0 <line:999:2, col:51>
    (CallExpr 0x8fe6598 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe64b8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe64a8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe64ec <col:22> 'const _CharT *' lvalue ParmVar 0x8fc86a0 '__s' 'const _CharT *')
      (CallExpr 0x8fe6578 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe6528 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fe655c <col:47> 'const _CharT *' lvalue ParmVar 0x8fc86a0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c);
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &append(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x8fe6740 </usr/include/c++/4.6/bits/basic_string.h:1035:9, col:72>
  (ReturnStmt 0x8fe6730 <col:11, col:69>
    (CallExpr 0x8fe6700 <col:18, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe65f8 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe65e8 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fe6660 <col:32, col:40> '<dependent type>'
        (MemberExpr 0x8fe6640 <col:32> '<bound member function type>' ->_M_iend 0x8fbdd60
          (CXXThisExpr 0x8fe6630 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x8fe66b0 <col:43, col:51> '<dependent type>'
        (MemberExpr 0x8fe6690 <col:43> '<bound member function type>' ->_M_iend 0x8fbdd60
          (CXXThisExpr 0x8fe6680 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x8fe66cc <col:54> '_InputIterator' lvalue ParmVar 0x8fc8920 '__first' '_InputIterator')
      (DeclRefExpr 0x8fe66e4 <col:63> '_InputIterator' lvalue ParmVar 0x8fc8960 '__last' '_InputIterator'))))

;
        void push_back(_CharT __c) (CompoundStmt 0x8fe6d20 </usr/include/c++/4.6/bits/basic_string.h:1043:7, line:1049:7>
  (DeclStmt 0x8fe6878 <line:1044:2, col:42>
    0x8fe6760 "const size_type __len =
      (CXXOperatorCallExpr 0x8fe6850 <col:26, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe6818 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (IntegerLiteral 0x8fe6798 <col:26> 'int' 1)
        (CallExpr 0x8fe67f8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe67c0 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x8fe67b0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x8fe6ab0 <line:1045:2, line:1046:23>
    <<<NULL>>>
    (BinaryOperator 0x8fe6a18 <line:1045:6, col:57> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x8fe6948 <col:6, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe6908 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
        (DeclRefExpr 0x8fe6888 <col:6> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe6760 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x8fe68e8 <col:14, col:29> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe68b0 <col:14, col:20> '<dependent type>' lvalue
            (CXXThisExpr 0x8fe68a0 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x8fe69f8 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe69c0 <col:34, col:44> '<dependent type>' lvalue
          (CallExpr 0x8fe69a0 <col:34, col:41> '<dependent type>'
            (MemberExpr 0x8fe6980 <col:34> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x8fe6970 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CallExpr 0x8fe6a90 <line:1046:4, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe6a40 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe6a30 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe6a74 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe6760 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (CallExpr 0x8fe6c38 <line:1047:2, col:50> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe6af8 <col:2, col:15> '<dependent type>' lvalue)
    (ArraySubscriptExpr 0x8fe6c08 <col:22, col:44> '<dependent type>' lvalue
      (CallExpr 0x8fe6b80 <col:22, col:30> '<dependent type>'
        (UnresolvedMemberExpr 0x8fe6b40 <col:22> '<bound member function type>' lvalue))
      (CallExpr 0x8fe6be8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe6bb0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe6ba0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x8fe6c1c <col:47> '_CharT' lvalue ParmVar 0x8fc8aa0 '__c' '_CharT'))
  (CallExpr 0x8fe6d00 <line:1048:2, col:44> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe6cb0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x8fe6c90 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x8fe6c70 <col:2> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe6c60 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x8fe6ce4 <col:39> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe6760 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))


        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str);
        basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x8fe6ff8 </usr/include/c++/4.6/bits/basic_string.h:1090:7, line:1092:37>
  (ReturnStmt 0x8fe6fe8 <line:1090:9, line:1092:34>
    (CallExpr 0x8fe6fc0 <line:1090:16, line:1092:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe6d50 <line:1090:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe6d40 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8fe6ef0 <col:29, line:1091:54> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe6eb8 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe6dd8 <line:1090:29, col:43> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe6da0 <col:29, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe6d84 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc8c80 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x8fe6e90 <line:1091:10, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe6e10 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe6df4 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc8c80 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x8fe6e44 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc8cc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x8fe6e5c <col:32> 'const char [21]' lvalue "basic_string::assign")))
      (CallExpr 0x8fe6f98 <line:1092:8, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe6f30 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe6f14 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc8c80 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8fe6f64 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc8cc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fe6f7c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc8d00 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s) (CompoundStmt 0x8fe7148 </usr/include/c++/4.6/bits/basic_string.h:1118:7, line:1121:7>
  (NullStmt 0x8fe7010 <line:1119:32>)
  (ReturnStmt 0x8fe7138 <line:1120:2, col:51>
    (CallExpr 0x8fe7110 <col:9, col:51> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe7030 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe7020 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe7064 <col:22> 'const _CharT *' lvalue ParmVar 0x8fc8f00 '__s' 'const _CharT *')
      (CallExpr 0x8fe70f0 <col:27, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe70a0 <col:27, col:40> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fe70d4 <col:47> 'const _CharT *' lvalue ParmVar 0x8fc8f00 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &assign(size_type __n, _CharT __c) (CompoundStmt 0x8fe72a8 </usr/include/c++/4.6/bits/basic_string.h:1134:7, col:70>
  (ReturnStmt 0x8fe7298 <col:9, col:67>
    (CallExpr 0x8fe7268 <col:16, col:67> '<dependent type>'
      (MemberExpr 0x8fe7170 <col:16> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
        (CXXThisExpr 0x8fe7160 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXUnresolvedConstructExpr 0x8fe71b0 <col:31, col:42> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x8fe7198 <col:41> 'int' 0))
      (CallExpr 0x8fe7218 <col:45, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe71e0 <col:45, col:51> '<dependent type>' lvalue
          (CXXThisExpr 0x8fe71d0 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x8fe7234 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc8fd0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe724c <col:64> '_CharT' lvalue ParmVar 0x8fc9010 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x8fe83d8 </usr/include/c++/4.6/bits/basic_string.h:1147:9, col:74>
  (ReturnStmt 0x8fe7408 <col:11, col:71>
    (CallExpr 0x8fe73d8 <col:18, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe72d0 <col:18, col:24> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe72c0 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fe7338 <col:32, col:42> '<dependent type>'
        (MemberExpr 0x8fe7318 <col:32> '<bound member function type>' ->_M_ibegin 0x8fbdce0
          (CXXThisExpr 0x8fe7308 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x8fe7388 <col:45, col:53> '<dependent type>'
        (MemberExpr 0x8fe7368 <col:45> '<bound member function type>' ->_M_iend 0x8fbdd60
          (CXXThisExpr 0x8fe7358 <col:45> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (DeclRefExpr 0x8fe73a4 <col:56> '_InputIterator' lvalue ParmVar 0x8fc9140 '__first' '_InputIterator')
      (DeclRefExpr 0x8fe73bc <col:65> '_InputIterator' lvalue ParmVar 0x8fc9180 '__last' '_InputIterator'))))

;
        void insert(iterator __p, size_type __n, _CharT __c) (CompoundStmt 0x8fe84c8 </usr/include/c++/4.6/bits/basic_string.h:1174:7, col:45>
  (CallExpr 0x8fe8498 <col:9, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe8400 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x8fe83f0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe8434 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fc92a0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x8fe844c <col:28> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fc92a0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x8fe8464 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc92e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x8fe847c <col:38> '_CharT' lvalue ParmVar 0x8fc9320 '__c' '_CharT')))


        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end) (CompoundStmt 0x8fe85b8 </usr/include/c++/4.6/bits/basic_string.h:1190:9, col:50>
  (CallExpr 0x8fe8588 <col:11, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe84f0 <col:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x8fe84e0 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe8524 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fc94b0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x8fe853c <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fc94b0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
    (DeclRefExpr 0x8fe8554 <col:35> '_InputIterator' lvalue ParmVar 0x8fc94f0 '__beg' '_InputIterator')
    (DeclRefExpr 0x8fe856c <col:42> '_InputIterator' lvalue ParmVar 0x8fc9530 '__end' '_InputIterator')))

;
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8fe8738 </usr/include/c++/4.6/bits/basic_string.h:1220:7, col:73>
  (ReturnStmt 0x8fe8728 <col:9, col:70>
    (CallExpr 0x8fe86f8 <col:16, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe85e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe85d0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe8614 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9690 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe862c <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc96e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')
      (CXXUnresolvedConstructExpr 0x8fe8668 <col:44, col:55> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x8fe8650 <col:54> 'int' 0))
      (CallExpr 0x8fe86d8 <col:58, col:69> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe86a0 <col:58, col:64> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe8684 <col:58> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc96e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n) (CompoundStmt 0x8fe8a20 </usr/include/c++/4.6/bits/basic_string.h:1243:7, line:1245:38>
  (ReturnStmt 0x8fe8a10 <line:1243:9, line:1245:35>
    (CallExpr 0x8fe89e8 <line:1243:16, line:1245:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe8760 <line:1243:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe8750 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe8794 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc97f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x8fe8918 <col:37, line:1244:55> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe88e0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe8800 <line:1243:37, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe87c8 <col:37, col:43> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe87ac <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc9840 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x8fe88b8 <line:1244:10, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe8838 <col:10, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe881c <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc9840 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x8fe886c <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9880 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x8fe8884 <col:33> 'const char [21]' lvalue "basic_string::insert")))
      (CallExpr 0x8fe89c0 <line:1245:8, col:34> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe8958 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe893c <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fc9840 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8fe898c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9880 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fe89a4 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc98c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n);
        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s) (CompoundStmt 0x8fe8b88 </usr/include/c++/4.6/bits/basic_string.h:1283:7, line:1286:7>
  (NullStmt 0x8fe8a38 <line:1284:32>)
  (ReturnStmt 0x8fe8b78 <line:1285:2, col:58>
    (CallExpr 0x8fe8b50 <col:9, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe8a58 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe8a48 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe8a8c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9bd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe8aa4 <col:29> 'const _CharT *' lvalue ParmVar 0x8fc9c20 '__s' 'const _CharT *')
      (CallExpr 0x8fe8b30 <col:34, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe8ae0 <col:34, col:47> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fe8b14 <col:54> 'const _CharT *' lvalue ParmVar 0x8fc9c20 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, size_type __n, _CharT __c) (CompoundStmt 0x8fe8d20 </usr/include/c++/4.6/bits/basic_string.h:1306:7, line:1307:35>
  (ReturnStmt 0x8fe8d10 <line:1306:9, line:1307:32>
    (CallExpr 0x8fe8ce0 <line:1306:16, line:1307:32> '<dependent type>'
      (MemberExpr 0x8fe8bb0 <line:1306:16> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
        (CXXThisExpr 0x8fe8ba0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fe8c48 <col:31, col:69> '<dependent type>'
        (MemberExpr 0x8fe8be0 <col:31> '<bound member function type>' ->_M_check 0x8fbdf40
          (CXXThisExpr 0x8fe8bd0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x8fe8c00 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9d30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x8fe8c18 <col:47> 'const char [21]' lvalue "basic_string::insert"))
      (CXXUnresolvedConstructExpr 0x8fe8c90 <line:1307:10, col:21> 'size_type':'typename _CharT_alloc_type::size_type'
        (IntegerLiteral 0x8fe8c78 <col:20> 'int' 0))
      (DeclRefExpr 0x8fe8cac <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fc9d70 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe8cc4 <col:29> '_CharT' lvalue ParmVar 0x8fc9db0 '__c' '_CharT'))))


        iterator insert(iterator __p, _CharT __c) (CompoundStmt 0x8fe9138 </usr/include/c++/4.6/bits/basic_string.h:1323:7, line:1329:7>
  (NullStmt 0x8fe8d38 <line:1324:66>)
  (DeclStmt 0x8fe8e50 <line:1325:2, col:43>
    0x8fe8d50 "const size_type __pos =
      (CXXOperatorCallExpr 0x8fe8e28 <col:26, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe8df0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fe8d84 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fc9ef0 '__p' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fe8dd0 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x8fe8db0 <col:32> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fe8da0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x8fe8f40 <line:1326:2, col:55> '<dependent type>'
    (MemberExpr 0x8fe8e70 <col:2> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
      (CXXThisExpr 0x8fe8e60 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe8e90 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe8d50 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x8fe8ec8 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x8fe8eb0 <col:34> 'int' 0))
    (CXXUnresolvedConstructExpr 0x8fe8f08 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x8fe8ef0 <col:48> 'int' 1))
    (DeclRefExpr 0x8fe8f24 <col:52> '_CharT' lvalue ParmVar 0x8fc9f30 '__c' '_CharT'))
  (CallExpr 0x8fe8ff8 <line:1327:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe8fc0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x8fe8fa0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x8fe8f80 <col:2> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe8f70 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x8fe9128 <line:1328:2, col:35>
    (CXXUnresolvedConstructExpr 0x8fe9108 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x8fe90e0 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe90a8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe9070 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x8fe9030 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x8fe908c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe8d50 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &erase(size_type __pos = (IntegerLiteral 0x8fdb7d8 </usr/include/c++/4.6/bits/basic_string.h:1346:31> 'int' 0)
, size_type __n = (DeclRefExpr 0x8fdb7f0 </usr/include/c++/4.6/bits/basic_string.h:1346:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) (CompoundStmt 0x8fe9358 </usr/include/c++/4.6/bits/basic_string.h:1347:7, line:1351:7>
  (CallExpr 0x8fe92f8 <line:1348:2, line:1349:39> '<dependent type>'
    (MemberExpr 0x8fe9170 <line:1348:2> '<bound member function type>' ->_M_mutate 0x8fbf540
      (CXXThisExpr 0x8fe9160 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x8fe9208 <col:12, col:49> '<dependent type>'
      (MemberExpr 0x8fe91a0 <col:12> '<bound member function type>' ->_M_check 0x8fbdf40
        (CXXThisExpr 0x8fe9190 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe91c0 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fca040 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x8fe91d8 <col:28> 'const char [20]' lvalue "basic_string::erase"))
    (CallExpr 0x8fe9290 <line:1349:5, col:24> '<dependent type>'
      (MemberExpr 0x8fe9240 <col:5> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x8fe9230 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe9260 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fca040 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe9278 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fca080 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CXXUnresolvedConstructExpr 0x8fe92d8 <col:27, col:38> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x8fe92c0 <col:37> 'int' 0)))
  (ReturnStmt 0x8fe9348 <line:1350:2, col:10>
    (UnaryOperator 0x8fe9330 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x8fe9320 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


        iterator erase(iterator __position) (CompoundStmt 0x8fe9758 </usr/include/c++/4.6/bits/basic_string.h:1363:7, line:1370:7>
  (NullStmt 0x8fe9370 <line:1365:32>)
  (DeclStmt 0x8fe9490 <line:1366:2, col:50>
    0x8fe9390 "const size_type __pos =
      (CXXOperatorCallExpr 0x8fe9468 <col:26, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe9430 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fe93c4 <col:26> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcd2a0 '__position' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fe9410 <col:39, col:49> '<dependent type>'
          (MemberExpr 0x8fe93f0 <col:39> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fe93e0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
  (CallExpr 0x8fe9568 <line:1367:2, col:45> '<dependent type>'
    (MemberExpr 0x8fe94b0 <col:2> '<bound member function type>' ->_M_mutate 0x8fbf540
      (CXXThisExpr 0x8fe94a0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x8fe94d0 <col:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe9390 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CXXUnresolvedConstructExpr 0x8fe9508 <col:19, col:30> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x8fe94f0 <col:29> 'int' 1))
    (CXXUnresolvedConstructExpr 0x8fe9548 <col:33, col:44> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x8fe9530 <col:43> 'int' 0)))
  (CallExpr 0x8fe9618 <line:1368:2, col:26> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fe95e0 <col:2, col:12> '<dependent type>' lvalue
      (CallExpr 0x8fe95c0 <col:2, col:9> '<dependent type>'
        (MemberExpr 0x8fe95a0 <col:2> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x8fe9590 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
  (ReturnStmt 0x8fe9748 <line:1369:2, col:35>
    (CXXUnresolvedConstructExpr 0x8fe9728 <col:9, col:35> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
      (CXXOperatorCallExpr 0x8fe9700 <col:18, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe96c8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe9690 <col:18, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x8fe9650 <col:18> '<bound member function type>' lvalue))
        (DeclRefExpr 0x8fe96ac <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fe9390 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))


        iterator erase(iterator __first, iterator __last);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8fe9918 </usr/include/c++/4.6/bits/basic_string.h:1402:7, col:74>
  (ReturnStmt 0x8fe9908 <col:9, col:71>
    (CallExpr 0x8fe98d8 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe9790 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe9780 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe97c4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd500 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe97dc <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd540 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fe9848 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe9810 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe97f4 <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcd590 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x8fe98b8 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe9880 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe9864 <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcd590 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) (CompoundStmt 0x8fe9c20 </usr/include/c++/4.6/bits/basic_string.h:1425:7, line:1427:40>
  (ReturnStmt 0x8fe9c10 <line:1425:9, line:1427:37>
    (CallExpr 0x8fe9be0 <line:1425:16, line:1427:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe9940 <line:1425:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe9930 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe9974 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd6d0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe998c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd710 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x8fe9b10 <col:44, line:1426:57> '<dependent type>'
        (UnresolvedLookupExpr 0x8fe9ad8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0)
        (CallExpr 0x8fe99f8 <line:1425:44, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe99c0 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe99a4 <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcd760 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (CallExpr 0x8fe9ab0 <line:1426:11, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fe9a30 <col:11, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x8fe9a14 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcd760 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
          (DeclRefExpr 0x8fe9a64 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd7a0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
          (StringLiteral 0x8fe9a7c <col:34> 'const char [22]' lvalue "basic_string::replace")))
      (CallExpr 0x8fe9bb8 <line:1427:9, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe9b50 <col:9, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x8fe9b34 <col:9> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcd760 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8fe9b84 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd7a0 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fe9b9c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcd7e0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2);
        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s) (CompoundStmt 0x8fe9da8 </usr/include/c++/4.6/bits/basic_string.h:1467:7, line:1470:7>
  (NullStmt 0x8fe9c38 <line:1468:32>)
  (ReturnStmt 0x8fe9d98 <line:1469:2, col:65>
    (CallExpr 0x8fe9d68 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe9c58 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe9c48 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe9c8c <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe9ca4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdb80 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe9cbc <col:36> 'const _CharT *' lvalue ParmVar 0x8fcdbd0 '__s' 'const _CharT *')
      (CallExpr 0x8fe9d48 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fe9cf8 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fe9d2c <col:61> 'const _CharT *' lvalue ParmVar 0x8fcdbd0 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x8fe9f90 </usr/include/c++/4.6/bits/basic_string.h:1490:7, line:1491:45>
  (ReturnStmt 0x8fe9f80 <line:1490:9, line:1491:42>
    (CallExpr 0x8fe9f50 <line:1490:16, line:1491:42> '<dependent type>'
      (MemberExpr 0x8fe9dd0 <line:1490:16> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
        (CXXThisExpr 0x8fe9dc0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fe9e70 <col:31, col:70> '<dependent type>'
        (MemberExpr 0x8fe9e00 <col:31> '<bound member function type>' ->_M_check 0x8fbdf40
          (CXXThisExpr 0x8fe9df0 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x8fe9e20 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdd10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x8fe9e38 <col:47> 'const char [22]' lvalue "basic_string::replace"))
      (CallExpr 0x8fe9ef8 <line:1491:10, col:30> '<dependent type>'
        (MemberExpr 0x8fe9ea8 <col:10> '<bound member function type>' ->_M_limit 0x8fbe260
          (CXXThisExpr 0x8fe9e98 <col:10> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x8fe9ec8 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdd10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fe9ee0 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdd50 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x8fe9f1c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fcdd90 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fe9f34 <col:39> '_CharT' lvalue ParmVar 0x8fcddd0 '__c' '_CharT'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8fea140 </usr/include/c++/4.6/bits/basic_string.h:1508:7, col:74>
  (ReturnStmt 0x8fea130 <col:9, col:71>
    (CallExpr 0x8fea100 <col:16, col:71> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fe9fb8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fe9fa8 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fe9fec <col:30> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcdf10 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x8fea004 <col:36> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcdf50 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (CallExpr 0x8fea070 <col:42, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fea038 <col:42, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x8fea01c <col:42> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcdfa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x8fea0e0 <col:59, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fea0a8 <col:59, col:65> '<dependent type>' lvalue
          (DeclRefExpr 0x8fea08c <col:59> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fcdfa0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s, size_type __n) (CompoundStmt 0x8fea378 </usr/include/c++/4.6/bits/basic_string.h:1526:7, line:1530:7>
  (NullStmt 0x8fea158 <line:1528:27>)
  (ReturnStmt 0x8fea368 <line:1529:2, col:64>
    (CallExpr 0x8fea338 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fea178 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fea168 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8fea250 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x8fea218 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fea1ac <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce0e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fea1f8 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x8fea1d8 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fea1c8 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8fea2e0 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8fea2a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fea274 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce120 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fea28c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce0e0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x8fea304 <col:56> 'const _CharT *' lvalue ParmVar 0x8fce170 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fea31c <col:61> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fce1b0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__s) (CompoundStmt 0x8feb4e0 </usr/include/c++/4.6/bits/basic_string.h:1547:7, line:1550:7>
  (NullStmt 0x8fea390 <line:1548:32>)
  (ReturnStmt 0x8feb4d0 <line:1549:2, col:64>
    (CallExpr 0x8feb4a0 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8feb390 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fea3a0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8feb3c4 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce2f0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x8feb3dc <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce330 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x8feb3f4 <col:35> 'const _CharT *' lvalue ParmVar 0x8fce380 '__s' 'const _CharT *')
      (CallExpr 0x8feb480 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8feb430 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x8feb464 <col:60> 'const _CharT *' lvalue ParmVar 0x8fce380 '__s' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, size_type __n, _CharT __c) (CompoundStmt 0x8feb700 </usr/include/c++/4.6/bits/basic_string.h:1568:7, line:1572:7>
  (NullStmt 0x8feb4f8 <line:1570:27>)
  (ReturnStmt 0x8feb6f0 <line:1571:2, col:65>
    (CallExpr 0x8feb6c0 <col:9, col:65> '<dependent type>'
      (MemberExpr 0x8feb518 <col:9> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
        (CXXThisExpr 0x8feb508 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8feb5d8 <col:24, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x8feb5a0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8feb538 <col:24> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce4c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8feb580 <col:31, col:41> '<dependent type>'
          (MemberExpr 0x8feb560 <col:31> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8feb550 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8feb668 <col:44, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x8feb630 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8feb5fc <col:44> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce500 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8feb614 <col:51> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce4c0 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x8feb68c <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fce540 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8feb6a4 <col:62> '_CharT' lvalue ParmVar 0x8fce580 '__c' '_CharT'))))


        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2) (CompoundStmt 0x8feba00 </usr/include/c++/4.6/bits/basic_string.h:1592:9, line:1598:2>
  (NullStmt 0x8feb718 <line:1594:29>)
  (NullStmt 0x8feb728 <line:1595:46>)
  (DeclStmt 0x8feb8d0 <line:1596:4, col:72>
    0x8feb8a0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (ReturnStmt 0x8feb9f0 <line:1597:4, col:66>
    (CallExpr 0x8feb9c0 <col:11, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x8feb8f0 <col:11> '<bound member function type>' lvalue)
      (DeclRefExpr 0x8feb930 <col:31> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce710 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x8feb948 <col:37> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce750 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
      (DeclRefExpr 0x8feb960 <col:43> '_InputIterator' lvalue ParmVar 0x8fce790 '__k1' '_InputIterator')
      (DeclRefExpr 0x8feb978 <col:49> '_InputIterator' lvalue ParmVar 0x8fce7d0 '__k2' '_InputIterator')
      (CXXUnresolvedConstructExpr 0x8feb9a8 <col:55, col:65> '_Integral':'typename std::__is_integer<_InputIterator>::__type'))))

;
        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, _CharT *__k1, _CharT *__k2) (CompoundStmt 0x8febcc8 </usr/include/c++/4.6/bits/basic_string.h:1604:7, line:1610:7>
  (NullStmt 0x8feba20 <line:1606:27>)
  (NullStmt 0x8feba30 <line:1607:44>)
  (ReturnStmt 0x8febcb8 <line:1608:2, line:1609:26>
    (CallExpr 0x8febc88 <line:1608:9, line:1609:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8feba50 <line:1608:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8feba40 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8febb28 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x8febaf0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8feba84 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce930 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8febad0 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x8febab0 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8febaa0 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8febbb8 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8febb80 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8febb4c <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce970 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8febb64 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fce930 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x8febbdc <line:1609:9> '_CharT *' lvalue ParmVar 0x8fce9c0 '__k1' '_CharT *')
      (CXXOperatorCallExpr 0x8febc60 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x8febc28 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8febbf4 <col:15> '_CharT *' lvalue ParmVar 0x8fcea10 '__k2' '_CharT *')
        (DeclRefExpr 0x8febc0c <col:22> '_CharT *' lvalue ParmVar 0x8fce9c0 '__k1' '_CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const _CharT *__k1, const _CharT *__k2) (CompoundStmt 0x8febf90 </usr/include/c++/4.6/bits/basic_string.h:1615:7, line:1621:7>
  (NullStmt 0x8febce8 <line:1617:27>)
  (NullStmt 0x8febcf8 <line:1618:44>)
  (ReturnStmt 0x8febf80 <line:1619:2, line:1620:26>
    (CallExpr 0x8febf50 <line:1619:9, line:1620:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8febd18 <line:1619:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8febd08 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8febdf0 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x8febdb8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8febd4c <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fceb50 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8febd98 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x8febd78 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8febd68 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8febe80 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8febe48 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8febe14 <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fceb90 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8febe2c <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fceb50 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x8febea4 <line:1620:9> 'const _CharT *' lvalue ParmVar 0x8fcebe0 '__k1' 'const _CharT *')
      (CXXOperatorCallExpr 0x8febf28 <col:15, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x8febef0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8febebc <col:15> 'const _CharT *' lvalue ParmVar 0x8fcec30 '__k2' 'const _CharT *')
        (DeclRefExpr 0x8febed4 <col:22> 'const _CharT *' lvalue ParmVar 0x8fcebe0 '__k1' 'const _CharT *')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2) (CompoundStmt 0x8fec2b0 </usr/include/c++/4.6/bits/basic_string.h:1625:7, line:1631:7>
  (NullStmt 0x8febfb0 <line:1627:27>)
  (NullStmt 0x8febfc0 <line:1628:44>)
  (ReturnStmt 0x8fec2a0 <line:1629:2, line:1630:33>
    (CallExpr 0x8fec270 <line:1629:9, line:1630:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8febfe0 <line:1629:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8febfd0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8fec0b8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec080 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec014 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fced70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fec060 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x8fec040 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fec030 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8fec148 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec110 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec0dc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcedb0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fec0f4 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fced70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x8fec1c0 <line:1630:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fec188 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x8fec16c <col:9> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcedf0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x8fec248 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec210 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec1dc <col:22> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcee30 '__k2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fec1f4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcedf0 '__k1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


        basic_string<_CharT, _Traits, _Alloc> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2) (CompoundStmt 0x8fec5d0 </usr/include/c++/4.6/bits/basic_string.h:1636:7, line:1642:7>
  (NullStmt 0x8fec2d0 <line:1638:27>)
  (NullStmt 0x8fec2e0 <line:1639:44>)
  (ReturnStmt 0x8fec5c0 <line:1640:2, line:1641:33>
    (CallExpr 0x8fec590 <line:1640:9, line:1641:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fec300 <line:1640:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fec2f0 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8fec3d8 <col:23, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec3a0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec334 <col:23> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcef70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fec380 <col:30, col:40> '<dependent type>'
          (MemberExpr 0x8fec360 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fec350 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8fec468 <col:43, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec430 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec3fc <col:43> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcefb0 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fec414 <col:50> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcef70 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (CallExpr 0x8fec4e0 <line:1641:9, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fec4a8 <col:9, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x8fec48c <col:9> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fceff0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))
      (CXXOperatorCallExpr 0x8fec568 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec530 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec4fc <col:22> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fcf030 '__k2' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fec514 <col:29> 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fceff0 '__k1' 'const_iterator':'__normal_iterator<const_pointer, basic_string<_CharT, _Traits, _Alloc> >')))))


    private:
    private:
        template <class _Integer> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x8fec7e8 </usr/include/c++/4.6/bits/basic_string.h:1668:9, col:79>
  (ReturnStmt 0x8fec7d8 <col:11, col:76>
    (CallExpr 0x8fec7a8 <col:18, col:76> '<dependent type>'
      (MemberExpr 0x8fec600 <col:18> '<bound member function type>' ->_M_replace_aux 0x8fd29b0
        (CXXThisExpr 0x8fec5f0 <col:18> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x8fec6c0 <col:33, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec688 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec620 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fd2340 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x8fec668 <col:40, col:50> '<dependent type>'
          (MemberExpr 0x8fec648 <col:40> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x8fec638 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x8fec750 <col:53, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x8fec718 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x8fec6e4 <col:53> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fd2380 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x8fec6fc <col:60> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x8fd2340 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))
      (DeclRefExpr 0x8fec774 <col:66> '_Integer' lvalue ParmVar 0x8fd23c0 '__n' '_Integer')
      (DeclRefExpr 0x8fec78c <col:71> '_Integer' lvalue ParmVar 0x8fd2400 '__val' '_Integer'))))

;
        template <class _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
        basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2);
        template <class _InIterator> static _CharT *_S_construct_aux(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::__false_type) (CompoundStmt 0x8feca30 </usr/include/c++/4.6/bits/basic_string.h:1689:2, line:1692:2>
  (DeclStmt 0x8fec920 <line:1690:11, col:80>
    0x8fec8f0 "typedef typename iterator_traits<_InIterator>::iterator_category _Tag")
  (ReturnStmt 0x8feca20 <line:1691:11, col:56>
    (CallExpr 0x8fec9f0 <col:18, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x8fec930 <col:18> '<dependent type>' lvalue (no ADL) = '1' 0x8fd3b10 0x8fd39e0 0x8fd3750 0x8fd34c0)
      (DeclRefExpr 0x8fec970 <col:31> '_InIterator' lvalue ParmVar 0x8fd2c30 '__beg' '_InIterator')
      (DeclRefExpr 0x8fec988 <col:38> '_InIterator' lvalue ParmVar 0x8fd2c70 '__end' '_InIterator')
      (DeclRefExpr 0x8fec9a0 <col:45> 'const _Alloc' lvalue ParmVar 0x8fd2cc0 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x8fec9d8 <col:50, col:55> '_Tag':'typename iterator_traits<_InIterator>::iterator_category'))))

;
        template <class _Integer> static _CharT *_S_construct_aux(_Integer __beg, _Integer __end, const _Alloc &__a, std::__true_type) (CompoundStmt 0x8fecb00 </usr/include/c++/4.6/bits/basic_string.h:1700:9, line:1701:22>
  (ReturnStmt 0x8fecaf0 <line:1700:11, line:1701:19>
    (CallExpr 0x8fecac8 <line:1700:18, line:1701:19> '<dependent type>'
      (DeclRefExpr 0x8feca48 <line:1700:18> '_CharT *(size_type, _CharT, const _Alloc &)' lvalue CXXMethod 0x8fd3240 '_S_construct_aux_2' '_CharT *(size_type, _CharT, const _Alloc &)')
      (CXXStaticCastExpr 0x8feca80 <col:37, col:65> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x8feca60 <col:60> '_Integer' lvalue ParmVar 0x8fd2ec0 '__beg' '_Integer'))
      (DeclRefExpr 0x8feca98 <line:1701:9> '_Integer' lvalue ParmVar 0x8fd2f00 '__end' '_Integer')
      (DeclRefExpr 0x8fecab0 <col:16> 'const _Alloc' lvalue ParmVar 0x8fd2f50 '__a' 'const _Alloc &'))))

;
        static _CharT *_S_construct_aux_2(size_type __req, _CharT __c, const _Alloc &__a) (CompoundStmt 0x8fecbd8 </usr/include/c++/4.6/bits/basic_string.h:1705:7, col:47>
  (ReturnStmt 0x8fecbc8 <col:9, col:44>
    (CallExpr 0x8fecba0 <col:16, col:44> '<dependent type>'
      (UnresolvedLookupExpr 0x8fecb18 <col:16> '<dependent type>' lvalue (no ADL) = '1' 0x8fd3b10 0x8fd39e0 0x8fd3750 0x8fd34c0)
      (DeclRefExpr 0x8fecb58 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd30f0 '__req' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x8fecb70 <col:36> '_CharT' lvalue ParmVar 0x8fd3130 '__c' '_CharT')
      (DeclRefExpr 0x8fecb88 <col:41> 'const _Alloc' lvalue ParmVar 0x8fd3180 '__a' 'const _Alloc &'))))


        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a) (CompoundStmt 0x8fece20 </usr/include/c++/4.6/bits/basic_string.h:1710:2, line:1713:9>
  (DeclStmt 0x8fecd20 <line:1711:4, col:69>
    0x8feccf0 "typedef typename std::__is_integer<_InIterator>::__type _Integral")
  (ReturnStmt 0x8fece10 <line:1712:4, col:58>
    (CallExpr 0x8fecde0 <col:11, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x8fecd30 <col:11> '<dependent type>' lvalue (no ADL) = '1' 0x8fd30b0 0x8fd2e20)
      (DeclRefExpr 0x8fecd68 <col:28> '_InIterator' lvalue ParmVar 0x8fd3310 '__beg' '_InIterator')
      (DeclRefExpr 0x8fecd80 <col:35> '_InIterator' lvalue ParmVar 0x8fd3350 '__end' '_InIterator')
      (DeclRefExpr 0x8fecd98 <col:42> 'const _Alloc' lvalue ParmVar 0x8fd33a0 '__a' 'const _Alloc &')
      (CXXUnresolvedConstructExpr 0x8fecdc8 <col:47, col:57> '_Integral':'typename std::__is_integer<_InIterator>::__type'))))

;
        template <class _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag);
        template <class _FwdIterator> static _CharT *_S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc &__a, std::forward_iterator_tag);
        static _CharT *_S_construct(size_type __req, _CharT __c, const _Alloc &__a);
    public:
    public:
        size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x8fdb808 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const;
        void swap(basic_string<_CharT, _Traits, _Alloc> &__s);
        const _CharT *c_str() const (CompoundStmt 0x8feceb8 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x8fecea8 <col:9, col:24>
    (CallExpr 0x8fece88 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x8fece48 <col:16> '<bound member function type>' lvalue))))


        const _CharT *data() const (CompoundStmt 0x8fecf50 </usr/include/c++/4.6/bits/basic_string.h:1776:7, col:27>
  (ReturnStmt 0x8fecf40 <col:9, col:24>
    (CallExpr 0x8fecf20 <col:16, col:24> '<dependent type>'
      (UnresolvedMemberExpr 0x8fecee0 <col:16> '<bound member function type>' lvalue))))


        allocator_type get_allocator() const (CompoundStmt 0x8fecfa8 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x8fecf98 <col:9, col:16>
    (MemberExpr 0x8fecf78 <col:16> 'struct std::basic_string::_Alloc_hider' lvalue ->_M_dataplus 0x8fbda00
      (CXXThisExpr 0x8fecf68 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))


        size_type find(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x8fdb820 </usr/include/c++/4.6/bits/basic_string.h:1810:57> 'int' 0)
) const (CompoundStmt 0x8fed138 </usr/include/c++/4.6/bits/basic_string.h:1811:7, col:63>
  (ReturnStmt 0x8fed128 <col:9, col:60>
    (CallExpr 0x8fed100 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fecfd0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fecfc0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fed058 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed020 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed004 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd4240 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8fed074 <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd4280 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed0e0 <col:48, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed0a8 <col:48, col:54> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed08c <col:48> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd4240 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find(const _CharT *__s, size_type __pos = (IntegerLiteral 0x8fdb838 </usr/include/c++/4.6/bits/basic_string.h:1824:49> 'int' 0)
) const (CompoundStmt 0x8fed2a0 </usr/include/c++/4.6/bits/basic_string.h:1825:7, line:1828:7>
  (NullStmt 0x8fed150 <line:1826:32>)
  (ReturnStmt 0x8fed290 <line:1827:2, col:56>
    (CallExpr 0x8fed268 <col:9, col:56> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed170 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed160 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fed1a4 <col:20> 'const _CharT *' lvalue ParmVar 0x8fd5370 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fed1bc <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd53b0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed248 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed1f8 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fed22c <col:52> 'const _CharT *' lvalue ParmVar 0x8fd5370 '__s' 'const _CharT *')))))


        size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x8fdb850 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const;
        size_type rfind(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x8fdb868 </usr/include/c++/4.6/bits/basic_string.h:1854:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fed430 </usr/include/c++/4.6/bits/basic_string.h:1855:7, col:64>
  (ReturnStmt 0x8fed420 <col:9, col:61>
    (CallExpr 0x8fed3f8 <col:16, col:61> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed2c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed2b8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fed350 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed318 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed2fc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5620 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8fed36c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd5660 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed3d8 <col:49, col:60> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed3a0 <col:49, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed384 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5620 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type rfind(const _CharT *__s, size_type __pos = (DeclRefExpr 0x8fdb880 </usr/include/c++/4.6/bits/basic_string.h:1882:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fed598 </usr/include/c++/4.6/bits/basic_string.h:1883:7, line:1886:7>
  (NullStmt 0x8fed448 <line:1884:32>)
  (ReturnStmt 0x8fed588 <line:1885:2, col:57>
    (CallExpr 0x8fed560 <col:9, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed468 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed458 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fed49c <col:21> 'const _CharT *' lvalue ParmVar 0x8fd58a0 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fed4b4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd58e0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed540 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed4f0 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fed524 <col:53> 'const _CharT *' lvalue ParmVar 0x8fd58a0 '__s' 'const _CharT *')))))


        size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x8fdb898 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        size_type find_first_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x8fdb8b0 </usr/include/c++/4.6/bits/basic_string.h:1912:66> 'int' 0)
) const (CompoundStmt 0x8fed728 </usr/include/c++/4.6/bits/basic_string.h:1913:7, col:72>
  (ReturnStmt 0x8fed718 <col:9, col:69>
    (CallExpr 0x8fed6f0 <col:16, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed5c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed5b0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fed648 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed610 <col:36, col:42> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed5f4 <col:36> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5ad0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8fed664 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd5b10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed6d0 <col:57, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed698 <col:57, col:63> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed67c <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5ad0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x8fdb8c8 </usr/include/c++/4.6/bits/basic_string.h:1940:58> 'int' 0)
) const (CompoundStmt 0x8fed890 </usr/include/c++/4.6/bits/basic_string.h:1941:7, line:1944:7>
  (NullStmt 0x8fed740 <line:1942:32>)
  (ReturnStmt 0x8fed880 <line:1943:2, col:65>
    (CallExpr 0x8fed858 <col:9, col:65> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed760 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed750 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fed794 <col:29> 'const _CharT *' lvalue ParmVar 0x8fd5d50 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fed7ac <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd5d90 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fed838 <col:41, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed7e8 <col:41, col:54> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fed81c <col:61> 'const _CharT *' lvalue ParmVar 0x8fd5d50 '__s' 'const _CharT *')))))


        size_type find_first_of(_CharT __c, size_type __pos = (IntegerLiteral 0x8fdb8e0 </usr/include/c++/4.6/bits/basic_string.h:1959:51> 'int' 0)
) const (CompoundStmt 0x8fed958 </usr/include/c++/4.6/bits/basic_string.h:1960:7, col:40>
  (ReturnStmt 0x8fed948 <col:9, col:37>
    (CallExpr 0x8fed920 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed8b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed8a8 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fed8ec <col:27> '_CharT' lvalue ParmVar 0x8fd5e60 '__c' '_CharT')
      (DeclRefExpr 0x8fed904 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd5ea0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_last_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x8fdb8f8 </usr/include/c++/4.6/bits/basic_string.h:1973:65> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fedae8 </usr/include/c++/4.6/bits/basic_string.h:1974:7, col:71>
  (ReturnStmt 0x8fedad8 <col:9, col:68>
    (CallExpr 0x8fedab0 <col:16, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fed980 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fed970 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8feda08 <col:35, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fed9d0 <col:35, col:41> '<dependent type>' lvalue
          (DeclRefExpr 0x8fed9b4 <col:35> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5f80 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8feda24 <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd5fc0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8feda90 <col:56, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8feda58 <col:56, col:62> '<dependent type>' lvalue
          (DeclRefExpr 0x8feda3c <col:56> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd5f80 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x8fdb910 </usr/include/c++/4.6/bits/basic_string.h:2001:57> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fedc50 </usr/include/c++/4.6/bits/basic_string.h:2002:7, line:2005:7>
  (NullStmt 0x8fedb00 <line:2003:32>)
  (ReturnStmt 0x8fedc40 <line:2004:2, col:64>
    (CallExpr 0x8fedc18 <col:9, col:64> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fedb20 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fedb10 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fedb54 <col:28> 'const _CharT *' lvalue ParmVar 0x8fd6200 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fedb6c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6240 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fedbf8 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fedba8 <col:40, col:53> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fedbdc <col:60> 'const _CharT *' lvalue ParmVar 0x8fd6200 '__s' 'const _CharT *')))))


        size_type find_last_of(_CharT __c, size_type __pos = (DeclRefExpr 0x8fdb928 </usr/include/c++/4.6/bits/basic_string.h:2020:50> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fedd18 </usr/include/c++/4.6/bits/basic_string.h:2021:7, col:41>
  (ReturnStmt 0x8fedd08 <col:9, col:38>
    (CallExpr 0x8fedce0 <col:16, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fedc78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fedc68 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fedcac <col:28> '_CharT' lvalue ParmVar 0x8fd6310 '__c' '_CharT')
      (DeclRefExpr 0x8fedcc4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6350 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))


        size_type find_first_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (IntegerLiteral 0x8fdb940 </usr/include/c++/4.6/bits/basic_string.h:2034:70> 'int' 0)
) const (CompoundStmt 0x8fedea8 </usr/include/c++/4.6/bits/basic_string.h:2035:7, col:76>
  (ReturnStmt 0x8fede98 <col:9, col:73>
    (CallExpr 0x8fede70 <col:16, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fedd40 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fedd30 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8feddc8 <col:40, col:51> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fedd90 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x8fedd74 <col:40> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd6430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8fedde4 <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6470 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fede50 <col:61, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fede18 <col:61, col:67> '<dependent type>' lvalue
          (DeclRefExpr 0x8feddfc <col:61> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd6430 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const _CharT *__s, size_type __pos = (IntegerLiteral 0x8fdb958 </usr/include/c++/4.6/bits/basic_string.h:2063:62> 'int' 0)
) const (CompoundStmt 0x8fee010 </usr/include/c++/4.6/bits/basic_string.h:2064:7, line:2067:7>
  (NullStmt 0x8fedec0 <line:2065:32>)
  (ReturnStmt 0x8fee000 <line:2066:2, col:69>
    (CallExpr 0x8fedfd8 <col:9, col:69> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fedee0 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8feded0 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fedf14 <col:33> 'const _CharT *' lvalue ParmVar 0x8fd66b0 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fedf2c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd66f0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fedfb8 <col:45, col:68> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fedf68 <col:45, col:58> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fedf9c <col:65> 'const _CharT *' lvalue ParmVar 0x8fd66b0 '__s' 'const _CharT *')))))


        size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x8fdb970 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const;
        size_type find_last_not_of(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos = (DeclRefExpr 0x8fdb988 </usr/include/c++/4.6/bits/basic_string.h:2093:69> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fee1a0 </usr/include/c++/4.6/bits/basic_string.h:2094:7, col:75>
  (ReturnStmt 0x8fee190 <col:9, col:72>
    (CallExpr 0x8fee168 <col:16, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fee038 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8fee028 <col:16> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fee0c0 <col:39, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee088 <col:39, col:45> '<dependent type>' lvalue
          (DeclRefExpr 0x8fee06c <col:39> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd68e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (DeclRefExpr 0x8fee0dc <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6920 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fee148 <col:60, col:71> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee110 <col:60, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x8fee0f4 <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd68e0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))


        size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const _CharT *__s, size_type __pos = (DeclRefExpr 0x8fdb9a0 </usr/include/c++/4.6/bits/basic_string.h:2122:61> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fee308 </usr/include/c++/4.6/bits/basic_string.h:2123:7, line:2126:7>
  (NullStmt 0x8fee1b8 <line:2124:32>)
  (ReturnStmt 0x8fee2f8 <line:2125:2, col:68>
    (CallExpr 0x8fee2d0 <col:9, col:68> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8fee1d8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x8fee1c8 <col:9> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x8fee20c <col:32> 'const _CharT *' lvalue ParmVar 0x8fd6b60 '__s' 'const _CharT *')
      (DeclRefExpr 0x8fee224 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6ba0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x8fee2b0 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee260 <col:44, col:57> '<dependent type>' lvalue)
        (DeclRefExpr 0x8fee294 <col:64> 'const _CharT *' lvalue ParmVar 0x8fd6b60 '__s' 'const _CharT *')))))


        size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x8fdb9b8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const;
        basic_string<_CharT, _Traits, _Alloc> substr(size_type __pos = (IntegerLiteral 0x8fdb9d0 </usr/include/c++/4.6/bits/basic_string.h:2154:32> 'int' 0)
, size_type __n = (DeclRefExpr 0x8fdb9e8 </usr/include/c++/4.6/bits/basic_string.h:2154:51> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x8fee440 </usr/include/c++/4.6/bits/basic_string.h:2155:7, line:2156:55>
  (ReturnStmt 0x8fee430 <line:2155:9, line:2156:52>
    (CXXUnresolvedConstructExpr 0x8fee408 <line:2155:16, line:2156:52> 'basic_string<_CharT, _Traits, _Alloc>'
      (UnaryOperator 0x8fee338 <line:2155:29, col:30> '<dependent type>' prefix '*'
        (CXXThisExpr 0x8fee328 <col:30> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (CallExpr 0x8fee3c8 <line:2156:8, col:46> '<dependent type>'
        (MemberExpr 0x8fee360 <col:8> '<bound member function type>' ->_M_check 0x8fbdf40
          (CXXThisExpr 0x8fee350 <col:8> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x8fee380 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6d80 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x8fee398 <col:24> 'const char [21]' lvalue "basic_string::substr"))
      (DeclRefExpr 0x8fee3ec <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x8fd6dc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))))


        int compare(const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x8fee9e8 </usr/include/c++/4.6/bits/basic_string.h:2173:7, line:2182:7>
  (DeclStmt 0x8fee500 <line:2174:2, col:39>
    0x8fee460 "const size_type __size =
      (CallExpr 0x8fee4e0 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee4a8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x8fee498 <col:27> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x8fee5c8 <line:2175:2, col:40>
    0x8fee520 "const size_type __osize =
      (CallExpr 0x8fee5a8 <col:28, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee570 <col:28, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x8fee554 <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd6ee0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x8fee6c0 <line:2176:2, col:51>
    0x8fee5e0 "const size_type __len =
      (CallExpr 0x8fee698 <col:26, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8fee630 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x8fee668 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fee460 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fee680 <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fee520 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x8fee890 <line:2178:2, col:64>
    0x8fee6e0 "int __r =
      (CallExpr 0x8fee868 <col:12, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8fee738 <col:12, col:25> '<dependent type>' lvalue)
        (CallExpr 0x8fee7c0 <col:33, col:41> '<dependent type>'
          (UnresolvedMemberExpr 0x8fee780 <col:33> '<bound member function type>' lvalue))
        (CallExpr 0x8fee830 <col:44, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8fee7f8 <col:44, col:50> '<dependent type>' lvalue
            (DeclRefExpr 0x8fee7dc <col:44> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8fd6ee0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x8fee84c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fee5e0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x8fee990 <line:2179:2, line:2180:36>
    <<<NULL>>>
    (UnaryOperator 0x8fee8d8 <line:2179:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x8fee8c8 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x8fee8b8 <col:7> 'int' <LValueToRValue>
          (DeclRefExpr 0x8fee8a0 <col:7> 'int' lvalue Var 0x8fee6e0 '__r' 'int'))))
    (BinaryOperator 0x8fee978 <line:2180:4, col:36> '<dependent type>' '='
      (DeclRefExpr 0x8fee8ec <col:4> 'int' lvalue Var 0x8fee6e0 '__r' 'int')
      (CallExpr 0x8fee950 <col:10, col:36> '<dependent type>'
        (DeclRefExpr 0x8fee904 <col:10> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x8fee91c <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fee460 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x8fee934 <col:29> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fee520 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x8fee9d8 <line:2181:2, col:9>
    (ImplicitCastExpr 0x8fee9c8 <col:9> 'int' <LValueToRValue>
      (DeclRefExpr 0x8fee9ac <col:9> 'int' lvalue Var 0x8fee6e0 '__r' 'int'))))


        int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const;
        int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const;
        int compare(const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s) const;
        int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const;
    };
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff22b0 </usr/include/c++/4.6/bits/basic_string.h:2307:5, line:2311:5>
  (DeclStmt 0x8fef2c0 <line:2308:7, col:57>
    0x8fef250 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x8fef2a0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x8fef284 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8feedd0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x8fef338 <line:2309:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8fef2e8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x8fef2d0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8fef250 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x8fef31c <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8feef80 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x8fef370 <line:2310:7, col:14>
    (DeclRefExpr 0x8fef358 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8fef250 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs);
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff35a0 </usr/include/c++/4.6/bits/basic_string.h:2344:5, line:2348:5>
  (DeclStmt 0x8ff34e0 <line:2345:7, col:57>
    0x8ff3470 "basic_string<_CharT, _Traits, _Alloc> __str =
      (ParenListExpr 0x8ff34c0 <col:50, col:56> 'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x8ff34a4 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff3130 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x8ff3558 <line:2346:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8ff3508 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x8ff34f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8ff3470 '__str' 'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x8ff353c <col:20> 'const _CharT *' lvalue ParmVar 0x8ff31a0 '__rhs' 'const _CharT *'))
  (ReturnStmt 0x8ff3590 <line:2347:7, col:14>
    (DeclRefExpr 0x8ff3578 <col:14> 'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8ff3470 '__str' 'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline basic_string<_CharT, _Traits, _Alloc> operator+(const basic_string<_CharT, _Traits, _Alloc> &__lhs, _CharT __rhs) (CompoundStmt 0x8ff3f38 </usr/include/c++/4.6/bits/basic_string.h:2359:5, line:2365:5>
  (DeclStmt 0x8ff3ca0 <line:2360:7, col:66>
    0x8ff3c70 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x8ff3d90 <line:2361:7, col:61>
    0x8ff3d60 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x8ff3e20 <line:2362:7, col:33>
    0x8ff3db0 "__string_type __str =
      (ParenListExpr 0x8ff3e00 <col:26, col:32> '__string_type':'basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x8ff3de4 <col:27> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff3960 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))")
  (CallExpr 0x8ff3ee8 <line:2363:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8ff3e48 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x8ff3e30 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8ff3db0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x8ff3eb0 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x8ff3e98 <col:32> 'int' 1))
    (DeclRefExpr 0x8ff3ecc <col:36> '_CharT' lvalue ParmVar 0x8ff39a0 '__rhs' '_CharT'))
  (ReturnStmt 0x8ff3f28 <line:2364:7, col:14>
    (DeclRefExpr 0x8ff3f0c <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x8ff3db0 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff45e8 </usr/include/c++/4.6/bits/basic_string.h:2428:5, col:41>
  (ReturnStmt 0x8ff45d8 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ff45b0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff4560 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (CallExpr 0x8ff4528 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff44d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff44c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff41e0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff450c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff4390 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x8ff4548 <col:38> 'int' 0))))

;
    template <typename _CharT> inline typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type operator==(const basic_string<_CharT> &__lhs, const basic_string<_CharT> &__rhs) (CompoundStmt 0x8ff5348 </usr/include/c++/4.6/bits/basic_string.h:2435:5, line:2437:27>
  (ReturnStmt 0x8ff5338 <line:2435:7, line:2437:24>
    (ParenExpr 0x8ff5320 <line:2435:14, line:2437:24> '<dependent type>'
      (BinaryOperator 0x8ff5308 <line:2435:15, line:2437:23> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x8ff5060 <line:2435:15, col:42> '<dependent type>'
          (UnresolvedLookupExpr 0x8ff5010 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
          (CallExpr 0x8ff4f80 <col:15, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8ff4f48 <col:15, col:21> '<dependent type>' lvalue
              (DeclRefExpr 0x8ff4f30 <col:15> 'const basic_string<_CharT>' lvalue ParmVar 0x8ff4ba0 '__lhs' 'const basic_string<_CharT> &')))
          (CallExpr 0x8ff4ff0 <col:31, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8ff4fb8 <col:31, col:37> '<dependent type>' lvalue
              (DeclRefExpr 0x8ff4f9c <col:31> 'const basic_string<_CharT>' lvalue ParmVar 0x8ff4df0 '__rhs' 'const basic_string<_CharT> &'))))
        (UnaryOperator 0x8ff52f0 <line:2436:11, line:2437:23> '<dependent type>' prefix '!'
          (CallExpr 0x8ff52c8 <line:2436:12, line:2437:23> '<dependent type>'
            (DependentScopeDeclRefExpr 0x8ff5150 <line:2436:12, col:38> '<dependent type>' lvalue)
            (CallExpr 0x8ff51c8 <col:46, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8ff5190 <col:46, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x8ff5174 <col:46> 'const basic_string<_CharT>' lvalue ParmVar 0x8ff4ba0 '__lhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x8ff5238 <col:60, col:71> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8ff5200 <col:60, col:66> '<dependent type>' lvalue
                (DeclRefExpr 0x8ff51e4 <col:60> 'const basic_string<_CharT>' lvalue ParmVar 0x8ff4df0 '__rhs' 'const basic_string<_CharT> &')))
            (CallExpr 0x8ff52a8 <line:2437:11, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8ff5270 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x8ff5254 <col:11> 'const basic_string<_CharT>' lvalue ParmVar 0x8ff4ba0 '__lhs' 'const basic_string<_CharT> &')))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff58a0 </usr/include/c++/4.6/bits/basic_string.h:2449:5, col:41>
  (ReturnStmt 0x8ff5890 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ff5868 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff5810 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff5740 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (CallExpr 0x8ff57d8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff5788 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff5770 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff5640 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff57bc <col:28> 'const _CharT *' lvalue ParmVar 0x8ff5490 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff57f8 <col:38> 'int' 0))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline bool operator==(const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__lhs, const wchar_t *__rhs) (CompoundStmt 0x9300f68 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x9300f58 <col:7, col:38>
    (BinaryOperator 0x9300f40 <col:14, col:38> '_Bool' '=='
      (CXXMemberCallExpr 0x9300f10 <col:14, col:33> 'int'
        (MemberExpr 0x9300ef0 <col:14, col:20> '<bound member function type>' .compare 0x9078ed0
          (DeclRefExpr 0x9300e70 <col:14> 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6460 '__lhs' 'const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &'))
        (ImplicitCastExpr 0x9300f30 <col:28> 'const wchar_t *' <LValueToRValue>
          (DeclRefExpr 0x9300ed8 <col:28> 'const wchar_t *' lvalue ParmVar 0x92f64d0 '__rhs' 'const wchar_t *')))
      (IntegerLiteral 0x8ff5d68 <col:38> 'int' 0))))

template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator==(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff5e10 </usr/include/c++/4.6/bits/basic_string.h:2461:5, col:41>
  (ReturnStmt 0x8ff5e00 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ff5dd8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff5d80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff5cb0 0x8ff5740 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
      (CallExpr 0x8ff5d48 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff5cf8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff5ce0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff5b40 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff5d2c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff5bb0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff5d68 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff6480 </usr/include/c++/4.6/bits/basic_string.h:2474:5, col:33>
  (ReturnStmt 0x8ff6470 <col:7, col:30>
    (UnaryOperator 0x8ff6458 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x8ff6440 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x8ff6418 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x8ff63c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff5cb0 0x8ff5740 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
          (DeclRefExpr 0x8ff6390 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff60b0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x8ff63a8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff6260 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff6980 </usr/include/c++/4.6/bits/basic_string.h:2486:5, col:33>
  (ReturnStmt 0x8ff6970 <col:7, col:30>
    (UnaryOperator 0x8ff6958 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x8ff6940 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x8ff6918 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x8ff68c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff5cb0 0x8ff5740 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
          (DeclRefExpr 0x8ff6890 <col:16> 'const _CharT *' lvalue ParmVar 0x8ff65d0 '__lhs' 'const _CharT *')
          (DeclRefExpr 0x8ff68a8 <col:25> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff6780 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator!=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff6e90 </usr/include/c++/4.6/bits/basic_string.h:2498:5, col:33>
  (ReturnStmt 0x8ff6e80 <col:7, col:30>
    (UnaryOperator 0x8ff6e68 <col:14, col:30> '<dependent type>' prefix '!'
      (ParenExpr 0x8ff6e50 <col:15, col:30> '<dependent type>'
        (CXXOperatorCallExpr 0x8ff6e28 <col:16, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x8ff6dd0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff5cb0 0x8ff5740 0x8ff4f00 0x8ff4490 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880)
          (DeclRefExpr 0x8ff6da0 <col:16> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff6c20 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &')
          (DeclRefExpr 0x8ff6db8 <col:25> 'const _CharT *' lvalue ParmVar 0x8ff6c90 '__rhs' 'const _CharT *'))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff7508 </usr/include/c++/4.6/bits/basic_string.h:2511:5, col:40>
  (ReturnStmt 0x8ff74f8 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff74d0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff7490 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff73c0 0x8e43200 0x8e59d50 0x8e5d4c0)
      (CallExpr 0x8ff7458 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff7408 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff73f0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff7130 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff743c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff72e0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x8ff7478 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff7a40 </usr/include/c++/4.6/bits/basic_string.h:2523:5, col:40>
  (ReturnStmt 0x8ff7a30 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff7a08 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff79c0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff78f0 0x8ff73c0 0x8e43200 0x8e59d50 0x8e5d4c0)
      (CallExpr 0x8ff7988 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff7938 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff7920 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff77a0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff796c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff7810 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff79a8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff7f68 </usr/include/c++/4.6/bits/basic_string.h:2535:5, col:40>
  (ReturnStmt 0x8ff7f58 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff7f30 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff7ef0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40)
      (CallExpr 0x8ff7eb8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff7e68 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff7e50 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff7d40 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff7e9c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff7b90 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff7ed8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff85d8 </usr/include/c++/4.6/bits/basic_string.h:2548:5, col:40>
  (ReturnStmt 0x8ff85c8 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff85a0 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff8560 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff8490 0x8e45380 0x8e5b6d0 0x8e5de40)
      (CallExpr 0x8ff8528 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff84d8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff84c0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff8200 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff850c <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff83b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x8ff8548 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff8b10 </usr/include/c++/4.6/bits/basic_string.h:2560:5, col:40>
  (ReturnStmt 0x8ff8b00 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff8ad8 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff8a90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff89c0 0x8ff8490 0x8e45380 0x8e5b6d0 0x8e5de40)
      (CallExpr 0x8ff8a58 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff8a08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff89f0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff8870 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff8a3c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff88e0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff8a78 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff9040 </usr/include/c++/4.6/bits/basic_string.h:2572:5, col:40>
  (ReturnStmt 0x8ff9030 <col:7, col:37>
    (CXXOperatorCallExpr 0x8ff9008 <col:14, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff8fc0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff7e20 0x8ff78f0 0x8ff73c0 0x8e43200 0x8e59d50 0x8e5d4c0)
      (CallExpr 0x8ff8f88 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff8f38 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff8f20 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff8e10 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff8f6c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff8c60 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff8fa8 <col:37> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ff96b8 </usr/include/c++/4.6/bits/basic_string.h:2585:5, col:41>
  (ReturnStmt 0x8ff96a8 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ff9680 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff9640 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff9570 0x8e458a0 0x8e5bac0 0x8e5e8c0)
      (CallExpr 0x8ff9608 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff95b8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff95a0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff92e0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff95ec <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff9490 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x8ff9628 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ff9bf0 </usr/include/c++/4.6/bits/basic_string.h:2597:5, col:41>
  (ReturnStmt 0x8ff9be0 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ff9bb8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ff9b70 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff9aa0 0x8ff9570 0x8e458a0 0x8e5bac0 0x8e5e8c0)
      (CallExpr 0x8ff9b38 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ff9ae8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ff9ad0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff9950 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ff9b1c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff99c0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x8ff9b58 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator<=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ffa118 </usr/include/c++/4.6/bits/basic_string.h:2609:5, col:41>
  (ReturnStmt 0x8ffa108 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ffa0e0 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffa0a0 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (CallExpr 0x8ffa068 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffa018 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffa000 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ff9ef0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ffa04c <col:28> 'const _CharT *' lvalue ParmVar 0x8ff9d40 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x8ffa088 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ffa798 </usr/include/c++/4.6/bits/basic_string.h:2622:5, col:41>
  (ReturnStmt 0x8ffa788 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ffa760 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffa720 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ffa650 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (CallExpr 0x8ffa6e8 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffa698 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffa680 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffa3c0 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ffa6cc <col:28> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffa570 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (IntegerLiteral 0x8ffa708 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const basic_string<_CharT, _Traits, _Alloc> &__lhs, const _CharT *__rhs) (CompoundStmt 0x8ffacd0 </usr/include/c++/4.6/bits/basic_string.h:2634:5, col:41>
  (ReturnStmt 0x8ffacc0 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ffac98 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffac50 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ffab80 0x8ffa650 0x8e45df0 0x8e5bee0 0x8e5ed40)
      (CallExpr 0x8ffac18 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffabc8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffabb0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffaa30 '__lhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ffabfc <col:28> 'const _CharT *' lvalue ParmVar 0x8ffaaa0 '__rhs' 'const _CharT *'))
      (IntegerLiteral 0x8ffac38 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline bool operator>=(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ffb200 </usr/include/c++/4.6/bits/basic_string.h:2646:5, col:41>
  (ReturnStmt 0x8ffb1f0 <col:7, col:38>
    (CXXOperatorCallExpr 0x8ffb1c8 <col:14, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffb180 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8ff9fd0 0x8ff9aa0 0x8ff9570 0x8e458a0 0x8e5bac0 0x8e5e8c0)
      (CallExpr 0x8ffb148 <col:14, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffb0f8 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffb0e0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffafd0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x8ffb12c <col:28> 'const _CharT *' lvalue ParmVar 0x8ffae20 '__lhs' 'const _CharT *'))
      (IntegerLiteral 0x8ffb168 <col:38> 'int' 0))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> inline void swap(basic_string<_CharT, _Traits, _Alloc> &__lhs, basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x8ffb828 </usr/include/c++/4.6/bits/basic_string.h:2659:5, col:26>
  (CallExpr 0x8ffb808 <col:7, col:23> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8ffb7b8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x8ffb7a0 <col:7> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffb4c0 '__lhs' 'basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x8ffb7ec <col:18> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffb670 '__rhs' 'basic_string<_CharT, _Traits, _Alloc> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str);
    basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os, const basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__os, const basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__os, const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8ffd008 </usr/include/c++/4.6/bits/basic_string.h:2694:5, line:2698:5>
  (ReturnStmt 0x8ffcff8 <line:2697:7, col:63>
    (CallExpr 0x8ffcfd0 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffcea0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
      (DeclRefExpr 0x8ffced4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x8ffcb70 '__os' 'basic_ostream<_CharT, _Traits> &')
      (CallExpr 0x8ffcf40 <col:37, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffcf08 <col:37, col:43> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffceec <col:37> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffcd20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x8ffcfb0 <col:51, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffcf78 <col:51, col:57> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffcf5c <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffcd20 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> inline basic_istream<wchar_t, std::char_traits<wchar_t> > &getline(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> inline basic_istream<char, std::char_traits<char> > &getline(basic_istream<char, std::char_traits<char> > &__is, basic_string<char, std::char_traits<char>, std::allocator<char> > &__str)template <typename _CharT, typename _Traits, typename _Alloc> inline basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__is, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x8ffde18 </usr/include/c++/4.6/bits/basic_string.h:2735:5, col:54>
  (ReturnStmt 0x8ffde08 <col:7, col:51>
    (CallExpr 0x8ffdde0 <col:14, col:51> '<dependent type>'
      (UnresolvedLookupExpr 0x8ffdcf0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x8ffdcc0 0x8ffd690)
      (DeclRefExpr 0x8ffdd28 <col:22> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x8ffd9e0 '__is' 'basic_istream<_CharT, _Traits> &')
      (DeclRefExpr 0x8ffdd40 <col:28> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x8ffdb90 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
      (CallExpr 0x8ffddc0 <col:35, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8ffdd70 <col:35, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x8ffdd58 <col:35> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x8ffd9e0 '__is' 'basic_istream<_CharT, _Traits> &'))
        (CharacterLiteral 0x8ffdda8 <col:46> 'char'10)))))

;
    basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim);
    basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim);
}
extern long __builtin_expect(long, long);
namespace std {
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_max_size = (BinaryOperator 0x8fffc30 </usr/include/c++/4.6/bits/basic_string.tcc:52:25, col:77> '<dependent type>' '/'
  (ParenExpr 0x8fffc00 <col:25, col:73> '<dependent type>'
    (CXXOperatorCallExpr 0x8fffbd8 <col:26, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x8fffba0 <col:70, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (ParenExpr 0x8fffb70 <col:26, col:68> '<dependent type>'
        (BinaryOperator 0x8fffb58 <col:27, col:67> '<dependent type>' '/'
          (ParenExpr 0x8fffb20 <col:27, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x8fffaf8 <col:28, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x8fffac0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x8fffa88 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (UnaryExprOrTypeTraitExpr 0x8fffaa8 <col:35, col:51> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')))
          (UnaryExprOrTypeTraitExpr 0x8fffb40 <col:54, col:67> 'unsigned int' sizeof '_CharT')))
      (IntegerLiteral 0x8fffb88 <col:72> 'int' 1)))
  (IntegerLiteral 0x8fffc18 <col:77> 'int' 4))
;
    static const _CharT _S_terminal = (CXXUnresolvedConstructExpr 0x9000080 </usr/include/c++/4.6/bits/basic_string.tcc:57:25, col:32> '_CharT')
;
    static const typename basic_string<_CharT, _Traits, _Alloc>::size_type npos;
    static typename basic_string<_CharT, _Traits, _Alloc>::size_type _S_empty_rep_storage[(sizeof(std::basic_string::_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) / sizeof(size_type)];
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::input_iterator_tag) (CompoundStmt 0x9002818 </usr/include/c++/4.6/bits/basic_string.tcc:81:7, line:119:7>
  (IfStmt 0x9001860 <line:83:2, line:84:37>
    <<<NULL>>>
    (BinaryOperator 0x90017a8 <line:83:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x90016c8 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9001670 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x900163c <col:6> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')
        (DeclRefExpr 0x9001654 <col:15> '_InIterator' lvalue ParmVar 0x90013d0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9001780 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9001728 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x90016ec <col:24> 'const _Alloc' lvalue ParmVar 0x9001440 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9001710 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x9001850 <line:84:4, col:37>
      (CallExpr 0x9001830 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90017f8 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x90017d8 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x90017c0 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbf650 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9001938 <line:87:2, col:19>
    0x9001900 "_CharT __buf[128]")
  (DeclStmt 0x90019a0 <line:88:2, col:21>
    0x9001950 "size_type __len =
      (IntegerLiteral 0x9001988 <col:20> 'int' 0)")
  (WhileStmt 0x9001c88 <line:89:2, line:93:4>
    <<<NULL>>>
    (BinaryOperator 0x9001b68 <line:89:9, col:64> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9001a38 <col:9, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x90019e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
        (DeclRefExpr 0x90019b0 <col:9> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')
        (DeclRefExpr 0x90019c8 <col:18> '_InIterator' lvalue ParmVar 0x90013d0 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9001b40 <col:27, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9001af8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (DeclRefExpr 0x9001a5c <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9001ae0 <col:35, col:64> 'unsigned int' '/'
          (UnaryExprOrTypeTraitExpr 0x9001aa8 <col:35, col:47> 'unsigned int' sizeof 
            (ParenExpr 0x9001a90 <col:41, col:47> '_CharT [128]' lvalue
              (DeclRefExpr 0x9001a74 <col:42> '_CharT [128]' lvalue Var 0x9001900 '__buf' '_CharT [128]')))
          (UnaryExprOrTypeTraitExpr 0x9001ac8 <col:51, col:64> 'unsigned int' sizeof '_CharT'))))
    (CompoundStmt 0x9001c70 <line:90:4, line:93:4>
      (BinaryOperator 0x9001c28 <line:91:6, col:24> '<dependent type>' '='
        (ArraySubscriptExpr 0x9001be0 <col:6, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x9001b80 <col:6> '_CharT [128]' lvalue Var 0x9001900 '__buf' '_CharT [128]')
          (UnaryOperator 0x9001bc8 <col:12, col:17> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9001b98 <col:12> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x9001c10 <col:23, col:24> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9001bf4 <col:24> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')))
      (UnaryOperator 0x9001c58 <line:92:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x9001c40 <col:8> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator'))))
  (DeclStmt 0x9001dc8 <line:94:2, col:55>
    0x9001cb0 "std::basic_string::_Rep *__r =
      (CallExpr 0x9001da0 <col:14, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9001d08 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x9001d2c <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9001d68 <col:37, col:48> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9001d50 <col:47> 'int' 0))
        (DeclRefExpr 0x9001d84 <col:51> 'const _Alloc' lvalue ParmVar 0x9001440 '__a' 'const _Alloc &'))")
  (CallExpr 0x9001e90 <line:95:2, col:41> '<dependent type>'
    (DeclRefExpr 0x9001dd8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
    (CallExpr 0x9001e40 <col:10, col:26> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9001e08 <col:10, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x9001df0 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')))
    (DeclRefExpr 0x9001e5c <col:29> '_CharT [128]' lvalue Var 0x9001900 '__buf' '_CharT [128]')
    (DeclRefExpr 0x9001e74 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x9002610 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:111:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9001eb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x90025f8 </usr/include/c++/4.6/bits/basic_string.tcc:97:4, line:111:4>
      (WhileStmt 0x90025e0 <line:98:6, line:110:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9001f50 <line:98:13, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9001ef8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
          (DeclRefExpr 0x9001ec8 <col:13> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')
          (DeclRefExpr 0x9001ee0 <col:22> '_InIterator' lvalue ParmVar 0x90013d0 '__end' '_InIterator'))
        (CompoundStmt 0x90025c0 <line:99:8, line:110:8>
          (IfStmt 0x9002458 <line:100:3, line:107:5>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9002038 <line:100:7, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x9001fe0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
              (DeclRefExpr 0x9001f74 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXDependentScopeMemberExpr 0x9001fa8 <col:16, col:21> '<dependent type>' lvalue
                (DeclRefExpr 0x9001f8c <col:16> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')))
            (CompoundStmt 0x9002438 <line:101:5, line:107:5>
              (DeclStmt 0x90021e8 <line:103:7, col:63>
                0x9002070 "std::basic_string::_Rep *__another =
                  (CallExpr 0x90021c0 <col:25, col:62> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x90020c8 <col:25, col:31> '<dependent type>' lvalue)
                    (CXXOperatorCallExpr 0x9002168 <col:41, col:49> '<dependent type>'
                      (UnresolvedLookupExpr 0x9002120 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                      (DeclRefExpr 0x90020ec <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                      (IntegerLiteral 0x9002108 <col:49> 'int' 1))
                    (DeclRefExpr 0x900218c <col:52> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')
                    (DeclRefExpr 0x90021a4 <col:59> 'const _Alloc' lvalue ParmVar 0x9001440 '__a' 'const _Alloc &'))")
              (CallExpr 0x9002340 <line:104:7, col:64> '<dependent type>'
                (DeclRefExpr 0x90021f8 <col:7> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
                (CallExpr 0x9002260 <col:15, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9002228 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x9002210 <col:15> 'struct std::basic_string::_Rep *' lvalue Var 0x9002070 '__another' 'struct std::basic_string::_Rep *')))
                (CallExpr 0x9002308 <col:40, col:56> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x90022d0 <col:40, col:45> '<dependent type>' lvalue
                    (DeclRefExpr 0x900227c <col:40> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')))
                (DeclRefExpr 0x9002324 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CallExpr 0x90023d0 <line:105:7, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9002380 <col:7, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x9002368 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *'))
                (DeclRefExpr 0x90023b4 <col:23> 'const _Alloc' lvalue ParmVar 0x9001440 '__a' 'const _Alloc &'))
              (BinaryOperator 0x9002420 <line:106:7, col:13> '<dependent type>' '='
                (DeclRefExpr 0x90023f0 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')
                (DeclRefExpr 0x9002408 <col:13> 'struct std::basic_string::_Rep *' lvalue Var 0x9002070 '__another' 'struct std::basic_string::_Rep *')))
            <<<NULL>>>)
          (BinaryOperator 0x9002578 <line:108:3, col:33> '<dependent type>' '='
            (ArraySubscriptExpr 0x9002530 <col:3, col:28> '<dependent type>' lvalue
              (CallExpr 0x90024c8 <col:3, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9002490 <col:3, col:8> '<dependent type>' lvalue
                  (DeclRefExpr 0x9002474 <col:3> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')))
              (UnaryOperator 0x9002518 <col:21, col:26> '<dependent type>' postfix '++'
                (DeclRefExpr 0x90024e4 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type')))
            (UnaryOperator 0x9002560 <col:32, col:33> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9002544 <col:33> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')))
          (UnaryOperator 0x90025a8 <line:109:3, col:5> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9002590 <col:5> '_InIterator' lvalue ParmVar 0x9001390 '__beg' '_InIterator')))))
    <<<NULL>>>)
  (IfStmt 0x90026f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:116:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9002630 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x90026d8 </usr/include/c++/4.6/bits/basic_string.tcc:113:4, line:116:4>
      (CallExpr 0x90026a8 <line:114:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9002658 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9002640 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x900268c <col:22> 'const _Alloc' lvalue ParmVar 0x9001440 '__a' 'const _Alloc &'))
      (NullStmt 0x90026c8 <line:115:29>))
    <<<NULL>>>)
  (CallExpr 0x9002778 <line:117:2, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9002728 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x900270c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x900275c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9001950 '__len' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9002808 <line:118:2, col:25>
    (CallExpr 0x90027e8 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90027b0 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x9002798 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x9001cb0 '__r' 'struct std::basic_string::_Rep *')))))

;
    template <typename _InIterator> static _CharT *_S_construct(_InIterator __beg, _InIterator __end, const _Alloc &__a, std::forward_iterator_tag) (CompoundStmt 0x9003948 </usr/include/c++/4.6/bits/basic_string.tcc:127:7, line:149:7>
  (IfStmt 0x90030e0 <line:129:2, line:130:37>
    <<<NULL>>>
    (BinaryOperator 0x9003028 <line:129:6, col:38> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9002f48 <col:6, col:15> '<dependent type>'
        (UnresolvedLookupExpr 0x9002ef0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x9002ebc <col:6> '_InIterator' lvalue ParmVar 0x9002c10 '__beg' '_InIterator')
        (DeclRefExpr 0x9002ed4 <col:15> '_InIterator' lvalue ParmVar 0x9002c50 '__end' '_InIterator'))
      (CXXOperatorCallExpr 0x9003000 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x9002fa8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x9002f6c <col:24> 'const _Alloc' lvalue ParmVar 0x9002cc0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9002f90 <col:31, col:38> '_Alloc')))
    (ReturnStmt 0x90030d0 <line:130:4, col:37>
      (CallExpr 0x90030b0 <col:11, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9003078 <col:11, col:26> '<dependent type>' lvalue
          (CallExpr 0x9003058 <col:11, col:24> '<dependent type>'
            (DeclRefExpr 0x9003040 <col:11> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbf650 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (IfStmt 0x9003388 <line:133:2, line:134:72>
    <<<NULL>>>
    (BinaryOperator 0x9003240 <line:133:6, col:54> '<dependent type>' '&&'
      (CallExpr 0x9003170 <col:6, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9003120 <col:6, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e2ed00 0x8e2ef00)
        (DeclRefExpr 0x9003158 <col:35> '_InIterator' lvalue ParmVar 0x9002c10 '__beg' '_InIterator'))
      (CXXOperatorCallExpr 0x9003218 <col:45, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x90031c0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
        (DeclRefExpr 0x9003190 <col:45> '_InIterator' lvalue ParmVar 0x9002c10 '__beg' '_InIterator')
        (DeclRefExpr 0x90031a8 <col:54> '_InIterator' lvalue ParmVar 0x9002c50 '__end' '_InIterator')))
    (CallExpr 0x9003358 <line:134:4, col:72> 'void'
      (ImplicitCastExpr 0x9003348 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x900332c <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e0f140 '__throw_logic_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9003378 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9003318 <col:24, col:30> 'const char [42]' lvalue
          (StringLiteral 0x90032d0 </usr/include/c++/4.6/bits/basic_string.tcc:134:28> 'const char [42]' lvalue "basic_string::_S_construct null not valid"))))
    <<<NULL>>>)
  (DeclStmt 0x90034b8 <line:136:2, line:137:22>
    0x90033b0 "const size_type __dnew =
      (CXXStaticCastExpr 0x90034a0 <line:136:27, line:137:21> 'size_type':'typename _CharT_alloc_type::size_type' static_cast<size_type> <Dependent>
        (CallExpr 0x9003470 <line:136:50, line:137:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9003408 <line:136:50, col:55> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
          (DeclRefExpr 0x900343c <col:64> '_InIterator' lvalue ParmVar 0x9002c10 '__beg' '_InIterator')
          (DeclRefExpr 0x9003454 <line:137:15> '_InIterator' lvalue ParmVar 0x9002c50 '__end' '_InIterator')))")
  (DeclStmt 0x90035f8 <line:139:2, col:56>
    0x90034e0 "std::basic_string::_Rep *__r =
      (CallExpr 0x90035d0 <col:14, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9003538 <col:14, col:20> '<dependent type>' lvalue)
        (DeclRefExpr 0x900355c <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90033b0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9003598 <col:38, col:49> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9003580 <col:48> 'int' 0))
        (DeclRefExpr 0x90035b4 <col:52> 'const _Alloc' lvalue ParmVar 0x9002cc0 '__a' 'const _Alloc &'))")
  (IfStmt 0x9003740 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:141:54>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9003608 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9003728 </usr/include/c++/4.6/bits/basic_string.tcc:141:4, col:54>
      (CallExpr 0x9003700 <col:6, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9003618 <col:6> '<dependent type>' lvalue (no ADL) = '1' 0x8fbeb20 0x8fbecb0 0x8fbee70 0x8fbf050 0x8fbf230)
        (CallExpr 0x90036b0 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9003678 <col:20, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x900365c <col:20> 'struct std::basic_string::_Rep *' lvalue Var 0x90034e0 '__r' 'struct std::basic_string::_Rep *')))
        (DeclRefExpr 0x90036cc <col:39> '_InIterator' lvalue ParmVar 0x9002c10 '__beg' '_InIterator')
        (DeclRefExpr 0x90036e4 <col:46> '_InIterator' lvalue ParmVar 0x9002c50 '__end' '_InIterator')))
    <<<NULL>>>)
  (IfStmt 0x9003820 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:146:4>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9003760 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9003808 </usr/include/c++/4.6/bits/basic_string.tcc:143:4, line:146:4>
      (CallExpr 0x90037d8 <line:144:6, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9003788 <col:6, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9003770 <col:6> 'struct std::basic_string::_Rep *' lvalue Var 0x90034e0 '__r' 'struct std::basic_string::_Rep *'))
        (DeclRefExpr 0x90037bc <col:22> 'const _Alloc' lvalue ParmVar 0x9002cc0 '__a' 'const _Alloc &'))
      (NullStmt 0x90037f8 <line:145:29>))
    <<<NULL>>>)
  (CallExpr 0x90038a8 <line:147:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9003858 <col:2, col:7> '<dependent type>' lvalue
      (DeclRefExpr 0x900383c <col:2> 'struct std::basic_string::_Rep *' lvalue Var 0x90034e0 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x900388c <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90033b0 '__dnew' 'const size_type':'const typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9003938 <line:148:2, col:25>
    (CallExpr 0x9003918 <col:9, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90038e0 <col:9, col:14> '<dependent type>' lvalue
        (DeclRefExpr 0x90038c8 <col:9> 'struct std::basic_string::_Rep *' lvalue Var 0x90034e0 '__r' 'struct std::basic_string::_Rep *')))))

;
    static _CharT *_S_construct(size_type __n, _CharT __c, const _Alloc &__a) (CompoundStmt 0x9004498 </usr/include/c++/4.6/bits/basic_string.tcc:155:5, line:167:5>
  (IfStmt 0x9004120 <line:157:7, line:158:35>
    <<<NULL>>>
    (BinaryOperator 0x9004068 <line:157:11, col:37> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9003f88 <col:11, col:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9003f30 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x9003efc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9003cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x9003f18 <col:18> 'int' 0))
      (CXXOperatorCallExpr 0x9004040 <col:23, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9003fe8 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
        (DeclRefExpr 0x9003fac <col:23> 'const _Alloc' lvalue ParmVar 0x9003da0 '__a' 'const _Alloc &')
        (CXXUnresolvedConstructExpr 0x9003fd0 <col:30, col:37> '_Alloc')))
    (ReturnStmt 0x9004110 <line:158:2, col:35>
      (CallExpr 0x90040f0 <col:9, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90040b8 <col:9, col:24> '<dependent type>' lvalue
          (CallExpr 0x9004098 <col:9, col:22> '<dependent type>'
            (DeclRefExpr 0x9004080 <col:9> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbf650 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)')))))
    <<<NULL>>>)
  (DeclStmt 0x9004268 <line:161:7, col:58>
    0x9004150 "std::basic_string::_Rep *__r =
      (CallExpr 0x9004240 <col:19, col:57> '<dependent type>'
        (DependentScopeDeclRefExpr 0x90041a8 <col:19, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x90041cc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9003cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9004208 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x90041f0 <col:50> 'int' 0))
        (DeclRefExpr 0x9004224 <col:54> 'const _Alloc' lvalue ParmVar 0x9003da0 '__a' 'const _Alloc &'))")
  (IfStmt 0x9004370 <line:162:7, line:163:39>
    <<<NULL>>>
    (DeclRefExpr 0x9004278 <line:162:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9003cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9004348 <line:163:2, col:39> '<dependent type>'
      (DeclRefExpr 0x9004290 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x8fbe8a0 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CallExpr 0x90042f8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90042c0 <col:12, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x90042a8 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x9004150 '__r' 'struct std::basic_string::_Rep *')))
      (DeclRefExpr 0x9004314 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9003cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x900432c <col:36> '_CharT' lvalue ParmVar 0x9003d30 '__c' '_CharT'))
    <<<NULL>>>)
  (CallExpr 0x90043f8 <line:165:7, col:42> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x90043a8 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x900438c <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9004150 '__r' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x90043dc <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9003cf0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (ReturnStmt 0x9004488 <line:166:7, col:30>
    (CallExpr 0x9004468 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9004430 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9004418 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9004150 '__r' 'struct std::basic_string::_Rep *')))))


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str) : _M_dataplus((CallExpr 0x9004c48 </usr/include/c++/4.6/bits/basic_string.tcc:172:19, line:173:29> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9004b08 <line:172:19, col:35> '<dependent type>' lvalue
    (CallExpr 0x9004ae8 <col:19, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9004ab0 <col:19, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9004a94 <col:19> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x90049a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CXXUnresolvedConstructExpr 0x9004bb8 <col:43, col:71> '_Alloc'
    (CallExpr 0x9004b98 <col:50, col:70> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9004b60 <col:50, col:56> '<dependent type>' lvalue
        (DeclRefExpr 0x9004b48 <col:50> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x90049a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
  (CallExpr 0x9004c28 <line:173:8, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9004bf0 <col:8, col:14> '<dependent type>' lvalue
      (DeclRefExpr 0x9004bd4 <col:8> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x90049a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
, (CallExpr 0x9004cc0 </usr/include/c++/4.6/bits/basic_string.tcc:174:5, col:25> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9004c88 <col:5, col:11> '<dependent type>' lvalue
    (DeclRefExpr 0x9004c6c <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x90049a0 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
) (CompoundStmt 0x9004d20 </usr/include/c++/4.6/bits/basic_string.tcc:175:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _Alloc &__a) : _M_dataplus((CallExpr 0x90053f0 </usr/include/c++/4.6/bits/basic_string.tcc:180:19, col:58> '<dependent type>'
  (UnresolvedLookupExpr 0x9005358 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (CXXUnresolvedConstructExpr 0x90053a0 <col:32, col:42> 'size_type':'typename _CharT_alloc_type::size_type')
  (CXXUnresolvedConstructExpr 0x90053c0 <col:45, col:52> '_CharT')
  (DeclRefExpr 0x90053d8 <col:55> 'const _Alloc' lvalue ParmVar 0x9005230 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9005418 </usr/include/c++/4.6/bits/basic_string.tcc:180:61> 'const _Alloc' lvalue ParmVar 0x9005230 '__a' 'const _Alloc &')
) (CompoundStmt 0x9005470 </usr/include/c++/4.6/bits/basic_string.tcc:181:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n = (DeclRefExpr 0x8fdb728 </usr/include/c++/4.6/bits/basic_string.h:457:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) : _M_dataplus((CallExpr 0x9005f50 </usr/include/c++/4.6/bits/basic_string.tcc:186:19, line:190:28> '<dependent type>'
  (UnresolvedLookupExpr 0x9005af0 <line:186:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (CXXOperatorCallExpr 0x9005cf8 <col:32, line:188:35> '<dependent type>'
    (UnresolvedLookupExpr 0x9005cb0 <line:187:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
    (CallExpr 0x9005b80 <line:186:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9005b48 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9005b30 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9005960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9005c88 <line:187:13, line:188:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9005bb8 <line:187:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9005b9c <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9005960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x9005bec <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90059a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9005c50 <line:188:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9005f08 <line:189:11, line:190:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9005ec0 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
    (CXXOperatorCallExpr 0x9005e80 <line:189:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9005e38 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
      (CallExpr 0x9005d70 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9005d38 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9005d1c <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9005960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9005e10 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9005da8 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9005d8c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9005960 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9005ddc <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90059a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9005df4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90059e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9005ea4 <line:190:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90059a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CXXUnresolvedConstructExpr 0x9005f38 <col:20, col:27> '_Alloc'))
, (CXXUnresolvedConstructExpr 0x9005f80 </usr/include/c++/4.6/bits/basic_string.tcc:190:31, col:38> '_Alloc')
) (CompoundStmt 0x9005fe0 </usr/include/c++/4.6/bits/basic_string.tcc:191:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n, const _Alloc &__a) : _M_dataplus((CallExpr 0x9006b50 </usr/include/c++/4.6/bits/basic_string.tcc:197:19, line:201:23> '<dependent type>'
  (UnresolvedLookupExpr 0x9006740 <line:197:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (CXXOperatorCallExpr 0x9006900 <col:32, line:199:35> '<dependent type>'
    (UnresolvedLookupExpr 0x90068b8 <line:198:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
    (CallExpr 0x90067d0 <line:197:32, col:46> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9006798 <col:32, col:38> '<dependent type>' lvalue
        (DeclRefExpr 0x9006780 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9006510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
    (CallExpr 0x9006890 <line:198:13, line:199:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9006808 <line:198:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x90067ec <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9006510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x900683c <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9006550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (StringLiteral 0x9006854 <line:199:7> 'const char [27]' lvalue "basic_string::basic_string")))
  (CXXOperatorCallExpr 0x9006b10 <line:200:11, line:201:13> '<dependent type>'
    (UnresolvedLookupExpr 0x9006ac8 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
    (CXXOperatorCallExpr 0x9006a88 <line:200:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9006a40 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
      (CallExpr 0x9006978 <col:11, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9006940 <col:11, col:17> '<dependent type>' lvalue
          (DeclRefExpr 0x9006924 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9006510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
      (CallExpr 0x9006a18 <col:29, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90069b0 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x9006994 <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9006510 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x90069e4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9006550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x90069fc <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9006590 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (DeclRefExpr 0x9006aac <line:201:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9006550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x9006b34 <col:20> 'const _Alloc' lvalue ParmVar 0x9006600 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9006b78 </usr/include/c++/4.6/bits/basic_string.tcc:201:26> 'const _Alloc' lvalue ParmVar 0x9006600 '__a' 'const _Alloc &')
) (CompoundStmt 0x9006bd0 </usr/include/c++/4.6/bits/basic_string.tcc:202:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, size_type __n, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb748 </usr/include/c++/4.6/bits/basic_string.h:478:26, col:33> '_Alloc')
) : _M_dataplus((CallExpr 0x90073e0 </usr/include/c++/4.6/bits/basic_string.tcc:208:19, col:51> '<dependent type>'
  (UnresolvedLookupExpr 0x90072d0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (DeclRefExpr 0x9007310 <col:32> 'const _CharT *' lvalue ParmVar 0x90070e0 '__s' 'const _CharT *')
  (CXXOperatorCallExpr 0x90073a0 <col:37, col:43> '<dependent type>'
    (UnresolvedLookupExpr 0x9007358 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
    (DeclRefExpr 0x9007328 <col:37> 'const _CharT *' lvalue ParmVar 0x90070e0 '__s' 'const _CharT *')
    (DeclRefExpr 0x9007340 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9007120 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
  (DeclRefExpr 0x90073c4 <col:48> 'const _Alloc' lvalue ParmVar 0x9007190 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9007408 </usr/include/c++/4.6/bits/basic_string.tcc:208:54> 'const _Alloc' lvalue ParmVar 0x9007190 '__a' 'const _Alloc &')
) (CompoundStmt 0x9007460 </usr/include/c++/4.6/bits/basic_string.tcc:209:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(const _CharT *__s, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb768 </usr/include/c++/4.6/bits/basic_string.h:484:59, col:66> '_Alloc')
) : _M_dataplus((CallExpr 0x9007d68 </usr/include/c++/4.6/bits/basic_string.tcc:215:19, line:216:26> '<dependent type>'
  (UnresolvedLookupExpr 0x9007b08 <line:215:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (DeclRefExpr 0x9007b48 <col:32> 'const _CharT *' lvalue ParmVar 0x9007970 '__s' 'const _CharT *')
  (ConditionalOperator 0x9007d30 <col:37, line:216:17> '<dependent type>'
    (DeclRefExpr 0x9007b60 <line:215:37> 'const _CharT *' lvalue ParmVar 0x9007970 '__s' 'const _CharT *')
    (CXXOperatorCallExpr 0x9007c68 <col:43, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x9007c20 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
      (DeclRefExpr 0x9007b78 <col:43> 'const _CharT *' lvalue ParmVar 0x9007970 '__s' 'const _CharT *')
      (CallExpr 0x9007c00 <col:49, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9007bb0 <col:49, col:62> '<dependent type>' lvalue)
        (DeclRefExpr 0x9007be4 <col:69> 'const _CharT *' lvalue ParmVar 0x9007970 '__s' 'const _CharT *')))
    (CXXOperatorCallExpr 0x9007d08 <line:216:11, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x9007cc0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
      (DeclRefExpr 0x9007c8c <col:11> 'const _CharT *' lvalue ParmVar 0x9007970 '__s' 'const _CharT *')
      (DeclRefExpr 0x9007ca4 <col:17> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
  (DeclRefExpr 0x9007d4c <col:23> 'const _Alloc' lvalue ParmVar 0x90079e0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9007d90 </usr/include/c++/4.6/bits/basic_string.tcc:216:29> 'const _Alloc' lvalue ParmVar 0x90079e0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9007df0 </usr/include/c++/4.6/bits/basic_string.tcc:217:5, col:7>)


    basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(size_type __n, _CharT __c, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb788 </usr/include/c++/4.6/bits/basic_string.h:491:67, col:74> '_Alloc')
) : _M_dataplus((CallExpr 0x9008548 </usr/include/c++/4.6/bits/basic_string.tcc:222:19, col:45> '<dependent type>'
  (UnresolvedLookupExpr 0x90084c0 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (DeclRefExpr 0x9008500 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90082d0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
  (DeclRefExpr 0x9008518 <col:37> '_CharT' lvalue ParmVar 0x9008310 '__c' '_CharT')
  (DeclRefExpr 0x9008530 <col:42> 'const _Alloc' lvalue ParmVar 0x9008380 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9008570 </usr/include/c++/4.6/bits/basic_string.tcc:222:48> 'const _Alloc' lvalue ParmVar 0x9008380 '__a' 'const _Alloc &')
) (CompoundStmt 0x90085d0 </usr/include/c++/4.6/bits/basic_string.tcc:223:5, col:7>)


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc>::basic_string<_CharT, _Traits, _Alloc>(_InputIterator __beg, _InputIterator __end, const _Alloc &__a = (CXXUnresolvedConstructExpr 0x8fdb7a8 </usr/include/c++/4.6/bits/basic_string.h:527:28, col:35> '_Alloc')
) : _M_dataplus((CallExpr 0x9008dd8 </usr/include/c++/4.6/bits/basic_string.tcc:230:19, col:49> '<dependent type>'
  (UnresolvedLookupExpr 0x9008d50 <col:19> '<dependent type>' lvalue (no ADL) = '1' 0x8fd34c0 0x90015d0 0x9002e50 0x9003e60)
  (DeclRefExpr 0x9008d90 <col:32> '_InputIterator' lvalue ParmVar 0x9008b00 '__beg' '_InputIterator')
  (DeclRefExpr 0x9008da8 <col:39> '_InputIterator' lvalue ParmVar 0x9008b40 '__end' '_InputIterator')
  (DeclRefExpr 0x9008dc0 <col:46> 'const _Alloc' lvalue ParmVar 0x9008bb0 '__a' 'const _Alloc &'))
, (DeclRefExpr 0x9008e00 </usr/include/c++/4.6/bits/basic_string.tcc:230:52> 'const _Alloc' lvalue ParmVar 0x9008bb0 '__a' 'const _Alloc &')
) (CompoundStmt 0x9008e60 </usr/include/c++/4.6/bits/basic_string.tcc:231:5, col:7>)

;
    basic_string<_CharT, _Traits, _Alloc> &assign(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x9009b20 </usr/include/c++/4.6/bits/basic_string.tcc:245:5, line:255:5>
  (IfStmt 0x9009ac8 <line:246:7, line:253:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x90096b0 <line:246:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x9009658 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
      (CallExpr 0x90095c8 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x90095a8 <col:11> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x9009598 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9009638 <col:23, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9009600 <col:23, col:29> '<dependent type>' lvalue
          (DeclRefExpr 0x90095e4 <col:23> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9009310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9009aa8 <line:247:2, line:253:2>
      (DeclStmt 0x9009780 <line:249:4, col:52>
        0x90096e0 "const allocator_type __a =
          (CallExpr 0x9009760 <col:31, col:51> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9009728 <col:31, col:37> '<dependent type>' lvalue
              (CXXThisExpr 0x9009718 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9009950 <line:250:4, col:71>
        0x90097c0 "_CharT *__tmp =
          (CallExpr 0x9009928 <col:20, col:70> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9009868 <col:20, col:36> '<dependent type>' lvalue
              (CallExpr 0x9009848 <col:20, col:33> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9009810 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x90097f4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9009310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
            (DeclRefExpr 0x900989c <col:44> 'const allocator_type':'const _Alloc' lvalue Var 0x90096e0 '__a' 'const allocator_type':'const _Alloc')
            (CallExpr 0x9009908 <col:49, col:69> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90098d0 <col:49, col:55> '<dependent type>' lvalue
                (DeclRefExpr 0x90098b4 <col:49> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9009310 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))))")
      (CallExpr 0x9009a00 <line:251:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90099b0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9009990 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9009970 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9009960 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x90099e4 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x90096e0 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9009a88 <line:252:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9009a30 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9009a70 <col:12> '_CharT *' lvalue Var 0x90097c0 '__tmp' '_CharT *')))
    <<<NULL>>>)
  (ReturnStmt 0x9009b10 <line:254:7, col:15>
    (UnaryOperator 0x9009af8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9009ae8 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &assign(const _CharT *__s, size_type __n) (CompoundStmt 0x900ab90 </usr/include/c++/4.6/bits/basic_string.tcc:261:5, line:277:6>
  (NullStmt 0x900a2e0 <line:262:46>)
  (CallExpr 0x900a3d0 <line:263:7, col:64> '<dependent type>'
    (MemberExpr 0x900a300 <col:7> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x900a2f0 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CallExpr 0x900a368 <col:23, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x900a330 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x900a320 <col:23> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x900a384 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x900a39c <col:42> 'const char [21]' lvalue "basic_string::assign"))
  (IfStmt 0x900ab70 <line:264:7, line:276:2>
    <<<NULL>>>
    (BinaryOperator 0x900a508 <line:264:11, col:54> '<dependent type>' '||'
      (CallExpr 0x900a440 <col:11, col:26> '<dependent type>'
        (MemberExpr 0x900a408 <col:11> '<bound member function type>' ->_M_disjunct 0x8fbe3a0
          (CXXThisExpr 0x900a3f8 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x900a428 <col:23> 'const _CharT *' lvalue ParmVar 0x900a000 '__s' 'const _CharT *'))
      (CallExpr 0x900a4e8 <col:31, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900a4b0 <col:31, col:41> '<dependent type>' lvalue
          (CallExpr 0x900a490 <col:31, col:38> '<dependent type>'
            (MemberExpr 0x900a470 <col:31> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900a460 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x900a658 <line:265:2, col:61>
      (CallExpr 0x900a628 <col:9, col:61> '<dependent type>'
        (MemberExpr 0x900a530 <col:9> '<bound member function type>' ->_M_replace_safe 0x8fd2b60
          (CXXThisExpr 0x900a520 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x900a570 <col:25, col:36> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x900a558 <col:35> 'int' 0))
        (CallExpr 0x900a5d8 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x900a5a0 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x900a590 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x900a5f4 <col:53> 'const _CharT *' lvalue ParmVar 0x900a000 '__s' 'const _CharT *')
        (DeclRefExpr 0x900a60c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x900ab50 <line:267:2, line:276:2>
      (DeclStmt 0x900a790 <line:269:4, col:43>
        0x900a670 "const size_type __pos =
          (CXXOperatorCallExpr 0x900a768 <col:28, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x900a730 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x900a6a4 <col:28> 'const _CharT *' lvalue ParmVar 0x900a000 '__s' 'const _CharT *')
            (CallExpr 0x900a710 <col:34, col:42> '<dependent type>'
              (UnresolvedMemberExpr 0x900a6d0 <col:34> '<bound member function type>' lvalue)))")
      (IfStmt 0x900aa38 <line:270:4, line:273:33>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x900a818 <line:270:8, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x900a7d0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
          (DeclRefExpr 0x900a7a0 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900a670 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x900a7b8 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x900a8f8 <line:271:6, col:33> '<dependent type>'
          (DeclRefExpr 0x900a83c <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x900a8a8 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x900a868 <col:14> '<bound member function type>' lvalue))
          (DeclRefExpr 0x900a8c4 <col:25> 'const _CharT *' lvalue ParmVar 0x900a000 '__s' 'const _CharT *')
          (DeclRefExpr 0x900a8dc <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x900aa18 <line:272:9, line:273:33>
          <<<NULL>>>
          (DeclRefExpr 0x900a920 <line:272:13> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900a670 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (CallExpr 0x900a9f0 <line:273:6, col:33> '<dependent type>'
            (DeclRefExpr 0x900a938 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe6e0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
            (CallExpr 0x900a9a0 <col:14, col:22> '<dependent type>'
              (UnresolvedMemberExpr 0x900a960 <col:14> '<bound member function type>' lvalue))
            (DeclRefExpr 0x900a9bc <col:25> 'const _CharT *' lvalue ParmVar 0x900a000 '__s' 'const _CharT *')
            (DeclRefExpr 0x900a9d4 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>))
      (CallExpr 0x900aaf8 <line:274:4, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900aaa8 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x900aa88 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x900aa68 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900aa58 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900aadc <col:41> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900a040 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (ReturnStmt 0x900ab40 <line:275:4, col:12>
        (UnaryOperator 0x900ab28 <col:11, col:12> '<dependent type>' prefix '*'
          (CXXThisExpr 0x900ab18 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    basic_string<_CharT, _Traits, _Alloc> &append(size_type __n, _CharT __c) (CompoundStmt 0x900ba90 </usr/include/c++/4.6/bits/basic_string.tcc:283:5, line:294:5>
  (IfStmt 0x900ba38 <line:284:7, line:292:2>
    <<<NULL>>>
    (DeclRefExpr 0x900b308 <line:284:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900b040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x900ba10 <line:285:2, line:292:2>
      (CallExpr 0x900b3d8 <line:286:4, col:61> '<dependent type>'
        (MemberExpr 0x900b330 <col:4> '<bound member function type>' ->_M_check_length 0x8fbe100
          (CXXThisExpr 0x900b320 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x900b370 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x900b358 <col:30> 'int' 0))
        (DeclRefExpr 0x900b38c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900b040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x900b3a4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x900b538 <line:287:4, col:46>
        0x900b410 "const size_type __len =
          (CXXOperatorCallExpr 0x900b510 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x900b4c8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (DeclRefExpr 0x900b444 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900b040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x900b4a8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900b470 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x900b460 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x900b778 <line:288:4, line:289:25>
        <<<NULL>>>
        (BinaryOperator 0x900b6e0 <line:288:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x900b610 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x900b5c8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x900b548 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900b410 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x900b5a8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900b570 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x900b560 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x900b6c0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900b688 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x900b668 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x900b648 <col:36> '<bound member function type>' ->_M_rep 0x8fbdc30
                  (CXXThisExpr 0x900b638 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x900b758 <line:289:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x900b708 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x900b6f8 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x900b73c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900b410 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x900b928 <line:290:4, col:48> '<dependent type>'
        (DeclRefExpr 0x900b794 <col:4> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x8fbe8a0 '_M_assign' 'void (_CharT *, size_type, _CharT)')
        (CXXOperatorCallExpr 0x900b8d0 <col:14, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x900b888 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900b800 <col:14, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x900b7c0 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x900b868 <col:26, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900b830 <col:26, col:32> '<dependent type>' lvalue
              (CXXThisExpr 0x900b820 <col:26> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900b8f4 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900b040 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x900b90c <col:45> '_CharT' lvalue ParmVar 0x900b080 '__c' '_CharT'))
      (CallExpr 0x900b9f0 <line:291:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900b9a0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x900b980 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x900b960 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900b950 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900b9d4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900b410 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x900ba80 <line:293:7, col:15>
    (UnaryOperator 0x900ba68 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x900ba58 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const _CharT *__s, size_type __n) (CompoundStmt 0x900cd78 </usr/include/c++/4.6/bits/basic_string.tcc:300:5, line:321:5>
  (NullStmt 0x900c238 <line:301:46>)
  (IfStmt 0x900cd20 <line:302:7, line:319:2>
    <<<NULL>>>
    (DeclRefExpr 0x900c244 <line:302:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900bfb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x900ccf8 <line:303:2, line:319:2>
      (CallExpr 0x900c318 <line:304:4, col:61> '<dependent type>'
        (MemberExpr 0x900c270 <col:4> '<bound member function type>' ->_M_check_length 0x8fbe100
          (CXXThisExpr 0x900c260 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (CXXUnresolvedConstructExpr 0x900c2b0 <col:20, col:31> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x900c298 <col:30> 'int' 0))
        (DeclRefExpr 0x900c2cc <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900bfb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (StringLiteral 0x900c2e4 <col:39> 'const char [21]' lvalue "basic_string::append"))
      (DeclStmt 0x900c478 <line:305:4, col:46>
        0x900c350 "const size_type __len =
          (CXXOperatorCallExpr 0x900c450 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x900c408 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (DeclRefExpr 0x900c384 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900bfb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x900c3e8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900c3b0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x900c3a0 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x900ca60 <line:306:4, line:316:6>
        <<<NULL>>>
        (BinaryOperator 0x900c620 <line:306:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x900c550 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x900c508 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x900c488 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900c350 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x900c4e8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900c4b0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x900c4a0 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x900c600 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900c5c8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x900c5a8 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x900c588 <col:36> '<bound member function type>' ->_M_rep 0x8fbdc30
                  (CXXThisExpr 0x900c578 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CompoundStmt 0x900ca48 <line:307:6, line:316:6>
          (IfStmt 0x900ca28 <line:308:8, line:315:3>
            <<<NULL>>>
            (CallExpr 0x900c680 <line:308:12, col:27> '<dependent type>'
              (MemberExpr 0x900c648 <col:12> '<bound member function type>' ->_M_disjunct 0x8fbe3a0
                (CXXThisExpr 0x900c638 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x900c668 <col:24> 'const _CharT *' lvalue ParmVar 0x900bf70 '__s' 'const _CharT *'))
            (CallExpr 0x900c700 <line:309:3, col:22> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900c6b0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x900c6a0 <col:3> 'basic_string<_CharT, _Traits, _Alloc> *' this))
              (DeclRefExpr 0x900c6e4 <col:17> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900c350 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CompoundStmt 0x900ca08 <line:311:3, line:315:3>
              (DeclStmt 0x900c850 <line:312:5, col:44>
                0x900c730 "const size_type __off =
                  (CXXOperatorCallExpr 0x900c828 <col:29, col:43> '<dependent type>'
                    (UnresolvedLookupExpr 0x900c7f0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                    (DeclRefExpr 0x900c764 <col:29> 'const _CharT *' lvalue ParmVar 0x900bf70 '__s' 'const _CharT *')
                    (CallExpr 0x900c7d0 <col:35, col:43> '<dependent type>'
                      (UnresolvedMemberExpr 0x900c790 <col:35> '<bound member function type>' lvalue)))")
              (CallExpr 0x900c8c0 <line:313:5, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x900c870 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x900c860 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x900c8a4 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900c350 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (BinaryOperator 0x900c9f0 <line:314:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x900c8e0 <col:5> 'const _CharT *' lvalue ParmVar 0x900bf70 '__s' 'const _CharT *')
                (CXXOperatorCallExpr 0x900c9c8 <col:11, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x900c980 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                  (CallExpr 0x900c948 <col:11, col:19> '<dependent type>'
                    (UnresolvedMemberExpr 0x900c908 <col:11> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x900c964 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900c730 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
        <<<NULL>>>)
      (CallExpr 0x900cc10 <line:317:4, col:46> '<dependent type>'
        (DeclRefExpr 0x900ca7c <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x900cbb8 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x900cb70 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900cae8 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x900caa8 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x900cb50 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900cb18 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x900cb08 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900cbdc <col:38> 'const _CharT *' lvalue ParmVar 0x900bf70 '__s' 'const _CharT *')
        (DeclRefExpr 0x900cbf4 <col:43> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900bfb0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x900ccd8 <line:318:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900cc88 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x900cc68 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x900cc48 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900cc38 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900ccbc <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900c350 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x900cd68 <line:320:7, col:15>
    (UnaryOperator 0x900cd50 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x900cd40 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x900dc80 </usr/include/c++/4.6/bits/basic_string.tcc:327:5, line:338:5>
  (DeclStmt 0x900d578 <line:328:7, col:44>
    0x900d4d0 "const size_type __size =
      (CallExpr 0x900d558 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900d520 <col:32, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x900d504 <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x900d240 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (IfStmt 0x900dc28 <line:329:7, line:336:2>
    <<<NULL>>>
    (DeclRefExpr 0x900d588 <line:329:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d4d0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x900dc08 <line:330:2, line:336:2>
      (DeclStmt 0x900d6d8 <line:331:4, col:49>
        0x900d5b0 "const size_type __len =
          (CXXOperatorCallExpr 0x900d6b0 <col:28, col:48> '<dependent type>'
            (UnresolvedLookupExpr 0x900d668 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (DeclRefExpr 0x900d5e4 <col:28> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d4d0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x900d648 <col:37, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900d610 <col:37, col:43> '<dependent type>' lvalue
                (CXXThisExpr 0x900d600 <col:37> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x900d918 <line:332:4, line:333:25>
        <<<NULL>>>
        (BinaryOperator 0x900d880 <line:332:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x900d7b0 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x900d768 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x900d6e8 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d5b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x900d748 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900d710 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x900d700 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x900d860 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900d828 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x900d808 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x900d7e8 <col:36> '<bound member function type>' ->_M_rep 0x8fbdc30
                  (CXXThisExpr 0x900d7d8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x900d8f8 <line:333:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x900d8a8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x900d898 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x900d8dc <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d5b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x900db20 <line:334:4, col:61> '<dependent type>'
        (DeclRefExpr 0x900d934 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x900da70 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x900da28 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900d9a0 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x900d960 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x900da08 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900d9d0 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x900d9c0 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x900dae8 <col:38, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x900dab0 <col:38, col:44> '<dependent type>' lvalue
            (DeclRefExpr 0x900da94 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x900d240 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x900db04 <col:55> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d4d0 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x900dbe8 <line:335:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900db98 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x900db78 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x900db58 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900db48 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900dbcc <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900d5b0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x900dc70 <line:337:7, col:15>
    (UnaryOperator 0x900dc58 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x900dc48 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &append(const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos, size_type __n) (CompoundStmt 0x900ed98 </usr/include/c++/4.6/bits/basic_string.tcc:344:5, line:356:5>
  (CallExpr 0x900e518 <line:345:7, col:51> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x900e498 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x900e47c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x900e140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x900e4cc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e180 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x900e4e4 <col:29> 'const char [21]' lvalue "basic_string::append"))
  (BinaryOperator 0x900e600 <line:346:7, col:38> '<dependent type>' '='
    (DeclRefExpr 0x900e53c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x900e5d8 <col:13, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x900e570 <col:13, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x900e554 <col:13> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x900e140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x900e5a4 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e180 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x900e5bc <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (IfStmt 0x900ed40 <line:347:7, line:354:2>
    <<<NULL>>>
    (DeclRefExpr 0x900e618 <line:347:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x900ed20 <line:348:2, line:354:2>
      (DeclStmt 0x900e768 <line:349:4, col:46>
        0x900e640 "const size_type __len =
          (CXXOperatorCallExpr 0x900e740 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x900e6f8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (DeclRefExpr 0x900e674 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x900e6d8 <col:34, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900e6a0 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x900e690 <col:34> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (IfStmt 0x900e9a8 <line:350:4, line:351:25>
        <<<NULL>>>
        (BinaryOperator 0x900e910 <line:350:8, col:59> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x900e840 <col:8, col:31> '<dependent type>'
            (UnresolvedLookupExpr 0x900e7f8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x900e778 <col:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900e640 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x900e7d8 <col:16, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x900e7a0 <col:16, col:22> '<dependent type>' lvalue
                (CXXThisExpr 0x900e790 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
          (CallExpr 0x900e8f0 <col:36, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900e8b8 <col:36, col:46> '<dependent type>' lvalue
              (CallExpr 0x900e898 <col:36, col:43> '<dependent type>'
                (MemberExpr 0x900e878 <col:36> '<bound member function type>' ->_M_rep 0x8fbdc30
                  (CXXThisExpr 0x900e868 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
        (CallExpr 0x900e988 <line:351:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x900e938 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x900e928 <col:6> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x900e96c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900e640 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x900ec38 <line:352:4, col:66> '<dependent type>'
        (DeclRefExpr 0x900e9c4 <col:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
        (CXXOperatorCallExpr 0x900eb00 <col:12, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x900eab8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900ea30 <col:12, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x900e9f0 <col:12> '<bound member function type>' lvalue))
          (CallExpr 0x900ea98 <col:24, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900ea60 <col:24, col:30> '<dependent type>' lvalue
              (CXXThisExpr 0x900ea50 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x900ebf8 <col:38, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x900ebb0 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900eb78 <col:38, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x900eb40 <col:38, col:44> '<dependent type>' lvalue
              (DeclRefExpr 0x900eb24 <col:38> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x900e140 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x900eb94 <col:56> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e180 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x900ec1c <col:63> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900e1c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CallExpr 0x900ed00 <line:353:4, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900ecb0 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x900ec90 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x900ec70 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900ec60 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x900ece4 <col:41> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900e640 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x900ed88 <line:355:7, col:15>
    (UnaryOperator 0x900ed70 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x900ed60 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &insert(size_type __pos, const _CharT *__s, size_type __n) (CompoundStmt 0x9010590 </usr/include/c++/4.6/bits/basic_string.tcc:362:6, line:387:6>
  (NullStmt 0x900f5a0 <line:363:47>)
  (CallExpr 0x900f628 <line:364:8, col:46> '<dependent type>'
    (MemberExpr 0x900f5c0 <col:8> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x900f5b0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x900f5e0 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x900f5f8 <col:24> 'const char [21]' lvalue "basic_string::insert"))
  (CallExpr 0x900f708 <line:365:8, col:65> '<dependent type>'
    (MemberExpr 0x900f660 <col:8> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x900f650 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (CXXUnresolvedConstructExpr 0x900f6a0 <col:24, col:35> 'size_type':'typename _CharT_alloc_type::size_type'
      (IntegerLiteral 0x900f688 <col:34> 'int' 0))
    (DeclRefExpr 0x900f6bc <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x900f6d4 <col:43> 'const char [21]' lvalue "basic_string::insert"))
  (IfStmt 0x9010570 <line:366:8, line:386:10>
    <<<NULL>>>
    (BinaryOperator 0x900f840 <line:366:12, col:55> '<dependent type>' '||'
      (CallExpr 0x900f778 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x900f740 <col:12> '<bound member function type>' ->_M_disjunct 0x8fbe3a0
          (CXXThisExpr 0x900f730 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x900f760 <col:24> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *'))
      (CallExpr 0x900f820 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x900f7e8 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x900f7c8 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x900f7a8 <col:32> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x900f798 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x900f940 <line:367:10, col:62>
      (CallExpr 0x900f910 <col:17, col:62> '<dependent type>'
        (MemberExpr 0x900f868 <col:17> '<bound member function type>' ->_M_replace_safe 0x8fd2b60
          (CXXThisExpr 0x900f858 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x900f888 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x900f8c0 <col:40, col:51> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x900f8a8 <col:50> 'int' 0))
        (DeclRefExpr 0x900f8dc <col:54> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
        (DeclRefExpr 0x900f8f4 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9010548 <line:369:10, line:386:10>
      (DeclStmt 0x900fa80 <line:371:12, col:51>
        0x900f960 "const size_type __off =
          (CXXOperatorCallExpr 0x900fa58 <col:36, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x900fa20 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x900f994 <col:36> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
            (CallExpr 0x900fa00 <col:42, col:50> '<dependent type>'
              (UnresolvedMemberExpr 0x900f9c0 <col:42> '<bound member function type>' lvalue)))")
      (CallExpr 0x900fb08 <line:372:12, col:35> '<dependent type>'
        (MemberExpr 0x900faa0 <col:12> '<bound member function type>' ->_M_mutate 0x8fbf540
          (CXXThisExpr 0x900fa90 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x900fac0 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (IntegerLiteral 0x900fad8 <col:29> 'int' 0)
        (DeclRefExpr 0x900faf0 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      (BinaryOperator 0x900fc40 <line:373:12, col:30> '<dependent type>' '='
        (DeclRefExpr 0x900fb30 <col:12> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
        (CXXOperatorCallExpr 0x900fc18 <col:18, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x900fbd0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (CallExpr 0x900fb98 <col:18, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x900fb58 <col:18> '<bound member function type>' lvalue))
          (DeclRefExpr 0x900fbb4 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x900f960 '__off' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x900fdc0 <line:374:12, col:43>
        0x900fc90 "_CharT *__p =
          (CXXOperatorCallExpr 0x900fd98 <col:26, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x900fd50 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x900fd18 <col:26, col:34> '<dependent type>'
              (UnresolvedMemberExpr 0x900fcd8 <col:26> '<bound member function type>' lvalue))
            (DeclRefExpr 0x900fd34 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f250 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (IfStmt 0x90104f0 <line:375:12, line:384:14>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x900fed0 <line:375:16, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x900fe88 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
          (CXXOperatorCallExpr 0x900fe48 <col:16, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x900fe00 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (DeclRefExpr 0x900fdd0 <col:16> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
            (DeclRefExpr 0x900fde8 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x900fe6c <col:30> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *'))
        (CallExpr 0x900ff58 <line:376:14, col:35> '<dependent type>'
          (DeclRefExpr 0x900fef4 <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (DeclRefExpr 0x900ff0c <col:22> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
          (DeclRefExpr 0x900ff24 <col:27> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
          (DeclRefExpr 0x900ff3c <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x90104d0 <line:377:17, line:384:14>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x900fff8 <line:377:21, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x900ffb0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
            (DeclRefExpr 0x900ff80 <col:21> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
            (DeclRefExpr 0x900ff98 <col:28> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *'))
          (CallExpr 0x9010108 <line:378:14, col:41> '<dependent type>'
            (DeclRefExpr 0x901001c <col:14> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
            (DeclRefExpr 0x9010034 <col:22> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
            (CXXOperatorCallExpr 0x90100c8 <col:27, col:33> '<dependent type>'
              (UnresolvedLookupExpr 0x9010080 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (DeclRefExpr 0x901004c <col:27> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9010064 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x90100ec <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CompoundStmt 0x90104b0 <line:380:14, line:384:14>
            (DeclStmt 0x9010208 <line:381:9, col:44>
              0x9010140 "const size_type __nleft =
                (CXXOperatorCallExpr 0x90101e0 <col:35, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x90101a8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (DeclRefExpr 0x9010174 <col:35> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
                  (DeclRefExpr 0x901018c <col:41> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *'))")
            (CallExpr 0x9010278 <line:382:16, col:41> '<dependent type>'
              (DeclRefExpr 0x9010218 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (DeclRefExpr 0x9010230 <col:24> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
              (DeclRefExpr 0x9010248 <col:29> 'const _CharT *' lvalue ParmVar 0x900f2c0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9010260 <col:34> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010140 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
            (CallExpr 0x9010488 <line:383:16, col:63> '<dependent type>'
              (DeclRefExpr 0x90102a0 <col:16> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
              (CXXOperatorCallExpr 0x9010330 <col:24, col:30> '<dependent type>'
                (UnresolvedLookupExpr 0x90102e8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                (DeclRefExpr 0x90102b8 <col:24> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
                (DeclRefExpr 0x90102d0 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010140 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x90103d0 <col:39, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x9010388 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                (DeclRefExpr 0x9010354 <col:39> '_CharT *' lvalue Var 0x900fc90 '__p' '_CharT *')
                (DeclRefExpr 0x901036c <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x9010460 <col:50, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x9010428 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (DeclRefExpr 0x90103f4 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x900f300 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x901040c <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010140 '__nleft' 'const size_type':'const typename _CharT_alloc_type::size_type'))))))
      (ReturnStmt 0x9010538 <line:385:12, col:20>
        (UnaryOperator 0x9010520 <col:19, col:20> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9010510 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    typename basic_string<_CharT, _Traits, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x9011298 </usr/include/c++/4.6/bits/basic_string.tcc:393:6, line:410:6>
  (NullStmt 0x9010d68 <line:395:28>)
  (DeclStmt 0x9010e48 <line:400:8, col:49>
    0x9010d80 "const size_type __size =
      (CXXOperatorCallExpr 0x9010e20 <col:33, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9010de8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x9010db4 <col:33> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9010ae0 '__last' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x9010dcc <col:42> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9010aa0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (IfStmt 0x9011278 <line:401:8, line:409:10>
    <<<NULL>>>
    (DeclRefExpr 0x9010e58 <line:401:12> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010d80 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9011230 <line:402:3, line:407:3>
      (DeclStmt 0x9010f80 <line:403:5, col:50>
        0x9010e80 "const size_type __pos =
          (CXXOperatorCallExpr 0x9010f58 <col:29, col:49> '<dependent type>'
            (UnresolvedLookupExpr 0x9010f20 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9010eb4 <col:29> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9010aa0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
            (CallExpr 0x9010f00 <col:39, col:49> '<dependent type>'
              (MemberExpr 0x9010ee0 <col:39> '<bound member function type>' ->_M_ibegin 0x8fbdce0
                (CXXThisExpr 0x9010ed0 <col:39> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (CallExpr 0x9011030 <line:404:5, col:42> '<dependent type>'
        (MemberExpr 0x9010fa0 <col:5> '<bound member function type>' ->_M_mutate 0x8fbf540
          (CXXThisExpr 0x9010f90 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9010fc0 <col:15> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010e80 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9010fd8 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010d80 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXUnresolvedConstructExpr 0x9011010 <col:30, col:41> 'size_type':'typename _CharT_alloc_type::size_type'
          (IntegerLiteral 0x9010ff8 <col:40> 'int' 0)))
      (CallExpr 0x90110e0 <line:405:5, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90110a8 <col:5, col:15> '<dependent type>' lvalue
          (CallExpr 0x9011088 <col:5, col:12> '<dependent type>'
            (MemberExpr 0x9011068 <col:5> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9011058 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
      (ReturnStmt 0x9011220 <line:406:5, col:38>
        (CXXUnresolvedConstructExpr 0x9011200 <col:12, col:38> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'
          (CXXOperatorCallExpr 0x90111d8 <col:21, col:33> '<dependent type>'
            (UnresolvedLookupExpr 0x9011190 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x9011158 <col:21, col:29> '<dependent type>'
              (UnresolvedMemberExpr 0x9011118 <col:21> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9011174 <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9010e80 '__pos' 'const size_type':'const typename _CharT_alloc_type::size_type')))))
    (ReturnStmt 0x9011268 <line:409:3, col:10>
      (DeclRefExpr 0x9011250 <col:10> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x9010aa0 '__first' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))))


    basic_string<_CharT, _Traits, _Alloc> &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x9012be8 </usr/include/c++/4.6/bits/basic_string.tcc:417:6, line:441:6>
  (NullStmt 0x9011ae0 <line:418:48>)
  (CallExpr 0x9011b70 <line:419:8, col:47> '<dependent type>'
    (MemberExpr 0x9011b00 <col:8> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x9011af0 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9011b20 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9011b38 <col:24> 'const char [22]' lvalue "basic_string::replace"))
  (BinaryOperator 0x9011c38 <line:420:8, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9011b94 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9011c10 <col:15, col:35> '<dependent type>'
      (MemberExpr 0x9011bc0 <col:15> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x9011bb0 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9011be0 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9011bf8 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (CallExpr 0x9011ce8 <line:421:8, col:59> '<dependent type>'
    (MemberExpr 0x9011c60 <col:8> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x9011c50 <col:8> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9011c80 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9011c98 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9011cb0 <col:36> 'const char [22]' lvalue "basic_string::replace"))
  (DeclStmt 0x9011d58 <line:422:8, col:19>
    0x9011d20 "bool __left")
  (IfStmt 0x9012bc8 <line:423:8, line:440:3>
    <<<NULL>>>
    (BinaryOperator 0x9011e78 <line:423:12, col:55> '<dependent type>' '||'
      (CallExpr 0x9011db0 <col:12, col:27> '<dependent type>'
        (MemberExpr 0x9011d78 <col:12> '<bound member function type>' ->_M_disjunct 0x8fbe3a0
          (CXXThisExpr 0x9011d68 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9011d98 <col:24> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *'))
      (CallExpr 0x9011e58 <col:32, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9011e20 <col:32, col:42> '<dependent type>' lvalue
          (CallExpr 0x9011e00 <col:32, col:39> '<dependent type>'
            (MemberExpr 0x9011de0 <col:32> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9011dd0 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (ReturnStmt 0x9011f50 <line:424:10, col:55>
      (CallExpr 0x9011f20 <col:17, col:55> '<dependent type>'
        (MemberExpr 0x9011ea0 <col:17> '<bound member function type>' ->_M_replace_safe 0x8fd2b60
          (CXXThisExpr 0x9011e90 <col:17> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9011ec0 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9011ed8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9011ef0 <col:46> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *')
        (DeclRefExpr 0x9011f08 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    (IfStmt 0x9012ba8 <line:425:13, line:440:3>
      <<<NULL>>>
      (BinaryOperator 0x90123e8 <line:425:17, line:426:34> '<dependent type>' '||'
        (ParenExpr 0x9012198 <line:425:17, col:58> '<dependent type>'
          (BinaryOperator 0x9012180 <col:18, col:53> '<dependent type>' '='
            (DeclRefExpr 0x9011f60 <col:18> '_Bool' lvalue Var 0x9011d20 '__left' '_Bool')
            (CXXOperatorCallExpr 0x9012158 <col:27, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x9012110 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
              (CXXOperatorCallExpr 0x9011ff0 <col:27, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x9011fa8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                (DeclRefExpr 0x9011f78 <col:27> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *')
                (DeclRefExpr 0x9011f90 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
              (CXXOperatorCallExpr 0x90120e8 <col:41, col:53> '<dependent type>'
                (UnresolvedLookupExpr 0x90120a0 <col:51, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                (CallExpr 0x9012068 <col:41, col:49> '<dependent type>'
                  (UnresolvedMemberExpr 0x9012028 <col:41> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9012084 <col:53> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CXXOperatorCallExpr 0x90123c0 <line:426:6, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x9012378 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
          (CXXOperatorCallExpr 0x9012338 <col:6, col:26> '<dependent type>'
            (UnresolvedLookupExpr 0x90122f0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CXXOperatorCallExpr 0x9012280 <col:6, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9012238 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x9012200 <col:6, col:14> '<dependent type>'
                (UnresolvedMemberExpr 0x90121c0 <col:6> '<bound member function type>' lvalue))
              (DeclRefExpr 0x901221c <col:18> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x90122a4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x901235c <col:34> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *')))
      (CompoundStmt 0x90129a0 <line:427:3, line:434:3>
        (DeclStmt 0x9012530 <line:429:5, col:38>
          0x9012410 "size_type __off =
            (CXXOperatorCallExpr 0x9012508 <col:23, col:37> '<dependent type>'
              (UnresolvedLookupExpr 0x90124d0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x9012444 <col:23> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *')
              (CallExpr 0x90124b0 <col:29, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x9012470 <col:29> '<bound member function type>' lvalue)))")
        (ConditionalOperator 0x9012660 <line:430:5, col:43> '<dependent type>'
          (ImplicitCastExpr 0x9012650 <col:5> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9012540 <col:5> '_Bool' lvalue Var 0x9011d20 '__left' '_Bool'))
          (DeclRefExpr 0x9012558 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9012410 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
          (ParenExpr 0x9012638 <col:22, col:43> '<dependent type>' lvalue
            (CompoundAssignOperator 0x9012618 <col:23, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x9012570 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9012410 '__off' 'size_type':'typename _CharT_alloc_type::size_type')
              (CXXOperatorCallExpr 0x90125f0 <col:32, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x90125b8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (DeclRefExpr 0x9012588 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
                (DeclRefExpr 0x90125a0 <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))))
        (CallExpr 0x90126f8 <line:431:5, col:32> '<dependent type>'
          (MemberExpr 0x9012690 <col:5> '<bound member function type>' ->_M_mutate 0x8fbf540
            (CXXThisExpr 0x9012680 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x90126b0 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x90126c8 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x90126e0 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9012940 <line:432:5, col:55> '<dependent type>'
          (DeclRefExpr 0x9012720 <col:5> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9012808 <col:13, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x90127c0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x9012788 <col:13, col:21> '<dependent type>'
              (UnresolvedMemberExpr 0x9012748 <col:13> '<bound member function type>' lvalue))
            (DeclRefExpr 0x90127a4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9012900 <col:32, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x90128b8 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x9012880 <col:32, col:40> '<dependent type>'
              (UnresolvedMemberExpr 0x9012840 <col:32> '<bound member function type>' lvalue))
            (DeclRefExpr 0x901289c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9012410 '__off' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9012924 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (ReturnStmt 0x9012990 <line:433:5, col:13>
          (UnaryOperator 0x9012978 <col:12, col:13> '<dependent type>' prefix '*'
            (CXXThisExpr 0x9012968 <col:13> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CompoundStmt 0x9012b90 <line:436:3, line:440:3>
        (DeclStmt 0x9012a58 <line:438:5, col:40>
          0x90129d0 "const basic_string<_CharT, _Traits, _Alloc> __tmp =
            (ParenListExpr 0x9012a38 <col:29, col:39> 'const basic_string<_CharT, _Traits, _Alloc>'
              (DeclRefExpr 0x9012a04 <col:30> 'const _CharT *' lvalue ParmVar 0x9011800 '__s' 'const _CharT *')
              (DeclRefExpr 0x9012a1c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
        (ReturnStmt 0x9012b80 <line:439:5, col:62>
          (CallExpr 0x9012b50 <col:12, col:62> '<dependent type>'
            (MemberExpr 0x9012a78 <col:12> '<bound member function type>' ->_M_replace_safe 0x8fd2b60
              (CXXThisExpr 0x9012a68 <col:12> 'basic_string<_CharT, _Traits, _Alloc> *' this))
            (DeclRefExpr 0x9012a98 <col:28> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011750 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9012ab0 <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011790 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
            (CallExpr 0x9012b18 <col:41, col:55> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9012ae0 <col:41, col:47> '<dependent type>' lvalue
                (DeclRefExpr 0x9012ac8 <col:41> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x90129d0 '__tmp' 'const basic_string<_CharT, _Traits, _Alloc>')))
            (DeclRefExpr 0x9012b34 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9011840 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))))))


    void _M_destroy(const _Alloc &__a) throw() (CompoundStmt 0x9013410 </usr/include/c++/4.6/bits/basic_string.tcc:447:5, line:451:5>
  (DeclStmt 0x90132f8 <line:448:7, line:449:65>
    0x9013110 "const size_type __size =
      (CXXOperatorCallExpr 0x90132d0 <line:448:32, line:449:64> '<dependent type>'
        (UnresolvedLookupExpr 0x9013288 <line:448:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (UnaryExprOrTypeTraitExpr 0x9013150 <col:32, col:48> 'unsigned int' sizeof 'struct std::basic_string::_Rep_base')
        (BinaryOperator 0x9013270 <line:449:25, col:64> '<dependent type>' '*'
          (ParenExpr 0x9013238 <col:25, col:47> '<dependent type>'
            (CXXOperatorCallExpr 0x9013210 <col:26, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x90131c8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CXXDependentScopeMemberExpr 0x9013178 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x9013168 <col:26> 'struct std::basic_string::_Rep *' this))
              (IntegerLiteral 0x90131b0 <col:46> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9013258 <col:51, col:64> 'unsigned int' sizeof '_CharT')))")
  (CallExpr 0x90133e8 <line:450:7, col:77> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9013360 <col:7, col:29> '<dependent type>' lvalue
      (CXXUnresolvedConstructExpr 0x9013340 <col:7, col:27> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
        (DeclRefExpr 0x9013328 <col:24> 'const _Alloc' lvalue ParmVar 0x9012ff0 '__a' 'const _Alloc &')))
    (CXXReinterpretCastExpr 0x90133b8 <col:40, col:68> 'char *' reinterpret_cast<char *> <Dependent>
      (CXXThisExpr 0x9013398 <col:64> 'struct std::basic_string::_Rep *' this))
    (DeclRefExpr 0x90133d0 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9013110 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void _M_leak_hard() (CompoundStmt 0x9013ba0 </usr/include/c++/4.6/bits/basic_string.tcc:457:5, line:465:5>
  (IfStmt 0x9013970 <line:459:7, line:460:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9013938 <line:459:11, col:37> '<dependent type>'
      (UnresolvedLookupExpr 0x90138e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
      (CallExpr 0x9013870 <col:11, col:18> '<dependent type>'
        (MemberExpr 0x9013850 <col:11> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x9013840 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (UnaryOperator 0x90138c8 <col:23, col:37> '<dependent type>' prefix '&'
        (CallExpr 0x90138a8 <col:24, col:37> '<dependent type>'
          (DeclRefExpr 0x901388c <col:24> 'struct std::basic_string::_Rep &(void)' lvalue CXXMethod 0x8fbf650 '_S_empty_rep' 'struct std::basic_string::_Rep &(void)'))))
    (ReturnStmt 0x9013960 <line:460:2>)
    <<<NULL>>>)
  (IfStmt 0x9013ad8 <line:462:7, line:463:19>
    <<<NULL>>>
    (CallExpr 0x9013a18 <line:462:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90139e0 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x90139c0 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x90139a0 <col:11> '<bound member function type>' ->_M_rep 0x8fbdc30
            (CXXThisExpr 0x9013990 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9013ab0 <line:463:2, col:19> '<dependent type>'
      (MemberExpr 0x9013a48 <col:2> '<bound member function type>' ->_M_mutate 0x8fbf540
        (CXXThisExpr 0x9013a38 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (IntegerLiteral 0x9013a68 <col:12> 'int' 0)
      (IntegerLiteral 0x9013a80 <col:15> 'int' 0)
      (IntegerLiteral 0x9013a98 <col:18> 'int' 0))
    <<<NULL>>>)
  (CallExpr 0x9013b80 <line:464:7, col:31> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9013b48 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9013b28 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9013b08 <col:7> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x9013af8 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))


    void _M_mutate(size_type __pos, size_type __len1, size_type __len2) (CompoundStmt 0x9015428 </usr/include/c++/4.6/bits/basic_string.tcc:471:5, line:498:5>
  (DeclStmt 0x9014160 <line:472:7, col:48>
    0x90140c0 "const size_type __old_size =
      (CallExpr 0x9014140 <col:36, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9014108 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x90140f8 <col:36> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x90142d0 <line:473:7, col:64>
    0x9014180 "const size_type __new_size =
      (CXXOperatorCallExpr 0x90142a8 <col:36, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x9014270 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CXXOperatorCallExpr 0x9014230 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x90141e8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x90141b4 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90140c0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x90141cc <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013fb0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9014254 <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f70 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9014430 <line:474:7, col:63>
    0x90142f0 "const size_type __how_much =
      (CXXOperatorCallExpr 0x9014408 <col:36, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x90143d0 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CXXOperatorCallExpr 0x9014390 <col:36, col:49> '<dependent type>'
          (UnresolvedLookupExpr 0x9014358 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x9014324 <col:36> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90140c0 '__old_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x901433c <col:49> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x90143b4 <col:57> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f70 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9015348 <line:476:7, line:496:2>
    <<<NULL>>>
    (BinaryOperator 0x90145d8 <line:476:11, col:67> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9014508 <col:11, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x90144c0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
        (DeclRefExpr 0x9014440 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9014180 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x90144a0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9014468 <col:24, col:30> '<dependent type>' lvalue
            (CXXThisExpr 0x9014458 <col:24> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x90145b8 <col:44, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9014580 <col:44, col:54> '<dependent type>' lvalue
          (CallExpr 0x9014560 <col:44, col:51> '<dependent type>'
            (MemberExpr 0x9014540 <col:44> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9014530 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9014eb0 <line:477:2, line:490:2>
      (DeclStmt 0x9014688 <line:479:4, col:46>
        0x9014600 "const allocator_type __a =
          (CallExpr 0x9014668 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9014648 <col:31> '<bound member function type>' ->get_allocator 0x8fd4010
              (CXXThisExpr 0x9014638 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9014800 <line:480:4, col:66>
        0x90146b0 "std::basic_string::_Rep *__r =
          (CallExpr 0x90147d8 <col:16, col:65> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9014708 <col:16, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x901473c <col:32> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9014180 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (CallExpr 0x90147a0 <col:44, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9014768 <col:44, col:50> '<dependent type>' lvalue
                (CXXThisExpr 0x9014758 <col:44> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x90147bc <col:62> 'const allocator_type':'const _Alloc' lvalue Var 0x9014600 '__a' 'const allocator_type':'const _Alloc'))")
      (IfStmt 0x9014960 <line:482:4, line:483:49>
        <<<NULL>>>
        (DeclRefExpr 0x9014810 <line:482:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9014938 <line:483:6, col:49> '<dependent type>'
          (DeclRefExpr 0x9014828 <col:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CallExpr 0x9014890 <col:14, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9014858 <col:14, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9014840 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x90146b0 '__r' 'struct std::basic_string::_Rep *')))
          (CallExpr 0x9014900 <col:33, col:41> '<dependent type>'
            (UnresolvedMemberExpr 0x90148c0 <col:33> '<bound member function type>' lvalue))
          (DeclRefExpr 0x901491c <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (IfStmt 0x9014cf0 <line:484:4, line:486:45>
        <<<NULL>>>
        (DeclRefExpr 0x901497c <line:484:8> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90142f0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CallExpr 0x9014cc8 <line:485:6, line:486:45> '<dependent type>'
          (DeclRefExpr 0x9014994 <line:485:6> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9014b08 <col:14, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9014ac0 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CXXOperatorCallExpr 0x9014a80 <col:14, col:34> '<dependent type>'
              (UnresolvedLookupExpr 0x9014a38 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x9014a00 <col:14, col:30> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90149c8 <col:14, col:19> '<dependent type>' lvalue
                  (DeclRefExpr 0x90149ac <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x90146b0 '__r' 'struct std::basic_string::_Rep *')))
              (DeclRefExpr 0x9014a1c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9014aa4 <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013fb0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x9014c88 <line:486:7, col:27> '<dependent type>'
            (UnresolvedLookupExpr 0x9014c40 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CXXOperatorCallExpr 0x9014c00 <col:7, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x9014bb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x9014b80 <col:7, col:15> '<dependent type>'
                (UnresolvedMemberExpr 0x9014b40 <col:7> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9014b9c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9014c24 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f70 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9014cac <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90142f0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (CallExpr 0x9014db0 <line:488:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9014d60 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9014d40 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9014d20 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9014d10 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9014d94 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9014600 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9014e90 <line:489:4, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x9014de0 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9014e70 <col:12, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9014e38 <col:12, col:17> '<dependent type>' lvalue
            (DeclRefExpr 0x9014e20 <col:12> 'struct std::basic_string::_Rep *' lvalue Var 0x90146b0 '__r' 'struct std::basic_string::_Rep *')))))
    (IfStmt 0x9015328 <line:491:12, line:496:2>
      <<<NULL>>>
      (BinaryOperator 0x9014fa0 <line:491:16, col:40> '<dependent type>' '&&'
        (DeclRefExpr 0x9014ed8 <col:16> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90142f0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9014f78 <col:30, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9014f20 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
          (DeclRefExpr 0x9014ef0 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f70 '__len1' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9014f08 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013fb0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type')))
      (CompoundStmt 0x9015310 <line:492:2, line:496:2>
        (CallExpr 0x90152e8 <line:494:4, line:495:43> '<dependent type>'
          (DeclRefExpr 0x9014fb8 <line:494:4> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe6e0 '_M_move' 'void (_CharT *, const _CharT *, size_type)')
          (CXXOperatorCallExpr 0x9015128 <col:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x90150e0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CXXOperatorCallExpr 0x90150a0 <col:12, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x9015058 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x9015020 <col:12, col:20> '<dependent type>'
                (UnresolvedMemberExpr 0x9014fe0 <col:12> '<bound member function type>' lvalue))
              (DeclRefExpr 0x901503c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x90150c4 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013fb0 '__len2' 'size_type':'typename _CharT_alloc_type::size_type'))
          (CXXOperatorCallExpr 0x90152a8 <line:495:5, col:25> '<dependent type>'
            (UnresolvedLookupExpr 0x9015260 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
            (CXXOperatorCallExpr 0x9015220 <col:5, col:17> '<dependent type>'
              (UnresolvedLookupExpr 0x90151d8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x90151a0 <col:5, col:13> '<dependent type>'
                (UnresolvedMemberExpr 0x9015160 <col:5> '<bound member function type>' lvalue))
              (DeclRefExpr 0x90151bc <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f30 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9015244 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9013f70 '__len1' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x90152cc <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90142f0 '__how_much' 'const size_type':'const typename _CharT_alloc_type::size_type')))
      <<<NULL>>>))
  (CallExpr 0x9015408 <line:497:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x90153b8 <col:7, col:17> '<dependent type>' lvalue
      (CallExpr 0x9015398 <col:7, col:14> '<dependent type>'
        (MemberExpr 0x9015378 <col:7> '<bound member function type>' ->_M_rep 0x8fbdc30
          (CXXThisExpr 0x9015368 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
    (DeclRefExpr 0x90153ec <col:44> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9014180 '__new_size' 'const size_type':'const typename _CharT_alloc_type::size_type')))


    void reserve(size_type __res = (IntegerLiteral 0x8fdb7c0 </usr/include/c++/4.6/bits/basic_string.h:788:37> 'int' 0)
) (CompoundStmt 0x9016070 </usr/include/c++/4.6/bits/basic_string.tcc:504:5, line:515:5>
  (IfStmt 0x9016050 <line:505:7, line:514:9>
    <<<NULL>>>
    (BinaryOperator 0x9015a50 <line:505:11, col:63> '<dependent type>' '||'
      (CXXOperatorCallExpr 0x9015980 <col:11, col:35> '<dependent type>'
        (UnresolvedLookupExpr 0x9015928 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
        (DeclRefExpr 0x90158a4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90157c0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9015908 <col:20, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90158d0 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x90158c0 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9015a30 <col:40, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90159f8 <col:40, col:50> '<dependent type>' lvalue
          (CallExpr 0x90159d8 <col:40, col:47> '<dependent type>'
            (MemberExpr 0x90159b8 <col:40> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x90159a8 <col:40> 'basic_string<_CharT, _Traits, _Alloc> *' this))))))
    (CompoundStmt 0x9016028 <line:506:9, line:514:9>
      (IfStmt 0x9015bf0 <line:508:4, line:509:25>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9015b30 <line:508:8, col:27> '<dependent type>'
          (UnresolvedLookupExpr 0x9015ae8 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
          (DeclRefExpr 0x9015a68 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90157c0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9015ac8 <col:16, col:27> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9015a90 <col:16, col:22> '<dependent type>' lvalue
              (CXXThisExpr 0x9015a80 <col:16> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9015bd8 <line:509:6, col:25> '<dependent type>' '='
          (DeclRefExpr 0x9015b54 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90157c0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
          (CallExpr 0x9015bb8 <col:14, col:25> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9015b80 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9015b70 <col:14> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        <<<NULL>>>)
      (DeclStmt 0x9015ca8 <line:510:4, col:46>
        0x9015c20 "const allocator_type __a =
          (CallExpr 0x9015c88 <col:31, col:45> '<dependent type>'
            (MemberExpr 0x9015c68 <col:31> '<bound member function type>' ->get_allocator 0x8fd4010
              (CXXThisExpr 0x9015c58 <col:31> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
      (DeclStmt 0x9015ed0 <line:511:4, col:65>
        0x9015cf0 "_CharT *__tmp =
          (CallExpr 0x9015ea8 <col:20, col:64> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9015d78 <col:20, col:30> '<dependent type>' lvalue
              (CallExpr 0x9015d58 <col:20, col:27> '<dependent type>'
                (MemberExpr 0x9015d38 <col:20> '<bound member function type>' ->_M_rep 0x8fbdc30
                  (CXXThisExpr 0x9015d28 <col:20> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
            (DeclRefExpr 0x9015dac <col:39> 'const allocator_type':'const _Alloc' lvalue Var 0x9015c20 '__a' 'const allocator_type':'const _Alloc')
            (CXXOperatorCallExpr 0x9015e80 <col:44, col:63> '<dependent type>'
              (UnresolvedLookupExpr 0x9015e48 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x9015dc4 <col:44> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90157c0 '__res' 'size_type':'typename _CharT_alloc_type::size_type')
              (CallExpr 0x9015e28 <col:52, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9015df0 <col:52, col:58> '<dependent type>' lvalue
                  (CXXThisExpr 0x9015de0 <col:52> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))")
      (CallExpr 0x9015f80 <line:512:4, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9015f30 <col:4, col:14> '<dependent type>' lvalue
          (CallExpr 0x9015f10 <col:4, col:11> '<dependent type>'
            (MemberExpr 0x9015ef0 <col:4> '<bound member function type>' ->_M_rep 0x8fbdc30
              (CXXThisExpr 0x9015ee0 <col:4> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
        (DeclRefExpr 0x9015f64 <col:25> 'const allocator_type':'const _Alloc' lvalue Var 0x9015c20 '__a' 'const allocator_type':'const _Alloc'))
      (CallExpr 0x9016008 <line:513:4, col:17> '<dependent type>'
        (UnresolvedMemberExpr 0x9015fb0 <col:4> '<bound member function type>' lvalue)
        (DeclRefExpr 0x9015ff0 <col:12> '_CharT *' lvalue Var 0x9015cf0 '__tmp' '_CharT *')))
    <<<NULL>>>))


    void swap(basic_string<_CharT, _Traits, _Alloc> &__s) (CompoundStmt 0x9017038 </usr/include/c++/4.6/bits/basic_string.tcc:521:5, line:542:5>
  (IfStmt 0x9016668 <line:522:7, line:523:28>
    <<<NULL>>>
    (CallExpr 0x90165a0 <line:522:11, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9016568 <col:11, col:21> '<dependent type>' lvalue
        (CallExpr 0x9016548 <col:11, col:18> '<dependent type>'
          (MemberExpr 0x9016528 <col:11> '<bound member function type>' ->_M_rep 0x8fbdc30
            (CXXThisExpr 0x9016518 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (CallExpr 0x9016648 <line:523:2, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9016610 <col:2, col:12> '<dependent type>' lvalue
        (CallExpr 0x90165f0 <col:2, col:9> '<dependent type>'
          (MemberExpr 0x90165d0 <col:2> '<bound member function type>' ->_M_rep 0x8fbdc30
            (CXXThisExpr 0x90165c0 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (IfStmt 0x9016818 <line:524:7, line:525:32>
    <<<NULL>>>
    (CallExpr 0x9016730 <line:524:11, col:38> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90166f8 <col:11, col:25> '<dependent type>' lvalue
        (CallExpr 0x90166d8 <col:11, col:22> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90166a0 <col:11, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x9016684 <col:11> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    (CallExpr 0x90167f8 <line:525:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90167c0 <col:2, col:16> '<dependent type>' lvalue
        (CallExpr 0x90167a0 <col:2, col:13> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9016768 <col:2, col:6> '<dependent type>' lvalue
            (DeclRefExpr 0x901674c <col:2> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))))
    <<<NULL>>>)
  (IfStmt 0x9017018 <line:526:7, line:541:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9016968 <line:526:11, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x9016910 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
      (CallExpr 0x9016880 <col:11, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9016848 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9016838 <col:11> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x90168f0 <col:36, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90168b8 <col:36, col:40> '<dependent type>' lvalue
          (DeclRefExpr 0x901689c <col:36> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
    (CompoundStmt 0x9016be0 <line:527:2, line:531:2>
      (DeclStmt 0x9016a68 <line:528:4, col:29>
        0x90169c0 "_CharT *__tmp =
          (CallExpr 0x9016a48 <col:20, col:28> '<dependent type>'
            (UnresolvedMemberExpr 0x9016a08 <col:20> '<bound member function type>' lvalue))")
      (CallExpr 0x9016b38 <line:529:4, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x9016a88 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x9016b18 <col:12, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9016ae0 <col:12, col:16> '<dependent type>' lvalue
            (DeclRefExpr 0x9016ac8 <col:12> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))
      (CallExpr 0x9016bc0 <line:530:4, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9016b70 <col:4, col:8> '<dependent type>' lvalue
          (DeclRefExpr 0x9016b58 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))
        (DeclRefExpr 0x9016ba4 <col:16> '_CharT *' lvalue Var 0x90169c0 '__tmp' '_CharT *')))
    (CompoundStmt 0x9016ff8 <line:534:2, line:541:2>
      (DeclStmt 0x9016d80 <line:535:4, line:536:29>
        0x9016c10 "const basic_string<_CharT, _Traits, _Alloc> __tmp1 =
          (ParenListExpr 0x9016d58 <line:535:29, line:536:28> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9016c78 <line:535:30, col:40> '<dependent type>'
              (MemberExpr 0x9016c58 <col:30> '<bound member function type>' ->_M_ibegin 0x8fbdce0
                (CXXThisExpr 0x9016c48 <col:30> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9016cc8 <col:43, col:51> '<dependent type>'
              (MemberExpr 0x9016ca8 <col:43> '<bound member function type>' ->_M_iend 0x8fbdd60
                (CXXThisExpr 0x9016c98 <col:43> 'basic_string<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9016d38 <line:536:9, col:27> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9016d00 <col:9, col:13> '<dependent type>' lvalue
                (DeclRefExpr 0x9016ce4 <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
      (DeclStmt 0x9016f48 <line:537:4, line:538:31>
        0x9016da0 "const basic_string<_CharT, _Traits, _Alloc> __tmp2 =
          (ParenListExpr 0x9016f20 <line:537:29, line:538:30> 'const basic_string<_CharT, _Traits, _Alloc>'
            (CallExpr 0x9016e28 <line:537:30, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9016df0 <col:30, col:34> '<dependent type>' lvalue
                (DeclRefExpr 0x9016dd4 <col:30> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9016e98 <col:47, col:59> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9016e60 <col:47, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9016e44 <col:47> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9016f00 <line:538:9, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9016ec8 <col:9, col:15> '<dependent type>' lvalue
                (CXXThisExpr 0x9016eb8 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))))")
      (BinaryOperator 0x9016f98 <line:539:4, col:12> '<dependent type>' '='
        (UnaryOperator 0x9016f68 <col:4, col:5> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9016f58 <col:5> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9016f7c <col:12> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9016da0 '__tmp2' 'const basic_string<_CharT, _Traits, _Alloc>'))
      (BinaryOperator 0x9016fe0 <line:540:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x9016fb0 <col:4> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9016430 '__s' 'basic_string<_CharT, _Traits, _Alloc> &')
        (DeclRefExpr 0x9016fc8 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x9016c10 '__tmp1' 'const basic_string<_CharT, _Traits, _Alloc>')))))


    static typename basic_string<_CharT, _Traits, _Alloc>::_Rep *_S_create(size_type __capacity, size_type __old_capacity, const _Alloc &__alloc) (CompoundStmt 0x9018970 </usr/include/c++/4.6/bits/basic_string.tcc:549:5, line:620:5>
  (IfStmt 0x9017a68 <line:552:7, line:553:53>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9017968 <line:552:11, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9017920 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
      (DeclRefExpr 0x90178ec <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9017904 <col:24> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fffa20 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9017a38 <line:553:2, col:53> 'void'
      (ImplicitCastExpr 0x9017a28 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9017a0c <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9017a58 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x90179f8 <col:24, col:30> 'const char [24]' lvalue
          (StringLiteral 0x90179c4 </usr/include/c++/4.6/bits/basic_string.tcc:553:27> 'const char [24]' lvalue "basic_string::_S_create"))))
    <<<NULL>>>)
  (DeclStmt 0x9017ae0 <line:578:7, col:40>
    0x9017a90 "const size_type __pagesize =
      (IntegerLiteral 0x9017ac8 <col:36> 'int' 4096)")
  (DeclStmt 0x9017ba0 <line:579:7, col:63>
    0x9017b00 "const size_type __malloc_header_size =
      (BinaryOperator 0x9017b88 <col:46, col:62> 'unsigned int' '*'
        (ImplicitCastExpr 0x9017b78 <col:46> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9017b38 <col:46> 'int' 4))
        (UnaryExprOrTypeTraitExpr 0x9017b60 <col:50, col:62> 'unsigned int' sizeof 'void *'))")
  (IfStmt 0x9017db0 <line:587:7, line:588:19>
    <<<NULL>>>
    (BinaryOperator 0x9017d20 <line:587:11, col:59> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9017c28 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9017be0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
        (DeclRefExpr 0x9017bb0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9017bc8 <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90175c0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x9017cf8 <col:42, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9017cb0 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (DeclRefExpr 0x9017c4c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9017c98 <col:55, col:59> '<dependent type>' '*'
          (IntegerLiteral 0x9017c68 <col:55> 'int' 2)
          (DeclRefExpr 0x9017c80 <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90175c0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type'))))
    (BinaryOperator 0x9017d98 <line:588:2, col:19> '<dependent type>' '='
      (DeclRefExpr 0x9017d38 <col:2> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
      (BinaryOperator 0x9017d80 <col:15, col:19> '<dependent type>' '*'
        (IntegerLiteral 0x9017d50 <col:15> 'int' 2)
        (DeclRefExpr 0x9017d68 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90175c0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (DeclStmt 0x9017f98 <line:593:7, col:74>
    0x9017de0 "size_type __size =
      (CXXOperatorCallExpr 0x9017f70 <col:26, col:73> '<dependent type>'
        (UnresolvedLookupExpr 0x9017f28 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (BinaryOperator 0x9017ef0 <col:26, col:58> '<dependent type>' '*'
          (ParenExpr 0x9017eb8 <col:26, col:41> '<dependent type>'
            (CXXOperatorCallExpr 0x9017e90 <col:27, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9017e48 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
              (DeclRefExpr 0x9017e14 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
              (IntegerLiteral 0x9017e30 <col:40> 'int' 1)))
          (UnaryExprOrTypeTraitExpr 0x9017ed8 <col:45, col:58> 'unsigned int' sizeof '_CharT'))
        (UnaryExprOrTypeTraitExpr 0x9017f10 <col:62, col:73> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))")
  (DeclStmt 0x9018088 <line:595:7, col:65>
    0x9017fb0 "const size_type __adj_size =
      (CXXOperatorCallExpr 0x9018060 <col:36, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9018018 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x9017fe4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9017de0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9017ffc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017b00 '__malloc_header_size' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9018668 <line:596:7, line:604:2>
    <<<NULL>>>
    (BinaryOperator 0x90181d8 <line:596:11, col:51> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x9018110 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x90180c8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
        (DeclRefExpr 0x9018098 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017fb0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x90180b0 <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017a90 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CXXOperatorCallExpr 0x90181b0 <col:38, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x9018168 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
        (DeclRefExpr 0x9018134 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x901814c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90175c0 '__old_capacity' 'size_type':'typename _CharT_alloc_type::size_type')))
    (CompoundStmt 0x9018648 <line:597:2, line:604:2>
      (DeclStmt 0x90182f8 <line:598:4, col:66>
        0x9018200 "const size_type __extra =
          (CXXOperatorCallExpr 0x90182d0 <col:30, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x9018298 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9018234 <col:30> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017a90 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (BinaryOperator 0x9018280 <col:43, col:56> '<dependent type>' '%'
              (DeclRefExpr 0x901824c <col:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017fb0 '__adj_size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9018264 <col:56> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9017a90 '__pagesize' 'const size_type':'const typename _CharT_alloc_type::size_type')))")
      (CompoundAssignOperator 0x9018370 <line:599:4, col:41> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9018308 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
        (BinaryOperator 0x9018358 <col:18, col:41> '<dependent type>' '/'
          (DeclRefExpr 0x9018320 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9018200 '__extra' 'const size_type':'const typename _CharT_alloc_type::size_type')
          (UnaryExprOrTypeTraitExpr 0x9018340 <col:28, col:41> 'unsigned int' sizeof '_CharT')))
      (IfStmt 0x9018478 <line:601:4, line:602:19>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9018408 <line:601:8, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x90183c0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (DeclRefExpr 0x9018390 <col:8> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x90183a8 <col:21> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fffa20 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9018460 <line:602:6, col:19> '<dependent type>' '='
          (DeclRefExpr 0x901842c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9018444 <col:19> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fffa20 '_S_max_size' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (BinaryOperator 0x9018630 <line:603:4, col:60> '<dependent type>' '='
        (DeclRefExpr 0x9018494 <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9017de0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
        (CXXOperatorCallExpr 0x9018608 <col:13, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x90185c0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
          (BinaryOperator 0x9018588 <col:13, col:45> '<dependent type>' '*'
            (ParenExpr 0x9018550 <col:13, col:28> '<dependent type>'
              (CXXOperatorCallExpr 0x9018528 <col:14, col:27> '<dependent type>'
                (UnresolvedLookupExpr 0x90184e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
                (DeclRefExpr 0x90184ac <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type')
                (IntegerLiteral 0x90184c8 <col:27> 'int' 1)))
            (UnaryExprOrTypeTraitExpr 0x9018570 <col:32, col:45> 'unsigned int' sizeof '_CharT'))
          (UnaryExprOrTypeTraitExpr 0x90185a8 <col:49, col:60> 'unsigned int' sizeof 'struct std::basic_string::_Rep'))))
    <<<NULL>>>)
  (DeclStmt 0x9018788 <line:608:7, col:65>
    0x90186a0 "void *__place =
      (CallExpr 0x9018768 <col:23, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9018718 <col:23, col:49> '<dependent type>' lvalue
          (CXXUnresolvedConstructExpr 0x90186f8 <col:23, col:47> '_Raw_bytes_alloc':'typename _Alloc::_Alloc::rebind<char>::other'
            (DeclRefExpr 0x90186e0 <col:40> 'const _Alloc' lvalue ParmVar 0x9017630 '__alloc' 'const _Alloc &')))
        (DeclRefExpr 0x901874c <col:58> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9017de0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9018848 <line:609:7, col:37>
    0x90187b0 "std::basic_string::_Rep *__p =
      (CXXNewExpr 0x9018808 <col:19, col:33> 'struct std::basic_string::_Rep *'
        (DeclRefExpr 0x90187e4 <col:24> 'void *' lvalue Var 0x90186a0 '__place' 'void *'))")
  (BinaryOperator 0x90188c0 <line:610:7, col:26> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9018870 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9018858 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x90187b0 '__p' 'struct std::basic_string::_Rep *'))
    (DeclRefExpr 0x90188a4 <col:26> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9017580 '__capacity' 'size_type':'typename _CharT_alloc_type::size_type'))
  (CallExpr 0x9018928 <line:618:7, col:28> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x90188f0 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x90188d8 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x90187b0 '__p' 'struct std::basic_string::_Rep *')))
  (ReturnStmt 0x9018960 <line:619:7, col:14>
    (DeclRefExpr 0x9018944 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x90187b0 '__p' 'struct std::basic_string::_Rep *')))


    _CharT *_M_clone(const _Alloc &__alloc, size_type __res = (IntegerLiteral 0x8fdb710 </usr/include/c++/4.6/bits/basic_string.h:262:44> 'int' 0)
) (CompoundStmt 0x9019450 </usr/include/c++/4.6/bits/basic_string.tcc:626:5, line:636:5>
  (DeclStmt 0x9019018 <line:628:7, col:64>
    0x9018f10 "const size_type __requested_cap =
      (CXXOperatorCallExpr 0x9018ff0 <col:41, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x9018fa8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (CXXDependentScopeMemberExpr 0x9018f58 <col:41, col:47> '<dependent type>' lvalue
          (CXXThisExpr 0x9018f48 <col:41> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9018f8c <col:59> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9018dc0 '__res' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9019158 <line:629:7, line:630:15>
    0x9019040 "std::basic_string::_Rep *__r =
      (CallExpr 0x9019130 <line:629:19, line:630:14> '<dependent type>'
        (DeclRefExpr 0x9019094 <line:629:19, col:25> 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)' lvalue CXXMethod 0x9017850 '_S_create' 'typename basic_string<_CharT, _Traits, _Alloc>::_Rep *(size_type, size_type, const _Alloc &)')
        (DeclRefExpr 0x90190b4 <col:35> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9018f10 '__requested_cap' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (CXXDependentScopeMemberExpr 0x90190e0 <col:52, col:58> '<dependent type>' lvalue
          (CXXThisExpr 0x90190d0 <col:52> 'struct std::basic_string::_Rep *' this))
        (DeclRefExpr 0x9019114 <line:630:7> 'const _Alloc' lvalue ParmVar 0x9018d80 '__alloc' 'const _Alloc &'))")
  (IfStmt 0x90192f8 <line:631:7, line:632:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9019178 <line:631:11, col:17> '<dependent type>' lvalue
      (CXXThisExpr 0x9019168 <col:11> 'struct std::basic_string::_Rep *' this))
    (CallExpr 0x90192d0 <line:632:2, col:58> '<dependent type>'
      (DeclRefExpr 0x90191ac <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CallExpr 0x9019218 <col:10, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90191e0 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x90191c4 <col:10> 'struct std::basic_string::_Rep *' lvalue Var 0x9019040 '__r' 'struct std::basic_string::_Rep *')))
      (CallExpr 0x9019268 <col:29, col:40> '<dependent type>'
        (MemberExpr 0x9019248 <col:29> '<bound member function type>' ->_M_refdata 0x8fbb740
          (CXXThisExpr 0x9019238 <col:29> 'struct std::basic_string::_Rep *' this)))
      (CXXDependentScopeMemberExpr 0x9019298 <col:43, col:49> '<dependent type>' lvalue
        (CXXThisExpr 0x9019288 <col:43> 'struct std::basic_string::_Rep *' this)))
    <<<NULL>>>)
  (CallExpr 0x90193b0 <line:634:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9019330 <col:7, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9019314 <col:7> 'struct std::basic_string::_Rep *' lvalue Var 0x9019040 '__r' 'struct std::basic_string::_Rep *'))
    (CXXDependentScopeMemberExpr 0x9019378 <col:39, col:45> '<dependent type>' lvalue
      (CXXThisExpr 0x9019368 <col:39> 'struct std::basic_string::_Rep *' this)))
  (ReturnStmt 0x9019440 <line:635:7, col:30>
    (CallExpr 0x9019420 <col:14, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90193e8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x90193d0 <col:14> 'struct std::basic_string::_Rep *' lvalue Var 0x9019040 '__r' 'struct std::basic_string::_Rep *')))))


    void resize(size_type __n, _CharT __c) (CompoundStmt 0x9019dd0 </usr/include/c++/4.6/bits/basic_string.tcc:642:5, line:650:5>
  (DeclStmt 0x90199f0 <line:643:7, col:44>
    0x9019950 "const size_type __size =
      (CallExpr 0x90199d0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9019998 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9019988 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (CallExpr 0x9019a90 <line:644:7, col:58> '<dependent type>'
    (MemberExpr 0x9019a10 <col:7> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x9019a00 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9019a30 <col:23> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9019950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x9019a48 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90197f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9019a60 <col:36> 'const char [21]' lvalue "basic_string::resize"))
  (IfStmt 0x9019db0 <line:645:7, line:648:17>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9019b30 <line:645:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9019ae8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x9019ab8 <col:11> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9019950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9019ad0 <col:20> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90197f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CallExpr 0x9019c48 <line:646:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9019b68 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9019b58 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x9019c08 <col:15, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x9019bd0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x9019b9c <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90197f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9019bb4 <col:21> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9019950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x9019c2c <col:29> '_CharT' lvalue ParmVar 0x9019830 '__c' '_CharT'))
    (IfStmt 0x9019d90 <line:647:12, line:648:17>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9019ce8 <line:647:16, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x9019ca0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (DeclRefExpr 0x9019c6c <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90197f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9019c84 <col:22> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9019950 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
      (CallExpr 0x9019d70 <line:648:2, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9019d20 <col:2, col:8> '<dependent type>' lvalue
          (CXXThisExpr 0x9019d10 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9019d54 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90197f0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>)))


    template <typename _InputIterator> basic_string<_CharT, _Traits, _Alloc> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type) (CompoundStmt 0x901ac38 </usr/include/c++/4.6/bits/basic_string.tcc:658:7, line:664:7>
  (DeclStmt 0x901a7b8 <line:659:2, col:36>
    0x901a730 "const basic_string<_CharT, _Traits, _Alloc> __s =
      (ParenListExpr 0x901a798 <col:24, col:35> 'const basic_string<_CharT, _Traits, _Alloc>'
        (DeclRefExpr 0x901a764 <col:25> '_InputIterator' lvalue ParmVar 0x901a380 '__k1' '_InputIterator')
        (DeclRefExpr 0x901a77c <col:31> '_InputIterator' lvalue ParmVar 0x901a3c0 '__k2' '_InputIterator'))")
  (DeclStmt 0x901a898 <line:660:2, col:36>
    0x901a7d0 "const size_type __n1 =
      (CXXOperatorCallExpr 0x901a870 <col:25, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x901a838 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x901a804 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x901a340 '__i2' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (DeclRefExpr 0x901a81c <col:32> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x901a300 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >'))")
  (CallExpr 0x901a9e0 <line:661:2, col:71> '<dependent type>'
    (MemberExpr 0x901a8b8 <col:2> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x901a8a8 <col:2> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x901a8d8 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x901a7d0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
    (CallExpr 0x901a940 <col:24, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x901a908 <col:24, col:28> '<dependent type>' lvalue
        (DeclRefExpr 0x901a8f0 <col:24> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901a730 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
    (StringLiteral 0x901a9a0 <col:36> 'const char [34]' lvalue "basic_string::_M_replace_dispatch"))
  (ReturnStmt 0x901ac28 <line:662:2, line:663:21>
    (CallExpr 0x901abf8 <line:662:9, line:663:21> '<dependent type>'
      (MemberExpr 0x901aa18 <line:662:9> '<bound member function type>' ->_M_replace_safe 0x8fd2b60
        (CXXThisExpr 0x901aa08 <col:9> 'basic_string<_CharT, _Traits, _Alloc> *' this))
      (CXXOperatorCallExpr 0x901aad8 <col:25, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x901aaa0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x901aa38 <col:25> 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >' lvalue ParmVar 0x901a300 '__i1' 'iterator':'__normal_iterator<pointer, basic_string<_CharT, _Traits, _Alloc> >')
        (CallExpr 0x901aa80 <col:32, col:42> '<dependent type>'
          (MemberExpr 0x901aa60 <col:32> '<bound member function type>' ->_M_ibegin 0x8fbdce0
            (CXXThisExpr 0x901aa50 <col:32> 'basic_string<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x901aafc <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x901a7d0 '__n1' 'const size_type':'const typename _CharT_alloc_type::size_type')
      (CallExpr 0x901ab68 <col:51, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x901ab30 <col:51, col:55> '<dependent type>' lvalue
          (DeclRefExpr 0x901ab14 <col:51> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901a730 '__s' 'const basic_string<_CharT, _Traits, _Alloc>')))
      (CallExpr 0x901abd8 <line:663:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x901aba0 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x901ab84 <col:11> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901a730 '__s' 'const basic_string<_CharT, _Traits, _Alloc>'))))))

;
    basic_string<_CharT, _Traits, _Alloc> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c) (CompoundStmt 0x901b7c8 </usr/include/c++/4.6/bits/basic_string.tcc:671:5, line:677:5>
  (CallExpr 0x901b528 <line:672:7, col:65> '<dependent type>'
    (MemberExpr 0x901b460 <col:7> '<bound member function type>' ->_M_check_length 0x8fbe100
      (CXXThisExpr 0x901b450 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x901b480 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b130 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x901b498 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b170 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x901b4f0 <col:35> 'const char [29]' lvalue "basic_string::_M_replace_aux"))
  (CallExpr 0x901b5c8 <line:673:7, col:35> '<dependent type>'
    (MemberExpr 0x901b560 <col:7> '<bound member function type>' ->_M_mutate 0x9014010
      (CXXThisExpr 0x901b550 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x901b580 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b0f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x901b598 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b130 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x901b5b0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b170 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x901b770 <line:674:7, line:675:41>
    <<<NULL>>>
    (DeclRefExpr 0x901b5f0 <line:674:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b170 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x901b748 <line:675:2, col:41> '<dependent type>'
      (DeclRefExpr 0x901b608 <col:2> 'void (_CharT *, size_type, _CharT)' lvalue CXXMethod 0x8fbe8a0 '_M_assign' 'void (_CharT *, size_type, _CharT)')
      (CXXOperatorCallExpr 0x901b6f0 <col:12, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x901b6a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x901b670 <col:12, col:20> '<dependent type>'
          (UnresolvedMemberExpr 0x901b630 <col:12> '<bound member function type>' lvalue))
        (DeclRefExpr 0x901b68c <col:24> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b0f0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x901b714 <col:32> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901b170 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x901b72c <col:38> '_CharT' lvalue ParmVar 0x901b1b0 '__c' '_CharT'))
    <<<NULL>>>)
  (ReturnStmt 0x901b7b8 <line:676:7, col:15>
    (UnaryOperator 0x901b7a0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x901b790 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    basic_string<_CharT, _Traits, _Alloc> &_M_replace_safe(size_type __pos1, size_type __n1, const _CharT *__s, size_type __n2) (CompoundStmt 0x901c288 </usr/include/c++/4.6/bits/basic_string.tcc:684:5, line:689:5>
  (CallExpr 0x901c088 <line:685:7, col:35> '<dependent type>'
    (MemberExpr 0x901c020 <col:7> '<bound member function type>' ->_M_mutate 0x9014010
      (CXXThisExpr 0x901c010 <col:7> 'basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x901c040 <col:17> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bc80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x901c058 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bcc0 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (DeclRefExpr 0x901c070 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bd70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
  (IfStmt 0x901c230 <line:686:7, line:687:39>
    <<<NULL>>>
    (DeclRefExpr 0x901c0b0 <line:686:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bd70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x901c208 <line:687:2, col:39> '<dependent type>'
      (DeclRefExpr 0x901c0c8 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (CXXOperatorCallExpr 0x901c1b0 <col:10, col:22> '<dependent type>'
        (UnresolvedLookupExpr 0x901c168 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x8ff2810 0x8ff2d60 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x901c130 <col:10, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x901c0f0 <col:10> '<bound member function type>' lvalue))
        (DeclRefExpr 0x901c14c <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bc80 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x901c1d4 <col:30> 'const _CharT *' lvalue ParmVar 0x901bd30 '__s' 'const _CharT *')
      (DeclRefExpr 0x901c1ec <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901bd70 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x901c278 <line:688:7, col:15>
    (UnaryOperator 0x901c260 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x901c250 <col:15> 'basic_string<_CharT, _Traits, _Alloc> *' this))))


    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(const _CharT *__lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x901ce98 </usr/include/c++/4.6/bits/basic_string.tcc:695:5, line:705:5>
  (NullStmt 0x901c820 <line:696:39>)
  (DeclStmt 0x901c9c0 <line:697:7, col:66>
    0x901c990 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x901ca80 <line:698:7, col:62>
    0x901ca50 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x901cb70 <line:699:7, col:55>
    0x901cab0 "const __size_type __len =
      (CallExpr 0x901cb50 <col:33, col:54> '<dependent type>'
        (DependentScopeDeclRefExpr 0x901cb10 <col:33, col:42> '<dependent type>' lvalue)
        (DeclRefExpr 0x901cb34 <col:49> 'const _CharT *' lvalue ParmVar 0x901c500 '__lhs' 'const _CharT *'))")
  (DeclStmt 0x901cbc8 <line:700:7, col:26>
    0x901cb90 "__string_type __str")
  (CallExpr 0x901cd20 <line:701:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901cbf0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901cbd8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901cb90 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x901ccf8 <col:21, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x901ccb0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff2d60 0x8ff32e0)
      (DeclRefExpr 0x901cc24 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x901cab0 '__len' 'const __size_type':'const typename __string_type::size_type')
      (CallExpr 0x901cc90 <col:29, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x901cc58 <col:29, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x901cc3c <col:29> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x901c6b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
  (CallExpr 0x901cdc0 <line:702:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901cd58 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901cd40 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901cb90 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x901cd8c <col:20> 'const _CharT *' lvalue ParmVar 0x901c500 '__lhs' 'const _CharT *')
    (DeclRefExpr 0x901cda4 <col:27> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x901cab0 '__len' 'const __size_type':'const typename __string_type::size_type'))
  (CallExpr 0x901ce50 <line:703:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901ce00 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901cde4 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901cb90 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x901ce34 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x901c6b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x901ce88 <line:704:7, col:14>
    (DeclRefExpr 0x901ce70 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901cb90 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    template <typename _CharT, typename _Traits, typename _Alloc> basic_string<_CharT, _Traits, _Alloc> operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc> &__rhs) (CompoundStmt 0x901da48 </usr/include/c++/4.6/bits/basic_string.tcc:710:5, line:719:5>
  (DeclStmt 0x901d5b0 <line:711:7, col:66>
    0x901d580 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x901d670 <line:712:7, col:62>
    0x901d640 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x901d6c8 <line:713:7, col:26>
    0x901d690 "__string_type __str")
  (DeclStmt 0x901d7a8 <line:714:7, col:45>
    0x901d700 "const __size_type __len =
      (CallExpr 0x901d788 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x901d750 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x901d734 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x901d2b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (CallExpr 0x901d8a8 <line:715:7, col:30> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901d7d0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901d7b8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901d690 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXOperatorCallExpr 0x901d880 <col:21, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x901d838 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
      (DeclRefExpr 0x901d804 <col:21> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x901d700 '__len' 'const __size_type':'const typename __string_type::size_type')
      (IntegerLiteral 0x901d820 <col:29> 'int' 1)))
  (CallExpr 0x901d970 <line:716:7, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901d8e0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901d8c8 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901d690 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (CXXUnresolvedConstructExpr 0x901d938 <col:20, col:33> '__size_type':'typename __string_type::size_type'
      (IntegerLiteral 0x901d920 <col:32> 'int' 1))
    (DeclRefExpr 0x901d954 <col:36> '_CharT' lvalue ParmVar 0x901d100 '__lhs' '_CharT'))
  (CallExpr 0x901da00 <line:717:7, col:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x901d9b0 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x901d994 <col:7> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901d690 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>'))
    (DeclRefExpr 0x901d9e4 <col:20> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x901d2b0 '__rhs' 'const basic_string<_CharT, _Traits, _Alloc> &'))
  (ReturnStmt 0x901da38 <line:718:7, col:14>
    (DeclRefExpr 0x901da20 <col:14> '__string_type':'basic_string<_CharT, _Traits, _Alloc>' lvalue Var 0x901d690 '__str' '__string_type':'basic_string<_CharT, _Traits, _Alloc>')))

;
    typename basic_string<_CharT, _Traits, _Alloc>::size_type copy(_CharT *__s, size_type __n, size_type __pos = (IntegerLiteral 0x8fdb808 </usr/include/c++/4.6/bits/basic_string.h:1745:58> 'int' 0)
) const (CompoundStmt 0x901e5d8 </usr/include/c++/4.6/bits/basic_string.tcc:725:5, line:733:5>
  (CallExpr 0x901e320 <line:726:7, col:43> '<dependent type>'
    (MemberExpr 0x901e2a0 <col:7> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x901e290 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x901e2c0 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901e000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x901e2d8 <col:23> 'const char [19]' lvalue "basic_string::copy"))
  (BinaryOperator 0x901e3e8 <line:727:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x901e344 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901dfc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x901e3c0 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x901e370 <col:13> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x901e360 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x901e390 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901e000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x901e3a8 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901dfc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (NullStmt 0x901e400 <line:728:46>)
  (IfStmt 0x901e590 <line:729:7, line:730:37>
    <<<NULL>>>
    (DeclRefExpr 0x901e40c <line:729:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901dfc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x901e568 <line:730:2, col:37> '<dependent type>'
      (DeclRefExpr 0x901e424 <col:2> 'void (_CharT *, const _CharT *, size_type)' lvalue CXXMethod 0x8fbe570 '_M_copy' 'void (_CharT *, const _CharT *, size_type)')
      (DeclRefExpr 0x901e43c <col:10> '_CharT *' lvalue ParmVar 0x901df80 '__s' '_CharT *')
      (CXXOperatorCallExpr 0x901e528 <col:15, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x901e4e0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
        (CallExpr 0x901e4a8 <col:15, col:23> '<dependent type>'
          (UnresolvedMemberExpr 0x901e468 <col:15> '<bound member function type>' lvalue))
        (DeclRefExpr 0x901e4c4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901e000 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      (DeclRefExpr 0x901e54c <col:34> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901dfc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    <<<NULL>>>)
  (ReturnStmt 0x901e5c8 <line:732:7, col:14>
    (DeclRefExpr 0x901e5ac <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901dfc0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x901f8d0 </usr/include/c++/4.6/bits/basic_string.tcc:739:5, line:756:5>
  (NullStmt 0x901ee10 <line:740:46>)
  (DeclStmt 0x901eed0 <line:741:7, col:44>
    0x901ee30 "const size_type __size =
      (CallExpr 0x901eeb0 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x901ee78 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x901ee68 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x901ef98 <line:742:7, col:39>
    0x901eef0 "const _CharT *__data =
      (CallExpr 0x901ef78 <col:30, col:38> '<dependent type>'
        (UnresolvedMemberExpr 0x901ef38 <col:30> '<bound member function type>' lvalue))")
  (IfStmt 0x901f158 <line:744:7, line:745:35>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x901f030 <line:744:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x901efd8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
      (DeclRefExpr 0x901efa8 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (IntegerLiteral 0x901efc0 <col:18> 'int' 0))
    (ReturnStmt 0x901f148 <line:745:2, col:35>
      (ConditionalOperator 0x901f128 <col:9, col:35> '<dependent type>'
        (CXXOperatorCallExpr 0x901f0d0 <col:9, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x901f088 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
          (DeclRefExpr 0x901f054 <col:9> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x901f06c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x901ee30 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x901f0f4 <col:27> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x901f10c <col:35> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (IfStmt 0x901f888 <line:747:7, line:754:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x901f1f0 <line:747:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x901f1a8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
      (DeclRefExpr 0x901f174 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x901f18c <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x901ee30 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x901f870 <line:748:2, line:754:2>
      (ForStmt 0x901f848 <line:749:4, line:753:15>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x901f308 <line:749:11, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x901f2c0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
          (DeclRefExpr 0x901f214 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x901f298 <col:20, col:29> '<dependent type>'
            (UnresolvedLookupExpr 0x901f260 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x901f22c <col:20> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x901ee30 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x901f244 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
        (UnaryOperator 0x901f348 <col:34, col:36> '<dependent type>' prefix '++'
          (DeclRefExpr 0x901f32c <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (IfStmt 0x901f828 <line:750:6, line:753:15>
          <<<NULL>>>
          (BinaryOperator 0x901f7e8 <line:750:10, line:752:27> '<dependent type>' '&&'
            (CallExpr 0x901f450 <line:750:10, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x901f388 <col:10, col:23> '<dependent type>' lvalue)
              (ArraySubscriptExpr 0x901f3f0 <col:26, col:38> '<dependent type>' lvalue
                (DeclRefExpr 0x901f3bc <col:26> 'const _CharT *' lvalue Var 0x901eef0 '__data' 'const _CharT *')
                (DeclRefExpr 0x901f3d4 <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
              (ArraySubscriptExpr 0x901f438 <col:41, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x901f404 <col:41> 'const _CharT *' lvalue ParmVar 0x901eb00 '__s' 'const _CharT *')
                (IntegerLiteral 0x901f420 <col:45> 'int' 0)))
            (CXXOperatorCallExpr 0x901f7c0 <line:751:6, line:752:27> '<dependent type>'
              (UnresolvedLookupExpr 0x901f768 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
              (CallExpr 0x901f728 <line:751:6, line:752:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x901f498 <line:751:6, col:19> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x901f5d0 <col:27, col:44> '<dependent type>'
                  (UnresolvedLookupExpr 0x901f588 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
                  (CXXOperatorCallExpr 0x901f548 <col:27, col:36> '<dependent type>'
                    (UnresolvedLookupExpr 0x901f500 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
                    (DeclRefExpr 0x901f4cc <col:27> 'const _CharT *' lvalue Var 0x901eef0 '__data' 'const _CharT *')
                    (DeclRefExpr 0x901f4e4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                  (IntegerLiteral 0x901f570 <col:44> 'int' 1))
                (CXXOperatorCallExpr 0x901f670 <line:752:6, col:12> '<dependent type>'
                  (UnresolvedLookupExpr 0x901f628 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
                  (DeclRefExpr 0x901f5f4 <col:6> 'const _CharT *' lvalue ParmVar 0x901eb00 '__s' 'const _CharT *')
                  (IntegerLiteral 0x901f610 <col:12> 'int' 1))
                (CXXOperatorCallExpr 0x901f700 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x901f6c8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (DeclRefExpr 0x901f694 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb80 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                  (IntegerLiteral 0x901f6b0 <col:21> 'int' 1)))
              (IntegerLiteral 0x901f750 <col:27> 'int' 0)))
          (ReturnStmt 0x901f818 <line:753:8, col:15>
            (DeclRefExpr 0x901f800 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901eb40 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x901f8c0 <line:755:7, col:14>
    (DeclRefExpr 0x901f8a4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find(_CharT __c, size_type __pos = (IntegerLiteral 0x8fdb850 </usr/include/c++/4.6/bits/basic_string.h:1841:42> 'int' 0)
) const (CompoundStmt 0x9020738 </usr/include/c++/4.6/bits/basic_string.tcc:762:5, line:774:5>
  (DeclStmt 0x90200f0 <line:763:7, col:29>
    0x90200a0 "size_type __ret =
      (DeclRefExpr 0x90200d4 <col:25> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')")
  (DeclStmt 0x90201b0 <line:764:7, col:44>
    0x9020110 "const size_type __size =
      (CallExpr 0x9020190 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9020158 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9020148 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x90206f0 <line:765:7, line:772:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9020238 <line:765:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x90201f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x90201c0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901fe10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x90201d8 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9020110 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x90206d0 <line:766:2, line:772:2>
      (DeclStmt 0x9020338 <line:767:4, col:36>
        0x9020290 "const _CharT *__data =
          (CallExpr 0x9020318 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x90202d8 <col:27> '<bound member function type>' lvalue))")
      (DeclStmt 0x9020418 <line:768:4, col:40>
        0x9020350 "const size_type __n =
          (CXXOperatorCallExpr 0x90203f0 <col:26, col:35> '<dependent type>'
            (UnresolvedLookupExpr 0x90203b8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9020384 <col:26> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9020110 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x902039c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901fe10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))")
      (DeclStmt 0x90205c8 <line:769:4, col:67>
        0x9020440 "const _CharT *__p =
          (CallExpr 0x90205a0 <col:24, col:66> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9020498 <col:24, col:37> '<dependent type>' lvalue)
            (CXXOperatorCallExpr 0x9020548 <col:42, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x9020500 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
              (DeclRefExpr 0x90204cc <col:42> 'const _CharT *' lvalue Var 0x9020290 '__data' 'const _CharT *')
              (DeclRefExpr 0x90204e4 <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x901fe10 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x902056c <col:58> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9020350 '__n' 'const size_type':'const typename _CharT_alloc_type::size_type')
            (DeclRefExpr 0x9020584 <col:63> '_CharT' lvalue ParmVar 0x901fdd0 '__c' '_CharT'))")
      (IfStmt 0x90206b0 <line:770:4, line:771:20>
        <<<NULL>>>
        (DeclRefExpr 0x90205d8 <line:770:8> 'const _CharT *' lvalue Var 0x9020440 '__p' 'const _CharT *')
        (BinaryOperator 0x9020698 <line:771:6, col:20> '<dependent type>' '='
          (DeclRefExpr 0x90205f0 <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90200a0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')
          (CXXOperatorCallExpr 0x9020670 <col:14, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x9020638 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9020608 <col:14> 'const _CharT *' lvalue Var 0x9020440 '__p' 'const _CharT *')
            (DeclRefExpr 0x9020620 <col:20> 'const _CharT *' lvalue Var 0x9020290 '__data' 'const _CharT *')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9020728 <line:773:7, col:14>
    (DeclRefExpr 0x902070c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90200a0 '__ret' 'size_type':'typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x90216c8 </usr/include/c++/4.6/bits/basic_string.tcc:780:5, line:795:5>
  (NullStmt 0x9020f70 <line:781:46>)
  (DeclStmt 0x9021030 <line:782:7, col:44>
    0x9020f90 "const size_type __size =
      (CallExpr 0x9021010 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9020fd8 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9020fc8 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9021680 <line:783:7, line:793:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x90210b8 <line:783:11, col:18> '<dependent type>'
      (UnresolvedLookupExpr 0x9021070 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
      (DeclRefExpr 0x9021040 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9021058 <col:18> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9020f90 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9021660 <line:784:2, line:793:2>
      (BinaryOperator 0x9021240 <line:785:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x90210dc <col:4> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9021218 <col:12, col:51> '<dependent type>'
          (UnresolvedLookupExpr 0x9021110 <col:12, col:17> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
          (CXXUnresolvedConstructExpr 0x90211e0 <col:21, col:43> 'size_type':'typename _CharT_alloc_type::size_type'
            (CXXOperatorCallExpr 0x90211b8 <col:31, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x9021180 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (DeclRefExpr 0x9021150 <col:31> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9020f90 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
              (DeclRefExpr 0x9021168 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
          (DeclRefExpr 0x90211fc <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))
      (DeclStmt 0x9021318 <line:786:4, col:36>
        0x9021270 "const _CharT *__data =
          (CallExpr 0x90212f8 <col:27, col:35> '<dependent type>'
            (UnresolvedMemberExpr 0x90212b8 <col:27> '<bound member function type>' lvalue))")
      (DoStmt 0x9021648 <line:787:4, line:792:22>
        (CompoundStmt 0x9021560 <line:788:6, line:791:6>
          (IfStmt 0x9021540 <line:789:8, line:790:10>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x90214f0 <line:789:12, col:62> '<dependent type>'
              (UnresolvedLookupExpr 0x9021498 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
              (CallExpr 0x9021458 <col:12, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9021350 <col:12, col:25> '<dependent type>' lvalue)
                (CXXOperatorCallExpr 0x9021400 <col:33, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x90213b8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
                  (DeclRefExpr 0x9021384 <col:33> 'const _CharT *' lvalue Var 0x9021270 '__data' 'const _CharT *')
                  (DeclRefExpr 0x902139c <col:42> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9021424 <col:49> 'const _CharT *' lvalue ParmVar 0x9020c60 '__s' 'const _CharT *')
                (DeclRefExpr 0x902143c <col:54> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ce0 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
              (IntegerLiteral 0x9021480 <col:62> 'int' 0))
            (ReturnStmt 0x9021530 <line:790:3, col:10>
              (DeclRefExpr 0x9021514 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9021620 <line:792:11, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x90215d8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x90215a8 <col:11, col:16> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9021574 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9020ca0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x90215c0 <col:21> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x90216b8 <line:794:7, col:14>
    (DeclRefExpr 0x902169c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type rfind(_CharT __c, size_type __pos = (DeclRefExpr 0x8fdb898 </usr/include/c++/4.6/bits/basic_string.h:1899:43> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9022398 </usr/include/c++/4.6/bits/basic_string.tcc:801:5, line:812:5>
  (DeclStmt 0x9021f30 <line:802:7, col:38>
    0x9021e90 "size_type __size =
      (CallExpr 0x9021f10 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9021ed8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9021ec8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9022350 <line:803:7, line:810:2>
    <<<NULL>>>
    (DeclRefExpr 0x9021f40 <line:803:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9022338 <line:804:2, line:810:2>
      (IfStmt 0x9022058 <line:805:4, line:806:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9021fe8 <line:805:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9021fa0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x9021f70 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9021f58 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9021f84 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9021c00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9022040 <line:806:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x902200c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9022024 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9021c00 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (ForStmt 0x9022310 <line:807:4, line:809:15>
        (UnaryOperator 0x9022090 <line:807:9, col:11> '<dependent type>' prefix '++'
          (DeclRefExpr 0x9022074 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9022150 <col:19, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x9022108 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x90220d8 <col:19, col:25> '<dependent type>' postfix '--'
            (DeclRefExpr 0x90220a4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x90220f0 <col:30> 'int' 0))
        <<<NULL>>>
        (IfStmt 0x90222e0 <line:808:6, line:809:15>
          <<<NULL>>>
          (CallExpr 0x9022290 <line:808:10, col:48> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90221a0 <col:10, col:23> '<dependent type>' lvalue)
            (ArraySubscriptExpr 0x9022260 <col:26, col:42> '<dependent type>' lvalue
              (CallExpr 0x9022228 <col:26, col:34> '<dependent type>'
                (UnresolvedMemberExpr 0x90221e8 <col:26> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9022244 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            (DeclRefExpr 0x9022274 <col:45> '_CharT' lvalue ParmVar 0x9021bc0 '__c' '_CharT'))
          (ReturnStmt 0x90222d0 <line:809:8, col:15>
            (DeclRefExpr 0x90222b4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9021e90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          <<<NULL>>>)))
    <<<NULL>>>)
  (ReturnStmt 0x9022388 <line:811:7, col:14>
    (DeclRefExpr 0x902236c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9022fa0 </usr/include/c++/4.6/bits/basic_string.tcc:818:5, line:827:5>
  (NullStmt 0x9022bd0 <line:819:46>)
  (ForStmt 0x9022f50 <line:820:7, line:825:2>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x9022ce8 <line:820:14, col:40> '<dependent type>' '&&'
      (DeclRefExpr 0x9022bdc <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022940 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
      (CXXOperatorCallExpr 0x9022cc0 <col:21, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x9022c78 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (DeclRefExpr 0x9022bf4 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
        (CallExpr 0x9022c58 <col:29, col:40> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9022c20 <col:29, col:35> '<dependent type>' lvalue
            (CXXThisExpr 0x9022c10 <col:29> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))))
    (UnaryOperator 0x9022d18 <col:43, col:45> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9022d00 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9022f38 <line:821:2, line:825:2>
      (DeclStmt 0x9022ec8 <line:822:4, col:69>
        0x9022d40 "const _CharT *__p =
          (CallExpr 0x9022ea0 <col:24, col:68> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9022d98 <col:24, col:37> '<dependent type>' lvalue)
            (DeclRefExpr 0x9022dcc <col:42> 'const _CharT *' lvalue ParmVar 0x90228c0 '__s' 'const _CharT *')
            (DeclRefExpr 0x9022de4 <col:47> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022940 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
            (ArraySubscriptExpr 0x9022e88 <col:52, col:67> '<dependent type>' lvalue
              (CallExpr 0x9022e50 <col:52, col:60> '<dependent type>'
                (UnresolvedMemberExpr 0x9022e10 <col:52> '<bound member function type>' lvalue))
              (DeclRefExpr 0x9022e6c <col:62> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')))")
      (IfStmt 0x9022f18 <line:823:4, line:824:13>
        <<<NULL>>>
        (DeclRefExpr 0x9022ed8 <line:823:8> 'const _CharT *' lvalue Var 0x9022d40 '__p' 'const _CharT *')
        (ReturnStmt 0x9022f08 <line:824:6, col:13>
          (DeclRefExpr 0x9022ef0 <col:13> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9022900 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)))
  (ReturnStmt 0x9022f90 <line:826:7, col:14>
    (DeclRefExpr 0x9022f74 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9023d18 </usr/include/c++/4.6/bits/basic_string.tcc:833:5, line:848:5>
  (NullStmt 0x90237d0 <line:834:46>)
  (DeclStmt 0x9023890 <line:835:7, col:38>
    0x90237f0 "size_type __size =
      (CallExpr 0x9023870 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9023838 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9023828 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9023cd0 <line:836:7, line:846:2>
    <<<NULL>>>
    (BinaryOperator 0x90238d0 <line:836:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x90238a0 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x90238b8 <col:21> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9023540 '__n' 'size_type':'typename _CharT_alloc_type::size_type'))
    (CompoundStmt 0x9023cb8 <line:837:2, line:846:2>
      (IfStmt 0x90239e8 <line:838:4, line:839:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9023978 <line:838:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9023930 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x9023900 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x90238e8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9023914 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9023500 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x90239d0 <line:839:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x902399c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x90239b4 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9023500 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9023ca0 <line:840:4, line:845:24>
        (CompoundStmt 0x9023ba8 <line:841:6, line:844:6>
          (IfStmt 0x9023b88 <line:842:8, line:843:10>
            <<<NULL>>>
            (CallExpr 0x9023b38 <line:842:12, col:57> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9023a30 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9023a64 <col:30> 'const _CharT *' lvalue ParmVar 0x90234c0 '__s' 'const _CharT *')
              (DeclRefExpr 0x9023a7c <col:35> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9023540 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
              (ArraySubscriptExpr 0x9023b20 <col:40, col:56> '<dependent type>' lvalue
                (CallExpr 0x9023ae8 <col:40, col:48> '<dependent type>'
                  (UnresolvedMemberExpr 0x9023aa8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x9023b04 <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')))
            (ReturnStmt 0x9023b78 <line:843:3, col:10>
              (DeclRefExpr 0x9023b60 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (CXXOperatorCallExpr 0x9023c78 <line:845:11, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x9023c20 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
          (UnaryOperator 0x9023bf0 <col:11, col:17> '<dependent type>' postfix '--'
            (DeclRefExpr 0x9023bbc <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90237f0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (IntegerLiteral 0x9023c08 <col:23> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x9023d08 <line:847:7, col:14>
    (DeclRefExpr 0x9023cec <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9024880 </usr/include/c++/4.6/bits/basic_string.tcc:854:5, line:860:5>
  (NullStmt 0x9024550 <line:855:46>)
  (ForStmt 0x9024830 <line:856:7, line:858:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9024628 <line:856:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x90245e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x902455c <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024280 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x90245c0 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9024588 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9024578 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9024668 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x902464c <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024280 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x9024810 <line:857:2, line:858:11>
      <<<NULL>>>
      (UnaryOperator 0x90247d0 <line:857:6, col:51> '<dependent type>' prefix '!'
        (CallExpr 0x90247a8 <col:7, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90246a0 <col:7, col:20> '<dependent type>' lvalue)
          (DeclRefExpr 0x90246d4 <col:25> 'const _CharT *' lvalue ParmVar 0x9024240 '__s' 'const _CharT *')
          (DeclRefExpr 0x90246ec <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90242c0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
          (ArraySubscriptExpr 0x9024790 <col:35, col:50> '<dependent type>' lvalue
            (CallExpr 0x9024758 <col:35, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x9024718 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x9024774 <col:45> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024280 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))))
      (ReturnStmt 0x9024800 <line:858:4, col:11>
        (DeclRefExpr 0x90247e4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024280 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9024870 <line:859:7, col:14>
    (DeclRefExpr 0x9024854 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_first_not_of(_CharT __c, size_type __pos = (IntegerLiteral 0x8fdb970 </usr/include/c++/4.6/bits/basic_string.h:2080:55> 'int' 0)
) const (CompoundStmt 0x9025340 </usr/include/c++/4.6/bits/basic_string.tcc:866:5, line:871:5>
  (ForStmt 0x90252f0 <line:867:7, line:869:11>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9025100 <line:867:14, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x90250b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x9025038 <col:14> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (CallExpr 0x9025098 <col:22, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9025060 <col:22, col:28> '<dependent type>' lvalue
          (CXXThisExpr 0x9025050 <col:22> 'const basic_string<_CharT, _Traits, _Alloc> *' this))))
    (UnaryOperator 0x9025140 <col:36, col:38> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9025124 <col:38> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
    (IfStmt 0x90252d0 <line:868:2, line:869:11>
      <<<NULL>>>
      (UnaryOperator 0x9025290 <line:868:6, col:44> '<dependent type>' prefix '!'
        (CallExpr 0x9025268 <col:7, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9025178 <col:7, col:20> '<dependent type>' lvalue)
          (ArraySubscriptExpr 0x9025238 <col:23, col:38> '<dependent type>' lvalue
            (CallExpr 0x9025200 <col:23, col:31> '<dependent type>'
              (UnresolvedMemberExpr 0x90251c0 <col:23> '<bound member function type>' lvalue))
            (DeclRefExpr 0x902521c <col:33> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x902524c <col:41> '_CharT' lvalue ParmVar 0x9024d70 '__c' '_CharT')))
      (ReturnStmt 0x90252c0 <line:869:4, col:11>
        (DeclRefExpr 0x90252a4 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9024db0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
      <<<NULL>>>))
  (ReturnStmt 0x9025330 <line:870:7, col:14>
    (DeclRefExpr 0x9025314 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const (CompoundStmt 0x9026000 </usr/include/c++/4.6/bits/basic_string.tcc:877:5, line:892:5>
  (NullStmt 0x9025b70 <line:878:46>)
  (DeclStmt 0x9025c30 <line:879:7, col:38>
    0x9025b90 "size_type __size =
      (CallExpr 0x9025c10 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9025bd8 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9025bc8 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9025fb8 <line:880:7, line:890:2>
    <<<NULL>>>
    (DeclRefExpr 0x9025c40 <line:880:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9025fa0 <line:881:2, line:890:2>
      (IfStmt 0x9025d58 <line:882:4, line:883:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9025ce8 <line:882:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x9025ca0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x9025c70 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x9025c58 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x9025c84 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90258a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9025d40 <line:883:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x9025d0c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9025d24 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90258a0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9025f88 <line:884:4, line:889:19>
        (CompoundStmt 0x9025f28 <line:885:6, line:888:6>
          (IfStmt 0x9025f08 <line:886:8, line:887:10>
            <<<NULL>>>
            (UnaryOperator 0x9025ec8 <line:886:12, col:58> '<dependent type>' prefix '!'
              (CallExpr 0x9025ea0 <col:13, col:58> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9025d98 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x9025dcc <col:31> 'const _CharT *' lvalue ParmVar 0x9025860 '__s' 'const _CharT *')
                (DeclRefExpr 0x9025de4 <col:36> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x90258e0 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
                (ArraySubscriptExpr 0x9025e88 <col:41, col:57> '<dependent type>' lvalue
                  (CallExpr 0x9025e50 <col:41, col:49> '<dependent type>'
                    (UnresolvedMemberExpr 0x9025e10 <col:41> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9025e6c <col:51> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
            (ReturnStmt 0x9025ef8 <line:887:3, col:10>
              (DeclRefExpr 0x9025edc <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9025f70 <line:889:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9025f3c <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x9025b90 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9025ff0 <line:891:7, col:14>
    (DeclRefExpr 0x9025fd4 <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    typename basic_string<_CharT, _Traits, _Alloc>::size_type find_last_not_of(_CharT __c, size_type __pos = (DeclRefExpr 0x8fdb9b8 </usr/include/c++/4.6/bits/basic_string.h:2139:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x8fbc270 'npos' 'const size_type':'const typename _CharT_alloc_type::size_type')
) const (CompoundStmt 0x9026c38 </usr/include/c++/4.6/bits/basic_string.tcc:898:5, line:912:5>
  (DeclStmt 0x9026880 <line:899:7, col:38>
    0x90267e0 "size_type __size =
      (CallExpr 0x9026860 <col:26, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9026828 <col:26, col:32> '<dependent type>' lvalue
          (CXXThisExpr 0x9026818 <col:26> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (IfStmt 0x9026bf0 <line:900:7, line:910:2>
    <<<NULL>>>
    (DeclRefExpr 0x9026890 <line:900:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
    (CompoundStmt 0x9026bd8 <line:901:2, line:910:2>
      (IfStmt 0x90269a8 <line:902:4, line:903:15>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9026938 <line:902:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x90268f0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (UnaryOperator 0x90268c0 <col:8, col:10> '<dependent type>' prefix '--'
            (DeclRefExpr 0x90268a8 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
          (DeclRefExpr 0x90268d4 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9026550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (BinaryOperator 0x9026990 <line:903:6, col:15> '<dependent type>' '='
          (DeclRefExpr 0x902695c <col:6> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type')
          (DeclRefExpr 0x9026974 <col:15> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9026550 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        <<<NULL>>>)
      (DoStmt 0x9026bc0 <line:904:4, line:909:19>
        (CompoundStmt 0x9026b60 <line:905:6, line:908:6>
          (IfStmt 0x9026b40 <line:906:8, line:907:10>
            <<<NULL>>>
            (UnaryOperator 0x9026b00 <line:906:12, col:51> '<dependent type>' prefix '!'
              (CallExpr 0x9026ad8 <col:13, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90269e8 <col:13, col:26> '<dependent type>' lvalue)
                (ArraySubscriptExpr 0x9026aa8 <col:29, col:45> '<dependent type>' lvalue
                  (CallExpr 0x9026a70 <col:29, col:37> '<dependent type>'
                    (UnresolvedMemberExpr 0x9026a30 <col:29> '<bound member function type>' lvalue))
                  (DeclRefExpr 0x9026a8c <col:39> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
                (DeclRefExpr 0x9026abc <col:48> '_CharT' lvalue ParmVar 0x9026510 '__c' '_CharT')))
            (ReturnStmt 0x9026b30 <line:907:3, col:10>
              (DeclRefExpr 0x9026b14 <col:10> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))
            <<<NULL>>>))
        (UnaryOperator 0x9026ba8 <line:909:11, col:17> '<dependent type>' postfix '--'
          (DeclRefExpr 0x9026b74 <col:11> 'size_type':'typename _CharT_alloc_type::size_type' lvalue Var 0x90267e0 '__size' 'size_type':'typename _CharT_alloc_type::size_type'))))
    <<<NULL>>>)
  (ReturnStmt 0x9026c28 <line:911:7, col:14>
    (DeclRefExpr 0x9026c0c <col:14> 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90006e0 'npos' 'const typename basic_string<_CharT, _Traits, _Alloc>::size_type':'const typename _CharT_alloc_type::size_type')))


    int compare(size_type __pos, size_type __n, const basic_string<_CharT, _Traits, _Alloc> &__str) const (CompoundStmt 0x9027820 </usr/include/c++/4.6/bits/basic_string.tcc:918:5, line:927:5>
  (CallExpr 0x90271e0 <line:919:7, col:46> '<dependent type>'
    (MemberExpr 0x9027170 <col:7> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x9027160 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9027190 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9026fd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x90271a8 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x90272a8 <line:920:7, col:32> '<dependent type>' '='
    (DeclRefExpr 0x9027204 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027010 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9027280 <col:13, col:32> '<dependent type>'
      (MemberExpr 0x9027230 <col:13> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x9027220 <col:13> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9027250 <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9026fd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9027268 <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027010 '__n' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9027378 <line:921:7, col:45>
    0x90272d0 "const size_type __osize =
      (CallExpr 0x9027358 <col:33, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9027320 <col:33, col:39> '<dependent type>' lvalue
          (DeclRefExpr 0x9027304 <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9027060 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x9027470 <line:922:7, col:53>
    0x9027390 "const size_type __len =
      (CallExpr 0x9027448 <col:31, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x90273e0 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x9027418 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027010 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9027430 <col:45> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90272d0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x90276c8 <line:923:7, col:77>
    0x9027490 "int __r =
      (CallExpr 0x90276a0 <col:17, col:76> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90274e8 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x90275f0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x90275a8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
          (CallExpr 0x9027570 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9027530 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x902758c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9026fd0 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CallExpr 0x9027668 <col:57, col:68> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9027630 <col:57, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x9027614 <col:57> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9027060 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
        (DeclRefExpr 0x9027684 <col:71> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9027390 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x90277c8 <line:924:7, line:925:31>
    <<<NULL>>>
    (UnaryOperator 0x9027710 <line:924:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9027700 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x90276f0 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x90276d8 <col:12> 'int' lvalue Var 0x9027490 '__r' 'int'))))
    (BinaryOperator 0x90277b0 <line:925:2, col:31> '<dependent type>' '='
      (DeclRefExpr 0x9027724 <col:2> 'int' lvalue Var 0x9027490 '__r' 'int')
      (CallExpr 0x9027788 <col:8, col:31> '<dependent type>'
        (DeclRefExpr 0x902773c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9027754 <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027010 '__n' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x902776c <col:24> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90272d0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9027810 <line:926:7, col:14>
    (ImplicitCastExpr 0x9027800 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x90277e4 <col:14> 'int' lvalue Var 0x9027490 '__r' 'int'))))


    int compare(size_type __pos1, size_type __n1, const basic_string<_CharT, _Traits, _Alloc> &__str, size_type __pos2, size_type __n2) const (CompoundStmt 0x9028608 </usr/include/c++/4.6/bits/basic_string.tcc:934:5, line:945:5>
  (CallExpr 0x9027e68 <line:935:7, col:47> '<dependent type>'
    (MemberExpr 0x9027df8 <col:7> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x9027de8 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9027e18 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027bc0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9027e30 <col:24> 'const char [22]' lvalue "basic_string::compare"))
  (CallExpr 0x9027f28 <line:936:7, col:53> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9027ea8 <col:7, col:13> '<dependent type>' lvalue
      (DeclRefExpr 0x9027e8c <col:7> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9027c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
    (DeclRefExpr 0x9027edc <col:22> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c90 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9027ef4 <col:30> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9027ff0 <line:937:7, col:35> '<dependent type>' '='
    (DeclRefExpr 0x9027f4c <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c00 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9027fc8 <col:14, col:35> '<dependent type>'
      (MemberExpr 0x9027f78 <col:14> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x9027f68 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9027f98 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027bc0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9027fb0 <col:31> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c00 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (BinaryOperator 0x90280c8 <line:938:7, col:41> '<dependent type>' '='
    (DeclRefExpr 0x9028008 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027cd0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x90280a0 <col:14, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9028038 <col:14, col:20> '<dependent type>' lvalue
        (DeclRefExpr 0x9028020 <col:14> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9027c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &'))
      (DeclRefExpr 0x902806c <col:29> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c90 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x9028084 <col:37> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027cd0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x90281d0 <line:939:7, col:51>
    0x90280f0 "const size_type __len =
      (CallExpr 0x90281a8 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x9028140 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x9028178 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c00 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9028190 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027cd0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x90284b0 <line:940:7, line:941:39>
    0x90281f0 "int __r =
      (CallExpr 0x9028488 <line:940:17, line:941:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9028248 <line:940:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9028350 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9028308 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
          (CallExpr 0x90282d0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x9028290 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x90282ec <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027bc0 '__pos1' 'size_type':'typename _CharT_alloc_type::size_type'))
        (CXXOperatorCallExpr 0x9028448 <line:941:10, col:25> '<dependent type>'
          (UnresolvedLookupExpr 0x9028400 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
          (CallExpr 0x90283c8 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9028390 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9028374 <col:10> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9027c50 '__str' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclRefExpr 0x90283e4 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c90 '__pos2' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x902846c <col:33> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x90280f0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x90285b0 <line:942:7, line:943:29>
    <<<NULL>>>
    (UnaryOperator 0x90284f8 <line:942:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x90284e8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x90284d8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x90284c0 <col:12> 'int' lvalue Var 0x90281f0 '__r' 'int'))))
    (BinaryOperator 0x9028598 <line:943:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x902850c <col:2> 'int' lvalue Var 0x90281f0 '__r' 'int')
      (CallExpr 0x9028570 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x9028524 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x902853c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027c00 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9028554 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9027cd0 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x90285f8 <line:944:7, col:14>
    (ImplicitCastExpr 0x90285e8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x90285cc <col:14> 'int' lvalue Var 0x90281f0 '__r' 'int'))))


    int compare(const _CharT *__s) const (CompoundStmt 0x9029060 </usr/include/c++/4.6/bits/basic_string.tcc:951:5, line:960:5>
  (NullStmt 0x9028af8 <line:952:37>)
  (DeclStmt 0x9028bb0 <line:953:7, col:44>
    0x9028b10 "const size_type __size =
      (CallExpr 0x9028b90 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9028b58 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x9028b48 <col:32> 'const basic_string<_CharT, _Traits, _Alloc> *' this)))")
  (DeclStmt 0x9028c98 <line:954:7, col:57>
    0x9028bd0 "const size_type __osize =
      (CallExpr 0x9028c78 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9028c28 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x9028c5c <col:53> 'const _CharT *' lvalue ParmVar 0x90289e0 '__s' 'const _CharT *'))")
  (DeclStmt 0x9028d90 <line:955:7, col:56>
    0x9028cb0 "const size_type __len =
      (CallExpr 0x9028d68 <col:31, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9028d00 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x9028d38 <col:40> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9028b10 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9028d50 <col:48> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9028bd0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9028f08 <line:956:7, col:60>
    0x9028db0 "int __r =
      (CallExpr 0x9028ee0 <col:17, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9028e08 <col:17, col:30> '<dependent type>' lvalue)
        (CallExpr 0x9028e90 <col:38, col:46> '<dependent type>'
          (UnresolvedMemberExpr 0x9028e50 <col:38> '<bound member function type>' lvalue))
        (DeclRefExpr 0x9028eac <col:49> 'const _CharT *' lvalue ParmVar 0x90289e0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9028ec4 <col:54> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9028cb0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9029008 <line:957:7, line:958:34>
    <<<NULL>>>
    (UnaryOperator 0x9028f50 <line:957:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9028f40 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9028f30 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9028f18 <col:12> 'int' lvalue Var 0x9028db0 '__r' 'int'))))
    (BinaryOperator 0x9028ff0 <line:958:2, col:34> '<dependent type>' '='
      (DeclRefExpr 0x9028f64 <col:2> 'int' lvalue Var 0x9028db0 '__r' 'int')
      (CallExpr 0x9028fc8 <col:8, col:34> '<dependent type>'
        (DeclRefExpr 0x9028f7c <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9028f94 <col:19> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9028b10 '__size' 'const size_type':'const typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9028fac <col:27> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9028bd0 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9029050 <line:959:7, col:14>
    (ImplicitCastExpr 0x9029040 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9029024 <col:14> 'int' lvalue Var 0x9028db0 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s) const (CompoundStmt 0x9029c78 </usr/include/c++/4.6/bits/basic_string.tcc:966:5, line:976:5>
  (NullStmt 0x90295e0 <line:967:37>)
  (CallExpr 0x9029670 <line:968:7, col:46> '<dependent type>'
    (MemberExpr 0x9029600 <col:7> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x90295f0 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9029620 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x9029638 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x9029738 <line:969:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x9029694 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029440 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x9029710 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x90296c0 <col:14> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x90296b0 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x90296e0 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x90296f8 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029440 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x9029828 <line:970:7, col:57>
    0x9029760 "const size_type __osize =
      (CallExpr 0x9029808 <col:33, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90297b8 <col:33, col:46> '<dependent type>' lvalue)
        (DeclRefExpr 0x90297ec <col:53> 'const _CharT *' lvalue ParmVar 0x90294b0 '__s' 'const _CharT *'))")
  (DeclStmt 0x9029920 <line:971:7, col:54>
    0x9029840 "const size_type __len =
      (CallExpr 0x90298f8 <col:31, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x9029890 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x90298c8 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029440 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x90298e0 <col:46> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9029760 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x9029b20 <line:972:7, col:68>
    0x9029940 "int __r =
      (CallExpr 0x9029af8 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9029998 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9029aa0 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x9029a58 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
          (CallExpr 0x9029a20 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x90299e0 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x9029a3c <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029400 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x9029ac4 <col:57> 'const _CharT *' lvalue ParmVar 0x90294b0 '__s' 'const _CharT *')
        (DeclRefExpr 0x9029adc <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9029840 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x9029c20 <line:973:7, line:974:32>
    <<<NULL>>>
    (UnaryOperator 0x9029b68 <line:973:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9029b58 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9029b48 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x9029b30 <col:12> 'int' lvalue Var 0x9029940 '__r' 'int'))))
    (BinaryOperator 0x9029c08 <line:974:2, col:32> '<dependent type>' '='
      (DeclRefExpr 0x9029b7c <col:2> 'int' lvalue Var 0x9029940 '__r' 'int')
      (CallExpr 0x9029be0 <col:8, col:32> '<dependent type>'
        (DeclRefExpr 0x9029b94 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x9029bac <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x9029440 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x9029bc4 <col:25> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x9029760 '__osize' 'const size_type':'const typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x9029c68 <line:975:7, col:14>
    (ImplicitCastExpr 0x9029c58 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9029c3c <col:14> 'int' lvalue Var 0x9029940 '__r' 'int'))))


    int compare(size_type __pos, size_type __n1, const _CharT *__s, size_type __n2) const (CompoundStmt 0x902a808 </usr/include/c++/4.6/bits/basic_string.tcc:983:5, line:992:5>
  (NullStmt 0x902a240 <line:984:47>)
  (CallExpr 0x902a2d0 <line:985:7, col:46> '<dependent type>'
    (MemberExpr 0x902a260 <col:7> '<bound member function type>' ->_M_check 0x8fbdf40
      (CXXThisExpr 0x902a250 <col:7> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x902a280 <col:16> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a020 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
    (StringLiteral 0x902a298 <col:23> 'const char [22]' lvalue "basic_string::compare"))
  (BinaryOperator 0x902a3a8 <line:986:7, col:34> '<dependent type>' '='
    (DeclRefExpr 0x902a2f4 <col:7> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a060 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
    (CallExpr 0x902a380 <col:14, col:34> '<dependent type>'
      (MemberExpr 0x902a330 <col:14> '<bound member function type>' ->_M_limit 0x8fbe260
        (CXXThisExpr 0x902a320 <col:14> 'const basic_string<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x902a350 <col:23> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a020 '__pos' 'size_type':'typename _CharT_alloc_type::size_type')
      (DeclRefExpr 0x902a368 <col:30> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a060 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')))
  (DeclStmt 0x902a4b0 <line:987:7, col:51>
    0x902a3d0 "const size_type __len =
      (CallExpr 0x902a488 <col:31, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x902a420 <col:31, col:36> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
        (DeclRefExpr 0x902a458 <col:40> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a060 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x902a470 <col:46> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a110 '__n2' 'size_type':'typename _CharT_alloc_type::size_type'))")
  (DeclStmt 0x902a6b0 <line:988:7, col:68>
    0x902a4d0 "int __r =
      (CallExpr 0x902a688 <col:17, col:67> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x902a528 <col:17, col:30> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x902a630 <col:38, col:50> '<dependent type>'
          (UnresolvedLookupExpr 0x902a5e8 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x901d3d0 0x901c7d0 0x8e5c9d0 0x8fef0c0 0x8ff3ae0 0x8ff32e0)
          (CallExpr 0x902a5b0 <col:38, col:46> '<dependent type>'
            (UnresolvedMemberExpr 0x902a570 <col:38> '<bound member function type>' lvalue))
          (DeclRefExpr 0x902a5cc <col:50> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a020 '__pos' 'size_type':'typename _CharT_alloc_type::size_type'))
        (DeclRefExpr 0x902a654 <col:57> 'const _CharT *' lvalue ParmVar 0x902a0d0 '__s' 'const _CharT *')
        (DeclRefExpr 0x902a66c <col:62> 'const size_type':'const typename _CharT_alloc_type::size_type' lvalue Var 0x902a3d0 '__len' 'const size_type':'const typename _CharT_alloc_type::size_type'))")
  (IfStmt 0x902a7b0 <line:989:7, line:990:29>
    <<<NULL>>>
    (UnaryOperator 0x902a6f8 <line:989:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x902a6e8 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x902a6d8 <col:12> 'int' <LValueToRValue>
          (DeclRefExpr 0x902a6c0 <col:12> 'int' lvalue Var 0x902a4d0 '__r' 'int'))))
    (BinaryOperator 0x902a798 <line:990:2, col:29> '<dependent type>' '='
      (DeclRefExpr 0x902a70c <col:2> 'int' lvalue Var 0x902a4d0 '__r' 'int')
      (CallExpr 0x902a770 <col:8, col:29> '<dependent type>'
        (DeclRefExpr 0x902a724 <col:8> 'int (size_type, size_type)' lvalue CXXMethod 0x8fbf390 '_S_compare' 'int (size_type, size_type)')
        (DeclRefExpr 0x902a73c <col:19> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a060 '__n1' 'size_type':'typename _CharT_alloc_type::size_type')
        (DeclRefExpr 0x902a754 <col:25> 'size_type':'typename _CharT_alloc_type::size_type' lvalue ParmVar 0x902a110 '__n2' 'size_type':'typename _CharT_alloc_type::size_type')))
    <<<NULL>>>)
  (ReturnStmt 0x902a7f8 <line:991:7, col:14>
    (ImplicitCastExpr 0x902a7e8 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x902a7cc <col:14> 'int' lvalue Var 0x902a4d0 '__r' 'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > &__str)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &operator>>(basic_istream<char> &__is, basic_string<char> &__str)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str) (CompoundStmt 0x902ced0 </usr/include/c++/4.6/bits/basic_string.tcc:999:5, line:1065:5>
  (DeclStmt 0x902afa0 <line:1000:7, col:61>
    0x902af70 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x902b140 <line:1001:7, col:66>
    0x902b110 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x902b230 <line:1002:7, col:67>
    0x902b200 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x902b2f0 <line:1003:7, col:60>
    0x902b2c0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x902b3b0 <line:1004:7, col:61>
    0x902b380 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x902b4a0 <line:1005:7, col:44>
    0x902b470 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x902b590 <line:1006:7, col:69>
    0x902b560 "typedef typename __ctype_type::ctype_base __ctype_base")
  (DeclStmt 0x902b610 <line:1008:7, col:34>
    0x902b5c0 "__size_type __extracted =
      (IntegerLiteral 0x902b5f8 <col:33> 'int' 0)")
  (DeclStmt 0x902b750 <line:1009:7, col:63>
    0x902b6d0 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x902b728 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x902b860 <line:1010:7, col:58>
    0x902b7e0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x902b840 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x902b814 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x902b830 <col:52> '_Bool' false))")
  (IfStmt 0x902ccf8 <line:1011:7, line:1058:2>
    <<<NULL>>>
    (DeclRefExpr 0x902b870 <line:1011:11> 'typename __istream_type::sentry' lvalue Var 0x902b7e0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x902ccd8 <line:1012:2, line:1058:2>
      (IfStmt 0x902caa8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1045:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902b888 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x902ca68 </usr/include/c++/4.6/bits/basic_string.tcc:1014:6, line:1045:6>
          (CallExpr 0x902b8e8 <line:1016:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902b8b0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x902b898 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902ad00 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x902b998 <line:1017:8, col:25>
            0x902b960 "_CharT __buf[128]")
          (DeclStmt 0x902ba00 <line:1018:8, col:29>
            0x902b9b0 "__size_type __len =
              (IntegerLiteral 0x902b9e8 <col:28> 'int' 0)")
          (DeclStmt 0x902bac8 <line:1019:8, col:43>
            0x902ba20 "const streamsize __w =
              (CallExpr 0x902baa8 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x902ba70 <col:31, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x902ba54 <col:31> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x902bc38 <line:1020:8, line:1021:51>
            0x902bae0 "const __size_type __n =
              (ConditionalOperator 0x902bc18 <line:1020:32, line:1021:50> '<dependent type>'
                (BinaryOperator 0x902bb58 <line:1020:32, col:38> '_Bool' '>'
                  (ImplicitCastExpr 0x902bb48 <col:32> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x902bb14 <col:32> 'const streamsize':'const int' lvalue Var 0x902ba20 '__w' 'const streamsize':'const int'))
                  (IntegerLiteral 0x902bb30 <col:38> 'int' 0))
                (CXXStaticCastExpr 0x902bb90 <col:42, col:70> '__size_type':'typename __string_type::size_type' static_cast<__size_type> <Dependent>
                  (DeclRefExpr 0x902bb70 <col:67> 'const streamsize':'const int' lvalue Var 0x902ba20 '__w' 'const streamsize':'const int'))
                (CallExpr 0x902bbf8 <line:1021:35, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902bbc0 <col:35, col:41> '<dependent type>' lvalue
                    (DeclRefExpr 0x902bba8 <col:35> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902ad00 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))))")
          (DeclStmt 0x902bdd8 <line:1022:8, col:73>
            0x902bca0 "const __ctype_type &__ct =
              (CallExpr 0x902bdb8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x902bce0 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x8ef3ec0)
                (CallExpr 0x902bd98 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902bd60 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x902bd48 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x902beb8 <line:1023:8, col:47>
            0x902be10 "const __int_type __eof =
              (CallExpr 0x902be98 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x902be70 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x902bfd0 <line:1024:8, col:46>
            0x902bed0 "__int_type __c =
              (CallExpr 0x902bfb0 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x902bf78 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x902bf58 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x902bf20 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x902bf04 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x902c7d8 <line:1026:8, line:1039:3>
            <<<NULL>>>
            (BinaryOperator 0x902c2c0 <line:1026:15, line:1029:32> '<dependent type>' '&&'
              (BinaryOperator 0x902c138 <line:1026:15, line:1027:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x902c058 <line:1026:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x902c010 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                  (DeclRefExpr 0x902bfe0 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b5c0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x902bff8 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x902bae0 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x902c120 <line:1027:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x902c0f8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x902c0a0 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x902c0c4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902bed0 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x902c0dc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902be10 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x902c2a8 <line:1028:11, line:1029:32> '<dependent type>' prefix '!'
                (CallExpr 0x902c280 <line:1028:12, line:1029:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902c168 <line:1028:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x902c150 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x902bca0 '__ct' 'const __ctype_type &'))
                  (DependentScopeDeclRefExpr 0x902c1d8 <col:20, col:34> '<dependent type>' lvalue)
                  (CallExpr 0x902c260 <line:1029:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x902c220 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x902c244 <col:28> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902bed0 '__c' '__int_type':'typename __istream_type::int_type')))))
            (CompoundStmt 0x902c7b8 <line:1030:3, line:1039:3>
              (IfStmt 0x902c560 <line:1031:5, line:1035:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x902c3c8 <line:1031:9, col:47> '<dependent type>'
                  (UnresolvedLookupExpr 0x902c370 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
                  (DeclRefExpr 0x902c2d8 <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b9b0 '__len' '__size_type':'typename __string_type::size_type')
                  (BinaryOperator 0x902c358 <col:18, col:47> 'unsigned int' '/'
                    (UnaryExprOrTypeTraitExpr 0x902c320 <col:18, col:30> 'unsigned int' sizeof 
                      (ParenExpr 0x902c308 <col:24, col:30> '_CharT [128]' lvalue
                        (DeclRefExpr 0x902c2f0 <col:25> '_CharT [128]' lvalue Var 0x902b960 '__buf' '_CharT [128]')))
                    (UnaryExprOrTypeTraitExpr 0x902c340 <col:34, col:47> 'unsigned int' sizeof '_CharT')))
                (CompoundStmt 0x902c548 <line:1032:7, line:1035:7>
                  (CallExpr 0x902c4d8 <line:1033:9, col:59> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x902c408 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x902c3ec <col:9> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902ad00 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
                    (DeclRefExpr 0x902c43c <col:22> '_CharT [128]' lvalue Var 0x902b960 '__buf' '_CharT [128]')
                    (BinaryOperator 0x902c4c0 <col:29, col:58> 'unsigned int' '/'
                      (UnaryExprOrTypeTraitExpr 0x902c488 <col:29, col:41> 'unsigned int' sizeof 
                        (ParenExpr 0x902c470 <col:35, col:41> '_CharT [128]' lvalue
                          (DeclRefExpr 0x902c454 <col:36> '_CharT [128]' lvalue Var 0x902b960 '__buf' '_CharT [128]')))
                      (UnaryExprOrTypeTraitExpr 0x902c4a8 <col:45, col:58> 'unsigned int' sizeof '_CharT')))
                  (BinaryOperator 0x902c530 <line:1034:9, col:17> '<dependent type>' '='
                    (DeclRefExpr 0x902c4fc <col:9> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b9b0 '__len' '__size_type':'typename __string_type::size_type')
                    (IntegerLiteral 0x902c518 <col:17> 'int' 0)))
                <<<NULL>>>)
              (BinaryOperator 0x902c678 <line:1036:5, col:47> '<dependent type>' '='
                (ArraySubscriptExpr 0x902c5e0 <col:5, col:18> '<dependent type>' lvalue
                  (DeclRefExpr 0x902c57c <col:5> '_CharT [128]' lvalue Var 0x902b960 '__buf' '_CharT [128]')
                  (UnaryOperator 0x902c5c8 <col:11, col:16> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x902c594 <col:11> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b9b0 '__len' '__size_type':'typename __string_type::size_type')))
                (CallExpr 0x902c658 <col:22, col:47> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x902c618 <col:22, col:31> '<dependent type>' lvalue)
                  (DeclRefExpr 0x902c63c <col:44> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902bed0 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x902c6a8 <line:1037:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x902c690 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b5c0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x902c7a0 <line:1038:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x902c6bc <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902bed0 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x902c780 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902c748 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x902c728 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x902c6f0 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x902c6d4 <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (CallExpr 0x902c870 <line:1040:8, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902c808 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x902c7ec <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902ad00 '__str' 'basic_string<_CharT, _Traits, _Alloc> &'))
            (DeclRefExpr 0x902c83c <col:21> '_CharT [128]' lvalue Var 0x902b960 '__buf' '_CharT [128]')
            (DeclRefExpr 0x902c854 <col:28> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b9b0 '__len' '__size_type':'typename __string_type::size_type'))
          (IfStmt 0x902c9c0 <line:1042:8, line:1043:24>
            <<<NULL>>>
            (CallExpr 0x902c918 <line:1042:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x902c8c0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x902c8e4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902bed0 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x902c8fc <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902be10 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x902c9a0 <line:1043:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x902c93c <col:3> 'typename __ios_base::iostate' lvalue Var 0x902b6d0 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x902c978 <col:12, col:24> '<dependent type>' lvalue))
            <<<NULL>>>)
          (CallExpr 0x902ca48 <line:1044:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902c9f8 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x902c9dc <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x902ca30 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x902cbb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1050:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902cac8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x902cba0 </usr/include/c++/4.6/bits/basic_string.tcc:1047:6, line:1050:6>
          (CallExpr 0x902cb70 <line:1048:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902caf0 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x902cad8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x902cb48 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x902cb90 <line:1049:31>))
        <<<NULL>>>)
      (IfStmt 0x902ccb8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1057:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902cbd8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x902cca0 </usr/include/c++/4.6/bits/basic_string.tcc:1052:6, line:1057:6>
          (CallExpr 0x902cc80 <line:1056:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902cc00 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x902cbe8 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x902cc58 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x902cdc8 <line:1060:7, line:1061:23>
    <<<NULL>>>
    (UnaryOperator 0x902cd30 <line:1060:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x902cd14 <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x902b5c0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x902cda8 <line:1061:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x902cd44 <col:2> 'typename __ios_base::iostate' lvalue Var 0x902b6d0 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x902cd80 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x902ce88 <line:1062:7, line:1063:21>
    <<<NULL>>>
    (DeclRefExpr 0x902cde4 <line:1062:11> 'typename __ios_base::iostate' lvalue Var 0x902b6d0 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x902ce68 <line:1063:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x902ce18 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x902cdfc <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x902ce4c <col:16> 'typename __ios_base::iostate' lvalue Var 0x902b6d0 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x902cec0 <line:1064:7, col:14>
    (DeclRefExpr 0x902cea4 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902ab50 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> basic_istream<wchar_t> &getline(basic_istream<wchar_t> &__in, basic_string<wchar_t> &__str, wchar_t __delim)template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> basic_istream<char> &getline(basic_istream<char> &__in, basic_string<char> &__str, char __delim)template <typename _CharT, typename _Traits, typename _Alloc> basic_istream<_CharT, _Traits> &getline(basic_istream<_CharT, _Traits> &__in, basic_string<_CharT, _Traits, _Alloc> &__str, _CharT __delim) (CompoundStmt 0x902fde8 </usr/include/c++/4.6/bits/basic_string.tcc:1071:5, line:1128:5>
  (DeclStmt 0x902d6e0 <line:1072:7, col:61>
    0x902d6b0 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x902d880 <line:1073:7, col:66>
    0x902d850 "typedef basic_string<_CharT, _Traits, _Alloc> __string_type")
  (DeclStmt 0x902d940 <line:1074:7, col:67>
    0x902d910 "typedef typename __istream_type::ios_base __ios_base")
  (DeclStmt 0x902d9e0 <line:1075:7, col:60>
    0x902d9b0 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x902daa0 <line:1076:7, col:61>
    0x902da70 "typedef typename __string_type::size_type __size_type")
  (DeclStmt 0x902db20 <line:1078:7, col:34>
    0x902dad0 "__size_type __extracted =
      (IntegerLiteral 0x902db08 <col:33> 'int' 0)")
  (DeclStmt 0x902dbe8 <line:1079:7, col:47>
    0x902db40 "const __size_type __n =
      (CallExpr 0x902dbc8 <col:31, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x902db90 <col:31, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x902db74 <col:31> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902d3e0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))")
  (DeclStmt 0x902dd00 <line:1080:7, col:63>
    0x902dc80 "typename __ios_base::iostate __err =
      (DependentScopeDeclRefExpr 0x902dcd8 <col:44, col:56> '<dependent type>' lvalue)")
  (DeclStmt 0x902ddf0 <line:1081:7, col:57>
    0x902dd70 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x902ddd0 <col:45, col:56> 'typename __istream_type::sentry'
        (DeclRefExpr 0x902dda4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x902ddc0 <col:52> '_Bool' true))")
  (IfStmt 0x902fc10 <line:1082:7, line:1122:2>
    <<<NULL>>>
    (DeclRefExpr 0x902de00 <line:1082:11> 'typename __istream_type::sentry' lvalue Var 0x902dd70 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x902fbf0 <line:1083:2, line:1122:2>
      (IfStmt 0x902f9c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/basic_string.tcc:1109:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902de18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x902f998 </usr/include/c++/4.6/bits/basic_string.tcc:1085:6, line:1109:6>
          (CallExpr 0x902de78 <line:1086:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902de40 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x902de28 <col:8> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902d3e0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')))
          (DeclStmt 0x902df80 <line:1087:8, col:65>
            0x902dec0 "const __int_type __idelim =
              (CallExpr 0x902df60 <col:36, col:64> '<dependent type>'
                (DependentScopeDeclRefExpr 0x902df20 <col:36, col:45> '<dependent type>' lvalue)
                (DeclRefExpr 0x902df44 <col:57> '_CharT' lvalue ParmVar 0x902d420 '__delim' '_CharT'))")
          (DeclStmt 0x902e040 <line:1088:8, col:47>
            0x902dfa0 "const __int_type __eof =
              (CallExpr 0x902e020 <col:33, col:46> '<dependent type>'
                (DependentScopeDeclRefExpr 0x902dff8 <col:33, col:42> '<dependent type>' lvalue))")
          (DeclStmt 0x902e160 <line:1089:8, col:46>
            0x902e060 "__int_type __c =
              (CallExpr 0x902e140 <col:25, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x902e108 <col:25, col:39> '<dependent type>' lvalue
                  (CallExpr 0x902e0e8 <col:25, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x902e0b0 <col:25, col:30> '<dependent type>' lvalue
                      (DeclRefExpr 0x902e094 <col:25> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (WhileStmt 0x902f5e0 <line:1091:8, line:1098:3>
            <<<NULL>>>
            (BinaryOperator 0x902f3c8 <line:1091:15, line:1093:46> '<dependent type>' '&&'
              (BinaryOperator 0x902e2c8 <line:1091:15, line:1092:43> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x902e1e8 <line:1091:15, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x902e1a0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                  (DeclRefExpr 0x902e170 <col:15> '__size_type':'typename __string_type::size_type' lvalue Var 0x902dad0 '__extracted' '__size_type':'typename __string_type::size_type')
                  (DeclRefExpr 0x902e188 <col:29> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x902db40 '__n' 'const __size_type':'const typename __string_type::size_type'))
                (UnaryOperator 0x902e2b0 <line:1092:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x902e288 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x902e230 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x902e254 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')
                    (DeclRefExpr 0x902e26c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902dfa0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))))
              (UnaryOperator 0x902f3b0 <line:1093:11, col:46> '<dependent type>' prefix '!'
                (CallExpr 0x902f388 <col:12, col:46> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x902f330 <col:12, col:21> '<dependent type>' lvalue)
                  (DeclRefExpr 0x902f354 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')
                  (DeclRefExpr 0x902f36c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902dec0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))))
            (CompoundStmt 0x902f5c0 <line:1094:3, line:1098:3>
              (CompoundAssignOperator 0x902f478 <line:1095:5, col:39> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x902f3e0 <col:5> 'basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x902d3e0 '__str' 'basic_string<_CharT, _Traits, _Alloc> &')
                (CallExpr 0x902f458 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x902f418 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x902f43c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')))
              (UnaryOperator 0x902f4b0 <line:1096:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x902f498 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x902dad0 '__extracted' '__size_type':'typename __string_type::size_type'))
              (BinaryOperator 0x902f5a8 <line:1097:5, col:32> '<dependent type>' '='
                (DeclRefExpr 0x902f4c4 <col:5> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')
                (CallExpr 0x902f588 <col:11, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902f550 <col:11, col:25> '<dependent type>' lvalue
                    (CallExpr 0x902f530 <col:11, col:22> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x902f4f8 <col:11, col:16> '<dependent type>' lvalue
                        (DeclRefExpr 0x902f4dc <col:11> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &'))))))))
          (IfStmt 0x902f978 <line:1100:8, line:1108:24>
            <<<NULL>>>
            (CallExpr 0x902f678 <line:1100:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x902f620 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x902f644 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')
              (DeclRefExpr 0x902f65c <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902dfa0 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
            (CompoundAssignOperator 0x902f700 <line:1101:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x902f69c <col:3> 'typename __ios_base::iostate' lvalue Var 0x902dc80 '__err' 'typename __ios_base::iostate')
              (DependentScopeDeclRefExpr 0x902f6d8 <col:12, col:24> '<dependent type>' lvalue))
            (IfStmt 0x902f958 <line:1102:13, line:1108:24>
              <<<NULL>>>
              (CallExpr 0x902f7a0 <line:1102:17, col:51> '<dependent type>'
                (DependentScopeDeclRefExpr 0x902f748 <col:17, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x902f76c <col:38> '__int_type':'typename __istream_type::int_type' lvalue Var 0x902e060 '__c' '__int_type':'typename __istream_type::int_type')
                (DeclRefExpr 0x902f784 <col:43> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x902dec0 '__idelim' 'const __int_type':'const typename __istream_type::int_type'))
              (CompoundStmt 0x902f8c0 <line:1103:3, line:1106:3>
                (UnaryOperator 0x902f7e0 <line:1104:5, col:7> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x902f7c4 <col:7> '__size_type':'typename __string_type::size_type' lvalue Var 0x902dad0 '__extracted' '__size_type':'typename __string_type::size_type'))
                (CallExpr 0x902f8a0 <line:1105:5, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x902f868 <col:5, col:19> '<dependent type>' lvalue
                    (CallExpr 0x902f848 <col:5, col:16> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x902f810 <col:5, col:10> '<dependent type>' lvalue
                        (DeclRefExpr 0x902f7f4 <col:5> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &'))))))
              (CompoundAssignOperator 0x902f938 <line:1108:3, col:24> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x902f8d8 <col:3> 'typename __ios_base::iostate' lvalue Var 0x902dc80 '__err' 'typename __ios_base::iostate')
                (DependentScopeDeclRefExpr 0x902f910 <col:12, col:24> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x902fad0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1114:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902f9e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x902fab8 </usr/include/c++/4.6/bits/basic_string.tcc:1111:6, line:1114:6>
          (CallExpr 0x902fa88 <line:1112:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902fa08 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x902f9f0 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x902fa60 <col:25, col:37> '<dependent type>' lvalue))
          (NullStmt 0x902faa8 <line:1113:31>))
        <<<NULL>>>)
      (IfStmt 0x902fbd0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/basic_string.tcc:1121:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x902faf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x902fbb8 </usr/include/c++/4.6/bits/basic_string.tcc:1116:6, line:1121:6>
          (CallExpr 0x902fb98 <line:1120:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x902fb18 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x902fb00 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DependentScopeDeclRefExpr 0x902fb70 <col:25, col:37> '<dependent type>' lvalue)))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x902fce0 <line:1123:7, line:1124:23>
    <<<NULL>>>
    (UnaryOperator 0x902fc48 <line:1123:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x902fc2c <col:12> '__size_type':'typename __string_type::size_type' lvalue Var 0x902dad0 '__extracted' '__size_type':'typename __string_type::size_type'))
    (CompoundAssignOperator 0x902fcc0 <line:1124:2, col:23> '<dependent type>' lvalue '|=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
      (DeclRefExpr 0x902fc5c <col:2> 'typename __ios_base::iostate' lvalue Var 0x902dc80 '__err' 'typename __ios_base::iostate')
      (DependentScopeDeclRefExpr 0x902fc98 <col:11, col:23> '<dependent type>' lvalue))
    <<<NULL>>>)
  (IfStmt 0x902fda0 <line:1125:7, line:1126:21>
    <<<NULL>>>
    (DeclRefExpr 0x902fcfc <line:1125:11> 'typename __ios_base::iostate' lvalue Var 0x902dc80 '__err' 'typename __ios_base::iostate')
    (CallExpr 0x902fd80 <line:1126:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x902fd30 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x902fd14 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x902fd64 <col:16> 'typename __ios_base::iostate' lvalue Var 0x902dc80 '__err' 'typename __ios_base::iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x902fdd8 <line:1127:7, col:14>
    (DeclRefExpr 0x902fdbc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x902d230 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_string {
        class basic_string;
        typedef typename allocator<char>::rebind<char>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<char> traits_type;
        typedef typename char_traits<char>::char_type value_type;
        typedef std::allocator<char> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<char> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<char> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<char>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const char _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            char *_M_refdata() throw();
            char *_M_grab(const std::allocator<char> &__alloc1, const std::allocator<char> &__alloc2);
            static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_S_create(size_type, size_type, const std::allocator<char> &);
            void _M_dispose(const std::allocator<char> &__a);
            void _M_destroy(const std::allocator<char> &) throw();
            char *_M_refcopy() throw();
            char *_M_clone(const std::allocator<char> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<char> {
            struct _Alloc_hider;
            _Alloc_hider(char *__dat, const std::allocator<char> &__a);
            char *_M_p;
        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x9031fa8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x9031f98 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider _M_dataplus;
        char *_M_data() const (CompoundStmt 0x92ff8e0 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92ff8d0 <col:9, col:29>
    (ImplicitCastExpr 0x92ff8c0 <col:17, col:29> 'char *' <LValueToRValue>
      (MemberExpr 0x92ff8a0 <col:17, col:29> 'char *' lvalue ._M_p 0x9032530
        (MemberExpr 0x92ff880 <col:17> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Alloc_hider' lvalue ->_M_dataplus 0x9032560
          (CXXThisExpr 0x92ff760 <col:17> 'const class std::basic_string<char> *' this))))))


        char *_M_data(char *__p);
        std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep *_M_rep() const (CompoundStmt 0x92ff748 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92ff738 <col:9, col:59>
    (UnaryOperator 0x92ff720 <col:16, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' prefix '&'
      (ParenExpr 0x92ff708 <col:17, col:59> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92ff6f0 <col:18, col:58> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep' lvalue
          (ParenExpr 0x92ff6d8 <col:18, col:54> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (CXXReinterpretCastExpr 0x92ff6c0 <col:19, col:53> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *' reinterpret_cast<struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92ff6a0 <col:44, col:52> 'char *'
                (MemberExpr 0x92ff680 <col:44> '<bound member function type>' ->_M_data 0x90325e0
                  (CXXThisExpr 0x92ff670 <col:44> 'const class std::basic_string<char> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const char *__s) const;
        static void _M_copy(char *__d, const char *__s, size_type __n);
        static void _M_move(char *__d, const char *__s, size_type __n);
        static void _M_assign(char *__d, size_type __n, char __c);
        template <class _Iterator> static void _S_copy_chars(char *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(char *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(char *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(char *__p, char *__k1, char *__k2);
        static void _S_copy_chars(char *__p, const char *__k1, const char *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<char> &__a);
        basic_string(const std::basic_string<char> &__str);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<char> &__str, size_type __pos, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, size_type __n, const std::allocator<char> &__a);
        basic_string(const char *__s, const std::allocator<char> &__a);
        basic_string(size_type __n, char __c, const std::allocator<char> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<char> &__a);
        void ~basic_string();
        std::basic_string<char> &operator=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator=(const char *__s);
        std::basic_string<char> &operator=(char __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x92ff098 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x92ff088 <col:9, col:26>
    (ImplicitCastExpr 0x92ff078 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x92ff058 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x90524f0
        (ImplicitCastExpr 0x92ff048 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x92ff010 <col:16, col:23> 'struct std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >::_Rep *'
            (MemberExpr 0x92feff0 <col:16> '<bound member function type>' ->_M_rep 0x90328b0
              (CXXThisExpr 0x92feec8 <col:16> 'const class std::basic_string<char> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, char __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x92feeb0 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x92feea0 <col:9, col:32>
    (BinaryOperator 0x92fee88 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x92fee58 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92fee38 <col:16, col:22> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92fee28 <col:16> 'const class std::basic_string<char> *' this)))
      (ImplicitCastExpr 0x92fee78 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x92fff80 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x92ffa08 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x92ff9b0 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x92ff9a0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x92ff934 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x92ff980 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x92ff960 <col:13, col:19> '<bound member function type>' ->size 0x9039850
          (CXXThisExpr 0x92ff950 <col:13> 'const class std::basic_string<char> *' this))))
    (CallExpr 0x92ff9d8 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x92ff9c8 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92ff9f8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x92fff70 <line:859:2, col:22>
    (ImplicitCastExpr 0x92fff60 <col:9, col:22> 'const char':'const char' lvalue <NoOp>
      (ArraySubscriptExpr 0x92fff48 <col:9, col:22> 'char':'char' lvalue
        (CXXMemberCallExpr 0x92fff00 <col:9, col:17> 'char *'
          (MemberExpr 0x92ffee0 <col:9> '<bound member function type>' ->_M_data 0x90325e0
            (CXXThisExpr 0x92ffed0 <col:9> 'const class std::basic_string<char> *' this)))
        (ImplicitCastExpr 0x92fff38 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92fff1c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x903adb0 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<char> &operator+=(const std::basic_string<char> &__str);
        std::basic_string<char> &operator+=(const char *__s);
        std::basic_string<char> &operator+=(char __c);
        std::basic_string<char> &append(const std::basic_string<char> &__str);
        std::basic_string<char> &append(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &append(const char *__s, size_type __n);
        std::basic_string<char> &append(const char *__s);
        std::basic_string<char> &append(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &append(_InputIterator __first, _InputIterator __last);
        void push_back(char __c);
        std::basic_string<char> &assign(const std::basic_string<char> &__str);
        std::basic_string<char> &assign(const std::basic_string<char> &__str, size_type __pos, size_type __n);
        std::basic_string<char> &assign(const char *__s, size_type __n);
        std::basic_string<char> &assign(const char *__s);
        std::basic_string<char> &assign(size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, char __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str);
        std::basic_string<char> &insert(size_type __pos1, const std::basic_string<char> &__str, size_type __pos2, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s, size_type __n);
        std::basic_string<char> &insert(size_type __pos, const char *__s);
        std::basic_string<char> &insert(size_type __pos, size_type __n, char __c);
        iterator insert(iterator __p, char __c);
        std::basic_string<char> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<char> &replace(size_type __pos, size_type __n, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s, size_type __n2);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, const char *__s);
        std::basic_string<char> &replace(size_type __pos, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const std::basic_string<char> &__str);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s, size_type __n);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__s);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, size_type __n, char __c);
        template <class _InputIterator> std::basic_string<char> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, char *__k1, char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const char *__k1, const char *__k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<char> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<char> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<char> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, char __c);
        std::basic_string<char> &_M_replace_safe(size_type __pos1, size_type __n1, const char *__s, size_type __n2);
        template <class _InIterator> static char *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::__false_type);
        template <class _Integer> static char *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<char> &__a, std::__true_type);
        static char *_S_construct_aux_2(size_type __req, char __c, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a);
        template <class _InIterator> static char *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<char> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static char *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<char> &__a, std::forward_iterator_tag);
        static char *_S_construct(size_type __req, char __c, const std::allocator<char> &__a);
    public:
    public:
        size_type copy(char *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<char> &__s);
        const char *c_str() const;
        const char *data() const;
        allocator_type get_allocator() const;
        size_type find(const char *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find(const char *__s, size_type __pos) const;
        size_type find(char __c, size_type __pos) const;
        size_type rfind(const std::basic_string<char> &__str, size_type __pos) const;
        size_type rfind(const char *__s, size_type __pos, size_type __n) const;
        size_type rfind(const char *__s, size_type __pos) const;
        size_type rfind(char __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const char *__s, size_type __pos) const;
        size_type find_first_of(char __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const char *__s, size_type __pos) const;
        size_type find_last_of(char __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_first_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const char *__s, size_type __pos) const;
        size_type find_first_not_of(char __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<char> &__str, size_type __pos) const;
        size_type find_last_not_of(const char *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const char *__s, size_type __pos) const;
        size_type find_last_not_of(char __c, size_type __pos) const;
        std::basic_string<char> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<char> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<char> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<char> &__str, size_type __pos2, size_type __n2) const;
        int compare(const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s) const;
        int compare(size_type __pos, size_type __n1, const char *__s, size_type __n2) const;
    };
    class basic_string {
        class basic_string;
        typedef typename allocator<wchar_t>::rebind<wchar_t>::other _CharT_alloc_type;
    public:
    public:
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename char_traits<wchar_t>::char_type value_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename _CharT_alloc_type::size_type size_type;
        typedef typename _CharT_alloc_type::difference_type difference_type;
        typedef typename _CharT_alloc_type::reference reference;
        typedef typename _CharT_alloc_type::const_reference const_reference;
        typedef typename _CharT_alloc_type::pointer pointer;
        typedef typename _CharT_alloc_type::const_pointer const_pointer;
        typedef __gnu_cxx::__normal_iterator<pointer, basic_string<wchar_t> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string<wchar_t> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
    private:
    private:
        struct _Rep_base {
            struct _Rep_base;
            size_type _M_length;
            size_type _M_capacity;
            _Atomic_word _M_refcount;
        };
        struct _Rep :  std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep_base {
            struct _Rep;
            typedef typename allocator<wchar_t>::rebind<char>::other _Raw_bytes_alloc;
            static const size_type _S_max_size;
            static const wchar_t _S_terminal;
            static size_type _S_empty_rep_storage[];
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep() (CompoundStmt 0x92fe8e8 </usr/include/c++/4.6/bits/basic_string.h:176:9, line:182:2>
  (DeclStmt 0x92fe748 <line:180:4, col:62>
    0x92fe570 "void *__p =
      (CXXReinterpretCastExpr 0x92fe730 <col:16, col:61> 'void *' reinterpret_cast<void *> <BitCast>
        (UnaryOperator 0x92fe718 <col:40, col:41> 'size_type (*)[]' prefix '&'
          (DeclRefExpr 0x92fe6c0 <col:41> 'size_type []' lvalue Var 0x907a460 '_S_empty_rep_storage' 'size_type []')))")
  (ReturnStmt 0x92fe8d8 <line:181:4, col:39>
    (UnaryOperator 0x92fe8c0 <col:11, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue prefix '*'
      (CXXReinterpretCastExpr 0x92fe8a8 <col:12, col:39> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
        (ImplicitCastExpr 0x92fe898 <col:36> 'void *' <LValueToRValue>
          (DeclRefExpr 0x92fe87c <col:36> 'void *' lvalue Var 0x92fe570 '__p' 'void *'))))))


            bool _M_is_leaked() const;
            bool _M_is_shared() const;
            void _M_set_leaked();
            void _M_set_sharable();
            void _M_set_length_and_sharable(size_type __n);
            wchar_t *_M_refdata() throw();
            wchar_t *_M_grab(const std::allocator<wchar_t> &__alloc1, const std::allocator<wchar_t> &__alloc2);
            static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_S_create(size_type, size_type, const std::allocator<wchar_t> &);
            void _M_dispose(const std::allocator<wchar_t> &__a) (CompoundStmt 0x92fe550 </usr/include/c++/4.6/bits/basic_string.h:232:2, line:246:2>
  (IfStmt 0x92fe530 <line:234:4, line:245:6>
    <<<NULL>>>
    (ImplicitCastExpr 0x92fb980 <line:234:8, col:55> '_Bool' <IntegralToBoolean>
      (CallExpr 0x92fb938 <col:8, col:55> 'long'
        (ImplicitCastExpr 0x92fb928 <col:8> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x8fdc67c <col:8> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x92fb960 <col:25, col:47> 'long' <IntegralCast>
          (BinaryOperator 0x92fb910 <col:25, col:47> '_Bool' '!='
            (CXXThisExpr 0x92fb770 <col:25> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this)
            (UnaryOperator 0x92fb8f8 <col:33, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
              (CallExpr 0x92fb8d8 <col:34, col:47> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
                (ImplicitCastExpr 0x92fb8c8 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(*)(void)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92fb890 <col:34> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)' lvalue CXXMethod 0x907a5e0 '_S_empty_rep' 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep &(void)'))))))
        (ImplicitCastExpr 0x92fb970 <col:50> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x8fdc768 <col:50> '_Bool' false))))
    (CompoundStmt 0x92fe518 <line:236:6, line:245:6>
      (NullStmt 0x8fdc7a0 <line:238:67>)
      (IfStmt 0x92fbc20 <line:239:8, line:244:3>
        <<<NULL>>>
        (BinaryOperator 0x92fba78 <line:239:12, line:240:16> '_Bool' '<='
          (CallExpr 0x92fba50 <line:239:12, line:240:11> '_Atomic_word':'int'
            (ImplicitCastExpr 0x92fba40 <line:239:12, col:23> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x8fdc7d0 <col:12, col:23> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
            (UnaryOperator 0x92fba28 <col:51, col:58> '_Atomic_word *' prefix '&'
              (MemberExpr 0x92fba08 <col:52, col:58> '_Atomic_word':'int' lvalue ->_M_refcount 0x9079c30
                (ImplicitCastExpr 0x92fb9f8 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
                  (CXXThisExpr 0x92fb9d0 <col:52> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))))
            (UnaryOperator 0x8fdc868 <line:240:9, col:10> 'int' prefix '-'
              (IntegerLiteral 0x8fdc850 <col:10> 'int' 1)))
          (IntegerLiteral 0x8fdc8a8 <col:16> 'int' 0))
        (CompoundStmt 0x92fbc08 <line:241:3, line:244:3>
          (NullStmt 0x8fdc928 <line:242:63>)
          (CXXMemberCallExpr 0x92fbbe8 <line:243:5, col:19> 'void'
            (MemberExpr 0x92fbbb0 <col:5> '<bound member function type>' ->_M_destroy 0x907b290
              (CXXThisExpr 0x92fba90 <col:5> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' this))
            (DeclRefExpr 0x92fbbd0 <col:16> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue ParmVar 0x907b170 '__a' 'const class std::allocator<wchar_t> &')))
        <<<NULL>>>))
    <<<NULL>>>))


            void _M_destroy(const std::allocator<wchar_t> &) throw();
            wchar_t *_M_refcopy() throw();
            wchar_t *_M_clone(const std::allocator<wchar_t> &, size_type __res);
        };
        struct _Alloc_hider :  std::allocator<wchar_t> {
            struct _Alloc_hider;
            _Alloc_hider(wchar_t *__dat, const std::allocator<wchar_t> &__a);
            wchar_t *_M_p;
            inline void ~_Alloc_hider() throw() (CompoundStmt 0x92faed0 </usr/include/c++/4.6/bits/basic_string.h:266:14>)


        };
    public:
    public:
        static const size_type npos = (CXXStaticCastExpr 0x90575b8 </usr/include/c++/4.6/bits/basic_string.h:279:37, col:62> 'size_type':'unsigned int' static_cast<size_type> <NoOp>
  (ImplicitCastExpr 0x90575a8 <col:60, col:61> 'size_type':'unsigned int' <IntegralCast>
    (UnaryOperator 0x8fbd970 <col:60, col:61> 'int' prefix '-'
      (IntegerLiteral 0x8fbd958 <col:61> 'int' 1))))
;
    private:
    private:
        mutable std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Alloc_hider _M_dataplus;
        wchar_t *_M_data() const (CompoundStmt 0x92fb710 </usr/include/c++/4.6/bits/basic_string.h:287:7, col:35>
  (ReturnStmt 0x92fb700 <col:9, col:29>
    (ImplicitCastExpr 0x92fb6f0 <col:17, col:29> 'wchar_t *' <LValueToRValue>
      (MemberExpr 0x92fb6d0 <col:17, col:29> 'wchar_t *' lvalue ._M_p 0x9057b40
        (MemberExpr 0x92fb6b0 <col:17> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
          (CXXThisExpr 0x92fb590 <col:17> 'const class std::basic_string<wchar_t> *' this))))))


        wchar_t *_M_data(wchar_t *__p);
        std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep *_M_rep() const (CompoundStmt 0x92fb578 </usr/include/c++/4.6/bits/basic_string.h:295:7, col:62>
  (ReturnStmt 0x92fb568 <col:9, col:59>
    (UnaryOperator 0x92fb550 <col:16, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' prefix '&'
      (ParenExpr 0x92fb538 <col:17, col:59> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
        (ArraySubscriptExpr 0x92fb520 <col:18, col:58> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep' lvalue
          (ParenExpr 0x92fb508 <col:18, col:54> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (CXXReinterpretCastExpr 0x92fb4f0 <col:19, col:53> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *' reinterpret_cast<struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *> <BitCast>
              (CXXMemberCallExpr 0x92fb4d0 <col:44, col:52> 'wchar_t *'
                (MemberExpr 0x92fb4b0 <col:44> '<bound member function type>' ->_M_data 0x9057bf0
                  (CXXThisExpr 0x92fb4a0 <col:44> 'const class std::basic_string<wchar_t> *' this)))))
          (UnaryOperator 0x8fdcfe8 <col:56, col:57> 'int' prefix '-'
            (IntegerLiteral 0x8fdcfd0 <col:57> 'int' 1)))))))


        iterator _M_ibegin() const;
        iterator _M_iend() const;
        void _M_leak();
        size_type _M_check(size_type __pos, const char *__s) const;
        void _M_check_length(size_type __n1, size_type __n2, const char *__s) const;
        size_type _M_limit(size_type __pos, size_type __off) const;
        bool _M_disjunct(const wchar_t *__s) const;
        static void _M_copy(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_move(wchar_t *__d, const wchar_t *__s, size_type __n);
        static void _M_assign(wchar_t *__d, size_type __n, wchar_t __c);
        template <class _Iterator> static void _S_copy_chars(wchar_t *__p, _Iterator __k1, _Iterator __k2);
        static void _S_copy_chars(wchar_t *__p, iterator __k1, iterator __k2);
        static void _S_copy_chars(wchar_t *__p, const_iterator __k1, const_iterator __k2);
        static void _S_copy_chars(wchar_t *__p, wchar_t *__k1, wchar_t *__k2);
        static void _S_copy_chars(wchar_t *__p, const wchar_t *__k1, const wchar_t *__k2);
        static int _S_compare(size_type __n1, size_type __n2);
        void _M_mutate(size_type __pos, size_type __len1, size_type __len2);
        void _M_leak_hard();
        static std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep &_S_empty_rep();
    public:
    public:
        basic_string();
        basic_string(const std::allocator<wchar_t> &__a);
        basic_string(const std::basic_string<wchar_t> &__str);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        basic_string(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, size_type __n, const std::allocator<wchar_t> &__a);
        basic_string(const wchar_t *__s, const std::allocator<wchar_t> &__a);
        basic_string(size_type __n, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InputIterator> basic_string(_InputIterator __beg, _InputIterator __end, const std::allocator<wchar_t> &__a);
        void ~basic_string() (CompoundStmt 0x92fae20 </usr/include/c++/4.6/bits/basic_string.h:533:7, col:54>
  (ExprWithCleanups 0x92fae00 <col:9, col:51> 'void'
    (CXXTemporary 0x92fad80)
    (CXXMemberCallExpr 0x92fad98 <col:9, col:51> 'void'
      (MemberExpr 0x92facfc <col:9, col:19> '<bound member function type>' ->_M_dispose 0x907b1c0
        (CXXMemberCallExpr 0x92facd0 <col:9, col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
          (MemberExpr 0x92facb0 <col:9> '<bound member function type>' ->_M_rep 0x9057ee0
            (ImplicitCastExpr 0x92facf0 <col:9> 'const class std::basic_string<wchar_t> *' <NoOp>
              (CXXThisExpr 0x92fab90 <col:9> 'class std::basic_string<wchar_t> *' this)))))
      (MaterializeTemporaryExpr 0x92fadf0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue
        (ImplicitCastExpr 0x92fade0 <col:30, col:50> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' <NoOp>
          (CXXBindTemporaryExpr 0x92fad88 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>' (CXXTemporary 0x92fad80)
            (CXXMemberCallExpr 0x92fad50 <col:30, col:50> 'allocator_type':'class std::allocator<wchar_t>'
              (MemberExpr 0x92fad30 <col:30, col:36> '<bound member function type>' ->get_allocator 0x9071a00
                (ImplicitCastExpr 0x92fad70 <col:30> 'const class std::basic_string<wchar_t> *' <NoOp>
                  (CXXThisExpr 0x92fad20 <col:30> 'class std::basic_string<wchar_t> *' this))))))))))


        std::basic_string<wchar_t> &operator=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator=(wchar_t __c);
        iterator begin();
        const_iterator begin() const;
        iterator end();
        const_iterator end() const;
        reverse_iterator rbegin();
        const_reverse_iterator rbegin() const;
        reverse_iterator rend();
        const_reverse_iterator rend() const;
    public:
    public:
        size_type size() const (CompoundStmt 0x9300230 </usr/include/c++/4.6/bits/basic_string.h:710:7, col:37>
  (ReturnStmt 0x9300220 <col:9, col:26>
    (ImplicitCastExpr 0x9300210 <col:16, col:26> 'size_type':'unsigned int' <LValueToRValue>
      (MemberExpr 0x93001f0 <col:16, col:26> 'size_type':'unsigned int' lvalue ->_M_length 0x9079ab0
        (ImplicitCastExpr 0x93001e0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep_base *' <UncheckedDerivedToBase (_Rep_base)>
          (CXXMemberCallExpr 0x93001c0 <col:16, col:23> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Rep *'
            (MemberExpr 0x93001a0 <col:16> '<bound member function type>' ->_M_rep 0x9057ee0
              (CXXThisExpr 0x9300080 <col:16> 'const class std::basic_string<wchar_t> *' this))))))))


        size_type length() const;
        size_type max_size() const;
        void resize(size_type __n, wchar_t __c);
        void resize(size_type __n);
        size_type capacity() const;
        void reserve(size_type __res_arg);
        void clear();
        bool empty() const (CompoundStmt 0x9300068 </usr/include/c++/4.6/bits/basic_string.h:803:7, col:35>
  (ReturnStmt 0x9300058 <col:9, col:32>
    (BinaryOperator 0x9300040 <col:16, col:32> '_Bool' '=='
      (CXXMemberCallExpr 0x9300010 <col:16, col:27> 'size_type':'unsigned int'
        (MemberExpr 0x92ffff0 <col:16, col:22> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x92fffe0 <col:16> 'const class std::basic_string<wchar_t> *' this)))
      (ImplicitCastExpr 0x9300030 <col:32> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x8fe59e8 <col:32> 'int' 0)))))


        const_reference operator[](size_type __pos) const;
        reference operator[](size_type __pos);
        const_reference at(size_type __n) const (CompoundStmt 0x93008d0 </usr/include/c++/4.6/bits/basic_string.h:856:7, line:860:7>
  (IfStmt 0x9300358 <line:857:2, line:858:48>
    <<<NULL>>>
    (BinaryOperator 0x9300300 <line:857:6, col:24> '_Bool' '>='
      (ImplicitCastExpr 0x93002f0 <col:6> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9300284 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))
      (CXXMemberCallExpr 0x93002d0 <col:13, col:24> 'size_type':'unsigned int'
        (MemberExpr 0x93002b0 <col:13, col:19> '<bound member function type>' ->size 0x905ede0
          (CXXThisExpr 0x93002a0 <col:13> 'const class std::basic_string<wchar_t> *' this))))
    (CallExpr 0x9300328 <line:858:4, col:48> 'void'
      (ImplicitCastExpr 0x9300318 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8fe5e54 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9300348 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x8fe5e40 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x8fe5e10 </usr/include/c++/4.6/bits/basic_string.h:858:29> 'const char [17]' lvalue "basic_string::at"))))
    <<<NULL>>>)
  (ReturnStmt 0x93008c0 <line:859:2, col:22>
    (ImplicitCastExpr 0x93008b0 <col:9, col:22> 'const wchar_t':'const wchar_t' lvalue <NoOp>
      (ArraySubscriptExpr 0x9300898 <col:9, col:22> 'wchar_t':'wchar_t' lvalue
        (CXXMemberCallExpr 0x9300850 <col:9, col:17> 'wchar_t *'
          (MemberExpr 0x9300830 <col:9> '<bound member function type>' ->_M_data 0x9057bf0
            (CXXThisExpr 0x9300820 <col:9> 'const class std::basic_string<wchar_t> *' this)))
        (ImplicitCastExpr 0x9300888 <col:19> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x930086c <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x9060360 '__n' 'size_type':'unsigned int'))))))


        reference at(size_type __n);
        std::basic_string<wchar_t> &operator+=(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &operator+=(const wchar_t *__s);
        std::basic_string<wchar_t> &operator+=(wchar_t __c);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &append(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &append(const wchar_t *__s);
        std::basic_string<wchar_t> &append(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &append(_InputIterator __first, _InputIterator __last);
        void push_back(wchar_t __c);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &assign(const std::basic_string<wchar_t> &__str, size_type __pos, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &assign(const wchar_t *__s);
        std::basic_string<wchar_t> &assign(size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &assign(_InputIterator __first, _InputIterator __last);
        void insert(iterator __p, size_type __n, wchar_t __c);
        template <class _InputIterator> void insert(iterator __p, _InputIterator __beg, _InputIterator __end);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &insert(size_type __pos1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &insert(size_type __pos, const wchar_t *__s);
        std::basic_string<wchar_t> &insert(size_type __pos, size_type __n, wchar_t __c);
        iterator insert(iterator __p, wchar_t __c);
        std::basic_string<wchar_t> &erase(size_type __pos, size_type __n);
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(size_type __pos, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const std::basic_string<wchar_t> &__str);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s, size_type __n);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__s);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, size_type __n, wchar_t __c);
        template <class _InputIterator> std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, wchar_t *__k1, wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const wchar_t *__k1, const wchar_t *__k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2);
        std::basic_string<wchar_t> &replace(iterator __i1, iterator __i2, const_iterator __k1, const_iterator __k2);
    private:
    private:
        template <class _Integer> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n, _Integer __val, std::__true_type);
        template <class _InputIterator> std::basic_string<wchar_t> &_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1, _InputIterator __k2, std::__false_type);
        std::basic_string<wchar_t> &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, wchar_t __c);
        std::basic_string<wchar_t> &_M_replace_safe(size_type __pos1, size_type __n1, const wchar_t *__s, size_type __n2);
        template <class _InIterator> static wchar_t *_S_construct_aux(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::__false_type);
        template <class _Integer> static wchar_t *_S_construct_aux(_Integer __beg, _Integer __end, const std::allocator<wchar_t> &__a, std::__true_type);
        static wchar_t *_S_construct_aux_2(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a);
        template <class _InIterator> static wchar_t *_S_construct(_InIterator __beg, _InIterator __end, const std::allocator<wchar_t> &__a, std::input_iterator_tag);
        template <class _FwdIterator> static wchar_t *_S_construct(_FwdIterator __beg, _FwdIterator __end, const std::allocator<wchar_t> &__a, std::forward_iterator_tag);
        static wchar_t *_S_construct(size_type __req, wchar_t __c, const std::allocator<wchar_t> &__a);
    public:
    public:
        size_type copy(wchar_t *__s, size_type __n, size_type __pos) const;
        void swap(std::basic_string<wchar_t> &__s);
        const wchar_t *c_str() const (CompoundStmt 0x9300e00 </usr/include/c++/4.6/bits/basic_string.h:1766:7, col:27>
  (ReturnStmt 0x9300df0 <col:9, col:24>
    (ImplicitCastExpr 0x9300de0 <col:16, col:24> 'const wchar_t *' <NoOp>
      (CXXMemberCallExpr 0x9300dc0 <col:16, col:24> 'wchar_t *'
        (MemberExpr 0x9300da0 <col:16> '<bound member function type>' ->_M_data 0x9057bf0
          (CXXThisExpr 0x9300d90 <col:16> 'const class std::basic_string<wchar_t> *' this))))))


        const wchar_t *data() const;
        allocator_type get_allocator() const (CompoundStmt 0x92feac0 </usr/include/c++/4.6/bits/basic_string.h:1783:7, col:29>
  (ReturnStmt 0x92feab0 <col:9, col:16>
    (CXXConstructExpr 0x92fea88 <col:16> 'allocator_type':'class std::allocator<wchar_t>''void (const class std::allocator<wchar_t> &) throw()'
      (ImplicitCastExpr 0x92fea78 <col:16> 'const class std::allocator<wchar_t>' lvalue <NoOp>
        (ImplicitCastExpr 0x92fea68 <col:16> 'class std::allocator<wchar_t>' lvalue <DerivedToBase (allocator)>
          (MemberExpr 0x92fea20 <col:16> 'struct std::basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> >::_Alloc_hider' lvalue ->_M_dataplus 0x9057b70
            (CXXThisExpr 0x92fe900 <col:16> 'const class std::basic_string<wchar_t> *' this)))))))


        size_type find(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find(const wchar_t *__s, size_type __pos) const;
        size_type find(wchar_t __c, size_type __pos) const;
        size_type rfind(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type rfind(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type rfind(const wchar_t *__s, size_type __pos) const;
        size_type rfind(wchar_t __c, size_type __pos) const;
        size_type find_first_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_of(wchar_t __c, size_type __pos) const;
        size_type find_last_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_of(wchar_t __c, size_type __pos) const;
        size_type find_first_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_first_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_first_not_of(wchar_t __c, size_type __pos) const;
        size_type find_last_not_of(const std::basic_string<wchar_t> &__str, size_type __pos) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos, size_type __n) const;
        size_type find_last_not_of(const wchar_t *__s, size_type __pos) const;
        size_type find_last_not_of(wchar_t __c, size_type __pos) const;
        std::basic_string<wchar_t> substr(size_type __pos, size_type __n) const;
        int compare(const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos, size_type __n, const std::basic_string<wchar_t> &__str) const;
        int compare(size_type __pos1, size_type __n1, const std::basic_string<wchar_t> &__str, size_type __pos2, size_type __n2) const;
        int compare(const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s) const;
        int compare(size_type __pos, size_type __n1, const wchar_t *__s, size_type __n2) const;
    };
}
namespace std {
    class locale {
        class locale;
    public:
    public:
        typedef int category;
        class facet;
        class id;
        class _Impl;
        ;
        ;
        ;
        ;
        ;
        static const category none = (IntegerLiteral 0x9081a58 </usr/include/c++/4.6/bits/locale_classes.h:99:35> 'int' 0)
;
        static const category ctype = (ImplicitCastExpr 0x9081b00 </usr/include/c++/4.6/bits/locale_classes.h:100:36, col:42> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081ae8 <col:36, col:42> 'long' '<<'
    (IntegerLiteral 0x9081ab8 <col:36> 'long' 1)
    (IntegerLiteral 0x9081ad0 <col:42> 'int' 0)))
;
        static const category numeric = (ImplicitCastExpr 0x9081ba0 </usr/include/c++/4.6/bits/locale_classes.h:101:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081b88 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9081b58 <col:37> 'long' 1)
    (IntegerLiteral 0x9081b70 <col:43> 'int' 1)))
;
        static const category collate = (ImplicitCastExpr 0x9081c40 </usr/include/c++/4.6/bits/locale_classes.h:102:37, col:43> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081c28 <col:37, col:43> 'long' '<<'
    (IntegerLiteral 0x9081bf8 <col:37> 'long' 1)
    (IntegerLiteral 0x9081c10 <col:43> 'int' 2)))
;
        static const category time = (ImplicitCastExpr 0x9081ce0 </usr/include/c++/4.6/bits/locale_classes.h:103:35, col:41> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081cc8 <col:35, col:41> 'long' '<<'
    (IntegerLiteral 0x9081c98 <col:35> 'long' 1)
    (IntegerLiteral 0x9081cb0 <col:41> 'int' 3)))
;
        static const category monetary = (ImplicitCastExpr 0x9081d80 </usr/include/c++/4.6/bits/locale_classes.h:104:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081d68 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9081d38 <col:38> 'long' 1)
    (IntegerLiteral 0x9081d50 <col:44> 'int' 4)))
;
        static const category messages = (ImplicitCastExpr 0x9081e20 </usr/include/c++/4.6/bits/locale_classes.h:105:38, col:44> 'const category':'const int' <IntegralCast>
  (BinaryOperator 0x9081e08 <col:38, col:44> 'long' '<<'
    (IntegerLiteral 0x9081dd8 <col:38> 'long' 1)
    (IntegerLiteral 0x9081df0 <col:44> 'int' 5)))
;
        static const category all = (ParenExpr 0x9081fe0 </usr/include/c++/4.6/bits/locale_classes.h:106:34, line:107:36> 'int'
  (BinaryOperator 0x9081fc8 <line:106:35, line:107:28> 'int' '|'
    (BinaryOperator 0x9081f88 <line:106:35, line:107:17> 'int' '|'
      (BinaryOperator 0x9081f48 <line:106:35, line:107:9> 'int' '|'
        (BinaryOperator 0x9081f08 <line:106:35, col:53> 'int' '|'
          (BinaryOperator 0x9081ec8 <col:35, col:43> 'int' '|'
            (ImplicitCastExpr 0x9081ea8 <col:35> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9081e74 <col:35> 'const category':'const int' lvalue Var 0x9081a80 'ctype' 'const category':'const int'))
            (ImplicitCastExpr 0x9081eb8 <col:43> 'category':'int' <LValueToRValue>
              (DeclRefExpr 0x9081e8c <col:43> 'const category':'const int' lvalue Var 0x9081b20 'numeric' 'const category':'const int')))
          (ImplicitCastExpr 0x9081ef8 <col:53> 'category':'int' <LValueToRValue>
            (DeclRefExpr 0x9081ee0 <col:53> 'const category':'const int' lvalue Var 0x9081bc0 'collate' 'const category':'const int')))
        (ImplicitCastExpr 0x9081f38 <line:107:9> 'category':'int' <LValueToRValue>
          (DeclRefExpr 0x9081f20 <col:9> 'const category':'const int' lvalue Var 0x9081c60 'time' 'const category':'const int')))
      (ImplicitCastExpr 0x9081f78 <col:17> 'category':'int' <LValueToRValue>
        (DeclRefExpr 0x9081f60 <col:17> 'const category':'const int' lvalue Var 0x9081d00 'monetary' 'const category':'const int')))
    (ImplicitCastExpr 0x9081fb8 <col:28> 'category':'int' <LValueToRValue>
      (DeclRefExpr 0x9081fa0 <col:28> 'const category':'const int' lvalue Var 0x9081da0 'messages' 'const category':'const int'))))
;
        locale() throw();
        locale(const std::locale &__other) throw();
        locale(const char *__s);
        locale(const std::locale &__base, const char *__s, category __cat);
        locale(const std::locale &__base, const std::locale &__add, category __cat);
        template <typename _Facet> locale(const std::locale &__other, _Facet *__f);
        void ~locale() throw();
        const std::locale &operator=(const std::locale &__other) throw();
        template <typename _Facet> std::locale combine(const std::locale &__other) const;
        string name() const;
        bool operator==(const std::locale &__other) const throw();
        bool operator!=(const std::locale &__other) const throw() (CompoundStmt 0x9083ea0 </usr/include/c++/4.6/bits/locale_classes.h:236:5, col:44>
  (ReturnStmt 0x9083e90 <col:7, col:41>
    (UnaryOperator 0x9083e78 <col:14, col:41> '_Bool' prefix '!'
      (ParenExpr 0x9083e60 <col:15, col:41> '_Bool'
        (CXXMemberCallExpr 0x9083e40 <col:16, col:40> '_Bool'
          (MemberExpr 0x9083e08 <col:16, col:30> '<bound member function type>' ->operator== 0x9082e30
            (CXXThisExpr 0x9083df8 <col:16> 'const class std::locale *' this))
          (DeclRefExpr 0x9083e28 <col:33> 'const class std::locale' lvalue ParmVar 0x9082eb0 '__other' 'const class std::locale &'))))))


        template <typename _Char, typename _Traits, typename _Alloc> bool operator()(const basic_string<_Char, _Traits, _Alloc> &__s1, const basic_string<_Char, _Traits, _Alloc> &__s2) const;
        static std::locale global(const std::locale &);
        static const std::locale &classic();
    private:
    private:
        std::locale::_Impl *_M_impl;
        static std::locale::_Impl *_S_classic;
        static std::locale::_Impl *_S_global;
        static const char *const *const _S_categories;
        enum  {
            _S_categories_size = (ImplicitCastExpr 0x90838f8 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90838a0 </usr/include/c++/4.6/bits/locale_classes.h:304:33, /usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' '+'
    (IntegerLiteral 0x9083870 </usr/include/c++/4.6/bits/locale_classes.h:304:33> 'int' 6)
    (IntegerLiteral 0x9083888 </usr/include/c++/4.6//i686-linux-gnu/bits/c++locale.h:45:33> 'int' 6)))

        };
        static __gthread_once_t _S_once;
        locale(std::locale::_Impl *) throw();
        static void _S_initialize();
        static void _S_initialize_once() throw();
        static category _S_normalize_category(category);
        void _M_coalesce(const std::locale &__base, const std::locale &__add, category __cat);
    };
    class facet {
        class facet;
    private:
    private:
        ;
        ;
        mutable _Atomic_word _M_refcount;
        static __c_locale _S_c_locale;
        static const char _S_c_name[2];
        static __gthread_once_t _S_once;
        static void _S_initialize_once();
    protected:
    protected:
        facet(size_t __refs = (ImplicitCastExpr 0x9085010 </usr/include/c++/4.6/bits/locale_classes.h:370:27> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9084ff8 <col:27> 'int' 0))
) throw() : _M_refcount((ConditionalOperator 0x90850b0 </usr/include/c++/4.6/bits/locale_classes.h:370:52, col:65> 'int'
  (ImplicitCastExpr 0x90850a0 <col:52> '_Bool' <IntegralToBoolean>
    (ImplicitCastExpr 0x9085090 <col:52> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x9085044 <col:52> 'size_t':'unsigned int' lvalue ParmVar 0x9084360 '__refs' 'size_t':'unsigned int')))
  (IntegerLiteral 0x9085060 <col:61> 'int' 1)
  (IntegerLiteral 0x9085078 <col:65> 'int' 0))
) (CompoundStmt 0x90850f0 </usr/include/c++/4.6/bits/locale_classes.h:371:5, col:7>)


        virtual void ~facet();
        static void _S_create_c_locale(__c_locale &__cloc, const char *__s, __c_locale __old = (ImplicitCastExpr 0x9085038 </usr/include/c++/4.6/bits/locale_classes.h:379:29> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9085020 <col:29> 'int' 0))
);
        static __c_locale _S_clone_c_locale(__c_locale &__cloc) throw();
        static void _S_destroy_c_locale(__c_locale &__cloc);
        static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char *__s);
        static __c_locale _S_get_c_locale();
        static const char *_S_get_c_name() throw();
    private:
    private:
        void _M_add_reference() const throw() (CompoundStmt 0x9085220 </usr/include/c++/4.6/bits/locale_classes.h:401:5, col:58>
  (CallExpr 0x90851f8 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x90851e8 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9085124 <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x8fb4a40 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x90851b8 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9085194 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x9084130
        (CXXThisExpr 0x9085168 <col:41> 'const class std::locale::facet *' this)))
    (IntegerLiteral 0x90851d0 <col:54> 'int' 1)))


        void _M_remove_reference() const throw() (CompoundStmt 0x9085490 </usr/include/c++/4.6/bits/locale_classes.h:405:5, line:416:5>
  (NullStmt 0x9085238 <line:407:60>)
  (IfStmt 0x9085470 <line:408:7, line:415:2>
    <<<NULL>>>
    (BinaryOperator 0x9085350 <line:408:11, col:71> '_Bool' '=='
      (CallExpr 0x9085310 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9085300 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9085268 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x90852b8 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9085298 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x9084130
            (CXXThisExpr 0x9085288 <col:51> 'const class std::locale::facet *' this)))
        (UnaryOperator 0x90852e8 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x90852d0 <col:65> 'int' 1)))
      (IntegerLiteral 0x9085338 <col:71> 'int' 1))
    (CompoundStmt 0x9085450 <line:409:2, line:415:2>
      (NullStmt 0x9085368 <line:410:63>)
      (IfStmt 0x90853d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:412:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9085378 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x90853c0 </usr/include/c++/4.6/bits/locale_classes.h:412:6, col:21>
          (CXXDeleteExpr 0x90853a8 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9085398 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9085388 <col:15> 'const class std::locale::facet *' this))))
        <<<NULL>>>)
      (IfStmt 0x9085430 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:414:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x90853f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9085420 </usr/include/c++/4.6/bits/locale_classes.h:414:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        facet(const std::locale::facet &);
        std::locale::facet &operator=(const std::locale::facet &);
    };
    class id {
        class id;
    private:
    private:
        ;
        ;
        ;
        ;
        mutable size_t _M_index;
        static _Atomic_word _S_refcount;
        void operator=(const std::locale::id &);
        id(const std::locale::id &);
    public:
    public:
        id() (CompoundStmt 0x9085e50 </usr/include/c++/4.6/bits/locale_classes.h:467:10, col:12>)


        size_t _M_id() const throw();
    };
    class _Impl {
        class _Impl;
    public:
    public:
        ;
        ;
        ;
        ;
        ;
    private:
    private:
        _Atomic_word _M_refcount;
        const std::locale::facet **_M_facets;
        size_t _M_facets_size;
        const std::locale::facet **_M_caches;
        char **_M_names;
        static const locale::id *const _S_id_ctype[];
        static const locale::id *const _S_id_numeric[];
        static const locale::id *const _S_id_collate[];
        static const locale::id *const _S_id_time[];
        static const locale::id *const _S_id_monetary[];
        static const locale::id *const _S_id_messages[];
        static const locale::id *const *const _S_facet_categories[];
        void _M_add_reference() throw() (CompoundStmt 0x9087d38 </usr/include/c++/4.6/bits/locale_classes.h:510:5, col:58>
  (CallExpr 0x9087d10 <col:7, col:55> 'void'
    (ImplicitCastExpr 0x9087d00 <col:7, col:18> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9087c7c <col:7, col:18> 'void (_Atomic_word *, int)' lvalue Function 0x8fb4a40 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x9087cd0 <col:40, col:41> '_Atomic_word *' prefix '&'
      (MemberExpr 0x9087cb0 <col:41> '_Atomic_word':'int' lvalue ->_M_refcount 0x90865b0
        (CXXThisExpr 0x9087ca0 <col:41> 'class std::locale::_Impl *' this)))
    (IntegerLiteral 0x9087ce8 <col:54> 'int' 1)))


        void _M_remove_reference() throw() (CompoundStmt 0x9087f90 </usr/include/c++/4.6/bits/locale_classes.h:514:5, line:525:5>
  (NullStmt 0x9087d50 <line:516:60>)
  (IfStmt 0x9087f70 <line:517:7, line:524:2>
    <<<NULL>>>
    (BinaryOperator 0x9087e68 <line:517:11, col:71> '_Bool' '=='
      (CallExpr 0x9087e28 <col:11, col:66> '_Atomic_word':'int'
        (ImplicitCastExpr 0x9087e18 <col:11, col:22> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9087d80 <col:11, col:22> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x9087dd0 <col:50, col:51> '_Atomic_word *' prefix '&'
          (MemberExpr 0x9087db0 <col:51> '_Atomic_word':'int' lvalue ->_M_refcount 0x90865b0
            (CXXThisExpr 0x9087da0 <col:51> 'class std::locale::_Impl *' this)))
        (UnaryOperator 0x9087e00 <col:64, col:65> 'int' prefix '-'
          (IntegerLiteral 0x9087de8 <col:65> 'int' 1)))
      (IntegerLiteral 0x9087e50 <col:71> 'int' 1))
    (CompoundStmt 0x9087f50 <line:518:2, line:524:2>
      (NullStmt 0x9087e80 <line:519:63>)
      (IfStmt 0x9087ef0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.h:521:21>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9087e90 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9087ed8 </usr/include/c++/4.6/bits/locale_classes.h:521:6, col:21>
          (CXXDeleteExpr 0x9087ec0 <col:8, col:15> 'void'
            (ImplicitCastExpr 0x9087eb0 <col:15> 'void *' <NoOp>
              (CXXThisExpr 0x9087ea0 <col:15> 'class std::locale::_Impl *' this))))
        <<<NULL>>>)
      (IfStmt 0x9087f30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.h:523:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9087f10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9087f20 </usr/include/c++/4.6/bits/locale_classes.h:523:6, col:8>)
        <<<NULL>>>))
    <<<NULL>>>))


        _Impl(const std::locale::_Impl &, size_t);
        _Impl(const char *, size_t);
        _Impl(size_t) throw();
        void ~_Impl() throw();
        _Impl(const std::locale::_Impl &);
        void operator=(const std::locale::_Impl &);
        bool _M_check_same_name() (CompoundStmt 0x9088608 </usr/include/c++/4.6/bits/locale_classes.h:540:5, line:547:5>
  (DeclStmt 0x9087ff8 <line:541:7, col:24>
    0x9087fb0 "bool __ret =
      (CXXBoolLiteralExpr 0x9087fe8 <col:20> '_Bool' true)")
  (IfStmt 0x90885b0 <line:542:7, line:545:66>
    <<<NULL>>>
    (ImplicitCastExpr 0x9088088 <line:542:11, col:21> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x9088078 <col:11, col:21> 'char *' <LValueToRValue>
        (ArraySubscriptExpr 0x9088060 <col:11, col:21> 'char *' lvalue
          (ImplicitCastExpr 0x9088050 <col:11> 'char **' <LValueToRValue>
            (MemberExpr 0x9088018 <col:11> 'char **' lvalue ->_M_names 0x90866d0
              (CXXThisExpr 0x9088008 <col:11> 'class std::locale::_Impl *' this)))
          (IntegerLiteral 0x9088038 <col:20> 'int' 1))))
    (ForStmt 0x9088588 <line:544:2, line:545:66>
      (DeclStmt 0x9088100 <line:544:7, col:21>
        0x90880a0 "size_t __i =
          (ImplicitCastExpr 0x90880f0 <col:20> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x90880d8 <col:20> 'int' 0))")
      <<<NULL>>>
      (BinaryOperator 0x90881e0 <col:23, col:59> '_Bool' '&&'
        (ImplicitCastExpr 0x90881d0 <col:23> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9088110 <col:23> '_Bool' lvalue Var 0x9087fb0 '__ret' '_Bool'))
        (BinaryOperator 0x90881b8 <col:32, col:59> '_Bool' '<'
          (ImplicitCastExpr 0x9088198 <col:32> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9088128 <col:32> 'size_t':'unsigned int' lvalue Var 0x90880a0 '__i' 'size_t':'unsigned int'))
          (ImplicitCastExpr 0x90881a8 <col:38, col:59> 'unsigned int' <IntegralCast>
            (BinaryOperator 0x9088180 <col:38, col:59> 'int' '-'
              (ImplicitCastExpr 0x9088170 <col:38> 'int' <IntegralCast>
                (DeclRefExpr 0x9088140 <col:38> 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>' EnumConstant 0x90838c0 '_S_categories_size' 'enum std::locale::<anonymous at /usr/include/c++/4.6/bits/locale_classes.h:304:5>'))
              (IntegerLiteral 0x9088158 <col:59> 'int' 1)))))
      (UnaryOperator 0x9088210 <col:62, col:64> 'size_t':'unsigned int' lvalue prefix '++'
        (DeclRefExpr 0x90881f8 <col:64> 'size_t':'unsigned int' lvalue Var 0x90880a0 '__i' 'size_t':'unsigned int'))
      (BinaryOperator 0x9088570 <line:545:4, col:66> '_Bool' lvalue '='
        (DeclRefExpr 0x9088224 <col:4> '_Bool' lvalue Var 0x9087fb0 '__ret' '_Bool')
        (BinaryOperator 0x9088558 <col:12, col:66> '_Bool' '=='
          (CallExpr 0x90884d8 <col:12, col:61> 'int'
            (ImplicitCastExpr 0x90884c8 <col:12> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9088354 <col:12> 'int (const char *, const char *)' lvalue Function 0x9088240 '__builtin_strcmp' 'int (const char *, const char *)'))
            (ImplicitCastExpr 0x9088510 <col:29, col:41> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9088500 <col:29, col:41> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x90883d8 <col:29, col:41> 'char *' lvalue
                  (ImplicitCastExpr 0x90883b8 <col:29> 'char **' <LValueToRValue>
                    (MemberExpr 0x9088380 <col:29> 'char **' lvalue ->_M_names 0x90866d0
                      (CXXThisExpr 0x9088370 <col:29> 'class std::locale::_Impl *' this)))
                  (ImplicitCastExpr 0x90883c8 <col:38> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x90883a0 <col:38> 'size_t':'unsigned int' lvalue Var 0x90880a0 '__i' 'size_t':'unsigned int')))))
            (ImplicitCastExpr 0x9088530 <col:44, col:60> 'const char *' <NoOp>
              (ImplicitCastExpr 0x9088520 <col:44, col:60> 'char *' <LValueToRValue>
                (ArraySubscriptExpr 0x9088498 <col:44, col:60> 'char *' lvalue
                  (ImplicitCastExpr 0x9088488 <col:44> 'char **' <LValueToRValue>
                    (MemberExpr 0x9088400 <col:44> 'char **' lvalue ->_M_names 0x90866d0
                      (CXXThisExpr 0x90883f0 <col:44> 'class std::locale::_Impl *' this)))
                  (BinaryOperator 0x9088470 <col:53, col:59> 'unsigned int' '+'
                    (ImplicitCastExpr 0x9088450 <col:53> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9088420 <col:53> 'size_t':'unsigned int' lvalue Var 0x90880a0 '__i' 'size_t':'unsigned int'))
                    (ImplicitCastExpr 0x9088460 <col:59> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x9088438 <col:59> 'int' 1)))))))
          (IntegerLiteral 0x9088540 <col:66> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x90885f8 <line:546:7, col:14>
    (ImplicitCastExpr 0x90885e8 <col:14> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x90885cc <col:14> '_Bool' lvalue Var 0x9087fb0 '__ret' '_Bool'))))


        void _M_replace_categories(const std::locale::_Impl *, category);
        void _M_replace_category(const std::locale::_Impl *, const locale::id *const *);
        void _M_replace_facet(const std::locale::_Impl *, const locale::id *);
        void _M_install_facet(const locale::id *, const std::locale::facet *);
        template <typename _Facet> void _M_init_facet(_Facet *__facet) (CompoundStmt 0x9088700 </usr/include/c++/4.6/bits/locale_classes.h:564:7, col:49>
  (CallExpr 0x90886d8 <col:9, col:46> '<dependent type>'
    (MemberExpr 0x9088638 <col:9> '<bound member function type>' ->_M_install_facet 0x90878f0
      (CXXThisExpr 0x9088628 <col:9> 'class std::locale::_Impl *' this))
    (UnaryOperator 0x90886a8 <col:26, col:35> '<dependent type>' prefix '&'
      (DependentScopeDeclRefExpr 0x9088680 <col:27, col:35> '<dependent type>' lvalue))
    (DeclRefExpr 0x90886bc <col:39> '_Facet *' lvalue ParmVar 0x90879f0 '__facet' '_Facet *')))

;
        void _M_install_cache(const std::locale::facet *, size_t);
    };
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw();
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc);
    template <typename _CharT = wchar_t> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    }
template <typename _CharT = char> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    }
template <typename _CharT> class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate<_CharT>(size_t __refs = (ImplicitCastExpr 0x908a440 </usr/include/c++/4.6/bits/locale_classes.h:644:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x908a428 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x908a474 </usr/include/c++/4.6/bits/locale_classes.h:645:15> 'size_t':'unsigned int' lvalue ParmVar 0x9089000 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x908a568 </usr/include/c++/4.6/bits/locale_classes.h:645:44, col:60> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x908a558 <col:44> '__c_locale (*)(void)' <FunctionToPointerDecay>
    (DeclRefExpr 0x908a508 <col:44> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))
) (CompoundStmt 0x908a5d0 </usr/include/c++/4.6/bits/locale_classes.h:646:7, col:9>)


        collate<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x908a468 </usr/include/c++/4.6/bits/locale_classes.h:658:50> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x908a450 <col:50> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x908a5e0 </usr/include/c++/4.6/bits/locale_classes.h:659:15> 'size_t':'unsigned int' lvalue ParmVar 0x9089150 '__refs' 'size_t':'unsigned int')
), _M_c_locale_collate((CallExpr 0x908a6f8 </usr/include/c++/4.6/bits/locale_classes.h:659:44, col:68> '__c_locale':'struct __locale_struct *'
  (ImplicitCastExpr 0x908a6e8 <col:44> '__c_locale (*)(__c_locale &) throw()' <FunctionToPointerDecay>
    (DeclRefExpr 0x908a678 <col:44> '__c_locale (__c_locale &) throw()' lvalue CXXMethod 0x90847c0 '_S_clone_c_locale' '__c_locale (__c_locale &) throw()'))
  (DeclRefExpr 0x908a690 <col:62> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9089110 '__cloc' '__c_locale':'struct __locale_struct *'))
) (CompoundStmt 0x908a760 </usr/include/c++/4.6/bits/locale_classes.h:660:7, col:9>)


        int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x908a870 </usr/include/c++/4.6/bits/locale_classes.h:677:7, col:62>
  (ReturnStmt 0x908a860 <col:9, col:59>
    (CallExpr 0x908a830 <col:16, col:59> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x908a798 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x908a788 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x908a7cc <col:33> 'const _CharT *' lvalue ParmVar 0x9089290 '__lo1' 'const _CharT *')
      (DeclRefExpr 0x908a7e4 <col:40> 'const _CharT *' lvalue ParmVar 0x90892e0 '__hi1' 'const _CharT *')
      (DeclRefExpr 0x908a7fc <col:47> 'const _CharT *' lvalue ParmVar 0x9089330 '__lo2' 'const _CharT *')
      (DeclRefExpr 0x908a814 <col:54> 'const _CharT *' lvalue ParmVar 0x9089380 '__hi2' 'const _CharT *'))))


        string_type transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x908a938 </usr/include/c++/4.6/bits/locale_classes.h:695:7, col:48>
  (ReturnStmt 0x908a928 <col:9, col:45>
    (CallExpr 0x908a900 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x908a898 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x908a888 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x908a8cc <col:35> 'const _CharT *' lvalue ParmVar 0x90898f0 '__lo' 'const _CharT *')
      (DeclRefExpr 0x908a8e4 <col:41> 'const _CharT *' lvalue ParmVar 0x9089940 '__hi' 'const _CharT *'))))


        long hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x908aa00 </usr/include/c++/4.6/bits/locale_classes.h:709:7, col:43>
  (ReturnStmt 0x908a9f0 <col:9, col:40>
    (CallExpr 0x908a9c8 <col:16, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x908a960 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x908a950 <col:16> 'const collate<_CharT> *' this))
      (DeclRefExpr 0x908a994 <col:30> 'const _CharT *' lvalue ParmVar 0x9089a60 '__lo' 'const _CharT *')
      (DeclRefExpr 0x908a9ac <col:36> 'const _CharT *' lvalue ParmVar 0x9089ab0 '__hi' 'const _CharT *'))))


        int _M_compare(const _CharT *, const _CharT *) const throw();
        size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate<_CharT>() (CompoundStmt 0x908aa98 </usr/include/c++/4.6/bits/locale_classes.h:722:7, col:51>
  (CallExpr 0x908aa78 <col:9, col:48> '<dependent type>'
    (DeclRefExpr 0x908aa14 <col:9> 'void (__c_locale &)' lvalue CXXMethod 0x90848e0 '_S_destroy_c_locale' 'void (__c_locale &)')
    (MemberExpr 0x908aa58 <col:29> '__c_locale':'struct __locale_struct *' lvalue ->_M_c_locale_collate 0x9088f20
      (CXXThisExpr 0x908aa48 <col:29> 'collate<_CharT> *' this))))


        virtual int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const;
        virtual string_type do_transform(const _CharT *__lo, const _CharT *__hi) const;
        virtual long do_hash(const _CharT *__lo, const _CharT *__hi) const;
    };
    static locale::id id(CXXConstructExpr 0x908ace8 </usr/include/c++/4.6/bits/locale_classes.h:770:33> 'class locale::id':'class std::locale::id''void (void)')
;
    int _M_compare(const char *, const char *) const throw();
    size_t _M_transform(char *, const char *, size_t) const throw();
    int _M_compare(const wchar_t *, const wchar_t *) const throw();
    size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    template <typename _CharT = wchar_t> class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    }
template <typename _CharT = char> class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    }
template <typename _CharT> class collate_byname : public collate<_CharT> {
        class collate_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        collate_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x908f240 </usr/include/c++/4.6/bits/locale_classes.h:803:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x908f228 <col:55> 'int' 0))
) : collate<_CharT>((DeclRefExpr 0x908f2e0 </usr/include/c++/4.6/bits/locale_classes.h:804:25> 'size_t':'unsigned int' lvalue ParmVar 0x908f070 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x908f730 </usr/include/c++/4.6/bits/locale_classes.h:805:7, line:812:7>
  (IfStmt 0x908f710 <line:806:2, line:811:4>
    <<<NULL>>>
    (BinaryOperator 0x908f540 <line:806:6, line:807:43> '_Bool' '&&'
      (BinaryOperator 0x908f400 <line:806:6, col:36> '_Bool' '!='
        (CallExpr 0x908f3a0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x908f390 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x908f33c <col:6> 'int (const char *, const char *)' lvalue Function 0x9088240 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x908f3c8 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x908f354 <col:23> 'const char *' lvalue ParmVar 0x908f030 '__s' 'const char *'))
          (ImplicitCastExpr 0x908f3d8 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x908f36c <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x908f3e8 <col:36> 'int' 0))
      (BinaryOperator 0x908f528 <line:807:9, col:43> '_Bool' '!='
        (CallExpr 0x908f4c8 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x908f4b8 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x908f418 <col:9> 'int (const char *, const char *)' lvalue Function 0x9088240 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x908f4f0 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x908f430 <col:26> 'const char *' lvalue ParmVar 0x908f030 '__s' 'const char *'))
          (ImplicitCastExpr 0x908f500 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x908f490 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x908f510 <col:43> 'int' 0)))
    (CompoundStmt 0x908f6f8 <line:808:4, line:811:4>
      (CallExpr 0x908f608 <line:809:6, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x908f588 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x908f578 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x908f5d0 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x908f5c0 <col:32> 'collate_byname<_CharT> *' this)))
      (CallExpr 0x908f6d0 <line:810:6, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x908f638 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x908f628 <col:6> 'collate_byname<_CharT> *' this))
        (CXXDependentScopeMemberExpr 0x908f680 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x908f670 <col:31> 'collate_byname<_CharT> *' this))
        (DeclRefExpr 0x908f6b4 <col:58> 'const char *' lvalue ParmVar 0x908f030 '__s' 'const char *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~collate_byname<_CharT>() (CompoundStmt 0x908f748 </usr/include/c++/4.6/bits/locale_classes.h:816:25, col:27>)


    };
}
extern int __builtin_strcmp(const char *, const char *);
namespace std {
    template <typename _Facet> class locale::locale(const std::locale &__other, _Facet *__f) (CompoundStmt 0x908ffe8 </usr/include/c++/4.6/bits/locale_classes.tcc:45:5, line:57:5>
  (BinaryOperator 0x908fc00 <line:46:7, col:46> 'class std::locale::_Impl *' lvalue '='
    (MemberExpr 0x908fad8 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x90836d0
      (CXXThisExpr 0x908fac8 <col:7> 'class std::locale *' this))
    (CXXNewExpr 0x908fbc0 <col:17, col:46> 'class std::locale::_Impl *'
      (ImplicitCastExpr 0x908fb78 <col:27, col:36> 'const class std::locale::_Impl' lvalue <NoOp>
        (UnaryOperator 0x908fb40 <col:27, col:36> 'class std::locale::_Impl' lvalue prefix '*'
          (ImplicitCastExpr 0x908fb30 <col:28, col:36> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x908fb10 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
              (DeclRefExpr 0x908faf8 <col:28> 'const class std::locale' lvalue ParmVar 0x908f8c0 '__other' 'const class std::locale &')))))
      (ImplicitCastExpr 0x908fb88 <col:45> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x908fb58 <col:45> 'int' 1))))
  (IfStmt 0x908fd48 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:49:49>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x908fc18 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x908fd30 </usr/include/c++/4.6/bits/locale_classes.tcc:49:2, col:49>
      (CallExpr 0x908fd08 <col:4, col:46> '<dependent type>'
        (MemberExpr 0x908fc64 <col:4, col:13> '<bound member function type>' ->_M_install_facet 0x90878f0
          (ImplicitCastExpr 0x908fc58 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x908fc38 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x90836d0
              (CXXThisExpr 0x908fc28 <col:4> 'class std::locale *' this))))
        (UnaryOperator 0x908fcd8 <col:30, col:39> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x908fcb0 <col:31, col:39> '<dependent type>' lvalue))
        (DeclRefExpr 0x908fcec <col:43> '_Facet *' lvalue ParmVar 0x908f930 '__f' '_Facet *')))
    <<<NULL>>>)
  (IfStmt 0x908fe20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:54:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x908fd68 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x908fe08 </usr/include/c++/4.6/bits/locale_classes.tcc:51:2, line:54:2>
      (CXXMemberCallExpr 0x908fdd8 <line:52:4, col:33> 'void'
        (MemberExpr 0x908fdb4 <col:4, col:13> '<bound member function type>' ->_M_remove_reference 0x9086c30
          (ImplicitCastExpr 0x908fda8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x908fd88 <col:4> 'class std::locale::_Impl *' lvalue ->_M_impl 0x90836d0
              (CXXThisExpr 0x908fd78 <col:4> 'class std::locale *' this)))))
      (NullStmt 0x908fdf8 <line:53:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x908fef0 <line:55:7, col:36> 'void'
    (ImplicitCastExpr 0x908fee0 <col:17, col:36> 'void *' <NoOp>
      (ArraySubscriptExpr 0x908fec8 <col:17, col:36> 'char *' lvalue
        (ImplicitCastExpr 0x908feb8 <col:17, col:26> 'char **' <LValueToRValue>
          (MemberExpr 0x908fe7c <col:17, col:26> 'char **' lvalue ->_M_names 0x90866d0
            (ImplicitCastExpr 0x908fe70 <col:17> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x908fe50 <col:17> 'class std::locale::_Impl *' lvalue ->_M_impl 0x90836d0
                (CXXThisExpr 0x908fe40 <col:17> 'class std::locale *' this)))))
        (IntegerLiteral 0x908fea0 <col:35> 'int' 0))))
  (BinaryOperator 0x908ffd0 <line:56:7, col:30> 'char *' lvalue '='
    (ArraySubscriptExpr 0x908ff90 <col:7, col:26> 'char *' lvalue
      (ImplicitCastExpr 0x908ff80 <col:7, col:16> 'char **' <LValueToRValue>
        (MemberExpr 0x908ff44 <col:7, col:16> 'char **' lvalue ->_M_names 0x90866d0
          (ImplicitCastExpr 0x908ff38 <col:7> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x908ff18 <col:7> 'class std::locale::_Impl *' lvalue ->_M_impl 0x90836d0
              (CXXThisExpr 0x908ff08 <col:7> 'class std::locale *' this)))))
      (IntegerLiteral 0x908ff68 <col:25> 'int' 0))
    (ImplicitCastExpr 0x908ffc0 <col:30> 'char *' <NullToPointer>
      (IntegerLiteral 0x908ffa8 <col:30> 'int' 0))))

;
    template <typename _Facet> std::locale combine(const std::locale &__other) const (CompoundStmt 0x9090648 </usr/include/c++/4.6/bits/locale_classes.tcc:63:5, line:75:5>
  (DeclStmt 0x9090318 <line:64:7, col:44>
    0x90901e0 "std::locale::_Impl *__tmp =
      (CXXNewExpr 0x90902d8 <col:22, col:43> 'class std::locale::_Impl *'
        (ImplicitCastExpr 0x9090290 <col:32, col:33> 'const class std::locale::_Impl' lvalue <NoOp>
          (UnaryOperator 0x9090258 <col:32, col:33> 'class std::locale::_Impl' lvalue prefix '*'
            (ImplicitCastExpr 0x9090248 <col:33> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x9090228 <col:33> 'class std::locale::_Impl *const' lvalue ->_M_impl 0x90836d0
                (CXXThisExpr 0x9090218 <col:33> 'const class std::locale *' this)))))
        (ImplicitCastExpr 0x90902a0 <col:42> 'size_t':'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9090270 <col:42> 'int' 1)))")
  (IfStmt 0x9090460 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:68:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9090328 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9090448 </usr/include/c++/4.6/bits/locale_classes.tcc:66:2, line:68:2>
      (CallExpr 0x9090420 <line:67:4, col:56> '<dependent type>'
        (MemberExpr 0x909035c <col:4, col:11> '<bound member function type>' ->_M_replace_facet 0x9087760
          (ImplicitCastExpr 0x9090350 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9090338 <col:4> 'class std::locale::_Impl *' lvalue Var 0x90901e0 '__tmp' 'class std::locale::_Impl *')))
        (MemberExpr 0x9090394 <col:28, col:36> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
          (DeclRefExpr 0x909037c <col:28> 'const class std::locale' lvalue ParmVar 0x9090090 '__other' 'const class std::locale &'))
        (UnaryOperator 0x9090408 <col:45, col:54> '<dependent type>' prefix '&'
          (DependentScopeDeclRefExpr 0x90903e0 <col:46, col:54> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (IfStmt 0x9090520 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:73:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9090480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9090508 </usr/include/c++/4.6/bits/locale_classes.tcc:70:2, line:73:2>
      (CXXMemberCallExpr 0x90904d8 <line:71:4, col:31> 'void'
        (MemberExpr 0x90904b4 <col:4, col:11> '<bound member function type>' ->_M_remove_reference 0x9086c30
          (ImplicitCastExpr 0x90904a8 <col:4> 'class std::locale::_Impl *' <LValueToRValue>
            (DeclRefExpr 0x9090490 <col:4> 'class std::locale::_Impl *' lvalue Var 0x90901e0 '__tmp' 'class std::locale::_Impl *'))))
      (NullStmt 0x90904f8 <line:72:27>))
    <<<NULL>>>)
  (ReturnStmt 0x9090638 <line:74:7, col:26>
    (ExprWithCleanups 0x9090618 <col:14, col:26> 'class std::locale'
      (CXXTemporary 0x90905a0)
      (CXXConstructExpr 0x90905f0 <col:14, col:26> 'class std::locale''void (const class std::locale &) throw()' elidable
        (MaterializeTemporaryExpr 0x90905e0 <col:14, col:26> 'const class std::locale' lvalue
          (ImplicitCastExpr 0x90905d0 <col:14, col:26> 'const class std::locale' <NoOp>
            (CXXFunctionalCastExpr 0x90905b8 <col:14, col:26> 'class std::locale' functional cast to class std::locale <ConstructorConversion>
              (CXXBindTemporaryExpr 0x90905a8 <col:14, col:21> 'class std::locale' (CXXTemporary 0x90905a0)
                (CXXConstructExpr 0x9090570 <col:14, col:21> 'class std::locale''void (class std::locale::_Impl *) throw()'
                  (ImplicitCastExpr 0x9090560 <col:21> 'class std::locale::_Impl *' <LValueToRValue>
                    (DeclRefExpr 0x9090548 <col:21> 'class std::locale::_Impl *' lvalue Var 0x90901e0 '__tmp' 'class std::locale::_Impl *')))))))))))

;
    template <typename _CharT, typename _Traits, typename _Alloc> bool operator()(const basic_string<_CharT, _Traits, _Alloc> &__s1, const basic_string<_CharT, _Traits, _Alloc> &__s2) const (CompoundStmt 0x9091370 </usr/include/c++/4.6/bits/locale_classes.tcc:82:5, line:87:5>
  (DeclStmt 0x9090d50 <line:83:7, col:50>
    0x9090d20 "typedef std::collate<_CharT> __collate_type")
  (DeclStmt 0x9090eb0 <line:84:7, col:73>
    0x9090dc0 "const __collate_type &__collate =
      (CallExpr 0x9090e90 <col:41, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x9090e00 <col:41, col:65> '<dependent type>' lvalue (ADL) = '1' 0x90889e0)
        (UnaryOperator 0x9090e78 <col:67, col:68> 'const class std::locale' lvalue prefix '*'
          (CXXThisExpr 0x9090e68 <col:68> 'const class std::locale *' this)))")
  (ReturnStmt 0x9091360 <line:85:7, line:86:50>
    (ParenExpr 0x9091348 <line:85:14, line:86:50> '<dependent type>'
      (CXXOperatorCallExpr 0x9091320 <line:85:15, line:86:49> '<dependent type>'
        (UnresolvedLookupExpr 0x90912d8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x9091290 <line:85:15, line:86:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9090ed8 <line:85:15, col:25> '<dependent type>' lvalue
            (DeclRefExpr 0x9090ec0 <col:15> 'const __collate_type':'const collate<_CharT>' lvalue Var 0x9090dc0 '__collate' 'const __collate_type &'))
          (CallExpr 0x9090f60 <col:33, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9090f28 <col:33, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x9090f0c <col:33> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090900 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x90910a8 <col:46, col:72> '<dependent type>'
            (UnresolvedLookupExpr 0x9091060 <col:58, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x9090fd0 <col:46, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9090f98 <col:46, col:51> '<dependent type>' lvalue
                (DeclRefExpr 0x9090f7c <col:46> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090900 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9091040 <col:60, col:72> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9091008 <col:60, col:65> '<dependent type>' lvalue
                (DeclRefExpr 0x9090fec <col:60> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090900 '__s1' 'const basic_string<_CharT, _Traits, _Alloc> &'))))
          (CallExpr 0x9091120 <line:86:5, col:15> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90910e8 <col:5, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x90910cc <col:5> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090ab0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
          (CXXOperatorCallExpr 0x9091268 <col:18, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x9091220 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
            (CallExpr 0x9091190 <col:18, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9091158 <col:18, col:23> '<dependent type>' lvalue
                (DeclRefExpr 0x909113c <col:18> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090ab0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))
            (CallExpr 0x9091200 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90911c8 <col:32, col:37> '<dependent type>' lvalue
                (DeclRefExpr 0x90911ac <col:32> 'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9090ab0 '__s2' 'const basic_string<_CharT, _Traits, _Alloc> &')))))
        (IntegerLiteral 0x90912c0 <col:49> 'int' 0)))))

;
    template <typename _Facet = std::ctype<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::ctype<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_get<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::numpunct<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::collate<wchar_t>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet = std::num_put<char>> bool has_facet(const std::locale &__loc) throw()template <typename _Facet> bool has_facet(const std::locale &__loc) throw() (CompoundStmt 0x90918b0 </usr/include/c++/4.6/bits/locale_classes.tcc:93:5, line:102:5>
  (DeclStmt 0x90915d0 <line:94:7, col:44>
    0x90914f0 "const size_t __i =
      (CallExpr 0x90915b0 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9091578 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9091550 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x9091700 <line:95:7, col:64>
    0x9091650 "const locale::facet **__facets =
      (ImplicitCastExpr 0x90916f0 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x90916cc <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9086610
          (ImplicitCastExpr 0x90916c0 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x909169c <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
              (DeclRefExpr 0x9091684 <col:40> 'const class std::locale' lvalue ParmVar 0x9091400 '__loc' 'const class std::locale &')))))")
  (ReturnStmt 0x90918a0 <line:96:7, line:98:53>
    (ParenExpr 0x9091888 <line:96:14, line:98:53> '<dependent type>'
      (BinaryOperator 0x9091870 <line:96:15, line:98:52> '<dependent type>' '&&'
        (BinaryOperator 0x90917b0 <line:96:15, col:36> '_Bool' '<'
          (ImplicitCastExpr 0x9091790 <col:15> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9091710 <col:15> 'const size_t':'const unsigned int' lvalue Var 0x90914f0 '__i' 'const size_t':'const unsigned int'))
          (ImplicitCastExpr 0x90917a0 <col:21, col:36> 'size_t':'unsigned int' <LValueToRValue>
            (MemberExpr 0x909176c <col:21, col:36> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9086650
              (ImplicitCastExpr 0x9091760 <col:21, col:27> 'class std::locale::_Impl *' <LValueToRValue>
                (MemberExpr 0x9091740 <col:21, col:27> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
                  (DeclRefExpr 0x9091728 <col:21> 'const class std::locale' lvalue ParmVar 0x9091400 '__loc' 'const class std::locale &'))))))
        (CXXDynamicCastExpr 0x9091858 <line:98:11, col:52> 'const _Facet *' dynamic_cast<const _Facet *> <Dependent>
          (ArraySubscriptExpr 0x9091818 <col:39, col:51> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x90917f8 <col:39> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x90917c8 <col:39> 'const class locale::facet **' lvalue Var 0x9091650 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x9091808 <col:48> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x90917e0 <col:48> 'const size_t':'const unsigned int' lvalue Var 0x90914f0 '__i' 'const size_t':'const unsigned int'))))))))

;
    template <typename _Facet = std::ctype<char>> const std::ctype<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<wchar_t>> const std::num_get<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<char>> const std::collate<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<char>> const std::numpunct<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::ctype<wchar_t>> const std::ctype<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_get<char>> const std::num_get<char> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<wchar_t>> const std::num_put<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::numpunct<wchar_t>> const std::numpunct<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::collate<wchar_t>> const std::collate<wchar_t> &use_facet(const std::locale &__loc)template <typename _Facet = std::num_put<char>> const std::num_put<char> &use_facet(const std::locale &__loc)template <typename _Facet> const _Facet &use_facet(const std::locale &__loc) (CompoundStmt 0x8f0b1e0 </usr/include/c++/4.6/bits/locale_classes.tcc:107:5, line:117:5>
  (DeclStmt 0x9091b60 <line:108:7, col:44>
    0x9091a80 "const size_t __i =
      (CallExpr 0x9091b40 <col:26, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9091b08 <col:26, col:37> '<dependent type>' lvalue
          (DependentScopeDeclRefExpr 0x9091ae0 <col:26, col:34> '<dependent type>' lvalue)))")
  (DeclStmt 0x8f0aef8 <line:109:7, col:64>
    0x9091bb0 "const locale::facet **__facets =
      (ImplicitCastExpr 0x8f0aee8 <col:40, col:55> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x8f0aec8 <col:40, col:55> 'const class std::locale::facet **' lvalue ->_M_facets 0x9086610
          (ImplicitCastExpr 0x9091c20 <col:40, col:46> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x9091bfc <col:40, col:46> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
              (DeclRefExpr 0x9091be4 <col:40> 'const class std::locale' lvalue ParmVar 0x9091940 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x8f0b0f8 <line:110:7, line:111:26>
    <<<NULL>>>
    (BinaryOperator 0x8f0b060 <line:110:11, col:64> '_Bool' '||'
      (BinaryOperator 0x8f0afa8 <col:11, col:33> '_Bool' '>='
        (ImplicitCastExpr 0x8f0af88 <col:11> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x8f0af08 <col:11> 'const size_t':'const unsigned int' lvalue Var 0x9091a80 '__i' 'const size_t':'const unsigned int'))
        (ImplicitCastExpr 0x8f0af98 <col:18, col:33> 'size_t':'unsigned int' <LValueToRValue>
          (MemberExpr 0x8f0af64 <col:18, col:33> 'size_t':'unsigned int' lvalue ->_M_facets_size 0x9086650
            (ImplicitCastExpr 0x8f0af58 <col:18, col:24> 'class std::locale::_Impl *' <LValueToRValue>
              (MemberExpr 0x8f0af38 <col:18, col:24> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
                (DeclRefExpr 0x8f0af20 <col:18> 'const class std::locale' lvalue ParmVar 0x9091940 '__loc' 'const class std::locale &'))))))
      (UnaryOperator 0x8f0b048 <col:51, col:64> '_Bool' prefix '!'
        (ImplicitCastExpr 0x8f0b038 <col:52, col:64> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x8f0b028 <col:52, col:64> 'const class locale::facet *' <LValueToRValue>
            (ArraySubscriptExpr 0x8f0b010 <col:52, col:64> 'const class locale::facet *' lvalue
              (ImplicitCastExpr 0x8f0aff0 <col:52> 'const class locale::facet **' <LValueToRValue>
                (DeclRefExpr 0x8f0afc0 <col:52> 'const class locale::facet **' lvalue Var 0x9091bb0 '__facets' 'const class locale::facet **'))
              (ImplicitCastExpr 0x8f0b000 <col:61> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x8f0afd8 <col:61> 'const size_t':'const unsigned int' lvalue Var 0x9091a80 '__i' 'const size_t':'const unsigned int')))))))
    (CallExpr 0x8f0b0d8 <line:111:9, col:26> 'void'
      (ImplicitCastExpr 0x8f0b0c8 <col:9> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x8f0b0ac <col:9> 'void (void) __attribute__((noreturn))' lvalue Function 0x8e0ef90 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x8f0b1d0 <line:113:7, col:56>
    (CXXDynamicCastExpr 0x8f0b1b8 <col:14, col:56> 'const _Facet' lvalue dynamic_cast<const _Facet &> <Dependent>
      (UnaryOperator 0x8f0b190 <col:42, col:55> 'const class locale::facet':'const class std::locale::facet' lvalue prefix '*'
        (ImplicitCastExpr 0x8f0b180 <col:43, col:55> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x8f0b168 <col:43, col:55> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x8f0b148 <col:43> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x8f0b114 <col:43> 'const class locale::facet **' lvalue Var 0x9091bb0 '__facets' 'const class locale::facet **'))
            (ImplicitCastExpr 0x8f0b158 <col:52> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x8f0b12c <col:52> 'const size_t':'const unsigned int' lvalue Var 0x9091a80 '__i' 'const size_t':'const unsigned int'))))))))

;
    int _M_compare(const _CharT *, const _CharT *) const throw() (CompoundStmt 0x8f0b560 </usr/include/c++/4.6/bits/locale_classes.tcc:124:5, col:17>
  (ReturnStmt 0x8f0b550 <col:7, col:14>
    (IntegerLiteral 0x8f0b538 <col:14> 'int' 0)))


    size_t _M_transform(_CharT *, const _CharT *, size_t) const throw() (CompoundStmt 0x8f0b968 </usr/include/c++/4.6/bits/locale_classes.tcc:130:5, col:17>
  (ReturnStmt 0x8f0b958 <col:7, col:14>
    (ImplicitCastExpr 0x8f0b948 <col:14> 'size_t':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x8f0b930 <col:14> 'int' 0))))


    int do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *__lo2, const _CharT *__hi2) const (CompoundStmt 0x8f0cc80 </usr/include/c++/4.6/bits/locale_classes.tcc:137:5, line:169:5>
  (DeclStmt 0x8f0be08 <line:140:7, col:44>
    0x8f0bd80 "const string_type __one =
      (ParenListExpr 0x8f0bde8 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x8f0bdb4 <col:31> 'const _CharT *' lvalue ParmVar 0x8f0bb50 '__lo1' 'const _CharT *')
        (DeclRefExpr 0x8f0bdcc <col:38> 'const _CharT *' lvalue ParmVar 0x8f0bba0 '__hi1' 'const _CharT *'))")
  (DeclStmt 0x8f0bea8 <line:141:7, col:44>
    0x8f0be20 "const string_type __two =
      (ParenListExpr 0x8f0be88 <col:30, col:43> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x8f0be54 <col:31> 'const _CharT *' lvalue ParmVar 0x8f0bbf0 '__lo2' 'const _CharT *')
        (DeclRefExpr 0x8f0be6c <col:38> 'const _CharT *' lvalue ParmVar 0x8f0bc40 '__hi2' 'const _CharT *'))")
  (DeclStmt 0x8f0bf78 <line:143:7, col:40>
    0x8f0bed0 "const _CharT *__p =
      (CallExpr 0x8f0bf58 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8f0bf20 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x8f0bf04 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0bd80 '__one' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x8f0c128 <line:144:7, col:59>
    0x8f0bfa0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x8f0c100 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x8f0c0b8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x8f0c028 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0bff0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0bfd4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0bd80 '__one' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x8f0c098 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0c060 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0c044 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0bd80 '__one' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x8f0c1f8 <line:145:7, col:40>
    0x8f0c150 "const _CharT *__q =
      (CallExpr 0x8f0c1d8 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8f0c1a0 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x8f0c184 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0be20 '__two' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x8f0c3a8 <line:146:7, col:59>
    0x8f0c220 "const _CharT *__qend =
      (CXXOperatorCallExpr 0x8f0c380 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x8f0c338 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x8f0c2a8 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0c270 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0c254 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0be20 '__two' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x8f0c318 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0c2e0 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0c2c4 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0be20 '__two' 'const string_type':'const basic_string<_CharT>'))))")
  (ForStmt 0x8f0cc58 <line:151:7, line:168:2>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    <<<NULL>>>
    (CompoundStmt 0x8f0cc28 <line:152:2, line:168:2>
      (DeclStmt 0x8f0c490 <line:153:4, col:42>
        0x8f0c3d0 "const int __res =
          (CallExpr 0x8f0c468 <col:22, col:41> '<dependent type>'
            (MemberExpr 0x8f0c418 <col:22> '<bound member function type>' ->_M_compare 0x8f0b4a0
              (CXXThisExpr 0x8f0c408 <col:22> 'const collate<_CharT> *' this))
            (DeclRefExpr 0x8f0c438 <col:33> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *')
            (DeclRefExpr 0x8f0c450 <col:38> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *'))")
      (IfStmt 0x8f0c510 <line:154:4, line:155:13>
        <<<NULL>>>
        (ImplicitCastExpr 0x8f0c4c8 <line:154:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x8f0c4b8 <col:8> 'int' <LValueToRValue>
            (DeclRefExpr 0x8f0c4a0 <col:8> 'const int' lvalue Var 0x8f0c3d0 '__res' 'const int')))
        (ReturnStmt 0x8f0c500 <line:155:6, col:13>
          (ImplicitCastExpr 0x8f0c4f0 <col:13> 'int' <LValueToRValue>
            (DeclRefExpr 0x8f0c4d4 <col:13> 'const int' lvalue Var 0x8f0c3d0 '__res' 'const int')))
        <<<NULL>>>)
      (CompoundAssignOperator 0x8f0c660 <line:157:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x8f0c52c <col:4> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *')
        (CallExpr 0x8f0c640 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0c5f0 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x8f0c624 <col:39> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *')))
      (CompoundAssignOperator 0x8f0c7b0 <line:158:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x8f0c680 <col:4> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *')
        (CallExpr 0x8f0c790 <col:11, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0c740 <col:11, col:32> '<dependent type>' lvalue)
          (DeclRefExpr 0x8f0c774 <col:39> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *')))
      (IfStmt 0x8f0cb78 <line:159:4, line:164:13>
        <<<NULL>>>
        (BinaryOperator 0x8f0c930 <line:159:8, col:32> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x8f0c858 <col:8, col:15> '<dependent type>'
            (UnresolvedLookupExpr 0x8f0c800 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
            (DeclRefExpr 0x8f0c7d0 <col:8> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *')
            (DeclRefExpr 0x8f0c7e8 <col:15> 'const _CharT *' lvalue Var 0x8f0bfa0 '__pend' 'const _CharT *'))
          (CXXOperatorCallExpr 0x8f0c908 <col:25, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x8f0c8b0 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
            (DeclRefExpr 0x8f0c87c <col:25> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *')
            (DeclRefExpr 0x8f0c894 <col:32> 'const _CharT *' lvalue Var 0x8f0c220 '__qend' 'const _CharT *')))
        (ReturnStmt 0x8f0c960 <line:160:6, col:13>
          (IntegerLiteral 0x8f0c948 <col:13> 'int' 0))
        (IfStmt 0x8f0cb58 <line:161:9, line:164:13>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x8f0c9f8 <line:161:13, col:20> '<dependent type>'
            (UnresolvedLookupExpr 0x8f0c9a0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
            (DeclRefExpr 0x8f0c970 <col:13> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *')
            (DeclRefExpr 0x8f0c988 <col:20> 'const _CharT *' lvalue Var 0x8f0bfa0 '__pend' 'const _CharT *'))
          (ReturnStmt 0x8f0ca50 <line:162:6, col:14>
            (UnaryOperator 0x8f0ca38 <col:13, col:14> 'int' prefix '-'
              (IntegerLiteral 0x8f0ca20 <col:14> 'int' 1)))
          (IfStmt 0x8f0cb38 <line:163:9, line:164:13>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x8f0cae8 <line:163:13, col:20> '<dependent type>'
              (UnresolvedLookupExpr 0x8f0ca90 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
              (DeclRefExpr 0x8f0ca60 <col:13> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *')
              (DeclRefExpr 0x8f0ca78 <col:20> 'const _CharT *' lvalue Var 0x8f0c220 '__qend' 'const _CharT *'))
            (ReturnStmt 0x8f0cb28 <line:164:6, col:13>
              (IntegerLiteral 0x8f0cb10 <col:13> 'int' 1))
            <<<NULL>>>)))
      (UnaryOperator 0x8f0cbc8 <line:166:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x8f0cb94 <col:4> 'const _CharT *' lvalue Var 0x8f0bed0 '__p' 'const _CharT *'))
      (UnaryOperator 0x8f0cc10 <line:167:4, col:7> '<dependent type>' postfix '++'
        (DeclRefExpr 0x8f0cbdc <col:4> 'const _CharT *' lvalue Var 0x8f0c150 '__q' 'const _CharT *')))))


    typename collate<_CharT>::string_type do_transform(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x8f0e080 </usr/include/c++/4.6/bits/locale_classes.tcc:175:5, line:225:5>
  (DeclStmt 0x8f0d208 <line:176:7, col:24>
    0x8f0d1d0 "string_type __ret")
  (DeclStmt 0x8f0d2a8 <line:179:7, col:42>
    0x8f0d220 "const string_type __str =
      (ParenListExpr 0x8f0d288 <col:30, col:41> 'const string_type':'const basic_string<_CharT>'
        (DeclRefExpr 0x8f0d254 <col:31> 'const _CharT *' lvalue ParmVar 0x8f0cf80 '__lo' 'const _CharT *')
        (DeclRefExpr 0x8f0d26c <col:37> 'const _CharT *' lvalue ParmVar 0x8f0cfd0 '__hi' 'const _CharT *'))")
  (DeclStmt 0x8f0d378 <line:181:7, col:40>
    0x8f0d2d0 "const _CharT *__p =
      (CallExpr 0x8f0d358 <col:27, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8f0d320 <col:27, col:33> '<dependent type>' lvalue
          (DeclRefExpr 0x8f0d304 <col:27> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0d220 '__str' 'const string_type':'const basic_string<_CharT>')))")
  (DeclStmt 0x8f0d528 <line:182:7, col:59>
    0x8f0d3a0 "const _CharT *__pend =
      (CXXOperatorCallExpr 0x8f0d500 <col:30, col:58> '<dependent type>'
        (UnresolvedLookupExpr 0x8f0d4b8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x8f0d428 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0d3f0 <col:30, col:36> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0d3d4 <col:30> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0d220 '__str' 'const string_type':'const basic_string<_CharT>')))
        (CallExpr 0x8f0d498 <col:45, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8f0d460 <col:45, col:51> '<dependent type>' lvalue
            (DeclRefExpr 0x8f0d444 <col:45> 'const string_type':'const basic_string<_CharT>' lvalue Var 0x8f0d220 '__str' 'const string_type':'const basic_string<_CharT>'))))")
  (DeclStmt 0x8f0d650 <line:184:7, col:39>
    0x8f0d540 "size_t __len =
      (BinaryOperator 0x8f0d638 <col:22, col:38> '<dependent type>' '*'
        (ParenExpr 0x8f0d608 <col:22, col:34> '<dependent type>'
          (CXXOperatorCallExpr 0x8f0d5e0 <col:23, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x8f0d5a8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x8f0d574 <col:23> 'const _CharT *' lvalue ParmVar 0x8f0cfd0 '__hi' 'const _CharT *')
            (DeclRefExpr 0x8f0d58c <col:30> 'const _CharT *' lvalue ParmVar 0x8f0cf80 '__lo' 'const _CharT *')))
        (IntegerLiteral 0x8f0d620 <col:38> 'int' 2))")
  (DeclStmt 0x8f0d728 <line:186:7, col:38>
    0x8f0d690 "_CharT *__c =
      (CXXNewExpr 0x8f0d6e8 <col:21, col:25> '_CharT *'
        (DeclRefExpr 0x8f0d6c4 <col:32> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int'))")
  (IfStmt 0x8f0df80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_classes.tcc:215:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x8f0d738 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x8f0df68 </usr/include/c++/4.6/bits/locale_classes.tcc:189:2, line:215:2>
      (ForStmt 0x8f0df40 <line:193:4, line:214:6>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        <<<NULL>>>
        (CompoundStmt 0x8f0df10 <line:194:6, line:214:6>
          (DeclStmt 0x8f0d828 <line:196:8, col:52>
            0x8f0d750 "size_t __res =
              (CallExpr 0x8f0d800 <col:23, col:51> '<dependent type>'
                (MemberExpr 0x8f0d798 <col:23> '<bound member function type>' ->_M_transform 0x8f0b890
                  (CXXThisExpr 0x8f0d788 <col:23> 'const collate<_CharT> *' this))
                (DeclRefExpr 0x8f0d7b8 <col:36> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *')
                (DeclRefExpr 0x8f0d7d0 <col:41> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *')
                (DeclRefExpr 0x8f0d7e8 <col:46> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int'))")
          (IfStmt 0x8f0db48 <line:199:8, line:205:3>
            <<<NULL>>>
            (BinaryOperator 0x8f0d888 <line:199:12, col:21> '_Bool' '>='
              (ImplicitCastExpr 0x8f0d868 <col:12> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x8f0d838 <col:12> 'size_t':'unsigned int' lvalue Var 0x8f0d750 '__res' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x8f0d878 <col:21> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x8f0d850 <col:21> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int')))
            (CompoundStmt 0x8f0db28 <line:200:3, line:205:3>
              (BinaryOperator 0x8f0d920 <line:201:5, col:21> 'size_t':'unsigned int' lvalue '='
                (DeclRefExpr 0x8f0d8a0 <col:5> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int')
                (BinaryOperator 0x8f0d908 <col:13, col:21> 'unsigned int' '+'
                  (ImplicitCastExpr 0x8f0d8e8 <col:13> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x8f0d8b8 <col:13> 'size_t':'unsigned int' lvalue Var 0x8f0d750 '__res' 'size_t':'unsigned int'))
                  (ImplicitCastExpr 0x8f0d8f8 <col:21> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x8f0d8d0 <col:21> 'int' 1))))
              (BinaryOperator 0x8f0d9b0 <line:202:5, col:26> '<dependent type>' ','
                (CXXDeleteExpr 0x8f0d950 <col:5, col:15> 'void'
                  (DeclRefExpr 0x8f0d938 <col:15> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *'))
                (BinaryOperator 0x8f0d998 <col:20, col:26> '<dependent type>' '='
                  (DeclRefExpr 0x8f0d968 <col:20> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *')
                  (IntegerLiteral 0x8f0d980 <col:26> 'int' 0)))
              (BinaryOperator 0x8f0da40 <line:203:5, col:15> '<dependent type>' '='
                (DeclRefExpr 0x8f0d9c8 <col:5> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *')
                (CXXNewExpr 0x8f0da00 <col:11, col:15> '_CharT *'
                  (DeclRefExpr 0x8f0d9e0 <col:22> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int')))
              (BinaryOperator 0x8f0db10 <line:204:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x8f0da58 <col:5> 'size_t':'unsigned int' lvalue Var 0x8f0d750 '__res' 'size_t':'unsigned int')
                (CallExpr 0x8f0dae8 <col:13, col:41> '<dependent type>'
                  (MemberExpr 0x8f0da80 <col:13> '<bound member function type>' ->_M_transform 0x8f0b890
                    (CXXThisExpr 0x8f0da70 <col:13> 'const collate<_CharT> *' this))
                  (DeclRefExpr 0x8f0daa0 <col:26> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *')
                  (DeclRefExpr 0x8f0dab8 <col:31> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *')
                  (DeclRefExpr 0x8f0dad0 <col:36> 'size_t':'unsigned int' lvalue Var 0x8f0d540 '__len' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (CallExpr 0x8f0dbe8 <line:207:8, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8f0db80 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8f0db64 <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x8f0d1d0 '__ret' 'string_type':'basic_string<_CharT>'))
            (DeclRefExpr 0x8f0dbb4 <col:21> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *')
            (DeclRefExpr 0x8f0dbcc <col:26> 'size_t':'unsigned int' lvalue Var 0x8f0d750 '__res' 'size_t':'unsigned int'))
          (CompoundAssignOperator 0x8f0dd40 <line:208:8, col:46> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x8f0dc0c <col:8> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *')
            (CallExpr 0x8f0dd20 <col:15, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8f0dcd0 <col:15, col:36> '<dependent type>' lvalue)
              (DeclRefExpr 0x8f0dd04 <col:43> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *')))
          (IfStmt 0x8f0de18 <line:209:8, line:210:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x8f0dde8 <line:209:12, col:19> '<dependent type>'
              (UnresolvedLookupExpr 0x8f0dd90 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
              (DeclRefExpr 0x8f0dd60 <col:12> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *')
              (DeclRefExpr 0x8f0dd78 <col:19> 'const _CharT *' lvalue Var 0x8f0d3a0 '__pend' 'const _CharT *'))
            (BreakStmt 0x8f0de10 <line:210:3>)
            <<<NULL>>>)
          (UnaryOperator 0x8f0de68 <line:212:8, col:11> '<dependent type>' postfix '++'
            (DeclRefExpr 0x8f0de34 <col:8> 'const _CharT *' lvalue Var 0x8f0d2d0 '__p' 'const _CharT *'))
          (CallExpr 0x8f0def0 <line:213:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8f0de98 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x8f0de7c <col:8> 'string_type':'basic_string<_CharT>' lvalue Var 0x8f0d1d0 '__ret' 'string_type':'basic_string<_CharT>'))
            (CXXUnresolvedConstructExpr 0x8f0ded8 <col:24, col:31> '_CharT')))))
    <<<NULL>>>)
  (IfStmt 0x8f0e008 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_classes.tcc:220:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x8f0dfa0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x8f0dff0 </usr/include/c++/4.6/bits/locale_classes.tcc:217:2, line:220:2>
      (CXXDeleteExpr 0x8f0dfc8 <line:218:4, col:14> 'void'
        (DeclRefExpr 0x8f0dfb0 <col:14> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *'))
      (NullStmt 0x8f0dfe0 <line:219:27>))
    <<<NULL>>>)
  (CXXDeleteExpr 0x8f0e040 <line:222:7, col:17> 'void'
    (DeclRefExpr 0x8f0e024 <col:17> '_CharT *' lvalue Var 0x8f0d690 '__c' '_CharT *'))
  (ReturnStmt 0x8f0e070 <line:224:7, col:14>
    (DeclRefExpr 0x8f0e058 <col:14> 'string_type':'basic_string<_CharT>' lvalue Var 0x8f0d1d0 '__ret' 'string_type':'basic_string<_CharT>')))


    long do_hash(const _CharT *__lo, const _CharT *__hi) const (CompoundStmt 0x90a3200 </usr/include/c++/4.6/bits/locale_classes.tcc:231:5, line:239:5>
  (DeclStmt 0x8f0e470 <line:232:7, col:30>
    0x8f0e410 "unsigned long __val =
      (ImplicitCastExpr 0x8f0e460 <col:29> 'unsigned long' <IntegralCast>
        (IntegerLiteral 0x8f0e448 <col:29> 'int' 0))")
  (ForStmt 0x90a3168 <line:233:7, line:237:19>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x8f0e4f8 <line:233:14, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x8f0e4b0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x8f0e480 <col:14> 'const _CharT *' lvalue ParmVar 0x8f0e290 '__lo' 'const _CharT *')
      (DeclRefExpr 0x8f0e498 <col:21> 'const _CharT *' lvalue ParmVar 0x8f0e2e0 '__hi' 'const _CharT *'))
    (UnaryOperator 0x8f0e538 <col:27, col:29> '<dependent type>' prefix '++'
      (DeclRefExpr 0x8f0e51c <col:29> 'const _CharT *' lvalue ParmVar 0x8f0e290 '__lo' 'const _CharT *'))
    (BinaryOperator 0x90a3150 <line:234:2, line:237:19> '<dependent type>' '='
      (DeclRefExpr 0x8f0e54c <line:234:2> 'unsigned long' lvalue Var 0x8f0e410 '__val' 'unsigned long')
      (CXXOperatorCallExpr 0x90a3128 <line:235:4, line:237:19> '<dependent type>'
        (UnresolvedLookupExpr 0x90a30e0 <line:235:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (UnaryOperator 0x8f0e580 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x8f0e564 <col:5> 'const _CharT *' lvalue ParmVar 0x8f0e290 '__lo' 'const _CharT *'))
        (ParenExpr 0x90a30c8 <col:12, line:237:19> 'unsigned long'
          (BinaryOperator 0x90a30b0 <line:235:13, line:237:18> 'unsigned long' '|'
            (ParenExpr 0x8f0e5f0 <line:235:13, col:24> 'unsigned long'
              (BinaryOperator 0x8f0e5d8 <col:14, col:23> 'unsigned long' '<<'
                (ImplicitCastExpr 0x8f0e5c8 <col:14> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x8f0e594 <col:14> 'unsigned long' lvalue Var 0x8f0e410 '__val' 'unsigned long'))
                (IntegerLiteral 0x8f0e5b0 <col:23> 'int' 7)))
            (ParenExpr 0x90a3098 <line:236:8, line:237:18> 'unsigned long'
              (BinaryOperator 0x90a3080 <line:236:9, line:237:17> 'unsigned long' '>>'
                (ImplicitCastExpr 0x90a3038 <line:236:9> 'unsigned long' <LValueToRValue>
                  (DeclRefExpr 0x8f0e604 <col:9> 'unsigned long' lvalue Var 0x8f0e410 '__val' 'unsigned long'))
                (ParenExpr 0x90a3020 <col:18, line:237:17> 'int'
                  (BinaryOperator 0x90a3008 <line:236:19, line:237:16> 'int' '-'
                    (ImplicitCastExpr 0x90a2ff8 <line:236:19, line:237:5> 'int' <LValueToRValue>
                      (DeclRefExpr 0x90a2fbc <line:236:19, line:237:5> 'const int' lvalue Var 0x90a2db0 '__digits' 'const int'))
                    (IntegerLiteral 0x90a2fe0 <col:16> 'int' 7))))))))))
  (ReturnStmt 0x90a31f0 <line:238:7, col:37>
    (CXXStaticCastExpr 0x90a31d8 <col:14, col:37> 'long' static_cast<long> <NoOp>
      (ImplicitCastExpr 0x90a31c8 <col:32> 'long' <IntegralCast>
        (ImplicitCastExpr 0x90a31b8 <col:32> 'unsigned long' <LValueToRValue>
          (DeclRefExpr 0x90a318c <col:32> 'unsigned long' lvalue Var 0x8f0e410 '__val' 'unsigned long'))))))


    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        string_type transform(const char *__lo, const char *__hi) const;
        long hash(const char *__lo, const char *__hi) const;
        int _M_compare(const char *, const char *) const throw();
        size_t _M_transform(char *, const char *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const char *__lo1, const char *__hi1, const char *__lo2, const char *__hi2) const;
        virtual string_type do_transform(const char *__lo, const char *__hi) const;
        virtual long do_hash(const char *__lo, const char *__hi) const;
        inline std::collate<char> &operator=(const std::collate<char> &);
    };
    class collate_byname : public collate<char> {
        class collate_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<char> &operator=(const std::collate_byname<char> &);
    };
    class collate : public locale::facet {
        class collate;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
    protected:
    protected:
        __c_locale _M_c_locale_collate;
    public:
    public:
        static locale::id id;
        collate(size_t __refs);
        collate(__c_locale __cloc, size_t __refs);
        int compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        string_type transform(const wchar_t *__lo, const wchar_t *__hi) const;
        long hash(const wchar_t *__lo, const wchar_t *__hi) const;
        int _M_compare(const wchar_t *, const wchar_t *) const throw();
        size_t _M_transform(wchar_t *, const wchar_t *, size_t) const throw();
    protected:
    protected:
        virtual void ~collate();
        virtual int do_compare(const wchar_t *__lo1, const wchar_t *__hi1, const wchar_t *__lo2, const wchar_t *__hi2) const;
        virtual string_type do_transform(const wchar_t *__lo, const wchar_t *__hi) const;
        virtual long do_hash(const wchar_t *__lo, const wchar_t *__hi) const;
        inline std::collate<wchar_t> &operator=(const std::collate<wchar_t> &);
    };
    class collate_byname : public collate<wchar_t> {
        class collate_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        collate_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~collate_byname();
        inline std::collate_byname<wchar_t> &operator=(const std::collate_byname<wchar_t> &);
    };
}
namespace std {
    enum _Ios_Fmtflags {
        _S_boolalpha = (ImplicitCastExpr 0x90a5b88 </usr/include/c++/4.6/bits/ios_base.h:54:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a51d0 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x90a51a0 <col:23> 'long' 1)
    (IntegerLiteral 0x90a51b8 <col:29> 'int' 0)))
,
        _S_dec = (ImplicitCastExpr 0x90a5b98 </usr/include/c++/4.6/bits/ios_base.h:55:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5258 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90a5228 <col:18> 'long' 1)
    (IntegerLiteral 0x90a5240 <col:24> 'int' 1)))
,
        _S_fixed = (ImplicitCastExpr 0x90a5ba8 </usr/include/c++/4.6/bits/ios_base.h:56:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a52d8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x90a52a8 <col:20> 'long' 1)
    (IntegerLiteral 0x90a52c0 <col:26> 'int' 2)))
,
        _S_hex = (ImplicitCastExpr 0x90a5bb8 </usr/include/c++/4.6/bits/ios_base.h:57:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5358 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90a5328 <col:18> 'long' 1)
    (IntegerLiteral 0x90a5340 <col:24> 'int' 3)))
,
        _S_internal = (ImplicitCastExpr 0x90a5bc8 </usr/include/c++/4.6/bits/ios_base.h:58:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a53d8 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x90a53a8 <col:22> 'long' 1)
    (IntegerLiteral 0x90a53c0 <col:28> 'int' 4)))
,
        _S_left = (ImplicitCastExpr 0x90a5bd8 </usr/include/c++/4.6/bits/ios_base.h:59:19, col:25> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5458 <col:19, col:25> 'long' '<<'
    (IntegerLiteral 0x90a5428 <col:19> 'long' 1)
    (IntegerLiteral 0x90a5440 <col:25> 'int' 5)))
,
        _S_oct = (ImplicitCastExpr 0x90a5be8 </usr/include/c++/4.6/bits/ios_base.h:60:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a54d8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90a54a8 <col:18> 'long' 1)
    (IntegerLiteral 0x90a54c0 <col:24> 'int' 6)))
,
        _S_right = (ImplicitCastExpr 0x90a5bf8 </usr/include/c++/4.6/bits/ios_base.h:61:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5558 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x90a5528 <col:20> 'long' 1)
    (IntegerLiteral 0x90a5540 <col:26> 'int' 7)))
,
        _S_scientific = (ImplicitCastExpr 0x90a5c08 </usr/include/c++/4.6/bits/ios_base.h:62:24, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a55d8 <col:24, col:30> 'long' '<<'
    (IntegerLiteral 0x90a55a8 <col:24> 'long' 1)
    (IntegerLiteral 0x90a55c0 <col:30> 'int' 8)))
,
        _S_showbase = (ImplicitCastExpr 0x90a5c18 </usr/include/c++/4.6/bits/ios_base.h:63:22, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5658 <col:22, col:28> 'long' '<<'
    (IntegerLiteral 0x90a5628 <col:22> 'long' 1)
    (IntegerLiteral 0x90a5640 <col:28> 'int' 9)))
,
        _S_showpoint = (ImplicitCastExpr 0x90a5c28 </usr/include/c++/4.6/bits/ios_base.h:64:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a56d8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x90a56a8 <col:23> 'long' 1)
    (IntegerLiteral 0x90a56c0 <col:29> 'int' 10)))
,
        _S_showpos = (ImplicitCastExpr 0x90a5c38 </usr/include/c++/4.6/bits/ios_base.h:65:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5758 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x90a5728 <col:21> 'long' 1)
    (IntegerLiteral 0x90a5740 <col:27> 'int' 11)))
,
        _S_skipws = (ImplicitCastExpr 0x90a5c48 </usr/include/c++/4.6/bits/ios_base.h:66:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a57d8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x90a57a8 <col:20> 'long' 1)
    (IntegerLiteral 0x90a57c0 <col:26> 'int' 12)))
,
        _S_unitbuf = (ImplicitCastExpr 0x90a5c58 </usr/include/c++/4.6/bits/ios_base.h:67:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5858 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x90a5828 <col:21> 'long' 1)
    (IntegerLiteral 0x90a5840 <col:27> 'int' 13)))
,
        _S_uppercase = (ImplicitCastExpr 0x90a5c68 </usr/include/c++/4.6/bits/ios_base.h:68:23, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a58d8 <col:23, col:29> 'long' '<<'
    (IntegerLiteral 0x90a58a8 <col:23> 'long' 1)
    (IntegerLiteral 0x90a58c0 <col:29> 'int' 14)))
,
        _S_adjustfield = (ImplicitCastExpr 0x90a5c78 </usr/include/c++/4.6/bits/ios_base.h:69:25, col:46> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5988 <col:25, col:46> 'long' '|'
    (BinaryOperator 0x90a5958 <col:25, col:35> 'long' '|'
      (DeclRefExpr 0x90a5924 <col:25> 'long' EnumConstant 0x90a5470 '_S_left' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x90a593c <col:35> 'long' EnumConstant 0x90a5570 '_S_right' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x90a5970 <col:46> 'long' EnumConstant 0x90a53f0 '_S_internal' 'enum std::_Ios_Fmtflags')))
,
        _S_basefield = (ImplicitCastExpr 0x90a5c88 </usr/include/c++/4.6/bits/ios_base.h:70:23, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5a38 <col:23, col:41> 'long' '|'
    (BinaryOperator 0x90a5a08 <col:23, col:32> 'long' '|'
      (DeclRefExpr 0x90a59d4 <col:23> 'long' EnumConstant 0x90a5270 '_S_dec' 'enum std::_Ios_Fmtflags')
      (DeclRefExpr 0x90a59ec <col:32> 'long' EnumConstant 0x90a54f0 '_S_oct' 'enum std::_Ios_Fmtflags'))
    (DeclRefExpr 0x90a5a20 <col:41> 'long' EnumConstant 0x90a5370 '_S_hex' 'enum std::_Ios_Fmtflags')))
,
        _S_floatfield = (ImplicitCastExpr 0x90a5c98 </usr/include/c++/4.6/bits/ios_base.h:71:24, col:40> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5ab8 <col:24, col:40> 'long' '|'
    (DeclRefExpr 0x90a5a84 <col:24> 'long' EnumConstant 0x90a55f0 '_S_scientific' 'enum std::_Ios_Fmtflags')
    (DeclRefExpr 0x90a5a9c <col:40> 'long' EnumConstant 0x90a52f0 '_S_fixed' 'enum std::_Ios_Fmtflags')))
,
        _S_ios_fmtflags_end = (ImplicitCastExpr 0x90a5ca8 </usr/include/c++/4.6/bits/ios_base.h:72:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90a5b38 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x90a5b08 <col:29> 'long' 1)
    (IntegerLiteral 0x90a5b20 <col:35> 'int' 16)))

    };
    inline std::_Ios_Fmtflags operator&(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90a5ef0 </usr/include/c++/4.6/bits/ios_base.h:77:3, col:74>
  (ReturnStmt 0x90a5ee0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90a5ec8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x90a5eb0 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x90a5e38 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a5e28 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a5e18 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a5df0 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a5cc0 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x90a5e98 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a5e88 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a5e78 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a5e50 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a5d00 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator|(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90a6120 </usr/include/c++/4.6/bits/ios_base.h:81:3, col:74>
  (ReturnStmt 0x90a6110 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90a60f8 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x90a60e0 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x90a6068 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a6058 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a6048 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a6020 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a5f10 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x90a60c8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a60b8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a60a8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a6080 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a5f50 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator^(std::_Ios_Fmtflags __a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90a6350 </usr/include/c++/4.6/bits/ios_base.h:85:3, col:74>
  (ReturnStmt 0x90a6340 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90a6328 <col:12, col:71> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (BinaryOperator 0x90a6310 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x90a6298 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a6288 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a6278 <col:43> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a6250 <col:43> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6140 '__a' 'enum std::_Ios_Fmtflags'))))
        (CXXStaticCastExpr 0x90a62f8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a62e8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a62d8 <col:67> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a62b0 <col:67> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6180 '__b' 'enum std::_Ios_Fmtflags'))))))))


    inline std::_Ios_Fmtflags operator~(std::_Ios_Fmtflags __a) (CompoundStmt 0x90a6500 </usr/include/c++/4.6/bits/ios_base.h:89:3, col:51>
  (ReturnStmt 0x90a64f0 <col:5, col:48>
    (CXXFunctionalCastExpr 0x90a64d8 <col:12, col:48> 'enum std::_Ios_Fmtflags' functional cast to enum std::_Ios_Fmtflags <IntegralCast>
      (UnaryOperator 0x90a64c0 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x90a64a8 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90a6498 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90a6488 <col:44> 'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x90a6460 <col:44> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6370 '__a' 'enum std::_Ios_Fmtflags'))))))))


    inline const std::_Ios_Fmtflags &operator|=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90b3160 </usr/include/c++/4.6/bits/ios_base.h:93:3, col:29>
  (ReturnStmt 0x90b3150 <col:5, col:24>
    (ImplicitCastExpr 0x90b3140 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x90b3128 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x90a6698 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6550 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x90a6748 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x90a6738 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90a6700 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5fb0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x90a66e0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90a66b0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6550 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x90a66f0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90a66c8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90a6590 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator&=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90b3388 </usr/include/c++/4.6/bits/ios_base.h:97:3, col:29>
  (ReturnStmt 0x90b3378 <col:5, col:24>
    (ImplicitCastExpr 0x90b3368 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x90b3350 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x90b3298 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b3190 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x90b3328 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x90b3318 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b3300 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x90b32e0 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90b32b0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b3190 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x90b32f0 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90b32c8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b31d0 '__b' 'enum std::_Ios_Fmtflags')))))))


    inline const std::_Ios_Fmtflags &operator^=(std::_Ios_Fmtflags &__a, std::_Ios_Fmtflags __b) (CompoundStmt 0x90b35a8 </usr/include/c++/4.6/bits/ios_base.h:101:3, col:29>
  (ReturnStmt 0x90b3598 <col:5, col:24>
    (ImplicitCastExpr 0x90b3588 <col:12, col:24> 'const enum std::_Ios_Fmtflags' lvalue <NoOp>
      (BinaryOperator 0x90b3570 <col:12, col:24> 'enum std::_Ios_Fmtflags' lvalue '='
        (DeclRefExpr 0x90b34b8 <col:12> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b33b0 '__a' 'enum std::_Ios_Fmtflags &')
        (CXXOperatorCallExpr 0x90b3548 <col:18, col:24> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x90b3538 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b3520 <col:22, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a61e0 'operator^' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x90b3500 <col:18> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90b34d0 <col:18> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b33b0 '__a' 'enum std::_Ios_Fmtflags &'))
          (ImplicitCastExpr 0x90b3510 <col:24> 'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x90b34e8 <col:24> 'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90b33f0 '__b' 'enum std::_Ios_Fmtflags')))))))


    enum _Ios_Openmode {
        _S_app = (ImplicitCastExpr 0x90b39a8 </usr/include/c++/4.6/bits/ios_base.h:106:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b3650 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90b3620 <col:18> 'long' 1)
    (IntegerLiteral 0x90b3638 <col:24> 'int' 0)))
,
        _S_ate = (ImplicitCastExpr 0x90b39b8 </usr/include/c++/4.6/bits/ios_base.h:107:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b36d8 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90b36a8 <col:18> 'long' 1)
    (IntegerLiteral 0x90b36c0 <col:24> 'int' 1)))
,
        _S_bin = (ImplicitCastExpr 0x90b39c8 </usr/include/c++/4.6/bits/ios_base.h:108:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b3758 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90b3728 <col:18> 'long' 1)
    (IntegerLiteral 0x90b3740 <col:24> 'int' 2)))
,
        _S_in = (ImplicitCastExpr 0x90b39d8 </usr/include/c++/4.6/bits/ios_base.h:109:17, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b37d8 <col:17, col:23> 'long' '<<'
    (IntegerLiteral 0x90b37a8 <col:17> 'long' 1)
    (IntegerLiteral 0x90b37c0 <col:23> 'int' 3)))
,
        _S_out = (ImplicitCastExpr 0x90b39e8 </usr/include/c++/4.6/bits/ios_base.h:110:18, col:24> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b3858 <col:18, col:24> 'long' '<<'
    (IntegerLiteral 0x90b3828 <col:18> 'long' 1)
    (IntegerLiteral 0x90b3840 <col:24> 'int' 4)))
,
        _S_trunc = (ImplicitCastExpr 0x90b39f8 </usr/include/c++/4.6/bits/ios_base.h:111:20, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b38d8 <col:20, col:26> 'long' '<<'
    (IntegerLiteral 0x90b38a8 <col:20> 'long' 1)
    (IntegerLiteral 0x90b38c0 <col:26> 'int' 5)))
,
        _S_ios_openmode_end = (ImplicitCastExpr 0x90b3a08 </usr/include/c++/4.6/bits/ios_base.h:112:29, col:35> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b3958 <col:29, col:35> 'long' '<<'
    (IntegerLiteral 0x90b3928 <col:29> 'long' 1)
    (IntegerLiteral 0x90b3940 <col:35> 'int' 16)))

    };
    inline std::_Ios_Openmode operator&(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x90b3c50 </usr/include/c++/4.6/bits/ios_base.h:117:3, col:74>
  (ReturnStmt 0x90b3c40 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90b3c28 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x90b3c10 <col:26, col:70> 'int' '&'
        (CXXStaticCastExpr 0x90b3b98 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b3b88 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b3b78 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b3b50 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3a20 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x90b3bf8 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b3be8 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b3bd8 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b3bb0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3a60 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator|(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x90b3e80 </usr/include/c++/4.6/bits/ios_base.h:121:3, col:74>
  (ReturnStmt 0x90b3e70 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90b3e58 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x90b3e40 <col:26, col:70> 'int' '|'
        (CXXStaticCastExpr 0x90b3dc8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b3db8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b3da8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b3d80 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3c70 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x90b3e28 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b3e18 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b3e08 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b3de0 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3cb0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator^(std::_Ios_Openmode __a, std::_Ios_Openmode __b) (CompoundStmt 0x90b40b0 </usr/include/c++/4.6/bits/ios_base.h:125:3, col:74>
  (ReturnStmt 0x90b40a0 <col:5, col:71>
    (CXXFunctionalCastExpr 0x90b4088 <col:12, col:71> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (BinaryOperator 0x90b4070 <col:26, col:70> 'int' '^'
        (CXXStaticCastExpr 0x90b3ff8 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b3fe8 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b3fd8 <col:43> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b3fb0 <col:43> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3ea0 '__a' 'enum std::_Ios_Openmode'))))
        (CXXStaticCastExpr 0x90b4058 <col:50, col:70> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b4048 <col:67> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b4038 <col:67> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b4010 <col:67> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b3ee0 '__b' 'enum std::_Ios_Openmode'))))))))


    inline std::_Ios_Openmode operator~(std::_Ios_Openmode __a) (CompoundStmt 0x90b4260 </usr/include/c++/4.6/bits/ios_base.h:129:3, col:51>
  (ReturnStmt 0x90b4250 <col:5, col:48>
    (CXXFunctionalCastExpr 0x90b4238 <col:12, col:48> 'enum std::_Ios_Openmode' functional cast to enum std::_Ios_Openmode <IntegralCast>
      (UnaryOperator 0x90b4220 <col:26, col:47> 'int' prefix '~'
        (CXXStaticCastExpr 0x90b4208 <col:27, col:47> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b41f8 <col:44> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b41e8 <col:44> 'enum std::_Ios_Openmode' <LValueToRValue>
              (DeclRefExpr 0x90b41c0 <col:44> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b40d0 '__a' 'enum std::_Ios_Openmode'))))))))


    inline const std::_Ios_Openmode &operator|=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x90b4520 </usr/include/c++/4.6/bits/ios_base.h:133:3, col:29>
  (ReturnStmt 0x90b4510 <col:5, col:24>
    (ImplicitCastExpr 0x90b4500 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x90b44e8 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x90b43f8 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b42b0 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x90b44a8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x90b4498 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b4460 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x90b4440 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b4410 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b42b0 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x90b4450 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b4428 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b42f0 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator&=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x90b4748 </usr/include/c++/4.6/bits/ios_base.h:137:3, col:29>
  (ReturnStmt 0x90b4738 <col:5, col:24>
    (ImplicitCastExpr 0x90b4728 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x90b4710 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x90b4658 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b4550 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x90b46e8 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x90b46d8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b46c0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3ae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x90b46a0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b4670 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b4550 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x90b46b0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b4688 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b4590 '__b' 'enum std::_Ios_Openmode')))))))


    inline const std::_Ios_Openmode &operator^=(std::_Ios_Openmode &__a, std::_Ios_Openmode __b) (CompoundStmt 0x90b4968 </usr/include/c++/4.6/bits/ios_base.h:141:3, col:29>
  (ReturnStmt 0x90b4958 <col:5, col:24>
    (ImplicitCastExpr 0x90b4948 <col:12, col:24> 'const enum std::_Ios_Openmode' lvalue <NoOp>
      (BinaryOperator 0x90b4930 <col:12, col:24> 'enum std::_Ios_Openmode' lvalue '='
        (DeclRefExpr 0x90b4878 <col:12> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b4770 '__a' 'enum std::_Ios_Openmode &')
        (CXXOperatorCallExpr 0x90b4908 <col:18, col:24> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x90b48f8 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b48e0 <col:22, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3f40 'operator^' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x90b48c0 <col:18> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b4890 <col:18> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b4770 '__a' 'enum std::_Ios_Openmode &'))
          (ImplicitCastExpr 0x90b48d0 <col:24> 'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x90b48a8 <col:24> 'enum std::_Ios_Openmode' lvalue ParmVar 0x90b47b0 '__b' 'enum std::_Ios_Openmode')))))))


    enum _Ios_Iostate {
        _S_goodbit = (ImplicitCastExpr 0x90b4c38 </usr/include/c++/4.6/bits/ios_base.h:146:22> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x90b49e0 <col:22> 'int' 0))
,
        _S_badbit = (ImplicitCastExpr 0x90b4c48 </usr/include/c++/4.6/bits/ios_base.h:147:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b4a68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x90b4a38 <col:21> 'long' 1)
    (IntegerLiteral 0x90b4a50 <col:27> 'int' 0)))
,
        _S_eofbit = (ImplicitCastExpr 0x90b4c58 </usr/include/c++/4.6/bits/ios_base.h:148:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b4ae8 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x90b4ab8 <col:21> 'long' 1)
    (IntegerLiteral 0x90b4ad0 <col:27> 'int' 1)))
,
        _S_failbit = (ImplicitCastExpr 0x90b4c68 </usr/include/c++/4.6/bits/ios_base.h:149:21, col:27> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b4b68 <col:21, col:27> 'long' '<<'
    (IntegerLiteral 0x90b4b38 <col:21> 'long' 1)
    (IntegerLiteral 0x90b4b50 <col:27> 'int' 2)))
,
        _S_ios_iostate_end = (ImplicitCastExpr 0x90b4c78 </usr/include/c++/4.6/bits/ios_base.h:150:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b4be8 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x90b4bb8 <col:28> 'long' 1)
    (IntegerLiteral 0x90b4bd0 <col:34> 'int' 16)))

    };
    inline std::_Ios_Iostate operator&(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x90b4ec0 </usr/include/c++/4.6/bits/ios_base.h:155:3, col:73>
  (ReturnStmt 0x90b4eb0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x90b4e98 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x90b4e80 <col:25, col:69> 'int' '&'
        (CXXStaticCastExpr 0x90b4e08 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b4df8 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b4de8 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b4dc0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b4c90 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x90b4e68 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b4e58 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b4e48 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b4e20 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b4cd0 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator|(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x90b50f0 </usr/include/c++/4.6/bits/ios_base.h:159:3, col:73>
  (ReturnStmt 0x90b50e0 <col:5, col:70>
    (CXXFunctionalCastExpr 0x90b50c8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x90b50b0 <col:25, col:69> 'int' '|'
        (CXXStaticCastExpr 0x90b5038 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b5028 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b5018 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b4ff0 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b4ee0 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x90b5098 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b5088 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b5078 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b5050 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b4f20 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator^(std::_Ios_Iostate __a, std::_Ios_Iostate __b) (CompoundStmt 0x90b5320 </usr/include/c++/4.6/bits/ios_base.h:163:3, col:73>
  (ReturnStmt 0x90b5310 <col:5, col:70>
    (CXXFunctionalCastExpr 0x90b52f8 <col:12, col:70> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (BinaryOperator 0x90b52e0 <col:25, col:69> 'int' '^'
        (CXXStaticCastExpr 0x90b5268 <col:25, col:45> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b5258 <col:42> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b5248 <col:42> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b5220 <col:42> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5110 '__a' 'enum std::_Ios_Iostate'))))
        (CXXStaticCastExpr 0x90b52c8 <col:49, col:69> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b52b8 <col:66> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b52a8 <col:66> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b5280 <col:66> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5150 '__b' 'enum std::_Ios_Iostate'))))))))


    inline std::_Ios_Iostate operator~(std::_Ios_Iostate __a) (CompoundStmt 0x90b54d0 </usr/include/c++/4.6/bits/ios_base.h:167:3, col:50>
  (ReturnStmt 0x90b54c0 <col:5, col:47>
    (CXXFunctionalCastExpr 0x90b54a8 <col:12, col:47> 'enum std::_Ios_Iostate' functional cast to enum std::_Ios_Iostate <IntegralCast>
      (UnaryOperator 0x90b5490 <col:25, col:46> 'int' prefix '~'
        (CXXStaticCastExpr 0x90b5478 <col:26, col:46> 'int' static_cast<int> <NoOp>
          (ImplicitCastExpr 0x90b5468 <col:43> 'int' <IntegralCast>
            (ImplicitCastExpr 0x90b5458 <col:43> 'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x90b5430 <col:43> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5340 '__a' 'enum std::_Ios_Iostate'))))))))


    inline const std::_Ios_Iostate &operator|=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x90b5790 </usr/include/c++/4.6/bits/ios_base.h:171:3, col:29>
  (ReturnStmt 0x90b5780 <col:5, col:24>
    (ImplicitCastExpr 0x90b5770 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x90b5758 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x90b5668 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5520 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x90b5718 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x90b5708 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b56d0 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4f80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x90b56b0 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b5680 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5520 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x90b56c0 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b5698 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5560 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator&=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x90b59b8 </usr/include/c++/4.6/bits/ios_base.h:175:3, col:29>
  (ReturnStmt 0x90b59a8 <col:5, col:24>
    (ImplicitCastExpr 0x90b5998 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x90b5980 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x90b58c8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b57c0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x90b5958 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x90b5948 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b5930 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4d50 'operator&' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x90b5910 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b58e0 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b57c0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x90b5920 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b58f8 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5800 '__b' 'enum std::_Ios_Iostate')))))))


    inline const std::_Ios_Iostate &operator^=(std::_Ios_Iostate &__a, std::_Ios_Iostate __b) (CompoundStmt 0x90b5bd8 </usr/include/c++/4.6/bits/ios_base.h:179:3, col:29>
  (ReturnStmt 0x90b5bc8 <col:5, col:24>
    (ImplicitCastExpr 0x90b5bb8 <col:12, col:24> 'const enum std::_Ios_Iostate' lvalue <NoOp>
      (BinaryOperator 0x90b5ba0 <col:12, col:24> 'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x90b5ae8 <col:12> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b59e0 '__a' 'enum std::_Ios_Iostate &')
        (CXXOperatorCallExpr 0x90b5b78 <col:18, col:24> 'enum std::_Ios_Iostate'
          (ImplicitCastExpr 0x90b5b68 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x90b5b50 <col:22, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b51b0 'operator^' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
          (ImplicitCastExpr 0x90b5b30 <col:18> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b5b00 <col:18> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b59e0 '__a' 'enum std::_Ios_Iostate &'))
          (ImplicitCastExpr 0x90b5b40 <col:24> 'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x90b5b18 <col:24> 'enum std::_Ios_Iostate' lvalue ParmVar 0x90b5a20 '__b' 'enum std::_Ios_Iostate')))))))


    enum _Ios_Seekdir {
        _S_beg = (ImplicitCastExpr 0x90b5dc8 </usr/include/c++/4.6/bits/ios_base.h:184:16> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x90b5c50 <col:16> 'int' 0))
,
        _S_cur = (ImplicitCastExpr 0x90b5dd8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1152:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x90b5ca8 <col:33> 'int' 1))
,
        _S_end = (ImplicitCastExpr 0x90b5de8 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:1155:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x90b5cf8 <col:33> 'int' 2))
,
        _S_ios_seekdir_end = (ImplicitCastExpr 0x90b5df8 </usr/include/c++/4.6/bits/ios_base.h:187:28, col:34> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x90b5d78 <col:28, col:34> 'long' '<<'
    (IntegerLiteral 0x90b5d48 <col:28> 'long' 1)
    (IntegerLiteral 0x90b5d60 <col:34> 'int' 16)))

    };
    class ios_base {
        class ios_base;
    public:
    public:
        class failure : public std::exception {
            class failure;
        public:
        public:
            failure(const string &__str) throw();
            virtual void ~failure() throw();
            virtual const char *what() const throw();
        private:
        private:
            string _M_msg;
            inline std::ios_base::failure &operator=(const std::ios_base::failure &);
        };
        typedef std::_Ios_Fmtflags fmtflags;
        static const fmtflags boolalpha = (DeclRefExpr 0x90b6554 </usr/include/c++/4.6/bits/ios_base.h:259:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a51f0 '_S_boolalpha' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags dec = (DeclRefExpr 0x90b65b4 </usr/include/c++/4.6/bits/ios_base.h:262:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5270 '_S_dec' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags fixed = (DeclRefExpr 0x90b6614 </usr/include/c++/4.6/bits/ios_base.h:265:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a52f0 '_S_fixed' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags hex = (DeclRefExpr 0x90b6674 </usr/include/c++/4.6/bits/ios_base.h:268:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5370 '_S_hex' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags internal = (DeclRefExpr 0x90b66d4 </usr/include/c++/4.6/bits/ios_base.h:273:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a53f0 '_S_internal' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags left = (DeclRefExpr 0x90b6734 </usr/include/c++/4.6/bits/ios_base.h:277:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5470 '_S_left' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags oct = (DeclRefExpr 0x90b6794 </usr/include/c++/4.6/bits/ios_base.h:280:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a54f0 '_S_oct' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags right = (DeclRefExpr 0x90b67f4 </usr/include/c++/4.6/bits/ios_base.h:284:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5570 '_S_right' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags scientific = (DeclRefExpr 0x90b6854 </usr/include/c++/4.6/bits/ios_base.h:287:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a55f0 '_S_scientific' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showbase = (DeclRefExpr 0x90b68b4 </usr/include/c++/4.6/bits/ios_base.h:291:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5670 '_S_showbase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpoint = (DeclRefExpr 0x90b6914 </usr/include/c++/4.6/bits/ios_base.h:295:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a56f0 '_S_showpoint' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags showpos = (DeclRefExpr 0x90b6974 </usr/include/c++/4.6/bits/ios_base.h:298:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5770 '_S_showpos' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags skipws = (DeclRefExpr 0x90b69d4 </usr/include/c++/4.6/bits/ios_base.h:301:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a57f0 '_S_skipws' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags unitbuf = (DeclRefExpr 0x90b6a34 </usr/include/c++/4.6/bits/ios_base.h:304:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5870 '_S_unitbuf' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags uppercase = (DeclRefExpr 0x90b6a94 </usr/include/c++/4.6/bits/ios_base.h:308:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a58f0 '_S_uppercase' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags adjustfield = (DeclRefExpr 0x90b6af4 </usr/include/c++/4.6/bits/ios_base.h:311:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a59a0 '_S_adjustfield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags basefield = (DeclRefExpr 0x90b6b54 </usr/include/c++/4.6/bits/ios_base.h:314:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5a50 '_S_basefield' 'enum std::_Ios_Fmtflags')
;
        static const fmtflags floatfield = (DeclRefExpr 0x90b6bb4 </usr/include/c++/4.6/bits/ios_base.h:317:41> 'enum std::_Ios_Fmtflags' EnumConstant 0x90a5ad0 '_S_floatfield' 'enum std::_Ios_Fmtflags')
;
        typedef std::_Ios_Iostate iostate;
        static const iostate badbit = (DeclRefExpr 0x90b6c64 </usr/include/c++/4.6/bits/ios_base.h:335:35> 'enum std::_Ios_Iostate' EnumConstant 0x90b4a80 '_S_badbit' 'enum std::_Ios_Iostate')
;
        static const iostate eofbit = (DeclRefExpr 0x90aba84 </usr/include/c++/4.6/bits/ios_base.h:338:35> 'enum std::_Ios_Iostate' EnumConstant 0x90b4b00 '_S_eofbit' 'enum std::_Ios_Iostate')
;
        static const iostate failbit = (DeclRefExpr 0x90abae4 </usr/include/c++/4.6/bits/ios_base.h:343:36> 'enum std::_Ios_Iostate' EnumConstant 0x90b4b80 '_S_failbit' 'enum std::_Ios_Iostate')
;
        static const iostate goodbit = (DeclRefExpr 0x90abb44 </usr/include/c++/4.6/bits/ios_base.h:346:36> 'enum std::_Ios_Iostate' EnumConstant 0x90b4a00 '_S_goodbit' 'enum std::_Ios_Iostate')
;
        typedef std::_Ios_Openmode openmode;
        static const openmode app = (DeclRefExpr 0x90abbf4 </usr/include/c++/4.6/bits/ios_base.h:365:34> 'enum std::_Ios_Openmode' EnumConstant 0x90b3670 '_S_app' 'enum std::_Ios_Openmode')
;
        static const openmode ate = (DeclRefExpr 0x90abc54 </usr/include/c++/4.6/bits/ios_base.h:368:34> 'enum std::_Ios_Openmode' EnumConstant 0x90b36f0 '_S_ate' 'enum std::_Ios_Openmode')
;
        static const openmode binary = (DeclRefExpr 0x90abcb4 </usr/include/c++/4.6/bits/ios_base.h:373:36> 'enum std::_Ios_Openmode' EnumConstant 0x90b3770 '_S_bin' 'enum std::_Ios_Openmode')
;
        static const openmode in = (DeclRefExpr 0x90abd14 </usr/include/c++/4.6/bits/ios_base.h:376:33> 'enum std::_Ios_Openmode' EnumConstant 0x90b37f0 '_S_in' 'enum std::_Ios_Openmode')
;
        static const openmode out = (DeclRefExpr 0x90abd74 </usr/include/c++/4.6/bits/ios_base.h:379:34> 'enum std::_Ios_Openmode' EnumConstant 0x90b3870 '_S_out' 'enum std::_Ios_Openmode')
;
        static const openmode trunc = (DeclRefExpr 0x90abdd4 </usr/include/c++/4.6/bits/ios_base.h:382:35> 'enum std::_Ios_Openmode' EnumConstant 0x90b38f0 '_S_trunc' 'enum std::_Ios_Openmode')
;
        typedef std::_Ios_Seekdir seekdir;
        static const seekdir beg = (DeclRefExpr 0x90abe84 </usr/include/c++/4.6/bits/ios_base.h:397:33> 'enum std::_Ios_Seekdir' EnumConstant 0x90b5c70 '_S_beg' 'enum std::_Ios_Seekdir')
;
        static const seekdir cur = (DeclRefExpr 0x90abee4 </usr/include/c++/4.6/bits/ios_base.h:400:33> 'enum std::_Ios_Seekdir' EnumConstant 0x90b5cc0 '_S_cur' 'enum std::_Ios_Seekdir')
;
        static const seekdir end = (DeclRefExpr 0x90abf44 </usr/include/c++/4.6/bits/ios_base.h:403:33> 'enum std::_Ios_Seekdir' EnumConstant 0x90b5d10 '_S_end' 'enum std::_Ios_Seekdir')
;
        typedef int io_state;
        typedef int open_mode;
        typedef int seek_dir;
        typedef std::streampos streampos;
        typedef std::streamoff streamoff;
        enum event {
            erase_event,
            imbue_event,
            copyfmt_event
        };
        typedef void (*event_callback)(std::ios_base::event, std::ios_base &, int);
        void register_callback(event_callback __fn, int __index);
    protected:
    protected:
        streamsize _M_precision;
        streamsize _M_width;
        fmtflags _M_flags;
        iostate _M_exception;
        iostate _M_streambuf_state;
        struct _Callback_list {
            struct _Callback_list;
            std::ios_base::_Callback_list *_M_next;
            ios_base::event_callback _M_fn;
            int _M_index;
            _Atomic_word _M_refcount;
            _Callback_list(ios_base::event_callback __fn, int __index, std::ios_base::_Callback_list *__cb) : _M_next((ImplicitCastExpr 0x90aeb50 </usr/include/c++/4.6/bits/ios_base.h:471:17> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
  (DeclRefExpr 0x90aeb38 <col:17> 'struct std::ios_base::_Callback_list *' lvalue ParmVar 0x90acaa0 '__cb' 'struct std::ios_base::_Callback_list *'))
), _M_fn((ImplicitCastExpr 0x90aeb90 </usr/include/c++/4.6/bits/ios_base.h:471:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' <LValueToRValue>
  (DeclRefExpr 0x90aeb78 <col:30> 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)' lvalue ParmVar 0x90aca00 '__fn' 'class ios_base::event_callback':'void (*)(enum std::ios_base::event, class std::ios_base &, int)'))
), _M_index((ImplicitCastExpr 0x90aebd0 </usr/include/c++/4.6/bits/ios_base.h:471:46> 'int' <LValueToRValue>
  (DeclRefExpr 0x90aebb8 <col:46> 'int' lvalue ParmVar 0x90aca50 '__index' 'int'))
), _M_refcount((IntegerLiteral 0x90aebf8 </usr/include/c++/4.6/bits/ios_base.h:471:68> 'int' 0)
) (CompoundStmt 0x90aec38 </usr/include/c++/4.6/bits/ios_base.h:471:71, col:73>)


            void _M_add_reference() (CompoundStmt 0x90aed28 </usr/include/c++/4.6/bits/ios_base.h:474:26, col:79>
  (CallExpr 0x90aed00 <col:28, col:76> 'void'
    (ImplicitCastExpr 0x90aecf0 <col:28, col:39> 'void (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x90aec6c <col:28, col:39> 'void (_Atomic_word *, int)' lvalue Function 0x8fb4a40 '__atomic_add_dispatch' 'void (_Atomic_word *, int)'))
    (UnaryOperator 0x90aecc0 <col:61, col:62> '_Atomic_word *' prefix '&'
      (MemberExpr 0x90aeca0 <col:62> '_Atomic_word':'int' lvalue ->_M_refcount 0x90ac9a0
        (CXXThisExpr 0x90aec90 <col:62> 'struct std::ios_base::_Callback_list *' this)))
    (IntegerLiteral 0x90aecd8 <col:75> 'int' 1)))


            int _M_remove_reference() (CompoundStmt 0x90aef68 </usr/include/c++/4.6/bits/ios_base.h:479:7, line:488:7>
  (NullStmt 0x90aed40 <line:481:62>)
  (DeclStmt 0x90aee80 <line:482:9, col:77>
    0x90aed60 "int __res =
      (CallExpr 0x90aee58 <col:21, col:76> '_Atomic_word':'int'
        (ImplicitCastExpr 0x90aee48 <col:21, col:32> '_Atomic_word (*)(_Atomic_word *, int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x90aedac <col:21, col:32> '_Atomic_word (_Atomic_word *, int)' lvalue Function 0x8fb45b0 '__exchange_and_add_dispatch' '_Atomic_word (_Atomic_word *, int)'))
        (UnaryOperator 0x90aee00 <col:60, col:61> '_Atomic_word *' prefix '&'
          (MemberExpr 0x90aede0 <col:61> '_Atomic_word':'int' lvalue ->_M_refcount 0x90ac9a0
            (CXXThisExpr 0x90aedd0 <col:61> 'struct std::ios_base::_Callback_list *' this)))
        (UnaryOperator 0x90aee30 <col:74, col:75> 'int' prefix '-'
          (IntegerLiteral 0x90aee18 <col:75> 'int' 1)))")
  (IfStmt 0x90aef10 <line:483:9, line:486:11>
    <<<NULL>>>
    (BinaryOperator 0x90aeed0 <line:483:13, col:22> '_Bool' '=='
      (ImplicitCastExpr 0x90aeec0 <col:13> 'int' <LValueToRValue>
        (DeclRefExpr 0x90aee90 <col:13> 'int' lvalue Var 0x90aed60 '__res' 'int'))
      (IntegerLiteral 0x90aeea8 <col:22> 'int' 0))
    (CompoundStmt 0x90aeef8 <line:484:11, line:486:11>
      (NullStmt 0x90aeee8 <line:485:65>))
    <<<NULL>>>)
  (ReturnStmt 0x90aef58 <line:487:9, col:16>
    (ImplicitCastExpr 0x90aef48 <col:16> 'int' <LValueToRValue>
      (DeclRefExpr 0x90aef2c <col:16> 'int' lvalue Var 0x90aed60 '__res' 'int'))))


        };
        std::ios_base::_Callback_list *_M_callbacks;
        void _M_call_callbacks(std::ios_base::event __ev) throw();
        void _M_dispose_callbacks() throw();
        struct _Words {
            struct _Words;
            void *_M_pword;
            long _M_iword;
            _Words() : _M_pword((ImplicitCastExpr 0x90aefa0 </usr/include/c++/4.6/bits/ios_base.h:504:27> 'void *' <NullToPointer>
  (IntegerLiteral 0x90aef88 <col:27> 'int' 0))
), _M_iword((ImplicitCastExpr 0x90aefe0 </usr/include/c++/4.6/bits/ios_base.h:504:40> 'long' <IntegralCast>
  (IntegerLiteral 0x90aefc8 <col:40> 'int' 0))
) (CompoundStmt 0x90af010 </usr/include/c++/4.6/bits/ios_base.h:504:43, col:45>)


            inline _Words(const std::ios_base::_Words &) throw();
            inline void ~_Words() throw();
        };
        std::ios_base::_Words _M_word_zero;
        enum  {
            _S_local_word_size = (ImplicitCastExpr 0x90ad218 </usr/include/c++/4.6/bits/ios_base.h:512:33> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x90ad1c0 <col:33> 'int' 8))

        };
        std::ios_base::_Words _M_local_word[8];
        int _M_word_size;
        std::ios_base::_Words *_M_word;
        std::ios_base::_Words &_M_grow_words(int __index, bool __iword);
        std::locale _M_ios_locale;
        void _M_init() throw();
    public:
    public:
        class Init {
            class Init;
            ;
        public:
        public:
            Init();
            void ~Init();
        private:
        private:
            static _Atomic_word _S_refcount;
            static bool _S_synced_with_stdio;
        };
        fmtflags flags() const (CompoundStmt 0x90af0a8 </usr/include/c++/4.6/bits/ios_base.h:553:5, col:24>
  (ReturnStmt 0x90af098 <col:7, col:14>
    (ImplicitCastExpr 0x90af088 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (MemberExpr 0x90af064 <col:14> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
        (CXXThisExpr 0x90af038 <col:14> 'const class std::ios_base *' this)))))


        fmtflags flags(fmtflags __fmtfl) (CompoundStmt 0x90af200 </usr/include/c++/4.6/bits/ios_base.h:564:5, line:568:5>
  (DeclStmt 0x90af148 <line:565:7, col:32>
    0x90af0d0 "fmtflags __old =
      (ImplicitCastExpr 0x90af138 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x90af118 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
          (CXXThisExpr 0x90af108 <col:24> 'class std::ios_base *' this)))")
  (BinaryOperator 0x90af1b0 <line:566:7, col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue '='
    (MemberExpr 0x90af168 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
      (CXXThisExpr 0x90af158 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x90af1a0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90af188 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adac0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90af1f0 <line:567:7, col:14>
    (ImplicitCastExpr 0x90af1e0 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90af1c8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x90af0d0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl) (CompoundStmt 0x90af3b8 </usr/include/c++/4.6/bits/ios_base.h:580:5, line:584:5>
  (DeclStmt 0x90af2a8 <line:581:7, col:32>
    0x90af230 "fmtflags __old =
      (ImplicitCastExpr 0x90af298 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x90af278 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
          (CXXThisExpr 0x90af268 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x90af358 <line:582:7, col:19> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x90af348 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x90af310 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x90a6630 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x90af2c8 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
      (CXXThisExpr 0x90af2b8 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x90af300 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90af2e8 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adbb0 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90af3a8 <line:583:7, col:14>
    (ImplicitCastExpr 0x90af398 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90af37c <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x90af230 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        fmtflags setf(fmtflags __fmtfl, fmtflags __mask) (CompoundStmt 0x90af6e8 </usr/include/c++/4.6/bits/ios_base.h:597:5, line:602:5>
  (DeclStmt 0x90af458 <line:598:7, col:32>
    0x90af3e0 "fmtflags __old =
      (ImplicitCastExpr 0x90af448 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (MemberExpr 0x90af428 <col:24> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
          (CXXThisExpr 0x90af418 <col:24> 'class std::ios_base *' this)))")
  (CXXOperatorCallExpr 0x90af550 <line:599:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x90af540 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x90af528 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x90b3230 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x90af478 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
      (CXXThisExpr 0x90af468 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x90af508 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x90af4f8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x90af4c0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x90a63f0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x90af4b0 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x90af498 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adcb0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags'))))
  (CXXOperatorCallExpr 0x90af688 <line:600:7, col:36> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x90af678 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x90af660 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x90a6630 'operator|=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x90af588 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
      (CXXThisExpr 0x90af578 <col:7> 'class std::ios_base *' this))
    (ParenExpr 0x90af648 <col:19, col:36> 'enum std::_Ios_Fmtflags'
      (CXXOperatorCallExpr 0x90af620 <col:20, col:30> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x90af610 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x90af5f8 <col:28, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x90af5d8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x90af5a8 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adc70 '__fmtfl' 'fmtflags':'enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x90af5e8 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x90af5c0 <col:30> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adcb0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))
  (ReturnStmt 0x90af6d8 <line:601:7, col:14>
    (ImplicitCastExpr 0x90af6c8 <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90af6ac <col:14> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue Var 0x90af3e0 '__old' 'fmtflags':'enum std::_Ios_Fmtflags'))))


        void unsetf(fmtflags __mask) (CompoundStmt 0x90af7f8 </usr/include/c++/4.6/bits/ios_base.h:612:5, col:28>
  (CXXOperatorCallExpr 0x90af7d0 <col:7, col:20> 'const enum std::_Ios_Fmtflags' lvalue
    (ImplicitCastExpr 0x90af7c0 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(*)(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
      (DeclRefExpr 0x90af7a8 <col:16, <invalid sloc>> 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)' lvalue Function 0x90b3230 'operator&=' 'const enum std::_Ios_Fmtflags &(enum std::_Ios_Fmtflags &, enum std::_Ios_Fmtflags)'))
    (MemberExpr 0x90af718 <col:7> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ->_M_flags 0x90ac690
      (CXXThisExpr 0x90af708 <col:7> 'class std::ios_base *' this))
    (CXXOperatorCallExpr 0x90af788 <col:19, col:20> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x90af778 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x90af760 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x90a63f0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
      (ImplicitCastExpr 0x90af750 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x90af738 <col:20> 'fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x90adda0 '__mask' 'fmtflags':'enum std::_Ios_Fmtflags')))))


        streamsize precision() const (CompoundStmt 0x90af860 </usr/include/c++/4.6/bits/ios_base.h:623:5, col:28>
  (ReturnStmt 0x90af850 <col:7, col:14>
    (ImplicitCastExpr 0x90af840 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x90af820 <col:14> 'const streamsize':'const int' lvalue ->_M_precision 0x90ac610
        (CXXThisExpr 0x90af810 <col:14> 'const class std::ios_base *' this)))))


        streamsize precision(streamsize __prec) (CompoundStmt 0x90af9b0 </usr/include/c++/4.6/bits/ios_base.h:632:5, line:636:5>
  (DeclStmt 0x90af8f8 <line:633:7, col:38>
    0x90af880 "streamsize __old =
      (ImplicitCastExpr 0x90af8e8 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x90af8c8 <col:26> 'streamsize':'int' lvalue ->_M_precision 0x90ac610
          (CXXThisExpr 0x90af8b8 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x90af960 <line:634:7, col:22> 'streamsize':'int' lvalue '='
    (MemberExpr 0x90af918 <col:7> 'streamsize':'int' lvalue ->_M_precision 0x90ac610
      (CXXThisExpr 0x90af908 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x90af950 <col:22> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90af938 <col:22> 'streamsize':'int' lvalue ParmVar 0x90adf70 '__prec' 'streamsize':'int')))
  (ReturnStmt 0x90af9a0 <line:635:7, col:14>
    (ImplicitCastExpr 0x90af990 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90af978 <col:14> 'streamsize':'int' lvalue Var 0x90af880 '__old' 'streamsize':'int'))))


        streamsize width() const (CompoundStmt 0x90afa20 </usr/include/c++/4.6/bits/ios_base.h:646:5, col:24>
  (ReturnStmt 0x90afa10 <col:7, col:14>
    (ImplicitCastExpr 0x90afa00 <col:14> 'streamsize':'int' <LValueToRValue>
      (MemberExpr 0x90af9e0 <col:14> 'const streamsize':'const int' lvalue ->_M_width 0x90ac650
        (CXXThisExpr 0x90af9d0 <col:14> 'const class std::ios_base *' this)))))


        streamsize width(streamsize __wide) (CompoundStmt 0x90b6e00 </usr/include/c++/4.6/bits/ios_base.h:655:5, line:659:5>
  (DeclStmt 0x90b6d48 <line:656:7, col:34>
    0x90b6cd0 "streamsize __old =
      (ImplicitCastExpr 0x90b6d38 <col:26> 'streamsize':'int' <LValueToRValue>
        (MemberExpr 0x90b6d18 <col:26> 'streamsize':'int' lvalue ->_M_width 0x90ac650
          (CXXThisExpr 0x90b6d08 <col:26> 'class std::ios_base *' this)))")
  (BinaryOperator 0x90b6db0 <line:657:7, col:18> 'streamsize':'int' lvalue '='
    (MemberExpr 0x90b6d68 <col:7> 'streamsize':'int' lvalue ->_M_width 0x90ac650
      (CXXThisExpr 0x90b6d58 <col:7> 'class std::ios_base *' this))
    (ImplicitCastExpr 0x90b6da0 <col:18> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90b6d88 <col:18> 'streamsize':'int' lvalue ParmVar 0x90ae0e0 '__wide' 'streamsize':'int')))
  (ReturnStmt 0x90b6df0 <line:658:7, col:14>
    (ImplicitCastExpr 0x90b6de0 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90b6dc8 <col:14> 'streamsize':'int' lvalue Var 0x90b6cd0 '__old' 'streamsize':'int'))))


        static bool sync_with_stdio(bool __sync = (CXXBoolLiteralExpr 0x90aeb28 </usr/include/c++/4.6/bits/ios_base.h:673:35> '_Bool' true)
);
        std::locale imbue(const std::locale &__loc) throw();
        std::locale getloc() const (CompoundStmt 0x90b6e88 </usr/include/c++/4.6/bits/ios_base.h:697:5, col:29>
  (ReturnStmt 0x90b6e78 <col:7, col:14>
    (CXXConstructExpr 0x90b6e50 <col:14> 'class std::locale''void (const class std::locale &) throw()'
      (MemberExpr 0x90b6e30 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x90ad540
        (CXXThisExpr 0x90b6e20 <col:14> 'const class std::ios_base *' this)))))


        const std::locale &_M_getloc() const (CompoundStmt 0x90b6ee0 </usr/include/c++/4.6/bits/ios_base.h:708:5, col:29>
  (ReturnStmt 0x90b6ed0 <col:7, col:14>
    (MemberExpr 0x90b6eb0 <col:14> 'const class std::locale' lvalue ->_M_ios_locale 0x90ad540
      (CXXThisExpr 0x90b6ea0 <col:14> 'const class std::ios_base *' this))))


        static int xalloc() throw();
        long &iword(int __ix) (CompoundStmt 0x90b7168 </usr/include/c++/4.6/bits/ios_base.h:743:5, line:747:5>
  (DeclStmt 0x90b7110 <line:744:7, line:745:47>
    0x90b6f10 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x90b70f0 <line:744:24, line:745:46> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x90b6fc8 <line:744:24, col:44> '_Bool'
          (BinaryOperator 0x90b6fb0 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x90b6f90 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x90b6f44 <col:25> 'int' lvalue ParmVar 0x90ae540 '__ix' 'int'))
            (ImplicitCastExpr 0x90b6fa0 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x90b6f70 <col:32> 'int' lvalue ->_M_word_size 0x90ad350
                (CXXThisExpr 0x90b6f60 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x90b7048 <line:745:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x90b7028 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x90b6ff0 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
              (CXXThisExpr 0x90b6fe0 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x90b7038 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x90b7010 <col:14> 'int' lvalue ParmVar 0x90ae540 '__ix' 'int')))
        (CXXMemberCallExpr 0x90b70b8 <col:22, col:46> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x90b7070 <col:22> '<bound member function type>' ->_M_grow_words 0x90ad4d0
            (CXXThisExpr 0x90b7060 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x90b70e0 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x90b7090 <col:36> 'int' lvalue ParmVar 0x90ae540 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x90b70a8 <col:42> '_Bool' true)))")
  (ReturnStmt 0x90b7158 <line:746:7, col:21>
    (MemberExpr 0x90b7138 <col:14, col:21> 'long' lvalue ._M_iword 0x90ad060
      (DeclRefExpr 0x90b7120 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x90b6f10 '__word' 'struct std::ios_base::_Words &'))))


        void *&pword(int __ix) (CompoundStmt 0x90b73e8 </usr/include/c++/4.6/bits/ios_base.h:764:5, line:768:5>
  (DeclStmt 0x90b7390 <line:765:7, line:766:48>
    0x90b7190 "std::ios_base::_Words &__word =
      (ConditionalOperator 0x90b7370 <line:765:24, line:766:47> 'struct std::ios_base::_Words' lvalue
        (ParenExpr 0x90b7248 <line:765:24, col:44> '_Bool'
          (BinaryOperator 0x90b7230 <col:25, col:32> '_Bool' '<'
            (ImplicitCastExpr 0x90b7210 <col:25> 'int' <LValueToRValue>
              (DeclRefExpr 0x90b71c4 <col:25> 'int' lvalue ParmVar 0x90ae640 '__ix' 'int'))
            (ImplicitCastExpr 0x90b7220 <col:32> 'int' <LValueToRValue>
              (MemberExpr 0x90b71f0 <col:32> 'int' lvalue ->_M_word_size 0x90ad350
                (CXXThisExpr 0x90b71e0 <col:32> 'class std::ios_base *' this)))))
        (ArraySubscriptExpr 0x90b72c8 <line:766:6, col:18> 'struct std::ios_base::_Words' lvalue
          (ImplicitCastExpr 0x90b72a8 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
            (MemberExpr 0x90b7270 <col:6> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
              (CXXThisExpr 0x90b7260 <col:6> 'class std::ios_base *' this)))
          (ImplicitCastExpr 0x90b72b8 <col:14> 'int' <LValueToRValue>
            (DeclRefExpr 0x90b7290 <col:14> 'int' lvalue ParmVar 0x90ae640 '__ix' 'int')))
        (CXXMemberCallExpr 0x90b7338 <col:22, col:47> 'struct std::ios_base::_Words' lvalue
          (MemberExpr 0x90b72f0 <col:22> '<bound member function type>' ->_M_grow_words 0x90ad4d0
            (CXXThisExpr 0x90b72e0 <col:22> 'class std::ios_base *' this))
          (ImplicitCastExpr 0x90b7360 <col:36> 'int' <LValueToRValue>
            (DeclRefExpr 0x90b7310 <col:36> 'int' lvalue ParmVar 0x90ae640 '__ix' 'int'))
          (CXXBoolLiteralExpr 0x90b7328 <col:42> '_Bool' false)))")
  (ReturnStmt 0x90b73d8 <line:767:7, col:21>
    (MemberExpr 0x90b73b8 <col:14, col:21> 'void *' lvalue ._M_pword 0x90ad020
      (DeclRefExpr 0x90b73a0 <col:14> 'struct std::ios_base::_Words' lvalue Var 0x90b7190 '__word' 'struct std::ios_base::_Words &'))))


        virtual void ~ios_base();
    protected:
    protected:
        ios_base() throw();
    private:
    private:
        ios_base(const std::ios_base &);
        std::ios_base &operator=(const std::ios_base &);
    };
    inline std::ios_base &boolalpha(std::ios_base &__base) (CompoundStmt 0x90b7608 </usr/include/c++/4.6/bits/ios_base.h:797:3, line:800:3>
  (CXXMemberCallExpr 0x90b75b0 <line:798:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b758c <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b74f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b7410 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b75d0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b756c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6520 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b75f8 <line:799:5, col:12>
    (DeclRefExpr 0x90b75dc <col:12> 'class std::ios_base' lvalue ParmVar 0x90b7410 '__base' 'class std::ios_base &')))


    inline std::ios_base &noboolalpha(std::ios_base &__base) (CompoundStmt 0x90b77c8 </usr/include/c++/4.6/bits/ios_base.h:805:3, line:808:3>
  (CXXMemberCallExpr 0x90b7770 <line:806:5, col:38> 'void'
    (MemberExpr 0x90b770c <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b76f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b7630 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b7790 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b774c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6520 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b77b8 <line:807:5, col:12>
    (DeclRefExpr 0x90b779c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b7630 '__base' 'class std::ios_base &')))


    inline std::ios_base &showbase(std::ios_base &__base) (CompoundStmt 0x90b79c8 </usr/include/c++/4.6/bits/ios_base.h:813:3, line:816:3>
  (CXXMemberCallExpr 0x90b7970 <line:814:5, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b794c <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b78b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b77f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b7990 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b792c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6880 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b79b8 <line:815:5, col:12>
    (DeclRefExpr 0x90b799c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b77f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowbase(std::ios_base &__base) (CompoundStmt 0x90b7b88 </usr/include/c++/4.6/bits/ios_base.h:821:3, line:824:3>
  (CXXMemberCallExpr 0x90b7b30 <line:822:5, col:37> 'void'
    (MemberExpr 0x90b7acc <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b7ab4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b79f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b7b50 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b7b0c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6880 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b7b78 <line:823:5, col:12>
    (DeclRefExpr 0x90b7b5c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b79f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpoint(std::ios_base &__base) (CompoundStmt 0x90b7d88 </usr/include/c++/4.6/bits/ios_base.h:829:3, line:832:3>
  (CXXMemberCallExpr 0x90b7d30 <line:830:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b7d0c <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b7c74 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b7bb0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b7d50 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b7cec <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b68e0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b7d78 <line:831:5, col:12>
    (DeclRefExpr 0x90b7d5c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b7bb0 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpoint(std::ios_base &__base) (CompoundStmt 0x90b7f48 </usr/include/c++/4.6/bits/ios_base.h:837:3, line:840:3>
  (CXXMemberCallExpr 0x90b7ef0 <line:838:5, col:38> 'void'
    (MemberExpr 0x90b7e8c <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b7e74 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b7db0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b7f10 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b7ecc <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b68e0 'showpoint' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b7f38 <line:839:5, col:12>
    (DeclRefExpr 0x90b7f1c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b7db0 '__base' 'class std::ios_base &')))


    inline std::ios_base &showpos(std::ios_base &__base) (CompoundStmt 0x90b8148 </usr/include/c++/4.6/bits/ios_base.h:845:3, line:848:3>
  (CXXMemberCallExpr 0x90b80f0 <line:846:5, col:34> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b80cc <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b8034 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b7f70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8110 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b80ac <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6940 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b8138 <line:847:5, col:12>
    (DeclRefExpr 0x90b811c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b7f70 '__base' 'class std::ios_base &')))


    inline std::ios_base &noshowpos(std::ios_base &__base) (CompoundStmt 0x90b8308 </usr/include/c++/4.6/bits/ios_base.h:853:3, line:856:3>
  (CXXMemberCallExpr 0x90b82b0 <line:854:5, col:36> 'void'
    (MemberExpr 0x90b824c <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b8234 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b8170 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b82d0 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b828c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6940 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b82f8 <line:855:5, col:12>
    (DeclRefExpr 0x90b82dc <col:12> 'class std::ios_base' lvalue ParmVar 0x90b8170 '__base' 'class std::ios_base &')))


    inline std::ios_base &skipws(std::ios_base &__base) (CompoundStmt 0x90b8508 </usr/include/c++/4.6/bits/ios_base.h:861:3, line:864:3>
  (CXXMemberCallExpr 0x90b84b0 <line:862:5, col:33> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b848c <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b83f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b8330 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b84d0 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b846c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b69a0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b84f8 <line:863:5, col:12>
    (DeclRefExpr 0x90b84dc <col:12> 'class std::ios_base' lvalue ParmVar 0x90b8330 '__base' 'class std::ios_base &')))


    inline std::ios_base &noskipws(std::ios_base &__base) (CompoundStmt 0x90b86c8 </usr/include/c++/4.6/bits/ios_base.h:869:3, line:872:3>
  (CXXMemberCallExpr 0x90b8670 <line:870:5, col:35> 'void'
    (MemberExpr 0x90b860c <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b85f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b8530 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8690 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b864c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b69a0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b86b8 <line:871:5, col:12>
    (DeclRefExpr 0x90b869c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b8530 '__base' 'class std::ios_base &')))


    inline std::ios_base &uppercase(std::ios_base &__base) (CompoundStmt 0x90b88c8 </usr/include/c++/4.6/bits/ios_base.h:877:3, line:880:3>
  (CXXMemberCallExpr 0x90b8870 <line:878:5, col:36> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b884c <col:5, col:12> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b87b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b86f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8890 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b882c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a60 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b88b8 <line:879:5, col:12>
    (DeclRefExpr 0x90b889c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b86f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nouppercase(std::ios_base &__base) (CompoundStmt 0x90b8a88 </usr/include/c++/4.6/bits/ios_base.h:885:3, line:888:3>
  (CXXMemberCallExpr 0x90b8a30 <line:886:5, col:38> 'void'
    (MemberExpr 0x90b89cc <col:5, col:12> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b89b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b88f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8a50 <col:19, col:29> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b8a0c <col:19, col:29> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a60 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b8a78 <line:887:5, col:12>
    (DeclRefExpr 0x90b8a5c <col:12> 'class std::ios_base' lvalue ParmVar 0x90b88f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &unitbuf(std::ios_base &__base) (CompoundStmt 0x90b8c88 </usr/include/c++/4.6/bits/ios_base.h:893:3, line:896:3>
  (CXXMemberCallExpr 0x90b8c30 <line:894:6, col:35> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b8c0c <col:6, col:13> '<bound member function type>' .setf 0x90adc00
      (DeclRefExpr 0x90b8b74 <col:6> 'class std::ios_base' lvalue ParmVar 0x90b8ab0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8c50 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b8bec <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a00 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b8c78 <line:895:6, col:13>
    (DeclRefExpr 0x90b8c5c <col:13> 'class std::ios_base' lvalue ParmVar 0x90b8ab0 '__base' 'class std::ios_base &')))


    inline std::ios_base &nounitbuf(std::ios_base &__base) (CompoundStmt 0x90b8e48 </usr/include/c++/4.6/bits/ios_base.h:901:3, line:904:3>
  (CXXMemberCallExpr 0x90b8df0 <line:902:6, col:37> 'void'
    (MemberExpr 0x90b8d8c <col:6, col:13> '<bound member function type>' .unsetf 0x90ade40
      (DeclRefExpr 0x90b8d74 <col:6> 'class std::ios_base' lvalue ParmVar 0x90b8cb0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b8e10 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b8dcc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a00 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b8e38 <line:903:6, col:13>
    (DeclRefExpr 0x90b8e1c <col:13> 'class std::ios_base' lvalue ParmVar 0x90b8cb0 '__base' 'class std::ios_base &')))


    inline std::ios_base &internal(std::ios_base &__base) (CompoundStmt 0x90b90a0 </usr/include/c++/4.6/bits/ios_base.h:910:3, line:913:3>
  (CXXMemberCallExpr 0x90b9030 <line:911:6, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b900c <col:6, col:13> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b8f34 <col:6> 'class std::ios_base' lvalue ParmVar 0x90b8e70 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b9058 <col:18, col:28> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b8fac <col:18, col:28> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b66a0 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b9068 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b8fec <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6ac0 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b9090 <line:912:6, col:13>
    (DeclRefExpr 0x90b9074 <col:13> 'class std::ios_base' lvalue ParmVar 0x90b8e70 '__base' 'class std::ios_base &')))


    inline std::ios_base &left(std::ios_base &__base) (CompoundStmt 0x90b9300 </usr/include/c++/4.6/bits/ios_base.h:918:3, line:921:3>
  (CXXMemberCallExpr 0x90b9290 <line:919:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b926c <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b9194 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b90d0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b92b8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b920c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6700 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b92c8 <col:33, col:43> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b924c <col:33, col:43> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6ac0 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b92f0 <line:920:5, col:12>
    (DeclRefExpr 0x90b92d4 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b90d0 '__base' 'class std::ios_base &')))


    inline std::ios_base &right(std::ios_base &__base) (CompoundStmt 0x90b9560 </usr/include/c++/4.6/bits/ios_base.h:926:3, line:929:3>
  (CXXMemberCallExpr 0x90b94f0 <line:927:5, col:55> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b94cc <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b93f4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b9330 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b9518 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b946c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b67c0 'right' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b9528 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b94ac <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6ac0 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b9550 <line:928:5, col:12>
    (DeclRefExpr 0x90b9534 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b9330 '__base' 'class std::ios_base &')))


    inline std::ios_base &dec(std::ios_base &__base) (CompoundStmt 0x90b97c0 </usr/include/c++/4.6/bits/ios_base.h:935:3, line:938:3>
  (CXXMemberCallExpr 0x90b9750 <line:936:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b972c <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b9654 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b9590 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b9778 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b96cc <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6580 'dec' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b9788 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b970c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b97b0 <line:937:5, col:12>
    (DeclRefExpr 0x90b9794 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b9590 '__base' 'class std::ios_base &')))


    inline std::ios_base &hex(std::ios_base &__base) (CompoundStmt 0x90b9a20 </usr/include/c++/4.6/bits/ios_base.h:943:3, line:946:3>
  (CXXMemberCallExpr 0x90b99b0 <line:944:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b998c <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b98b4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b97f0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b99d8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b992c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b99e8 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b996c <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b9a10 <line:945:5, col:12>
    (DeclRefExpr 0x90b99f4 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b97f0 '__base' 'class std::ios_base &')))


    inline std::ios_base &oct(std::ios_base &__base) (CompoundStmt 0x90b9c80 </usr/include/c++/4.6/bits/ios_base.h:951:3, line:954:3>
  (CXXMemberCallExpr 0x90b9c10 <line:952:5, col:51> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b9bec <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b9b14 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b9a50 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b9c38 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b9b8c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b9c48 <col:32, col:42> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b9bcc <col:32, col:42> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b9c70 <line:953:5, col:12>
    (DeclRefExpr 0x90b9c54 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b9a50 '__base' 'class std::ios_base &')))


    inline std::ios_base &fixed(std::ios_base &__base) (CompoundStmt 0x90b9ee0 </usr/include/c++/4.6/bits/ios_base.h:960:3, line:963:3>
  (CXXMemberCallExpr 0x90b9e70 <line:961:5, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90b9e4c <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b9d74 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b9cb0 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90b9e98 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b9dec <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b65e0 'fixed' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90b9ea8 <col:34, col:44> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90b9e2c <col:34, col:44> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b80 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90b9ed0 <line:962:5, col:12>
    (DeclRefExpr 0x90b9eb4 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b9cb0 '__base' 'class std::ios_base &')))


    inline std::ios_base &scientific(std::ios_base &__base) (CompoundStmt 0x90ba140 </usr/include/c++/4.6/bits/ios_base.h:968:3, line:971:3>
  (CXXMemberCallExpr 0x90ba0d0 <line:969:5, col:59> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x90ba0ac <col:5, col:12> '<bound member function type>' .setf 0x90add30
      (DeclRefExpr 0x90b9fd4 <col:5> 'class std::ios_base' lvalue ParmVar 0x90b9f10 '__base' 'class std::ios_base &'))
    (ImplicitCastExpr 0x90ba0f8 <col:17, col:27> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90ba04c <col:17, col:27> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6820 'scientific' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
    (ImplicitCastExpr 0x90ba108 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x90ba08c <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b80 'floatfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x90ba130 <line:970:5, col:12>
    (DeclRefExpr 0x90ba114 <col:12> 'class std::ios_base' lvalue ParmVar 0x90b9f10 '__base' 'class std::ios_base &')))


}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *, basic_streambuf<_CharT, _Traits> *, bool &);
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf<_CharT, _Traits>() (CompoundStmt 0x8cdb388 </usr/include/c++/4.6/streambuf:195:7, col:9>)


        std::locale pubimbue(const std::locale &__loc) (CompoundStmt 0x8cdb5b0 </usr/include/c++/4.6/streambuf:207:7, line:212:7>
  (DeclStmt 0x8cdb460 <line:208:2, col:30>
    0x8cdb3a0 "std::locale __tmp =
      (ParenListExpr 0x8cdb440 <col:14, col:29> 'class std::locale'
        (CallExpr 0x8cdb420 <col:15, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdb3e8 <col:15, col:21> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdb3d8 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (CallExpr 0x8cdb4d0 <line:209:2, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x8cdb480 <col:2, col:8> '<dependent type>' lvalue
      (CXXThisExpr 0x8cdb470 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x8cdb4b4 <col:14> 'const class std::locale' lvalue ParmVar 0x8cd5bb0 '__loc' 'const class std::locale &'))
  (BinaryOperator 0x8cdb538 <line:210:2, col:18> '<dependent type>' '='
    (MemberExpr 0x8cdb500 <col:2> 'class std::locale' lvalue ->_M_buf_locale 0x8cd5a90
      (CXXThisExpr 0x8cdb4f0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x8cdb520 <col:18> 'const class std::locale' lvalue ParmVar 0x8cd5bb0 '__loc' 'const class std::locale &'))
  (ReturnStmt 0x8cdb5a0 <line:211:2, col:9>
    (CXXConstructExpr 0x8cdb578 <col:9> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x8cdb568 <col:9> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x8cdb550 <col:9> 'class std::locale' lvalue Var 0x8cdb3a0 '__tmp' 'class std::locale')))))


        std::locale getloc() const (CompoundStmt 0x8cdb628 </usr/include/c++/4.6/streambuf:224:7, col:31>
  (ReturnStmt 0x8cdb618 <col:9, col:16>
    (MemberExpr 0x8cdb5f8 <col:16> 'const class std::locale' lvalue ->_M_buf_locale 0x8cd5a90
      (CXXThisExpr 0x8cdb5e8 <col:16> 'const basic_streambuf<_CharT, _Traits> *' this))))


        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n) (CompoundStmt 0x8cdb6f0 </usr/include/c++/4.6/streambuf:237:7, col:40>
  (ReturnStmt 0x8cdb6e0 <col:9, col:37>
    (CallExpr 0x8cdb6b8 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8cdb650 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8cdb640 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x8cdb684 <col:29> 'char_type *' lvalue ParmVar 0x8cd5cf0 '__s' 'char_type *')
      (DeclRefExpr 0x8cdb69c <col:34> 'streamsize':'int' lvalue ParmVar 0x8cd5d30 '__n' 'streamsize':'int'))))


        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x8cdafc0 </usr/include/c++/4.6/streambuf:241:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x8cdafb0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x8cdaf98 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x8cdaf78 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdaf14 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x8cdaf88 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdaf54 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x8cdb7d0 </usr/include/c++/4.6/streambuf:242:7, col:53>
  (ReturnStmt 0x8cdb7c0 <col:9, col:50>
    (CallExpr 0x8cdb798 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8cdb718 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8cdb708 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x8cdb74c <col:30> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x8cd5e70 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x8cdb764 <col:37> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x8cd5f00 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
      (DeclRefExpr 0x8cdb77c <col:44> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x8cd5f90 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x8cdb0b0 </usr/include/c++/4.6/streambuf:246:32, col:57> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x8cdb0a0 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x8cdb088 <col:45, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x8cdb068 <col:32, col:42> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb004 <col:32, col:42> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x8cdb078 <col:47, col:57> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb044 <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x8cdb898 </usr/include/c++/4.6/streambuf:247:7, col:45>
  (ReturnStmt 0x8cdb888 <col:9, col:42>
    (CallExpr 0x8cdb860 <col:16, col:42> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8cdb7f8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8cdb7e8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x8cdb82c <col:30> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x8cd60d0 '__sp' 'pos_type':'typename traits_type::pos_type')
      (DeclRefExpr 0x8cdb844 <col:36> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x8cd6140 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))))


        int pubsync() (CompoundStmt 0x8cdb928 </usr/include/c++/4.6/streambuf:250:17, col:40>
  (ReturnStmt 0x8cdb918 <col:19, col:37>
    (CallExpr 0x8cdb8f8 <col:26, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8cdb8c0 <col:26, col:32> '<dependent type>' lvalue
        (CXXThisExpr 0x8cdb8b0 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))))


        streamsize in_avail() (CompoundStmt 0x8cdbbb0 </usr/include/c++/4.6/streambuf:264:7, line:267:7>
  (DeclStmt 0x8cdbab8 <line:265:2, col:55>
    0x8cdb950 "const streamsize __ret =
      (CXXOperatorCallExpr 0x8cdba90 <col:27, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x8cdba58 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CallExpr 0x8cdb9d0 <col:27, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdb998 <col:27, col:33> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdb988 <col:27> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x8cdba38 <col:43, col:54> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdba00 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdb9f0 <col:43> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (ReturnStmt 0x8cdbba0 <line:266:2, col:41>
    (ConditionalOperator 0x8cdbb80 <col:9, col:41> '<dependent type>'
      (ImplicitCastExpr 0x8cdbb70 <col:9> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x8cdbb60 <col:9> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x8cdbac8 <col:9> 'const streamsize':'const int' lvalue Var 0x8cdb950 '__ret' 'const streamsize':'const int')))
      (DeclRefExpr 0x8cdbae0 <col:17> 'const streamsize':'const int' lvalue Var 0x8cdb950 '__ret' 'const streamsize':'const int')
      (CallExpr 0x8cdbb40 <col:25, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdbb08 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdbaf8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this))))))


        int_type snextc() (CompoundStmt 0x8cdbed8 </usr/include/c++/4.6/streambuf:278:7, line:284:7>
  (DeclStmt 0x8cdbc80 <line:279:2, col:37>
    0x8cdbbd0 "int_type __ret =
      (CallExpr 0x8cdbc60 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdbc28 <col:19, col:32> '<dependent type>' lvalue))")
  (IfStmt 0x8cdbe90 <line:280:2, line:282:24>
    <<<NULL>>>
    (CallExpr 0x8cdbdd0 <line:280:6, line:281:26> '<dependent type>'
      (DeclRefExpr 0x8cdbc90 <line:280:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (UnaryOperator 0x8cdbda8 <col:23, line:281:19> '<dependent type>' prefix '!'
        (CallExpr 0x8cdbd80 <line:280:24, line:281:19> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdbcc8 <line:280:24, col:37> '<dependent type>' lvalue)
          (CallExpr 0x8cdbd48 <col:49, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8cdbd10 <col:49, col:55> '<dependent type>' lvalue
              (CXXThisExpr 0x8cdbd00 <col:49> 'basic_streambuf<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x8cdbd64 <line:281:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbbd0 '__ret' 'int_type':'typename traits_type::int_type')))
      (CXXBoolLiteralExpr 0x8cdbdc0 <col:22> '_Bool' true))
    (BinaryOperator 0x8cdbe78 <line:282:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x8cdbdf4 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbbd0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x8cdbe58 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdbe20 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdbe10 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))))
    <<<NULL>>>)
  (ReturnStmt 0x8cdbec8 <line:283:2, col:9>
    (DeclRefExpr 0x8cdbeac <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbbd0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sbumpc() (CompoundStmt 0x8cdc378 </usr/include/c++/4.6/streambuf:296:7, line:306:7>
  (DeclStmt 0x8cdbf38 <line:297:2, col:16>
    0x8cdbf00 "int_type __ret")
  (IfStmt 0x8cdc330 <line:298:2, line:304:24>
    <<<NULL>>>
    (CallExpr 0x8cdc0b0 <line:298:6, col:57> '<dependent type>'
      (DeclRefExpr 0x8cdbf48 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8cdc078 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8cdc030 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x8cdbfa8 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdbf70 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdbf60 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x8cdc010 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdbfd8 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdbfc8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x8cdc0a0 <col:53> '_Bool' true))
    (CompoundStmt 0x8cdc280 <line:299:4, line:302:4>
      (BinaryOperator 0x8cdc1e8 <line:300:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x8cdc0d4 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbf00 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x8cdc1c8 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdc110 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x8cdc1b0 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x8cdc190 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8cdc158 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x8cdc148 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x8cdc260 <line:301:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdc210 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdc200 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x8cdc248 <col:18> 'int' 1)))
    (BinaryOperator 0x8cdc318 <line:304:4, col:24> '<dependent type>' '='
      (DeclRefExpr 0x8cdc298 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbf00 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x8cdc2f8 <col:12, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdc2c0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdc2b0 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x8cdc368 <line:305:2, col:9>
    (DeclRefExpr 0x8cdc34c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdbf00 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sgetc() (CompoundStmt 0x8cdc780 </usr/include/c++/4.6/streambuf:318:7, line:325:7>
  (DeclStmt 0x8cdc3d8 <line:319:2, col:16>
    0x8cdc3a0 "int_type __ret")
  (IfStmt 0x8cdc738 <line:320:2, line:323:28>
    <<<NULL>>>
    (CallExpr 0x8cdc550 <line:320:6, col:57> '<dependent type>'
      (DeclRefExpr 0x8cdc3e8 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8cdc518 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8cdc4d0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x8cdc448 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdc410 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdc400 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x8cdc4b0 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdc478 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdc468 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x8cdc540 <col:53> '_Bool' true))
    (BinaryOperator 0x8cdc688 <line:321:4, col:50> '<dependent type>' '='
      (DeclRefExpr 0x8cdc574 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc3a0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x8cdc668 <col:12, col:50> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdc5b0 <col:12, col:25> '<dependent type>' lvalue)
        (UnaryOperator 0x8cdc650 <col:37, col:49> '<dependent type>' prefix '*'
          (CallExpr 0x8cdc630 <col:38, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8cdc5f8 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x8cdc5e8 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))))
    (BinaryOperator 0x8cdc720 <line:323:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x8cdc6a0 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc3a0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x8cdc700 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdc6c8 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdc6b8 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x8cdc770 <line:324:2, col:9>
    (DeclRefExpr 0x8cdc754 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc3a0 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sgetn(char_type *__s, streamsize __n) (CompoundStmt 0x8cdc850 </usr/include/c++/4.6/streambuf:337:7, col:40>
  (ReturnStmt 0x8cdc840 <col:9, col:37>
    (CallExpr 0x8cdc818 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x8cdc7b0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x8cdc7a0 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x8cdc7e4 <col:29> 'char_type *' lvalue ParmVar 0x8cd6520 '__s' 'char_type *')
      (DeclRefExpr 0x8cdc7fc <col:34> 'streamsize':'int' lvalue ParmVar 0x8cd6560 '__n' 'streamsize':'int'))))


        int_type sputbackc(char_type __c) (CompoundStmt 0x8cdcf98 </usr/include/c++/4.6/streambuf:352:7, line:364:7>
  (DeclStmt 0x8cdc8a8 <line:353:2, col:16>
    0x8cdc870 "int_type __ret")
  (DeclStmt 0x8cdca38 <line:354:2, col:53>
    0x8cdc8c0 "const bool __testpos =
      (CXXOperatorCallExpr 0x8cdca10 <col:25, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x8cdc9c8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x8cdc940 <col:25, col:37> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdc908 <col:25, col:31> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdc8f8 <col:25> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x8cdc9a8 <col:41, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdc970 <col:41, col:47> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdc960 <col:41> 'basic_streambuf<_CharT, _Traits> *' this))))")
  (IfStmt 0x8cdcf50 <line:355:2, line:362:4>
    <<<NULL>>>
    (CallExpr 0x8cdcc28 <line:355:6, line:356:55> '<dependent type>'
      (DeclRefExpr 0x8cdca48 <line:355:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x8cdcc00 <col:23, line:356:47> '<dependent type>' '||'
        (UnaryOperator 0x8cdca88 <line:355:23, col:24> '_Bool' prefix '!'
          (ImplicitCastExpr 0x8cdca78 <col:24> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x8cdca60 <col:24> 'const _Bool' lvalue Var 0x8cdc8c0 '__testpos' 'const _Bool')))
        (UnaryOperator 0x8cdcbe8 <line:356:9, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x8cdcbc0 <col:10, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x8cdcac0 <col:10, col:23> '<dependent type>' lvalue)
            (DeclRefExpr 0x8cdcaf4 <col:26> 'char_type':'_CharT' lvalue ParmVar 0x8cd6670 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x8cdcba8 <col:31, col:46> '<dependent type>' lvalue
              (CallExpr 0x8cdcb58 <col:31, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x8cdcb20 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x8cdcb10 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
              (UnaryOperator 0x8cdcb90 <col:44, col:45> 'int' prefix '-'
                (IntegerLiteral 0x8cdcb78 <col:45> 'int' 1))))))
      (CXXBoolLiteralExpr 0x8cdcc18 <col:50> '_Bool' false))
    (BinaryOperator 0x8cdcd60 <line:357:4, col:57> '<dependent type>' '='
      (DeclRefExpr 0x8cdcc4c <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc870 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x8cdcd40 <col:12, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdcc78 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdcc68 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x8cdcd20 <col:28, col:56> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdccd0 <col:28, col:41> '<dependent type>' lvalue)
          (DeclRefExpr 0x8cdcd04 <col:53> 'char_type':'_CharT' lvalue ParmVar 0x8cd6670 '__c' 'char_type':'_CharT'))))
    (CompoundStmt 0x8cdcf38 <line:359:4, line:362:4>
      (CallExpr 0x8cdcdf0 <line:360:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x8cdcd88 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x8cdcd78 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x8cdcdd8 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x8cdcdc0 <col:19> 'int' 1)))
      (BinaryOperator 0x8cdcf20 <line:361:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x8cdce10 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc870 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x8cdcf00 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdce48 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x8cdcee8 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x8cdcec8 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x8cdce90 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x8cdce80 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))))
  (ReturnStmt 0x8cdcf88 <line:363:2, col:9>
    (DeclRefExpr 0x8cdcf6c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdc870 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sungetc() (CompoundStmt 0x90e1058 </usr/include/c++/4.6/streambuf:377:7, line:387:7>
  (DeclStmt 0x8cdcff8 <line:378:2, col:16>
    0x8cdcfc0 "int_type __ret")
  (IfStmt 0x90e1010 <line:379:2, line:385:28>
    <<<NULL>>>
    (CallExpr 0x90e0d78 <line:379:6, col:57> '<dependent type>'
      (DeclRefExpr 0x8cdd008 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x8cdd138 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x8cdd0f0 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x8cdd068 <col:23, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdd030 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdd020 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x8cdd0d0 <col:39, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x8cdd098 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x8cdd088 <col:39> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x90e0d68 <col:53> '_Bool' true))
    (CompoundStmt 0x90e0f60 <line:380:4, line:383:4>
      (CallExpr 0x90e0e18 <line:381:6, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e0db0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x90e0da0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (UnaryOperator 0x90e0e00 <col:18, col:19> 'int' prefix '-'
          (IntegerLiteral 0x90e0de8 <col:19> 'int' 1)))
      (BinaryOperator 0x90e0f48 <line:382:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x90e0e38 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdcfc0 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x90e0f28 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e0e70 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x90e0f10 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x90e0ef0 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e0eb8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x90e0ea8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this)))))))
    (BinaryOperator 0x90e0ff8 <line:385:4, col:28> '<dependent type>' '='
      (DeclRefExpr 0x90e0f78 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdcfc0 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x90e0fd8 <col:12, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e0fa0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x90e0f90 <col:12> 'basic_streambuf<_CharT, _Traits> *' this)))))
  (ReturnStmt 0x90e1048 <line:386:2, col:9>
    (DeclRefExpr 0x90e102c <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x8cdcfc0 '__ret' 'int_type':'typename traits_type::int_type')))


        int_type sputc(char_type __c) (CompoundStmt 0x90e15d8 </usr/include/c++/4.6/streambuf:404:7, line:415:7>
  (DeclStmt 0x90e10b8 <line:405:2, col:16>
    0x90e1080 "int_type __ret")
  (IfStmt 0x90e1590 <line:406:2, line:413:56>
    <<<NULL>>>
    (CallExpr 0x90e1230 <line:406:6, col:57> '<dependent type>'
      (DeclRefExpr 0x90e10c8 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CXXOperatorCallExpr 0x90e11f8 <col:23, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x90e11b0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x90e1128 <col:23, col:34> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e10f0 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x90e10e0 <col:23> 'basic_streambuf<_CharT, _Traits> *' this)))
        (CallExpr 0x90e1190 <col:38, col:50> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e1158 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x90e1148 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))))
      (CXXBoolLiteralExpr 0x90e1220 <col:53> '_Bool' true))
    (CompoundStmt 0x90e1448 <line:407:4, line:411:4>
      (BinaryOperator 0x90e12f0 <line:408:6, col:22> '<dependent type>' '='
        (UnaryOperator 0x90e12c0 <col:6, col:18> '<dependent type>' prefix '*'
          (CallExpr 0x90e12a0 <col:7, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90e1268 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x90e1258 <col:7> 'basic_streambuf<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x90e12d4 <col:22> 'char_type':'_CharT' lvalue ParmVar 0x8cd9250 '__c' 'char_type':'_CharT'))
      (CallExpr 0x90e1368 <line:409:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e1318 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x90e1308 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x90e1350 <col:18> 'int' 1))
      (BinaryOperator 0x90e1430 <line:410:6, col:42> '<dependent type>' '='
        (DeclRefExpr 0x90e1388 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e1080 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x90e1410 <col:14, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e13c0 <col:14, col:27> '<dependent type>' lvalue)
          (DeclRefExpr 0x90e13f4 <col:39> 'char_type':'_CharT' lvalue ParmVar 0x8cd9250 '__c' 'char_type':'_CharT'))))
    (BinaryOperator 0x90e1578 <line:413:4, col:56> '<dependent type>' '='
      (DeclRefExpr 0x90e1464 <col:4> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e1080 '__ret' 'int_type':'typename traits_type::int_type')
      (CallExpr 0x90e1558 <col:12, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e1490 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x90e1480 <col:12> 'basic_streambuf<_CharT, _Traits> *' this))
        (CallExpr 0x90e1538 <col:27, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e14e8 <col:27, col:40> '<dependent type>' lvalue)
          (DeclRefExpr 0x90e151c <col:52> 'char_type':'_CharT' lvalue ParmVar 0x8cd9250 '__c' 'char_type':'_CharT')))))
  (ReturnStmt 0x90e15c8 <line:414:2, col:9>
    (DeclRefExpr 0x90e15ac <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e1080 '__ret' 'int_type':'typename traits_type::int_type')))


        streamsize sputn(const char_type *__s, streamsize __n) (CompoundStmt 0x90e16a8 </usr/include/c++/4.6/streambuf:430:7, col:40>
  (ReturnStmt 0x90e1698 <col:9, col:37>
    (CallExpr 0x90e1670 <col:16, col:37> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e1608 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x90e15f8 <col:16> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x90e163c <col:29> 'const char_type *' lvalue ParmVar 0x8cd9340 '__s' 'const char_type *')
      (DeclRefExpr 0x90e1654 <col:34> 'streamsize':'int' lvalue ParmVar 0x8cd9380 '__n' 'streamsize':'int'))))


    protected:
    protected:
        basic_streambuf<_CharT, _Traits>() : _M_in_beg((IntegerLiteral 0x90e16c0 </usr/include/c++/4.6/streambuf:443:19> 'int' 0)
), _M_in_cur((IntegerLiteral 0x90e1718 </usr/include/c++/4.6/streambuf:443:33> 'int' 0)
), _M_in_end((IntegerLiteral 0x90e1768 </usr/include/c++/4.6/streambuf:443:47> 'int' 0)
), _M_out_beg((IntegerLiteral 0x90e17b8 </usr/include/c++/4.6/streambuf:444:18> 'int' 0)
), _M_out_cur((IntegerLiteral 0x90e1808 </usr/include/c++/4.6/streambuf:444:33> 'int' 0)
), _M_out_end((IntegerLiteral 0x90e1858 </usr/include/c++/4.6/streambuf:444:48> 'int' 0)
), _M_buf_locale((CXXBindTemporaryExpr 0x90e18e8 </usr/include/c++/4.6/streambuf:445:21, col:28> 'class std::locale' (CXXTemporary 0x90e18e0)
  (CXXTemporaryObjectExpr 0x90e18b0 <col:21, col:28> 'class std::locale''void (void) throw()'))
) (CompoundStmt 0x90e19b8 </usr/include/c++/4.6/streambuf:446:7, col:9>)


        char_type *eback() const (CompoundStmt 0x90e1a08 </usr/include/c++/4.6/streambuf:461:21, col:41>
  (ReturnStmt 0x90e19f8 <col:23, col:30>
    (MemberExpr 0x90e19d8 <col:30> 'char_type *const' lvalue ->_M_in_beg 0x8cd5910
      (CXXThisExpr 0x90e19c8 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *gptr() const (CompoundStmt 0x90e1a60 </usr/include/c++/4.6/streambuf:464:21, col:42>
  (ReturnStmt 0x90e1a50 <col:23, col:30>
    (MemberExpr 0x90e1a30 <col:30> 'char_type *const' lvalue ->_M_in_cur 0x8cd5950
      (CXXThisExpr 0x90e1a20 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *egptr() const (CompoundStmt 0x90e1ab8 </usr/include/c++/4.6/streambuf:467:21, col:41>
  (ReturnStmt 0x90e1aa8 <col:23, col:30>
    (MemberExpr 0x90e1a88 <col:30> 'char_type *const' lvalue ->_M_in_end 0x8cd5990
      (CXXThisExpr 0x90e1a78 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void gbump(int __n) (CompoundStmt 0x90e1b38 </usr/include/c++/4.6/streambuf:477:22, col:42>
  (CompoundAssignOperator 0x90e1b18 <col:24, col:37> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x90e1ae0 <col:24> 'char_type *' lvalue ->_M_in_cur 0x8cd5950
      (CXXThisExpr 0x90e1ad0 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1b00 <col:37> 'int' lvalue ParmVar 0x8cd9710 '__n' 'int')))


        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend) (CompoundStmt 0x90e1c70 </usr/include/c++/4.6/streambuf:489:7, line:493:7>
  (BinaryOperator 0x90e1b98 <line:490:2, col:14> '<dependent type>' '='
    (MemberExpr 0x90e1b60 <col:2> 'char_type *' lvalue ->_M_in_beg 0x8cd5910
      (CXXThisExpr 0x90e1b50 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1b80 <col:14> 'char_type *' lvalue ParmVar 0x8cd97e0 '__gbeg' 'char_type *'))
  (BinaryOperator 0x90e1bf8 <line:491:2, col:14> '<dependent type>' '='
    (MemberExpr 0x90e1bc0 <col:2> 'char_type *' lvalue ->_M_in_cur 0x8cd5950
      (CXXThisExpr 0x90e1bb0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1be0 <col:14> 'char_type *' lvalue ParmVar 0x8cd9830 '__gnext' 'char_type *'))
  (BinaryOperator 0x90e1c58 <line:492:2, col:14> '<dependent type>' '='
    (MemberExpr 0x90e1c20 <col:2> 'char_type *' lvalue ->_M_in_end 0x8cd5990
      (CXXThisExpr 0x90e1c10 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1c40 <col:14> 'char_type *' lvalue ParmVar 0x8cd9880 '__gend' 'char_type *')))


        char_type *pbase() const (CompoundStmt 0x90e1cd0 </usr/include/c++/4.6/streambuf:508:21, col:42>
  (ReturnStmt 0x90e1cc0 <col:23, col:30>
    (MemberExpr 0x90e1ca0 <col:30> 'char_type *const' lvalue ->_M_out_beg 0x8cd59d0
      (CXXThisExpr 0x90e1c90 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *pptr() const (CompoundStmt 0x90e1d28 </usr/include/c++/4.6/streambuf:511:20, col:41>
  (ReturnStmt 0x90e1d18 <col:22, col:29>
    (MemberExpr 0x90e1cf8 <col:29> 'char_type *const' lvalue ->_M_out_cur 0x8cd5a10
      (CXXThisExpr 0x90e1ce8 <col:29> 'const basic_streambuf<_CharT, _Traits> *' this))))


        char_type *epptr() const (CompoundStmt 0x90e1d80 </usr/include/c++/4.6/streambuf:514:21, col:42>
  (ReturnStmt 0x90e1d70 <col:23, col:30>
    (MemberExpr 0x90e1d50 <col:30> 'char_type *const' lvalue ->_M_out_end 0x8cd5a50
      (CXXThisExpr 0x90e1d40 <col:30> 'const basic_streambuf<_CharT, _Traits> *' this))))


        void pbump(int __n) (CompoundStmt 0x90e1e00 </usr/include/c++/4.6/streambuf:524:22, col:43>
  (CompoundAssignOperator 0x90e1de0 <col:24, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x90e1da8 <col:24> 'char_type *' lvalue ->_M_out_cur 0x8cd5a10
      (CXXThisExpr 0x90e1d98 <col:24> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1dc8 <col:38> 'int' lvalue ParmVar 0x8cd9b10 '__n' 'int')))


        void setp(char_type *__pbeg, char_type *__pend) (CompoundStmt 0x90e1f20 </usr/include/c++/4.6/streambuf:535:7, line:538:7>
  (BinaryOperator 0x90e1ea8 <line:536:2, col:28> '<dependent type>' '='
    (MemberExpr 0x90e1e28 <col:2> 'char_type *' lvalue ->_M_out_beg 0x8cd59d0
      (CXXThisExpr 0x90e1e18 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (BinaryOperator 0x90e1e90 <col:15, col:28> '<dependent type>' '='
      (MemberExpr 0x90e1e58 <col:15> 'char_type *' lvalue ->_M_out_cur 0x8cd5a10
        (CXXThisExpr 0x90e1e48 <col:15> 'basic_streambuf<_CharT, _Traits> *' this))
      (DeclRefExpr 0x90e1e78 <col:28> 'char_type *' lvalue ParmVar 0x8cd9be0 '__pbeg' 'char_type *')))
  (BinaryOperator 0x90e1f08 <line:537:2, col:15> '<dependent type>' '='
    (MemberExpr 0x90e1ed0 <col:2> 'char_type *' lvalue ->_M_out_end 0x8cd5a50
      (CXXThisExpr 0x90e1ec0 <col:2> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e1ef0 <col:15> 'char_type *' lvalue ParmVar 0x8cd9c30 '__pend' 'char_type *')))


        virtual void imbue(const std::locale &) (CompoundStmt 0x90e1f38 </usr/include/c++/4.6/streambuf:556:7, col:9>)


        virtual basic_streambuf<char_type, _Traits> *setbuf(char_type *, streamsize) (CompoundStmt 0x90e1f68 </usr/include/c++/4.6/streambuf:571:7, col:22>
  (ReturnStmt 0x90e1f58 <col:9, col:16>
    (CXXThisExpr 0x90e1f48 <col:16> 'basic_streambuf<_CharT, _Traits> *' this)))


        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (CXXOperatorCallExpr 0x8cdb1a0 </usr/include/c++/4.6/streambuf:582:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x8cdb190 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x8cdb178 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x8cdb158 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb0f4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x8cdb168 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb134 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x90e2010 </usr/include/c++/4.6/streambuf:583:7, col:40>
  (ReturnStmt 0x90e2000 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x90e1fe0 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x90e1fc0 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x90e1fa8 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x90e1f90 <col:35> 'int' 1))))))


        virtual pos_type seekpos(pos_type, ios_base::openmode = (CXXOperatorCallExpr 0x8cdb290 </usr/include/c++/4.6/streambuf:594:40, col:65> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x8cdb280 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x8cdb268 <col:53, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x8cdb248 <col:40, col:50> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb1e4 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x8cdb258 <col:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x8cdb224 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x90e20b8 </usr/include/c++/4.6/streambuf:595:7, col:40>
  (ReturnStmt 0x90e20a8 <col:9, col:37>
    (CXXUnresolvedConstructExpr 0x90e2088 <col:16, col:37> 'pos_type':'typename traits_type::pos_type'
      (CXXUnresolvedConstructExpr 0x90e2068 <col:25, col:36> 'off_type':'typename traits_type::off_type'
        (UnaryOperator 0x90e2050 <col:34, col:35> 'int' prefix '-'
          (IntegerLiteral 0x90e2038 <col:35> 'int' 1))))))


        virtual int sync() (CompoundStmt 0x90e20f8 </usr/include/c++/4.6/streambuf:606:14, col:26>
  (ReturnStmt 0x90e20e8 <col:16, col:23>
    (IntegerLiteral 0x90e20d0 <col:23> 'int' 0)))


        virtual streamsize showmanyc() (CompoundStmt 0x90e2138 </usr/include/c++/4.6/streambuf:628:19, col:31>
  (ReturnStmt 0x90e2128 <col:21, col:28>
    (IntegerLiteral 0x90e2110 <col:28> 'int' 0)))


        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow() (CompoundStmt 0x90e21d8 </usr/include/c++/4.6/streambuf:667:7, col:36>
  (ReturnStmt 0x90e21c8 <col:9, col:33>
    (CallExpr 0x90e21a8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e2170 <col:16, col:29> '<dependent type>' lvalue))))


        virtual int_type uflow() (CompoundStmt 0x90e2660 </usr/include/c++/4.6/streambuf:680:7, line:690:7>
  (DeclStmt 0x90e22b0 <line:681:2, col:37>
    0x90e2200 "int_type __ret =
      (CallExpr 0x90e2290 <col:19, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e2258 <col:19, col:32> '<dependent type>' lvalue))")
  (DeclStmt 0x90e2408 <line:682:2, line:683:14>
    0x90e22d0 "const bool __testeof =
      (CallExpr 0x90e23e0 <line:682:25, line:683:13> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e2328 <line:682:25, col:38> '<dependent type>' lvalue)
        (CallExpr 0x90e23a8 <col:50, col:66> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e2370 <col:50, col:56> '<dependent type>' lvalue
            (CXXThisExpr 0x90e2360 <col:50> 'basic_streambuf<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x90e23c4 <line:683:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e2200 '__ret' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x90e2618 <line:684:2, line:688:4>
    <<<NULL>>>
    (UnaryOperator 0x90e2440 <line:684:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x90e2430 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x90e2418 <col:7> 'const _Bool' lvalue Var 0x90e22d0 '__testeof' 'const _Bool')))
    (CompoundStmt 0x90e2600 <line:685:4, line:688:4>
      (BinaryOperator 0x90e2568 <line:686:6, col:52> '<dependent type>' '='
        (DeclRefExpr 0x90e2454 <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e2200 '__ret' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x90e2548 <col:14, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e2490 <col:14, col:27> '<dependent type>' lvalue)
          (UnaryOperator 0x90e2530 <col:39, col:51> '<dependent type>' prefix '*'
            (CallExpr 0x90e2510 <col:40, col:51> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e24d8 <col:40, col:46> '<dependent type>' lvalue
                (CXXThisExpr 0x90e24c8 <col:40> 'basic_streambuf<_CharT, _Traits> *' this))))))
      (CallExpr 0x90e25e0 <line:687:6, col:19> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e2590 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x90e2580 <col:6> 'basic_streambuf<_CharT, _Traits> *' this))
        (IntegerLiteral 0x90e25c8 <col:18> 'int' 1)))
    <<<NULL>>>)
  (ReturnStmt 0x90e2650 <line:689:2, col:9>
    (DeclRefExpr 0x90e2634 <col:9> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e2200 '__ret' 'int_type':'typename traits_type::int_type')))


        virtual int_type pbackfail(int_type = (CallExpr 0x8cdb300 </usr/include/c++/4.6/streambuf:703:39, col:56> '<dependent type>'
  (DependentScopeDeclRefExpr 0x8cdb2d8 <col:39, col:52> '<dependent type>' lvalue))
) (CompoundStmt 0x90e2708 </usr/include/c++/4.6/streambuf:704:7, col:36>
  (ReturnStmt 0x90e26f8 <col:9, col:33>
    (CallExpr 0x90e26d8 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e26a0 <col:16, col:29> '<dependent type>' lvalue))))


        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type = (CallExpr 0x8cdb368 </usr/include/c++/4.6/streambuf:747:37, col:54> '<dependent type>'
  (DependentScopeDeclRefExpr 0x8cdb340 <col:37, col:50> '<dependent type>' lvalue))
) (CompoundStmt 0x90e27a8 </usr/include/c++/4.6/streambuf:748:7, col:36>
  (ReturnStmt 0x90e2798 <col:9, col:33>
    (CallExpr 0x90e2778 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e2740 <col:16, col:29> '<dependent type>' lvalue))))


    public:
    public:
        void stossc() (CompoundStmt 0x90e2a08 </usr/include/c++/4.6/streambuf:763:7, line:768:7>
  (IfStmt 0x90e29e8 <line:764:2, line:767:16>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x90e28d8 <line:764:6, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x90e2890 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (CallExpr 0x90e2808 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e27d0 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x90e27c0 <col:6> 'basic_streambuf<_CharT, _Traits> *' this)))
      (CallExpr 0x90e2870 <col:21, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e2838 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x90e2828 <col:21> 'basic_streambuf<_CharT, _Traits> *' this))))
    (CallExpr 0x90e2960 <line:765:4, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e2910 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x90e2900 <col:4> 'basic_streambuf<_CharT, _Traits> *' this))
      (IntegerLiteral 0x90e2948 <col:16> 'int' 1))
    (CallExpr 0x90e29c8 <line:767:4, col:16> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x90e2990 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x90e2980 <col:4> 'basic_streambuf<_CharT, _Traits> *' this)))))


        void __safe_gbump(streamsize __n) (CompoundStmt 0x90e2a88 </usr/include/c++/4.6/streambuf:773:36, col:56>
  (CompoundAssignOperator 0x90e2a68 <col:38, col:51> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x90e2a30 <col:38> 'char_type *' lvalue ->_M_in_cur 0x8cd5950
      (CXXThisExpr 0x90e2a20 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e2a50 <col:51> 'streamsize':'int' lvalue ParmVar 0x8cdaa50 '__n' 'streamsize':'int')))


        void __safe_pbump(streamsize __n) (CompoundStmt 0x90e2b08 </usr/include/c++/4.6/streambuf:776:36, col:57>
  (CompoundAssignOperator 0x90e2ae8 <col:38, col:52> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (MemberExpr 0x90e2ab0 <col:38> 'char_type *' lvalue ->_M_out_cur 0x8cd5a10
      (CXXThisExpr 0x90e2aa0 <col:38> 'basic_streambuf<_CharT, _Traits> *' this))
    (DeclRefExpr 0x90e2ad0 <col:52> 'streamsize':'int' lvalue ParmVar 0x8cdab40 '__n' 'streamsize':'int')))


    private:
    private:
        basic_streambuf<_CharT, _Traits>(const __streambuf_type &__sb) : _M_in_beg((CXXDependentScopeMemberExpr 0x90e2b38 </usr/include/c++/4.6/streambuf:782:19, col:24> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2b1c <col:19> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_in_cur((CXXDependentScopeMemberExpr 0x90e2bc0 </usr/include/c++/4.6/streambuf:782:46, col:51> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2ba8 <col:46> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_in_end((CXXDependentScopeMemberExpr 0x90e2c50 </usr/include/c++/4.6/streambuf:783:17, col:22> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2c38 <col:17> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_out_beg((CXXDependentScopeMemberExpr 0x90e2ce0 </usr/include/c++/4.6/streambuf:783:45, col:50> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2cc8 <col:45> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_out_cur((CXXDependentScopeMemberExpr 0x90e2d70 </usr/include/c++/4.6/streambuf:784:18, col:23> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2d58 <col:18> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_out_end((CXXDependentScopeMemberExpr 0x90e2e00 </usr/include/c++/4.6/streambuf:784:47, col:52> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2de8 <col:47> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
), _M_buf_locale((CXXDependentScopeMemberExpr 0x90e2e90 </usr/include/c++/4.6/streambuf:785:21, col:26> '<dependent type>' lvalue
  (DeclRefExpr 0x90e2e78 <col:21> 'const __streambuf_type':'const basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x8cdac90 '__sb' 'const __streambuf_type &'))
) (CompoundStmt 0x90e2f28 </usr/include/c++/4.6/streambuf:786:7, col:9>)


        __streambuf_type &operator=(const __streambuf_type &) (CompoundStmt 0x90e2f70 </usr/include/c++/4.6/streambuf:789:42, col:58>
  (ReturnStmt 0x90e2f60 <col:44, col:52>
    (UnaryOperator 0x90e2f48 <col:51, col:52> '<dependent type>' prefix '*'
      (CXXThisExpr 0x90e2f38 <col:52> 'basic_streambuf<_CharT, _Traits> *' this))))


    };
    streamsize __copy_streambufs_eof(basic_streambuf<char> *__sbin, basic_streambuf<char> *__sbout, bool &__ineof);
    streamsize __copy_streambufs_eof(basic_streambuf<wchar_t> *__sbin, basic_streambuf<wchar_t> *__sbout, bool &__ineof);
}
namespace std {
    streamsize xsgetn(char_type *__s, streamsize __n) (CompoundStmt 0x90e6b48 </usr/include/c++/4.6/bits/streambuf.tcc:47:5, line:75:5>
  (DeclStmt 0x90e4450 <line:48:7, col:27>
    0x90e4400 "streamsize __ret =
      (IntegerLiteral 0x90e4438 <col:26> 'int' 0)")
  (WhileStmt 0x90e6af8 <line:49:7, line:73:2>
    <<<NULL>>>
    (BinaryOperator 0x90e44b0 <line:49:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x90e4490 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x90e4460 <col:14> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x90e44a0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x90e4478 <col:22> 'streamsize':'int' lvalue ParmVar 0x90e4300 '__n' 'streamsize':'int')))
    (CompoundStmt 0x90e6ad8 <line:50:2, line:73:2>
      (DeclStmt 0x90e4638 <line:51:4, col:61>
        0x90e44d0 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x90e4610 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x90e45d8 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (CallExpr 0x90e4550 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e4518 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x90e4508 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x90e45b8 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e4580 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x90e4570 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x90e6648 <line:52:4, line:60:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x90e4670 <line:52:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x90e4660 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e4648 <col:8> 'const streamsize':'const int' lvalue Var 0x90e44d0 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x90e4d30 <line:53:6, line:60:6>
          (DeclStmt 0x90e4730 <line:54:8, col:50>
            0x90e4690 "const streamsize __remaining =
              (BinaryOperator 0x90e4718 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x90e46f8 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x90e46c4 <col:39> 'streamsize':'int' lvalue ParmVar 0x90e4300 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x90e4708 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x90e46dc <col:45> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x90e4ad0 <line:55:8, col:65>
            0x90e4750 "const streamsize __len =
              (ImplicitCastExpr 0x90e4ac0 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x90e4a98 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x90e4a88 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x90e4a28 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x90e4980 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x8e798b0 'min')))
                  (DeclRefExpr 0x90e47e0 <col:42> 'const streamsize':'const int' lvalue Var 0x90e44d0 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x90e47f8 <col:53> 'const streamsize':'const int' lvalue Var 0x90e4690 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x90e4bd8 <line:56:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90e4b08 <col:8, col:21> '<dependent type>' lvalue)
            (DeclRefExpr 0x90e4b3c <col:26> 'char_type *' lvalue ParmVar 0x90e42c0 '__s' 'char_type *')
            (CallExpr 0x90e4ba0 <col:31, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e4b68 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x90e4b58 <col:31> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x90e4bbc <col:45> 'const streamsize':'const int' lvalue Var 0x90e4750 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x90e4c40 <line:57:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x90e4c00 <col:8> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x90e4c30 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x90e4c18 <col:17> 'const streamsize':'const int' lvalue Var 0x90e4750 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x90e4c90 <line:58:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x90e4c60 <col:8> 'char_type *' lvalue ParmVar 0x90e42c0 '__s' 'char_type *')
            (DeclRefExpr 0x90e4c78 <col:15> 'const streamsize':'const int' lvalue Var 0x90e4750 '__len' 'const streamsize':'const int'))
          (CallExpr 0x90e4d10 <line:59:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90e4cc0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x90e4cb0 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x90e4cf4 <col:27> 'const streamsize':'const int' lvalue Var 0x90e4750 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x90e6ab8 <line:62:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x90e66b8 <line:62:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x90e6698 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e6664 <col:8> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x90e66a8 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e667c <col:16> 'streamsize':'int' lvalue ParmVar 0x90e4300 '__n' 'streamsize':'int')))
        (CompoundStmt 0x90e6aa0 <line:63:6, line:72:6>
          (DeclStmt 0x90e6780 <line:64:8, col:42>
            0x90e66e0 "const int_type __c =
              (CallExpr 0x90e6760 <col:29, col:41> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90e6728 <col:29, col:35> '<dependent type>' lvalue
                  (CXXThisExpr 0x90e6718 <col:29> 'basic_streambuf<_CharT, _Traits> *' this)))")
          (IfStmt 0x90e6a80 <line:65:8, line:71:3>
            <<<NULL>>>
            (UnaryOperator 0x90e68a0 <line:65:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x90e6878 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90e67b0 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x90e67e4 <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x90e66e0 '__c' 'const int_type':'const typename traits_type::int_type')
                (CallExpr 0x90e6858 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x90e6820 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x90e6a60 <line:66:3, line:69:3>
              (CallExpr 0x90e6a08 <line:67:5, col:63> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90e68e0 <col:5, col:18> '<dependent type>' lvalue)
                (UnaryOperator 0x90e6960 <col:25, col:29> '<dependent type>' prefix '*'
                  (UnaryOperator 0x90e6948 <col:26, col:29> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x90e6914 <col:26> 'char_type *' lvalue ParmVar 0x90e42c0 '__s' 'char_type *')))
                (CallExpr 0x90e69e8 <col:33, col:62> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x90e6998 <col:33, col:46> '<dependent type>' lvalue)
                  (DeclRefExpr 0x90e69cc <col:59> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x90e66e0 '__c' 'const int_type':'const typename traits_type::int_type')))
              (UnaryOperator 0x90e6a48 <line:68:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x90e6a2c <col:7> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int')))
            (BreakStmt 0x90e6a78 <line:71:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x90e6b38 <line:74:7, col:14>
    (ImplicitCastExpr 0x90e6b28 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90e6b0c <col:14> 'streamsize':'int' lvalue Var 0x90e4400 '__ret' 'streamsize':'int'))))


    streamsize xsputn(const char_type *__s, streamsize __n) (CompoundStmt 0x90e7ad8 </usr/include/c++/4.6/bits/streambuf.tcc:81:5, line:109:5>
  (DeclStmt 0x90e6fa0 <line:82:7, col:27>
    0x90e6f50 "streamsize __ret =
      (IntegerLiteral 0x90e6f88 <col:26> 'int' 0)")
  (WhileStmt 0x90e7a88 <line:83:7, line:107:2>
    <<<NULL>>>
    (BinaryOperator 0x90e7000 <line:83:14, col:22> '_Bool' '<'
      (ImplicitCastExpr 0x90e6fe0 <col:14> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x90e6fb0 <col:14> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int'))
      (ImplicitCastExpr 0x90e6ff0 <col:22> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x90e6fc8 <col:22> 'streamsize':'int' lvalue ParmVar 0x90e6e50 '__n' 'streamsize':'int')))
    (CompoundStmt 0x90e7a68 <line:84:2, line:107:2>
      (DeclStmt 0x90e7188 <line:85:4, col:61>
        0x90e7020 "const streamsize __buf_len =
          (CXXOperatorCallExpr 0x90e7160 <col:33, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x90e7128 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (CallExpr 0x90e70a0 <col:33, col:45> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e7068 <col:33, col:39> '<dependent type>' lvalue
                (CXXThisExpr 0x90e7058 <col:33> 'basic_streambuf<_CharT, _Traits> *' this)))
            (CallExpr 0x90e7108 <col:49, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e70d0 <col:49, col:55> '<dependent type>' lvalue
                (CXXThisExpr 0x90e70c0 <col:49> 'basic_streambuf<_CharT, _Traits> *' this))))")
      (IfStmt 0x90e7680 <line:86:4, line:94:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x90e71c0 <line:86:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x90e71b0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e7198 <col:8> 'const streamsize':'const int' lvalue Var 0x90e7020 '__buf_len' 'const streamsize':'const int')))
        (CompoundStmt 0x90e7658 <line:87:6, line:94:6>
          (DeclStmt 0x90e7280 <line:88:8, col:50>
            0x90e71e0 "const streamsize __remaining =
              (BinaryOperator 0x90e7268 <col:39, col:45> 'int' '-'
                (ImplicitCastExpr 0x90e7248 <col:39> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x90e7214 <col:39> 'streamsize':'int' lvalue ParmVar 0x90e6e50 '__n' 'streamsize':'int'))
                (ImplicitCastExpr 0x90e7258 <col:45> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x90e722c <col:45> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int')))")
          (DeclStmt 0x90e73f8 <line:89:8, col:65>
            0x90e72a0 "const streamsize __len =
              (ImplicitCastExpr 0x90e73e8 <col:33, col:64> 'int':'int' <LValueToRValue>
                (CallExpr 0x90e73c0 <col:33, col:64> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x90e73b0 <col:33, col:38> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x90e7388 <col:33, col:38> 'const int &(const int &, const int &)' lvalue Function 0x90e4980 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x8e798b0 'min')))
                  (DeclRefExpr 0x90e7328 <col:42> 'const streamsize':'const int' lvalue Var 0x90e7020 '__buf_len' 'const streamsize':'const int')
                  (DeclRefExpr 0x90e7340 <col:53> 'const streamsize':'const int' lvalue Var 0x90e71e0 '__remaining' 'const streamsize':'const int')))")
          (CallExpr 0x90e7500 <line:90:8, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90e7430 <col:8, col:21> '<dependent type>' lvalue)
            (CallExpr 0x90e74b0 <col:26, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x90e7478 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x90e7468 <col:26> 'basic_streambuf<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x90e74cc <col:40> 'const char_type *' lvalue ParmVar 0x90e6e10 '__s' 'const char_type *')
            (DeclRefExpr 0x90e74e4 <col:45> 'const streamsize':'const int' lvalue Var 0x90e72a0 '__len' 'const streamsize':'const int'))
          (CompoundAssignOperator 0x90e7568 <line:91:8, col:17> 'streamsize':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x90e7528 <col:8> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int')
            (ImplicitCastExpr 0x90e7558 <col:17> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x90e7540 <col:17> 'const streamsize':'const int' lvalue Var 0x90e72a0 '__len' 'const streamsize':'const int')))
          (CompoundAssignOperator 0x90e75b8 <line:92:8, col:15> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x90e7588 <col:8> 'const char_type *' lvalue ParmVar 0x90e6e10 '__s' 'const char_type *')
            (DeclRefExpr 0x90e75a0 <col:15> 'const streamsize':'const int' lvalue Var 0x90e72a0 '__len' 'const streamsize':'const int'))
          (CallExpr 0x90e7638 <line:93:8, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x90e75e8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x90e75d8 <col:8> 'basic_streambuf<_CharT, _Traits> *' this))
            (DeclRefExpr 0x90e761c <col:27> 'const streamsize':'const int' lvalue Var 0x90e72a0 '__len' 'const streamsize':'const int')))
        <<<NULL>>>)
      (IfStmt 0x90e7a48 <line:96:4, line:106:6>
        <<<NULL>>>
        (BinaryOperator 0x90e76f0 <line:96:8, col:16> '_Bool' '<'
          (ImplicitCastExpr 0x90e76d0 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e769c <col:8> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int'))
          (ImplicitCastExpr 0x90e76e0 <col:16> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x90e76b4 <col:16> 'streamsize':'int' lvalue ParmVar 0x90e6e50 '__n' 'streamsize':'int')))
        (CompoundStmt 0x90e7a30 <line:97:6, line:106:6>
          (DeclStmt 0x90e7858 <line:98:8, col:69>
            0x90e7710 "int_type __c =
              (CallExpr 0x90e7838 <col:23, col:68> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90e7758 <col:23, col:29> '<dependent type>' lvalue
                  (CXXThisExpr 0x90e7748 <col:23> 'basic_streambuf<_CharT, _Traits> *' this))
                (CallExpr 0x90e7818 <col:38, col:67> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x90e77b0 <col:38, col:51> '<dependent type>' lvalue)
                  (UnaryOperator 0x90e7800 <col:63, col:64> '<dependent type>' prefix '*'
                    (DeclRefExpr 0x90e77e4 <col:64> 'const char_type *' lvalue ParmVar 0x90e6e10 '__s' 'const char_type *'))))")
          (IfStmt 0x90e7a10 <line:99:8, line:105:3>
            <<<NULL>>>
            (UnaryOperator 0x90e7978 <line:99:12, col:61> '<dependent type>' prefix '!'
              (CallExpr 0x90e7950 <col:13, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x90e7888 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x90e78bc <col:38> 'int_type':'typename traits_type::int_type' lvalue Var 0x90e7710 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x90e7930 <col:43, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x90e78f8 <col:43, col:56> '<dependent type>' lvalue))))
            (CompoundStmt 0x90e79f0 <line:100:3, line:103:3>
              (UnaryOperator 0x90e79a8 <line:101:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x90e798c <col:7> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int'))
              (UnaryOperator 0x90e79d8 <line:102:5, col:7> '<dependent type>' prefix '++'
                (DeclRefExpr 0x90e79bc <col:7> 'const char_type *' lvalue ParmVar 0x90e6e10 '__s' 'const char_type *')))
            (BreakStmt 0x90e7a08 <line:105:3>)))
        <<<NULL>>>)))
  (ReturnStmt 0x90e7ac8 <line:108:7, col:14>
    (ImplicitCastExpr 0x90e7ab8 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90e7a9c <col:14> 'streamsize':'int' lvalue Var 0x90e6f50 '__ret' 'streamsize':'int'))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT = char, typename _Traits = std::char_traits<char>> streamsize __copy_streambufs_eof(__streambuf_type *, __streambuf_type *, bool &)template <typename _CharT, typename _Traits> streamsize __copy_streambufs_eof(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout, bool &__ineof) (CompoundStmt 0x90e8678 </usr/include/c++/4.6/bits/streambuf.tcc:119:5, line:135:5>
  (DeclStmt 0x90e8020 <line:120:7, col:27>
    0x90e7fd0 "streamsize __ret =
      (IntegerLiteral 0x90e8008 <col:26> 'int' 0)")
  (BinaryOperator 0x90e8058 <line:121:7, col:17> '_Bool' lvalue '='
    (DeclRefExpr 0x90e8030 <col:7> '_Bool' lvalue ParmVar 0x90e7ea0 '__ineof' '_Bool &')
    (CXXBoolLiteralExpr 0x90e8048 <col:17> '_Bool' true))
  (DeclStmt 0x90e8188 <line:122:7, col:55>
    0x90e80e0 "typename _Traits::int_type __c =
      (CallExpr 0x90e8168 <col:40, col:54> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x90e8130 <col:40, col:48> '<dependent type>' lvalue
          (DeclRefExpr 0x90e8114 <col:40> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x90e7ce0 '__sbin' 'basic_streambuf<_CharT, _Traits> *')))")
  (WhileStmt 0x90e8628 <line:123:7, line:133:2>
    <<<NULL>>>
    (UnaryOperator 0x90e8288 <line:123:14, col:55> '<dependent type>' prefix '!'
      (CallExpr 0x90e8260 <col:15, col:55> '<dependent type>'
        (DependentScopeDeclRefExpr 0x90e81b8 <col:15, col:24> '<dependent type>' lvalue)
        (DeclRefExpr 0x90e81dc <col:36> 'typename _Traits::int_type' lvalue Var 0x90e80e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x90e8240 <col:41, col:54> '<dependent type>'
          (DependentScopeDeclRefExpr 0x90e8218 <col:41, col:50> '<dependent type>' lvalue))))
    (CompoundStmt 0x90e8608 <line:124:2, line:133:2>
      (BinaryOperator 0x90e83a8 <line:125:4, col:51> '<dependent type>' '='
        (DeclRefExpr 0x90e829c <col:4> 'typename _Traits::int_type' lvalue Var 0x90e80e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x90e8388 <col:10, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e82d0 <col:10, col:19> '<dependent type>' lvalue
            (DeclRefExpr 0x90e82b4 <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x90e7e50 '__sbout' 'basic_streambuf<_CharT, _Traits> *'))
          (CallExpr 0x90e8368 <col:25, col:50> '<dependent type>'
            (DependentScopeDeclRefExpr 0x90e8328 <col:25, col:34> '<dependent type>' lvalue)
            (DeclRefExpr 0x90e834c <col:47> 'typename _Traits::int_type' lvalue Var 0x90e80e0 '__c' 'typename _Traits::int_type'))))
      (IfStmt 0x90e8518 <line:126:4, line:130:6>
        <<<NULL>>>
        (CallExpr 0x90e8490 <line:126:8, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x90e83e8 <col:8, col:17> '<dependent type>' lvalue)
          (DeclRefExpr 0x90e840c <col:29> 'typename _Traits::int_type' lvalue Var 0x90e80e0 '__c' 'typename _Traits::int_type')
          (CallExpr 0x90e8470 <col:34, col:47> '<dependent type>'
            (DependentScopeDeclRefExpr 0x90e8448 <col:34, col:43> '<dependent type>' lvalue)))
        (CompoundStmt 0x90e8500 <line:127:6, line:130:6>
          (BinaryOperator 0x90e84e0 <line:128:8, col:18> '_Bool' lvalue '='
            (DeclRefExpr 0x90e84b4 <col:8> '_Bool' lvalue ParmVar 0x90e7ea0 '__ineof' '_Bool &')
            (CXXBoolLiteralExpr 0x90e84d0 <col:18> '_Bool' false))
          (BreakStmt 0x90e84f8 <line:129:8>))
        <<<NULL>>>)
      (UnaryOperator 0x90e8550 <line:131:4, col:6> 'streamsize':'int' lvalue prefix '++'
        (DeclRefExpr 0x90e8534 <col:6> 'streamsize':'int' lvalue Var 0x90e7fd0 '__ret' 'streamsize':'int'))
      (BinaryOperator 0x90e85f0 <line:132:4, col:25> '<dependent type>' '='
        (DeclRefExpr 0x90e8564 <col:4> 'typename _Traits::int_type' lvalue Var 0x90e80e0 '__c' 'typename _Traits::int_type')
        (CallExpr 0x90e85d0 <col:10, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x90e8598 <col:10, col:18> '<dependent type>' lvalue
            (DeclRefExpr 0x90e857c <col:10> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x90e7ce0 '__sbin' 'basic_streambuf<_CharT, _Traits> *'))))))
  (ReturnStmt 0x90e8668 <line:134:7, col:14>
    (ImplicitCastExpr 0x90e8658 <col:14> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x90e863c <col:14> 'streamsize':'int' lvalue Var 0x90e7fd0 '__ret' 'streamsize':'int'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline streamsize __copy_streambufs(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbin, basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sbout)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline streamsize __copy_streambufs(basic_streambuf<char, std::char_traits<char> > *__sbin, basic_streambuf<char, std::char_traits<char> > *__sbout)template <typename _CharT, typename _Traits> inline streamsize __copy_streambufs(basic_streambuf<_CharT, _Traits> *__sbin, basic_streambuf<_CharT, _Traits> *__sbout) (CompoundStmt 0x90e8c30 </usr/include/c++/4.6/bits/streambuf.tcc:141:5, line:144:5>
  (DeclStmt 0x90e8b68 <line:142:7, col:19>
    0x90e8b30 "bool __ineof")
  (ReturnStmt 0x90e8c20 <line:143:7, col:60>
    (CallExpr 0x90e8bf8 <col:14, col:60> '<dependent type>'
      (UnresolvedLookupExpr 0x90e8b78 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x90e7f90)
      (DeclRefExpr 0x90e8bac <col:36> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x90e8880 '__sbin' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x90e8bc4 <col:44> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x90e89f0 '__sbout' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x90e8bdc <col:53> '_Bool' lvalue Var 0x90e8b30 '__ineof' '_Bool'))))

;
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<char> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
    class basic_streambuf {
        class basic_streambuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
        ;
    protected:
    protected:
        char_type *_M_in_beg;
        char_type *_M_in_cur;
        char_type *_M_in_end;
        char_type *_M_out_beg;
        char_type *_M_out_cur;
        char_type *_M_out_end;
        std::locale _M_buf_locale;
    public:
    public:
        virtual void ~basic_streambuf();
        std::locale pubimbue(const std::locale &__loc);
        std::locale getloc() const;
        __streambuf_type *pubsetbuf(char_type *__s, streamsize __n);
        pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        pos_type pubseekpos(pos_type __sp, ios_base::openmode __mode);
        int pubsync();
        streamsize in_avail();
        int_type snextc();
        int_type sbumpc();
        int_type sgetc();
        streamsize sgetn(char_type *__s, streamsize __n);
        int_type sputbackc(char_type __c);
        int_type sungetc();
        int_type sputc(char_type __c);
        streamsize sputn(const char_type *__s, streamsize __n);
    protected:
    protected:
        basic_streambuf();
        char_type *eback() const;
        char_type *gptr() const;
        char_type *egptr() const;
        void gbump(int __n);
        void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend);
        char_type *pbase() const;
        char_type *pptr() const;
        char_type *epptr() const;
        void pbump(int __n);
        void setp(char_type *__pbeg, char_type *__pend);
        virtual void imbue(const std::locale &);
        virtual basic_streambuf<char_type, std::char_traits<wchar_t> > *setbuf(char_type *, streamsize);
        virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode);
        virtual pos_type seekpos(pos_type, ios_base::openmode);
        virtual int sync();
        virtual streamsize showmanyc();
        virtual streamsize xsgetn(char_type *__s, streamsize __n);
        virtual int_type underflow();
        virtual int_type uflow();
        virtual int_type pbackfail(int_type);
        virtual streamsize xsputn(const char_type *__s, streamsize __n);
        virtual int_type overflow(int_type);
    public:
    public:
        void stossc();
        void __safe_gbump(streamsize __n);
        void __safe_pbump(streamsize __n);
    private:
    private:
        basic_streambuf(const __streambuf_type &__sb);
        __streambuf_type &operator=(const __streambuf_type &);
    };
}
namespace std {
    using ::wctrans_t;
    ;
    using ::wctype_t;
    ;
    using ::wint_t;
    ;
    using ::iswalnum;
    ;
    using ::iswalpha;
    ;
    using ::iswblank;
    ;
    using ::iswcntrl;
    ;
    using ::iswctype;
    ;
    using ::iswdigit;
    ;
    using ::iswgraph;
    ;
    using ::iswlower;
    ;
    using ::iswprint;
    ;
    using ::iswpunct;
    ;
    using ::iswspace;
    ;
    using ::iswupper;
    ;
    using ::iswxdigit;
    ;
    using ::towctrans;
    ;
    using ::towlower;
    ;
    using ::towupper;
    ;
    using ::wctrans;
    ;
    using ::wctype;
    ;
}
namespace std {
    struct ctype_base {
        struct ctype_base;
        typedef const int *__to_type;
        typedef unsigned short mask;
        static const mask upper = (ImplicitCastExpr 0x90fcae0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:50:35> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcac4 <col:35> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8ee8220 '_ISupper' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask lower = (ImplicitCastExpr 0x90fcb50 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:51:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcb34 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee160 '_ISlower' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alpha = (ImplicitCastExpr 0x90fcbc0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:52:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcba4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask digit = (ImplicitCastExpr 0x90fcc30 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:53:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcc14 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask xdigit = (ImplicitCastExpr 0x90fcca0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:54:33> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcc84 <col:33> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee850 '_ISxdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask space = (ImplicitCastExpr 0x90fcd10 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:55:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fccf4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eeeaa0 '_ISspace' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask print = (ImplicitCastExpr 0x90fcd80 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:56:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcd64 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eeecf0 '_ISprint' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask graph = (ImplicitCastExpr 0x90fce80 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:57:32, col:54> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x90fce68 <col:32, col:54> 'int' '|'
    (BinaryOperator 0x90fce28 <col:32, col:43> 'int' '|'
      (ImplicitCastExpr 0x90fce08 <col:32> 'int' <IntegralCast>
        (DeclRefExpr 0x90fcdd4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
      (ImplicitCastExpr 0x90fce18 <col:43> 'int' <IntegralCast>
        (DeclRefExpr 0x90fcdec <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>')))
    (ImplicitCastExpr 0x90fce58 <col:54> 'int' <IntegralCast>
      (DeclRefExpr 0x90fce40 <col:54> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eef630 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        static const mask cntrl = (ImplicitCastExpr 0x90fcef0 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:58:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fced4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eef3e0 '_IScntrl' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask punct = (ImplicitCastExpr 0x90fcf60 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:59:32> 'const mask':'const unsigned short' <IntegralCast>
  (DeclRefExpr 0x90fcf44 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eef630 '_ISpunct' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
;
        static const mask alnum = (ImplicitCastExpr 0x90fd020 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_base.h:60:32, col:43> 'const mask':'const unsigned short' <IntegralCast>
  (BinaryOperator 0x90fd008 <col:32, col:43> 'int' '|'
    (ImplicitCastExpr 0x90fcfe8 <col:32> 'int' <IntegralCast>
      (DeclRefExpr 0x90fcfb4 <col:32> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee3b0 '_ISalpha' 'enum <anonymous at /usr/include/ctype.h:48:1>'))
    (ImplicitCastExpr 0x90fcff8 <col:43> 'int' <IntegralCast>
      (DeclRefExpr 0x90fcfcc <col:43> 'enum <anonymous at /usr/include/ctype.h:48:1>' EnumConstant 0x8eee600 '_ISdigit' 'enum <anonymous at /usr/include/ctype.h:48:1>'))))
;
        inline std::ctype_base &operator=(const std::ctype_base &) throw();
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class istreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class istreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class istreambuf_iterator : public iterator<std::input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT &> {
        class istreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef typename _Traits::int_type int_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_istream<_CharT, _Traits> istream_type;
        ;
        ;
        ;
    private:
    private:
        mutable streambuf_type *_M_sbuf;
        mutable int_type _M_c;
    public:
    public:
        istreambuf_iterator<_CharT, _Traits>() throw() : _M_sbuf((IntegerLiteral 0x910b290 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:17> 'int' 0)
), _M_c((CallExpr 0x910b380 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:26, col:43> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x910b348 <col:26, col:39> '<dependent type>' lvalue))
) (CompoundStmt 0x910b3e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:98:46, col:48>)


        istreambuf_iterator<_CharT, _Traits>(istream_type &__s) throw() : _M_sbuf((CallExpr 0x910b440 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x910b408 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x910b3f0 <col:17> 'istream_type':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x910ab80 '__s' 'istream_type &')))
), _M_c((CallExpr 0x910b4f0 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:36, col:53> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x910b4b8 <col:36, col:49> '<dependent type>' lvalue))
) (CompoundStmt 0x910b550 </usr/include/c++/4.6/bits/streambuf_iterator.h:102:56, col:58>)


        istreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x910b560 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:17> 'streambuf_type *' lvalue ParmVar 0x910aca0 '__s' 'streambuf_type *')
), _M_c((CallExpr 0x910b610 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:28, col:45> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x910b5d8 <col:28, col:41> '<dependent type>' lvalue))
) (CompoundStmt 0x910b670 </usr/include/c++/4.6/bits/streambuf_iterator.h:106:48, col:50>)


        char_type operator*() const (CompoundStmt 0x910b770 </usr/include/c++/4.6/bits/streambuf_iterator.h:113:7, line:122:7>
  (ReturnStmt 0x910b760 <line:121:2, col:43>
    (CallExpr 0x910b740 <col:9, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x910b6b8 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x910b720 <col:35, col:42> '<dependent type>'
        (MemberExpr 0x910b700 <col:35> '<bound member function type>' ->_M_get 0x910b1b0
          (CXXThisExpr 0x910b6f0 <col:35> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))


        istreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x910b980 </usr/include/c++/4.6/bits/streambuf_iterator.h:127:7, line:137:7>
  (NullStmt 0x910b788 <line:130:25>)
  (IfStmt 0x910b928 <line:131:2, line:135:4>
    <<<NULL>>>
    (MemberExpr 0x910b7a8 <line:131:6> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
      (CXXThisExpr 0x910b798 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x910b910 <line:132:4, line:135:4>
      (CallExpr 0x910b830 <line:133:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910b7f8 <col:6, col:15> '<dependent type>' lvalue
          (MemberExpr 0x910b7d8 <col:6> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
            (CXXThisExpr 0x910b7c8 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))))
      (BinaryOperator 0x910b8f8 <line:134:6, col:30> '<dependent type>' '='
        (MemberExpr 0x910b860 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x910aa30
          (CXXThisExpr 0x910b850 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x910b8d8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x910b8a0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x910b970 <line:136:2, col:10>
    (UnaryOperator 0x910b958 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910b948 <col:10> 'istreambuf_iterator<_CharT, _Traits> *' this))))


        istreambuf_iterator<_CharT, _Traits> operator++(int) (CompoundStmt 0x910bc70 </usr/include/c++/4.6/bits/streambuf_iterator.h:142:7, line:154:7>
  (NullStmt 0x910b9a0 <line:145:25>)
  (DeclStmt 0x910ba20 <line:147:2, col:35>
    0x910b9c0 "istreambuf_iterator<_CharT, _Traits> __old =
      (UnaryOperator 0x910ba08 <col:30, col:31> '<dependent type>' prefix '*'
        (CXXThisExpr 0x910b9f8 <col:31> 'istreambuf_iterator<_CharT, _Traits> *' this))")
  (IfStmt 0x910bc28 <line:148:2, line:152:4>
    <<<NULL>>>
    (MemberExpr 0x910ba40 <line:148:6> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
      (CXXThisExpr 0x910ba30 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x910bc10 <line:149:4, line:152:4>
      (BinaryOperator 0x910bb38 <line:150:6, col:35> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x910ba78 <col:6, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x910ba60 <col:6> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x910b9c0 '__old' 'istreambuf_iterator<_CharT, _Traits>'))
        (CallExpr 0x910bb18 <col:19, col:35> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x910bae0 <col:19, col:28> '<dependent type>' lvalue
            (MemberExpr 0x910bac0 <col:19> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
              (CXXThisExpr 0x910bab0 <col:19> 'istreambuf_iterator<_CharT, _Traits> *' this)))))
      (BinaryOperator 0x910bbf8 <line:151:6, col:30> '<dependent type>' '='
        (MemberExpr 0x910bb60 <col:6> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x910aa30
          (CXXThisExpr 0x910bb50 <col:6> 'istreambuf_iterator<_CharT, _Traits> *' this))
        (CallExpr 0x910bbd8 <col:13, col:30> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x910bba0 <col:13, col:26> '<dependent type>' lvalue))))
    <<<NULL>>>)
  (ReturnStmt 0x910bc60 <line:153:2, col:9>
    (DeclRefExpr 0x910bc44 <col:9> 'istreambuf_iterator<_CharT, _Traits>' lvalue Var 0x910b9c0 '__old' 'istreambuf_iterator<_CharT, _Traits>')))


        bool equal(const istreambuf_iterator<_CharT, _Traits> &__b) const (CompoundStmt 0x910bde0 </usr/include/c++/4.6/bits/streambuf_iterator.h:162:7, col:48>
  (ReturnStmt 0x910bdd0 <col:9, col:45>
    (CXXOperatorCallExpr 0x910bda8 <col:16, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x910bd50 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0)
      (CallExpr 0x910bcc0 <col:16, col:26> '<dependent type>'
        (MemberExpr 0x910bca0 <col:16> '<bound member function type>' ->_M_at_eof 0x910b230
          (CXXThisExpr 0x910bc90 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (CallExpr 0x910bd30 <col:31, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910bcf8 <col:31, col:35> '<dependent type>' lvalue
          (DeclRefExpr 0x910bcdc <col:31> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x910b030 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))))


    private:
    private:
        int_type _M_get() const (CompoundStmt 0x910c380 </usr/include/c++/4.6/bits/streambuf_iterator.h:167:7, line:181:7>
  (DeclStmt 0x910beb0 <line:168:2, col:43>
    0x910be00 "const int_type __eof =
      (CallExpr 0x910be90 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910be58 <col:25, col:38> '<dependent type>' lvalue))")
  (DeclStmt 0x910bf20 <line:169:2, col:24>
    0x910bed0 "int_type __ret =
      (DeclRefExpr 0x910bf04 <col:19> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x910be00 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (IfStmt 0x910c338 <line:170:2, line:179:4>
    <<<NULL>>>
    (MemberExpr 0x910bf40 <line:170:6> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
      (CXXThisExpr 0x910bf30 <col:6> 'const istreambuf_iterator<_CharT, _Traits> *' this))
    (CompoundStmt 0x910c320 <line:171:4, line:179:4>
      (IfStmt 0x910c300 <line:172:6, line:178:18>
        <<<NULL>>>
        (UnaryOperator 0x910c028 <line:172:10, col:47> '<dependent type>' prefix '!'
          (CallExpr 0x910c000 <col:11, col:47> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x910bf80 <col:11, col:24> '<dependent type>' lvalue)
            (MemberExpr 0x910bfc8 <col:36> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x910aa30
              (CXXThisExpr 0x910bfb8 <col:36> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x910bfe8 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x910be00 '__eof' 'const int_type':'const typename _Traits::int_type')))
        (BinaryOperator 0x910c088 <line:173:8, col:16> '<dependent type>' '='
          (DeclRefExpr 0x910c03c <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x910bed0 '__ret' 'int_type':'typename _Traits::int_type')
          (MemberExpr 0x910c068 <col:16> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x910aa30
            (CXXThisExpr 0x910c058 <col:16> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
        (IfStmt 0x910c2e0 <line:174:11, line:178:18>
          <<<NULL>>>
          (UnaryOperator 0x910c208 <line:174:15, line:175:18> '<dependent type>' prefix '!'
            (CallExpr 0x910c1e0 <line:174:16, line:175:18> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x910c0c0 <line:174:16, col:29> '<dependent type>' lvalue)
              (ParenExpr 0x910c1b0 <col:41, col:66> '<dependent type>'
                (BinaryOperator 0x910c198 <col:42, col:65> '<dependent type>' '='
                  (DeclRefExpr 0x910c0f4 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x910bed0 '__ret' 'int_type':'typename _Traits::int_type')
                  (CallExpr 0x910c178 <col:50, col:65> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x910c140 <col:50, col:59> '<dependent type>' lvalue
                      (MemberExpr 0x910c120 <col:50> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
                        (CXXThisExpr 0x910c110 <col:50> 'const istreambuf_iterator<_CharT, _Traits> *' this))))))
              (DeclRefExpr 0x910c1c4 <line:175:13> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x910be00 '__eof' 'const int_type':'const typename _Traits::int_type')))
          (BinaryOperator 0x910c268 <line:176:8, col:15> '<dependent type>' '='
            (MemberExpr 0x910c230 <col:8> 'int_type':'typename _Traits::int_type' lvalue ->_M_c 0x910aa30
              (CXXThisExpr 0x910c220 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (DeclRefExpr 0x910c250 <col:15> 'int_type':'typename _Traits::int_type' lvalue Var 0x910bed0 '__ret' 'int_type':'typename _Traits::int_type'))
          (BinaryOperator 0x910c2c8 <line:178:8, col:18> '<dependent type>' '='
            (MemberExpr 0x910c290 <col:8> 'streambuf_type *' lvalue ->_M_sbuf 0x910a9e0
              (CXXThisExpr 0x910c280 <col:8> 'const istreambuf_iterator<_CharT, _Traits> *' this))
            (IntegerLiteral 0x910c2b0 <col:18> 'int' 0)))))
    <<<NULL>>>)
  (ReturnStmt 0x910c370 <line:180:2, col:9>
    (DeclRefExpr 0x910c354 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x910bed0 '__ret' 'int_type':'typename _Traits::int_type')))


        bool _M_at_eof() const (CompoundStmt 0x910c568 </usr/include/c++/4.6/bits/streambuf_iterator.h:185:7, line:188:7>
  (DeclStmt 0x910c460 <line:186:2, col:43>
    0x910c3b0 "const int_type __eof =
      (CallExpr 0x910c440 <col:25, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910c408 <col:25, col:38> '<dependent type>' lvalue))")
  (ReturnStmt 0x910c558 <line:187:2, col:49>
    (CallExpr 0x910c530 <col:9, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x910c490 <col:9, col:22> '<dependent type>' lvalue)
      (CallExpr 0x910c4f8 <col:34, col:41> '<dependent type>'
        (MemberExpr 0x910c4d8 <col:34> '<bound member function type>' ->_M_get 0x910b1b0
          (CXXThisExpr 0x910c4c8 <col:34> 'const istreambuf_iterator<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x910c514 <col:44> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x910c3b0 '__eof' 'const int_type':'const typename _Traits::int_type'))))


    };
    template <typename _CharT, typename _Traits> inline bool operator==(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x910cab8 </usr/include/c++/4.6/bits/streambuf_iterator.h:195:5, col:30>
  (ReturnStmt 0x910caa8 <col:7, col:27>
    (CallExpr 0x910ca88 <col:14, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x910ca38 <col:14, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x910ca20 <col:14> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x910c780 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
      (DeclRefExpr 0x910ca6c <col:24> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x910c8f0 '__b' 'const istreambuf_iterator<_CharT, _Traits> &'))))

;
    template <typename _CharT, typename _Traits> inline bool operator!=(const istreambuf_iterator<_CharT, _Traits> &__a, const istreambuf_iterator<_CharT, _Traits> &__b) (CompoundStmt 0x910cfe0 </usr/include/c++/4.6/bits/streambuf_iterator.h:201:5, col:31>
  (ReturnStmt 0x910cfd0 <col:7, col:28>
    (UnaryOperator 0x910cfb8 <col:14, col:28> '<dependent type>' prefix '!'
      (CallExpr 0x910cf98 <col:15, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910cf48 <col:15, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x910cf30 <col:15> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x910ccb0 '__a' 'const istreambuf_iterator<_CharT, _Traits> &'))
        (DeclRefExpr 0x910cf7c <col:25> 'const istreambuf_iterator<_CharT, _Traits>' lvalue ParmVar 0x910ce20 '__b' 'const istreambuf_iterator<_CharT, _Traits> &')))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class ostreambuf_iterator
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class ostreambuf_iterator
template <typename _CharT, typename _Traits = char_traits<_CharT>> class ostreambuf_iterator : public iterator<std::output_iterator_tag, void, void, void, void> {
        class ostreambuf_iterator;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> streambuf_type;
        typedef basic_ostream<_CharT, _Traits> ostream_type;
        ;
    private:
    private:
        streambuf_type *_M_sbuf;
        bool _M_failed;
    public:
    public:
        ostreambuf_iterator<_CharT, _Traits>(ostream_type &__s) throw() : _M_sbuf((CallExpr 0x910e998 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:17, col:27> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x910e960 <col:17, col:21> '<dependent type>' lvalue
    (DeclRefExpr 0x910e948 <col:17> 'ostream_type':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x910e1e0 '__s' 'ostream_type &')))
), _M_failed((UnaryOperator 0x910ea48 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:41, col:42> '<dependent type>' prefix '!'
  (MemberExpr 0x910ea28 <col:42> 'streambuf_type *' lvalue ->_M_sbuf 0x910e0f0
    (CXXThisExpr 0x910ea18 <col:42> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x910eaa0 </usr/include/c++/4.6/bits/streambuf_iterator.h:231:51, col:53>)


        ostreambuf_iterator<_CharT, _Traits>(streambuf_type *__s) throw() : _M_sbuf((DeclRefExpr 0x910eab0 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:17> 'streambuf_type *' lvalue ParmVar 0x910e310 '__s' 'streambuf_type *')
), _M_failed((UnaryOperator 0x910eb38 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:33, col:34> '<dependent type>' prefix '!'
  (MemberExpr 0x910eb18 <col:34> 'streambuf_type *' lvalue ->_M_sbuf 0x910e0f0
    (CXXThisExpr 0x910eb08 <col:34> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
) (CompoundStmt 0x910eb90 </usr/include/c++/4.6/bits/streambuf_iterator.h:235:43, col:45>)


        ostreambuf_iterator<_CharT, _Traits> &operator=(_CharT __c) (CompoundStmt 0x910ee60 </usr/include/c++/4.6/bits/streambuf_iterator.h:240:7, line:245:7>
  (IfStmt 0x910ee08 <line:241:2, line:243:16>
    <<<NULL>>>
    (BinaryOperator 0x910ed98 <line:241:6, line:242:62> '<dependent type>' '&&'
      (UnaryOperator 0x910ebe0 <line:241:6, col:7> '_Bool' prefix '!'
        (ImplicitCastExpr 0x910ebd0 <col:7> '_Bool' <LValueToRValue>
          (MemberExpr 0x910ebb0 <col:7> '_Bool' lvalue ->_M_failed 0x910e130
            (CXXThisExpr 0x910eba0 <col:7> 'ostreambuf_iterator<_CharT, _Traits> *' this))))
      (CallExpr 0x910ed70 <line:242:6, col:62> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x910ec20 <col:6, col:15> '<dependent type>' lvalue)
        (CallExpr 0x910ecd8 <col:27, col:45> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x910ec88 <col:27, col:36> '<dependent type>' lvalue
            (MemberExpr 0x910ec68 <col:27> 'streambuf_type *' lvalue ->_M_sbuf 0x910e0f0
              (CXXThisExpr 0x910ec58 <col:27> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x910ecbc <col:42> '_CharT' lvalue ParmVar 0x910e410 '__c' '_CharT'))
        (CallExpr 0x910ed50 <col:48, col:61> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x910ed18 <col:48, col:57> '<dependent type>' lvalue))))
    (BinaryOperator 0x910edf0 <line:243:4, col:16> '<dependent type>' '='
      (MemberExpr 0x910edc0 <col:4> '_Bool' lvalue ->_M_failed 0x910e130
        (CXXThisExpr 0x910edb0 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x910ede0 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x910ee50 <line:244:2, col:10>
    (UnaryOperator 0x910ee38 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910ee28 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator*() (CompoundStmt 0x910eeb0 </usr/include/c++/4.6/bits/streambuf_iterator.h:250:7, col:23>
  (ReturnStmt 0x910eea0 <col:9, col:17>
    (UnaryOperator 0x910ee88 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910ee78 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++(int) (CompoundStmt 0x910ef00 </usr/include/c++/4.6/bits/streambuf_iterator.h:255:7, col:23>
  (ReturnStmt 0x910eef0 <col:9, col:17>
    (UnaryOperator 0x910eed8 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910eec8 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &operator++() (CompoundStmt 0x910ef50 </usr/include/c++/4.6/bits/streambuf_iterator.h:260:7, col:23>
  (ReturnStmt 0x910ef40 <col:9, col:17>
    (UnaryOperator 0x910ef28 <col:16, col:17> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910ef18 <col:17> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


        bool failed() const throw() (CompoundStmt 0x910efc8 </usr/include/c++/4.6/bits/streambuf_iterator.h:265:7, col:27>
  (ReturnStmt 0x910efb8 <col:9, col:16>
    (MemberExpr 0x910ef98 <col:16> 'const _Bool' lvalue ->_M_failed 0x910e130
      (CXXThisExpr 0x910ef88 <col:16> 'const ostreambuf_iterator<_CharT, _Traits> *' this))))


        ostreambuf_iterator<_CharT, _Traits> &_M_put(const _CharT *__ws, streamsize __len) (CompoundStmt 0x910f358 </usr/include/c++/4.6/bits/streambuf_iterator.h:269:7, line:275:7>
  (IfStmt 0x910f300 <line:270:2, line:273:16>
    <<<NULL>>>
    (BinaryOperator 0x910f290 <line:270:6, line:272:10> '<dependent type>' '&&'
      (CallExpr 0x910f088 <line:270:6, col:39> 'long'
        (ImplicitCastExpr 0x910f078 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x910efdc <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x910f0b0 <col:23, col:24> 'long' <IntegralCast>
          (UnaryOperator 0x910f038 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x910f028 <col:24> '_Bool' <LValueToRValue>
              (MemberExpr 0x910f008 <col:24> '_Bool' lvalue ->_M_failed 0x910e130
                (CXXThisExpr 0x910eff8 <col:24> 'ostreambuf_iterator<_CharT, _Traits> *' this)))))
        (ImplicitCastExpr 0x910f0c0 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x910f050 <col:35> '_Bool' true)))
      (CallExpr 0x910f268 <line:271:9, line:272:10> '<dependent type>'
        (DeclRefExpr 0x910f0cc <line:271:9> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
        (CXXOperatorCallExpr 0x910f230 <col:26, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x910f1d8 <col:60, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x910cf00 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70)
          (CallExpr 0x910f198 <col:26, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x910f130 <col:26, col:41> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x910f0f8 <col:26, col:32> '<dependent type>' lvalue
                (CXXThisExpr 0x910f0e8 <col:26> 'ostreambuf_iterator<_CharT, _Traits> *' this)))
            (DeclRefExpr 0x910f164 <col:47> 'const _CharT *' lvalue ParmVar 0x910e800 '__ws' 'const _CharT *')
            (DeclRefExpr 0x910f17c <col:53> 'streamsize':'int' lvalue ParmVar 0x910e840 '__len' 'streamsize':'int'))
          (DeclRefExpr 0x910f1bc <col:63> 'streamsize':'int' lvalue ParmVar 0x910e840 '__len' 'streamsize':'int'))
        (CXXBoolLiteralExpr 0x910f258 <line:272:5> '_Bool' false)))
    (BinaryOperator 0x910f2e8 <line:273:4, col:16> '<dependent type>' '='
      (MemberExpr 0x910f2b8 <col:4> '_Bool' lvalue ->_M_failed 0x910e130
        (CXXThisExpr 0x910f2a8 <col:4> 'ostreambuf_iterator<_CharT, _Traits> *' this))
      (CXXBoolLiteralExpr 0x910f2d8 <col:16> '_Bool' true))
    <<<NULL>>>)
  (ReturnStmt 0x910f348 <line:274:2, col:10>
    (UnaryOperator 0x910f330 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x910f320 <col:10> 'ostreambuf_iterator<_CharT, _Traits> *' this))))


    };
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type copy(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9110160 </usr/include/c++/4.6/bits/streambuf_iterator.h:285:5, line:294:5>
  (IfStmt 0x9110118 <line:286:7, line:292:2>
    <<<NULL>>>
    (BinaryOperator 0x910fea0 <line:286:11, col:59> '<dependent type>' '&&'
      (BinaryOperator 0x910fe20 <col:11, col:38> '<dependent type>' '&&'
        (CXXDependentScopeMemberExpr 0x910fd80 <col:11, col:19> '<dependent type>' lvalue
          (DeclRefExpr 0x910fd64 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x910f8e0 '__first' 'istreambuf_iterator<_CharT>'))
        (UnaryOperator 0x910fe08 <col:30, col:38> '<dependent type>' prefix '!'
          (CXXDependentScopeMemberExpr 0x910fdd0 <col:31, col:38> '<dependent type>' lvalue
            (DeclRefExpr 0x910fdb4 <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x910fa70 '__last' 'istreambuf_iterator<_CharT>'))))
      (UnaryOperator 0x910fe88 <col:49, col:59> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x910fe50 <col:50, col:59> '<dependent type>' lvalue
          (DeclRefExpr 0x910fe38 <col:50> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x910fc00 '__result' 'ostreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x91100f8 <line:287:2, line:292:2>
      (DeclStmt 0x910fef8 <line:288:4, col:16>
        0x910fec0 "bool __ineof")
      (CallExpr 0x910fff8 <line:289:4, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x910ff08 <col:4> '<overloaded function type>' lvalue (ADL) = '1' 0x90e7f90)
        (CXXDependentScopeMemberExpr 0x910ff58 <col:26, col:34> '<dependent type>' lvalue
          (DeclRefExpr 0x910ff3c <col:26> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x910f8e0 '__first' 'istreambuf_iterator<_CharT>'))
        (CXXDependentScopeMemberExpr 0x910ffa8 <col:43, col:52> '<dependent type>' lvalue
          (DeclRefExpr 0x910ff8c <col:43> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x910fc00 '__result' 'ostreambuf_iterator<_CharT>'))
        (DeclRefExpr 0x910ffdc <col:61> '_Bool' lvalue Var 0x910fec0 '__ineof' '_Bool'))
      (IfStmt 0x91100d8 <line:290:4, line:291:27>
        <<<NULL>>>
        (UnaryOperator 0x9110048 <line:290:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9110038 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9110020 <col:9> '_Bool' lvalue Var 0x910fec0 '__ineof' '_Bool')))
        (BinaryOperator 0x91100c0 <line:291:6, col:27> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9110078 <col:6, col:15> '<dependent type>' lvalue
            (DeclRefExpr 0x911005c <col:6> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x910fc00 '__result' 'ostreambuf_iterator<_CharT>'))
          (CXXBoolLiteralExpr 0x91100b0 <col:27> '_Bool' true))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9110150 <line:293:7, col:14>
    (DeclRefExpr 0x9110134 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x910fc00 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x9110b20 </usr/include/c++/4.6/bits/streambuf_iterator.h:301:5, line:306:5>
  (DeclStmt 0x91109c8 <line:302:7, col:48>
    0x9110900 "const streamsize __num =
      (CXXOperatorCallExpr 0x91109a0 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9110968 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x9110934 <col:32> '_CharT *' lvalue ParmVar 0x9110600 '__last' '_CharT *')
        (DeclRefExpr 0x911094c <col:41> '_CharT *' lvalue ParmVar 0x91105b0 '__first' '_CharT *'))")
  (IfStmt 0x9110ad8 <line:303:7, line:304:32>
    <<<NULL>>>
    (BinaryOperator 0x9110a18 <line:303:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x9110a08 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x91109d8 <col:11> 'const streamsize':'const int' lvalue Var 0x9110900 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x91109f0 <col:19> 'int' 0))
    (CallExpr 0x9110ab0 <line:304:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9110a48 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x9110a30 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9110790 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x9110a7c <col:18> '_CharT *' lvalue ParmVar 0x91105b0 '__first' '_CharT *')
      (DeclRefExpr 0x9110a94 <col:27> 'const streamsize':'const int' lvalue Var 0x9110900 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x9110b10 <line:305:7, col:14>
    (DeclRefExpr 0x9110af4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9110790 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, ostreambuf_iterator<_CharT> >::__type __copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator<_CharT> __result) (CompoundStmt 0x91114e0 </usr/include/c++/4.6/bits/streambuf_iterator.h:313:5, line:318:5>
  (DeclStmt 0x9111388 <line:314:7, col:48>
    0x91112c0 "const streamsize __num =
      (CXXOperatorCallExpr 0x9111360 <col:32, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9111328 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x91112f4 <col:32> 'const _CharT *' lvalue ParmVar 0x9110fc0 '__last' 'const _CharT *')
        (DeclRefExpr 0x911130c <col:41> 'const _CharT *' lvalue ParmVar 0x9110f70 '__first' 'const _CharT *'))")
  (IfStmt 0x9111498 <line:315:7, line:316:32>
    <<<NULL>>>
    (BinaryOperator 0x91113d8 <line:315:11, col:19> '_Bool' '>'
      (ImplicitCastExpr 0x91113c8 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9111398 <col:11> 'const streamsize':'const int' lvalue Var 0x91112c0 '__num' 'const streamsize':'const int'))
      (IntegerLiteral 0x91113b0 <col:19> 'int' 0))
    (CallExpr 0x9111470 <line:316:2, col:32> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9111408 <col:2, col:11> '<dependent type>' lvalue
        (DeclRefExpr 0x91113f0 <col:2> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9111150 '__result' 'ostreambuf_iterator<_CharT>'))
      (DeclRefExpr 0x911143c <col:18> 'const _CharT *' lvalue ParmVar 0x9110f70 '__first' 'const _CharT *')
      (DeclRefExpr 0x9111454 <col:27> 'const streamsize':'const int' lvalue Var 0x91112c0 '__num' 'const streamsize':'const int'))
    <<<NULL>>>)
  (ReturnStmt 0x91114d0 <line:317:7, col:14>
    (DeclRefExpr 0x91114b4 <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9111150 '__result' 'ostreambuf_iterator<_CharT>')))

;
    template <bool _IsMove, typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, _CharT *>::__type __copy_move_a2(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, _CharT *__result) (CompoundStmt 0x9112b48 </usr/include/c++/4.6/bits/streambuf_iterator.h:325:5, line:353:5>
  (DeclStmt 0x9111de0 <line:326:7, col:78>
    0x9111db0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9111ed0 <line:327:7, col:71>
    0x9111ea0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x9111f90 <line:328:7, col:74>
    0x9111f60 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x9112080 <line:329:7, col:68>
    0x9112050 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9112b00 <line:331:7, line:351:2>
    <<<NULL>>>
    (BinaryOperator 0x9112148 <line:331:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x91120a8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x9112090 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9111930 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9112130 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x91120f8 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x91120dc <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9111ac0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9112ae0 <line:332:2, line:351:2>
      (DeclStmt 0x9112248 <line:333:4, col:42>
        0x91121c0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9112210 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x91121f4 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9111930 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9112328 <line:334:4, col:32>
        0x9112280 "int_type __c =
          (CallExpr 0x9112308 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91122d0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x91122b4 <col:19> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9112ac8 <line:335:4, line:350:6>
        <<<NULL>>>
        (UnaryOperator 0x9112428 <line:335:11, col:60> '<dependent type>' prefix '!'
          (CallExpr 0x9112400 <col:12, col:60> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9112358 <col:12, col:25> '<dependent type>' lvalue)
            (DeclRefExpr 0x911237c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9112280 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x91123e0 <col:42, col:59> '<dependent type>'
              (DependentScopeDeclRefExpr 0x91123b8 <col:42, col:55> '<dependent type>' lvalue))))
        (CompoundStmt 0x9112ab0 <line:336:6, line:350:6>
          (DeclStmt 0x91125c8 <line:337:8, col:59>
            0x9112450 "const streamsize __n =
              (CXXOperatorCallExpr 0x91125a0 <col:31, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9112568 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (CallExpr 0x91124d8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91124a0 <col:31, col:37> '<dependent type>' lvalue
                    (DeclRefExpr 0x9112484 <col:31> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *')))
                (CallExpr 0x9112548 <col:47, col:58> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9112510 <col:47, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x91124f4 <col:47> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x9112a90 <line:338:8, line:349:3>
            <<<NULL>>>
            (BinaryOperator 0x9112618 <line:338:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9112608 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x91125d8 <col:12> 'const streamsize':'const int' lvalue Var 0x9112450 '__n' 'const streamsize':'const int'))
              (IntegerLiteral 0x91125f0 <col:18> 'int' 1))
            (CompoundStmt 0x91128c0 <line:339:3, line:344:3>
              (CallExpr 0x9112720 <line:340:5, col:50> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9112658 <col:5, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x911267c <col:23> '_CharT *' lvalue ParmVar 0x9111b20 '__result' '_CharT *')
                (CallExpr 0x91126e8 <col:33, col:44> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91126b0 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9112694 <col:33> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *')))
                (DeclRefExpr 0x9112704 <col:47> 'const streamsize':'const int' lvalue Var 0x9112450 '__n' 'const streamsize':'const int'))
              (CallExpr 0x91127b0 <line:341:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9112760 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x9112748 <col:5> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9112794 <col:24> 'const streamsize':'const int' lvalue Var 0x9112450 '__n' 'const streamsize':'const int'))
              (CompoundAssignOperator 0x9112800 <line:342:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x91127d0 <col:5> '_CharT *' lvalue ParmVar 0x9111b20 '__result' '_CharT *')
                (DeclRefExpr 0x91127e8 <col:17> 'const streamsize':'const int' lvalue Var 0x9112450 '__n' 'const streamsize':'const int'))
              (BinaryOperator 0x91128a8 <line:343:5, col:27> '<dependent type>' '='
                (DeclRefExpr 0x9112820 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9112280 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9112888 <col:11, col:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9112850 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9112838 <col:11> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *')))))
            (CompoundStmt 0x9112a78 <line:346:3, line:349:3>
              (BinaryOperator 0x91129c0 <line:347:5, col:48> '<dependent type>' '='
                (UnaryOperator 0x9112928 <col:5, col:14> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9112910 <col:6, col:14> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x91128e0 <col:6> '_CharT *' lvalue ParmVar 0x9111b20 '__result' '_CharT *')))
                (CallExpr 0x91129a0 <col:19, col:48> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x9112960 <col:19, col:32> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9112984 <col:45> 'int_type':'typename traits_type::int_type' lvalue Var 0x9112280 '__c' 'int_type':'typename traits_type::int_type')))
              (BinaryOperator 0x9112a60 <line:348:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x91129d8 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9112280 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x9112a40 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9112a08 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x91129f0 <col:11> 'streambuf_type *' lvalue Var 0x91121c0 '__sb' 'streambuf_type *')))))))))
    <<<NULL>>>)
  (ReturnStmt 0x9112b38 <line:352:7, col:14>
    (DeclRefExpr 0x9112b1c <col:14> '_CharT *' lvalue ParmVar 0x9111b20 '__result' '_CharT *')))

;
    template <typename _CharT> typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, istreambuf_iterator<_CharT> >::__type find(istreambuf_iterator<_CharT> __first, istreambuf_iterator<_CharT> __last, const _CharT &__val) (CompoundStmt 0x91146b8 </usr/include/c++/4.6/bits/streambuf_iterator.h:360:5, line:394:5>
  (DeclStmt 0x9113520 <line:361:7, col:78>
    0x91134f0 "typedef istreambuf_iterator<_CharT> __is_iterator_type")
  (DeclStmt 0x9113610 <line:362:7, col:71>
    0x91135e0 "typedef typename __is_iterator_type::traits_type traits_type")
  (DeclStmt 0x91136d0 <line:363:7, col:74>
    0x91136a0 "typedef typename __is_iterator_type::streambuf_type streambuf_type")
  (DeclStmt 0x91137c0 <line:364:7, col:68>
    0x9113790 "typedef typename traits_type::int_type int_type")
  (IfStmt 0x9114670 <line:366:7, line:392:2>
    <<<NULL>>>
    (BinaryOperator 0x9113888 <line:366:11, col:38> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x91137e8 <col:11, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x91137d0 <col:11> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9113060 '__first' 'istreambuf_iterator<_CharT>'))
      (UnaryOperator 0x9113870 <col:30, col:38> '<dependent type>' prefix '!'
        (CXXDependentScopeMemberExpr 0x9113838 <col:31, col:38> '<dependent type>' lvalue
          (DeclRefExpr 0x911381c <col:31> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x91131f0 '__last' 'istreambuf_iterator<_CharT>'))))
    (CompoundStmt 0x9114648 <line:367:2, line:392:2>
      (DeclStmt 0x9113978 <line:368:4, col:59>
        0x91138c0 "const int_type __ival =
          (CallExpr 0x9113958 <col:28, col:58> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9113918 <col:28, col:41> '<dependent type>' lvalue)
            (DeclRefExpr 0x911393c <col:53> 'const _CharT' lvalue ParmVar 0x9113260 '__val' 'const _CharT &'))")
      (DeclStmt 0x9113a78 <line:369:4, col:42>
        0x91139f0 "streambuf_type *__sb =
          (CXXDependentScopeMemberExpr 0x9113a40 <col:27, col:35> '<dependent type>' lvalue
            (DeclRefExpr 0x9113a24 <col:27> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9113060 '__first' 'istreambuf_iterator<_CharT>'))")
      (DeclStmt 0x9113b38 <line:370:4, col:32>
        0x9113a90 "int_type __c =
          (CallExpr 0x9113b18 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9113ae0 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x9113ac4 <col:19> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))")
      (WhileStmt 0x9114408 <line:371:4, line:386:6>
        <<<NULL>>>
        (BinaryOperator 0x9113d08 <line:371:11, line:372:44> '<dependent type>' '&&'
          (UnaryOperator 0x9113c38 <line:371:11, col:60> '<dependent type>' prefix '!'
            (CallExpr 0x9113c10 <col:12, col:60> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9113b68 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9113b8c <col:37> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9113bf0 <col:42, col:59> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9113bc8 <col:42, col:55> '<dependent type>' lvalue))))
          (UnaryOperator 0x9113cf0 <line:372:7, col:44> '<dependent type>' prefix '!'
            (CallExpr 0x9113cc8 <col:8, col:44> '<dependent type>'
              (DependentScopeDeclRefExpr 0x9113c70 <col:8, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x9113c94 <col:33> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type')
              (DeclRefExpr 0x9113cac <col:38> 'const int_type':'const typename traits_type::int_type' lvalue Var 0x91138c0 '__ival' 'const int_type':'const typename traits_type::int_type'))))
        (CompoundStmt 0x91143f0 <line:373:6, line:386:6>
          (DeclStmt 0x9113ea8 <line:374:8, col:53>
            0x9113d30 "streamsize __n =
              (CXXOperatorCallExpr 0x9113e80 <col:25, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x9113e48 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (CallExpr 0x9113db8 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9113d80 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9113d64 <col:25> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))
                (CallExpr 0x9113e28 <col:41, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9113df0 <col:41, col:47> '<dependent type>' lvalue
                    (DeclRefExpr 0x9113dd4 <col:41> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *'))))")
          (IfStmt 0x91143d0 <line:375:8, line:385:22>
            <<<NULL>>>
            (BinaryOperator 0x9113ef8 <line:375:12, col:18> '_Bool' '>'
              (ImplicitCastExpr 0x9113ee8 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x9113eb8 <col:12> 'streamsize':'int' lvalue Var 0x9113d30 '__n' 'streamsize':'int'))
              (IntegerLiteral 0x9113ed0 <col:18> 'int' 1))
            (CompoundStmt 0x9114310 <line:376:3, line:383:3>
              (DeclStmt 0x9114088 <line:377:5, line:378:19>
                0x9113f40 "const _CharT *__p =
                  (CallExpr 0x9114060 <line:377:25, line:378:18> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x9113f98 <line:377:25, col:38> '<dependent type>' lvalue)
                    (CallExpr 0x9114010 <col:43, col:54> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9113fd8 <col:43, col:49> '<dependent type>' lvalue
                        (DeclRefExpr 0x9113fbc <col:43> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))
                    (DeclRefExpr 0x911402c <line:378:8> 'streamsize':'int' lvalue Var 0x9113d30 '__n' 'streamsize':'int')
                    (DeclRefExpr 0x9114044 <col:13> 'const _CharT' lvalue ParmVar 0x9113260 '__val' 'const _CharT &'))")
              (IfStmt 0x91141c8 <line:379:5, line:380:30>
                <<<NULL>>>
                (DeclRefExpr 0x9114098 <line:379:9> 'const _CharT *' lvalue Var 0x9113f40 '__p' 'const _CharT *')
                (BinaryOperator 0x91141b0 <line:380:7, col:30> '<dependent type>' '='
                  (DeclRefExpr 0x91140b0 <col:7> 'streamsize':'int' lvalue Var 0x9113d30 '__n' 'streamsize':'int')
                  (CXXOperatorCallExpr 0x9114188 <col:13, col:30> '<dependent type>'
                    (UnresolvedLookupExpr 0x9114150 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                    (DeclRefExpr 0x91140c8 <col:13> 'const _CharT *' lvalue Var 0x9113f40 '__p' 'const _CharT *')
                    (CallExpr 0x9114130 <col:19, col:30> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x91140f8 <col:19, col:25> '<dependent type>' lvalue
                        (DeclRefExpr 0x91140e0 <col:19> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))))
                <<<NULL>>>)
              (CallExpr 0x9114250 <line:381:5, col:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9114200 <col:5, col:11> '<dependent type>' lvalue
                  (DeclRefExpr 0x91141e4 <col:5> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *'))
                (DeclRefExpr 0x9114234 <col:24> 'streamsize':'int' lvalue Var 0x9113d30 '__n' 'streamsize':'int'))
              (BinaryOperator 0x91142f8 <line:382:5, col:23> '<dependent type>' '='
                (DeclRefExpr 0x9114270 <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type')
                (CallExpr 0x91142d8 <col:11, col:23> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91142a0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9114288 <col:11> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))))
            (BinaryOperator 0x91143b8 <line:385:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x9114330 <col:3> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type')
              (CallExpr 0x9114398 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9114360 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x9114348 <col:9> 'streambuf_type *' lvalue Var 0x91139f0 '__sb' 'streambuf_type *')))))))
      (IfStmt 0x9114628 <line:388:4, line:391:24>
        <<<NULL>>>
        (UnaryOperator 0x9114510 <line:388:8, col:57> '<dependent type>' prefix '!'
          (CallExpr 0x91144e8 <col:9, col:57> '<dependent type>'
            (DependentScopeDeclRefExpr 0x9114440 <col:9, col:22> '<dependent type>' lvalue)
            (DeclRefExpr 0x9114464 <col:34> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x91144c8 <col:39, col:56> '<dependent type>'
              (DependentScopeDeclRefExpr 0x91144a0 <col:39, col:52> '<dependent type>' lvalue))))
        (BinaryOperator 0x9114590 <line:389:6, col:21> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x9114540 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x9114524 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9113060 '__first' 'istreambuf_iterator<_CharT>'))
          (DeclRefExpr 0x9114574 <col:21> 'int_type':'typename traits_type::int_type' lvalue Var 0x9113a90 '__c' 'int_type':'typename traits_type::int_type'))
        (BinaryOperator 0x9114610 <line:391:6, col:24> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x91145c0 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x91145a8 <col:6> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9113060 '__first' 'istreambuf_iterator<_CharT>'))
          (IntegerLiteral 0x91145f8 <col:24> 'int' 0))))
    <<<NULL>>>)
  (ReturnStmt 0x91146a8 <line:393:7, col:14>
    (DeclRefExpr 0x911468c <col:14> 'istreambuf_iterator<_CharT>' lvalue ParmVar 0x9113060 '__first' 'istreambuf_iterator<_CharT>')))

;
}
namespace std {
    template <typename _Tp = double> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = float> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp = long double> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw()template <typename _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
    void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
    template <typename _CharT, typename _Traits> struct __pad {
        struct __pad;
        static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen);
    };
    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last);
    template <typename _CharT> inline ostreambuf_iterator<_CharT> __write(ostreambuf_iterator<_CharT> __s, const _CharT *__ws, int __len) (CompoundStmt 0x91180a8 </usr/include/c++/4.6/bits/locale_facets.h:114:5, line:117:5>
  (CallExpr 0x9118058 <line:115:7, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9117ff0 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9117fd4 <col:7> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9117db0 '__s' 'ostreambuf_iterator<_CharT>'))
    (DeclRefExpr 0x9118024 <col:18> 'const _CharT *' lvalue ParmVar 0x9117e20 '__ws' 'const _CharT *')
    (DeclRefExpr 0x911803c <col:24> 'int' lvalue ParmVar 0x9117e70 '__len' 'int'))
  (ReturnStmt 0x9118098 <line:116:7, col:14>
    (DeclRefExpr 0x911807c <col:14> 'ostreambuf_iterator<_CharT>' lvalue ParmVar 0x9117db0 '__s' 'ostreambuf_iterator<_CharT>')))

;
    template <typename _CharT, typename _OutIter> inline _OutIter __write(_OutIter __s, const _CharT *__ws, int __len) (CompoundStmt 0x91185d0 </usr/include/c++/4.6/bits/locale_facets.h:124:5, line:128:5>
  (ForStmt 0x9118580 <line:125:7, line:126:17>
    (DeclStmt 0x9118400 <line:125:12, col:23>
      0x91183b0 "int __j =
        (IntegerLiteral 0x91183e8 <col:22> 'int' 0)")
    <<<NULL>>>
    (BinaryOperator 0x9118460 <col:25, col:31> '_Bool' '<'
      (ImplicitCastExpr 0x9118440 <col:25> 'int' <LValueToRValue>
        (DeclRefExpr 0x9118410 <col:25> 'int' lvalue Var 0x91183b0 '__j' 'int'))
      (ImplicitCastExpr 0x9118450 <col:31> 'int' <LValueToRValue>
        (DeclRefExpr 0x9118428 <col:31> 'int' lvalue ParmVar 0x9118240 '__len' 'int')))
    (BinaryOperator 0x91184d8 <col:38, col:47> '<dependent type>' ','
      (UnaryOperator 0x9118490 <col:38, col:41> 'int' postfix '++'
        (DeclRefExpr 0x9118478 <col:38> 'int' lvalue Var 0x91183b0 '__j' 'int'))
      (UnaryOperator 0x91184c0 <col:45, col:47> '<dependent type>' prefix '++'
        (DeclRefExpr 0x91184a4 <col:47> '_OutIter' lvalue ParmVar 0x9118180 '__s' '_OutIter')))
    (BinaryOperator 0x9118568 <line:126:2, col:17> '<dependent type>' '='
      (UnaryOperator 0x9118508 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x91184f0 <col:3> '_OutIter' lvalue ParmVar 0x9118180 '__s' '_OutIter'))
      (ArraySubscriptExpr 0x9118550 <col:9, col:17> '<dependent type>' lvalue
        (DeclRefExpr 0x911851c <col:9> 'const _CharT *' lvalue ParmVar 0x91181f0 '__ws' 'const _CharT *')
        (DeclRefExpr 0x9118534 <col:14> 'int' lvalue Var 0x91183b0 '__j' 'int'))))
  (ReturnStmt 0x91185c0 <line:127:7, col:14>
    (DeclRefExpr 0x91185a4 <col:14> '_OutIter' lvalue ParmVar 0x9118180 '__s' '_OutIter')))

;
    template <typename _CharT = wchar_t> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef wchar_t char_type;
        bool is(mask __m, char_type __c) const;
        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        char_type toupper(char_type __c) const;
        const char_type *toupper(char_type *__lo, const char_type *__hi) const;
        char_type tolower(char_type __c) const;
        const char_type *tolower(char_type *__lo, const char_type *__hi) const;
        char_type widen(char __c) const;
        const char *widen(const char *__lo, const char *__hi, char_type *__to) const;
        char narrow(char_type __c, char __dfault) const;
        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const;
    protected:
    protected:
        __ctype_abstract_base(size_t __refs);
        virtual void ~__ctype_abstract_base();
        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
        inline std::__ctype_abstract_base<wchar_t> &operator=(const std::__ctype_abstract_base<wchar_t> &);
    }
template <typename _CharT> class __ctype_abstract_base : public locale::facet, public std::ctype_base {
        class __ctype_abstract_base;
    public:
    public:
        typedef _CharT char_type;
        bool is(mask __m, char_type __c) const (CompoundStmt 0x911adc8 </usr/include/c++/4.6/bits/locale_facets.h:163:7, col:39>
  (ReturnStmt 0x911adb8 <col:9, col:36>
    (CallExpr 0x911ad90 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911ad28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911ad18 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911ad5c <col:28> 'mask':'unsigned short' lvalue ParmVar 0x9118960 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x911ad74 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x91189c0 '__c' 'char_type':'_CharT'))))


        const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const (CompoundStmt 0x911aea8 </usr/include/c++/4.6/bits/locale_facets.h:180:7, col:48>
  (ReturnStmt 0x911ae98 <col:9, col:45>
    (CallExpr 0x911ae70 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911adf0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911ade0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911ae24 <col:28> 'const char_type *' lvalue ParmVar 0x9118b00 '__lo' 'const char_type *')
      (DeclRefExpr 0x911ae3c <col:34> 'const char_type *' lvalue ParmVar 0x9118b50 '__hi' 'const char_type *')
      (DeclRefExpr 0x911ae54 <col:40> 'mask *' lvalue ParmVar 0x9118bc0 '__vec' 'mask *'))))


        const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x911af88 </usr/include/c++/4.6/bits/locale_facets.h:196:7, col:51>
  (ReturnStmt 0x911af78 <col:9, col:48>
    (CallExpr 0x911af50 <col:16, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911aed0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911aec0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911af04 <col:33> 'mask':'unsigned short' lvalue ParmVar 0x9118d00 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x911af1c <col:38> 'const char_type *' lvalue ParmVar 0x9118d50 '__lo' 'const char_type *')
      (DeclRefExpr 0x911af34 <col:44> 'const char_type *' lvalue ParmVar 0x9118da0 '__hi' 'const char_type *'))))


        const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const (CompoundStmt 0x911b068 </usr/include/c++/4.6/bits/locale_facets.h:212:7, col:52>
  (ReturnStmt 0x911b058 <col:9, col:49>
    (CallExpr 0x911b030 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911afb0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911afa0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911afe4 <col:34> 'mask':'unsigned short' lvalue ParmVar 0x9118ee0 '__m' 'mask':'unsigned short')
      (DeclRefExpr 0x911affc <col:39> 'const char_type *' lvalue ParmVar 0x9118f30 '__lo' 'const char_type *')
      (DeclRefExpr 0x911b014 <col:45> 'const char_type *' lvalue ParmVar 0x9118f80 '__hi' 'const char_type *'))))


        char_type toupper(char_type __c) const (CompoundStmt 0x911b110 </usr/include/c++/4.6/bits/locale_facets.h:226:7, col:39>
  (ReturnStmt 0x911b100 <col:9, col:36>
    (CallExpr 0x911b0e0 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911b090 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911b080 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911b0c4 <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9119060 '__c' 'char_type':'_CharT'))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x911c6a0 </usr/include/c++/4.6/bits/locale_facets.h:241:7, col:46>
  (ReturnStmt 0x911c690 <col:9, col:43>
    (CallExpr 0x911c668 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c600 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c5f0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c634 <col:33> 'char_type *' lvalue ParmVar 0x91191a0 '__lo' 'char_type *')
      (DeclRefExpr 0x911c64c <col:39> 'const char_type *' lvalue ParmVar 0x91191f0 '__hi' 'const char_type *'))))


        char_type tolower(char_type __c) const (CompoundStmt 0x911c748 </usr/include/c++/4.6/bits/locale_facets.h:255:7, col:39>
  (ReturnStmt 0x911c738 <col:9, col:36>
    (CallExpr 0x911c718 <col:16, col:36> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c6c8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c6b8 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c6fc <col:33> 'char_type':'_CharT' lvalue ParmVar 0x9119300 '__c' 'char_type':'_CharT'))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x911c810 </usr/include/c++/4.6/bits/locale_facets.h:270:7, col:46>
  (ReturnStmt 0x911c800 <col:9, col:43>
    (CallExpr 0x911c7d8 <col:16, col:43> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c770 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c760 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c7a4 <col:33> 'char_type *' lvalue ParmVar 0x91193d0 '__lo' 'char_type *')
      (DeclRefExpr 0x911c7bc <col:39> 'const char_type *' lvalue ParmVar 0x9119420 '__hi' 'const char_type *'))))


        char_type widen(char __c) const (CompoundStmt 0x911c8b8 </usr/include/c++/4.6/bits/locale_facets.h:287:7, col:37>
  (ReturnStmt 0x911c8a8 <col:9, col:34>
    (CallExpr 0x911c888 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c838 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c828 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c86c <col:31> 'char' lvalue ParmVar 0x91194f0 '__c' 'char'))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x911c998 </usr/include/c++/4.6/bits/locale_facets.h:306:7, col:50>
  (ReturnStmt 0x911c988 <col:9, col:47>
    (CallExpr 0x911c960 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c8e0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c8d0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c914 <col:31> 'const char *' lvalue ParmVar 0x9119610 '__lo' 'const char *')
      (DeclRefExpr 0x911c92c <col:37> 'const char *' lvalue ParmVar 0x9119660 '__hi' 'const char *')
      (DeclRefExpr 0x911c944 <col:43> 'char_type *' lvalue ParmVar 0x91196b0 '__to' 'char_type *'))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x911ca60 </usr/include/c++/4.6/bits/locale_facets.h:325:7, col:48>
  (ReturnStmt 0x911ca50 <col:9, col:45>
    (CallExpr 0x911ca28 <col:16, col:45> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911c9c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911c9b0 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911c9f4 <col:32> 'char_type':'_CharT' lvalue ParmVar 0x91197f0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x911ca0c <col:37> 'char' lvalue ParmVar 0x9119830 '__dfault' 'char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x911cb60 </usr/include/c++/4.6/bits/locale_facets.h:348:7, col:61>
  (ReturnStmt 0x911cb50 <col:9, col:58>
    (CallExpr 0x911cb20 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x911ca88 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x911ca78 <col:16> 'const __ctype_abstract_base<_CharT> *' this))
      (DeclRefExpr 0x911cabc <col:32> 'const char_type *' lvalue ParmVar 0x9119950 '__lo' 'const char_type *')
      (DeclRefExpr 0x911cad4 <col:38> 'const char_type *' lvalue ParmVar 0x91199a0 '__hi' 'const char_type *')
      (DeclRefExpr 0x911caec <col:44> 'char' lvalue ParmVar 0x91199e0 '__dfault' 'char')
      (DeclRefExpr 0x911cb04 <col:54> 'char *' lvalue ParmVar 0x9119a30 '__to' 'char *'))))


    protected:
    protected:
        __ctype_abstract_base<_CharT>(size_t __refs = (ImplicitCastExpr 0x911acf0 </usr/include/c++/4.6/bits/locale_facets.h:352:45> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x911acd8 <col:45> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x911cb74 </usr/include/c++/4.6/bits/locale_facets.h:352:55> 'size_t':'unsigned int' lvalue ParmVar 0x9119bb0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x911cc10 </usr/include/c++/4.6/bits/locale_facets.h:352:63, col:65>)


        virtual void ~__ctype_abstract_base<_CharT>() (CompoundStmt 0x911cc20 </usr/include/c++/4.6/bits/locale_facets.h:355:32, col:34>)


        virtual bool do_is(mask __m, char_type __c) const = 0;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const = 0;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_toupper(char_type) const = 0;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_tolower(char_type) const = 0;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const = 0;
        virtual char_type do_widen(char) const = 0;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const = 0;
        virtual char do_narrow(char_type, char __dfault) const = 0;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const = 0;
    };
    template <typename _CharT = wchar_t> class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x912bc38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x912bc60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    }
template <typename _CharT = char> class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x911f030 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x911f018 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x911ef88 <col:45> 'int' 1)
    (ImplicitCastExpr 0x911f008 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x911eff0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x911efe0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x911efb8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x911efa0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x91223b8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x91223a0 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x91223c8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x91223f0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91223d8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9122418 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9122400 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9122428 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9122450 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9122438 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9122540 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9122530 <col:9, col:36>
    (CXXMemberCallExpr 0x9122500 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91224e0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9121770
        (CXXThisExpr 0x9122478 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122520 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91224c8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fae0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122650 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9122640 <col:9, col:43>
    (CXXMemberCallExpr 0x91225f8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91225d8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x91218a0
        (CXXThisExpr 0x9122558 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122620 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225a8 <col:33> 'char_type *' lvalue ParmVar 0x911fc20 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122630 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225c0 <col:39> 'const char_type *' lvalue ParmVar 0x911fc90 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9122730 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9122720 <col:9, col:36>
    (CXXMemberCallExpr 0x91226f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91226d0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121960
        (CXXThisExpr 0x9122668 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122710 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91226b8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fda0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122840 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9122830 <col:9, col:43>
    (CXXMemberCallExpr 0x91227e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91227c8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121a90
        (CXXThisExpr 0x9122748 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122810 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122798 <col:33> 'char_type *' lvalue ParmVar 0x911fe70 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122820 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91227b0 <col:39> 'const char_type *' lvalue ParmVar 0x911fec0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9122ad8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x91229a0 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x91228b8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91228a8 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9122884 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
          (CXXThisExpr 0x9122858 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9122990 <line:868:4, col:51>
      (ImplicitCastExpr 0x9122980 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122968 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9122958 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x91228d8 <col:11> 'char [256]' lvalue ->_M_widen 0x911ed40
              (CXXThisExpr 0x91228c8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122940 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122930 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122920 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x91228f8 <col:47> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x91229f0 <line:869:2, col:22> 'void'
    (MemberExpr 0x91229d0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9122100
      (CXXThisExpr 0x91229c0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9122ac8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9122a98 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9122a78 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121b50
        (CXXThisExpr 0x9122a10 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ab8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9122a60 <col:24> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9122f18 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9122d00 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9122b60 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9122b50 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9122b40 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9122b08 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122af8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9122b28 <col:21> 'int' 1))
    (CompoundStmt 0x9122ce8 <line:895:4, line:898:4>
      (CallExpr 0x9122c38 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9122c28 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9122b78 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9122c70 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9122c60 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9122b90 <col:23> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9122c90 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9122c80 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9122ba8 <col:29> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9122ca0 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9122c10 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9122bf0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bc0 <col:35> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9122c00 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bd8 <col:42> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))))
      (ReturnStmt 0x9122cd8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9122cc8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9122cac <col:13> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9122dd8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9122d70 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9122d60 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9122d50 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9122d30 <col:7> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122d20 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9122db8 <line:900:4, col:18> 'void'
      (MemberExpr 0x9122d98 <col:4> '<bound member function type>' ->_M_widen_init 0x9122100
        (CXXThisExpr 0x9122d88 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9122f08 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9122eb0 <col:9, col:40> 'const char *'
      (MemberExpr 0x9122e90 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121cd0
        (CXXThisExpr 0x9122df8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ed8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e48 <col:24> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9122ee8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e60 <col:30> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9122ef8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122e78 <col:36> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9123460 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x91230e8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123000 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9122ff0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122fd8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9122fc8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9122f48 <col:6> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9122f38 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122fb0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122fa0 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122f90 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9122f68 <col:43> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x91230d8 <line:926:4, col:52>
      (ImplicitCastExpr 0x91230c8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x91230b0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x91230a0 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9123020 <col:11> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9123010 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9123088 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9123078 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9123068 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9123040 <col:48> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9123240 <line:927:2, col:43>
    0x9123110 "const char __t =
      (CXXMemberCallExpr 0x91231f8 <col:19, col:42> 'char'
        (MemberExpr 0x91231d8 <col:19> '<bound member function type>' ->do_narrow 0x9121df0
          (CXXThisExpr 0x91231c8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9123220 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9123198 <col:29> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9123230 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x91231b0 <col:34> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char')))")
  (IfStmt 0x9123408 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x91232c0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9123290 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9123280 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123250 <col:6> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
      (ImplicitCastExpr 0x91232b0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x91232a0 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123268 <col:13> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char'))))
    (BinaryOperator 0x91233f0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x91233b0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x91233a0 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9123320 <col:4> 'char [256]' lvalue ->_M_narrow 0x911ee30
            (CXXThisExpr 0x9123310 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9123388 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9123378 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9123368 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9123340 <col:41> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x91233e0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x91233c4 <col:49> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9123450 <line:930:2, col:9>
    (ImplicitCastExpr 0x9123440 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9123424 <col:9> 'const char' lvalue Var 0x9123110 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9123960 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9123718 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123580 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9123538 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9123528 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9123480 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9123560 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9123500 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x91234f0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91234e0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x91234a8 <col:23> 'char' lvalue ->_M_narrow_ok 0x911ee70
                  (CXXThisExpr 0x9123498 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x91234c8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9123570 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9123518 <col:42> '_Bool' true))))
    (CompoundStmt 0x9123700 <line:960:4, line:963:4>
      (CallExpr 0x9123650 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9123640 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x912358c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9123688 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9123678 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x91235a4 <col:23> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))
        (ImplicitCastExpr 0x91236a8 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9123698 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x91235bc <col:29> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x91236b8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9123628 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9123608 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235d4 <col:35> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9123618 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235ec <col:42> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))))
      (ReturnStmt 0x91236f0 <line:962:6, col:13>
        (ImplicitCastExpr 0x91236e0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x91236c4 <col:13> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x91237f0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9123788 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9123778 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9123768 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9123748 <col:7> 'char' lvalue ->_M_narrow_ok 0x911ee70
            (CXXThisExpr 0x9123738 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x91237d0 <line:965:4, col:19> 'void'
      (MemberExpr 0x91237b0 <col:4> '<bound member function type>' ->_M_narrow_init 0x9122080
        (CXXThisExpr 0x91237a0 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9123950 <line:966:2, col:51>
    (CXXMemberCallExpr 0x91238e0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x91238c0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9121fb0
        (CXXThisExpr 0x9123810 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9123910 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123860 <col:25> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9123920 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123878 <col:31> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9123930 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9123890 <col:37> 'char' lvalue ParmVar 0x9120460 '__dfault' 'char'))
      (ImplicitCastExpr 0x9123940 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x91238a8 <col:47> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x91239d0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x91239c0 <col:9, col:16>
    (ImplicitCastExpr 0x91239b0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9123990 <col:16> 'const mask *const' lvalue ->_M_table 0x911ebe0
        (CXXThisExpr 0x9123980 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9123a20 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9123a10 <col:9, col:16>
    (ImplicitCastExpr 0x9123a00 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x91239e4 <col:16> 'char' lvalue ParmVar 0x9121b00 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9123ba8 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9123af8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123ae8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123a34 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123b30 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123b20 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123a4c <col:19> 'char_type *' lvalue ParmVar 0x9121c70 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9123b50 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123b40 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9123a64 <col:27> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9123b60 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ad0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123ab0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a7c <col:33> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9123ac0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a94 <col:40> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))))
  (ReturnStmt 0x9123b98 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9123b88 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9123b6c <col:9> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9123bf8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9123be8 <col:9, col:16>
    (ImplicitCastExpr 0x9123bd8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9123bc0 <col:16> 'char_type':'char' lvalue ParmVar 0x9121d50 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9123d80 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9123cd0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123cc0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123c0c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123d08 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123cf8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9123c24 <col:19> 'char *' lvalue ParmVar 0x9121f50 '__dest' 'char *')))
    (ImplicitCastExpr 0x9123d28 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123d18 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123c3c <col:27> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9123d38 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ca8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123c88 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c54 <col:33> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9123c98 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c6c <col:40> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9123d70 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9123d60 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9123d44 <col:9> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    }
template <typename _CharT> class ctype : public __ctype_abstract_base<_CharT> {
        class ctype;
    public:
    public:
        typedef _CharT char_type;
        typedef typename __ctype_abstract_base<_CharT>::mask mask;
        static locale::id id;
        ctype<_CharT>(size_t __refs = (ImplicitCastExpr 0x911e408 </usr/include/c++/4.6/bits/locale_facets.h:616:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x911e3f0 <col:29> 'int' 0))
) : __ctype_abstract_base<_CharT>((DeclRefExpr 0x911e4a0 </usr/include/c++/4.6/bits/locale_facets.h:616:64> 'size_t':'unsigned int' lvalue ParmVar 0x911d0d0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x911e500 </usr/include/c++/4.6/bits/locale_facets.h:616:72, col:74>)


    protected:
    protected:
        virtual void ~ctype<_CharT>();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type __c) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type __c) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
    };
    static locale::id id(CXXConstructExpr 0x911e748 </usr/include/c++/4.6/bits/locale_facets.h:662:31> 'class locale::id':'class std::locale::id''void (void)')
;
    class ctype : public locale::facet, public std::ctype_base {
        class ctype;
    public:
    public:
        typedef char char_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_del;
        __to_type _M_toupper;
        __to_type _M_tolower;
        const mask *_M_table;
        mutable char _M_widen_ok;
        mutable char _M_widen[256];
        mutable char _M_narrow[256];
        mutable char _M_narrow_ok;
    public:
    public:
        static locale::id id;
        static const size_t table_size = (ImplicitCastExpr 0x911f030 </usr/include/c++/4.6/bits/locale_facets.h:698:45, col:78> 'const size_t':'const unsigned int' <IntegralCast>
  (BinaryOperator 0x911f018 <col:45, col:78> 'int' '+'
    (IntegerLiteral 0x911ef88 <col:45> 'int' 1)
    (ImplicitCastExpr 0x911f008 <col:49, col:78> 'int' <IntegralCast>
      (CXXStaticCastExpr 0x911eff0 <col:49, col:78> 'unsigned char' static_cast<unsigned char> <NoOp>
        (ImplicitCastExpr 0x911efe0 <col:76, col:77> 'unsigned char' <IntegralCast>
          (UnaryOperator 0x911efb8 <col:76, col:77> 'int' prefix '-'
            (IntegerLiteral 0x911efa0 <col:77> 'int' 1)))))))
;
        ctype(const mask *__table = (ImplicitCastExpr 0x91223b8 </usr/include/c++/4.6/bits/locale_facets.h:711:35> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x91223a0 <col:35> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x91223c8 </usr/include/c++/4.6/bits/locale_facets.h:711:51> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x91223f0 </usr/include/c++/4.6/bits/locale_facets.h:711:74> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91223d8 <col:74> 'int' 0))
);
        ctype(__c_locale __cloc, const mask *__table = (ImplicitCastExpr 0x9122418 </usr/include/c++/4.6/bits/locale_facets.h:724:54> 'const mask *' <NullToPointer>
  (IntegerLiteral 0x9122400 <col:54> 'int' 0))
, bool __del = (CXXBoolLiteralExpr 0x9122428 </usr/include/c++/4.6/bits/locale_facets.h:724:70> '_Bool' false)
, size_t __refs = (ImplicitCastExpr 0x9122450 </usr/include/c++/4.6/bits/locale_facets.h:725:22> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9122438 <col:22> 'int' 0))
);
        inline bool is(mask __m, char __c) const;
        inline const char *is(const char *__lo, const char *__hi, mask *__vec) const;
        inline const char *scan_is(mask __m, const char *__lo, const char *__hi) const;
        inline const char *scan_not(mask __m, const char *__lo, const char *__hi) const;
        char_type toupper(char_type __c) const (CompoundStmt 0x9122540 </usr/include/c++/4.6/bits/locale_facets.h:796:7, col:39>
  (ReturnStmt 0x9122530 <col:9, col:36>
    (CXXMemberCallExpr 0x9122500 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91224e0 <col:16, col:22> '<bound member function type>' ->do_toupper 0x9121770
        (CXXThisExpr 0x9122478 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122520 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91224c8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fae0 '__c' 'char_type':'char')))))


        const char_type *toupper(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122650 </usr/include/c++/4.6/bits/locale_facets.h:813:7, col:46>
  (ReturnStmt 0x9122640 <col:9, col:43>
    (CXXMemberCallExpr 0x91225f8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91225d8 <col:16, col:22> '<bound member function type>' ->do_toupper 0x91218a0
        (CXXThisExpr 0x9122558 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122620 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225a8 <col:33> 'char_type *' lvalue ParmVar 0x911fc20 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122630 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91225c0 <col:39> 'const char_type *' lvalue ParmVar 0x911fc90 '__hi' 'const char_type *')))))


        char_type tolower(char_type __c) const (CompoundStmt 0x9122730 </usr/include/c++/4.6/bits/locale_facets.h:829:7, col:39>
  (ReturnStmt 0x9122720 <col:9, col:36>
    (CXXMemberCallExpr 0x91226f0 <col:16, col:36> 'char_type':'char'
      (MemberExpr 0x91226d0 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121960
        (CXXThisExpr 0x9122668 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122710 <col:33> 'char_type':'char' <LValueToRValue>
        (DeclRefExpr 0x91226b8 <col:33> 'char_type':'char' lvalue ParmVar 0x911fda0 '__c' 'char_type':'char')))))


        const char_type *tolower(char_type *__lo, const char_type *__hi) const (CompoundStmt 0x9122840 </usr/include/c++/4.6/bits/locale_facets.h:846:7, col:46>
  (ReturnStmt 0x9122830 <col:9, col:43>
    (CXXMemberCallExpr 0x91227e8 <col:16, col:43> 'const char_type *'
      (MemberExpr 0x91227c8 <col:16, col:22> '<bound member function type>' ->do_tolower 0x9121a90
        (CXXThisExpr 0x9122748 <col:16> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122810 <col:33> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122798 <col:33> 'char_type *' lvalue ParmVar 0x911fe70 '__lo' 'char_type *'))
      (ImplicitCastExpr 0x9122820 <col:39> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x91227b0 <col:39> 'const char_type *' lvalue ParmVar 0x911fec0 '__hi' 'const char_type *')))))


        char_type widen(char __c) const (CompoundStmt 0x9122ad8 </usr/include/c++/4.6/bits/locale_facets.h:866:7, line:871:7>
  (IfStmt 0x91229a0 <line:867:2, line:868:51>
    <<<NULL>>>
    (ImplicitCastExpr 0x91228b8 <line:867:6> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91228a8 <col:6> 'char' <LValueToRValue>
        (MemberExpr 0x9122884 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
          (CXXThisExpr 0x9122858 <col:6> 'const class std::ctype<char> *' this))))
    (ReturnStmt 0x9122990 <line:868:4, col:51>
      (ImplicitCastExpr 0x9122980 <col:11, col:51> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122968 <col:11, col:51> 'char' lvalue
          (ImplicitCastExpr 0x9122958 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x91228d8 <col:11> 'char [256]' lvalue ->_M_widen 0x911ed40
              (CXXThisExpr 0x91228c8 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122940 <col:20, col:50> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122930 <col:47> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122920 <col:47> 'char' <LValueToRValue>
                (DeclRefExpr 0x91228f8 <col:47> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x91229f0 <line:869:2, col:22> 'void'
    (MemberExpr 0x91229d0 <col:2, col:8> '<bound member function type>' ->_M_widen_init 0x9122100
      (CXXThisExpr 0x91229c0 <col:2> 'const class std::ctype<char> *' this)))
  (ReturnStmt 0x9122ac8 <line:870:2, col:27>
    (CXXMemberCallExpr 0x9122a98 <col:9, col:27> 'char_type':'char'
      (MemberExpr 0x9122a78 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121b50
        (CXXThisExpr 0x9122a10 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ab8 <col:24> 'char' <LValueToRValue>
        (DeclRefExpr 0x9122a60 <col:24> 'char' lvalue ParmVar 0x911ff90 '__c' 'char')))))


        const char *widen(const char *__lo, const char *__hi, char_type *__to) const (CompoundStmt 0x9122f18 </usr/include/c++/4.6/bits/locale_facets.h:893:7, line:902:7>
  (IfStmt 0x9122d00 <line:894:2, line:898:4>
    <<<NULL>>>
    (BinaryOperator 0x9122b60 <line:894:6, col:21> '_Bool' '=='
      (ImplicitCastExpr 0x9122b50 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9122b40 <col:6> 'char' <LValueToRValue>
          (MemberExpr 0x9122b08 <col:6> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122af8 <col:6> 'const class std::ctype<char> *' this))))
      (IntegerLiteral 0x9122b28 <col:21> 'int' 1))
    (CompoundStmt 0x9122ce8 <line:895:4, line:898:4>
      (CallExpr 0x9122c38 <line:896:6, col:46> 'void *'
        (ImplicitCastExpr 0x9122c28 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9122b78 <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9122c70 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9122c60 <col:23> 'char_type *' <LValueToRValue>
            (DeclRefExpr 0x9122b90 <col:23> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))
        (ImplicitCastExpr 0x9122c90 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9122c80 <col:29> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9122ba8 <col:29> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))
        (ImplicitCastExpr 0x9122ca0 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9122c10 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9122bf0 <col:35> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bc0 <col:35> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
            (ImplicitCastExpr 0x9122c00 <col:42> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x9122bd8 <col:42> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *')))))
      (ReturnStmt 0x9122cd8 <line:897:6, col:13>
        (ImplicitCastExpr 0x9122cc8 <col:13> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9122cac <col:13> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))))
    <<<NULL>>>)
  (IfStmt 0x9122dd8 <line:899:2, line:900:18>
    <<<NULL>>>
    (UnaryOperator 0x9122d70 <line:899:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9122d60 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9122d50 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9122d30 <col:7> 'char' lvalue ->_M_widen_ok 0x911ec20
            (CXXThisExpr 0x9122d20 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x9122db8 <line:900:4, col:18> 'void'
      (MemberExpr 0x9122d98 <col:4> '<bound member function type>' ->_M_widen_init 0x9122100
        (CXXThisExpr 0x9122d88 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9122f08 <line:901:2, col:40>
    (CXXMemberCallExpr 0x9122eb0 <col:9, col:40> 'const char *'
      (MemberExpr 0x9122e90 <col:9, col:15> '<bound member function type>' ->do_widen 0x9121cd0
        (CXXThisExpr 0x9122df8 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9122ed8 <col:24> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e48 <col:24> 'const char *' lvalue ParmVar 0x9120090 '__lo' 'const char *'))
      (ImplicitCastExpr 0x9122ee8 <col:30> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9122e60 <col:30> 'const char *' lvalue ParmVar 0x91200e0 '__hi' 'const char *'))
      (ImplicitCastExpr 0x9122ef8 <col:36> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9122e78 <col:36> 'char_type *' lvalue ParmVar 0x9120130 '__to' 'char_type *')))))


        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x9123460 </usr/include/c++/4.6/bits/locale_facets.h:924:7, line:931:7>
  (IfStmt 0x91230e8 <line:925:2, line:926:52>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123000 <line:925:6, col:47> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9122ff0 <col:6, col:47> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x9122fd8 <col:6, col:47> 'char' lvalue
          (ImplicitCastExpr 0x9122fc8 <col:6> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9122f48 <col:6> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9122f38 <col:6> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9122fb0 <col:16, col:46> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9122fa0 <col:43> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9122f90 <col:43> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9122f68 <col:43> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    (ReturnStmt 0x91230d8 <line:926:4, col:52>
      (ImplicitCastExpr 0x91230c8 <col:11, col:52> 'char' <LValueToRValue>
        (ArraySubscriptExpr 0x91230b0 <col:11, col:52> 'char' lvalue
          (ImplicitCastExpr 0x91230a0 <col:11> 'char *' <ArrayToPointerDecay>
            (MemberExpr 0x9123020 <col:11> 'char [256]' lvalue ->_M_narrow 0x911ee30
              (CXXThisExpr 0x9123010 <col:11> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x9123088 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x9123078 <col:48> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x9123068 <col:48> 'char_type':'char' <LValueToRValue>
                (DeclRefExpr 0x9123040 <col:48> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))))
    <<<NULL>>>)
  (DeclStmt 0x9123240 <line:927:2, col:43>
    0x9123110 "const char __t =
      (CXXMemberCallExpr 0x91231f8 <col:19, col:42> 'char'
        (MemberExpr 0x91231d8 <col:19> '<bound member function type>' ->do_narrow 0x9121df0
          (CXXThisExpr 0x91231c8 <col:19> 'const class std::ctype<char> *' this))
        (ImplicitCastExpr 0x9123220 <col:29> 'char_type':'char' <LValueToRValue>
          (DeclRefExpr 0x9123198 <col:29> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char'))
        (ImplicitCastExpr 0x9123230 <col:34> 'char' <LValueToRValue>
          (DeclRefExpr 0x91231b0 <col:34> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char')))")
  (IfStmt 0x9123408 <line:928:2, line:929:49>
    <<<NULL>>>
    (BinaryOperator 0x91232c0 <line:928:6, col:13> '_Bool' '!='
      (ImplicitCastExpr 0x9123290 <col:6> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9123280 <col:6> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123250 <col:6> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
      (ImplicitCastExpr 0x91232b0 <col:13> 'int' <IntegralCast>
        (ImplicitCastExpr 0x91232a0 <col:13> 'char' <LValueToRValue>
          (DeclRefExpr 0x9123268 <col:13> 'char' lvalue ParmVar 0x91202b0 '__dfault' 'char'))))
    (BinaryOperator 0x91233f0 <line:929:4, col:49> 'char' lvalue '='
      (ArraySubscriptExpr 0x91233b0 <col:4, col:45> 'char' lvalue
        (ImplicitCastExpr 0x91233a0 <col:4> 'char *' <ArrayToPointerDecay>
          (MemberExpr 0x9123320 <col:4> 'char [256]' lvalue ->_M_narrow 0x911ee30
            (CXXThisExpr 0x9123310 <col:4> 'const class std::ctype<char> *' this)))
        (CXXStaticCastExpr 0x9123388 <col:14, col:44> 'unsigned char' static_cast<unsigned char> <NoOp>
          (ImplicitCastExpr 0x9123378 <col:41> 'unsigned char' <IntegralCast>
            (ImplicitCastExpr 0x9123368 <col:41> 'char_type':'char' <LValueToRValue>
              (DeclRefExpr 0x9123340 <col:41> 'char_type':'char' lvalue ParmVar 0x9120270 '__c' 'char_type':'char')))))
      (ImplicitCastExpr 0x91233e0 <col:49> 'char' <LValueToRValue>
        (DeclRefExpr 0x91233c4 <col:49> 'const char' lvalue Var 0x9123110 '__t' 'const char')))
    <<<NULL>>>)
  (ReturnStmt 0x9123450 <line:930:2, col:9>
    (ImplicitCastExpr 0x9123440 <col:9> 'char' <LValueToRValue>
      (DeclRefExpr 0x9123424 <col:9> 'const char' lvalue Var 0x9123110 '__t' 'const char'))))


        const char_type *narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__to) const (CompoundStmt 0x9123960 </usr/include/c++/4.6/bits/locale_facets.h:958:7, line:967:7>
  (IfStmt 0x9123718 <line:959:2, line:963:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x9123580 <line:959:6, col:46> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9123538 <col:6, col:46> 'long'
        (ImplicitCastExpr 0x9123528 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9123480 <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9123560 <col:23, col:39> 'long' <IntegralCast>
          (BinaryOperator 0x9123500 <col:23, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x91234f0 <col:23> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91234e0 <col:23> 'char' <LValueToRValue>
                (MemberExpr 0x91234a8 <col:23> 'char' lvalue ->_M_narrow_ok 0x911ee70
                  (CXXThisExpr 0x9123498 <col:23> 'const class std::ctype<char> *' this))))
            (IntegerLiteral 0x91234c8 <col:39> 'int' 1)))
        (ImplicitCastExpr 0x9123570 <col:42> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9123518 <col:42> '_Bool' true))))
    (CompoundStmt 0x9123700 <line:960:4, line:963:4>
      (CallExpr 0x9123650 <line:961:6, col:46> 'void *'
        (ImplicitCastExpr 0x9123640 <col:6> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
          (DeclRefExpr 0x912358c <col:6> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
        (ImplicitCastExpr 0x9123688 <col:23> 'void *' <BitCast>
          (ImplicitCastExpr 0x9123678 <col:23> 'char *' <LValueToRValue>
            (DeclRefExpr 0x91235a4 <col:23> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))
        (ImplicitCastExpr 0x91236a8 <col:29> 'const void *' <BitCast>
          (ImplicitCastExpr 0x9123698 <col:29> 'const char_type *' <LValueToRValue>
            (DeclRefExpr 0x91235bc <col:29> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))
        (ImplicitCastExpr 0x91236b8 <col:35, col:42> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x9123628 <col:35, col:42> 'int' '-'
            (ImplicitCastExpr 0x9123608 <col:35> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235d4 <col:35> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
            (ImplicitCastExpr 0x9123618 <col:42> 'const char_type *' <LValueToRValue>
              (DeclRefExpr 0x91235ec <col:42> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *')))))
      (ReturnStmt 0x91236f0 <line:962:6, col:13>
        (ImplicitCastExpr 0x91236e0 <col:13> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x91236c4 <col:13> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))))
    <<<NULL>>>)
  (IfStmt 0x91237f0 <line:964:2, line:965:19>
    <<<NULL>>>
    (UnaryOperator 0x9123788 <line:964:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9123778 <col:7> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9123768 <col:7> 'char' <LValueToRValue>
          (MemberExpr 0x9123748 <col:7> 'char' lvalue ->_M_narrow_ok 0x911ee70
            (CXXThisExpr 0x9123738 <col:7> 'const class std::ctype<char> *' this)))))
    (CXXMemberCallExpr 0x91237d0 <line:965:4, col:19> 'void'
      (MemberExpr 0x91237b0 <col:4> '<bound member function type>' ->_M_narrow_init 0x9122080
        (CXXThisExpr 0x91237a0 <col:4> 'const class std::ctype<char> *' this)))
    <<<NULL>>>)
  (ReturnStmt 0x9123950 <line:966:2, col:51>
    (CXXMemberCallExpr 0x91238e0 <col:9, col:51> 'const char_type *'
      (MemberExpr 0x91238c0 <col:9, col:15> '<bound member function type>' ->do_narrow 0x9121fb0
        (CXXThisExpr 0x9123810 <col:9> 'const class std::ctype<char> *' this))
      (ImplicitCastExpr 0x9123910 <col:25> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123860 <col:25> 'const char_type *' lvalue ParmVar 0x91203d0 '__lo' 'const char_type *'))
      (ImplicitCastExpr 0x9123920 <col:31> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123878 <col:31> 'const char_type *' lvalue ParmVar 0x9120420 '__hi' 'const char_type *'))
      (ImplicitCastExpr 0x9123930 <col:37> 'char' <LValueToRValue>
        (DeclRefExpr 0x9123890 <col:37> 'char' lvalue ParmVar 0x9120460 '__dfault' 'char'))
      (ImplicitCastExpr 0x9123940 <col:47> 'char *' <LValueToRValue>
        (DeclRefExpr 0x91238a8 <col:47> 'char *' lvalue ParmVar 0x91204b0 '__to' 'char *')))))


        const mask *table() const throw() (CompoundStmt 0x91239d0 </usr/include/c++/4.6/bits/locale_facets.h:975:7, col:26>
  (ReturnStmt 0x91239c0 <col:9, col:16>
    (ImplicitCastExpr 0x91239b0 <col:16> 'const mask *' <LValueToRValue>
      (MemberExpr 0x9123990 <col:16> 'const mask *const' lvalue ->_M_table 0x911ebe0
        (CXXThisExpr 0x9123980 <col:16> 'const class std::ctype<char> *' this)))))


        static const mask *classic_table() throw();
    protected:
    protected:
        virtual void ~ctype();
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char __c) const (CompoundStmt 0x9123a20 </usr/include/c++/4.6/bits/locale_facets.h:1076:7, col:21>
  (ReturnStmt 0x9123a10 <col:9, col:16>
    (ImplicitCastExpr 0x9123a00 <col:16> 'char' <LValueToRValue>
      (DeclRefExpr 0x91239e4 <col:16> 'char' lvalue ParmVar 0x9121b00 '__c' 'char'))))


        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const (CompoundStmt 0x9123ba8 </usr/include/c++/4.6/bits/locale_facets.h:1099:7, line:1102:7>
  (CallExpr 0x9123af8 <line:1100:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123ae8 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123a34 <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123b30 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123b20 <col:19> 'char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123a4c <col:19> 'char_type *' lvalue ParmVar 0x9121c70 '__dest' 'char_type *')))
    (ImplicitCastExpr 0x9123b50 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123b40 <col:27> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x9123a64 <col:27> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))
    (ImplicitCastExpr 0x9123b60 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ad0 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123ab0 <col:33> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a7c <col:33> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))
        (ImplicitCastExpr 0x9123ac0 <col:40> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x9123a94 <col:40> 'const char *' lvalue ParmVar 0x9121bd0 '__lo' 'const char *')))))
  (ReturnStmt 0x9123b98 <line:1101:2, col:9>
    (ImplicitCastExpr 0x9123b88 <col:9> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x9123b6c <col:9> 'const char *' lvalue ParmVar 0x9121c20 '__hi' 'const char *'))))


        virtual char do_narrow(char_type __c, char) const (CompoundStmt 0x9123bf8 </usr/include/c++/4.6/bits/locale_facets.h:1125:7, col:21>
  (ReturnStmt 0x9123be8 <col:9, col:16>
    (ImplicitCastExpr 0x9123bd8 <col:16> 'char_type':'char' <LValueToRValue>
      (DeclRefExpr 0x9123bc0 <col:16> 'char_type':'char' lvalue ParmVar 0x9121d50 '__c' 'char_type':'char'))))


        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char, char *__dest) const (CompoundStmt 0x9123d80 </usr/include/c++/4.6/bits/locale_facets.h:1152:7, line:1155:7>
  (CallExpr 0x9123cd0 <line:1153:2, col:44> 'void *'
    (ImplicitCastExpr 0x9123cc0 <col:2> 'void *(*)(void *, const void *, unsigned int)' <FunctionToPointerDecay>
      (DeclRefExpr 0x9123c0c <col:2> 'void *(void *, const void *, unsigned int)' lvalue Function 0x8eb4550 '__builtin_memcpy' 'void *(void *, const void *, unsigned int)'))
    (ImplicitCastExpr 0x9123d08 <col:19> 'void *' <BitCast>
      (ImplicitCastExpr 0x9123cf8 <col:19> 'char *' <LValueToRValue>
        (DeclRefExpr 0x9123c24 <col:19> 'char *' lvalue ParmVar 0x9121f50 '__dest' 'char *')))
    (ImplicitCastExpr 0x9123d28 <col:27> 'const void *' <BitCast>
      (ImplicitCastExpr 0x9123d18 <col:27> 'const char_type *' <LValueToRValue>
        (DeclRefExpr 0x9123c3c <col:27> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))
    (ImplicitCastExpr 0x9123d38 <col:33, col:40> 'unsigned int' <IntegralCast>
      (BinaryOperator 0x9123ca8 <col:33, col:40> 'int' '-'
        (ImplicitCastExpr 0x9123c88 <col:33> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c54 <col:33> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))
        (ImplicitCastExpr 0x9123c98 <col:40> 'const char_type *' <LValueToRValue>
          (DeclRefExpr 0x9123c6c <col:40> 'const char_type *' lvalue ParmVar 0x9121e70 '__lo' 'const char_type *')))))
  (ReturnStmt 0x9123d70 <line:1154:2, col:9>
    (ImplicitCastExpr 0x9123d60 <col:9> 'const char_type *' <LValueToRValue>
      (DeclRefExpr 0x9123d44 <col:9> 'const char_type *' lvalue ParmVar 0x9121ec0 '__hi' 'const char_type *'))))


    private:
    private:
        void _M_narrow_init() const;
        void _M_widen_init() const;
        inline std::ctype<char> &operator=(const std::ctype<char> &);
    };
    class ctype : public __ctype_abstract_base<wchar_t> {
        class ctype;
    public:
    public:
        typedef wchar_t char_type;
        typedef wctype_t __wmask_type;
    protected:
    protected:
        __c_locale _M_c_locale_ctype;
        bool _M_narrow_ok;
        char _M_narrow[128];
        wint_t _M_widen[256];
        mask _M_bit[16];
        __wmask_type _M_wmask[16];
    public:
    public:
        static locale::id id;
        ctype(size_t __refs = (ImplicitCastExpr 0x912bc38 </usr/include/c++/4.6/bits/locale_facets.h:1208:29> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc20 <col:29> 'int' 0))
);
        ctype(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x912bc60 </usr/include/c++/4.6/bits/locale_facets.h:1219:48> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912bc48 <col:48> 'int' 0))
);
    protected:
    protected:
        __wmask_type _M_convert_to_wmask(const mask __m) const throw();
        virtual void ~ctype();
        virtual bool do_is(mask __m, char_type __c) const;
        virtual const char_type *do_is(const char_type *__lo, const char_type *__hi, mask *__vec) const;
        virtual const char_type *do_scan_is(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual const char_type *do_scan_not(mask __m, const char_type *__lo, const char_type *__hi) const;
        virtual char_type do_toupper(char_type) const;
        virtual const char_type *do_toupper(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_tolower(char_type) const;
        virtual const char_type *do_tolower(char_type *__lo, const char_type *__hi) const;
        virtual char_type do_widen(char) const;
        virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__dest) const;
        virtual char do_narrow(char_type, char __dfault) const;
        virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char __dfault, char *__dest) const;
        void _M_initialize_ctype() throw();
        inline std::ctype<wchar_t> &operator=(const std::ctype<wchar_t> &);
    };
    template <typename _CharT = wchar_t> class ctype_byname
template <typename _CharT = char> class ctype_byname
template <typename _CharT> class ctype_byname : public ctype<_CharT> {
        class ctype_byname;
    public:
    public:
        typedef typename ctype<_CharT>::mask mask;
        ctype_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x912c270 </usr/include/c++/4.6/bits/locale_facets.h:1473:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912c258 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname<_CharT>() (CompoundStmt 0x912c280 </usr/include/c++/4.6/bits/locale_facets.h:1477:23, col:25>)


    };
    class ctype_byname : public ctype<char> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x912c8a8 </usr/include/c++/4.6/bits/locale_facets.h:1486:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912c890 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<char> &operator=(const std::ctype_byname<char> &);
    };
    class ctype_byname : public ctype<wchar_t> {
        class ctype_byname;
    public:
    public:
        ctype_byname(const char *__s, size_t __refs = (ImplicitCastExpr 0x912cec8 </usr/include/c++/4.6/bits/locale_facets.h:1499:53> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912ceb0 <col:53> 'int' 0))
);
    protected:
    protected:
        virtual void ~ctype_byname();
        inline std::ctype_byname<wchar_t> &operator=(const std::ctype_byname<wchar_t> &);
    };
}
namespace std {
    bool is(mask __m, char __c) const (CompoundStmt 0x912d288 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:44:3, col:61>
  (ReturnStmt 0x912d278 <col:5, col:56>
    (ImplicitCastExpr 0x912d268 <col:12, col:56> '_Bool' <IntegralToBoolean>
      (BinaryOperator 0x912d250 <col:12, col:56> 'int' '&'
        (ImplicitCastExpr 0x912d220 <col:12, col:52> 'int' <IntegralCast>
          (ImplicitCastExpr 0x912d210 <col:12, col:52> 'mask':'unsigned short' <LValueToRValue>
            (ArraySubscriptExpr 0x912d1e0 <col:12, col:52> 'const mask':'const unsigned short' lvalue
              (ImplicitCastExpr 0x912d1d0 <col:12> 'const mask *' <LValueToRValue>
                (MemberExpr 0x912d150 <col:12> 'const mask *const' lvalue ->_M_table 0x911ebe0
                  (CXXThisExpr 0x912d140 <col:12> 'const class std::ctype<char> *' this)))
              (CXXStaticCastExpr 0x912d1b8 <col:21, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                (ImplicitCastExpr 0x912d1a8 <col:48> 'unsigned char' <IntegralCast>
                  (ImplicitCastExpr 0x912d198 <col:48> 'char' <LValueToRValue>
                    (DeclRefExpr 0x912d170 <col:48> 'char' lvalue ParmVar 0x912d050 '__c' 'char')))))))
        (ImplicitCastExpr 0x912d240 <col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x912d230 <col:56> 'mask':'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x912d1f4 <col:56> 'mask':'unsigned short' lvalue ParmVar 0x912d010 '__m' 'mask':'unsigned short')))))))


    const char *is(const char *__low, const char *__high, mask *__vec) const (CompoundStmt 0x912d6d8 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:49:3, line:53:3>
  (WhileStmt 0x912d688 <line:50:5, line:51:63>
    <<<NULL>>>
    (BinaryOperator 0x912d518 <line:50:12, col:20> '_Bool' '<'
      (ImplicitCastExpr 0x912d4f8 <col:12> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x912d4c4 <col:12> 'const char *' lvalue ParmVar 0x912d320 '__low' 'const char *'))
      (ImplicitCastExpr 0x912d508 <col:20> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x912d4dc <col:20> 'const char *' lvalue ParmVar 0x912d370 '__high' 'const char *')))
    (BinaryOperator 0x912d670 <line:51:7, col:63> 'mask':'unsigned short' lvalue '='
      (UnaryOperator 0x912d560 <col:7, col:13> 'mask':'unsigned short' lvalue prefix '*'
        (UnaryOperator 0x912d548 <col:8, col:13> 'mask *' postfix '++'
          (DeclRefExpr 0x912d530 <col:8> 'mask *' lvalue ParmVar 0x912d3c0 '__vec' 'mask *')))
      (ImplicitCastExpr 0x912d660 <col:18, col:63> 'mask':'unsigned short' <LValueToRValue>
        (ArraySubscriptExpr 0x912d648 <col:18, col:63> 'const mask':'const unsigned short' lvalue
          (ImplicitCastExpr 0x912d638 <col:18> 'const mask *' <LValueToRValue>
            (MemberExpr 0x912d588 <col:18> 'const mask *const' lvalue ->_M_table 0x911ebe0
              (CXXThisExpr 0x912d578 <col:18> 'const class std::ctype<char> *' this)))
          (CXXStaticCastExpr 0x912d620 <col:27, col:62> 'unsigned char' static_cast<unsigned char> <NoOp>
            (ImplicitCastExpr 0x912d610 <col:54, col:60> 'unsigned char' <IntegralCast>
              (ImplicitCastExpr 0x912d600 <col:54, col:60> 'char' <LValueToRValue>
                (UnaryOperator 0x912d5d8 <col:54, col:60> 'const char' lvalue prefix '*'
                  (UnaryOperator 0x912d5c0 <col:55, col:60> 'const char *' postfix '++'
                    (DeclRefExpr 0x912d5a8 <col:55> 'const char *' lvalue ParmVar 0x912d320 '__low' 'const char *'))))))))))
  (ReturnStmt 0x912d6c8 <line:52:5, col:12>
    (ImplicitCastExpr 0x912d6b8 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x912d69c <col:12> 'const char *' lvalue ParmVar 0x912d370 '__high' 'const char *'))))


    const char *scan_is(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x912db98 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:58:3, line:63:3>
  (WhileStmt 0x912db48 <line:59:5, line:61:9>
    <<<NULL>>>
    (BinaryOperator 0x912db00 <line:59:12, line:60:60> '_Bool' '&&'
      (BinaryOperator 0x912d958 <line:59:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x912d938 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x912d904 <col:12> 'const char *' lvalue ParmVar 0x912d7b0 '__low' 'const char *'))
        (ImplicitCastExpr 0x912d948 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x912d91c <col:20> 'const char *' lvalue ParmVar 0x912d800 '__high' 'const char *')))
      (UnaryOperator 0x912dae8 <line:60:8, col:60> '_Bool' prefix '!'
        (ImplicitCastExpr 0x912dad8 <col:9, col:60> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x912dac0 <col:9, col:60> 'int'
            (BinaryOperator 0x912daa8 <col:10, col:57> 'int' '&'
              (ImplicitCastExpr 0x912da78 <col:10, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x912da68 <col:10, col:53> 'mask':'unsigned short' <LValueToRValue>
                  (ArraySubscriptExpr 0x912da38 <col:10, col:53> 'const mask':'const unsigned short' lvalue
                    (ImplicitCastExpr 0x912da28 <col:10> 'const mask *' <LValueToRValue>
                      (MemberExpr 0x912d980 <col:10> 'const mask *const' lvalue ->_M_table 0x911ebe0
                        (CXXThisExpr 0x912d970 <col:10> 'const class std::ctype<char> *' this)))
                    (CXXStaticCastExpr 0x912da10 <col:19, col:52> 'unsigned char' static_cast<unsigned char> <NoOp>
                      (ImplicitCastExpr 0x912da00 <col:46, col:47> 'unsigned char' <IntegralCast>
                        (ImplicitCastExpr 0x912d9f0 <col:46, col:47> 'char' <LValueToRValue>
                          (UnaryOperator 0x912d9c8 <col:46, col:47> 'const char' lvalue prefix '*'
                            (ImplicitCastExpr 0x912d9b8 <col:47> 'const char *' <LValueToRValue>
                              (DeclRefExpr 0x912d9a0 <col:47> 'const char *' lvalue ParmVar 0x912d7b0 '__low' 'const char *')))))))))
              (ImplicitCastExpr 0x912da98 <col:57> 'int' <IntegralCast>
                (ImplicitCastExpr 0x912da88 <col:57> 'mask':'unsigned short' <LValueToRValue>
                  (DeclRefExpr 0x912da4c <col:57> 'mask':'unsigned short' lvalue ParmVar 0x912d760 '__m' 'mask':'unsigned short'))))))))
    (UnaryOperator 0x912db30 <line:61:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x912db18 <col:9> 'const char *' lvalue ParmVar 0x912d7b0 '__low' 'const char *')))
  (ReturnStmt 0x912db88 <line:62:5, col:12>
    (ImplicitCastExpr 0x912db78 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x912db5c <col:12> 'const char *' lvalue ParmVar 0x912d7b0 '__low' 'const char *'))))


    const char *scan_not(mask __m, const char *__low, const char *__high) const (CompoundStmt 0x912e060 </usr/include/c++/4.6//i686-linux-gnu/bits/ctype_inline.h:68:3, line:73:3>
  (WhileStmt 0x912e010 <line:69:5, line:71:9>
    <<<NULL>>>
    (BinaryOperator 0x912dfc8 <line:69:12, line:70:64> '_Bool' '&&'
      (BinaryOperator 0x912de18 <line:69:12, col:20> '_Bool' '<'
        (ImplicitCastExpr 0x912ddf8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x912ddc4 <col:12> 'const char *' lvalue ParmVar 0x912dc70 '__low' 'const char *'))
        (ImplicitCastExpr 0x912de08 <col:20> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x912dddc <col:20> 'const char *' lvalue ParmVar 0x912dcc0 '__high' 'const char *')))
      (BinaryOperator 0x912dfb0 <line:70:8, col:64> '_Bool' '!='
        (ParenExpr 0x912df80 <col:8, col:59> 'int'
          (BinaryOperator 0x912df68 <col:9, col:56> 'int' '&'
            (ImplicitCastExpr 0x912df38 <col:9, col:52> 'int' <IntegralCast>
              (ImplicitCastExpr 0x912df28 <col:9, col:52> 'mask':'unsigned short' <LValueToRValue>
                (ArraySubscriptExpr 0x912def8 <col:9, col:52> 'const mask':'const unsigned short' lvalue
                  (ImplicitCastExpr 0x912dee8 <col:9> 'const mask *' <LValueToRValue>
                    (MemberExpr 0x912de40 <col:9> 'const mask *const' lvalue ->_M_table 0x911ebe0
                      (CXXThisExpr 0x912de30 <col:9> 'const class std::ctype<char> *' this)))
                  (CXXStaticCastExpr 0x912ded0 <col:18, col:51> 'unsigned char' static_cast<unsigned char> <NoOp>
                    (ImplicitCastExpr 0x912dec0 <col:45, col:46> 'unsigned char' <IntegralCast>
                      (ImplicitCastExpr 0x912deb0 <col:45, col:46> 'char' <LValueToRValue>
                        (UnaryOperator 0x912de88 <col:45, col:46> 'const char' lvalue prefix '*'
                          (ImplicitCastExpr 0x912de78 <col:46> 'const char *' <LValueToRValue>
                            (DeclRefExpr 0x912de60 <col:46> 'const char *' lvalue ParmVar 0x912dc70 '__low' 'const char *')))))))))
            (ImplicitCastExpr 0x912df58 <col:56> 'int' <IntegralCast>
              (ImplicitCastExpr 0x912df48 <col:56> 'mask':'unsigned short' <LValueToRValue>
                (DeclRefExpr 0x912df0c <col:56> 'mask':'unsigned short' lvalue ParmVar 0x912dc20 '__m' 'mask':'unsigned short')))))
        (IntegerLiteral 0x912df98 <col:64> 'int' 0)))
    (UnaryOperator 0x912dff8 <line:71:7, col:9> 'const char *' lvalue prefix '++'
      (DeclRefExpr 0x912dfe0 <col:9> 'const char *' lvalue ParmVar 0x912dc70 '__low' 'const char *')))
  (ReturnStmt 0x912e050 <line:72:5, col:12>
    (ImplicitCastExpr 0x912e040 <col:12> 'const char *' <LValueToRValue>
      (DeclRefExpr 0x912e024 <col:12> 'const char *' lvalue ParmVar 0x912dc70 '__low' 'const char *'))))


}
namespace std {
    class __num_base {
        class __num_base;
    public:
    public:
        enum  {
            _S_ominus,
            _S_oplus,
            _S_ox,
            _S_oX,
            _S_odigits,
            _S_odigits_end = (ImplicitCastExpr 0x912e6c8 </usr/include/c++/4.6/bits/locale_facets.h:1530:26, col:39> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912e458 <col:26, col:39> 'int' '+'
    (DeclRefExpr 0x912e424 <col:26> 'int' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x912e440 <col:39> 'int' 16)))
,
            _S_oudigits = (ImplicitCastExpr 0x912e6d8 </usr/include/c++/4.6/bits/locale_facets.h:1531:23> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x912e4a4 <col:23> 'int' EnumConstant 0x912e470 '_S_odigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
,
            _S_oudigits_end = (ImplicitCastExpr 0x912e6e8 </usr/include/c++/4.6/bits/locale_facets.h:1532:27, col:41> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912e528 <col:27, col:41> 'int' '+'
    (DeclRefExpr 0x912e4f4 <col:27> 'int' EnumConstant 0x912e4c0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x912e510 <col:41> 'int' 16)))
,
            _S_oe = (ImplicitCastExpr 0x912e6f8 </usr/include/c++/4.6/bits/locale_facets.h:1533:17, col:30> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912e5a8 <col:17, col:30> 'int' '+'
    (DeclRefExpr 0x912e574 <col:17> 'int' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x912e590 <col:30> 'int' 14)))
,
            _S_oE = (ImplicitCastExpr 0x912e708 </usr/include/c++/4.6/bits/locale_facets.h:1534:17, col:31> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912e628 <col:17, col:31> 'int' '+'
    (DeclRefExpr 0x912e5f4 <col:17> 'int' EnumConstant 0x912e4c0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
    (IntegerLiteral 0x912e610 <col:31> 'int' 14)))
,
            _S_oend = (ImplicitCastExpr 0x912e718 </usr/include/c++/4.6/bits/locale_facets.h:1535:12> 'unsigned int' <IntegralCast>
  (DeclRefExpr 0x912e674 <col:12> 'int' EnumConstant 0x912e540 '_S_oudigits_end' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))

        };
        static const char *_S_atoms_out;
        static const char *_S_atoms_in;
        enum  {
            _S_iminus,
            _S_iplus,
            _S_ix,
            _S_iX,
            _S_izero,
            _S_ie = (ImplicitCastExpr 0x912eab8 </usr/include/c++/4.6/bits/locale_facets.h:1556:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912e998 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x912e964 <col:15> 'int' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x912e980 <col:26> 'int' 14)))
,
            _S_iE = (ImplicitCastExpr 0x912eac8 </usr/include/c++/4.6/bits/locale_facets.h:1557:15, col:26> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x912ea18 <col:15, col:26> 'int' '+'
    (DeclRefExpr 0x912e9e4 <col:15> 'int' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')
    (IntegerLiteral 0x912ea00 <col:26> 'int' 20)))
,
            _S_iend = (ImplicitCastExpr 0x912ead8 </usr/include/c++/4.6/bits/locale_facets.h:1558:17> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x912ea68 <col:17> 'int' 26))

        };
        static void _S_format_float(const std::ios_base &__io, char *__fptr, char __mod) throw();
    };
    template <typename _CharT = wchar_t> struct __numpunct_cache
template <typename _CharT = char> struct __numpunct_cache
template <typename _CharT> struct __numpunct_cache : public locale::facet {
        struct __numpunct_cache;
        const char *_M_grouping;
        size_t _M_grouping_size;
        bool _M_use_grouping;
        const _CharT *_M_truename;
        size_t _M_truename_size;
        const _CharT *_M_falsename;
        size_t _M_falsename_size;
        _CharT _M_decimal_point;
        _CharT _M_thousands_sep;
        _CharT _M_atoms_out[36];
        _CharT _M_atoms_in[26];
        bool _M_allocated;
        __numpunct_cache<_CharT>(size_t __refs = (ImplicitCastExpr 0x91308e8 </usr/include/c++/4.6/bits/locale_facets.h:1594:40> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91308d0 <col:40> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x91308f4 </usr/include/c++/4.6/bits/locale_facets.h:1595:15> 'size_t':'unsigned int' lvalue ParmVar 0x912f3e0 '__refs' 'size_t':'unsigned int')
), _M_grouping((IntegerLiteral 0x9130988 </usr/include/c++/4.6/bits/locale_facets.h:1595:36> 'int' 0)
), _M_grouping_size((IntegerLiteral 0x91309e8 </usr/include/c++/4.6/bits/locale_facets.h:1595:57> 'int' 0)
), _M_use_grouping((CXXBoolLiteralExpr 0x9130a48 </usr/include/c++/4.6/bits/locale_facets.h:1596:18> '_Bool' false)
), _M_truename((IntegerLiteral 0x9130a98 </usr/include/c++/4.6/bits/locale_facets.h:1597:14> 'int' 0)
), _M_truename_size((IntegerLiteral 0x9130ae8 </usr/include/c++/4.6/bits/locale_facets.h:1597:35> 'int' 0)
), _M_falsename((IntegerLiteral 0x9130b48 </usr/include/c++/4.6/bits/locale_facets.h:1597:52> 'int' 0)
), _M_falsename_size((IntegerLiteral 0x9130b98 </usr/include/c++/4.6/bits/locale_facets.h:1598:20> 'int' 0)
), _M_decimal_point((CXXUnresolvedConstructExpr 0x9130c00 </usr/include/c++/4.6/bits/locale_facets.h:1598:41, col:48> '_CharT')
), _M_thousands_sep((CXXUnresolvedConstructExpr 0x9130c60 </usr/include/c++/4.6/bits/locale_facets.h:1599:19, col:26> '_CharT')
), _M_allocated((CXXBoolLiteralExpr 0x9130cb8 </usr/include/c++/4.6/bits/locale_facets.h:1599:43> '_Bool' false)
) (CompoundStmt 0x9130d38 </usr/include/c++/4.6/bits/locale_facets.h:1600:9, col:11>)


        void ~__numpunct_cache<_CharT>();
        void _M_cache(const std::locale &__loc);
    private:
    private:
        __numpunct_cache<_CharT> &operator=(const __numpunct_cache<_CharT> &);
        __numpunct_cache<_CharT>(const __numpunct_cache<_CharT> &);
    };
    void ~__numpunct_cache<_CharT>() (CompoundStmt 0x9131100 </usr/include/c++/4.6/bits/locale_facets.h:1617:5, line:1624:5>
  (IfStmt 0x91310e0 <line:1618:7, line:1623:2>
    <<<NULL>>>
    (MemberExpr 0x9130fc8 <line:1618:11> '_Bool' lvalue ->_M_allocated 0x912f3a0
      (CXXThisExpr 0x9130fb8 <col:11> '__numpunct_cache<_CharT> *' this))
    (CompoundStmt 0x91310c0 <line:1619:2, line:1623:2>
      (CXXDeleteExpr 0x9131018 <line:1620:4, col:14> 'void'
        (MemberExpr 0x9130ff8 <col:14> 'const char *' lvalue ->_M_grouping 0x912ef90
          (CXXThisExpr 0x9130fe8 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x9131060 <line:1621:4, col:14> 'void'
        (MemberExpr 0x9131040 <col:14> 'const _CharT *' lvalue ->_M_truename 0x912f070
          (CXXThisExpr 0x9131030 <col:14> '__numpunct_cache<_CharT> *' this)))
      (CXXDeleteExpr 0x91310a8 <line:1622:4, col:14> 'void'
        (MemberExpr 0x9131088 <col:14> 'const _CharT *' lvalue ->_M_falsename 0x912f0f0
          (CXXThisExpr 0x9131078 <col:14> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>))


    template <typename _CharT = wchar_t> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    }
template <typename _CharT = char> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    }
template <typename _CharT> class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        typedef __numpunct_cache<_CharT> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct<_CharT>(size_t __refs = (ImplicitCastExpr 0x91322c0 </usr/include/c++/4.6/bits/locale_facets.h:1665:32> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91322a8 <col:32> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9132344 </usr/include/c++/4.6/bits/locale_facets.h:1666:15> 'size_t':'unsigned int' lvalue ParmVar 0x9131820 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x91323d8 </usr/include/c++/4.6/bits/locale_facets.h:1666:32> 'int' 0)
) (CompoundStmt 0x9132498 </usr/include/c++/4.6/bits/locale_facets.h:1667:7, col:35>
  (CallExpr 0x9132478 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x9132458 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9132240
      (CXXThisExpr 0x9132448 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__cache_type *__cache, size_t __refs = (ImplicitCastExpr 0x91322e8 </usr/include/c++/4.6/bits/locale_facets.h:1679:55> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91322d0 <col:55> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x91324ac </usr/include/c++/4.6/bits/locale_facets.h:1680:15> 'size_t':'unsigned int' lvalue ParmVar 0x9131950 '__refs' 'size_t':'unsigned int')
), _M_data((DeclRefExpr 0x9132548 </usr/include/c++/4.6/bits/locale_facets.h:1680:32> '__cache_type *' lvalue ParmVar 0x9131910 '__cache' '__cache_type *')
) (CompoundStmt 0x91325f0 </usr/include/c++/4.6/bits/locale_facets.h:1681:7, col:35>
  (CallExpr 0x91325d0 <col:9, col:32> '<dependent type>'
    (MemberExpr 0x91325b0 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9132240
      (CXXThisExpr 0x91325a0 <col:9> 'numpunct<_CharT> *' this))))


        numpunct<_CharT>(__c_locale __cloc, size_t __refs = (ImplicitCastExpr 0x9132310 </usr/include/c++/4.6/bits/locale_facets.h:1693:51> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x91322f8 <col:51> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9132604 </usr/include/c++/4.6/bits/locale_facets.h:1694:15> 'size_t':'unsigned int' lvalue ParmVar 0x9131ab0 '__refs' 'size_t':'unsigned int')
), _M_data((IntegerLiteral 0x9132698 </usr/include/c++/4.6/bits/locale_facets.h:1694:32> 'int' 0)
) (CompoundStmt 0x9132758 </usr/include/c++/4.6/bits/locale_facets.h:1695:7, col:41>
  (CallExpr 0x9132738 <col:9, col:38> '<dependent type>'
    (MemberExpr 0x9132700 <col:9> '<bound member function type>' ->_M_initialize_numpunct 0x9132240
      (CXXThisExpr 0x91326f0 <col:9> 'numpunct<_CharT> *' this))
    (DeclRefExpr 0x9132720 <col:32> '__c_locale':'struct __locale_struct *' lvalue ParmVar 0x9131a70 '__cloc' '__c_locale':'struct __locale_struct *')))


        char_type decimal_point() const (CompoundStmt 0x9132800 </usr/include/c++/4.6/bits/locale_facets.h:1708:7, col:42>
  (ReturnStmt 0x91327f0 <col:9, col:39>
    (CallExpr 0x91327d0 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9132798 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9132788 <col:16> 'const numpunct<_CharT> *' this)))))


        char_type thousands_sep() const (CompoundStmt 0x9132890 </usr/include/c++/4.6/bits/locale_facets.h:1721:7, col:42>
  (ReturnStmt 0x9132880 <col:9, col:39>
    (CallExpr 0x9132860 <col:16, col:39> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9132828 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9132818 <col:16> 'const numpunct<_CharT> *' this)))))


        string grouping() const (CompoundStmt 0x9132920 </usr/include/c++/4.6/bits/locale_facets.h:1752:7, col:37>
  (ReturnStmt 0x9132910 <col:9, col:34>
    (CallExpr 0x91328f0 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91328b8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91328a8 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type truename() const (CompoundStmt 0x91329b0 </usr/include/c++/4.6/bits/locale_facets.h:1765:7, col:37>
  (ReturnStmt 0x91329a0 <col:9, col:34>
    (CallExpr 0x9132980 <col:16, col:34> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9132948 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9132938 <col:16> 'const numpunct<_CharT> *' this)))))


        string_type falsename() const (CompoundStmt 0x9132a40 </usr/include/c++/4.6/bits/locale_facets.h:1778:7, col:38>
  (ReturnStmt 0x9132a30 <col:9, col:35>
    (CallExpr 0x9132a10 <col:16, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91329d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91329c8 <col:16> 'const numpunct<_CharT> *' this)))))


    protected:
    protected:
        virtual void ~numpunct<_CharT>();
        virtual char_type do_decimal_point() const (CompoundStmt 0x9132ad0 </usr/include/c++/4.6/bits/locale_facets.h:1795:7, col:43>
  (ReturnStmt 0x9132ac0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9132a88 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9132a68 <col:16> '__cache_type *const' lvalue ->_M_data 0x9131740
        (CXXThisExpr 0x9132a58 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual char_type do_thousands_sep() const (CompoundStmt 0x9132b60 </usr/include/c++/4.6/bits/locale_facets.h:1807:7, col:43>
  (ReturnStmt 0x9132b50 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9132b18 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9132af8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9131740
        (CXXThisExpr 0x9132ae8 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string do_grouping() const (CompoundStmt 0x9132bf0 </usr/include/c++/4.6/bits/locale_facets.h:1820:7, col:38>
  (ReturnStmt 0x9132be0 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9132ba8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9132b88 <col:16> '__cache_type *const' lvalue ->_M_data 0x9131740
        (CXXThisExpr 0x9132b78 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_truename() const (CompoundStmt 0x9132c80 </usr/include/c++/4.6/bits/locale_facets.h:1833:7, col:38>
  (ReturnStmt 0x9132c70 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9132c38 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9132c18 <col:16> '__cache_type *const' lvalue ->_M_data 0x9131740
        (CXXThisExpr 0x9132c08 <col:16> 'const numpunct<_CharT> *' this)))))


        virtual string_type do_falsename() const (CompoundStmt 0x9132d10 </usr/include/c++/4.6/bits/locale_facets.h:1846:7, col:39>
  (ReturnStmt 0x9132d00 <col:9, col:25>
    (CXXDependentScopeMemberExpr 0x9132cc8 <col:16, col:25> '<dependent type>' lvalue
      (MemberExpr 0x9132ca8 <col:16> '__cache_type *const' lvalue ->_M_data 0x9131740
        (CXXThisExpr 0x9132c98 <col:16> 'const numpunct<_CharT> *' this)))))


        void _M_initialize_numpunct(__c_locale __cloc = (ImplicitCastExpr 0x9132338 </usr/include/c++/4.6/bits/locale_facets.h:1850:50> '__c_locale':'struct __locale_struct *' <NullToPointer>
  (IntegerLiteral 0x9132320 <col:50> 'int' 0))
);
    };
    static locale::id id(CXXConstructExpr 0x9132f68 </usr/include/c++/4.6/bits/locale_facets.h:1854:34> 'class locale::id':'class std::locale::id''void (void)')
;
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    void ~numpunct();
    void _M_initialize_numpunct(__c_locale __cloc);
    template <typename _CharT = wchar_t> class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    }
template <typename _CharT = char> class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    }
template <typename _CharT> class numpunct_byname : public numpunct<_CharT> {
        class numpunct_byname;
    public:
    public:
        typedef _CharT char_type;
        typedef basic_string<_CharT> string_type;
        numpunct_byname<_CharT>(const char *__s, size_t __refs = (ImplicitCastExpr 0x9137c90 </usr/include/c++/4.6/bits/locale_facets.h:1881:56> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9137c78 <col:56> 'int' 0))
) : numpunct<_CharT>((DeclRefExpr 0x9137d30 </usr/include/c++/4.6/bits/locale_facets.h:1882:26> 'size_t':'unsigned int' lvalue ParmVar 0x9137ac0 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x91381b8 </usr/include/c++/4.6/bits/locale_facets.h:1883:7, line:1892:7>
  (IfStmt 0x9138198 <line:1884:2, line:1891:4>
    <<<NULL>>>
    (BinaryOperator 0x9137f48 <line:1884:6, line:1885:43> '_Bool' '&&'
      (BinaryOperator 0x9137e50 <line:1884:6, col:36> '_Bool' '!='
        (CallExpr 0x9137df0 <col:6, col:31> 'int'
          (ImplicitCastExpr 0x9137de0 <col:6> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9137d8c <col:6> 'int (const char *, const char *)' lvalue Function 0x9088240 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9137e18 <col:23> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9137da4 <col:23> 'const char *' lvalue ParmVar 0x9137a80 '__s' 'const char *'))
          (ImplicitCastExpr 0x9137e28 <col:28> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9137dbc <col:28> 'const char [2]' lvalue "C")))
        (IntegerLiteral 0x9137e38 <col:36> 'int' 0))
      (BinaryOperator 0x9137f30 <line:1885:9, col:43> '_Bool' '!='
        (CallExpr 0x9137ed0 <col:9, col:38> 'int'
          (ImplicitCastExpr 0x9137ec0 <col:9> 'int (*)(const char *, const char *)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9137e68 <col:9> 'int (const char *, const char *)' lvalue Function 0x9088240 '__builtin_strcmp' 'int (const char *, const char *)'))
          (ImplicitCastExpr 0x9137ef8 <col:26> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9137e80 <col:26> 'const char *' lvalue ParmVar 0x9137a80 '__s' 'const char *'))
          (ImplicitCastExpr 0x9137f08 <col:31> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x9137e98 <col:31> 'const char [6]' lvalue "POSIX")))
        (IntegerLiteral 0x9137f18 <col:43> 'int' 0)))
    (CompoundStmt 0x9138178 <line:1886:4, line:1891:4>
      (DeclStmt 0x9137fa8 <line:1887:6, col:22>
        0x9137f70 "__c_locale __tmp")
      (CallExpr 0x9138050 <line:1888:6, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9137fe8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9137fd8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x913801c <col:31> '__c_locale':'struct __locale_struct *' lvalue Var 0x9137f70 '__tmp' '__c_locale':'struct __locale_struct *')
        (DeclRefExpr 0x9138034 <col:38> 'const char *' lvalue ParmVar 0x9137a80 '__s' 'const char *'))
      (CallExpr 0x91380d8 <line:1889:6, col:40> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9138088 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9138078 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x91380bc <col:35> '__c_locale':'struct __locale_struct *' lvalue Var 0x9137f70 '__tmp' '__c_locale':'struct __locale_struct *'))
      (CallExpr 0x9138158 <line:1890:6, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9138108 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x91380f8 <col:6> 'numpunct_byname<_CharT> *' this))
        (DeclRefExpr 0x913813c <col:32> '__c_locale':'struct __locale_struct *' lvalue Var 0x9137f70 '__tmp' '__c_locale':'struct __locale_struct *')))
    <<<NULL>>>))


    protected:
    protected:
        virtual void ~numpunct_byname<_CharT>() (CompoundStmt 0x91381d0 </usr/include/c++/4.6/bits/locale_facets.h:1896:26, col:28>)


    };
    template <typename _CharT = wchar_t, typename _InIter = std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    }
template <typename _CharT = char, typename _InIter = std::istreambuf_iterator<char, std::char_traits<char> >> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    }
template <typename _CharT, typename _InIter = istreambuf_iterator<_CharT>> class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef _CharT char_type;
        typedef _InIter iter_type;
        static locale::id id;
        num_get<_CharT, _InIter>(size_t __refs = (ImplicitCastExpr 0x913cfc0 </usr/include/c++/4.6/bits/locale_facets.h:1936:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x913cfa8 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x913cfcc </usr/include/c++/4.6/bits/locale_facets.h:1936:42> 'size_t':'unsigned int' lvalue ParmVar 0x9138560 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x913d070 </usr/include/c++/4.6/bits/locale_facets.h:1936:50, col:52>)


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x913d198 </usr/include/c++/4.6/bits/locale_facets.h:1964:7, col:61>
  (ReturnStmt 0x913d188 <col:9, col:58>
    (CallExpr 0x913d158 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913d0a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913d098 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913d0dc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9138660 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d0f4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x91386a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d10c <col:42> 'class std::ios_base' lvalue ParmVar 0x91386f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913d124 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9138760 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913d13c <col:55> '_Bool' lvalue ParmVar 0x91387b0 '__v' '_Bool &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x913d2b0 </usr/include/c++/4.6/bits/locale_facets.h:2000:7, col:61>
  (ReturnStmt 0x913d2a0 <col:9, col:58>
    (CallExpr 0x913d270 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913d1c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913d1b0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913d1f4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9138900 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d20c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9138940 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d224 <col:42> 'class std::ios_base' lvalue ParmVar 0x9138990 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913d23c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9138a00 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913d254 <col:55> 'long' lvalue ParmVar 0x9138a50 '__v' 'long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x913d3c8 </usr/include/c++/4.6/bits/locale_facets.h:2005:7, col:61>
  (ReturnStmt 0x913d3b8 <col:9, col:58>
    (CallExpr 0x913d388 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913d2d8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913d2c8 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913d30c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9138ba0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d324 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9138be0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d33c <col:42> 'class std::ios_base' lvalue ParmVar 0x9138c30 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913d354 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9138ca0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913d36c <col:55> 'unsigned short' lvalue ParmVar 0x9138cf0 '__v' 'unsigned short &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x913fc08 </usr/include/c++/4.6/bits/locale_facets.h:2010:7, col:61>
  (ReturnStmt 0x913d4d0 <col:9, col:58>
    (CallExpr 0x913d4a0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913d3f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913d3e0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913d424 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9138e40 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d43c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9138e80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913d454 <col:42> 'class std::ios_base' lvalue ParmVar 0x9138ed0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913d46c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9138f40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913d484 <col:55> 'unsigned int' lvalue ParmVar 0x9138f90 '__v' 'unsigned int &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x913fd20 </usr/include/c++/4.6/bits/locale_facets.h:2015:7, col:61>
  (ReturnStmt 0x913fd10 <col:9, col:58>
    (CallExpr 0x913fce0 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913fc30 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913fc20 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913fc64 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x91390e0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913fc7c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9139120 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913fc94 <col:42> 'class std::ios_base' lvalue ParmVar 0x91394f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913fcac <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9139560 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913fcc4 <col:55> 'unsigned long' lvalue ParmVar 0x91395b0 '__v' 'unsigned long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x913fe38 </usr/include/c++/4.6/bits/locale_facets.h:2021:7, col:61>
  (ReturnStmt 0x913fe28 <col:9, col:58>
    (CallExpr 0x913fdf8 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913fd48 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913fd38 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913fd7c <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9139700 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913fd94 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9139740 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913fdac <col:42> 'class std::ios_base' lvalue ParmVar 0x9139790 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913fdc4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9139800 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913fddc <col:55> 'long long' lvalue ParmVar 0x9139850 '__v' 'long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x913ff50 </usr/include/c++/4.6/bits/locale_facets.h:2026:7, col:61>
  (ReturnStmt 0x913ff40 <col:9, col:58>
    (CallExpr 0x913ff10 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913fe60 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913fe50 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913fe94 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x91399a0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913feac <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x91399e0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913fec4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9139a30 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913fedc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9139aa0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x913fef4 <col:55> 'unsigned long long' lvalue ParmVar 0x9139af0 '__v' 'unsigned long long &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x9140068 </usr/include/c++/4.6/bits/locale_facets.h:2059:7, col:61>
  (ReturnStmt 0x9140058 <col:9, col:58>
    (CallExpr 0x9140028 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x913ff78 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x913ff68 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x913ffac <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9139c40 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x913ffc4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9139c80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x913ffdc <col:42> 'class std::ios_base' lvalue ParmVar 0x9139cd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x913fff4 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9139d40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x914000c <col:55> 'float' lvalue ParmVar 0x9139d90 '__v' 'float &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x9140180 </usr/include/c++/4.6/bits/locale_facets.h:2064:7, col:61>
  (ReturnStmt 0x9140170 <col:9, col:58>
    (CallExpr 0x9140140 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9140090 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9140080 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x91400c4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x9139ee0 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x91400dc <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x9139f20 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x91400f4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9139f70 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914010c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9139fe0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9140124 <col:55> 'double' lvalue ParmVar 0x913a030 '__v' 'double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9140298 </usr/include/c++/4.6/bits/locale_facets.h:2069:7, col:61>
  (ReturnStmt 0x9140288 <col:9, col:58>
    (CallExpr 0x9140258 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91401a8 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9140198 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x91401dc <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x913a180 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x91401f4 <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x913a1c0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x914020c <col:42> 'class std::ios_base' lvalue ParmVar 0x913a210 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9140224 <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913a280 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x914023c <col:55> 'long double' lvalue ParmVar 0x913a2d0 '__v' 'long double &'))))


        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x91403b0 </usr/include/c++/4.6/bits/locale_facets.h:2101:7, col:61>
  (ReturnStmt 0x91403a0 <col:9, col:58>
    (CallExpr 0x9140370 <col:16, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91402c0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91402b0 <col:16> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x91402f4 <col:29> 'iter_type':'_InIter' lvalue ParmVar 0x913a420 '__in' 'iter_type':'_InIter')
      (DeclRefExpr 0x914030c <col:35> 'iter_type':'_InIter' lvalue ParmVar 0x913a460 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9140324 <col:42> 'class std::ios_base' lvalue ParmVar 0x913a4b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914033c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913a520 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9140354 <col:55> 'void *' lvalue ParmVar 0x913a570 '__v' 'void *&'))))


    protected:
    protected:
        virtual void ~num_get<_CharT, _InIter>() (CompoundStmt 0x91403c8 </usr/include/c++/4.6/bits/locale_facets.h:2105:26, col:28>)


        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const (CompoundStmt 0x91411f8 </usr/include/c++/4.6/bits/locale_facets.h:2119:9, line:2136:2>
  (DeclStmt 0x9140458 <line:2120:4, col:18>
    0x91403f0 "int __ret =
      (UnaryOperator 0x9140440 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9140428 <col:17> 'int' 1))")
  (IfStmt 0x91411b0 <line:2121:4, line:2134:6>
    <<<NULL>>>
    (BinaryOperator 0x91404b8 <line:2121:8, col:17> '_Bool' '<='
      (ImplicitCastExpr 0x9140498 <col:8> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9140468 <col:8> 'size_t':'unsigned int' lvalue ParmVar 0x913b0f0 '__len' 'size_t':'unsigned int'))
      (ImplicitCastExpr 0x91404a8 <col:17> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9140480 <col:17> 'int' 10)))
    (CompoundStmt 0x9140830 <line:2122:6, line:2125:6>
      (IfStmt 0x9140810 <line:2123:8, line:2124:28>
        <<<NULL>>>
        (BinaryOperator 0x9140710 <line:2123:12, col:69> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x9140570 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x9140528 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
            (DeclRefExpr 0x91404d0 <col:12> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140508 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x91404f0 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x91406e8 <col:35, col:69> '<dependent type>'
            (UnresolvedLookupExpr 0x91406a0 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
            (DeclRefExpr 0x9140594 <col:35> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140680 <col:41, col:69> '_CharT2'
              (CXXOperatorCallExpr 0x9140658 <col:49, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x9140610 <col:62, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                (CXXUnresolvedConstructExpr 0x91405d8 <col:49, col:60> '_CharT2'
                  (CharacterLiteral 0x91405c0 <col:57> 'char'48))
                (DeclRefExpr 0x91405f4 <col:64> 'size_t':'unsigned int' lvalue ParmVar 0x913b0f0 '__len' 'size_t':'unsigned int')))))
        (BinaryOperator 0x91407f8 <line:2124:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x9140728 <col:3> 'int' lvalue Var 0x91403f0 '__ret' 'int')
          (CXXOperatorCallExpr 0x91407d0 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9140798 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9140740 <col:11> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140778 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9140760 <col:25> 'char'48))))
        <<<NULL>>>))
    (CompoundStmt 0x9141198 <line:2127:6, line:2134:6>
      (IfStmt 0x9141178 <line:2128:8, line:2133:35>
        <<<NULL>>>
        (BinaryOperator 0x91409d8 <line:2128:12, col:53> '<dependent type>' '&&'
          (CXXOperatorCallExpr 0x91408e8 <col:12, col:30> '<dependent type>'
            (UnresolvedLookupExpr 0x91408a0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
            (DeclRefExpr 0x9140844 <col:12> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140880 <col:19, col:30> '_CharT2'
              (CharacterLiteral 0x9140868 <col:27> 'char'48)))
          (CXXOperatorCallExpr 0x91409b0 <col:35, col:53> '<dependent type>'
            (UnresolvedLookupExpr 0x9140968 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
            (DeclRefExpr 0x914090c <col:35> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140948 <col:42, col:53> '_CharT2'
              (CharacterLiteral 0x9140930 <col:50> 'char'57))))
        (BinaryOperator 0x9140ac0 <line:2129:3, col:28> '<dependent type>' '='
          (DeclRefExpr 0x91409f0 <col:3> 'int' lvalue Var 0x91403f0 '__ret' 'int')
          (CXXOperatorCallExpr 0x9140a98 <col:11, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x9140a60 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9140a08 <col:11> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
            (CXXUnresolvedConstructExpr 0x9140a40 <col:17, col:28> '_CharT2'
              (CharacterLiteral 0x9140a28 <col:25> 'char'48))))
        (IfStmt 0x9141158 <line:2130:13, line:2133:35>
          <<<NULL>>>
          (BinaryOperator 0x9140c68 <line:2130:17, col:58> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9140b78 <col:17, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9140b30 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
              (DeclRefExpr 0x9140ad8 <col:17> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9140b10 <col:24, col:35> '_CharT2'
                (CharacterLiteral 0x9140af8 <col:32> 'char'97)))
            (CXXOperatorCallExpr 0x9140c40 <col:40, col:58> '<dependent type>'
              (UnresolvedLookupExpr 0x9140bf8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
              (DeclRefExpr 0x9140b9c <col:40> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
              (CXXUnresolvedConstructExpr 0x9140bd8 <col:47, col:58> '_CharT2'
                (CharacterLiteral 0x9140bc0 <col:55> 'char'102))))
          (BinaryOperator 0x9140df0 <line:2131:3, col:35> '<dependent type>' '='
            (DeclRefExpr 0x9140c80 <col:3> 'int' lvalue Var 0x91403f0 '__ret' 'int')
            (CXXOperatorCallExpr 0x9140dc8 <col:11, col:35> '<dependent type>'
              (UnresolvedLookupExpr 0x9140d80 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
              (IntegerLiteral 0x9140c98 <col:11> 'int' 10)
              (ParenExpr 0x9140d68 <col:16, col:35> '<dependent type>'
                (CXXOperatorCallExpr 0x9140d40 <col:17, col:34> '<dependent type>'
                  (UnresolvedLookupExpr 0x9140d08 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (DeclRefExpr 0x9140cb0 <col:17> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
                  (CXXUnresolvedConstructExpr 0x9140ce8 <col:23, col:34> '_CharT2'
                    (CharacterLiteral 0x9140cd0 <col:31> 'char'97))))))
          (IfStmt 0x9141138 <line:2132:13, line:2133:35>
            <<<NULL>>>
            (BinaryOperator 0x9140f98 <line:2132:17, col:58> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9140ea8 <col:17, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x9140e60 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
                (DeclRefExpr 0x9140e08 <col:17> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9140e40 <col:24, col:35> '_CharT2'
                  (CharacterLiteral 0x9140e28 <col:32> 'char'65)))
              (CXXOperatorCallExpr 0x9140f70 <col:40, col:58> '<dependent type>'
                (UnresolvedLookupExpr 0x9140f28 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
                (DeclRefExpr 0x9140ecc <col:40> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
                (CXXUnresolvedConstructExpr 0x9140f08 <col:47, col:58> '_CharT2'
                  (CharacterLiteral 0x9140ef0 <col:55> 'char'70))))
            (BinaryOperator 0x9141120 <line:2133:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x9140fb0 <col:3> 'int' lvalue Var 0x91403f0 '__ret' 'int')
              (CXXOperatorCallExpr 0x91410f8 <col:11, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x91410b0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                (IntegerLiteral 0x9140fc8 <col:11> 'int' 10)
                (ParenExpr 0x9141098 <col:16, col:35> '<dependent type>'
                  (CXXOperatorCallExpr 0x9141070 <col:17, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x9141038 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                    (DeclRefExpr 0x9140fe0 <col:17> '_CharT2' lvalue ParmVar 0x913b130 '__c' '_CharT2')
                    (CXXUnresolvedConstructExpr 0x9141018 <col:23, col:34> '_CharT2'
                      (CharacterLiteral 0x9141000 <col:31> 'char'65))))))
            <<<NULL>>>)))))
  (ReturnStmt 0x91411e8 <line:2135:4, col:11>
    (DeclRefExpr 0x91411cc <col:11> 'int' lvalue Var 0x91403f0 '__ret' 'int')))

;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const (CompoundStmt 0x9141688 </usr/include/c++/4.6/bits/locale_facets.h:2142:9, line:2152:2>
  (DeclStmt 0x9141298 <line:2143:4, col:18>
    0x9141230 "int __ret =
      (UnaryOperator 0x9141280 <col:16, col:17> 'int' prefix '-'
        (IntegerLiteral 0x9141268 <col:17> 'int' 1))")
  (DeclStmt 0x9141478 <line:2144:4, col:73>
    0x91412f0 "const char_type *__q =
      (CallExpr 0x9141450 <col:27, col:72> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91413d0 <col:27, col:49> '<dependent type>' lvalue)
        (DeclRefExpr 0x9141404 <col:54> 'const _CharT2 *' lvalue ParmVar 0x913b5b0 '__zero' 'const _CharT2 *')
        (DeclRefExpr 0x914141c <col:62> 'size_t':'unsigned int' lvalue ParmVar 0x913b5f0 '__len' 'size_t':'unsigned int')
        (DeclRefExpr 0x9141434 <col:69> '_CharT2' lvalue ParmVar 0x913b630 '__c' '_CharT2'))")
  (IfStmt 0x9141640 <line:2145:4, line:2150:6>
    <<<NULL>>>
    (DeclRefExpr 0x9141488 <line:2145:8> 'const char_type *' lvalue Var 0x91412f0 '__q' 'const char_type *')
    (CompoundStmt 0x9141628 <line:2146:6, line:2150:6>
      (BinaryOperator 0x9141548 <line:2147:8, col:22> '<dependent type>' '='
        (DeclRefExpr 0x91414a0 <col:8> 'int' lvalue Var 0x9141230 '__ret' 'int')
        (CXXOperatorCallExpr 0x9141520 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x91414e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x91414b8 <col:16> 'const char_type *' lvalue Var 0x91412f0 '__q' 'const char_type *')
          (DeclRefExpr 0x91414d0 <col:22> 'const _CharT2 *' lvalue ParmVar 0x913b5b0 '__zero' 'const _CharT2 *')))
      (IfStmt 0x9141608 <line:2148:8, line:2149:12>
        <<<NULL>>>
        (BinaryOperator 0x91415a0 <line:2148:12, col:20> '_Bool' '>'
          (ImplicitCastExpr 0x9141590 <col:12> 'int' <LValueToRValue>
            (DeclRefExpr 0x9141560 <col:12> 'int' lvalue Var 0x9141230 '__ret' 'int'))
          (IntegerLiteral 0x9141578 <col:20> 'int' 15))
        (CompoundAssignOperator 0x91415e8 <line:2149:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
          (DeclRefExpr 0x91415b8 <col:3> 'int' lvalue Var 0x9141230 '__ret' 'int')
          (IntegerLiteral 0x91415d0 <col:12> 'int' 6))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9141678 <line:2151:4, col:11>
    (DeclRefExpr 0x914165c <col:11> 'int' lvalue Var 0x9141230 '__ret' 'int')))

;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const (CompoundStmt 0x91417b0 </usr/include/c++/4.6/bits/locale_facets.h:2175:7, col:64>
  (ReturnStmt 0x91417a0 <col:9, col:61>
    (CallExpr 0x9141770 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x91416b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91416f4 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913b9d0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x914170c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913ba10 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141724 <col:45> 'class std::ios_base' lvalue ParmVar 0x913ba60 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914173c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913bad0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141754 <col:58> 'long' lvalue ParmVar 0x913bb20 '__v' 'long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const (CompoundStmt 0x91418d0 </usr/include/c++/4.6/bits/locale_facets.h:2180:7, col:64>
  (ReturnStmt 0x91418c0 <col:9, col:61>
    (CallExpr 0x9141890 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x91417d8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9141814 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913bc00 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x914182c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913bc40 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141844 <col:45> 'class std::ios_base' lvalue ParmVar 0x913bc90 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914185c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913bd00 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141874 <col:58> 'unsigned short' lvalue ParmVar 0x913bd50 '__v' 'unsigned short &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const (CompoundStmt 0x91419f0 </usr/include/c++/4.6/bits/locale_facets.h:2185:7, col:64>
  (ReturnStmt 0x91419e0 <col:9, col:61>
    (CallExpr 0x91419b0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x91418f8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9141934 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913be30 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x914194c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913be70 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141964 <col:45> 'class std::ios_base' lvalue ParmVar 0x913bec0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914197c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913bf30 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141994 <col:58> 'unsigned int' lvalue ParmVar 0x913bf80 '__v' 'unsigned int &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const (CompoundStmt 0x9141b10 </usr/include/c++/4.6/bits/locale_facets.h:2190:7, col:64>
  (ReturnStmt 0x9141b00 <col:9, col:61>
    (CallExpr 0x9141ad0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9141a18 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9141a54 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913c060 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141a6c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913c0a0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141a84 <col:45> 'class std::ios_base' lvalue ParmVar 0x913c0f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9141a9c <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913c160 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141ab4 <col:58> 'unsigned long' lvalue ParmVar 0x913c1b0 '__v' 'unsigned long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const (CompoundStmt 0x9141c30 </usr/include/c++/4.6/bits/locale_facets.h:2196:7, col:64>
  (ReturnStmt 0x9141c20 <col:9, col:61>
    (CallExpr 0x9141bf0 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9141b38 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9141b74 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913c290 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141b8c <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913c2d0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141ba4 <col:45> 'class std::ios_base' lvalue ParmVar 0x913c320 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9141bbc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913c390 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141bd4 <col:58> 'long long' lvalue ParmVar 0x913c3e0 '__v' 'long long &'))))


        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const (CompoundStmt 0x9141d50 </usr/include/c++/4.6/bits/locale_facets.h:2201:7, col:64>
  (ReturnStmt 0x9141d40 <col:9, col:61>
    (CallExpr 0x9141d10 <col:16, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9141c58 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9141c94 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x913c4c0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141cac <col:38> 'iter_type':'_InIter' lvalue ParmVar 0x913c500 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9141cc4 <col:45> 'class std::ios_base' lvalue ParmVar 0x913c550 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9141cdc <col:51> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x913c5c0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9141cf4 <col:58> 'unsigned long long' lvalue ParmVar 0x913c610 '__v' 'unsigned long long &'))))


        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
    };
    static locale::id id(CXXConstructExpr 0x9142098 </usr/include/c++/4.6/bits/locale_facets.h:2237:42> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT = wchar_t, typename _OutIter = std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    }
template <typename _CharT = char, typename _OutIter = std::ostreambuf_iterator<char, std::char_traits<char> >> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    }
template <typename _CharT, typename _OutIter = ostreambuf_iterator<_CharT>> class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef _CharT char_type;
        typedef _OutIter iter_type;
        static locale::id id;
        num_put<_CharT, _OutIter>(size_t __refs = (ImplicitCastExpr 0x9145da8 </usr/include/c++/4.6/bits/locale_facets.h:2274:31> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x9145d90 <col:31> 'int' 0))
) : std::locale::facet((DeclRefExpr 0x9145db4 </usr/include/c++/4.6/bits/locale_facets.h:2274:42> 'size_t':'unsigned int' lvalue ParmVar 0x9142440 '__refs' 'size_t':'unsigned int')
) (CompoundStmt 0x9145e50 </usr/include/c++/4.6/bits/locale_facets.h:2274:50, col:52>)


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const (CompoundStmt 0x9145f60 </usr/include/c++/4.6/bits/locale_facets.h:2293:7, col:53>
  (ReturnStmt 0x9145f50 <col:9, col:50>
    (CallExpr 0x9145f20 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9145e88 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9145e78 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9145ebc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142540 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9145ed4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9142590 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9145eec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x91425f0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9145f04 <col:47> '_Bool' lvalue ParmVar 0x9142630 '__v' '_Bool'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const (CompoundStmt 0x9146060 </usr/include/c++/4.6/bits/locale_facets.h:2335:7, col:53>
  (ReturnStmt 0x9146050 <col:9, col:50>
    (CallExpr 0x9146020 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9145f88 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9145f78 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x9145fbc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142770 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9145fd4 <col:34> 'class std::ios_base' lvalue ParmVar 0x91427c0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x9145fec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9142800 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146004 <col:47> 'long' lvalue ParmVar 0x9142850 '__v' 'long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const (CompoundStmt 0x9146160 </usr/include/c++/4.6/bits/locale_facets.h:2340:7, col:53>
  (ReturnStmt 0x9146150 <col:9, col:50>
    (CallExpr 0x9146120 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146088 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146078 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91460bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142990 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91460d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x91429e0 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91460ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9142a20 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146104 <col:47> 'unsigned long' lvalue ParmVar 0x9142a70 '__v' 'unsigned long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const (CompoundStmt 0x9146260 </usr/include/c++/4.6/bits/locale_facets.h:2345:7, col:53>
  (ReturnStmt 0x9146250 <col:9, col:50>
    (CallExpr 0x9146220 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146188 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146178 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91461bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142bb0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91461d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9142c00 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91461ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9142c40 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146204 <col:47> 'long long' lvalue ParmVar 0x9142c90 '__v' 'long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9146360 </usr/include/c++/4.6/bits/locale_facets.h:2350:7, col:53>
  (ReturnStmt 0x9146350 <col:9, col:50>
    (CallExpr 0x9146320 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146288 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146278 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91462bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142dd0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91462d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9142e20 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91462ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9142e60 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146304 <col:47> 'unsigned long long' lvalue ParmVar 0x9142eb0 '__v' 'unsigned long long'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const (CompoundStmt 0x9146460 </usr/include/c++/4.6/bits/locale_facets.h:2398:7, col:53>
  (ReturnStmt 0x9146450 <col:9, col:50>
    (CallExpr 0x9146420 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146388 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146378 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91463bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9142ff0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91463d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9143040 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91463ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x9143080 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146404 <col:47> 'double' lvalue ParmVar 0x91430d0 '__v' 'double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const (CompoundStmt 0x9146560 </usr/include/c++/4.6/bits/locale_facets.h:2403:7, col:53>
  (ReturnStmt 0x9146550 <col:9, col:50>
    (CallExpr 0x9146520 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146488 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146478 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91464bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9143210 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91464d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9143260 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91464ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x91432a0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146504 <col:47> 'long double' lvalue ParmVar 0x91432f0 '__v' 'long double'))))


        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const (CompoundStmt 0x9146660 </usr/include/c++/4.6/bits/locale_facets.h:2424:7, col:53>
  (ReturnStmt 0x9146650 <col:9, col:50>
    (CallExpr 0x9146620 <col:16, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9146588 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x9146578 <col:16> 'const num_put<_CharT, _OutIter> *' this))
      (DeclRefExpr 0x91465bc <col:29> 'iter_type':'_OutIter' lvalue ParmVar 0x9143430 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91465d4 <col:34> 'class std::ios_base' lvalue ParmVar 0x9143480 '__f' 'class std::ios_base &')
      (DeclRefExpr 0x91465ec <col:39> 'char_type':'_CharT' lvalue ParmVar 0x91434c0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146604 <col:47> 'const void *' lvalue ParmVar 0x9143510 '__v' 'const void *'))))


    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put<_CharT, _OutIter>() (CompoundStmt 0x9146678 </usr/include/c++/4.6/bits/locale_facets.h:2453:18, col:20>)


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const (CompoundStmt 0x9146778 </usr/include/c++/4.6/bits/locale_facets.h:2474:7, col:55>
  (ReturnStmt 0x9146768 <col:9, col:52>
    (CallExpr 0x9146738 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x9146698 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91466d4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9145160 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91466ec <col:35> 'class std::ios_base' lvalue ParmVar 0x91451b0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9146704 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x91451f0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x914671c <col:49> 'long' lvalue ParmVar 0x9145240 '__v' 'long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const (CompoundStmt 0x9146880 </usr/include/c++/4.6/bits/locale_facets.h:2479:7, col:55>
  (ReturnStmt 0x9146870 <col:9, col:52>
    (CallExpr 0x9146840 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x91467a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91467dc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9145320 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91467f4 <col:35> 'class std::ios_base' lvalue ParmVar 0x9145370 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x914680c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x91453b0 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146824 <col:49> 'unsigned long' lvalue ParmVar 0x9145400 '__v' 'unsigned long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const (CompoundStmt 0x9146988 </usr/include/c++/4.6/bits/locale_facets.h:2485:7, col:55>
  (ReturnStmt 0x9146978 <col:9, col:52>
    (CallExpr 0x9146948 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x91468a8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91468e4 <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x91454e0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91468fc <col:35> 'class std::ios_base' lvalue ParmVar 0x9145530 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9146914 <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9145570 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x914692c <col:49> 'long long' lvalue ParmVar 0x91455c0 '__v' 'long long'))))


        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const (CompoundStmt 0x9146a90 </usr/include/c++/4.6/bits/locale_facets.h:2490:7, col:55>
  (ReturnStmt 0x9146a80 <col:9, col:52>
    (CallExpr 0x9146a50 <col:16, col:52> '<dependent type>'
      (UnresolvedMemberExpr 0x91469b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91469ec <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x91456a0 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9146a04 <col:35> 'class std::ios_base' lvalue ParmVar 0x91456f0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9146a1c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9145730 '__fill' 'char_type':'_CharT')
      (DeclRefExpr 0x9146a34 <col:49> 'unsigned long long' lvalue ParmVar 0x9145780 '__v' 'unsigned long long'))))


        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
    };
    static locale::id id(CXXConstructExpr 0x9146dd8 </usr/include/c++/4.6/bits/locale_facets.h:2517:43> 'class locale::id':'class std::locale::id''void (void)')
;
    template <typename _CharT> inline bool isspace(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9147200 </usr/include/c++/4.6/bits/locale_facets.h:2530:5, col:75>
  (ReturnStmt 0x91471f0 <col:7, col:72>
    (CallExpr 0x91471c8 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9147130 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9147110 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9147090 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91470f8 <col:40> 'const class std::locale' lvalue ParmVar 0x9146eb0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9147190 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fccc0 'space' 'const mask':'const unsigned short')
      (DeclRefExpr 0x91471b0 <col:69> '_CharT' lvalue ParmVar 0x9146e60 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isprint(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9147618 </usr/include/c++/4.6/bits/locale_facets.h:2536:5, col:75>
  (ReturnStmt 0x9147608 <col:7, col:72>
    (CallExpr 0x91475e0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9147550 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9147530 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x91474b0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9147518 <col:40> 'const class std::locale' lvalue ParmVar 0x91472d0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x91475a4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcd30 'print' 'const mask':'const unsigned short')
      (DeclRefExpr 0x91475c4 <col:69> '_CharT' lvalue ParmVar 0x9147280 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool iscntrl(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9147a28 </usr/include/c++/4.6/bits/locale_facets.h:2542:5, col:75>
  (ReturnStmt 0x9147a18 <col:7, col:72>
    (CallExpr 0x91479f0 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9147960 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9147940 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x91478c0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9147928 <col:40> 'const class std::locale' lvalue ParmVar 0x91476e0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x91479b4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcea0 'cntrl' 'const mask':'const unsigned short')
      (DeclRefExpr 0x91479d4 <col:69> '_CharT' lvalue ParmVar 0x9147690 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9147e38 </usr/include/c++/4.6/bits/locale_facets.h:2548:5, col:75>
  (ReturnStmt 0x9147e28 <col:7, col:72>
    (CallExpr 0x9147e00 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9147d70 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9147d50 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9147cd0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9147d38 <col:40> 'const class std::locale' lvalue ParmVar 0x9147af0 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9147dc4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fca90 'upper' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9147de4 <col:69> '_CharT' lvalue ParmVar 0x9147aa0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool islower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9148248 </usr/include/c++/4.6/bits/locale_facets.h:2554:5, col:75>
  (ReturnStmt 0x9148238 <col:7, col:72>
    (CallExpr 0x9148210 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9148180 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9148160 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x91480e0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9148148 <col:40> 'const class std::locale' lvalue ParmVar 0x9147f00 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x91481d4 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcb00 'lower' 'const mask':'const unsigned short')
      (DeclRefExpr 0x91481f4 <col:69> '_CharT' lvalue ParmVar 0x9147eb0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalpha(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9148678 </usr/include/c++/4.6/bits/locale_facets.h:2560:5, col:75>
  (ReturnStmt 0x9148668 <col:7, col:72>
    (CallExpr 0x9148640 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91485b0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9148590 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x91484f0 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9148578 <col:40> 'const class std::locale' lvalue ParmVar 0x9148310 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9148604 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcb70 'alpha' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9148624 <col:69> '_CharT' lvalue ParmVar 0x91482c0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9148a88 </usr/include/c++/4.6/bits/locale_facets.h:2566:5, col:75>
  (ReturnStmt 0x9148a78 <col:7, col:72>
    (CallExpr 0x9148a50 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91489c0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x91489a0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9148920 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9148988 <col:40> 'const class std::locale' lvalue ParmVar 0x9148740 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9148a14 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcbe0 'digit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9148a34 <col:69> '_CharT' lvalue ParmVar 0x91486f0 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool ispunct(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9148e98 </usr/include/c++/4.6/bits/locale_facets.h:2572:5, col:75>
  (ReturnStmt 0x9148e88 <col:7, col:72>
    (CallExpr 0x9148e60 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9148dd0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9148db0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9148d30 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9148d98 <col:40> 'const class std::locale' lvalue ParmVar 0x9148b50 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9148e24 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcf10 'punct' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9148e44 <col:69> '_CharT' lvalue ParmVar 0x9148b00 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isxdigit(_CharT __c, const std::locale &__loc) (CompoundStmt 0x91492a8 </usr/include/c++/4.6/bits/locale_facets.h:2578:5, col:76>
  (ReturnStmt 0x9149298 <col:7, col:73>
    (CallExpr 0x9149270 <col:14, col:73> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91491e0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x91491c0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9149140 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91491a8 <col:40> 'const class std::locale' lvalue ParmVar 0x9148f60 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9149234 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcc50 'xdigit' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9149254 <col:70> '_CharT' lvalue ParmVar 0x9148f10 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isalnum(_CharT __c, const std::locale &__loc) (CompoundStmt 0x91496b8 </usr/include/c++/4.6/bits/locale_facets.h:2584:5, col:75>
  (ReturnStmt 0x91496a8 <col:7, col:72>
    (CallExpr 0x9149680 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91495f0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x91495d0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9149550 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91495b8 <col:40> 'const class std::locale' lvalue ParmVar 0x9149370 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9149644 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcf80 'alnum' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9149664 <col:69> '_CharT' lvalue ParmVar 0x9149320 '__c' '_CharT'))))

;
    template <typename _CharT> inline bool isgraph(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9149ac8 </usr/include/c++/4.6/bits/locale_facets.h:2590:5, col:75>
  (ReturnStmt 0x9149ab8 <col:7, col:72>
    (CallExpr 0x9149a90 <col:14, col:72> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9149a00 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x91499e0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9149960 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91499c8 <col:40> 'const class std::locale' lvalue ParmVar 0x9149780 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9149a54 <col:50, col:62> 'const mask':'const unsigned short' lvalue Var 0x90fcda0 'graph' 'const mask':'const unsigned short')
      (DeclRefExpr 0x9149a74 <col:69> '_CharT' lvalue ParmVar 0x9149730 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT toupper(_CharT __c, const std::locale &__loc) (CompoundStmt 0x9149e90 </usr/include/c++/4.6/bits/locale_facets.h:2596:5, col:61>
  (ReturnStmt 0x9149e80 <col:7, col:58>
    (CallExpr 0x9149e60 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9149e10 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x9149df0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9149d70 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x9149dd8 <col:40> 'const class std::locale' lvalue ParmVar 0x9149b90 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x9149e44 <col:55> '_CharT' lvalue ParmVar 0x9149b40 '__c' '_CharT'))))

;
    template <typename _CharT> inline _CharT tolower(_CharT __c, const std::locale &__loc) (CompoundStmt 0x914a260 </usr/include/c++/4.6/bits/locale_facets.h:2602:5, col:61>
  (ReturnStmt 0x914a250 <col:7, col:58>
    (CallExpr 0x914a230 <col:14, col:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x914a1e0 <col:14, col:47> '<dependent type>' lvalue
        (CallExpr 0x914a1c0 <col:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x914a140 <col:14, col:38> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x914a1a8 <col:40> 'const class std::locale' lvalue ParmVar 0x9149f60 '__loc' 'const class std::locale &')))
      (DeclRefExpr 0x914a214 <col:55> '_CharT' lvalue ParmVar 0x9149f10 '__c' '_CharT'))))

;
}
namespace std {
    template <typename _Facet> struct __use_cache {
        struct __use_cache;
        const _Facet *operator()(const std::locale &__loc) const;
    };
    struct __use_cache {
        struct __use_cache;
        const __numpunct_cache<_CharT> *operator()(const std::locale &__loc) const (CompoundStmt 0x914b508 </usr/include/c++/4.6/bits/locale_facets.tcc:55:7, line:74:7>
  (DeclStmt 0x914ad48 <line:56:2, col:49>
    0x914abc0 "const size_t __i =
      (CallExpr 0x914ad28 <col:21, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x914acf0 <col:21, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x914acb8 <col:21, col:39> '<dependent type>' lvalue)))")
  (DeclStmt 0x914ae40 <line:57:2, col:59>
    0x914ad90 "const locale::facet **__caches =
      (ImplicitCastExpr 0x914ae30 <col:35, col:50> 'const class std::locale::facet **' <LValueToRValue>
        (MemberExpr 0x914ae0c <col:35, col:50> 'const class std::locale::facet **' lvalue ->_M_caches 0x9086690
          (ImplicitCastExpr 0x914ae00 <col:35, col:41> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x914addc <col:35, col:41> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
              (DeclRefExpr 0x914adc4 <col:35> 'const class std::locale' lvalue ParmVar 0x914aa30 '__loc' 'const class std::locale &')))))")
  (IfStmt 0x914b380 <line:58:2, line:72:4>
    <<<NULL>>>
    (UnaryOperator 0x914aed8 <line:58:6, col:19> '_Bool' prefix '!'
      (ImplicitCastExpr 0x914aec8 <col:7, col:19> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x914aeb8 <col:7, col:19> 'const class locale::facet *' <LValueToRValue>
          (ArraySubscriptExpr 0x914aea0 <col:7, col:19> 'const class locale::facet *' lvalue
            (ImplicitCastExpr 0x914ae80 <col:7> 'const class locale::facet **' <LValueToRValue>
              (DeclRefExpr 0x914ae50 <col:7> 'const class locale::facet **' lvalue Var 0x914ad90 '__caches' 'const class locale::facet **'))
            (ImplicitCastExpr 0x914ae90 <col:16> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x914ae68 <col:16> 'const size_t':'const unsigned int' lvalue Var 0x914abc0 '__i' 'const size_t':'const unsigned int'))))))
    (CompoundStmt 0x914b360 <line:59:4, line:72:4>
      (DeclStmt 0x914b010 <line:60:6, col:41>
        0x914afc0 "__numpunct_cache<_CharT> *__tmp =
          (IntegerLiteral 0x914aff8 <col:40> 'int' 0)")
      (IfStmt 0x914b1f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:65:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x914b020 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x914b1e0 </usr/include/c++/4.6/bits/locale_facets.tcc:62:8, line:65:8>
          (BinaryOperator 0x914b140 <line:63:3, col:38> '<dependent type>' '='
            (DeclRefExpr 0x914b030 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x914afc0 '__tmp' '__numpunct_cache<_CharT> *')
            (CXXNewExpr 0x914b108 <col:11, col:38> '__numpunct_cache<_CharT> *'))
          (CallExpr 0x914b1c0 <line:64:3, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x914b170 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x914b158 <col:3> '__numpunct_cache<_CharT> *' lvalue Var 0x914afc0 '__tmp' '__numpunct_cache<_CharT> *'))
            (DeclRefExpr 0x914b1a4 <col:19> 'const class std::locale' lvalue ParmVar 0x914aa30 '__loc' 'const class std::locale &')))
        <<<NULL>>>)
      (IfStmt 0x914b280 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:70:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x914b218 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x914b268 </usr/include/c++/4.6/bits/locale_facets.tcc:67:8, line:70:8>
          (CXXDeleteExpr 0x914b240 <line:68:3, col:10> 'void'
            (DeclRefExpr 0x914b228 <col:10> '__numpunct_cache<_CharT> *' lvalue Var 0x914afc0 '__tmp' '__numpunct_cache<_CharT> *'))
          (NullStmt 0x914b258 <line:69:26>))
        <<<NULL>>>)
      (CallExpr 0x914b338 <line:71:6, col:48> '<dependent type>'
        (MemberExpr 0x914b2e4 <col:6, col:21> '<bound member function type>' ->_M_install_cache 0x9087bf0
          (ImplicitCastExpr 0x914b2d8 <col:6, col:12> 'class std::locale::_Impl *' <LValueToRValue>
            (MemberExpr 0x914b2b4 <col:6, col:12> 'class std::locale::_Impl *const' lvalue ._M_impl 0x90836d0
              (DeclRefExpr 0x914b29c <col:6> 'const class std::locale' lvalue ParmVar 0x914aa30 '__loc' 'const class std::locale &'))))
        (DeclRefExpr 0x914b304 <col:38> '__numpunct_cache<_CharT> *' lvalue Var 0x914afc0 '__tmp' '__numpunct_cache<_CharT> *')
        (DeclRefExpr 0x914b31c <col:45> 'const size_t':'const unsigned int' lvalue Var 0x914abc0 '__i' 'const size_t':'const unsigned int')))
    <<<NULL>>>)
  (ReturnStmt 0x914b4f8 <line:73:2, col:67>
    (CXXStaticCastExpr 0x914b4e0 <col:9, col:67> 'const __numpunct_cache<_CharT> *' static_cast<const __numpunct_cache<_CharT> *> <Dependent>
      (ArraySubscriptExpr 0x914b480 <col:54, col:66> 'const class locale::facet *' lvalue
        (ImplicitCastExpr 0x914b460 <col:54> 'const class locale::facet **' <LValueToRValue>
          (DeclRefExpr 0x914b430 <col:54> 'const class locale::facet **' lvalue Var 0x914ad90 '__caches' 'const class locale::facet **'))
        (ImplicitCastExpr 0x914b470 <col:63> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x914b448 <col:63> 'const size_t':'const unsigned int' lvalue Var 0x914abc0 '__i' 'const size_t':'const unsigned int'))))))


    };
    void _M_cache(const std::locale &__loc) (CompoundStmt 0x9151810 </usr/include/c++/4.6/bits/locale_facets.tcc:80:5, line:127:5>
  (BinaryOperator 0x914b808 <line:81:7, col:22> '<dependent type>' '='
    (MemberExpr 0x914b7d8 <col:7> '_Bool' lvalue ->_M_allocated 0x912f3a0
      (CXXThisExpr 0x914b7c8 <col:7> '__numpunct_cache<_CharT> *' this))
    (CXXBoolLiteralExpr 0x914b7f8 <col:22> '_Bool' true))
  (DeclStmt 0x914ba90 <line:83:7, col:73>
    0x914b910 "const numpunct<_CharT> &__np =
      (CallExpr 0x914ba70 <col:38, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x914b9f0 <col:38, col:65> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
        (DeclRefExpr 0x914ba58 <col:67> 'const class std::locale' lvalue ParmVar 0x914b6e0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x914bb10 <line:85:7, col:27>
    0x914bab0 "char *__grouping =
      (ImplicitCastExpr 0x914bb00 <col:26> 'char *' <NullToPointer>
        (IntegerLiteral 0x914bae8 <col:26> 'int' 0))")
  (DeclStmt 0x914bba0 <line:86:7, col:29>
    0x914bb50 "_CharT *__truename =
      (IntegerLiteral 0x914bb88 <col:28> 'int' 0)")
  (DeclStmt 0x914bc10 <line:87:7, col:30>
    0x914bbc0 "_CharT *__falsename =
      (IntegerLiteral 0x914bbf8 <col:29> 'int' 0)")
  (IfStmt 0x91516f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/locale_facets.tcc:119:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x914bc20 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9151698 </usr/include/c++/4.6/bits/locale_facets.tcc:89:2, line:119:2>
      (BinaryOperator 0x914bd28 <line:90:4, col:44> '<dependent type>' '='
        (MemberExpr 0x914bc40 <col:4> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x912efd0
          (CXXThisExpr 0x914bc30 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x914bd08 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x914bcd0 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x914bcb0 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x914bc78 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x914bc60 <col:23> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x914bdd0 <line:91:4, col:21> 'char *' lvalue '='
        (DeclRefExpr 0x914bd40 <col:4> 'char *' lvalue Var 0x914bab0 '__grouping' 'char *')
        (CXXNewExpr 0x914bd90 <col:17, col:21> 'char *'
          (MemberExpr 0x914bd68 <col:26> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x912efd0
            (CXXThisExpr 0x914bd58 <col:26> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x914bed8 <line:92:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x914be58 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x914be38 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x914be00 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x914bde8 <col:4> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x914be8c <col:25> 'char *' lvalue Var 0x914bab0 '__grouping' 'char *')
        (MemberExpr 0x914beb8 <col:37> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x912efd0
          (CXXThisExpr 0x914bea8 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x914bf48 <line:93:4, col:18> '<dependent type>' '='
        (MemberExpr 0x914bf10 <col:4> 'const char *' lvalue ->_M_grouping 0x912ef90
          (CXXThisExpr 0x914bf00 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x914bf30 <col:18> 'char *' lvalue Var 0x914bab0 '__grouping' 'char *'))
      (BinaryOperator 0x91508e0 <line:94:4, line:97:50> '<dependent type>' '='
        (MemberExpr 0x914bf70 <line:94:4> '_Bool' lvalue ->_M_use_grouping 0x912f010
          (CXXThisExpr 0x914bf60 <col:4> '__numpunct_cache<_CharT> *' this))
        (ParenExpr 0x91508c8 <col:22, line:97:50> '<dependent type>'
          (BinaryOperator 0x91508b0 <line:94:23, line:97:49> '<dependent type>' '&&'
            (BinaryOperator 0x914c088 <line:94:23, line:95:55> '<dependent type>' '&&'
              (MemberExpr 0x914bfa0 <line:94:23> 'size_t':'unsigned int' lvalue ->_M_grouping_size 0x912efd0
                (CXXThisExpr 0x914bf90 <col:23> '__numpunct_cache<_CharT> *' this))
              (BinaryOperator 0x914c070 <line:95:12, col:55> '_Bool' '>'
                (ImplicitCastExpr 0x914c060 <col:12, col:51> 'int' <IntegralCast>
                  (CXXStaticCastExpr 0x914c030 <col:12, col:51> 'signed char' static_cast<signed char> <Dependent>
                    (ArraySubscriptExpr 0x914c008 <col:37, col:50> '<dependent type>' lvalue
                      (MemberExpr 0x914bfd0 <col:37> 'const char *' lvalue ->_M_grouping 0x912ef90
                        (CXXThisExpr 0x914bfc0 <col:37> '__numpunct_cache<_CharT> *' this))
                      (IntegerLiteral 0x914bff0 <col:49> 'int' 0))))
                (IntegerLiteral 0x914c048 <col:55> 'int' 0)))
            (ParenExpr 0x9150898 <line:96:12, line:97:49> '<dependent type>'
              (CXXOperatorCallExpr 0x9150870 <line:96:13, line:97:44> '<dependent type>'
                (UnresolvedLookupExpr 0x9150818 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
                (ArraySubscriptExpr 0x914c0e8 <line:96:13, col:26> '<dependent type>' lvalue
                  (MemberExpr 0x914c0b0 <col:13> 'const char *' lvalue ->_M_grouping 0x912ef90
                    (CXXThisExpr 0x914c0a0 <col:13> '__numpunct_cache<_CharT> *' this))
                  (IntegerLiteral 0x914c0d0 <col:25> 'int' 0))
                (DeclRefExpr 0x91507f8 <line:97:9, col:44> 'const char':'const char' lvalue Var 0x91501b0 '__max' 'const char':'const char'))))))
      (BinaryOperator 0x91509f0 <line:99:4, col:44> '<dependent type>' '='
        (MemberExpr 0x9150908 <col:4> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x912f0b0
          (CXXThisExpr 0x91508f8 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x91509d0 <col:23, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9150998 <col:23, col:39> '<dependent type>' lvalue
            (CallExpr 0x9150978 <col:23, col:37> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9150940 <col:23, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9150928 <col:23> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9150a98 <line:100:4, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9150a08 <col:4> '_CharT *' lvalue Var 0x914bb50 '__truename' '_CharT *')
        (CXXNewExpr 0x9150a58 <col:17, col:21> '_CharT *'
          (MemberExpr 0x9150a30 <col:28> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x912f0b0
            (CXXThisExpr 0x9150a20 <col:28> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9150ba0 <line:101:4, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9150b20 <col:4, col:20> '<dependent type>' lvalue
          (CallExpr 0x9150b00 <col:4, col:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9150ac8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9150ab0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9150b54 <col:25> '_CharT *' lvalue Var 0x914bb50 '__truename' '_CharT *')
        (MemberExpr 0x9150b80 <col:37> 'size_t':'unsigned int' lvalue ->_M_truename_size 0x912f0b0
          (CXXThisExpr 0x9150b70 <col:37> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9150c10 <line:102:4, col:18> '<dependent type>' '='
        (MemberExpr 0x9150bd8 <col:4> 'const _CharT *' lvalue ->_M_truename 0x912f070
          (CXXThisExpr 0x9150bc8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9150bf8 <col:18> '_CharT *' lvalue Var 0x914bb50 '__truename' '_CharT *'))
      (BinaryOperator 0x9150d20 <line:104:4, col:46> '<dependent type>' '='
        (MemberExpr 0x9150c38 <col:4> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x912f130
          (CXXThisExpr 0x9150c28 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9150d00 <col:24, col:46> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9150cc8 <col:24, col:41> '<dependent type>' lvalue
            (CallExpr 0x9150ca8 <col:24, col:39> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9150c70 <col:24, col:29> '<dependent type>' lvalue
                (DeclRefExpr 0x9150c58 <col:24> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))))
      (BinaryOperator 0x9150dc8 <line:105:4, col:22> '<dependent type>' '='
        (DeclRefExpr 0x9150d38 <col:4> '_CharT *' lvalue Var 0x914bbc0 '__falsename' '_CharT *')
        (CXXNewExpr 0x9150d88 <col:18, col:22> '_CharT *'
          (MemberExpr 0x9150d60 <col:29> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x912f130
            (CXXThisExpr 0x9150d50 <col:29> '__numpunct_cache<_CharT> *' this))))
      (CallExpr 0x9150ed0 <line:106:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9150e50 <col:4, col:21> '<dependent type>' lvalue
          (CallExpr 0x9150e30 <col:4, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9150df8 <col:4, col:9> '<dependent type>' lvalue
              (DeclRefExpr 0x9150de0 <col:4> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))
        (DeclRefExpr 0x9150e84 <col:26> '_CharT *' lvalue Var 0x914bbc0 '__falsename' '_CharT *')
        (MemberExpr 0x9150eb0 <col:39> 'size_t':'unsigned int' lvalue ->_M_falsename_size 0x912f130
          (CXXThisExpr 0x9150ea0 <col:39> '__numpunct_cache<_CharT> *' this)))
      (BinaryOperator 0x9150f40 <line:107:4, col:19> '<dependent type>' '='
        (MemberExpr 0x9150f08 <col:4> 'const _CharT *' lvalue ->_M_falsename 0x912f0f0
          (CXXThisExpr 0x9150ef8 <col:4> '__numpunct_cache<_CharT> *' this))
        (DeclRefExpr 0x9150f28 <col:19> '_CharT *' lvalue Var 0x914bbc0 '__falsename' '_CharT *'))
      (BinaryOperator 0x9150ff8 <line:109:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9150f68 <col:4> '_CharT' lvalue ->_M_decimal_point 0x912f170
          (CXXThisExpr 0x9150f58 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9150fd8 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9150fa0 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9150f88 <col:23> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))
      (BinaryOperator 0x91510b0 <line:110:4, col:42> '<dependent type>' '='
        (MemberExpr 0x9151020 <col:4> '_CharT' lvalue ->_M_thousands_sep 0x912f1b0
          (CXXThisExpr 0x9151010 <col:4> '__numpunct_cache<_CharT> *' this))
        (CallExpr 0x9151090 <col:23, col:42> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9151058 <col:23, col:28> '<dependent type>' lvalue
            (DeclRefExpr 0x9151040 <col:23> 'const numpunct<_CharT>' lvalue Var 0x914b910 '__np' 'const numpunct<_CharT> &'))))
      (DeclStmt 0x9151310 <line:112:4, col:64>
        0x9151190 "const ctype<_CharT> &__ct =
          (CallExpr 0x91512f0 <col:32, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x9151270 <col:32, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
            (DeclRefExpr 0x91512d8 <col:58> 'const class std::locale' lvalue ParmVar 0x914b6e0 '__loc' 'const class std::locale &'))")
      (CallExpr 0x91514d0 <line:113:4, line:115:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9151338 <line:113:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x9151320 <col:4> 'const ctype<_CharT>' lvalue Var 0x9151190 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x915138c <col:15, col:27> 'const char *' lvalue Var 0x912e740 '_S_atoms_out' 'const char *')
        (BinaryOperator 0x9151488 <line:114:8, line:115:22> 'const char *' '+'
          (ImplicitCastExpr 0x9151468 <line:114:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x91513cc <col:8, col:20> 'const char *' lvalue Var 0x912e740 '_S_atoms_out' 'const char *'))
          (ImplicitCastExpr 0x9151478 <line:115:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x915140c <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e690 '_S_oend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
        (MemberExpr 0x91514b0 <col:31> '_CharT [36]' lvalue ->_M_atoms_out 0x912f290
          (CXXThisExpr 0x91514a0 <col:31> '__numpunct_cache<_CharT> *' this)))
      (CallExpr 0x9151670 <line:116:4, line:118:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9151510 <line:116:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x91514f8 <col:4> 'const ctype<_CharT>' lvalue Var 0x9151190 '__ct' 'const ctype<_CharT> &'))
        (DeclRefExpr 0x9151564 <col:15, col:27> 'const char *' lvalue Var 0x912e790 '_S_atoms_in' 'const char *')
        (BinaryOperator 0x9151628 <line:117:8, line:118:22> 'const char *' '+'
          (ImplicitCastExpr 0x9151608 <line:117:8, col:20> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x91515a4 <col:8, col:20> 'const char *' lvalue Var 0x912e790 '_S_atoms_in' 'const char *'))
          (ImplicitCastExpr 0x9151618 <line:118:10, col:22> 'int' <IntegralCast>
            (DeclRefExpr 0x91515e4 <col:10, col:22> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912ea80 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
        (MemberExpr 0x9151650 <col:31> '_CharT [26]' lvalue ->_M_atoms_in 0x912f360
          (CXXThisExpr 0x9151640 <col:31> '__numpunct_cache<_CharT> *' this))))
    <<<NULL>>>)
  (IfStmt 0x91517f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/locale_facets.tcc:126:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9151710 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91517d0 </usr/include/c++/4.6/bits/locale_facets.tcc:121:2, line:126:2>
      (CXXDeleteExpr 0x9151748 <line:122:4, col:14> 'void'
        (ImplicitCastExpr 0x9151738 <col:14> 'void *' <NoOp>
          (DeclRefExpr 0x9151720 <col:14> 'char *' lvalue Var 0x914bab0 '__grouping' 'char *')))
      (CXXDeleteExpr 0x9151778 <line:123:4, col:14> 'void'
        (DeclRefExpr 0x9151760 <col:14> '_CharT *' lvalue Var 0x914bb50 '__truename' '_CharT *'))
      (CXXDeleteExpr 0x91517a8 <line:124:4, col:14> 'void'
        (DeclRefExpr 0x9151790 <col:14> '_CharT *' lvalue Var 0x914bbc0 '__falsename' '_CharT *'))
      (NullStmt 0x91517c0 <line:125:27>))
    <<<NULL>>>))


    bool __verify_grouping(const char *__grouping, size_t __grouping_size, const string &__grouping_tmp) throw();
    _InIter _M_extract_float(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, string &__xtrc) const (CompoundStmt 0x9156ce0 </usr/include/c++/4.6/bits/locale_facets.tcc:148:5, line:365:5>
  (DeclStmt 0x9152070 <line:149:7, col:50>
    0x9152040 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x9152160 <line:150:7, col:69>
    0x9152130 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9152268 <line:151:7, col:37>
    0x9152230 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9152330 <line:152:7, col:45>
    0x9152290 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9152300 <col:29, col:44> 'const class std::locale' lvalue
        (MemberExpr 0x91522dc <col:29, col:34> '<bound member function type>' ._M_getloc 0x90ae450
          (ImplicitCastExpr 0x9152320 <col:29> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x91522c4 <col:29> 'class std::ios_base' lvalue ParmVar 0x9151d80 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x91523f8 <line:153:7, col:45>
    0x9152370 "const __cache_type *__lc =
      (CallExpr 0x91523d8 <col:34, col:44> '<dependent type>'
        (DeclRefExpr 0x91523a4 <col:34> '__use_cache<__cache_type>' lvalue Var 0x9152230 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x91523bc <col:39> 'const class std::locale' lvalue Var 0x9152290 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x91524c8 <line:154:7, col:46>
    0x9152440 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9152490 <col:29, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x9152474 <col:29> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9152538 <line:155:7, col:34>
    0x91524e0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9152520 <col:23, col:33> 'char_type':'_CharT')")
  (DeclStmt 0x9152640 <line:158:7, col:38>
    0x9152550 "bool __testeof =
      (CXXOperatorCallExpr 0x9152618 <col:24, col:33> '<dependent type>'
        (UnresolvedLookupExpr 0x91525b8 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
        (DeclRefExpr 0x9152584 <col:24> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')
        (DeclRefExpr 0x915259c <col:33> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))")
  (IfStmt 0x9152fa0 <line:161:7, line:175:2>
    <<<NULL>>>
    (UnaryOperator 0x9152678 <line:161:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9152668 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9152650 <col:12> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')))
    (CompoundStmt 0x9152f80 <line:162:2, line:175:2>
      (BinaryOperator 0x91526d8 <line:163:4, col:11> '<dependent type>' '='
        (DeclRefExpr 0x915268c <col:4> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x91526c0 <col:10, col:11> '<dependent type>' prefix '*'
          (DeclRefExpr 0x91526a4 <col:11> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
      (DeclStmt 0x9152848 <line:164:4, col:58>
        0x9152700 "const bool __plus =
          (CXXOperatorCallExpr 0x9152820 <col:24, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x91527c0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (DeclRefExpr 0x9152734 <col:24> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x91527a8 <col:31, col:57> '<dependent type>' lvalue
              (DeclRefExpr 0x915274c <col:31> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
              (DeclRefExpr 0x9152784 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e870 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
      (IfStmt 0x9152f60 <line:165:4, line:174:6>
        <<<NULL>>>
        (BinaryOperator 0x9152c70 <line:165:8, line:167:42> '<dependent type>' '&&'
          (BinaryOperator 0x9152b38 <line:165:8, line:166:67> '<dependent type>' '&&'
            (ParenExpr 0x9152998 <line:165:8, col:54> '<dependent type>'
              (BinaryOperator 0x9152980 <col:9, col:53> '<dependent type>' '||'
                (DeclRefExpr 0x9152858 <col:9> 'const _Bool' lvalue Var 0x9152700 '__plus' 'const _Bool')
                (CXXOperatorCallExpr 0x9152958 <col:19, col:53> '<dependent type>'
                  (UnresolvedLookupExpr 0x91528f8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (DeclRefExpr 0x9152870 <col:19> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x91528e0 <col:26, col:53> '<dependent type>' lvalue
                    (DeclRefExpr 0x9152888 <col:26> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x91528bc <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e830 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x9152b20 <line:166:11, col:67> '<dependent type>' prefix '!'
              (ParenExpr 0x9152b08 <col:12, col:67> '<dependent type>'
                (BinaryOperator 0x9152af0 <col:13, col:51> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x91529c8 <col:13, col:19> '<dependent type>' lvalue
                    (DeclRefExpr 0x91529ac <col:13> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9152ac8 <col:38, col:51> '<dependent type>'
                    (UnresolvedLookupExpr 0x9152a68 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                    (DeclRefExpr 0x91529fc <col:38> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x9152a30 <col:45, col:51> '<dependent type>' lvalue
                      (DeclRefExpr 0x9152a14 <col:45> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x9152c58 <line:167:11, col:42> '<dependent type>' prefix '!'
            (ParenExpr 0x9152c40 <col:12, col:42> '<dependent type>'
              (CXXOperatorCallExpr 0x9152c18 <col:13, col:26> '<dependent type>'
                (UnresolvedLookupExpr 0x9152bb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x9152b50 <col:13> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9152b80 <col:20, col:26> '<dependent type>' lvalue
                  (DeclRefExpr 0x9152b68 <col:20> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x9152f48 <line:168:6, line:174:6>
          (CXXOperatorCallExpr 0x9152d98 <line:169:8, col:33> 'class std::basic_string<char>' lvalue
            (ImplicitCastExpr 0x9152d88 <col:15, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9152d38 <col:15, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
            (DeclRefExpr 0x9152c88 <col:8> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
            (ConditionalOperator 0x9152cf8 <col:18, col:33> 'char'
              (ImplicitCastExpr 0x9152ce8 <col:18> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9152ca0 <col:18> 'const _Bool' lvalue Var 0x9152700 '__plus' 'const _Bool'))
              (CharacterLiteral 0x9152cb8 <col:27> 'char'43)
              (CharacterLiteral 0x9152cd0 <col:33> 'char'45)))
          (IfStmt 0x9152f28 <line:170:8, line:173:15>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x9152e60 <line:170:12, col:23> '<dependent type>'
              (UnresolvedLookupExpr 0x9152e08 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
              (UnaryOperator 0x9152dd8 <col:12, col:14> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9152dbc <col:14> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
              (DeclRefExpr 0x9152dec <col:23> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
            (BinaryOperator 0x9152ed0 <line:171:3, col:10> '<dependent type>' '='
              (DeclRefExpr 0x9152e84 <col:3> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9152eb8 <col:9, col:10> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9152e9c <col:10> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
            (BinaryOperator 0x9152f10 <line:173:3, col:15> '_Bool' lvalue '='
              (DeclRefExpr 0x9152ee8 <col:3> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9152f00 <col:15> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9153018 <line:178:7, col:36>
    0x9152fd0 "bool __found_mantissa =
      (CXXBoolLiteralExpr 0x9153008 <col:31> '_Bool' false)")
  (DeclStmt 0x9153090 <line:179:7, col:24>
    0x9153040 "int __sep_pos =
      (IntegerLiteral 0x9153078 <col:23> 'int' 0)")
  (WhileStmt 0x91537e0 <line:180:7, line:201:2>
    <<<NULL>>>
    (UnaryOperator 0x91530c8 <line:180:14, col:15> '_Bool' prefix '!'
      (ImplicitCastExpr 0x91530b8 <col:15> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x91530a0 <col:15> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')))
    (CompoundStmt 0x91537c8 <line:181:2, line:201:2>
      (IfStmt 0x91537a8 <line:182:4, line:200:6>
        <<<NULL>>>
        (BinaryOperator 0x9153340 <line:182:8, line:183:24> '<dependent type>' '||'
          (ParenExpr 0x9153238 <line:182:8, col:63> '<dependent type>'
            (BinaryOperator 0x9153220 <col:9, col:47> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x91530f8 <col:9, col:15> '<dependent type>' lvalue
                (DeclRefExpr 0x91530dc <col:9> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x91531f8 <col:34, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x9153198 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x915312c <col:34> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9153160 <col:41, col:47> '<dependent type>' lvalue
                  (DeclRefExpr 0x9153144 <col:41> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9153318 <line:183:11, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x91532b8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (DeclRefExpr 0x915324c <col:11> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9153280 <col:18, col:24> '<dependent type>' lvalue
              (DeclRefExpr 0x9153264 <col:18> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9153358 <line:184:6>)
        (IfStmt 0x9153788 <line:185:9, line:200:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9153448 <line:185:13, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x91533e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (DeclRefExpr 0x9153360 <col:13> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
            (ArraySubscriptExpr 0x91533d0 <col:20, col:46> '<dependent type>' lvalue
              (DeclRefExpr 0x9153378 <col:20> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
              (DeclRefExpr 0x91533ac <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
          (CompoundStmt 0x9153760 <line:186:6, line:198:6>
            (IfStmt 0x9153588 <line:187:8, line:191:3>
              <<<NULL>>>
              (UnaryOperator 0x9153498 <line:187:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9153488 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915346c <col:13> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool')))
              (CompoundStmt 0x9153570 <line:188:3, line:191:3>
                (CXXOperatorCallExpr 0x9153508 <line:189:5, col:15> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x91534f8 <col:12, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x91534e0 <col:12, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x91534ac <col:5> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                  (CharacterLiteral 0x91534c8 <col:15> 'char'48))
                (BinaryOperator 0x9153558 <line:190:5, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x915352c <col:5> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool')
                  (CXXBoolLiteralExpr 0x9153548 <col:24> '_Bool' true)))
              <<<NULL>>>)
            (UnaryOperator 0x91535c0 <line:192:8, col:10> 'int' lvalue prefix '++'
              (DeclRefExpr 0x91535a4 <col:10> 'int' lvalue Var 0x9153040 '__sep_pos' 'int'))
            (IfStmt 0x9153740 <line:194:8, line:197:15>
              <<<NULL>>>
              (CXXOperatorCallExpr 0x9153678 <line:194:12, col:23> '<dependent type>'
                (UnresolvedLookupExpr 0x9153620 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
                (UnaryOperator 0x91535f0 <col:12, col:14> '<dependent type>' prefix '++'
                  (DeclRefExpr 0x91535d4 <col:14> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
                (DeclRefExpr 0x9153604 <col:23> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
              (BinaryOperator 0x91536e8 <line:195:3, col:10> '<dependent type>' '='
                (DeclRefExpr 0x915369c <col:3> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                (UnaryOperator 0x91536d0 <col:9, col:10> '<dependent type>' prefix '*'
                  (DeclRefExpr 0x91536b4 <col:10> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
              (BinaryOperator 0x9153728 <line:197:3, col:15> '_Bool' lvalue '='
                (DeclRefExpr 0x9153700 <col:3> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x9153718 <col:15> '_Bool' true))))
          (BreakStmt 0x9153780 <line:200:6>)))))
  (DeclStmt 0x9153848 <line:204:7, col:31>
    0x9153800 "bool __found_dec =
      (CXXBoolLiteralExpr 0x9153838 <col:26> '_Bool' false)")
  (DeclStmt 0x91538a8 <line:205:7, col:31>
    0x9153860 "bool __found_sci =
      (CXXBoolLiteralExpr 0x9153898 <col:26> '_Bool' false)")
  (DeclStmt 0x9153918 <line:206:7, col:30>
    0x91538c0 "string __found_grouping =
      (CXXConstructExpr 0x91538f8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x91539f8 <line:207:7, line:208:29>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9153940 <line:207:11, col:17> '<dependent type>' lvalue
      (DeclRefExpr 0x9153928 <col:11> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x91539c8 <line:208:2, col:29> 'void'
      (MemberExpr 0x915398c <col:2, col:19> '<bound member function type>' .reserve 0x903a390
        (DeclRefExpr 0x9153974 <col:2> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x91539e8 <col:27> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x91539b0 <col:27> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9153b48 <line:209:7, col:65>
    0x9153a30 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x9153b08 <col:37, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9153ac0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x9153a64 <col:37> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
        (DeclRefExpr 0x9153a9c <col:45, col:57> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x9156898 <line:211:7, line:348:4>
    <<<NULL>>>
    (UnaryOperator 0x9153ba8 <line:211:11, col:18> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x9153b70 <col:12, col:18> '<dependent type>' lvalue
        (DeclRefExpr 0x9153b58 <col:12> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))
    (WhileStmt 0x9154c70 <line:213:2, line:258:4>
      <<<NULL>>>
      (UnaryOperator 0x9153be8 <line:213:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9153bd8 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9153bbc <col:10> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')))
      (CompoundStmt 0x9154c50 <line:214:4, line:258:4>
        (DeclStmt 0x9153d08 <line:215:6, col:54>
          0x9153c10 "const int __digit =
            (CallExpr 0x9153ce0 <col:26, col:53> '<dependent type>'
              (UnresolvedMemberExpr 0x9153c58 <col:26> '<bound member function type>' lvalue)
              (DeclRefExpr 0x9153c98 <col:34> 'const char_type *' lvalue Var 0x9153a30 '__lit_zero' 'const char_type *')
              (IntegerLiteral 0x9153cb0 <col:46> 'int' 10)
              (DeclRefExpr 0x9153cc8 <col:50> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT'))")
        (IfStmt 0x9154aa8 <line:216:6, line:252:8>
          <<<NULL>>>
          (BinaryOperator 0x9153d70 <line:216:10, col:22> '_Bool' '!='
            (ImplicitCastExpr 0x9153d60 <col:10> 'int' <LValueToRValue>
              (DeclRefExpr 0x9153d18 <col:10> 'const int' lvalue Var 0x9153c10 '__digit' 'const int'))
            (UnaryOperator 0x9153d48 <col:21, col:22> 'int' prefix '-'
              (IntegerLiteral 0x9153d30 <col:22> 'int' 1)))
          (CompoundStmt 0x9153ea8 <line:217:8, line:220:8>
            (CXXOperatorCallExpr 0x9153e40 <line:218:3, col:19> 'class std::basic_string<char>' lvalue
              (ImplicitCastExpr 0x9153e30 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9153e18 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
              (DeclRefExpr 0x9153d88 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
              (ImplicitCastExpr 0x9153e08 <col:13, col:19> 'char':'char' <IntegralCast>
                (BinaryOperator 0x9153df0 <col:13, col:19> 'int' '+'
                  (ImplicitCastExpr 0x9153dd0 <col:13> 'int' <IntegralCast>
                    (CharacterLiteral 0x9153da0 <col:13> 'char'48))
                  (ImplicitCastExpr 0x9153de0 <col:19> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9153db4 <col:19> 'const int' lvalue Var 0x9153c10 '__digit' 'const int')))))
            (BinaryOperator 0x9153e90 <line:219:3, col:22> '_Bool' lvalue '='
              (DeclRefExpr 0x9153e64 <col:3> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool')
              (CXXBoolLiteralExpr 0x9153e80 <col:22> '_Bool' true)))
          (IfStmt 0x9154a88 <line:221:11, line:252:8>
            <<<NULL>>>
            (BinaryOperator 0x9154048 <line:221:15, line:222:28> '<dependent type>' '&&'
              (BinaryOperator 0x9153ff0 <line:221:15, line:222:12> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9153f88 <line:221:15, col:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x9153f28 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (DeclRefExpr 0x9153ec0 <col:15> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                  (CXXDependentScopeMemberExpr 0x9153ef0 <col:22, col:28> '<dependent type>' lvalue
                    (DeclRefExpr 0x9153ed8 <col:22> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))
                (UnaryOperator 0x9153fd8 <line:222:11, col:12> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9153fc8 <col:12> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9153fac <col:12> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool'))))
              (UnaryOperator 0x9154030 <col:27, col:28> '_Bool' prefix '!'
                (ImplicitCastExpr 0x9154020 <col:28> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x9154008 <col:28> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
            (CompoundStmt 0x9154120 <line:223:8, line:226:8>
              (CXXOperatorCallExpr 0x91540b8 <line:224:3, col:13> 'class std::basic_string<char>' lvalue
                (ImplicitCastExpr 0x91540a8 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9154090 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                (DeclRefExpr 0x9154060 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                (CharacterLiteral 0x9154078 <col:13> 'char'46))
              (BinaryOperator 0x9154108 <line:225:3, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x91540dc <col:3> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool')
                (CXXBoolLiteralExpr 0x91540f8 <col:17> '_Bool' true)))
            (IfStmt 0x9154a68 <line:227:11, line:252:8>
              <<<NULL>>>
              (BinaryOperator 0x91543f8 <line:227:15, line:229:27> '<dependent type>' '&&'
                (BinaryOperator 0x91543c8 <line:227:15, line:229:12> '<dependent type>' '&&'
                  (ParenExpr 0x9154370 <line:227:15, line:228:43> '<dependent type>'
                    (BinaryOperator 0x9154358 <line:227:16, line:228:42> '<dependent type>' '||'
                      (CXXOperatorCallExpr 0x9154220 <line:227:16, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x91541c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                        (DeclRefExpr 0x9154138 <col:16> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x91541a8 <col:23, col:46> '<dependent type>' lvalue
                          (DeclRefExpr 0x9154150 <col:23> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9154184 <col:29, col:41> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e9b0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                      (CXXOperatorCallExpr 0x9154330 <line:228:12, col:42> '<dependent type>'
                        (UnresolvedLookupExpr 0x91542d0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                        (DeclRefExpr 0x9154244 <col:12> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                        (ArraySubscriptExpr 0x91542b8 <col:19, col:42> '<dependent type>' lvalue
                          (DeclRefExpr 0x915425c <col:19> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                          (DeclRefExpr 0x9154294 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912ea30 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                  (UnaryOperator 0x91543b0 <line:229:11, col:12> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x91543a0 <col:12> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9154384 <col:12> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
                (DeclRefExpr 0x91543e0 <col:27> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool'))
              (CompoundStmt 0x9154a40 <line:230:8, line:250:8>
                (CXXOperatorCallExpr 0x9154468 <line:232:3, col:13> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x9154458 <col:10, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9154440 <col:10, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x9154410 <col:3> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                  (CharacterLiteral 0x9154428 <col:13> 'char'101))
                (BinaryOperator 0x91544b8 <line:233:3, col:17> '_Bool' lvalue '='
                  (DeclRefExpr 0x915448c <col:3> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool')
                  (CXXBoolLiteralExpr 0x91544a8 <col:17> '_Bool' true))
                (IfStmt 0x9154a20 <line:236:3, line:249:5>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x9154570 <line:236:7, col:18> '<dependent type>'
                    (UnresolvedLookupExpr 0x9154518 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
                    (UnaryOperator 0x91544e8 <col:7, col:9> '<dependent type>' prefix '++'
                      (DeclRefExpr 0x91544d0 <col:9> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
                    (DeclRefExpr 0x91544fc <col:18> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
                  (CompoundStmt 0x91549a0 <line:237:5, line:244:5>
                    (BinaryOperator 0x91545e0 <line:238:7, col:14> '<dependent type>' '='
                      (DeclRefExpr 0x9154594 <col:7> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                      (UnaryOperator 0x91545c8 <col:13, col:14> '<dependent type>' prefix '*'
                        (DeclRefExpr 0x91545ac <col:14> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
                    (DeclStmt 0x9154748 <line:239:7, col:61>
                      0x9154600 "const bool __plus =
                        (CXXOperatorCallExpr 0x9154720 <col:27, col:60> '<dependent type>'
                          (UnresolvedLookupExpr 0x91546c0 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                          (DeclRefExpr 0x9154634 <col:27> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x91546a8 <col:34, col:60> '<dependent type>' lvalue
                            (DeclRefExpr 0x915464c <col:34> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x9154684 <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e870 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                    (IfStmt 0x9154980 <line:240:7, line:243:9>
                      <<<NULL>>>
                      (BinaryOperator 0x9154880 <line:240:11, col:55> '<dependent type>' '||'
                        (DeclRefExpr 0x9154758 <col:11> 'const _Bool' lvalue Var 0x9154600 '__plus' 'const _Bool')
                        (CXXOperatorCallExpr 0x9154858 <col:21, col:55> '<dependent type>'
                          (UnresolvedLookupExpr 0x91547f8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                          (DeclRefExpr 0x9154770 <col:21> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                          (ArraySubscriptExpr 0x91547e0 <col:28, col:55> '<dependent type>' lvalue
                            (DeclRefExpr 0x9154788 <col:28> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                            (DeclRefExpr 0x91547bc <col:34, col:46> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e830 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
                      (CXXOperatorCallExpr 0x9154950 <line:241:9, col:34> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9154940 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9154928 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9154898 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                        (ConditionalOperator 0x9154908 <col:19, col:34> 'char'
                          (ImplicitCastExpr 0x91548f8 <col:19> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x91548b0 <col:19> 'const _Bool' lvalue Var 0x9154600 '__plus' 'const _Bool'))
                          (CharacterLiteral 0x91548c8 <col:28> 'char'43)
                          (CharacterLiteral 0x91548e0 <col:34> 'char'45)))
                      (ContinueStmt 0x9154978 <line:243:9>)))
                  (CompoundStmt 0x9154a08 <line:246:5, line:249:5>
                    (BinaryOperator 0x91549e8 <line:247:7, col:19> '_Bool' lvalue '='
                      (DeclRefExpr 0x91549bc <col:7> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
                      (CXXBoolLiteralExpr 0x91549d8 <col:19> '_Bool' true))
                    (BreakStmt 0x9154a00 <line:248:7>))))
              (BreakStmt 0x9154a60 <line:252:8>))))
        (IfStmt 0x9154c30 <line:254:6, line:257:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9154b68 <line:254:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9154b10 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (UnaryOperator 0x9154ae0 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x9154ac4 <col:12> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
            (DeclRefExpr 0x9154af4 <col:21> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
          (BinaryOperator 0x9154bd8 <line:255:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x9154b8c <col:8> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x9154bc0 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9154ba4 <col:15> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
          (BinaryOperator 0x9154c18 <line:257:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9154bf0 <col:8> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9154c08 <col:20> '_Bool' true)))))
    (WhileStmt 0x9156880 <line:260:2, line:348:4>
      <<<NULL>>>
      (UnaryOperator 0x9154cb0 <line:260:9, col:10> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9154ca0 <col:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9154c84 <col:10> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')))
      (CompoundStmt 0x9156868 <line:261:4, line:348:4>
        (IfStmt 0x91566c0 <line:264:6, line:342:8>
          <<<NULL>>>
          (BinaryOperator 0x9154e08 <line:264:10, col:48> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x9154ce0 <col:10, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9154cc4 <col:10> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x9154de0 <col:35, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9154d80 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x9154d14 <col:35> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9154d48 <col:42, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9154d2c <col:42> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x91550e8 <line:265:8, line:285:8>
            (IfStmt 0x91550c8 <line:266:3, line:284:5>
              <<<NULL>>>
              (BinaryOperator 0x9154ea0 <line:266:7, col:24> '_Bool' '&&'
                (UnaryOperator 0x9154e48 <col:7, col:8> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9154e38 <col:8> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9154e20 <col:8> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool')))
                (UnaryOperator 0x9154e88 <col:23, col:24> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9154e78 <col:24> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9154e5c <col:24> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
              (CompoundStmt 0x91550a8 <line:267:5, line:282:5>
                (IfStmt 0x9155088 <line:270:7, line:281:9>
                  <<<NULL>>>
                  (ImplicitCastExpr 0x9154ee0 <line:270:11> '_Bool' <IntegralToBoolean>
                    (ImplicitCastExpr 0x9154ed0 <col:11> 'int' <LValueToRValue>
                      (DeclRefExpr 0x9154eb8 <col:11> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))
                  (CompoundStmt 0x9154ff8 <line:271:9, line:274:9>
                    (CXXOperatorCallExpr 0x9154f88 <line:272:4, col:51> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9154f78 <col:21, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9154f60 <col:21, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9154eec <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9154f48 <col:24, col:51> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9154f38 <col:42> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9154f28 <col:42> 'int' <LValueToRValue>
                            (DeclRefExpr 0x9154f04 <col:42> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))))
                    (BinaryOperator 0x9154fe0 <line:273:4, col:16> 'int' lvalue '='
                      (DeclRefExpr 0x9154fac <col:4> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')
                      (IntegerLiteral 0x9154fc8 <col:16> 'int' 0)))
                  (CompoundStmt 0x9155070 <line:276:9, line:281:9>
                    (CXXMemberCallExpr 0x9155048 <line:279:4, col:17> 'void'
                      (MemberExpr 0x9155028 <col:4, col:11> '<bound member function type>' .clear 0x903a400
                        (DeclRefExpr 0x9155010 <col:4> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')))
                    (BreakStmt 0x9155068 <line:280:4>))))
              (BreakStmt 0x91550c0 <line:284:5>)))
          (IfStmt 0x91566a0 <line:286:11, line:342:8>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x91551c8 <line:286:15, col:28> '<dependent type>'
              (UnresolvedLookupExpr 0x9155168 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x91550fc <col:15> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x9155130 <col:22, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9155114 <col:22> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))
            (CompoundStmt 0x9155500 <line:287:8, line:300:8>
              (IfStmt 0x91554e0 <line:288:3, line:299:5>
                <<<NULL>>>
                (BinaryOperator 0x9155270 <line:288:7, col:24> '_Bool' '&&'
                  (UnaryOperator 0x9155218 <col:7, col:8> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9155208 <col:8> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x91551ec <col:8> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool')))
                  (UnaryOperator 0x9155258 <col:23, col:24> '_Bool' prefix '!'
                    (ImplicitCastExpr 0x9155248 <col:24> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x915522c <col:24> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
                (CompoundStmt 0x91554b8 <line:289:5, line:297:5>
                  (IfStmt 0x91553d8 <line:293:7, line:294:56>
                    <<<NULL>>>
                    (ImplicitCastExpr 0x9155308 <line:293:11, col:33> '_Bool' <IntegralToBoolean>
                      (CXXMemberCallExpr 0x91552c0 <col:11, col:33> 'size_type':'unsigned int'
                        (MemberExpr 0x91552a0 <col:11, col:28> '<bound member function type>' .size 0x9039850
                          (ImplicitCastExpr 0x91552f8 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                            (DeclRefExpr 0x9155288 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                    (CXXOperatorCallExpr 0x91553b0 <line:294:9, col:56> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x91553a0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9155388 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9155314 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')
                      (CXXStaticCastExpr 0x9155370 <col:29, col:56> 'char' static_cast<char> <NoOp>
                        (ImplicitCastExpr 0x9155360 <col:47> 'char' <IntegralCast>
                          (ImplicitCastExpr 0x9155350 <col:47> 'int' <LValueToRValue>
                            (DeclRefExpr 0x915532c <col:47> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))))
                    <<<NULL>>>)
                  (CXXOperatorCallExpr 0x9155450 <line:295:7, col:17> 'class std::basic_string<char>' lvalue
                    (ImplicitCastExpr 0x9155440 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9155428 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                    (DeclRefExpr 0x91553f4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                    (CharacterLiteral 0x9155410 <col:17> 'char'46))
                  (BinaryOperator 0x91554a0 <line:296:7, col:21> '_Bool' lvalue '='
                    (DeclRefExpr 0x9155474 <col:7> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool')
                    (CXXBoolLiteralExpr 0x9155490 <col:21> '_Bool' true)))
                (BreakStmt 0x91554d8 <line:299:5>)))
            (CompoundStmt 0x9156688 <line:302:8, line:342:8>
              (DeclStmt 0x9155650 <line:303:3, line:304:45>
                0x9155530 "const char_type *__q =
                  (CallExpr 0x9155628 <col:5, col:44> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x91555a8 <col:5, col:20> '<dependent type>' lvalue)
                    (DeclRefExpr 0x91555dc <col:25> 'const char_type *' lvalue Var 0x9153a30 '__lit_zero' 'const char_type *')
                    (IntegerLiteral 0x91555f8 <col:37> 'int' 10)
                    (DeclRefExpr 0x9155610 <col:41> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x9156668 <line:305:3, line:341:5>
                <<<NULL>>>
                (DeclRefExpr 0x9155660 <line:305:7> 'const char_type *' lvalue Var 0x9155530 '__q' 'const char_type *')
                (CompoundStmt 0x9155850 <line:306:5, line:310:5>
                  (CompoundAssignOperator 0x91557c0 <line:307:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x9155678 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                    (CXXOperatorCallExpr 0x9155798 <col:17, col:40> '<dependent type>'
                      (UnresolvedLookupExpr 0x9155750 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                      (CharacterLiteral 0x9155690 <col:17> 'char'48)
                      (ParenExpr 0x9155738 <col:23, col:40> '<dependent type>'
                        (CXXOperatorCallExpr 0x9155710 <col:24, col:30> '<dependent type>'
                          (UnresolvedLookupExpr 0x91556d8 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                          (DeclRefExpr 0x91556a4 <col:24> 'const char_type *' lvalue Var 0x9155530 '__q' 'const char_type *')
                          (DeclRefExpr 0x91556bc <col:30> 'const char_type *' lvalue Var 0x9153a30 '__lit_zero' 'const char_type *')))))
                  (BinaryOperator 0x9155808 <line:308:7, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x91557e0 <col:7> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool')
                    (CXXBoolLiteralExpr 0x91557f8 <col:26> '_Bool' true))
                  (UnaryOperator 0x9155838 <line:309:7, col:9> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x9155820 <col:9> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))
                (IfStmt 0x9156648 <line:311:8, line:341:5>
                  <<<NULL>>>
                  (BinaryOperator 0x9155b30 <line:311:12, line:313:24> '<dependent type>' '&&'
                    (BinaryOperator 0x9155b00 <line:311:12, line:313:9> '<dependent type>' '&&'
                      (ParenExpr 0x9155aa8 <line:311:12, line:312:40> '<dependent type>'
                        (BinaryOperator 0x9155a90 <line:311:13, line:312:39> '<dependent type>' '||'
                          (CXXOperatorCallExpr 0x9155958 <line:311:13, col:43> '<dependent type>'
                            (UnresolvedLookupExpr 0x91558f8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                            (DeclRefExpr 0x915586c <col:13> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x91558e0 <col:20, col:43> '<dependent type>' lvalue
                              (DeclRefExpr 0x9155884 <col:20> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x91558bc <col:26, col:38> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e9b0 '_S_ie' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                          (CXXOperatorCallExpr 0x9155a68 <line:312:9, col:39> '<dependent type>'
                            (UnresolvedLookupExpr 0x9155a08 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                            (DeclRefExpr 0x915597c <col:9> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                            (ArraySubscriptExpr 0x91559f0 <col:16, col:39> '<dependent type>' lvalue
                              (DeclRefExpr 0x9155994 <col:16> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                              (DeclRefExpr 0x91559cc <col:22, col:34> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912ea30 '_S_iE' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                      (UnaryOperator 0x9155ae8 <line:313:8, col:9> '_Bool' prefix '!'
                        (ImplicitCastExpr 0x9155ad8 <col:9> '_Bool' <LValueToRValue>
                          (DeclRefExpr 0x9155abc <col:9> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
                    (DeclRefExpr 0x9155b18 <col:24> '_Bool' lvalue Var 0x9152fd0 '__found_mantissa' '_Bool'))
                  (CompoundStmt 0x9156620 <line:314:5, line:339:5>
                    (IfStmt 0x9155cd8 <line:316:7, line:317:56>
                      <<<NULL>>>
                      (BinaryOperator 0x9155c00 <line:316:11, col:39> '_Bool' '&&'
                        (ImplicitCastExpr 0x9155bf0 <col:11, col:33> '_Bool' <IntegralToBoolean>
                          (CXXMemberCallExpr 0x9155b80 <col:11, col:33> 'size_type':'unsigned int'
                            (MemberExpr 0x9155b60 <col:11, col:28> '<bound member function type>' .size 0x9039850
                              (ImplicitCastExpr 0x9155ba0 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
                                (DeclRefExpr 0x9155b48 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')))))
                        (UnaryOperator 0x9155bd8 <col:38, col:39> '_Bool' prefix '!'
                          (ImplicitCastExpr 0x9155bc8 <col:39> '_Bool' <LValueToRValue>
                            (DeclRefExpr 0x9155bac <col:39> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool'))))
                      (CXXOperatorCallExpr 0x9155cb0 <line:317:9, col:56> 'class std::basic_string<char>' lvalue
                        (ImplicitCastExpr 0x9155ca0 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                          (DeclRefExpr 0x9155c88 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                        (DeclRefExpr 0x9155c18 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')
                        (CXXStaticCastExpr 0x9155c70 <col:29, col:56> 'char' static_cast<char> <NoOp>
                          (ImplicitCastExpr 0x9155c60 <col:47> 'char' <IntegralCast>
                            (ImplicitCastExpr 0x9155c50 <col:47> 'int' <LValueToRValue>
                              (DeclRefExpr 0x9155c30 <col:47> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))))
                      <<<NULL>>>)
                    (CXXOperatorCallExpr 0x9155d50 <line:318:7, col:17> 'class std::basic_string<char>' lvalue
                      (ImplicitCastExpr 0x9155d40 <col:14, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                        (DeclRefExpr 0x9155d28 <col:14, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                      (DeclRefExpr 0x9155cf4 <col:7> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                      (CharacterLiteral 0x9155d10 <col:17> 'char'101))
                    (BinaryOperator 0x9155da0 <line:319:7, col:21> '_Bool' lvalue '='
                      (DeclRefExpr 0x9155d74 <col:7> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool')
                      (CXXBoolLiteralExpr 0x9155d90 <col:21> '_Bool' true))
                    (IfStmt 0x9156600 <line:322:7, line:338:9>
                      <<<NULL>>>
                      (CXXOperatorCallExpr 0x9155e58 <line:322:11, col:22> '<dependent type>'
                        (UnresolvedLookupExpr 0x9155e00 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
                        (UnaryOperator 0x9155dd0 <col:11, col:13> '<dependent type>' prefix '++'
                          (DeclRefExpr 0x9155db8 <col:13> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
                        (DeclRefExpr 0x9155de4 <col:22> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
                      (CompoundStmt 0x9156580 <line:323:9, line:333:9>
                        (BinaryOperator 0x9155ec8 <line:324:4, col:11> '<dependent type>' '='
                          (DeclRefExpr 0x9155e7c <col:4> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                          (UnaryOperator 0x9155eb0 <col:10, col:11> '<dependent type>' prefix '*'
                            (DeclRefExpr 0x9155e94 <col:11> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
                        (DeclStmt 0x9156038 <line:325:4, col:58>
                          0x9155ef0 "const bool __plus =
                            (CXXOperatorCallExpr 0x9156010 <col:24, col:57> '<dependent type>'
                              (UnresolvedLookupExpr 0x9155fb0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                              (DeclRefExpr 0x9155f24 <col:24> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                              (ArraySubscriptExpr 0x9155f98 <col:31, col:57> '<dependent type>' lvalue
                                (DeclRefExpr 0x9155f3c <col:31> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                                (DeclRefExpr 0x9155f74 <col:37, col:49> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e870 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))")
                        (IfStmt 0x9156560 <line:326:4, line:332:6>
                          <<<NULL>>>
                          (BinaryOperator 0x9156460 <line:326:8, line:329:42> '<dependent type>' '&&'
                            (BinaryOperator 0x9156328 <line:326:8, line:328:38> '<dependent type>' '&&'
                              (ParenExpr 0x9156188 <line:326:8, col:54> '<dependent type>'
                                (BinaryOperator 0x9156170 <col:9, col:53> '<dependent type>' '||'
                                  (DeclRefExpr 0x9156048 <col:9> 'const _Bool' lvalue Var 0x9155ef0 '__plus' 'const _Bool')
                                  (CXXOperatorCallExpr 0x9156148 <col:19, col:53> '<dependent type>'
                                    (UnresolvedLookupExpr 0x91560e8 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                                    (DeclRefExpr 0x9156060 <col:19> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                                    (ArraySubscriptExpr 0x91560d0 <col:26, col:53> '<dependent type>' lvalue
                                      (DeclRefExpr 0x9156078 <col:26> 'const _CharT *' lvalue Var 0x9152440 '__lit' 'const _CharT *')
                                      (DeclRefExpr 0x91560ac <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e830 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
                              (UnaryOperator 0x9156310 <line:327:11, line:328:38> '<dependent type>' prefix '!'
                                (ParenExpr 0x91562f8 <line:327:12, line:328:38> '<dependent type>'
                                  (BinaryOperator 0x91562e0 <line:327:13, line:328:22> '<dependent type>' '&&'
                                    (CXXDependentScopeMemberExpr 0x91561b8 <line:327:13, col:19> '<dependent type>' lvalue
                                      (DeclRefExpr 0x915619c <col:13> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
                                    (CXXOperatorCallExpr 0x91562b8 <line:328:9, col:22> '<dependent type>'
                                      (UnresolvedLookupExpr 0x9156258 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                                      (DeclRefExpr 0x91561ec <col:9> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                                      (CXXDependentScopeMemberExpr 0x9156220 <col:16, col:22> '<dependent type>' lvalue
                                        (DeclRefExpr 0x9156204 <col:16> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *')))))))
                            (UnaryOperator 0x9156448 <line:329:11, col:42> '<dependent type>' prefix '!'
                              (ParenExpr 0x9156430 <col:12, col:42> '<dependent type>'
                                (CXXOperatorCallExpr 0x9156408 <col:13, col:26> '<dependent type>'
                                  (UnresolvedLookupExpr 0x91563a8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                                  (DeclRefExpr 0x9156340 <col:13> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
                                  (CXXDependentScopeMemberExpr 0x9156370 <col:20, col:26> '<dependent type>' lvalue
                                    (DeclRefExpr 0x9156358 <col:20> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))))))
                          (CXXOperatorCallExpr 0x9156530 <line:330:9, col:34> 'class std::basic_string<char>' lvalue
                            (ImplicitCastExpr 0x9156520 <col:16, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                              (DeclRefExpr 0x9156508 <col:16, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                            (DeclRefExpr 0x9156478 <col:9> 'string':'class std::basic_string<char>' lvalue ParmVar 0x9151e40 '__xtrc' 'string &')
                            (ConditionalOperator 0x91564e8 <col:19, col:34> 'char'
                              (ImplicitCastExpr 0x91564d8 <col:19> '_Bool' <LValueToRValue>
                                (DeclRefExpr 0x9156490 <col:19> 'const _Bool' lvalue Var 0x9155ef0 '__plus' 'const _Bool'))
                              (CharacterLiteral 0x91564a8 <col:28> 'char'43)
                              (CharacterLiteral 0x91564c0 <col:34> 'char'45)))
                          (ContinueStmt 0x9156558 <line:332:6>)))
                      (CompoundStmt 0x91565e8 <line:335:9, line:338:9>
                        (BinaryOperator 0x91565c8 <line:336:4, col:16> '_Bool' lvalue '='
                          (DeclRefExpr 0x915659c <col:4> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
                          (CXXBoolLiteralExpr 0x91565b8 <col:16> '_Bool' true))
                        (BreakStmt 0x91565e0 <line:337:4>))))
                  (BreakStmt 0x9156640 <line:341:5>))))))
        (IfStmt 0x9156848 <line:344:6, line:347:20>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x9156780 <line:344:10, col:21> '<dependent type>'
            (UnresolvedLookupExpr 0x9156728 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (UnaryOperator 0x91566f8 <col:10, col:12> '<dependent type>' prefix '++'
              (DeclRefExpr 0x91566dc <col:12> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter'))
            (DeclRefExpr 0x915670c <col:21> '_InIter' lvalue ParmVar 0x9151d30 '__end' '_InIter'))
          (BinaryOperator 0x91567f0 <line:345:8, col:15> '<dependent type>' '='
            (DeclRefExpr 0x91567a4 <col:8> 'char_type':'_CharT' lvalue Var 0x91524e0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x91567d8 <col:14, col:15> '<dependent type>' prefix '*'
              (DeclRefExpr 0x91567bc <col:15> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))
          (BinaryOperator 0x9156830 <line:347:8, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x9156808 <col:8> '_Bool' lvalue Var 0x9152550 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x9156820 <col:20> '_Bool' true))))))
  (IfStmt 0x9156c98 <line:352:7, line:362:9>
    <<<NULL>>>
    (ImplicitCastExpr 0x9156920 <line:352:11, col:33> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x91568f0 <col:11, col:33> 'size_type':'unsigned int'
        (MemberExpr 0x91568cc <col:11, col:28> '<bound member function type>' .size 0x9039850
          (ImplicitCastExpr 0x9156910 <col:11> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x91568b4 <col:11> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x9156c80 <line:353:9, line:362:9>
      (IfStmt 0x9156a88 <line:355:4, line:356:53>
        <<<NULL>>>
        (BinaryOperator 0x91569b0 <line:355:8, col:25> '_Bool' '&&'
          (UnaryOperator 0x9156958 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9156948 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x915692c <col:9> '_Bool' lvalue Var 0x9153800 '__found_dec' '_Bool')))
          (UnaryOperator 0x9156998 <col:24, col:25> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9156988 <col:25> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x915696c <col:25> '_Bool' lvalue Var 0x9153860 '__found_sci' '_Bool'))))
        (CXXOperatorCallExpr 0x9156a60 <line:356:6, col:53> 'class std::basic_string<char>' lvalue
          (ImplicitCastExpr 0x9156a50 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9156a38 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
          (DeclRefExpr 0x91569c8 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')
          (CXXStaticCastExpr 0x9156a20 <col:26, col:53> 'char' static_cast<char> <NoOp>
            (ImplicitCastExpr 0x9156a10 <col:44> 'char' <IntegralCast>
              (ImplicitCastExpr 0x9156a00 <col:44> 'int' <LValueToRValue>
                (DeclRefExpr 0x91569e0 <col:44> 'int' lvalue Var 0x9153040 '__sep_pos' 'int')))))
        <<<NULL>>>)
      (IfStmt 0x9156c60 <line:358:11, line:361:24>
        <<<NULL>>>
        (UnaryOperator 0x9156bc8 <line:358:15, line:360:27> '<dependent type>' prefix '!'
          (CallExpr 0x9156ba0 <line:358:16, line:360:27> '<dependent type>'
            (DeclRefExpr 0x9156ac8 <line:358:16, col:21> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x91519a0 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x9156b00 <col:39, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9156ae8 <col:39> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x9156b50 <line:359:11, col:17> '<dependent type>' lvalue
              (DeclRefExpr 0x9156b34 <col:11> 'const __cache_type *' lvalue Var 0x9152370 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x9156b84 <line:360:11> 'string':'class std::basic_string<char>' lvalue Var 0x91538c0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x9156c48 <line:361:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x9156bdc <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9151df0 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x9156c38 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9156c14 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9156cd0 <line:364:7, col:14>
    (DeclRefExpr 0x9156cb4 <col:14> '_InIter' lvalue ParmVar 0x9151cf0 '__beg' '_InIter')))


    template <typename _ValueT> _InIter _M_extract_int(_InIter __beg, _InIter __end, std::ios_base &__io, ios_base::iostate &__err, _ValueT &__v) const (CompoundStmt 0x915c548 </usr/include/c++/4.6/bits/locale_facets.tcc:373:7, line:584:7>
  (DeclStmt 0x9157450 <line:374:9, col:57>
    0x9157420 "typedef char_traits<_CharT> __traits_type")
  (DeclStmt 0x91574d8 <line:375:2, col:33>
    0x9157470 "Using__gnu_cxx::;")
  (DeclStmt 0x9157660 <line:376:2, col:66>
    0x9157630 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9157750 <line:377:2, col:67>
    0x9157720 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9157858 <line:378:2, col:32>
    0x9157820 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9157920 <line:379:2, col:40>
    0x9157880 "const std::locale &__loc =
      (CXXMemberCallExpr 0x91578f0 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x91578cc <col:24, col:29> '<bound member function type>' ._M_getloc 0x90ae450
          (ImplicitCastExpr 0x9157910 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x91578b4 <col:24> 'class std::ios_base' lvalue ParmVar 0x91570d0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x91579e8 <line:380:2, col:40>
    0x9157960 "const __cache_type *__lc =
      (CallExpr 0x91579c8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9157994 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9157820 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x91579ac <col:34> 'const class std::locale' lvalue Var 0x9157880 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9157ab8 <line:381:2, col:41>
    0x9157a30 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9157a80 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9157a64 <col:24> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9157b28 <line:382:2, col:29>
    0x9157ad0 "char_type __c =
      (CXXUnresolvedConstructExpr 0x9157b10 <col:18, col:28> 'char_type':'_CharT')")
  (DeclStmt 0x9157d20 <line:385:2, line:386:62>
    0x9157ba0 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9157cf8 <line:385:41, line:386:53> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9157ce8 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9157cd0 <col:41, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9157c50 <line:385:41, col:52> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9157c2c <col:41, col:46> '<bound member function type>' .flags 0x90ada50
            (ImplicitCastExpr 0x9157c70 <col:41> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9157bd4 <col:41> 'class std::ios_base' lvalue ParmVar 0x91570d0 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9157cc0 <line:386:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9157c9c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x9157e90 <line:387:2, col:49>
    0x9157d40 "const bool __oct =
      (BinaryOperator 0x9157e10 <col:21, col:46> '_Bool' '=='
        (ImplicitCastExpr 0x9157df0 <col:21> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9157dd0 <col:21> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9157d74 <col:21> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9157ba0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x9157e00 <col:36, col:46> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9157de0 <col:36, col:46> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9157dac <col:36, col:46> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
  (DeclStmt 0x9158090 <line:388:2, col:67>
    0x9157eb0 "int __base =
      (ConditionalOperator 0x9158040 <col:15, col:66> 'int'
        (ImplicitCastExpr 0x9158030 <col:15> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9157ee4 <col:15> 'const _Bool' lvalue Var 0x9157d40 '__oct' 'const _Bool'))
        (IntegerLiteral 0x9157f00 <col:23> 'int' 8)
        (ParenExpr 0x9158018 <col:27, col:66> 'int'
          (ConditionalOperator 0x9157ff8 <col:28, col:64> 'int'
            (BinaryOperator 0x9157fb0 <col:28, col:53> '_Bool' '=='
              (ImplicitCastExpr 0x9157f90 <col:28> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9157f70 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9157f18 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9157ba0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
              (ImplicitCastExpr 0x9157fa0 <col:43, col:53> 'int' <IntegralCast>
                (ImplicitCastExpr 0x9157f80 <col:43, col:53> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9157f4c <col:43, col:53> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (IntegerLiteral 0x9157fc8 <col:59> 'int' 16)
            (IntegerLiteral 0x9157fe0 <col:64> 'int' 10))))")
  (DeclStmt 0x91581a0 <line:391:2, col:33>
    0x91580b0 "bool __testeof =
      (CXXOperatorCallExpr 0x9158178 <col:19, col:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9158118 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
        (DeclRefExpr 0x91580e4 <col:19> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')
        (DeclRefExpr 0x91580fc <col:28> '_InIter' lvalue ParmVar 0x9157080 '__end' '_InIter'))")
  (DeclStmt 0x9158208 <line:394:2, col:25>
    0x91581c0 "bool __negative =
      (CXXBoolLiteralExpr 0x91581f8 <col:20> '_Bool' false)")
  (IfStmt 0x9158a08 <line:395:2, line:408:4>
    <<<NULL>>>
    (UnaryOperator 0x9158240 <line:395:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9158230 <col:7> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9158218 <col:7> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')))
    (CompoundStmt 0x91589e8 <line:396:4, line:408:4>
      (BinaryOperator 0x91582a0 <line:397:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x9158254 <col:6> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
        (UnaryOperator 0x9158288 <col:12, col:13> '<dependent type>' prefix '*'
          (DeclRefExpr 0x915826c <col:13> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))
      (BinaryOperator 0x91583e0 <line:398:6, col:53> '<dependent type>' '='
        (DeclRefExpr 0x91582b8 <col:6> '_Bool' lvalue Var 0x91581c0 '__negative' '_Bool')
        (CXXOperatorCallExpr 0x91583b8 <col:19, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9158358 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
          (DeclRefExpr 0x91582d0 <col:19> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
          (ArraySubscriptExpr 0x9158340 <col:26, col:53> '<dependent type>' lvalue
            (DeclRefExpr 0x91582e8 <col:26> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
            (DeclRefExpr 0x915831c <col:32, col:44> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e830 '_S_iminus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))
      (IfStmt 0x91589c8 <line:399:6, line:407:8>
        <<<NULL>>>
        (BinaryOperator 0x9158810 <line:399:10, line:401:37> '<dependent type>' '&&'
          (BinaryOperator 0x91586d8 <line:399:10, line:400:62> '<dependent type>' '&&'
            (ParenExpr 0x9158538 <line:399:10, col:59> '<dependent type>'
              (BinaryOperator 0x9158520 <col:11, col:58> '<dependent type>' '||'
                (DeclRefExpr 0x91583f8 <col:11> '_Bool' lvalue Var 0x91581c0 '__negative' '_Bool')
                (CXXOperatorCallExpr 0x91584f8 <col:25, col:58> '<dependent type>'
                  (UnresolvedLookupExpr 0x9158498 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (DeclRefExpr 0x9158410 <col:25> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                  (ArraySubscriptExpr 0x9158480 <col:32, col:58> '<dependent type>' lvalue
                    (DeclRefExpr 0x9158428 <col:32> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
                    (DeclRefExpr 0x915845c <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e870 '_S_iplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))))
            (UnaryOperator 0x91586c0 <line:400:6, col:62> '<dependent type>' prefix '!'
              (ParenExpr 0x91586a8 <col:7, col:62> '<dependent type>'
                (BinaryOperator 0x9158690 <col:8, col:46> '<dependent type>' '&&'
                  (CXXDependentScopeMemberExpr 0x9158568 <col:8, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x915854c <col:8> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
                  (CXXOperatorCallExpr 0x9158668 <col:33, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x9158608 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                    (DeclRefExpr 0x915859c <col:33> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                    (CXXDependentScopeMemberExpr 0x91585d0 <col:40, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x91585b4 <col:40> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *')))))))
          (UnaryOperator 0x91587f8 <line:401:6, col:37> '<dependent type>' prefix '!'
            (ParenExpr 0x91587e0 <col:7, col:37> '<dependent type>'
              (CXXOperatorCallExpr 0x91587b8 <col:8, col:21> '<dependent type>'
                (UnresolvedLookupExpr 0x9158758 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x91586f0 <col:8> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9158720 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x9158708 <col:15> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))))))
        (CompoundStmt 0x91589b0 <line:402:8, line:407:8>
          (IfStmt 0x9158990 <line:403:3, line:406:17>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x91588c8 <line:403:7, col:18> '<dependent type>'
              (UnresolvedLookupExpr 0x9158870 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
              (UnaryOperator 0x9158840 <col:7, col:9> '<dependent type>' prefix '++'
                (DeclRefExpr 0x9158828 <col:9> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter'))
              (DeclRefExpr 0x9158854 <col:18> '_InIter' lvalue ParmVar 0x9157080 '__end' '_InIter'))
            (BinaryOperator 0x9158938 <line:404:5, col:12> '<dependent type>' '='
              (DeclRefExpr 0x91588ec <col:5> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
              (UnaryOperator 0x9158920 <col:11, col:12> '<dependent type>' prefix '*'
                (DeclRefExpr 0x9158904 <col:12> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))
            (BinaryOperator 0x9158978 <line:406:5, col:17> '_Bool' lvalue '='
              (DeclRefExpr 0x9158950 <col:5> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')
              (CXXBoolLiteralExpr 0x9158968 <col:17> '_Bool' true))))
        <<<NULL>>>))
    <<<NULL>>>)
  (DeclStmt 0x9158a78 <line:412:2, col:27>
    0x9158a30 "bool __found_zero =
      (CXXBoolLiteralExpr 0x9158a68 <col:22> '_Bool' false)")
  (DeclStmt 0x9158af0 <line:413:2, col:19>
    0x9158aa0 "int __sep_pos =
      (IntegerLiteral 0x9158ad8 <col:18> 'int' 0)")
  (WhileStmt 0x91598e0 <line:414:2, line:454:4>
    <<<NULL>>>
    (UnaryOperator 0x9158b28 <line:414:9, col:10> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9158b18 <col:10> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9158b00 <col:10> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')))
    (CompoundStmt 0x91598c8 <line:415:4, line:454:4>
      (IfStmt 0x91596a0 <line:416:6, line:444:8>
        <<<NULL>>>
        (BinaryOperator 0x9158da0 <line:416:10, line:417:19> '<dependent type>' '||'
          (ParenExpr 0x9158c98 <line:416:10, col:65> '<dependent type>'
            (BinaryOperator 0x9158c80 <col:11, col:49> '<dependent type>' '&&'
              (CXXDependentScopeMemberExpr 0x9158b58 <col:11, col:17> '<dependent type>' lvalue
                (DeclRefExpr 0x9158b3c <col:11> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
              (CXXOperatorCallExpr 0x9158c58 <col:36, col:49> '<dependent type>'
                (UnresolvedLookupExpr 0x9158bf8 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x9158b8c <col:36> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                (CXXDependentScopeMemberExpr 0x9158bc0 <col:43, col:49> '<dependent type>' lvalue
                  (DeclRefExpr 0x9158ba4 <col:43> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *')))))
          (CXXOperatorCallExpr 0x9158d78 <line:417:6, col:19> '<dependent type>'
            (UnresolvedLookupExpr 0x9158d18 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (DeclRefExpr 0x9158cac <col:6> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
            (CXXDependentScopeMemberExpr 0x9158ce0 <col:13, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x9158cc4 <col:13> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))))
        (BreakStmt 0x9158db8 <line:418:8>)
        (IfStmt 0x9159680 <line:419:11, line:444:8>
          <<<NULL>>>
          (BinaryOperator 0x9158f98 <line:419:15, line:420:41> '<dependent type>' '&&'
            (CXXOperatorCallExpr 0x9158ea8 <line:419:15, col:48> '<dependent type>'
              (UnresolvedLookupExpr 0x9158e48 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x9158dc0 <col:15> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
              (ArraySubscriptExpr 0x9158e30 <col:22, col:48> '<dependent type>' lvalue
                (DeclRefExpr 0x9158dd8 <col:22> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9158e0c <col:28, col:40> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ParenExpr 0x9158f80 <line:420:11, col:41> '_Bool'
              (BinaryOperator 0x9158f68 <col:12, col:39> '_Bool' '||'
                (UnaryOperator 0x9158ef8 <col:12, col:13> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9158ee8 <col:13> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9158ecc <col:13> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool')))
                (BinaryOperator 0x9158f50 <col:29, col:39> '_Bool' '=='
                  (ImplicitCastExpr 0x9158f40 <col:29> 'int' <LValueToRValue>
                    (DeclRefExpr 0x9158f0c <col:29> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
                  (IntegerLiteral 0x9158f28 <col:39> 'int' 10)))))
          (CompoundStmt 0x91591b0 <line:421:8, line:428:8>
            (BinaryOperator 0x9158fd8 <line:422:3, col:18> '_Bool' lvalue '='
              (DeclRefExpr 0x9158fb0 <col:3> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool')
              (CXXBoolLiteralExpr 0x9158fc8 <col:18> '_Bool' true))
            (UnaryOperator 0x9159008 <line:423:3, col:5> 'int' lvalue prefix '++'
              (DeclRefExpr 0x9158ff0 <col:5> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int'))
            (IfStmt 0x91590d0 <line:424:3, line:425:14>
              <<<NULL>>>
              (BinaryOperator 0x9159070 <line:424:7, col:22> '_Bool' '=='
                (ImplicitCastExpr 0x9159060 <col:7> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x9159050 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                    (DeclRefExpr 0x915901c <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9157ba0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                (IntegerLiteral 0x9159038 <col:22> 'int' 0))
              (BinaryOperator 0x91590b8 <line:425:5, col:14> 'int' lvalue '='
                (DeclRefExpr 0x9159088 <col:5> 'int' lvalue Var 0x9157eb0 '__base' 'int')
                (IntegerLiteral 0x91590a0 <col:14> 'int' 8))
              <<<NULL>>>)
            (IfStmt 0x9159190 <line:426:3, line:427:17>
              <<<NULL>>>
              (BinaryOperator 0x9159130 <line:426:7, col:17> '_Bool' '=='
                (ImplicitCastExpr 0x9159120 <col:7> 'int' <LValueToRValue>
                  (DeclRefExpr 0x91590ec <col:7> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
                (IntegerLiteral 0x9159108 <col:17> 'int' 8))
              (BinaryOperator 0x9159178 <line:427:5, col:17> 'int' lvalue '='
                (DeclRefExpr 0x9159148 <col:5> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')
                (IntegerLiteral 0x9159160 <col:17> 'int' 0))
              <<<NULL>>>))
          (IfStmt 0x9159660 <line:429:11, line:444:8>
            <<<NULL>>>
            (BinaryOperator 0x9159438 <line:429:15, line:431:39> '<dependent type>' '&&'
              (DeclRefExpr 0x91591d0 <line:429:15> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool')
              (ParenExpr 0x9159420 <line:430:11, line:431:39> '<dependent type>'
                (BinaryOperator 0x9159408 <line:430:12, line:431:38> '<dependent type>' '||'
                  (CXXOperatorCallExpr 0x91592d0 <line:430:12, col:42> '<dependent type>'
                    (UnresolvedLookupExpr 0x9159270 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                    (DeclRefExpr 0x91591e8 <col:12> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9159258 <col:19, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x9159200 <col:19> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9159234 <col:25, col:37> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e8b0 '_S_ix' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
                  (CXXOperatorCallExpr 0x91593e0 <line:431:8, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x9159380 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                    (DeclRefExpr 0x91592f4 <col:8> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
                    (ArraySubscriptExpr 0x9159368 <col:15, col:38> '<dependent type>' lvalue
                      (DeclRefExpr 0x915930c <col:15> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
                      (DeclRefExpr 0x9159344 <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e8f0 '_S_iX' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))))))
            (CompoundStmt 0x9159640 <line:432:8, line:442:8>
              (IfStmt 0x9159500 <line:433:3, line:434:14>
                <<<NULL>>>
                (BinaryOperator 0x91594a0 <line:433:7, col:22> '_Bool' '=='
                  (ImplicitCastExpr 0x9159490 <col:7> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9159480 <col:7> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9159450 <col:7> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9157ba0 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
                  (IntegerLiteral 0x9159468 <col:22> 'int' 0))
                (BinaryOperator 0x91594e8 <line:434:5, col:14> 'int' lvalue '='
                  (DeclRefExpr 0x91594b8 <col:5> 'int' lvalue Var 0x9157eb0 '__base' 'int')
                  (IntegerLiteral 0x91594d0 <col:14> 'int' 16))
                <<<NULL>>>)
              (IfStmt 0x9159620 <line:435:3, line:441:5>
                <<<NULL>>>
                (BinaryOperator 0x9159560 <line:435:7, col:17> '_Bool' '=='
                  (ImplicitCastExpr 0x9159550 <col:7> 'int' <LValueToRValue>
                    (DeclRefExpr 0x915951c <col:7> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
                  (IntegerLiteral 0x9159538 <col:17> 'int' 16))
                (CompoundStmt 0x9159600 <line:436:5, line:439:5>
                  (BinaryOperator 0x91595a0 <line:437:7, col:22> '_Bool' lvalue '='
                    (DeclRefExpr 0x9159578 <col:7> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool')
                    (CXXBoolLiteralExpr 0x9159590 <col:22> '_Bool' false))
                  (BinaryOperator 0x91595e8 <line:438:7, col:19> 'int' lvalue '='
                    (DeclRefExpr 0x91595b8 <col:7> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')
                    (IntegerLiteral 0x91595d0 <col:19> 'int' 0)))
                (BreakStmt 0x9159618 <line:441:5>)))
            (BreakStmt 0x9159658 <line:444:8>))))
      (IfStmt 0x91598a8 <line:446:6, line:453:20>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9159760 <line:446:10, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9159708 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (UnaryOperator 0x91596d8 <col:10, col:12> '<dependent type>' prefix '++'
            (DeclRefExpr 0x91596bc <col:12> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter'))
          (DeclRefExpr 0x91596ec <col:21> '_InIter' lvalue ParmVar 0x9157080 '__end' '_InIter'))
        (CompoundStmt 0x9159850 <line:447:8, line:451:8>
          (BinaryOperator 0x91597d0 <line:448:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x9159784 <col:3> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x91597b8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x915979c <col:10> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))
          (IfStmt 0x9159830 <line:449:3, line:450:5>
            <<<NULL>>>
            (UnaryOperator 0x9159810 <line:449:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x9159800 <col:8> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x91597e8 <col:8> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool')))
            (BreakStmt 0x9159828 <line:450:5>)
            <<<NULL>>>))
        (BinaryOperator 0x9159890 <line:453:8, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x9159868 <col:8> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')
          (CXXBoolLiteralExpr 0x9159880 <col:20> '_Bool' true)))))
  (DeclStmt 0x9159ab8 <line:458:2, line:459:42>
    0x9159900 "const size_t __len =
      (ImplicitCastExpr 0x9159aa8 <line:458:23, line:459:41> 'const size_t':'const unsigned int' <IntegralCast>
        (ParenExpr 0x9159a90 <line:458:23, line:459:41> 'int'
          (ConditionalOperator 0x9159a70 <line:458:24, line:459:35> 'int'
            (BinaryOperator 0x9159978 <line:458:24, col:34> '_Bool' '=='
              (ImplicitCastExpr 0x9159968 <col:24> 'int' <LValueToRValue>
                (DeclRefExpr 0x9159934 <col:24> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
              (IntegerLiteral 0x9159950 <col:34> 'int' 16))
            (BinaryOperator 0x9159a30 <col:39, line:459:24> 'int' '-'
              (ImplicitCastExpr 0x9159a10 <line:458:39, col:51> 'int' <IntegralCast>
                (DeclRefExpr 0x91599ac <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912ea80 '_S_iend' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))
              (ImplicitCastExpr 0x9159a20 <line:459:12, col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x91599ec <col:12, col:24> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>')))
            (ImplicitCastExpr 0x9159a60 <col:35> 'int' <LValueToRValue>
              (DeclRefExpr 0x9159a48 <col:35> 'int' lvalue Var 0x9157eb0 '__base' 'int')))))")
  (DeclStmt 0x9159b28 <line:462:2, col:25>
    0x9159ad0 "string __found_grouping =
      (CXXConstructExpr 0x9159b08 <col:9> 'string':'class std::basic_string<char>''void (void)')")
  (IfStmt 0x9159c08 <line:463:2, line:464:31>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9159b50 <line:463:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9159b38 <col:6> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
    (CXXMemberCallExpr 0x9159bd8 <line:464:4, col:31> 'void'
      (MemberExpr 0x9159b9c <col:4, col:21> '<bound member function type>' .reserve 0x903a390
        (DeclRefExpr 0x9159b84 <col:4> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>'))
      (ImplicitCastExpr 0x9159bf8 <col:29> 'size_type':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9159bc0 <col:29> 'int' 32)))
    <<<NULL>>>)
  (DeclStmt 0x9159c78 <line:465:2, col:25>
    0x9159c30 "bool __testfail =
      (CXXBoolLiteralExpr 0x9159c68 <col:20> '_Bool' false)")
  (DeclStmt 0x9159cd8 <line:466:2, col:29>
    0x9159c90 "bool __testoverflow =
      (CXXBoolLiteralExpr 0x9159cc8 <col:24> '_Bool' false)")
  (DeclStmt 0x915a118 <line:467:2, line:470:49>
    0x9159d10 "const __unsigned_type __max =
      (ConditionalOperator 0x915a0f8 <line:468:4, line:470:44> '<dependent type>'
        (ParenExpr 0x9159ea0 <line:468:4, col:68> '<dependent type>'
          (BinaryOperator 0x9159e88 <col:5, col:57> '<dependent type>' '&&'
            (DeclRefExpr 0x9159d44 <col:5> '_Bool' lvalue Var 0x91581c0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x9159e50 <col:19, col:57> '<dependent type>' lvalue)))
        (CXXOperatorCallExpr 0x9159fe0 <line:469:6, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9159fa8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CXXDependentScopeMemberExpr 0x9159f70 <col:7, col:45> '<dependent type>' lvalue))
        (CXXDependentScopeMemberExpr 0x915a0c0 <line:470:6, col:44> '<dependent type>' lvalue))")
  (DeclStmt 0x915a1b0 <line:471:2, col:47>
    0x915a130 "const __unsigned_type __smax =
      (BinaryOperator 0x915a198 <col:33, col:41> '<dependent type>' '/'
        (DeclRefExpr 0x915a164 <col:33> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9159d10 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x915a17c <col:41> 'int' lvalue Var 0x9157eb0 '__base' 'int'))")
  (DeclStmt 0x915a220 <line:472:2, col:30>
    0x915a1d0 "__unsigned_type __result =
      (IntegerLiteral 0x915a208 <col:29> 'int' 0)")
  (DeclStmt 0x915a290 <line:473:2, col:17>
    0x915a240 "int __digit =
      (IntegerLiteral 0x915a278 <col:16> 'int' 0)")
  (DeclStmt 0x915a3b0 <line:474:2, col:60>
    0x915a2b0 "const char_type *__lit_zero =
      (CXXOperatorCallExpr 0x915a388 <col:32, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x915a340 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x915a2e4 <col:32> 'const _CharT *' lvalue Var 0x9157a30 '__lit' 'const _CharT *')
        (DeclRefExpr 0x915a31c <col:40, col:52> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>' EnumConstant 0x912e930 '_S_izero' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1549:5>'))")
  (IfStmt 0x915b888 <line:476:2, line:546:6>
    <<<NULL>>>
    (UnaryOperator 0x915a410 <line:476:6, col:13> '<dependent type>' prefix '!'
      (CXXDependentScopeMemberExpr 0x915a3d8 <col:7, col:13> '<dependent type>' lvalue
        (DeclRefExpr 0x915a3c0 <col:7> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *')))
    (WhileStmt 0x915ab20 <line:478:4, line:498:6>
      <<<NULL>>>
      (UnaryOperator 0x915a450 <line:478:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x915a440 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x915a424 <col:12> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')))
      (CompoundStmt 0x915ab00 <line:479:6, line:498:6>
        (BinaryOperator 0x915a540 <line:480:8, col:48> '<dependent type>' '='
          (DeclRefExpr 0x915a464 <col:8> 'int' lvalue Var 0x915a240 '__digit' 'int')
          (CallExpr 0x915a518 <col:18, col:48> '<dependent type>'
            (UnresolvedMemberExpr 0x915a490 <col:18> '<bound member function type>' lvalue)
            (DeclRefExpr 0x915a4d0 <col:26> 'const char_type *' lvalue Var 0x915a2b0 '__lit_zero' 'const char_type *')
            (DeclRefExpr 0x915a4e8 <col:38> 'const size_t':'const unsigned int' lvalue Var 0x9159900 '__len' 'const size_t':'const unsigned int')
            (DeclRefExpr 0x915a500 <col:45> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')))
        (IfStmt 0x915a5d0 <line:481:8, line:482:3>
          <<<NULL>>>
          (BinaryOperator 0x915a5b0 <line:481:12, col:24> '_Bool' '=='
            (ImplicitCastExpr 0x915a5a0 <col:12> 'int' <LValueToRValue>
              (DeclRefExpr 0x915a558 <col:12> 'int' lvalue Var 0x915a240 '__digit' 'int'))
            (UnaryOperator 0x915a588 <col:23, col:24> 'int' prefix '-'
              (IntegerLiteral 0x915a570 <col:24> 'int' 1)))
          (BreakStmt 0x915a5c8 <line:482:3>)
          <<<NULL>>>)
        (IfStmt 0x915a958 <line:484:8, line:492:3>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x915a668 <line:484:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x915a620 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x915a5ec <col:12> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
            (DeclRefExpr 0x915a604 <col:23> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a130 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
          (BinaryOperator 0x915a6b8 <line:485:3, col:20> '_Bool' lvalue '='
            (DeclRefExpr 0x915a68c <col:3> '_Bool' lvalue Var 0x9159c90 '__testoverflow' '_Bool')
            (CXXBoolLiteralExpr 0x915a6a8 <col:20> '_Bool' true))
          (CompoundStmt 0x915a938 <line:487:3, line:492:3>
            (CompoundAssignOperator 0x915a700 <line:488:5, col:17> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x915a6d0 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x915a6e8 <col:17> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
            (CXXOperatorCallExpr 0x915a890 <line:489:5, col:42> '<dependent type>'
              (UnresolvedLookupExpr 0x915a850 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a6630 0x90b4390 0x90b5600)
              (DeclRefExpr 0x915a720 <col:5> '_Bool' lvalue Var 0x9159c90 '__testoverflow' '_Bool')
              (CXXOperatorCallExpr 0x915a828 <col:23, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x915a7e0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
                (DeclRefExpr 0x915a738 <col:23> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                (CXXOperatorCallExpr 0x915a7b8 <col:34, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x915a780 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (DeclRefExpr 0x915a750 <col:34> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9159d10 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x915a768 <col:42> 'int' lvalue Var 0x915a240 '__digit' 'int'))))
            (CompoundAssignOperator 0x915a8e8 <line:490:5, col:17> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x915a8b4 <col:5> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
              (DeclRefExpr 0x915a8cc <col:17> 'int' lvalue Var 0x915a240 '__digit' 'int'))
            (UnaryOperator 0x915a920 <line:491:5, col:7> 'int' lvalue prefix '++'
              (DeclRefExpr 0x915a908 <col:7> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int'))))
        (IfStmt 0x915aae0 <line:494:8, line:497:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x915aa18 <line:494:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x915a9c0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (UnaryOperator 0x915a990 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x915a974 <col:14> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter'))
            (DeclRefExpr 0x915a9a4 <col:23> '_InIter' lvalue ParmVar 0x9157080 '__end' '_InIter'))
          (BinaryOperator 0x915aa88 <line:495:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x915aa3c <col:3> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x915aa70 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x915aa54 <col:10> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))
          (BinaryOperator 0x915aac8 <line:497:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x915aaa0 <col:3> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x915aab8 <col:15> '_Bool' true)))))
    (WhileStmt 0x915b870 <line:500:4, line:546:6>
      <<<NULL>>>
      (UnaryOperator 0x915ab60 <line:500:11, col:12> '_Bool' prefix '!'
        (ImplicitCastExpr 0x915ab50 <col:12> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x915ab34 <col:12> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')))
      (CompoundStmt 0x915b858 <line:501:6, line:546:6>
        (IfStmt 0x915b6b0 <line:504:8, line:540:3>
          <<<NULL>>>
          (BinaryOperator 0x915acb8 <line:504:12, col:50> '<dependent type>' '&&'
            (CXXDependentScopeMemberExpr 0x915ab90 <col:12, col:18> '<dependent type>' lvalue
              (DeclRefExpr 0x915ab74 <col:12> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
            (CXXOperatorCallExpr 0x915ac90 <col:37, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x915ac30 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x915abc4 <col:37> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x915abf8 <col:44, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x915abdc <col:44> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))))
          (CompoundStmt 0x915aea8 <line:505:3, line:518:3>
            (IfStmt 0x915ae88 <line:508:5, line:517:7>
              <<<NULL>>>
              (ImplicitCastExpr 0x915acf8 <line:508:9> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x915ace8 <col:9> 'int' <LValueToRValue>
                  (DeclRefExpr 0x915acd0 <col:9> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')))
              (CompoundStmt 0x915ae10 <line:509:7, line:512:7>
                (CXXOperatorCallExpr 0x915ada0 <line:510:9, col:56> 'class std::basic_string<char>' lvalue
                  (ImplicitCastExpr 0x915ad90 <col:26, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x915ad78 <col:26, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
                  (DeclRefExpr 0x915ad04 <col:9> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>')
                  (CXXStaticCastExpr 0x915ad60 <col:29, col:56> 'char' static_cast<char> <NoOp>
                    (ImplicitCastExpr 0x915ad50 <col:47> 'char' <IntegralCast>
                      (ImplicitCastExpr 0x915ad40 <col:47> 'int' <LValueToRValue>
                        (DeclRefExpr 0x915ad1c <col:47> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')))))
                (BinaryOperator 0x915adf8 <line:511:9, col:21> 'int' lvalue '='
                  (DeclRefExpr 0x915adc4 <col:9> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')
                  (IntegerLiteral 0x915ade0 <col:21> 'int' 0)))
              (CompoundStmt 0x915ae70 <line:514:7, line:517:7>
                (BinaryOperator 0x915ae50 <line:515:9, col:22> '_Bool' lvalue '='
                  (DeclRefExpr 0x915ae28 <col:9> '_Bool' lvalue Var 0x9159c30 '__testfail' '_Bool')
                  (CXXBoolLiteralExpr 0x915ae40 <col:22> '_Bool' true))
                (BreakStmt 0x915ae68 <line:516:9>))))
          (IfStmt 0x915b690 <line:519:13, line:540:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x915af88 <line:519:17, col:30> '<dependent type>'
              (UnresolvedLookupExpr 0x915af28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x915aebc <col:17> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
              (CXXDependentScopeMemberExpr 0x915aef0 <col:24, col:30> '<dependent type>' lvalue
                (DeclRefExpr 0x915aed4 <col:24> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *')))
            (BreakStmt 0x915afb0 <line:520:3>)
            (CompoundStmt 0x915b668 <line:522:3, line:540:3>
              (DeclStmt 0x915b0f0 <line:523:5, line:524:50>
                0x915afd0 "const char_type *__q =
                  (CallExpr 0x915b0c8 <col:7, col:49> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x915b048 <col:7, col:22> '<dependent type>' lvalue)
                    (DeclRefExpr 0x915b07c <col:27> 'const char_type *' lvalue Var 0x915a2b0 '__lit_zero' 'const char_type *')
                    (DeclRefExpr 0x915b094 <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9159900 '__len' 'const size_t':'const unsigned int')
                    (DeclRefExpr 0x915b0ac <col:46> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT'))")
              (IfStmt 0x915b138 <line:525:5, line:526:7>
                <<<NULL>>>
                (UnaryOperator 0x915b118 <line:525:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x915b100 <col:10> 'const char_type *' lvalue Var 0x915afd0 '__q' 'const char_type *'))
                (BreakStmt 0x915b130 <line:526:7>)
                <<<NULL>>>)
              (BinaryOperator 0x915b200 <line:528:5, col:21> '<dependent type>' '='
                (DeclRefExpr 0x915b154 <col:5> 'int' lvalue Var 0x915a240 '__digit' 'int')
                (CXXOperatorCallExpr 0x915b1d8 <col:15, col:21> '<dependent type>'
                  (UnresolvedLookupExpr 0x915b1a0 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (DeclRefExpr 0x915b16c <col:15> 'const char_type *' lvalue Var 0x915afd0 '__q' 'const char_type *')
                  (DeclRefExpr 0x915b184 <col:21> 'const char_type *' lvalue Var 0x915a2b0 '__lit_zero' 'const char_type *')))
              (IfStmt 0x915b2c0 <line:529:5, line:530:18>
                <<<NULL>>>
                (BinaryOperator 0x915b258 <line:529:9, col:19> '_Bool' '>'
                  (ImplicitCastExpr 0x915b248 <col:9> 'int' <LValueToRValue>
                    (DeclRefExpr 0x915b218 <col:9> 'int' lvalue Var 0x915a240 '__digit' 'int'))
                  (IntegerLiteral 0x915b230 <col:19> 'int' 15))
                (CompoundAssignOperator 0x915b2a0 <line:530:7, col:18> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
                  (DeclRefExpr 0x915b270 <col:7> 'int' lvalue Var 0x915a240 '__digit' 'int')
                  (IntegerLiteral 0x915b288 <col:18> 'int' 6))
                <<<NULL>>>)
              (IfStmt 0x915b648 <line:531:5, line:539:7>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x915b358 <line:531:9, col:20> '<dependent type>'
                  (UnresolvedLookupExpr 0x915b310 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
                  (DeclRefExpr 0x915b2dc <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                  (DeclRefExpr 0x915b2f4 <col:20> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a130 '__smax' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type'))
                (BinaryOperator 0x915b3a8 <line:532:7, col:24> '_Bool' lvalue '='
                  (DeclRefExpr 0x915b37c <col:7> '_Bool' lvalue Var 0x9159c90 '__testoverflow' '_Bool')
                  (CXXBoolLiteralExpr 0x915b398 <col:24> '_Bool' true))
                (CompoundStmt 0x915b628 <line:534:7, line:539:7>
                  (CompoundAssignOperator 0x915b3f0 <line:535:9, col:21> '<dependent type>' lvalue '*=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x915b3c0 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x915b3d8 <col:21> 'int' lvalue Var 0x9157eb0 '__base' 'int'))
                  (CXXOperatorCallExpr 0x915b580 <line:536:9, col:46> '<dependent type>'
                    (UnresolvedLookupExpr 0x915b540 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a6630 0x90b4390 0x90b5600)
                    (DeclRefExpr 0x915b410 <col:9> '_Bool' lvalue Var 0x9159c90 '__testoverflow' '_Bool')
                    (CXXOperatorCallExpr 0x915b518 <col:27, col:46> '<dependent type>'
                      (UnresolvedLookupExpr 0x915b4d0 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
                      (DeclRefExpr 0x915b428 <col:27> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                      (CXXOperatorCallExpr 0x915b4a8 <col:38, col:46> '<dependent type>'
                        (UnresolvedLookupExpr 0x915b470 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                        (DeclRefExpr 0x915b440 <col:38> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x9159d10 '__max' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
                        (DeclRefExpr 0x915b458 <col:46> 'int' lvalue Var 0x915a240 '__digit' 'int'))))
                  (CompoundAssignOperator 0x915b5d8 <line:537:9, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                    (DeclRefExpr 0x915b5a4 <col:9> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')
                    (DeclRefExpr 0x915b5bc <col:21> 'int' lvalue Var 0x915a240 '__digit' 'int'))
                  (UnaryOperator 0x915b610 <line:538:9, col:11> 'int' lvalue prefix '++'
                    (DeclRefExpr 0x915b5f8 <col:11> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')))))))
        (IfStmt 0x915b838 <line:542:8, line:545:15>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x915b770 <line:542:12, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x915b718 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (UnaryOperator 0x915b6e8 <col:12, col:14> '<dependent type>' prefix '++'
              (DeclRefExpr 0x915b6cc <col:14> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter'))
            (DeclRefExpr 0x915b6fc <col:23> '_InIter' lvalue ParmVar 0x9157080 '__end' '_InIter'))
          (BinaryOperator 0x915b7e0 <line:543:3, col:10> '<dependent type>' '='
            (DeclRefExpr 0x915b794 <col:3> 'char_type':'_CharT' lvalue Var 0x9157ad0 '__c' 'char_type':'_CharT')
            (UnaryOperator 0x915b7c8 <col:9, col:10> '<dependent type>' prefix '*'
              (DeclRefExpr 0x915b7ac <col:10> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))
          (BinaryOperator 0x915b820 <line:545:3, col:15> '_Bool' lvalue '='
            (DeclRefExpr 0x915b7f8 <col:3> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool')
            (CXXBoolLiteralExpr 0x915b810 <col:15> '_Bool' true))))))
  (IfStmt 0x915bbd8 <line:550:2, line:559:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x915b910 <line:550:6, col:28> '_Bool' <IntegralToBoolean>
      (CXXMemberCallExpr 0x915b8e0 <col:6, col:28> 'size_type':'unsigned int'
        (MemberExpr 0x915b8bc <col:6, col:23> '<bound member function type>' .size 0x9039850
          (ImplicitCastExpr 0x915b900 <col:6> 'const class std::basic_string<char>' lvalue <NoOp>
            (DeclRefExpr 0x915b8a4 <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>')))))
    (CompoundStmt 0x915bbc0 <line:551:4, line:559:4>
      (CXXOperatorCallExpr 0x915b9b8 <line:553:6, col:53> 'class std::basic_string<char>' lvalue
        (ImplicitCastExpr 0x915b9a8 <col:23, <invalid sloc>> 'class std::basic_string<char> &(*)(char)' <FunctionToPointerDecay>
          (DeclRefExpr 0x915b990 <col:23, <invalid sloc>> 'class std::basic_string<char> &(char)' lvalue CXXMethod 0x903b840 'operator+=' 'class std::basic_string<char> &(char)'))
        (DeclRefExpr 0x915b91c <col:6> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>')
        (CXXStaticCastExpr 0x915b978 <col:26, col:53> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x915b968 <col:44> 'char' <IntegralCast>
            (ImplicitCastExpr 0x915b958 <col:44> 'int' <LValueToRValue>
              (DeclRefExpr 0x915b934 <col:44> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int')))))
      (IfStmt 0x915bba0 <line:555:6, line:558:26>
        <<<NULL>>>
        (UnaryOperator 0x915baf8 <line:555:10, line:557:22> '<dependent type>' prefix '!'
          (CallExpr 0x915bad0 <line:555:11, line:557:22> '<dependent type>'
            (DeclRefExpr 0x915b9f4 <line:555:11, col:16> '_Bool (const char *, size_t, const string &) throw()' lvalue Function 0x91519a0 '__verify_grouping' '_Bool (const char *, size_t, const string &) throw()')
            (CXXDependentScopeMemberExpr 0x915ba30 <col:34, col:40> '<dependent type>' lvalue
              (DeclRefExpr 0x915ba14 <col:34> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x915ba80 <line:556:6, col:12> '<dependent type>' lvalue
              (DeclRefExpr 0x915ba64 <col:6> 'const __cache_type *' lvalue Var 0x9157960 '__lc' 'const __cache_type *'))
            (DeclRefExpr 0x915bab4 <line:557:6> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>')))
        (BinaryOperator 0x915bb88 <line:558:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x915bb0c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9157140 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x915bb78 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x915bb58 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x915c3e8 <line:563:2, line:579:35>
    <<<NULL>>>
    (BinaryOperator 0x915bd88 <line:563:6, line:564:9> '_Bool' '||'
      (ParenExpr 0x915bd48 <line:563:6, col:62> '_Bool'
        (BinaryOperator 0x915bd30 <col:7, col:61> '_Bool' '&&'
          (BinaryOperator 0x915bc88 <col:7, col:22> '_Bool' '&&'
            (UnaryOperator 0x915bc30 <col:7, col:8> '_Bool' prefix '!'
              (ImplicitCastExpr 0x915bc20 <col:8> '_Bool' <IntegralToBoolean>
                (ImplicitCastExpr 0x915bc10 <col:8> 'int' <LValueToRValue>
                  (DeclRefExpr 0x915bbf4 <col:8> 'int' lvalue Var 0x9158aa0 '__sep_pos' 'int'))))
            (UnaryOperator 0x915bc70 <col:21, col:22> '_Bool' prefix '!'
              (ImplicitCastExpr 0x915bc60 <col:22> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915bc44 <col:22> '_Bool' lvalue Var 0x9158a30 '__found_zero' '_Bool'))))
          (UnaryOperator 0x915bd18 <col:38, col:61> '_Bool' prefix '!'
            (ImplicitCastExpr 0x915bd08 <col:39, col:61> '_Bool' <IntegralToBoolean>
              (CXXMemberCallExpr 0x915bcd8 <col:39, col:61> 'size_type':'unsigned int'
                (MemberExpr 0x915bcb8 <col:39, col:56> '<bound member function type>' .size 0x9039850
                  (ImplicitCastExpr 0x915bcf8 <col:39> 'const class std::basic_string<char>' lvalue <NoOp>
                    (DeclRefExpr 0x915bca0 <col:39> 'string':'class std::basic_string<char>' lvalue Var 0x9159ad0 '__found_grouping' 'string':'class std::basic_string<char>'))))))))
      (ImplicitCastExpr 0x915bd78 <line:564:9> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x915bd5c <col:9> '_Bool' lvalue Var 0x9159c30 '__testfail' '_Bool')))
    (CompoundStmt 0x915be68 <line:565:4, line:568:4>
      (BinaryOperator 0x915bdd0 <line:566:6, col:12> '<dependent type>' '='
        (DeclRefExpr 0x915bda0 <col:6> '_ValueT' lvalue ParmVar 0x91571b0 '__v' '_ValueT &')
        (IntegerLiteral 0x915bdb8 <col:12> 'int' 0))
      (BinaryOperator 0x915be50 <line:567:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
        (DeclRefExpr 0x915bde8 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9157140 '__err' 'class ios_base::iostate &')
        (ImplicitCastExpr 0x915be40 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x915be1c <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
    (IfStmt 0x915c3c8 <line:569:7, line:579:35>
      <<<NULL>>>
      (ImplicitCastExpr 0x915be98 <line:569:11> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x915be80 <col:11> '_Bool' lvalue Var 0x9159c90 '__testoverflow' '_Bool'))
      (CompoundStmt 0x915c2b0 <line:570:4, line:577:4>
        (IfStmt 0x915c210 <line:571:6, line:575:52>
          <<<NULL>>>
          (BinaryOperator 0x915bfb8 <line:571:10, line:572:44> '<dependent type>' '&&'
            (DeclRefExpr 0x915bea4 <line:571:10> '_Bool' lvalue Var 0x91581c0 '__negative' '_Bool')
            (CXXDependentScopeMemberExpr 0x915bf80 <line:572:6, col:44> '<dependent type>' lvalue))
          (BinaryOperator 0x915c0d8 <line:573:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x915bfd0 <col:8> '_ValueT' lvalue ParmVar 0x91571b0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x915c0a0 <col:14, col:52> '<dependent type>' lvalue))
          (BinaryOperator 0x915c1f8 <line:575:8, col:52> '<dependent type>' '='
            (DeclRefExpr 0x915c0f0 <col:8> '_ValueT' lvalue ParmVar 0x91571b0 '__v' '_ValueT &')
            (CXXDependentScopeMemberExpr 0x915c1c0 <col:14, col:52> '<dependent type>' lvalue)))
        (BinaryOperator 0x915c298 <line:576:6, col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
          (DeclRefExpr 0x915c22c <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9157140 '__err' 'class ios_base::iostate &')
          (ImplicitCastExpr 0x915c288 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x915c264 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))
      (BinaryOperator 0x915c3b0 <line:579:4, col:35> '<dependent type>' '='
        (DeclRefExpr 0x915c2c8 <col:4> '_ValueT' lvalue ParmVar 0x91571b0 '__v' '_ValueT &')
        (ConditionalOperator 0x915c390 <col:10, col:35> '<dependent type>'
          (ImplicitCastExpr 0x915c380 <col:10> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x915c2e0 <col:10> '_Bool' lvalue Var 0x91581c0 '__negative' '_Bool'))
          (CXXOperatorCallExpr 0x915c348 <col:23, col:24> '<dependent type>'
            (UnresolvedLookupExpr 0x915c310 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x915c2f8 <col:24> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'))
          (DeclRefExpr 0x915c368 <col:35> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type' lvalue Var 0x915a1d0 '__result' '__unsigned_type':'typename __add_unsigned<_ValueT>::__type')))))
  (IfStmt 0x915c500 <line:581:2, line:582:23>
    <<<NULL>>>
    (ImplicitCastExpr 0x915c420 <line:581:6> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x915c404 <col:6> '_Bool' lvalue Var 0x91580b0 '__testeof' '_Bool'))
    (CXXOperatorCallExpr 0x915c4d8 <line:582:4, col:23> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x915c4c8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x915c498 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x915c42c <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9157140 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x915c488 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x915c464 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x915c538 <line:583:2, col:9>
    (DeclRefExpr 0x915c51c <col:9> '_InIter' lvalue ParmVar 0x9157040 '__beg' '_InIter')))

;
    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const (CompoundStmt 0x915ef38 </usr/include/c++/4.6/bits/locale_facets.tcc:593:5, line:682:5>
  (IfStmt 0x915eef0 <line:594:7, line:680:2>
    <<<NULL>>>
    (UnaryOperator 0x915cc98 <line:594:11, col:47> '_Bool' prefix '!'
      (ImplicitCastExpr 0x915cc88 <col:12, col:47> '_Bool' <IntegralToBoolean>
        (ParenExpr 0x915cc70 <col:12, col:47> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x915cc48 <col:13, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x915cc38 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x915cc20 <col:26, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (CXXMemberCallExpr 0x915cba0 <col:13, col:24> 'fmtflags':'enum std::_Ios_Fmtflags'
              (MemberExpr 0x915cb7c <col:13, col:18> '<bound member function type>' .flags 0x90ada50
                (ImplicitCastExpr 0x915cbc0 <col:13> 'const class std::ios_base' lvalue <NoOp>
                  (DeclRefExpr 0x915cb24 <col:13> 'class std::ios_base' lvalue ParmVar 0x915c910 '__io' 'class std::ios_base &'))))
            (ImplicitCastExpr 0x915cc10 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x915cbec <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6520 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
    (CompoundStmt 0x915d270 <line:595:9, line:612:9>
      (DeclStmt 0x915cd38 <line:599:4, col:17>
        0x915ccc0 "long __l =
          (ImplicitCastExpr 0x915cd28 <col:15, col:16> 'long' <IntegralCast>
            (UnaryOperator 0x915cd10 <col:15, col:16> 'int' prefix '-'
              (IntegerLiteral 0x915ccf8 <col:16> 'int' 1)))")
      (BinaryOperator 0x915ce58 <line:600:11, col:64> '<dependent type>' '='
        (DeclRefExpr 0x915cd48 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter')
        (CallExpr 0x915ce28 <col:19, col:64> '<dependent type>'
          (UnresolvedMemberExpr 0x915cd70 <col:19> '<bound member function type>' lvalue)
          (DeclRefExpr 0x915cdac <col:34> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter')
          (DeclRefExpr 0x915cdc4 <col:41> 'iter_type':'_InIter' lvalue ParmVar 0x915c8c0 '__end' 'iter_type':'_InIter')
          (DeclRefExpr 0x915cddc <col:48> 'class std::ios_base' lvalue ParmVar 0x915c910 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x915cdf4 <col:54> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
          (DeclRefExpr 0x915ce0c <col:61> 'long' lvalue Var 0x915ccc0 '__l' 'long')))
      (IfStmt 0x915d250 <line:601:4, line:611:6>
        <<<NULL>>>
        (BinaryOperator 0x915cf40 <line:601:8, col:27> '_Bool' '||'
          (BinaryOperator 0x915cec0 <col:8, col:15> '_Bool' '=='
            (ImplicitCastExpr 0x915cea0 <col:8> 'long' <LValueToRValue>
              (DeclRefExpr 0x915ce70 <col:8> 'long' lvalue Var 0x915ccc0 '__l' 'long'))
            (ImplicitCastExpr 0x915ceb0 <col:15> 'long' <IntegralCast>
              (IntegerLiteral 0x915ce88 <col:15> 'int' 0)))
          (BinaryOperator 0x915cf28 <col:20, col:27> '_Bool' '=='
            (ImplicitCastExpr 0x915cf08 <col:20> 'long' <LValueToRValue>
              (DeclRefExpr 0x915ced8 <col:20> 'long' lvalue Var 0x915ccc0 '__l' 'long'))
            (ImplicitCastExpr 0x915cf18 <col:27> 'long' <IntegralCast>
              (IntegerLiteral 0x915cef0 <col:27> 'int' 1))))
        (BinaryOperator 0x915cfc8 <line:602:6, col:20> '_Bool' lvalue '='
          (DeclRefExpr 0x915cf58 <col:6> '_Bool' lvalue ParmVar 0x915c9d0 '__v' '_Bool &')
          (CXXFunctionalCastExpr 0x915cfb0 <col:12, col:20> '_Bool' functional cast to _Bool <NoOp>
            (ImplicitCastExpr 0x915cfa0 <col:17> '_Bool' <IntegralToBoolean>
              (ImplicitCastExpr 0x915cf90 <col:17> 'long' <LValueToRValue>
                (DeclRefExpr 0x915cf78 <col:17> 'long' lvalue Var 0x915ccc0 '__l' 'long')))))
        (CompoundStmt 0x915d230 <line:604:6, line:611:6>
          (BinaryOperator 0x915d008 <line:607:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x915cfe0 <col:8> '_Bool' lvalue ParmVar 0x915c9d0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x915cff8 <col:14> '_Bool' true))
          (BinaryOperator 0x915d088 <line:608:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
            (DeclRefExpr 0x915d020 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
            (ImplicitCastExpr 0x915d078 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
              (DeclRefExpr 0x915d054 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
          (IfStmt 0x915d210 <line:609:8, line:610:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x915d130 <line:609:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x915d0d0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x915d0a0 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x915d0b8 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x915c8c0 '__end' 'iter_type':'_InIter'))
            (CXXOperatorCallExpr 0x915d1e8 <line:610:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x915d1d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x915d1c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x915d154 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x915d1b0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x915d18c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))))
    (CompoundStmt 0x915eeb0 <line:614:9, line:680:2>
      (DeclStmt 0x915d370 <line:616:4, col:50>
        0x915d340 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x915d478 <line:617:4, col:34>
        0x915d440 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x915d540 <line:618:4, col:42>
        0x915d4a0 "const std::locale &__loc =
          (CXXMemberCallExpr 0x915d510 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x915d4ec <col:26, col:31> '<bound member function type>' ._M_getloc 0x90ae450
              (ImplicitCastExpr 0x915d530 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x915d4d4 <col:26> 'class std::ios_base' lvalue ParmVar 0x915c910 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x915d608 <line:619:4, col:42>
        0x915d580 "const __cache_type *__lc =
          (CallExpr 0x915d5e8 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x915d5b4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x915d440 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x915d5cc <col:36> 'const class std::locale' lvalue Var 0x915d4a0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x915d668 <line:621:4, col:23>
        0x915d620 "bool __testf =
          (CXXBoolLiteralExpr 0x915d658 <col:19> '_Bool' true)")
      (DeclStmt 0x915d6c8 <line:622:4, col:23>
        0x915d680 "bool __testt =
          (CXXBoolLiteralExpr 0x915d6b8 <col:19> '_Bool' true)")
      (DeclStmt 0x915d808 <line:623:4, col:47>
        0x915d6e0 "bool __donef =
          (CXXOperatorCallExpr 0x915d7e0 <col:19, col:46> '<dependent type>'
            (UnresolvedLookupExpr 0x915d780 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CXXDependentScopeMemberExpr 0x915d730 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x915d714 <col:19> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x915d768 <col:46> 'int' 0))")
      (DeclStmt 0x915d948 <line:624:4, col:46>
        0x915d820 "bool __donet =
          (CXXOperatorCallExpr 0x915d920 <col:19, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x915d8c0 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CXXDependentScopeMemberExpr 0x915d870 <col:19, col:25> '<dependent type>' lvalue
              (DeclRefExpr 0x915d854 <col:19> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))
            (IntegerLiteral 0x915d8a8 <col:45> 'int' 0))")
      (DeclStmt 0x915d9a8 <line:625:4, col:26>
        0x915d960 "bool __testeof =
          (CXXBoolLiteralExpr 0x915d998 <col:21> '_Bool' false)")
      (DeclStmt 0x915da20 <line:626:4, col:18>
        0x915d9c0 "size_t __n =
          (ImplicitCastExpr 0x915da10 <col:17> 'size_t':'unsigned int' <IntegralCast>
            (IntegerLiteral 0x915d9f8 <col:17> 'int' 0))")
      (WhileStmt 0x915e558 <line:627:4, line:657:6>
        <<<NULL>>>
        (BinaryOperator 0x915dab0 <line:627:11, col:24> '_Bool' '||'
          (UnaryOperator 0x915da58 <col:11, col:12> '_Bool' prefix '!'
            (ImplicitCastExpr 0x915da48 <col:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x915da30 <col:12> '_Bool' lvalue Var 0x915d6e0 '__donef' '_Bool')))
          (UnaryOperator 0x915da98 <col:23, col:24> '_Bool' prefix '!'
            (ImplicitCastExpr 0x915da88 <col:24> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x915da6c <col:24> '_Bool' lvalue Var 0x915d820 '__donet' '_Bool'))))
        (CompoundStmt 0x915e518 <line:628:6, line:657:6>
          (IfStmt 0x915dbe0 <line:629:8, line:633:3>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x915db58 <line:629:12, col:21> '<dependent type>'
              (UnresolvedLookupExpr 0x915daf8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x915dac8 <col:12> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter')
              (DeclRefExpr 0x915dae0 <col:21> 'iter_type':'_InIter' lvalue ParmVar 0x915c8c0 '__end' 'iter_type':'_InIter'))
            (CompoundStmt 0x915dbc8 <line:630:3, line:633:3>
              (BinaryOperator 0x915dba8 <line:631:5, col:17> '_Bool' lvalue '='
                (DeclRefExpr 0x915db7c <col:5> '_Bool' lvalue Var 0x915d960 '__testeof' '_Bool')
                (CXXBoolLiteralExpr 0x915db98 <col:17> '_Bool' true))
              (BreakStmt 0x915dbc0 <line:632:5>))
            <<<NULL>>>)
          (DeclStmt 0x915dc78 <line:635:8, col:36>
            0x915dc10 "const char_type __c =
              (UnaryOperator 0x915dc60 <col:30, col:31> '<dependent type>' prefix '*'
                (DeclRefExpr 0x915dc44 <col:31> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter'))")
          (IfStmt 0x915de18 <line:637:8, line:638:42>
            <<<NULL>>>
            (UnaryOperator 0x915dcb0 <line:637:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x915dca0 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915dc88 <col:13> '_Bool' lvalue Var 0x915d6e0 '__donef' '_Bool')))
            (BinaryOperator 0x915de00 <line:638:3, col:42> '<dependent type>' '='
              (DeclRefExpr 0x915dcc4 <col:3> '_Bool' lvalue Var 0x915d620 '__testf' '_Bool')
              (CXXOperatorCallExpr 0x915ddd8 <col:13, col:42> '<dependent type>'
                (UnresolvedLookupExpr 0x915dd78 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x915dcdc <col:13> 'const char_type':'const _CharT' lvalue Var 0x915dc10 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x915dd60 <col:20, col:42> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x915dd10 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x915dcf4 <col:20> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x915dd44 <col:39> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x915dec0 <line:640:8, line:641:3>
            <<<NULL>>>
            (BinaryOperator 0x915dea0 <line:640:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x915de60 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915de50 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915de34 <col:13> '_Bool' lvalue Var 0x915d620 '__testf' '_Bool')))
              (ImplicitCastExpr 0x915de90 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915de74 <col:24> '_Bool' lvalue Var 0x915d820 '__donet' '_Bool')))
            (BreakStmt 0x915deb8 <line:641:3>)
            <<<NULL>>>)
          (IfStmt 0x915e070 <line:643:8, line:644:41>
            <<<NULL>>>
            (UnaryOperator 0x915df08 <line:643:12, col:13> '_Bool' prefix '!'
              (ImplicitCastExpr 0x915def8 <col:13> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915dedc <col:13> '_Bool' lvalue Var 0x915d820 '__donet' '_Bool')))
            (BinaryOperator 0x915e058 <line:644:3, col:41> '<dependent type>' '='
              (DeclRefExpr 0x915df1c <col:3> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x915e030 <col:13, col:41> '<dependent type>'
                (UnresolvedLookupExpr 0x915dfd0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x915df34 <col:13> 'const char_type':'const _CharT' lvalue Var 0x915dc10 '__c' 'const char_type':'const _CharT')
                (ArraySubscriptExpr 0x915dfb8 <col:20, col:41> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x915df68 <col:20, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x915df4c <col:20> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))
                  (DeclRefExpr 0x915df9c <col:38> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int'))))
            <<<NULL>>>)
          (IfStmt 0x915e118 <line:646:8, line:647:3>
            <<<NULL>>>
            (BinaryOperator 0x915e0f8 <line:646:12, col:24> '_Bool' '&&'
              (UnaryOperator 0x915e0b8 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915e0a8 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915e08c <col:13> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')))
              (ImplicitCastExpr 0x915e0e8 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915e0cc <col:24> '_Bool' lvalue Var 0x915d6e0 '__donef' '_Bool')))
            (BreakStmt 0x915e110 <line:647:3>)
            <<<NULL>>>)
          (IfStmt 0x915e1d8 <line:649:8, line:650:3>
            <<<NULL>>>
            (BinaryOperator 0x915e1b8 <line:649:12, col:25> '_Bool' '&&'
              (UnaryOperator 0x915e160 <col:12, col:13> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915e150 <col:13> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915e134 <col:13> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')))
              (UnaryOperator 0x915e1a0 <col:24, col:25> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915e190 <col:25> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915e174 <col:25> '_Bool' lvalue Var 0x915d620 '__testf' '_Bool'))))
            (BreakStmt 0x915e1d0 <line:650:3>)
            <<<NULL>>>)
          (UnaryOperator 0x915e210 <line:652:8, col:10> 'size_t':'unsigned int' lvalue prefix '++'
            (DeclRefExpr 0x915e1f4 <col:10> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int'))
          (UnaryOperator 0x915e240 <line:653:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x915e224 <col:10> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter'))
          (BinaryOperator 0x915e3a0 <line:655:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x915e254 <col:8> '_Bool' lvalue Var 0x915d6e0 '__donef' '_Bool')
            (BinaryOperator 0x915e388 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x915e298 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915e288 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915e26c <col:19> '_Bool' lvalue Var 0x915d620 '__testf' '_Bool')))
              (CXXOperatorCallExpr 0x915e360 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x915e318 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
                (DeclRefExpr 0x915e2ac <col:30> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x915e2e0 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x915e2c4 <col:37> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *')))))
          (BinaryOperator 0x915e500 <line:656:8, col:43> '<dependent type>' '='
            (DeclRefExpr 0x915e3b8 <col:8> '_Bool' lvalue Var 0x915d820 '__donet' '_Bool')
            (BinaryOperator 0x915e4e8 <col:18, col:43> '<dependent type>' '||'
              (UnaryOperator 0x915e3f8 <col:18, col:19> '_Bool' prefix '!'
                (ImplicitCastExpr 0x915e3e8 <col:19> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x915e3d0 <col:19> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')))
              (CXXOperatorCallExpr 0x915e4c0 <col:30, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x915e478 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
                (DeclRefExpr 0x915e40c <col:30> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x915e440 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x915e424 <col:37> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *')))))))
      (IfStmt 0x915ee90 <line:658:4, line:679:6>
        <<<NULL>>>
        (BinaryOperator 0x915e6a8 <line:658:8, col:53> '<dependent type>' '&&'
          (BinaryOperator 0x915e678 <col:8, col:32> '<dependent type>' '&&'
            (DeclRefExpr 0x915e56c <col:8> '_Bool' lvalue Var 0x915d620 '__testf' '_Bool')
            (CXXOperatorCallExpr 0x915e650 <col:19, col:32> '<dependent type>'
              (UnresolvedLookupExpr 0x915e5f0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x915e584 <col:19> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int')
              (CXXDependentScopeMemberExpr 0x915e5b8 <col:26, col:32> '<dependent type>' lvalue
                (DeclRefExpr 0x915e59c <col:26> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))))
          (DeclRefExpr 0x915e690 <col:53> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int'))
        (CompoundStmt 0x915e9c8 <line:659:6, line:665:6>
          (BinaryOperator 0x915e6e8 <line:660:8, col:14> '_Bool' lvalue '='
            (DeclRefExpr 0x915e6c0 <col:8> '_Bool' lvalue ParmVar 0x915c9d0 '__v' '_Bool &')
            (CXXBoolLiteralExpr 0x915e6d8 <col:14> '_Bool' false))
          (IfStmt 0x915e9a8 <line:661:8, line:664:52>
            <<<NULL>>>
            (BinaryOperator 0x915e808 <line:661:12, col:36> '<dependent type>' '&&'
              (DeclRefExpr 0x915e700 <col:12> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x915e7e0 <col:23, col:36> '<dependent type>'
                (UnresolvedLookupExpr 0x915e780 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x915e718 <col:23> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x915e748 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x915e730 <col:30> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))))
            (BinaryOperator 0x915e888 <line:662:3, col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x915e820 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x915e878 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x915e854 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x915e990 <line:664:3, col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x915e8a0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x915e980 <col:11, col:52> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x915e960 <col:11, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x915e950 <col:11> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x915e8b8 <col:11> '_Bool' lvalue Var 0x915d960 '__testeof' '_Bool'))
                  (DeclRefExpr 0x915e8ec <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x915e92c <col:42, col:52> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
        (IfStmt 0x915ee70 <line:666:9, line:679:6>
          <<<NULL>>>
          (BinaryOperator 0x915eb18 <line:666:13, col:57> '<dependent type>' '&&'
            (BinaryOperator 0x915eae8 <col:13, col:37> '<dependent type>' '&&'
              (DeclRefExpr 0x915e9e0 <col:13> '_Bool' lvalue Var 0x915d680 '__testt' '_Bool')
              (CXXOperatorCallExpr 0x915eac0 <col:24, col:37> '<dependent type>'
                (UnresolvedLookupExpr 0x915ea60 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (DeclRefExpr 0x915e9f8 <col:24> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int')
                (CXXDependentScopeMemberExpr 0x915ea28 <col:31, col:37> '<dependent type>' lvalue
                  (DeclRefExpr 0x915ea10 <col:31> 'const __cache_type *' lvalue Var 0x915d580 '__lc' 'const __cache_type *'))))
            (DeclRefExpr 0x915eb00 <col:57> 'size_t':'unsigned int' lvalue Var 0x915d9c0 '__n' 'size_t':'unsigned int'))
          (CompoundStmt 0x915ec78 <line:667:6, line:670:6>
            (BinaryOperator 0x915eb58 <line:668:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x915eb30 <col:8> '_Bool' lvalue ParmVar 0x915c9d0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x915eb48 <col:14> '_Bool' true))
            (BinaryOperator 0x915ec60 <line:669:8, col:57> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x915eb70 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x915ec50 <col:16, col:57> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (ConditionalOperator 0x915ec30 <col:16, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x915ec20 <col:16> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x915eb88 <col:16> '_Bool' lvalue Var 0x915d960 '__testeof' '_Bool'))
                  (DeclRefExpr 0x915ebbc <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')
                  (DeclRefExpr 0x915ebfc <col:47, col:57> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
          (CompoundStmt 0x915ee50 <line:672:6, line:679:6>
            (BinaryOperator 0x915ecb8 <line:675:8, col:14> '_Bool' lvalue '='
              (DeclRefExpr 0x915ec90 <col:8> '_Bool' lvalue ParmVar 0x915c9d0 '__v' '_Bool &')
              (CXXBoolLiteralExpr 0x915eca8 <col:14> '_Bool' false))
            (BinaryOperator 0x915ed38 <line:676:8, col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue '='
              (DeclRefExpr 0x915ecd0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
              (ImplicitCastExpr 0x915ed28 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x915ed04 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x915ee30 <line:677:8, line:678:22>
              <<<NULL>>>
              (ImplicitCastExpr 0x915ed68 <line:677:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x915ed50 <col:12> '_Bool' lvalue Var 0x915d960 '__testeof' '_Bool'))
              (CXXOperatorCallExpr 0x915ee08 <line:678:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x915edf8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x915ede0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x915ed74 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915c980 '__err' 'class ios_base::iostate &')
                (ImplicitCastExpr 0x915edd0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x915edac <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>))))))
  (ReturnStmt 0x915ef28 <line:681:7, col:14>
    (DeclRefExpr 0x915ef0c <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x915c880 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const (CompoundStmt 0x915fa70 </usr/include/c++/4.6/bits/locale_facets.tcc:689:5, line:697:5>
  (DeclStmt 0x915f4f8 <line:690:7, col:20>
    0x915f4a0 "string __xtrc =
      (CXXConstructExpr 0x915f4d8 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x915f558 <line:691:7, col:24> 'void'
    (MemberExpr 0x915f520 <col:7, col:14> '<bound member function type>' .reserve 0x903a390
      (DeclRefExpr 0x915f508 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x915f4a0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x915f578 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x915f540 <col:22> 'int' 32)))
  (BinaryOperator 0x915f678 <line:692:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x915f584 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x915f1f0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x915f648 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x915f5b0 <col:15> '<bound member function type>' ->_M_extract_float 0x9151ef0
        (CXXThisExpr 0x915f5a0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x915f5d0 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x915f1f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x915f5e8 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x915f230 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x915f600 <col:46> 'class std::ios_base' lvalue ParmVar 0x915f280 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x915f618 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915f2f0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x915f630 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x915f4a0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x915f878 <line:693:7, col:72> 'void'
    (ImplicitCastExpr 0x915f868 <col:7, col:12> 'void (*)(const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x915f800 <col:7, col:12> 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9114cd0 '__convert_to_v' 'void (const char *, float &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9114aa0 '__convert_to_v')))
    (CXXMemberCallExpr 0x915f728 <col:27, col:40> 'const char *'
      (MemberExpr 0x915f704 <col:27, col:34> '<bound member function type>' .c_str 0x904a1f0
        (ImplicitCastExpr 0x915f748 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x915f6ec <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x915f4a0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x915f754 <col:43> 'float' lvalue ParmVar 0x915f340 '__v' 'float &')
    (DeclRefExpr 0x915f76c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915f2f0 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x915f8a8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x915f7b0 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x915f7a0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x915f784 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x915fa28 <line:694:7, line:695:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x915f948 <line:694:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x915f8e8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
      (DeclRefExpr 0x915f8b4 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x915f1f0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x915f8cc <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x915f230 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x915fa00 <line:695:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x915f9f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x915f9d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x915f96c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915f2f0 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x915f9c8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x915f9a4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x915fa60 <line:696:7, col:14>
    (DeclRefExpr 0x915fa44 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x915f1f0 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const (CompoundStmt 0x91605c0 </usr/include/c++/4.6/bits/locale_facets.tcc:704:5, line:712:5>
  (DeclStmt 0x9160048 <line:705:7, col:20>
    0x915fff0 "string __xtrc =
      (CXXConstructExpr 0x9160028 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x91600a8 <line:706:7, col:24> 'void'
    (MemberExpr 0x9160070 <col:7, col:14> '<bound member function type>' .reserve 0x903a390
      (DeclRefExpr 0x9160058 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x915fff0 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x91600c8 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9160090 <col:22> 'int' 32)))
  (BinaryOperator 0x91601c8 <line:707:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x91600d4 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x915fd40 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9160198 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9160100 <col:15> '<bound member function type>' ->_M_extract_float 0x9151ef0
        (CXXThisExpr 0x91600f0 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9160120 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x915fd40 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9160138 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x915fd80 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9160150 <col:46> 'class std::ios_base' lvalue ParmVar 0x915fdd0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9160168 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915fe40 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9160180 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x915fff0 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x91603c8 <line:708:7, col:72> 'void'
    (ImplicitCastExpr 0x91603b8 <col:7, col:12> 'void (*)(const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9160350 <col:7, col:12> 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x9115250 '__convert_to_v' 'void (const char *, double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9114aa0 '__convert_to_v')))
    (CXXMemberCallExpr 0x9160278 <col:27, col:40> 'const char *'
      (MemberExpr 0x9160254 <col:27, col:34> '<bound member function type>' .c_str 0x904a1f0
        (ImplicitCastExpr 0x9160298 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x916023c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x915fff0 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x91602a4 <col:43> 'double' lvalue ParmVar 0x915fe90 '__v' 'double &')
    (DeclRefExpr 0x91602bc <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915fe40 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x91603f8 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9160300 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x91602f0 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91602d4 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x9160578 <line:709:7, line:710:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9160498 <line:709:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9160438 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
      (DeclRefExpr 0x9160404 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x915fd40 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x916041c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x915fd80 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x9160550 <line:710:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9160540 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9160528 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x91604bc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x915fe40 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9160518 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91604f4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x91605b0 <line:711:7, col:14>
    (DeclRefExpr 0x9160594 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x915fd40 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const (CompoundStmt 0x9161110 </usr/include/c++/4.6/bits/locale_facets.tcc:736:5, line:744:5>
  (DeclStmt 0x9160b98 <line:737:7, col:20>
    0x9160b40 "string __xtrc =
      (CXXConstructExpr 0x9160b78 <col:14> 'string':'class std::basic_string<char>''void (void)')")
  (CXXMemberCallExpr 0x9160bf8 <line:738:7, col:24> 'void'
    (MemberExpr 0x9160bc0 <col:7, col:14> '<bound member function type>' .reserve 0x903a390
      (DeclRefExpr 0x9160ba8 <col:7> 'string':'class std::basic_string<char>' lvalue Var 0x9160b40 '__xtrc' 'string':'class std::basic_string<char>'))
    (ImplicitCastExpr 0x9160c18 <col:22> 'size_type':'unsigned int' <IntegralCast>
      (IntegerLiteral 0x9160be0 <col:22> 'int' 32)))
  (BinaryOperator 0x9160d18 <line:739:7, col:65> '<dependent type>' '='
    (DeclRefExpr 0x9160c24 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x9160890 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9160ce8 <col:15, col:65> '<dependent type>'
      (MemberExpr 0x9160c50 <col:15> '<bound member function type>' ->_M_extract_float 0x9151ef0
        (CXXThisExpr 0x9160c40 <col:15> 'const num_get<_CharT, _InIter> *' this))
      (DeclRefExpr 0x9160c70 <col:32> 'iter_type':'_InIter' lvalue ParmVar 0x9160890 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9160c88 <col:39> 'iter_type':'_InIter' lvalue ParmVar 0x91608d0 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9160ca0 <col:46> 'class std::ios_base' lvalue ParmVar 0x9160920 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9160cb8 <col:52> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9160990 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9160cd0 <col:59> 'string':'class std::basic_string<char>' lvalue Var 0x9160b40 '__xtrc' 'string':'class std::basic_string<char>')))
  (CallExpr 0x9160f18 <line:740:7, col:72> 'void'
    (ImplicitCastExpr 0x9160f08 <col:7, col:12> 'void (*)(const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x9160ea0 <col:7, col:12> 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' lvalue Function 0x91157b0 '__convert_to_v' 'void (const char *, long double &, class ios_base::iostate &, const __c_locale &) throw()' (FunctionTemplate 0x9114aa0 '__convert_to_v')))
    (CXXMemberCallExpr 0x9160dc8 <col:27, col:40> 'const char *'
      (MemberExpr 0x9160da4 <col:27, col:34> '<bound member function type>' .c_str 0x904a1f0
        (ImplicitCastExpr 0x9160de8 <col:27> 'const class std::basic_string<char>' lvalue <NoOp>
          (DeclRefExpr 0x9160d8c <col:27> 'string':'class std::basic_string<char>' lvalue Var 0x9160b40 '__xtrc' 'string':'class std::basic_string<char>'))))
    (DeclRefExpr 0x9160df4 <col:43> 'long double' lvalue ParmVar 0x91609e0 '__v' 'long double &')
    (DeclRefExpr 0x9160e0c <col:48> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9160990 '__err' 'class ios_base::iostate &')
    (MaterializeTemporaryExpr 0x9160f48 <col:55, col:71> 'const __c_locale':'struct __locale_struct *const' lvalue
      (CallExpr 0x9160e50 <col:55, col:71> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x9160e40 <col:55> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9160e24 <col:55> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))))
  (IfStmt 0x91610c8 <line:741:7, line:742:21>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9160fe8 <line:741:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9160f88 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
      (DeclRefExpr 0x9160f54 <col:11> 'iter_type':'_InIter' lvalue ParmVar 0x9160890 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9160f6c <col:20> 'iter_type':'_InIter' lvalue ParmVar 0x91608d0 '__end' 'iter_type':'_InIter'))
    (CXXOperatorCallExpr 0x91610a0 <line:742:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9161090 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9161078 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x916100c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x9160990 '__err' 'class ios_base::iostate &')
      (ImplicitCastExpr 0x9161068 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9161044 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x9161100 <line:743:7, col:14>
    (DeclRefExpr 0x91610e4 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x9160890 '__beg' 'iter_type':'_InIter')))


    _InIter do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const (CompoundStmt 0x9162158 </usr/include/c++/4.6/bits/locale_facets.tcc:751:5, line:769:5>
  (DeclStmt 0x91616f0 <line:753:7, col:49>
    0x91616c0 "typedef class ios_base::fmtflags fmtflags")
  (DeclStmt 0x9161800 <line:754:7, col:42>
    0x9161720 "const fmtflags __fmt =
      (CXXMemberCallExpr 0x91617d0 <col:30, col:41> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x91617ac <col:30, col:35> '<bound member function type>' .flags 0x90ada50
          (ImplicitCastExpr 0x91617f0 <col:30> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9161754 <col:30> 'class std::ios_base' lvalue ParmVar 0x9161470 '__io' 'class std::ios_base &'))))")
  (CXXMemberCallExpr 0x9161a50 <line:755:7, col:64> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9161a2c <col:7, col:12> '<bound member function type>' .flags 0x90adb40
      (DeclRefExpr 0x9161810 <col:7> 'class std::ios_base' lvalue ParmVar 0x9161470 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x9161a08 <col:18, col:61> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x91619f8 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x91619e0 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5fb0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9161978 <col:18, col:47> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9161950 <col:19, col:38> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9161940 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9161928 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9161918 <col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9161868 <col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9161720 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (CXXOperatorCallExpr 0x91618f8 <col:27, col:38> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x91618e8 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x91618d0 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x90a63f0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x91618c0 <col:28, col:38> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x916189c <col:28, col:38> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (ImplicitCastExpr 0x91619d0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
        (DeclRefExpr 0x91619ac <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
  (DeclStmt 0x9161e50 <line:757:7, line:759:57>
    0x9161e20 "typedef __gnu_cxx::__conditional_type<(sizeof(void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (DeclStmt 0x9161eb8 <line:761:7, col:24>
    0x9161e80 "_UIntPtrType __ul")
  (BinaryOperator 0x9161fd8 <line:762:7, col:61> '<dependent type>' '='
    (DeclRefExpr 0x9161ec8 <col:7> 'iter_type':'_InIter' lvalue ParmVar 0x91613e0 '__beg' 'iter_type':'_InIter')
    (CallExpr 0x9161fa8 <col:15, col:61> '<dependent type>'
      (UnresolvedMemberExpr 0x9161ef0 <col:15> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9161f2c <col:30> 'iter_type':'_InIter' lvalue ParmVar 0x91613e0 '__beg' 'iter_type':'_InIter')
      (DeclRefExpr 0x9161f44 <col:37> 'iter_type':'_InIter' lvalue ParmVar 0x9161420 '__end' 'iter_type':'_InIter')
      (DeclRefExpr 0x9161f5c <col:44> 'class std::ios_base' lvalue ParmVar 0x9161470 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9161f74 <col:50> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x91614e0 '__err' 'class ios_base::iostate &')
      (DeclRefExpr 0x9161f8c <col:57> '_UIntPtrType':'unsigned long' lvalue Var 0x9161e80 '__ul' '_UIntPtrType':'unsigned long')))
  (CXXMemberCallExpr 0x9162080 <line:765:7, col:23> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x9162060 <col:7, col:12> '<bound member function type>' .flags 0x90adb40
      (DeclRefExpr 0x9161ff0 <col:7> 'class std::ios_base' lvalue ParmVar 0x9161470 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x91620a0 <col:18> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9162048 <col:18> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9161720 '__fmt' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
  (BinaryOperator 0x9162118 <line:767:7, col:41> 'void *' lvalue '='
    (DeclRefExpr 0x91620ac <col:7> 'void *' lvalue ParmVar 0x9161530 '__v' 'void *&')
    (CXXReinterpretCastExpr 0x9162100 <col:13, col:41> 'void *' reinterpret_cast<void *> <IntegralToPointer>
      (ImplicitCastExpr 0x91620f0 <col:37> '_UIntPtrType':'unsigned long' <LValueToRValue>
        (DeclRefExpr 0x91620c4 <col:37> '_UIntPtrType':'unsigned long' lvalue Var 0x9161e80 '__ul' '_UIntPtrType':'unsigned long'))))
  (ReturnStmt 0x9162148 <line:768:7, col:14>
    (DeclRefExpr 0x9162130 <col:14> 'iter_type':'_InIter' lvalue ParmVar 0x91613e0 '__beg' 'iter_type':'_InIter')))


    void _M_pad(_CharT __fill, streamsize __w, std::ios_base &__io, _CharT *__new, const _CharT *__cs, int &__len) const (CompoundStmt 0x9162ab8 </usr/include/c++/4.6/bits/locale_facets.tcc:778:5, line:784:5>
  (CallExpr 0x9162a00 <line:781:7, line:782:25> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9162938 <line:781:7, col:44> '<dependent type>' lvalue)
    (DeclRefExpr 0x916296c <col:51> 'class std::ios_base' lvalue ParmVar 0x91624c0 '__io' 'class std::ios_base &')
    (DeclRefExpr 0x9162984 <col:57> '_CharT' lvalue ParmVar 0x9162430 '__fill' '_CharT')
    (DeclRefExpr 0x916299c <col:65> '_CharT *' lvalue ParmVar 0x9162530 '__new' '_CharT *')
    (DeclRefExpr 0x91629b4 <line:782:9> 'const _CharT *' lvalue ParmVar 0x91625a0 '__cs' 'const _CharT *')
    (DeclRefExpr 0x91629cc <col:15> 'streamsize':'int' lvalue ParmVar 0x9162470 '__w' 'streamsize':'int')
    (DeclRefExpr 0x91629e4 <col:20> 'int' lvalue ParmVar 0x91625f0 '__len' 'int &'))
  (BinaryOperator 0x9162aa0 <line:783:7, col:35> 'int' lvalue '='
    (DeclRefExpr 0x9162a34 <col:7> 'int' lvalue ParmVar 0x91625f0 '__len' 'int &')
    (CXXStaticCastExpr 0x9162a88 <col:15, col:35> 'int' static_cast<int> <NoOp>
      (ImplicitCastExpr 0x9162a78 <col:32> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9162a4c <col:32> 'streamsize':'int' lvalue ParmVar 0x9162470 '__w' 'streamsize':'int')))))


    template <typename _CharT, typename _ValueT> int __int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags __flags, bool __dec) (CompoundStmt 0x91659e0 </usr/include/c++/4.6/bits/locale_facets.tcc:792:5, line:828:5>
  (DeclStmt 0x9162ee0 <line:793:7, col:31>
    0x9162e90 "_CharT *__buf =
      (DeclRefExpr 0x9162ec4 <col:23> '_CharT *' lvalue ParmVar 0x9162bb0 '__bufend' '_CharT *')")
  (IfStmt 0x9165920 <line:794:7, line:826:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9162f98 <line:794:11, col:39> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9162f40 <col:11, col:39> 'long'
        (ImplicitCastExpr 0x9162f30 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9162ef0 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9162f78 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9162f68 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9162f08 <col:28> '_Bool' lvalue ParmVar 0x9162d10 '__dec' '_Bool')))
        (ImplicitCastExpr 0x9162f88 <col:35> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9162f20 <col:35> '_Bool' true))))
    (CompoundStmt 0x9163278 <line:795:2, line:803:2>
      (DoStmt 0x9163260 <line:797:4, line:802:19>
        (CompoundStmt 0x9163198 <line:798:6, line:801:6>
          (BinaryOperator 0x9163130 <line:799:8, col:60> '<dependent type>' '='
            (UnaryOperator 0x9162fd8 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9162fc0 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x9162fa4 <col:11> '_CharT *' lvalue Var 0x9162e90 '__buf' '_CharT *')))
            (ArraySubscriptExpr 0x9163118 <col:19, col:60> '<dependent type>' lvalue
              (DeclRefExpr 0x9162fec <col:19> 'const _CharT *' lvalue ParmVar 0x9162c60 '__lit' 'const _CharT *')
              (CXXOperatorCallExpr 0x91630f0 <col:25, col:50> '<dependent type>'
                (UnresolvedLookupExpr 0x91630a8 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                (ParenExpr 0x9163050 <col:25, col:34> '<dependent type>'
                  (BinaryOperator 0x9163038 <col:26, col:32> '<dependent type>' '%'
                    (DeclRefExpr 0x9163004 <col:26> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
                    (IntegerLiteral 0x9163020 <col:32> 'int' 10)))
                (DeclRefExpr 0x9163084 <col:38, col:50> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
          (CompoundAssignOperator 0x9163178 <line:800:8, col:15> '<dependent type>' lvalue '/=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x9163148 <col:8> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
            (IntegerLiteral 0x9163160 <col:15> 'int' 10)))
        (CXXOperatorCallExpr 0x9163238 <line:802:11, col:18> '<dependent type>'
          (UnresolvedLookupExpr 0x91631e0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (DeclRefExpr 0x91631b0 <col:11> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
          (IntegerLiteral 0x91631c8 <col:18> 'int' 0))))
    (IfStmt 0x9165900 <line:804:12, line:826:2>
      <<<NULL>>>
      (BinaryOperator 0x91633e0 <line:804:16, col:61> '_Bool' '=='
        (ImplicitCastExpr 0x91633c0 <col:16, col:46> 'int' <IntegralCast>
          (ParenExpr 0x9163358 <col:16, col:46> 'enum std::_Ios_Fmtflags'
            (CXXOperatorCallExpr 0x9163330 <col:17, col:37> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x9163320 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9163308 <col:25, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x91632e8 <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x916328c <col:17> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9162cd0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x91632f8 <col:27, col:37> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x91632c4 <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (ImplicitCastExpr 0x91633d0 <col:51, col:61> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91633b0 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x916338c <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (CompoundStmt 0x9163718 <line:805:2, line:813:2>
        (DoStmt 0x9163700 <line:807:4, line:812:19>
          (CompoundStmt 0x9163638 <line:808:6, line:811:6>
            (BinaryOperator 0x91635d0 <line:809:8, col:61> '<dependent type>' '='
              (UnaryOperator 0x9163428 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9163410 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x91633f8 <col:11> '_CharT *' lvalue Var 0x9162e90 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x91635b8 <col:19, col:61> '<dependent type>' lvalue
                (DeclRefExpr 0x916343c <col:19> 'const _CharT *' lvalue ParmVar 0x9162c60 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9163590 <col:25, col:51> '<dependent type>'
                  (UnresolvedLookupExpr 0x9163548 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                  (ParenExpr 0x91634f0 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x91634c8 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9163488 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
                      (DeclRefExpr 0x9163454 <col:26> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
                      (IntegerLiteral 0x9163470 <col:32> 'int' 7)))
                  (DeclRefExpr 0x9163524 <col:39, col:51> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))))
            (CompoundAssignOperator 0x9163618 <line:810:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x91635e8 <col:8> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
              (IntegerLiteral 0x9163600 <col:16> 'int' 3)))
          (CXXOperatorCallExpr 0x91636d8 <line:812:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9163680 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (DeclRefExpr 0x9163650 <col:11> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
            (IntegerLiteral 0x9163668 <col:18> 'int' 0))))
      (CompoundStmt 0x91658e0 <line:815:2, line:826:2>
        (DeclStmt 0x9163850 <line:817:4, col:58>
          0x9163740 "const bool __uppercase =
            (ImplicitCastExpr 0x9163840 <col:29, col:49> '_Bool' <IntegralToBoolean>
              (CXXOperatorCallExpr 0x9163818 <col:29, col:49> 'enum std::_Ios_Fmtflags'
                (ImplicitCastExpr 0x9163808 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x91637f0 <col:37, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                (ImplicitCastExpr 0x91637d0 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x9163774 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' lvalue ParmVar 0x9162cd0 '__flags' 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags'))
                (ImplicitCastExpr 0x91637e0 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x91637ac <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a60 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
        (DeclStmt 0x9163980 <line:818:4, line:819:66>
          0x9163870 "const int __case_offset =
            (ImplicitCastExpr 0x9163970 <line:818:30, line:819:56> 'const int' <IntegralCast>
              (ConditionalOperator 0x9163950 <line:818:30, line:819:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'
                (ImplicitCastExpr 0x9163940 <line:818:30> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x91638a4 <col:30> 'const _Bool' lvalue Var 0x9163740 '__uppercase' 'const _Bool'))
                (DeclRefExpr 0x91638dc <col:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e4c0 '_S_oudigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')
                (DeclRefExpr 0x916391c <line:819:44, col:56> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))")
        (DoStmt 0x91658c8 <line:820:4, line:825:19>
          (CompoundStmt 0x9165800 <line:821:6, line:824:6>
            (BinaryOperator 0x9165798 <line:822:8, col:52> '<dependent type>' '='
              (UnaryOperator 0x91639c0 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x91639a8 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9163990 <col:11> '_CharT *' lvalue Var 0x9162e90 '__buf' '_CharT *')))
              (ArraySubscriptExpr 0x9163b28 <col:19, col:52> '<dependent type>' lvalue
                (DeclRefExpr 0x91639d4 <col:19> 'const _CharT *' lvalue ParmVar 0x9162c60 '__lit' 'const _CharT *')
                (CXXOperatorCallExpr 0x9163b00 <col:25, col:39> '<dependent type>'
                  (UnresolvedLookupExpr 0x9163ab8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                  (ParenExpr 0x9163a88 <col:25, col:35> '<dependent type>'
                    (CXXOperatorCallExpr 0x9163a60 <col:26, col:32> '<dependent type>'
                      (UnresolvedLookupExpr 0x9163a20 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
                      (DeclRefExpr 0x91639ec <col:26> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
                      (IntegerLiteral 0x9163a08 <col:32> 'int' 15)))
                  (DeclRefExpr 0x9163a9c <col:39> 'const int' lvalue Var 0x9163870 '__case_offset' 'const int'))))
            (CompoundAssignOperator 0x91657e0 <line:823:8, col:16> '<dependent type>' lvalue '>>=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x91657b0 <col:8> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
              (IntegerLiteral 0x91657c8 <col:16> 'int' 4)))
          (CXXOperatorCallExpr 0x91658a0 <line:825:11, col:18> '<dependent type>'
            (UnresolvedLookupExpr 0x9165848 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
            (DeclRefExpr 0x9165818 <col:11> '_ValueT' lvalue ParmVar 0x9162bf0 '__v' '_ValueT')
            (IntegerLiteral 0x9165830 <col:18> 'int' 0))))))
  (ReturnStmt 0x91659d0 <line:827:7, col:25>
    (CXXOperatorCallExpr 0x91659a8 <col:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9165970 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x916593c <col:14> '_CharT *' lvalue ParmVar 0x9162bb0 '__bufend' '_CharT *')
      (DeclRefExpr 0x9165954 <col:25> '_CharT *' lvalue Var 0x9162e90 '__buf' '_CharT *'))))

;
    void _M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, std::ios_base &, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x9166298 </usr/include/c++/4.6/bits/locale_facets.tcc:837:5, line:841:5>
  (DeclStmt 0x91661c8 <line:838:7, line:839:42>
    0x9165ff0 "_CharT *__p =
      (CallExpr 0x9166190 <line:838:21, line:839:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9166040 <line:838:21, col:26> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117a90)
        (DeclRefExpr 0x9166074 <col:41> '_CharT *' lvalue ParmVar 0x9165de0 '__new' '_CharT *')
        (DeclRefExpr 0x916608c <col:48> '_CharT' lvalue ParmVar 0x9165d20 '__sep' '_CharT')
        (DeclRefExpr 0x91660a4 <col:55> 'const char *' lvalue ParmVar 0x9165ca0 '__grouping' 'const char *')
        (DeclRefExpr 0x91660bc <line:839:6> 'size_t':'unsigned int' lvalue ParmVar 0x9165ce0 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x91660d4 <col:23> '_CharT *' lvalue ParmVar 0x9165e30 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9166168 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9166120 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x91660ec <col:29> '_CharT *' lvalue ParmVar 0x9165e30 '__cs' '_CharT *')
          (DeclRefExpr 0x9166104 <col:36> 'int' lvalue ParmVar 0x9165e80 '__len' 'int &')))")
  (BinaryOperator 0x9166280 <line:840:7, col:21> '<dependent type>' '='
    (DeclRefExpr 0x91661d8 <col:7> 'int' lvalue ParmVar 0x9165e80 '__len' 'int &')
    (CXXOperatorCallExpr 0x9166258 <col:15, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9166220 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (DeclRefExpr 0x91661f0 <col:15> '_CharT *' lvalue Var 0x9165ff0 '__p' '_CharT *')
      (DeclRefExpr 0x9166208 <col:21> '_CharT *' lvalue ParmVar 0x9165de0 '__new' '_CharT *'))))


    template <typename _ValueT> _OutIter _M_insert_int(_OutIter __s, std::ios_base &__io, _CharT __fill, _ValueT __v) const (CompoundStmt 0x9169308 </usr/include/c++/4.6/bits/locale_facets.tcc:849:7, line:930:7>
  (DeclStmt 0x9166898 <line:850:2, col:33>
    0x9166830 "Using__gnu_cxx::;")
  (DeclStmt 0x91669c0 <line:851:2, col:66>
    0x9166990 "typedef typename __add_unsigned<_ValueT>::__type __unsigned_type")
  (DeclStmt 0x9166ab0 <line:852:2, col:60>
    0x9166a80 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x9166bb8 <line:853:2, col:32>
    0x9166b80 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x9166c80 <line:854:2, col:40>
    0x9166be0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x9166c50 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x9166c2c <col:24, col:29> '<bound member function type>' ._M_getloc 0x90ae450
          (ImplicitCastExpr 0x9166c70 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9166c14 <col:24> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9166d48 <line:855:2, col:40>
    0x9166cc0 "const __cache_type *__lc =
      (CallExpr 0x9166d28 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x9166cf4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x9166b80 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x9166d0c <col:34> 'const class std::locale' lvalue Var 0x9166be0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x9166e18 <line:856:2, col:42>
    0x9166d90 "const _CharT *__lit =
      (CXXDependentScopeMemberExpr 0x9166de0 <col:24, col:30> '<dependent type>' lvalue
        (DeclRefExpr 0x9166dc4 <col:24> 'const __cache_type *' lvalue Var 0x9166cc0 '__lc' 'const __cache_type *'))")
  (DeclStmt 0x9166f40 <line:857:2, col:49>
    0x9166e60 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9166f10 <col:37, col:48> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9166eec <col:37, col:42> '<bound member function type>' .flags 0x90ada50
          (ImplicitCastExpr 0x9166f30 <col:37> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9166e94 <col:37> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9167008 <line:860:2, col:40>
    0x9166f60 "const int __ilen =
      (ImplicitCastExpr 0x9166ff8 <col:21, col:39> 'const int' <IntegralCast>
        (BinaryOperator 0x9166fe0 <col:21, col:39> 'unsigned int' '*'
          (ImplicitCastExpr 0x9166fd0 <col:21> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x9166f98 <col:21> 'int' 5))
          (UnaryExprOrTypeTraitExpr 0x9166fb8 <col:25, col:39> 'unsigned int' sizeof '_ValueT')))")
  (DeclStmt 0x9167248 <line:861:2, line:862:23>
    0x9167050 "_CharT *__cs =
      (CXXStaticCastExpr 0x9167230 <line:861:17, line:862:22> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x9167200 <line:861:38, line:862:21> 'void *'
          (ImplicitCastExpr 0x91671f0 <line:861:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9167164 <col:38> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x91671d8 <col:55, line:862:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x9167188 <line:861:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x91671c8 <line:862:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x91671b8 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x91671a0 <col:15> 'const int' lvalue Var 0x9166f60 '__ilen' 'const int'))))))")
  (DeclStmt 0x9167390 <line:866:2, col:70>
    0x9167290 "const ios_base::fmtflags __basefield =
      (CXXOperatorCallExpr 0x9167368 <col:41, col:61> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9167358 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9167340 <col:49, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (ImplicitCastExpr 0x9167320 <col:41> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x91672c4 <col:41> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9166e60 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
        (ImplicitCastExpr 0x9167330 <col:51, col:61> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x91672fc <col:51, col:61> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (DeclStmt 0x91675b0 <line:867:2, line:868:40>
    0x91673b0 "const bool __dec =
      (ParenExpr 0x9167560 <line:867:21, line:868:39> '_Bool'
        (BinaryOperator 0x9167548 <line:867:22, line:868:36> '_Bool' '&&'
          (BinaryOperator 0x9167480 <line:867:22, col:47> '_Bool' '!='
            (ImplicitCastExpr 0x9167460 <col:22> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9167440 <col:22> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x91673e4 <col:22> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9167290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9167470 <col:37, col:47> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9167450 <col:37, col:47> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x916741c <col:37, col:47> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9167530 <line:868:11, col:36> '_Bool' '!='
            (ImplicitCastExpr 0x9167510 <col:11> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91674f0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9167498 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9167290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x9167520 <col:26, col:36> 'int' <IntegralCast>
              (ImplicitCastExpr 0x9167500 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x91674cc <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))")
  (DeclStmt 0x9167838 <line:869:2, line:871:34>
    0x91675e0 "const __unsigned_type __u =
      (ParenExpr 0x9167820 <line:869:30, line:871:33> '<dependent type>'
        (ConditionalOperator 0x9167800 <line:869:31, line:871:32> '<dependent type>'
          (ParenExpr 0x9167710 <line:869:31, col:49> '<dependent type>'
            (BinaryOperator 0x91676f8 <col:32, col:44> '<dependent type>' '||'
              (CXXOperatorCallExpr 0x9167690 <col:32, col:38> '<dependent type>'
                (UnresolvedLookupExpr 0x9167648 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
                (DeclRefExpr 0x9167614 <col:32> '_ValueT' lvalue ParmVar 0x9166680 '__v' '_ValueT')
                (IntegerLiteral 0x9167630 <col:38> 'int' 0))
              (UnaryOperator 0x91676e0 <col:43, col:44> '_Bool' prefix '!'
                (ImplicitCastExpr 0x91676d0 <col:44> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x91676b4 <col:44> 'const _Bool' lvalue Var 0x91673b0 '__dec' 'const _Bool')))))
          (CXXUnresolvedConstructExpr 0x9167748 <line:870:12, col:31> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
            (DeclRefExpr 0x9167730 <col:28> '_ValueT' lvalue ParmVar 0x9166680 '__v' '_ValueT'))
          (CXXOperatorCallExpr 0x91677e0 <line:871:12, col:32> '<dependent type>'
            (UnresolvedLookupExpr 0x91677a8 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (CXXUnresolvedConstructExpr 0x9167788 <col:13, col:32> '__unsigned_type':'typename __add_unsigned<_ValueT>::__type'
              (DeclRefExpr 0x9167770 <col:29> '_ValueT' lvalue ParmVar 0x9166680 '__v' '_ValueT')))))")
  (DeclStmt 0x9167a00 <line:872:3, col:71>
    0x9167860 "int __len =
      (CallExpr 0x91679d0 <col:15, col:70> '<dependent type>'
        (UnresolvedLookupExpr 0x9167898 <col:15> '<overloaded function type>' lvalue (ADL) = '1' 0x9162e40)
        (CXXOperatorCallExpr 0x9167948 <col:29, col:36> '<dependent type>'
          (UnresolvedLookupExpr 0x9167900 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x91678cc <col:29> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
          (DeclRefExpr 0x91678e4 <col:36> 'const int' lvalue Var 0x9166f60 '__ilen' 'const int'))
        (DeclRefExpr 0x916796c <col:44> 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type' lvalue Var 0x91675e0 '__u' 'const __unsigned_type':'const typename __add_unsigned<_ValueT>::__type')
        (DeclRefExpr 0x9167984 <col:49> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
        (DeclRefExpr 0x916799c <col:56> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9166e60 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')
        (DeclRefExpr 0x91679b4 <col:65> 'const _Bool' lvalue Var 0x91673b0 '__dec' 'const _Bool'))")
  (CompoundAssignOperator 0x9167a90 <line:873:2, col:19> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
    (DeclRefExpr 0x9167a10 <col:2> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
    (BinaryOperator 0x9167a78 <col:10, col:19> 'int' '-'
      (ImplicitCastExpr 0x9167a58 <col:10> 'int' <LValueToRValue>
        (DeclRefExpr 0x9167a28 <col:10> 'const int' lvalue Var 0x9166f60 '__ilen' 'const int'))
      (ImplicitCastExpr 0x9167a68 <col:19> 'int' <LValueToRValue>
        (DeclRefExpr 0x9167a40 <col:19> 'int' lvalue Var 0x9167860 '__len' 'int'))))
  (IfStmt 0x9167ff0 <line:876:2, line:886:4>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x9167ac8 <line:876:6, col:12> '<dependent type>' lvalue
      (DeclRefExpr 0x9167ab0 <col:6> 'const __cache_type *' lvalue Var 0x9166cc0 '__lc' 'const __cache_type *'))
    (CompoundStmt 0x9167fd0 <line:877:4, line:886:4>
      (DeclStmt 0x9167cb0 <line:880:6, line:882:16>
        0x9167b10 "_CharT *__cs2 =
          (CXXStaticCastExpr 0x9167c98 <line:880:22, line:882:15> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9167c68 <line:880:43, line:882:14> 'void *'
              (ImplicitCastExpr 0x9167c58 <line:880:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9167b44 <col:43> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9167c40 <col:60, line:882:13> 'unsigned int' '*'
                (BinaryOperator 0x9167c00 <line:880:60, line:881:23> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x9167b68 <line:880:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x9167bf0 <line:881:13, col:23> 'unsigned int' <IntegralCast>
                    (ParenExpr 0x9167bd8 <col:13, col:23> 'int'
                      (BinaryOperator 0x9167bc0 <col:14, col:22> 'int' '+'
                        (ImplicitCastExpr 0x9167bb0 <col:14> 'int' <LValueToRValue>
                          (DeclRefExpr 0x9167b80 <col:14> 'int' lvalue Var 0x9167860 '__len' 'int'))
                        (IntegerLiteral 0x9167b98 <col:22> 'int' 1)))))
                (ImplicitCastExpr 0x9167c30 <line:882:13> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x9167c18 <col:13> 'int' 2)))))")
      (CallExpr 0x9167ec8 <line:883:6, line:884:57> '<dependent type>'
        (MemberExpr 0x9167cd0 <line:883:6> '<bound member function type>' ->_M_group_int 0x9165f30
          (CXXThisExpr 0x9167cc0 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x9167d08 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x9167cf0 <col:19> 'const __cache_type *' lvalue Var 0x9166cc0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9167d58 <col:38, col:44> '<dependent type>' lvalue
          (DeclRefExpr 0x9167d3c <col:38> 'const __cache_type *' lvalue Var 0x9166cc0 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x9167da8 <line:884:5, col:11> '<dependent type>' lvalue
          (DeclRefExpr 0x9167d8c <col:5> 'const __cache_type *' lvalue Var 0x9166cc0 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x9167ddc <col:29> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &')
        (CXXOperatorCallExpr 0x9167e70 <col:35, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9167e28 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x9167df4 <col:35> '_CharT *' lvalue Var 0x9167b10 '__cs2' '_CharT *')
          (IntegerLiteral 0x9167e10 <col:43> 'int' 2))
        (DeclRefExpr 0x9167e94 <col:46> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
        (DeclRefExpr 0x9167eac <col:52> 'int' lvalue Var 0x9167860 '__len' 'int'))
      (BinaryOperator 0x9167fb8 <line:885:6, col:21> '<dependent type>' '='
        (DeclRefExpr 0x9167f00 <col:6> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9167f90 <col:13, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9167f48 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x9167f18 <col:13> '_CharT *' lvalue Var 0x9167b10 '__cs2' '_CharT *')
          (IntegerLiteral 0x9167f30 <col:21> 'int' 2))))
    <<<NULL>>>)
  (IfStmt 0x9168d28 <line:889:2, line:914:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x91680b8 <line:889:6, col:34> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9168060 <col:6, col:34> 'long'
        (ImplicitCastExpr 0x9168050 <col:6> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x916800c <col:6> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9168098 <col:23> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9168088 <col:23> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9168024 <col:23> 'const _Bool' lvalue Var 0x91673b0 '__dec' 'const _Bool')))
        (ImplicitCastExpr 0x91680a8 <col:30> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9168040 <col:30> '_Bool' true))))
    (CompoundStmt 0x9168628 <line:890:4, line:900:4>
      (IfStmt 0x9168608 <line:892:6, line:899:50>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9168178 <line:892:10, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9168130 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
          (DeclRefExpr 0x91680fc <col:10> '_ValueT' lvalue ParmVar 0x9166680 '__v' '_ValueT')
          (IntegerLiteral 0x9168118 <col:17> 'int' 0))
        (CompoundStmt 0x91684d8 <line:893:8, line:897:8>
          (IfStmt 0x91684b8 <line:894:3, line:896:46>
            <<<NULL>>>
            (BinaryOperator 0x9168388 <line:894:7, line:895:48> '<dependent type>' '&&'
              (CXXFunctionalCastExpr 0x9168280 <line:894:7, col:39> '_Bool' functional cast to _Bool <NoOp>
                (ImplicitCastExpr 0x9168270 <col:12, col:32> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9168248 <col:12, col:32> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9168238 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x9168220 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x9168200 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x91681a8 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9166e60 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x9168210 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x91681dc <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6940 'showpos' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (CXXDependentScopeMemberExpr 0x9168350 <line:895:10, col:48> '<dependent type>' lvalue))
            (BinaryOperator 0x91684a0 <line:896:5, col:46> '<dependent type>' ','
              (BinaryOperator 0x9168458 <col:5, col:41> '<dependent type>' '='
                (UnaryOperator 0x91683d0 <col:5, col:8> '<dependent type>' prefix '*'
                  (UnaryOperator 0x91683b8 <col:6, col:8> '<dependent type>' prefix '--'
                    (DeclRefExpr 0x91683a0 <col:8> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')))
                (ArraySubscriptExpr 0x9168440 <col:15, col:41> '<dependent type>' lvalue
                  (DeclRefExpr 0x91683e4 <col:15> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
                  (DeclRefExpr 0x916841c <col:21, col:33> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e330 '_S_oplus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
              (UnaryOperator 0x9168488 <col:44, col:46> 'int' lvalue prefix '++'
                (DeclRefExpr 0x9168470 <col:46> 'int' lvalue Var 0x9167860 '__len' 'int')))
            <<<NULL>>>))
        (BinaryOperator 0x91685f0 <line:899:8, col:50> '<dependent type>' ','
          (BinaryOperator 0x91685a8 <col:8, col:45> '<dependent type>' '='
            (UnaryOperator 0x9168520 <col:8, col:11> '<dependent type>' prefix '*'
              (UnaryOperator 0x9168508 <col:9, col:11> '<dependent type>' prefix '--'
                (DeclRefExpr 0x91684ec <col:11> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')))
            (ArraySubscriptExpr 0x9168590 <col:18, col:45> '<dependent type>' lvalue
              (DeclRefExpr 0x9168534 <col:18> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
              (DeclRefExpr 0x916856c <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e2f0 '_S_ominus' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
          (UnaryOperator 0x91685d8 <col:48, col:50> 'int' lvalue prefix '++'
            (DeclRefExpr 0x91685c0 <col:50> 'int' lvalue Var 0x9167860 '__len' 'int')))))
    (IfStmt 0x9168d08 <line:901:7, line:914:4>
      <<<NULL>>>
      (BinaryOperator 0x9168750 <line:901:11, col:49> '<dependent type>' '&&'
        (CXXFunctionalCastExpr 0x9168720 <col:11, col:44> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9168710 <col:16, col:36> '_Bool' <IntegralToBoolean>
            (CXXOperatorCallExpr 0x91686e8 <col:16, col:36> 'enum std::_Ios_Fmtflags'
              (ImplicitCastExpr 0x91686d8 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91686c0 <col:24, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
              (ImplicitCastExpr 0x91686a0 <col:16> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9168648 <col:16> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9166e60 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
              (ImplicitCastExpr 0x91686b0 <col:26, col:36> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x916867c <col:26, col:36> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6880 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
        (DeclRefExpr 0x9168738 <col:49> '_ValueT' lvalue ParmVar 0x9166680 '__v' '_ValueT'))
      (CompoundStmt 0x9168cf0 <line:902:4, line:914:4>
        (IfStmt 0x9168cd0 <line:903:6, line:913:8>
          <<<NULL>>>
          (BinaryOperator 0x9168800 <line:903:10, col:35> '_Bool' '=='
            (ImplicitCastExpr 0x91687e0 <col:10> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91687c0 <col:10> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x9168768 <col:10> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9167290 '__basefield' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
            (ImplicitCastExpr 0x91687f0 <col:25, col:35> 'int' <IntegralCast>
              (ImplicitCastExpr 0x91687d0 <col:25, col:35> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                (DeclRefExpr 0x916879c <col:25, col:35> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
          (BinaryOperator 0x9168918 <line:904:8, col:51> '<dependent type>' ','
            (BinaryOperator 0x91688d0 <col:8, col:46> '<dependent type>' '='
              (UnaryOperator 0x9168848 <col:8, col:11> '<dependent type>' prefix '*'
                (UnaryOperator 0x9168830 <col:9, col:11> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9168818 <col:11> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x91688b8 <col:18, col:46> '<dependent type>' lvalue
                (DeclRefExpr 0x916885c <col:18> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9168894 <col:24, col:36> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (UnaryOperator 0x9168900 <col:49, col:51> 'int' lvalue prefix '++'
              (DeclRefExpr 0x91688e8 <col:51> 'int' lvalue Var 0x9167860 '__len' 'int')))
          (CompoundStmt 0x9168cb0 <line:906:8, line:913:8>
            (DeclStmt 0x9168a50 <line:908:3, col:57>
              0x9168940 "const bool __uppercase =
                (ImplicitCastExpr 0x9168a40 <col:28, col:48> '_Bool' <IntegralToBoolean>
                  (CXXOperatorCallExpr 0x9168a18 <col:28, col:48> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x9168a08 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x91689f0 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x91689d0 <col:28> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x9168974 <col:28> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9166e60 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x91689e0 <col:38, col:48> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x91689ac <col:38, col:48> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a60 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))")
            (BinaryOperator 0x9168b78 <line:909:3, col:50> '<dependent type>' '='
              (UnaryOperator 0x9168a90 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9168a78 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9168a60 <col:6> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9168b60 <col:13, col:50> '<dependent type>' lvalue
                (DeclRefExpr 0x9168aa4 <col:13> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
                (BinaryOperator 0x9168b48 <col:19, col:39> 'int' '+'
                  (ImplicitCastExpr 0x9168b18 <col:19, col:31> 'int' <IntegralCast>
                    (DeclRefExpr 0x9168adc <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e370 '_S_ox' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>'))
                  (ImplicitCastExpr 0x9168b38 <col:39> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9168b28 <col:39> '_Bool' <LValueToRValue>
                      (DeclRefExpr 0x9168afc <col:39> 'const _Bool' lvalue Var 0x9168940 '__uppercase' 'const _Bool'))))))
            (BinaryOperator 0x9168c48 <line:911:3, col:41> '<dependent type>' '='
              (UnaryOperator 0x9168bc0 <col:3, col:6> '<dependent type>' prefix '*'
                (UnaryOperator 0x9168ba8 <col:4, col:6> '<dependent type>' prefix '--'
                  (DeclRefExpr 0x9168b90 <col:6> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')))
              (ArraySubscriptExpr 0x9168c30 <col:13, col:41> '<dependent type>' lvalue
                (DeclRefExpr 0x9168bd4 <col:13> 'const _CharT *' lvalue Var 0x9166d90 '__lit' 'const _CharT *')
                (DeclRefExpr 0x9168c0c <col:19, col:31> 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>' EnumConstant 0x912e3f0 '_S_odigits' 'enum std::__num_base::<anonymous at /usr/include/c++/4.6/bits/locale_facets.h:1523:5>')))
            (CompoundAssignOperator 0x9168c90 <line:912:3, col:12> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
              (DeclRefExpr 0x9168c60 <col:3> 'int' lvalue Var 0x9167860 '__len' 'int')
              (IntegerLiteral 0x9168c78 <col:12> 'int' 2)))))
      <<<NULL>>>))
  (DeclStmt 0x9168e30 <line:917:2, col:37>
    0x9168d50 "const streamsize __w =
      (CXXMemberCallExpr 0x9168e00 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x9168ddc <col:25, col:30> '<bound member function type>' .width 0x90ae070
          (ImplicitCastExpr 0x9168e20 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9168d84 <col:25> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x9169168 <line:918:2, line:924:4>
    <<<NULL>>>
    (BinaryOperator 0x9168eb0 <line:918:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x9168ea0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9168e40 <col:6> 'const streamsize':'const int' lvalue Var 0x9168d50 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x9168e88 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x9168e78 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x9168e58 <col:36> 'int' lvalue Var 0x9167860 '__len' 'int'))))
    (CompoundStmt 0x9169148 <line:919:4, line:924:4>
      (DeclStmt 0x9168ff8 <line:920:6, line:921:18>
        0x9168ee0 "_CharT *__cs3 =
          (CXXStaticCastExpr 0x9168fe0 <line:920:22, line:921:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x9168fb0 <line:920:43, line:921:16> 'void *'
              (ImplicitCastExpr 0x9168fa0 <line:920:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9168f14 <col:43> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x9168f88 <col:60, line:921:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x9168f38 <line:920:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x9168f78 <line:921:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x9168f68 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x9168f50 <col:13> 'const streamsize':'const int' lvalue Var 0x9168d50 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x91690c8 <line:922:6, col:50> '<dependent type>'
        (MemberExpr 0x9169018 <col:6> '<bound member function type>' ->_M_pad 0x9162690
          (CXXThisExpr 0x9169008 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x9169038 <col:13> '_CharT' lvalue ParmVar 0x9166640 '__fill' '_CharT')
        (DeclRefExpr 0x9169050 <col:21> 'const streamsize':'const int' lvalue Var 0x9168d50 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x9169068 <col:26> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x9169080 <col:32> '_CharT *' lvalue Var 0x9168ee0 '__cs3' '_CharT *')
        (DeclRefExpr 0x9169098 <col:39> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
        (DeclRefExpr 0x91690b0 <col:45> 'int' lvalue Var 0x9167860 '__len' 'int'))
      (BinaryOperator 0x9169130 <line:923:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x91690fc <col:6> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
        (DeclRefExpr 0x9169114 <col:13> '_CharT *' lvalue Var 0x9168ee0 '__cs3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x9169218 <line:925:2, col:14> 'streamsize':'int'
    (MemberExpr 0x91691f8 <col:2, col:7> '<bound member function type>' .width 0x90ae130
      (DeclRefExpr 0x9169184 <col:2> 'class std::ios_base' lvalue ParmVar 0x9166600 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x91691e0 <col:13> 'int' 0))
  (ReturnStmt 0x91692f8 <line:929:2, col:38>
    (CallExpr 0x91692d0 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9169250 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
      (DeclRefExpr 0x9169288 <col:22> '_OutIter' lvalue ParmVar 0x91665b0 '__s' '_OutIter')
      (DeclRefExpr 0x91692a0 <col:27> '_CharT *' lvalue Var 0x9167050 '__cs' '_CharT *')
      (DeclRefExpr 0x91692b8 <col:33> 'int' lvalue Var 0x9167860 '__len' 'int'))))

;
    void _M_group_float(const char *__grouping, size_t __grouping_size, _CharT __sep, const _CharT *__p, _CharT *__new, _CharT *__cs, int &__len) const (CompoundStmt 0x916a098 </usr/include/c++/4.6/bits/locale_facets.tcc:938:5, line:955:5>
  (DeclStmt 0x9169a98 <line:942:7, col:52>
    0x9169980 "const int __declen =
      (ConditionalOperator 0x9169a78 <col:28, col:47> '<dependent type>'
        (DeclRefExpr 0x91699b4 <col:28> 'const _CharT *' lvalue ParmVar 0x9169700 '__p' 'const _CharT *')
        (CXXOperatorCallExpr 0x9169a38 <col:34, col:40> '<dependent type>'
          (UnresolvedLookupExpr 0x9169a00 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (DeclRefExpr 0x91699cc <col:34> 'const _CharT *' lvalue ParmVar 0x9169700 '__p' 'const _CharT *')
          (DeclRefExpr 0x91699e4 <col:40> '_CharT *' lvalue ParmVar 0x91697c0 '__cs' '_CharT *'))
        (DeclRefExpr 0x9169a5c <col:47> 'int' lvalue ParmVar 0x9169810 '__len' 'int &'))")
  (DeclStmt 0x9169c98 <line:943:7, line:945:29>
    0x9169ac0 "_CharT *__p2 =
      (CallExpr 0x9169c60 <line:943:22, line:945:28> '<dependent type>'
        (UnresolvedLookupExpr 0x9169b10 <line:943:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117a90)
        (DeclRefExpr 0x9169b44 <col:42> '_CharT *' lvalue ParmVar 0x9169770 '__new' '_CharT *')
        (DeclRefExpr 0x9169b5c <col:49> '_CharT' lvalue ParmVar 0x9169690 '__sep' '_CharT')
        (DeclRefExpr 0x9169b74 <col:56> 'const char *' lvalue ParmVar 0x9169610 '__grouping' 'const char *')
        (DeclRefExpr 0x9169b8c <line:944:7> 'size_t':'unsigned int' lvalue ParmVar 0x9169650 '__grouping_size' 'size_t':'unsigned int')
        (DeclRefExpr 0x9169ba4 <line:945:7> '_CharT *' lvalue ParmVar 0x91697c0 '__cs' '_CharT *')
        (CXXOperatorCallExpr 0x9169c38 <col:13, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x9169bf0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x9169bbc <col:13> '_CharT *' lvalue ParmVar 0x91697c0 '__cs' '_CharT *')
          (DeclRefExpr 0x9169bd4 <col:20> 'const int' lvalue Var 0x9169980 '__declen' 'const int')))")
  (DeclStmt 0x9169d88 <line:948:7, col:34>
    0x9169cc0 "int __newlen =
      (CXXOperatorCallExpr 0x9169d60 <col:22, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9169d28 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x9169cf4 <col:22> '_CharT *' lvalue Var 0x9169ac0 '__p2' '_CharT *')
        (DeclRefExpr 0x9169d0c <col:29> '_CharT *' lvalue ParmVar 0x9169770 '__new' '_CharT *'))")
  (IfStmt 0x916a020 <line:949:7, line:953:2>
    <<<NULL>>>
    (DeclRefExpr 0x9169d98 <line:949:11> 'const _CharT *' lvalue ParmVar 0x9169700 '__p' 'const _CharT *')
    (CompoundStmt 0x916a008 <line:950:2, line:953:2>
      (CallExpr 0x9169f40 <line:951:4, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9169e70 <col:4, col:25> '<dependent type>' lvalue)
        (DeclRefExpr 0x9169ea4 <col:30> '_CharT *' lvalue Var 0x9169ac0 '__p2' '_CharT *')
        (DeclRefExpr 0x9169ebc <col:36> 'const _CharT *' lvalue ParmVar 0x9169700 '__p' 'const _CharT *')
        (BinaryOperator 0x9169f28 <col:41, col:49> 'int' '-'
          (ImplicitCastExpr 0x9169f08 <col:41> 'int' <LValueToRValue>
            (DeclRefExpr 0x9169ed4 <col:41> 'int' lvalue ParmVar 0x9169810 '__len' 'int &'))
          (ImplicitCastExpr 0x9169f18 <col:49> 'int' <LValueToRValue>
            (DeclRefExpr 0x9169eec <col:49> 'const int' lvalue Var 0x9169980 '__declen' 'const int'))))
      (CompoundAssignOperator 0x9169fe8 <line:952:4, col:24> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9169f68 <col:4> 'int' lvalue Var 0x9169cc0 '__newlen' 'int')
        (BinaryOperator 0x9169fd0 <col:16, col:24> 'int' '-'
          (ImplicitCastExpr 0x9169fb0 <col:16> 'int' <LValueToRValue>
            (DeclRefExpr 0x9169f80 <col:16> 'int' lvalue ParmVar 0x9169810 '__len' 'int &'))
          (ImplicitCastExpr 0x9169fc0 <col:24> 'int' <LValueToRValue>
            (DeclRefExpr 0x9169f98 <col:24> 'const int' lvalue Var 0x9169980 '__declen' 'const int')))))
    <<<NULL>>>)
  (BinaryOperator 0x916a080 <line:954:7, col:15> 'int' lvalue '='
    (DeclRefExpr 0x916a03c <col:7> 'int' lvalue ParmVar 0x9169810 '__len' 'int &')
    (ImplicitCastExpr 0x916a070 <col:15> 'int' <LValueToRValue>
      (DeclRefExpr 0x916a054 <col:15> 'int' lvalue Var 0x9169cc0 '__newlen' 'int'))))


    template <typename _ValueT> _OutIter _M_insert_float(_OutIter __s, std::ios_base &__io, _CharT __fill, char __mod, _ValueT __v) const (CompoundStmt 0x916d258 </usr/include/c++/4.6/bits/locale_facets.tcc:973:7, line:1085:7>
  (DeclStmt 0x916a770 <line:974:2, col:62>
    0x916a740 "typedef __numpunct_cache<_CharT> __cache_type")
  (DeclStmt 0x916a878 <line:975:2, col:32>
    0x916a840 "__use_cache<__cache_type> __uc")
  (DeclStmt 0x916a940 <line:976:2, col:40>
    0x916a8a0 "const std::locale &__loc =
      (CXXMemberCallExpr 0x916a910 <col:24, col:39> 'const class std::locale' lvalue
        (MemberExpr 0x916a8ec <col:24, col:29> '<bound member function type>' ._M_getloc 0x90ae450
          (ImplicitCastExpr 0x916a930 <col:24> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x916a8d4 <col:24> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x916aa08 <line:977:2, col:40>
    0x916a980 "const __cache_type *__lc =
      (CallExpr 0x916a9e8 <col:29, col:39> '<dependent type>'
        (DeclRefExpr 0x916a9b4 <col:29> '__use_cache<__cache_type>' lvalue Var 0x916a840 '__uc' '__use_cache<__cache_type>')
        (DeclRefExpr 0x916a9cc <col:34> 'const class std::locale' lvalue Var 0x916a8a0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x916ac10 <line:980:2, col:71>
    0x916aa20 "const streamsize __prec =
      (ConditionalOperator 0x916abf0 <col:28, col:70> 'int'
        (BinaryOperator 0x916ab18 <col:28, col:47> '_Bool' '<'
          (CXXMemberCallExpr 0x916aad0 <col:28, col:43> 'streamsize':'int'
            (MemberExpr 0x916aaac <col:28, col:33> '<bound member function type>' .precision 0x90adf00
              (ImplicitCastExpr 0x916aaf0 <col:28> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x916aa54 <col:28> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &'))))
          (IntegerLiteral 0x916ab00 <col:47> 'int' 0))
        (IntegerLiteral 0x916ab30 <col:51> 'int' 6)
        (CXXMemberCallExpr 0x916abc0 <col:55, col:70> 'streamsize':'int'
          (MemberExpr 0x916aba0 <col:55, col:60> '<bound member function type>' .precision 0x90adf00
            (ImplicitCastExpr 0x916abe0 <col:55> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x916ab48 <col:55> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &')))))")
  (DeclStmt 0x916ad58 <line:982:2, line:983:52>
    0x916ac30 "const int __max_digits =
      (CXXDependentScopeMemberExpr 0x916ad20 <col:4, col:42> '<dependent type>' lvalue)")
  (DeclStmt 0x916adb8 <line:986:2, col:11>
    0x916ad80 "int __len")
  (DeclStmt 0x916ae58 <line:988:2, col:17>
    0x916ae20 "char __fbuf[16]")
  (CallExpr 0x916af48 <line:989:2, col:49> 'void'
    (ImplicitCastExpr 0x916af38 <col:2, col:14> 'void (*)(const class std::ios_base &, char *, char) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x916ae90 <col:2, col:14> 'void (const class std::ios_base &, char *, char) throw()' lvalue CXXMethod 0x912ec50 '_S_format_float' 'void (const class std::ios_base &, char *, char) throw()'))
    (ImplicitCastExpr 0x916af70 <col:30> 'const class std::ios_base' lvalue <NoOp>
      (DeclRefExpr 0x916aeb0 <col:30> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x916af80 <col:36> 'char *' <ArrayToPointerDecay>
      (DeclRefExpr 0x916aec8 <col:36> 'char [16]' lvalue Var 0x916ae20 '__fbuf' 'char [16]'))
    (ImplicitCastExpr 0x916af90 <col:44> 'char' <LValueToRValue>
      (DeclRefExpr 0x916aee0 <col:44> 'char' lvalue ParmVar 0x916a490 '__mod' 'char')))
  (DeclStmt 0x916b040 <line:994:2, col:34>
    0x916afb0 "int __cs_size =
      (BinaryOperator 0x916b028 <col:18, col:33> 'int' '*'
        (ImplicitCastExpr 0x916b018 <col:18> 'int' <LValueToRValue>
          (DeclRefExpr 0x916afe4 <col:18> 'const int' lvalue Var 0x916ac30 '__max_digits' 'const int'))
        (IntegerLiteral 0x916b000 <col:33> 'int' 3))")
  (DeclStmt 0x916b140 <line:995:2, col:62>
    0x916b060 "char *__cs =
      (CXXStaticCastExpr 0x916b128 <col:15, col:61> 'char *' static_cast<char *> <BitCast>
        (CallExpr 0x916b0d8 <col:34, col:60> 'void *'
          (ImplicitCastExpr 0x916b0c8 <col:34> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x916b094 <col:34> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
          (ImplicitCastExpr 0x916b108 <col:51> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x916b0f8 <col:51> 'int' <LValueToRValue>
              (DeclRefExpr 0x916b0ac <col:51> 'int' lvalue Var 0x916afb0 '__cs_size' 'int')))))")
  (BinaryOperator 0x916b298 <line:996:2, line:997:30> '<dependent type>' '='
    (DeclRefExpr 0x916b150 <line:996:2> 'int' lvalue Var 0x916ad80 '__len' 'int')
    (CallExpr 0x916b260 <col:10, line:997:30> '<dependent type>'
      (DeclRefExpr 0x916b180 <line:996:10, col:15> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x8edaea0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
      (CallExpr 0x916b1c8 <col:32, col:48> '__c_locale':'struct __locale_struct *'
        (ImplicitCastExpr 0x916b1b8 <col:32> '__c_locale (*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x916b1a0 <col:32> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))
      (DeclRefExpr 0x916b1e4 <col:51> 'char *' lvalue Var 0x916b060 '__cs' 'char *')
      (DeclRefExpr 0x916b1fc <col:57> 'int' lvalue Var 0x916afb0 '__cs_size' 'int')
      (DeclRefExpr 0x916b214 <line:997:11> 'char [16]' lvalue Var 0x916ae20 '__fbuf' 'char [16]')
      (DeclRefExpr 0x916b22c <col:19> 'const streamsize':'const int' lvalue Var 0x916aa20 '__prec' 'const streamsize':'const int')
      (DeclRefExpr 0x916b244 <col:27> '_ValueT' lvalue ParmVar 0x916a4d0 '__v' '_ValueT')))
  (IfStmt 0x916b5f8 <line:1000:2, line:1006:4>
    <<<NULL>>>
    (BinaryOperator 0x916b300 <line:1000:6, col:15> '_Bool' '>='
      (ImplicitCastExpr 0x916b2e0 <col:6> 'int' <LValueToRValue>
        (DeclRefExpr 0x916b2b0 <col:6> 'int' lvalue Var 0x916ad80 '__len' 'int'))
      (ImplicitCastExpr 0x916b2f0 <col:15> 'int' <LValueToRValue>
        (DeclRefExpr 0x916b2c8 <col:15> 'int' lvalue Var 0x916afb0 '__cs_size' 'int')))
    (CompoundStmt 0x916b5d8 <line:1001:4, line:1006:4>
      (BinaryOperator 0x916b388 <line:1002:6, col:26> 'int' lvalue '='
        (DeclRefExpr 0x916b318 <col:6> 'int' lvalue Var 0x916afb0 '__cs_size' 'int')
        (BinaryOperator 0x916b370 <col:18, col:26> 'int' '+'
          (ImplicitCastExpr 0x916b360 <col:18> 'int' <LValueToRValue>
            (DeclRefExpr 0x916b330 <col:18> 'int' lvalue Var 0x916ad80 '__len' 'int'))
          (IntegerLiteral 0x916b348 <col:26> 'int' 1)))
      (BinaryOperator 0x916b460 <line:1003:6, col:59> 'char *' lvalue '='
        (DeclRefExpr 0x916b3a0 <col:6> 'char *' lvalue Var 0x916b060 '__cs' 'char *')
        (CXXStaticCastExpr 0x916b448 <col:13, col:59> 'char *' static_cast<char *> <BitCast>
          (CallExpr 0x916b3f8 <col:32, col:58> 'void *'
            (ImplicitCastExpr 0x916b3e8 <col:32> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
              (DeclRefExpr 0x916b3b8 <col:32> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
            (ImplicitCastExpr 0x916b428 <col:49> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x916b418 <col:49> 'int' <LValueToRValue>
                (DeclRefExpr 0x916b3d0 <col:49> 'int' lvalue Var 0x916afb0 '__cs_size' 'int'))))))
      (BinaryOperator 0x916b5c0 <line:1004:6, line:1005:27> '<dependent type>' '='
        (DeclRefExpr 0x916b478 <line:1004:6> 'int' lvalue Var 0x916ad80 '__len' 'int')
        (CallExpr 0x916b588 <col:14, line:1005:27> '<dependent type>'
          (DeclRefExpr 0x916b4a8 <line:1004:14, col:19> 'int (const __c_locale &, char *, const int, const char *, ...)' lvalue Function 0x8edaea0 '__convert_from_v' 'int (const __c_locale &, char *, const int, const char *, ...)')
          (CallExpr 0x916b4f0 <col:36, col:52> '__c_locale':'struct __locale_struct *'
            (ImplicitCastExpr 0x916b4e0 <col:36> '__c_locale (*)(void)' <FunctionToPointerDecay>
              (DeclRefExpr 0x916b4c8 <col:36> '__c_locale (void)' lvalue CXXMethod 0x9084b00 '_S_get_c_locale' '__c_locale (void)')))
          (DeclRefExpr 0x916b50c <col:55> 'char *' lvalue Var 0x916b060 '__cs' 'char *')
          (DeclRefExpr 0x916b524 <col:61> 'int' lvalue Var 0x916afb0 '__cs_size' 'int')
          (DeclRefExpr 0x916b53c <line:1005:8> 'char [16]' lvalue Var 0x916ae20 '__fbuf' 'char [16]')
          (DeclRefExpr 0x916b554 <col:16> 'const streamsize':'const int' lvalue Var 0x916aa20 '__prec' 'const streamsize':'const int')
          (DeclRefExpr 0x916b56c <col:24> '_ValueT' lvalue ParmVar 0x916a4d0 '__v' '_ValueT'))))
    <<<NULL>>>)
  (DeclStmt 0x916b860 <line:1028:2, col:65>
    0x916b6e0 "const ctype<_CharT> &__ctype =
      (CallExpr 0x916b840 <col:33, col:64> '<dependent type>'
        (UnresolvedLookupExpr 0x916b7c0 <col:33, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
        (DeclRefExpr 0x916b828 <col:59> 'const class std::locale' lvalue Var 0x916a8a0 '__loc' 'const class std::locale &'))")
  (DeclStmt 0x916b9b8 <line:1030:2, line:1031:22>
    0x916b8a0 "_CharT *__ws =
      (CXXStaticCastExpr 0x916b9a0 <line:1030:17, line:1031:21> '_CharT *' static_cast<_CharT *> <Dependent>
        (CallExpr 0x916b970 <line:1030:38, line:1031:20> 'void *'
          (ImplicitCastExpr 0x916b960 <line:1030:38> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
            (DeclRefExpr 0x916b8d4 <col:38> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
          (BinaryOperator 0x916b948 <col:55, line:1031:15> 'unsigned int' '*'
            (UnaryExprOrTypeTraitExpr 0x916b8f8 <line:1030:55, col:68> 'unsigned int' sizeof '_CharT')
            (ImplicitCastExpr 0x916b938 <line:1031:15> 'unsigned int' <IntegralCast>
              (ImplicitCastExpr 0x916b928 <col:15> 'int' <LValueToRValue>
                (DeclRefExpr 0x916b910 <col:15> 'int' lvalue Var 0x916ad80 '__len' 'int'))))))")
  (CallExpr 0x916bab0 <line:1032:2, col:40> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x916b9e0 <col:2, col:10> '<dependent type>' lvalue
      (DeclRefExpr 0x916b9c8 <col:2> 'const ctype<_CharT>' lvalue Var 0x916b6e0 '__ctype' 'const ctype<_CharT> &'))
    (DeclRefExpr 0x916ba14 <col:16> 'char *' lvalue Var 0x916b060 '__cs' 'char *')
    (BinaryOperator 0x916ba80 <col:22, col:29> 'char *' '+'
      (ImplicitCastExpr 0x916ba60 <col:22> 'char *' <LValueToRValue>
        (DeclRefExpr 0x916ba2c <col:22> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
      (ImplicitCastExpr 0x916ba70 <col:29> 'int' <LValueToRValue>
        (DeclRefExpr 0x916ba44 <col:29> 'int' lvalue Var 0x916ad80 '__len' 'int')))
    (DeclRefExpr 0x916ba98 <col:36> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *'))
  (DeclStmt 0x916bb40 <line:1035:2, col:18>
    0x916baf0 "_CharT *__wp =
      (IntegerLiteral 0x916bb28 <col:17> 'int' 0)")
  (DeclStmt 0x916bd40 <line:1036:2, col:61>
    0x916bb60 "const char *__p =
      (CallExpr 0x916bcc8 <col:20, col:60> 'const char_type *'
        (ImplicitCastExpr 0x916bcb8 <col:20, col:39> 'const char_type *(*)(const char_type *, size_t, const char_type &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x916bc10 <col:20, col:39> 'const char_type *(const char_type *, size_t, const char_type &)' lvalue CXXMethod 0x8eb1d90 'find' 'const char_type *(const char_type *, size_t, const char_type &)'))
        (ImplicitCastExpr 0x916bd00 <col:44> 'const char_type *' <NoOp>
          (ImplicitCastExpr 0x916bcf0 <col:44> 'char *' <LValueToRValue>
            (DeclRefExpr 0x916bc30 <col:44> 'char *' lvalue Var 0x916b060 '__cs' 'char *')))
        (ImplicitCastExpr 0x916bd20 <col:50> 'size_t':'unsigned int' <IntegralCast>
          (ImplicitCastExpr 0x916bd10 <col:50> 'int' <LValueToRValue>
            (DeclRefExpr 0x916bc48 <col:50> 'int' lvalue Var 0x916ad80 '__len' 'int')))
        (MaterializeTemporaryExpr 0x916bd30 <col:57> 'const char_type':'const char' lvalue
          (CharacterLiteral 0x916bc60 <col:57> 'char'46)))")
  (IfStmt 0x916bf70 <line:1037:2, line:1041:4>
    <<<NULL>>>
    (ImplicitCastExpr 0x916bd78 <line:1037:6> '_Bool' <PointerToBoolean>
      (ImplicitCastExpr 0x916bd68 <col:6> 'const char *' <LValueToRValue>
        (DeclRefExpr 0x916bd50 <col:6> 'const char *' lvalue Var 0x916bb60 '__p' 'const char *')))
    (CompoundStmt 0x916bf58 <line:1038:4, line:1041:4>
      (BinaryOperator 0x916bea8 <line:1039:6, col:31> '<dependent type>' '='
        (DeclRefExpr 0x916bd84 <col:6> '_CharT *' lvalue Var 0x916baf0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x916be80 <col:13, col:31> '<dependent type>'
          (UnresolvedLookupExpr 0x916be38 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x916bd9c <col:13> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
          (ParenExpr 0x916be20 <col:20, col:31> 'int'
            (BinaryOperator 0x916be08 <col:21, col:27> 'int' '-'
              (ImplicitCastExpr 0x916bde8 <col:21> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x916bdb4 <col:21> 'const char *' lvalue Var 0x916bb60 '__p' 'const char *'))
              (ImplicitCastExpr 0x916bdf8 <col:27> 'char *' <LValueToRValue>
                (DeclRefExpr 0x916bdcc <col:27> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))))))
      (BinaryOperator 0x916bf40 <line:1040:6, col:20> '<dependent type>' '='
        (UnaryOperator 0x916bed8 <col:6, col:7> '<dependent type>' prefix '*'
          (DeclRefExpr 0x916bec0 <col:7> '_CharT *' lvalue Var 0x916baf0 '__wp' '_CharT *'))
        (CXXDependentScopeMemberExpr 0x916bf08 <col:14, col:20> '<dependent type>' lvalue
          (DeclRefExpr 0x916beec <col:14> 'const __cache_type *' lvalue Var 0x916a980 '__lc' 'const __cache_type *'))))
    <<<NULL>>>)
  (IfStmt 0x916cc70 <line:1046:2, line:1069:4>
    <<<NULL>>>
    (BinaryOperator 0x916c3d8 <line:1046:6, line:1048:47> '<dependent type>' '&&'
      (CXXDependentScopeMemberExpr 0x916bfa8 <line:1046:6, col:12> '<dependent type>' lvalue
        (DeclRefExpr 0x916bf8c <col:6> 'const __cache_type *' lvalue Var 0x916a980 '__lc' 'const __cache_type *'))
      (ParenExpr 0x916c3c0 <line:1047:9, line:1048:47> '<dependent type>'
        (BinaryOperator 0x916c3a8 <line:1047:10, line:1048:46> '<dependent type>' '||'
          (BinaryOperator 0x916c050 <line:1047:10, col:26> '<dependent type>' '||'
            (DeclRefExpr 0x916bfdc <col:10> '_CharT *' lvalue Var 0x916baf0 '__wp' '_CharT *')
            (BinaryOperator 0x916c038 <col:18, col:26> '_Bool' '<'
              (ImplicitCastExpr 0x916c028 <col:18> 'int' <LValueToRValue>
                (DeclRefExpr 0x916bff4 <col:18> 'int' lvalue Var 0x916ad80 '__len' 'int'))
              (IntegerLiteral 0x916c010 <col:26> 'int' 3)))
          (ParenExpr 0x916c390 <col:31, line:1048:46> '_Bool'
            (BinaryOperator 0x916c378 <line:1047:32, line:1048:43> '_Bool' '&&'
              (BinaryOperator 0x916c2a8 <line:1047:32, line:1048:25> '_Bool' '&&'
                (BinaryOperator 0x916c1d8 <line:1047:32, col:61> '_Bool' '&&'
                  (BinaryOperator 0x916c108 <col:32, col:43> '_Bool' '<='
                    (ImplicitCastExpr 0x916c0e8 <col:32, col:38> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x916c0d8 <col:32, col:38> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x916c0a8 <col:32, col:38> 'char' lvalue
                          (ImplicitCastExpr 0x916c098 <col:32> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x916c068 <col:32> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                          (IntegerLiteral 0x916c080 <col:37> 'int' 1))))
                    (ImplicitCastExpr 0x916c0f8 <col:43> 'int' <IntegralCast>
                      (CharacterLiteral 0x916c0c0 <col:43> 'char'57)))
                  (BinaryOperator 0x916c1c0 <col:50, col:61> '_Bool' '<='
                    (ImplicitCastExpr 0x916c1a0 <col:50, col:56> 'int' <IntegralCast>
                      (ImplicitCastExpr 0x916c190 <col:50, col:56> 'char' <LValueToRValue>
                        (ArraySubscriptExpr 0x916c160 <col:50, col:56> 'char' lvalue
                          (ImplicitCastExpr 0x916c150 <col:50> 'char *' <LValueToRValue>
                            (DeclRefExpr 0x916c120 <col:50> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                          (IntegerLiteral 0x916c138 <col:55> 'int' 2))))
                    (ImplicitCastExpr 0x916c1b0 <col:61> 'int' <IntegralCast>
                      (CharacterLiteral 0x916c178 <col:61> 'char'57))))
                (BinaryOperator 0x916c290 <line:1048:14, col:25> '_Bool' '>='
                  (ImplicitCastExpr 0x916c270 <col:14, col:20> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x916c260 <col:14, col:20> 'char' <LValueToRValue>
                      (ArraySubscriptExpr 0x916c230 <col:14, col:20> 'char' lvalue
                        (ImplicitCastExpr 0x916c220 <col:14> 'char *' <LValueToRValue>
                          (DeclRefExpr 0x916c1f0 <col:14> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                        (IntegerLiteral 0x916c208 <col:19> 'int' 1))))
                  (ImplicitCastExpr 0x916c280 <col:25> 'int' <IntegralCast>
                    (CharacterLiteral 0x916c248 <col:25> 'char'48))))
              (BinaryOperator 0x916c360 <col:32, col:43> '_Bool' '>='
                (ImplicitCastExpr 0x916c340 <col:32, col:38> 'int' <IntegralCast>
                  (ImplicitCastExpr 0x916c330 <col:32, col:38> 'char' <LValueToRValue>
                    (ArraySubscriptExpr 0x916c300 <col:32, col:38> 'char' lvalue
                      (ImplicitCastExpr 0x916c2f0 <col:32> 'char *' <LValueToRValue>
                        (DeclRefExpr 0x916c2c0 <col:32> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                      (IntegerLiteral 0x916c2d8 <col:37> 'int' 2))))
                (ImplicitCastExpr 0x916c350 <col:43> 'int' <IntegralCast>
                  (CharacterLiteral 0x916c318 <col:43> 'char'48))))))))
    (CompoundStmt 0x916cc48 <line:1049:4, line:1069:4>
      (DeclStmt 0x916c558 <line:1052:6, line:1053:24>
        0x916c400 "_CharT *__ws2 =
          (CXXStaticCastExpr 0x916c540 <line:1052:22, line:1053:23> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x916c510 <line:1052:43, line:1053:22> 'void *'
              (ImplicitCastExpr 0x916c500 <line:1052:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x916c434 <col:43> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x916c4e8 <col:60, line:1053:21> 'unsigned int' '*'
                (BinaryOperator 0x916c4a8 <line:1052:60, line:1053:13> 'unsigned int' '*'
                  (UnaryExprOrTypeTraitExpr 0x916c458 <line:1052:60, col:73> 'unsigned int' sizeof '_CharT')
                  (ImplicitCastExpr 0x916c498 <line:1053:13> 'unsigned int' <IntegralCast>
                    (ImplicitCastExpr 0x916c488 <col:13> 'int' <LValueToRValue>
                      (DeclRefExpr 0x916c470 <col:13> 'int' lvalue Var 0x916ad80 '__len' 'int'))))
                (ImplicitCastExpr 0x916c4d8 <col:21> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x916c4c0 <col:21> 'int' 2)))))")
      (DeclStmt 0x916c5c0 <line:1055:6, col:26>
        0x916c570 "streamsize __off =
          (IntegerLiteral 0x916c5a8 <col:25> 'int' 0)")
      (IfStmt 0x916c8b8 <line:1056:6, line:1061:8>
        <<<NULL>>>
        (BinaryOperator 0x916c740 <line:1056:10, col:39> '_Bool' '||'
          (BinaryOperator 0x916c670 <col:10, col:21> '_Bool' '=='
            (ImplicitCastExpr 0x916c650 <col:10, col:16> 'int' <IntegralCast>
              (ImplicitCastExpr 0x916c640 <col:10, col:16> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x916c610 <col:10, col:16> 'char' lvalue
                  (ImplicitCastExpr 0x916c600 <col:10> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x916c5d0 <col:10> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                  (IntegerLiteral 0x916c5e8 <col:15> 'int' 0))))
            (ImplicitCastExpr 0x916c660 <col:21> 'int' <IntegralCast>
              (CharacterLiteral 0x916c628 <col:21> 'char'45)))
          (BinaryOperator 0x916c728 <col:28, col:39> '_Bool' '=='
            (ImplicitCastExpr 0x916c708 <col:28, col:34> 'int' <IntegralCast>
              (ImplicitCastExpr 0x916c6f8 <col:28, col:34> 'char' <LValueToRValue>
                (ArraySubscriptExpr 0x916c6c8 <col:28, col:34> 'char' lvalue
                  (ImplicitCastExpr 0x916c6b8 <col:28> 'char *' <LValueToRValue>
                    (DeclRefExpr 0x916c688 <col:28> 'char *' lvalue Var 0x916b060 '__cs' 'char *'))
                  (IntegerLiteral 0x916c6a0 <col:33> 'int' 0))))
            (ImplicitCastExpr 0x916c718 <col:39> 'int' <IntegralCast>
              (CharacterLiteral 0x916c6e0 <col:39> 'char'43))))
        (CompoundStmt 0x916c898 <line:1057:8, line:1061:8>
          (BinaryOperator 0x916c788 <line:1058:3, col:11> 'streamsize':'int' lvalue '='
            (DeclRefExpr 0x916c758 <col:3> 'streamsize':'int' lvalue Var 0x916c570 '__off' 'streamsize':'int')
            (IntegerLiteral 0x916c770 <col:11> 'int' 1))
          (BinaryOperator 0x916c830 <line:1059:3, col:20> '<dependent type>' '='
            (ArraySubscriptExpr 0x916c7d0 <col:3, col:10> '<dependent type>' lvalue
              (DeclRefExpr 0x916c7a0 <col:3> '_CharT *' lvalue Var 0x916c400 '__ws2' '_CharT *')
              (IntegerLiteral 0x916c7b8 <col:9> 'int' 0))
            (ArraySubscriptExpr 0x916c818 <col:14, col:20> '<dependent type>' lvalue
              (DeclRefExpr 0x916c7e4 <col:14> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
              (IntegerLiteral 0x916c800 <col:19> 'int' 0)))
          (CompoundAssignOperator 0x916c878 <line:1060:3, col:12> 'int' lvalue '-=' ComputeLHSTy='int' ComputeResultTy='int'
            (DeclRefExpr 0x916c848 <col:3> 'int' lvalue Var 0x916ad80 '__len' 'int')
            (IntegerLiteral 0x916c860 <col:12> 'int' 1)))
        <<<NULL>>>)
      (CallExpr 0x916cb68 <line:1063:6, line:1065:26> '<dependent type>'
        (MemberExpr 0x916c8e8 <line:1063:6> '<bound member function type>' ->_M_group_float 0x91698c0
          (CXXThisExpr 0x916c8d8 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (CXXDependentScopeMemberExpr 0x916c920 <col:21, col:27> '<dependent type>' lvalue
          (DeclRefExpr 0x916c908 <col:21> 'const __cache_type *' lvalue Var 0x916a980 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x916c970 <col:40, col:46> '<dependent type>' lvalue
          (DeclRefExpr 0x916c954 <col:40> 'const __cache_type *' lvalue Var 0x916a980 '__lc' 'const __cache_type *'))
        (CXXDependentScopeMemberExpr 0x916c9c0 <line:1064:7, col:13> '<dependent type>' lvalue
          (DeclRefExpr 0x916c9a4 <col:7> 'const __cache_type *' lvalue Var 0x916a980 '__lc' 'const __cache_type *'))
        (DeclRefExpr 0x916c9f4 <col:31> '_CharT *' lvalue Var 0x916baf0 '__wp' '_CharT *')
        (CXXOperatorCallExpr 0x916ca88 <col:37, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x916ca40 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x916ca0c <col:37> '_CharT *' lvalue Var 0x916c400 '__ws2' '_CharT *')
          (DeclRefExpr 0x916ca24 <col:45> 'streamsize':'int' lvalue Var 0x916c570 '__off' 'streamsize':'int'))
        (CXXOperatorCallExpr 0x916cb28 <line:1065:7, col:14> '<dependent type>'
          (UnresolvedLookupExpr 0x916cae0 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x916caac <col:7> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
          (DeclRefExpr 0x916cac4 <col:14> 'streamsize':'int' lvalue Var 0x916c570 '__off' 'streamsize':'int'))
        (DeclRefExpr 0x916cb4c <col:21> 'int' lvalue Var 0x916ad80 '__len' 'int'))
      (CompoundAssignOperator 0x916cbe0 <line:1066:6, col:15> 'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x916cba0 <col:6> 'int' lvalue Var 0x916ad80 '__len' 'int')
        (ImplicitCastExpr 0x916cbd0 <col:15> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x916cbb8 <col:15> 'streamsize':'int' lvalue Var 0x916c570 '__off' 'streamsize':'int')))
      (BinaryOperator 0x916cc30 <line:1068:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x916cc00 <col:6> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
        (DeclRefExpr 0x916cc18 <col:13> '_CharT *' lvalue Var 0x916c400 '__ws2' '_CharT *')))
    <<<NULL>>>)
  (DeclStmt 0x916cd80 <line:1072:2, col:37>
    0x916cca0 "const streamsize __w =
      (CXXMemberCallExpr 0x916cd50 <col:25, col:36> 'streamsize':'int'
        (MemberExpr 0x916cd2c <col:25, col:30> '<bound member function type>' .width 0x90ae070
          (ImplicitCastExpr 0x916cd70 <col:25> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x916ccd4 <col:25> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x916d0b8 <line:1073:2, line:1079:4>
    <<<NULL>>>
    (BinaryOperator 0x916ce00 <line:1073:6, col:41> '_Bool' '>'
      (ImplicitCastExpr 0x916cdf0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x916cd90 <col:6> 'const streamsize':'const int' lvalue Var 0x916cca0 '__w' 'const streamsize':'const int'))
      (CXXStaticCastExpr 0x916cdd8 <col:12, col:41> 'streamsize':'int' static_cast<streamsize> <NoOp>
        (ImplicitCastExpr 0x916cdc8 <col:36> 'int' <LValueToRValue>
          (DeclRefExpr 0x916cda8 <col:36> 'int' lvalue Var 0x916ad80 '__len' 'int'))))
    (CompoundStmt 0x916d098 <line:1074:4, line:1079:4>
      (DeclStmt 0x916cf48 <line:1075:6, line:1076:18>
        0x916ce30 "_CharT *__ws3 =
          (CXXStaticCastExpr 0x916cf30 <line:1075:22, line:1076:17> '_CharT *' static_cast<_CharT *> <Dependent>
            (CallExpr 0x916cf00 <line:1075:43, line:1076:16> 'void *'
              (ImplicitCastExpr 0x916cef0 <line:1075:43> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x916ce64 <col:43> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
              (BinaryOperator 0x916ced8 <col:60, line:1076:13> 'unsigned int' '*'
                (UnaryExprOrTypeTraitExpr 0x916ce88 <line:1075:60, col:73> 'unsigned int' sizeof '_CharT')
                (ImplicitCastExpr 0x916cec8 <line:1076:13> 'unsigned int' <IntegralCast>
                  (ImplicitCastExpr 0x916ceb8 <col:13> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x916cea0 <col:13> 'const streamsize':'const int' lvalue Var 0x916cca0 '__w' 'const streamsize':'const int'))))))")
      (CallExpr 0x916d018 <line:1077:6, col:50> '<dependent type>'
        (MemberExpr 0x916cf68 <col:6> '<bound member function type>' ->_M_pad 0x9162690
          (CXXThisExpr 0x916cf58 <col:6> 'const num_put<_CharT, _OutIter> *' this))
        (DeclRefExpr 0x916cf88 <col:13> '_CharT' lvalue ParmVar 0x916a450 '__fill' '_CharT')
        (DeclRefExpr 0x916cfa0 <col:21> 'const streamsize':'const int' lvalue Var 0x916cca0 '__w' 'const streamsize':'const int')
        (DeclRefExpr 0x916cfb8 <col:26> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &')
        (DeclRefExpr 0x916cfd0 <col:32> '_CharT *' lvalue Var 0x916ce30 '__ws3' '_CharT *')
        (DeclRefExpr 0x916cfe8 <col:39> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
        (DeclRefExpr 0x916d000 <col:45> 'int' lvalue Var 0x916ad80 '__len' 'int'))
      (BinaryOperator 0x916d080 <line:1078:6, col:13> '<dependent type>' '='
        (DeclRefExpr 0x916d04c <col:6> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
        (DeclRefExpr 0x916d064 <col:13> '_CharT *' lvalue Var 0x916ce30 '__ws3' '_CharT *')))
    <<<NULL>>>)
  (CXXMemberCallExpr 0x916d168 <line:1080:2, col:14> 'streamsize':'int'
    (MemberExpr 0x916d148 <col:2, col:7> '<bound member function type>' .width 0x90ae130
      (DeclRefExpr 0x916d0d4 <col:2> 'class std::ios_base' lvalue ParmVar 0x916a410 '__io' 'class std::ios_base &'))
    (IntegerLiteral 0x916d130 <col:13> 'int' 0))
  (ReturnStmt 0x916d248 <line:1084:2, col:38>
    (CallExpr 0x916d220 <col:9, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x916d1a0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
      (DeclRefExpr 0x916d1d8 <col:22> '_OutIter' lvalue ParmVar 0x916a3c0 '__s' '_OutIter')
      (DeclRefExpr 0x916d1f0 <col:27> '_CharT *' lvalue Var 0x916b8a0 '__ws' '_CharT *')
      (DeclRefExpr 0x916d208 <col:33> 'int' lvalue Var 0x916ad80 '__len' 'int'))))

;
    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, bool __v) const (CompoundStmt 0x916fbd0 </usr/include/c++/4.6/bits/locale_facets.tcc:1091:5, line:1137:5>
  (DeclStmt 0x916e4e0 <line:1092:7, col:54>
    0x916e400 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x916e4b0 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x916e48c <col:42, col:47> '<bound member function type>' .flags 0x90ada50
          (ImplicitCastExpr 0x916e4d0 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x916e434 <col:42> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &'))))")
  (IfStmt 0x916fb88 <line:1093:7, line:1135:2>
    <<<NULL>>>
    (BinaryOperator 0x916e5f8 <line:1093:11, col:46> '_Bool' '=='
      (ImplicitCastExpr 0x916e5e8 <col:11, col:41> 'int' <IntegralCast>
        (ParenExpr 0x916e5b8 <col:11, col:41> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x916e590 <col:12, col:32> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x916e580 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x916e568 <col:20, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x916e548 <col:12> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x916e4f0 <col:12> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x916e400 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x916e558 <col:22, col:32> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x916e524 <col:22, col:32> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6520 'boolalpha' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
      (IntegerLiteral 0x916e5d0 <col:46> 'int' 0))
    (CompoundStmt 0x916e7b0 <line:1094:9, line:1097:9>
      (DeclStmt 0x916e690 <line:1095:11, col:31>
        0x916e620 "const long __l =
          (ImplicitCastExpr 0x916e680 <col:28> 'const long' <IntegralCast>
            (ImplicitCastExpr 0x916e670 <col:28> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x916e654 <col:28> '_Bool' lvalue ParmVar 0x916d640 '__v' '_Bool')))")
      (BinaryOperator 0x916e798 <line:1096:11, col:53> '<dependent type>' '='
        (DeclRefExpr 0x916e6a0 <col:11> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x916e768 <col:17, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x916e6c8 <col:17> '<bound member function type>' lvalue)
          (DeclRefExpr 0x916e704 <col:31> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x916e71c <col:36> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &')
          (DeclRefExpr 0x916e734 <col:42> 'char_type':'_CharT' lvalue ParmVar 0x916d600 '__fill' 'char_type':'_CharT')
          (DeclRefExpr 0x916e74c <col:50> 'const long' lvalue Var 0x916e620 '__l' 'const long'))))
    (CompoundStmt 0x916fb50 <line:1099:9, line:1135:2>
      (DeclStmt 0x916e8a0 <line:1100:4, col:62>
        0x916e870 "typedef __numpunct_cache<_CharT> __cache_type")
      (DeclStmt 0x916e9a8 <line:1101:4, col:34>
        0x916e970 "__use_cache<__cache_type> __uc")
      (DeclStmt 0x916ea70 <line:1102:4, col:42>
        0x916e9d0 "const std::locale &__loc =
          (CXXMemberCallExpr 0x916ea40 <col:26, col:41> 'const class std::locale' lvalue
            (MemberExpr 0x916ea1c <col:26, col:31> '<bound member function type>' ._M_getloc 0x90ae450
              (ImplicitCastExpr 0x916ea60 <col:26> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x916ea04 <col:26> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x916eb38 <line:1103:4, col:42>
        0x916eab0 "const __cache_type *__lc =
          (CallExpr 0x916eb18 <col:31, col:41> '<dependent type>'
            (DeclRefExpr 0x916eae4 <col:31> '__use_cache<__cache_type>' lvalue Var 0x916e970 '__uc' '__use_cache<__cache_type>')
            (DeclRefExpr 0x916eafc <col:36> 'const class std::locale' lvalue Var 0x916e9d0 '__loc' 'const class std::locale &'))")
      (DeclStmt 0x916eca0 <line:1105:4, line:1106:51>
        0x916eb80 "const _CharT *__name =
          (ConditionalOperator 0x916ec80 <line:1105:27, line:1106:39> '<dependent type>'
            (ImplicitCastExpr 0x916ec70 <line:1105:27> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x916ebb4 <col:27> '_Bool' lvalue ParmVar 0x916d640 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x916ebe8 <col:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x916ebcc <col:33> 'const __cache_type *' lvalue Var 0x916eab0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x916ec38 <line:1106:33, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x916ec1c <col:33> 'const __cache_type *' lvalue Var 0x916eab0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x916ede0 <line:1107:4, line:1108:45>
        0x916ecc0 "int __len =
          (ConditionalOperator 0x916edc0 <line:1107:16, line:1108:28> '<dependent type>'
            (ImplicitCastExpr 0x916edb0 <line:1107:16> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x916ecf4 <col:16> '_Bool' lvalue ParmVar 0x916d640 '__v' '_Bool'))
            (CXXDependentScopeMemberExpr 0x916ed28 <col:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x916ed0c <col:22> 'const __cache_type *' lvalue Var 0x916eab0 '__lc' 'const __cache_type *'))
            (CXXDependentScopeMemberExpr 0x916ed78 <line:1108:22, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x916ed5c <col:22> 'const __cache_type *' lvalue Var 0x916eab0 '__lc' 'const __cache_type *')))")
      (DeclStmt 0x916eee0 <line:1110:4, col:39>
        0x916ee00 "const streamsize __w =
          (CXXMemberCallExpr 0x916eeb0 <col:27, col:38> 'streamsize':'int'
            (MemberExpr 0x916ee8c <col:27, col:32> '<bound member function type>' .width 0x90ae070
              (ImplicitCastExpr 0x916eed0 <col:27> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x916ee34 <col:27> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &'))))")
      (IfStmt 0x916f990 <line:1111:4, line:1132:6>
        <<<NULL>>>
        (BinaryOperator 0x916ef60 <line:1111:8, col:43> '_Bool' '>'
          (ImplicitCastExpr 0x916ef50 <col:8> 'streamsize':'int' <LValueToRValue>
            (DeclRefExpr 0x916eef0 <col:8> 'const streamsize':'const int' lvalue Var 0x916ee00 '__w' 'const streamsize':'const int'))
          (CXXStaticCastExpr 0x916ef38 <col:14, col:43> 'streamsize':'int' static_cast<streamsize> <NoOp>
            (ImplicitCastExpr 0x916ef28 <col:38> 'int' <LValueToRValue>
              (DeclRefExpr 0x916ef08 <col:38> 'int' lvalue Var 0x916ecc0 '__len' 'int'))))
        (CompoundStmt 0x916f968 <line:1112:6, line:1132:6>
          (DeclStmt 0x916f020 <line:1113:8, col:45>
            0x916ef80 "const streamsize __plen =
              (BinaryOperator 0x916f008 <col:34, col:40> 'int' '-'
                (ImplicitCastExpr 0x916efe8 <col:34> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x916efb4 <col:34> 'const streamsize':'const int' lvalue Var 0x916ee00 '__w' 'const streamsize':'const int'))
                (ImplicitCastExpr 0x916eff8 <col:40> 'int' <LValueToRValue>
                  (DeclRefExpr 0x916efcc <col:40> 'int' lvalue Var 0x916ecc0 '__len' 'int')))")
          (DeclStmt 0x916f178 <line:1114:8, line:1116:18>
            0x916f060 "_CharT *__ps =
              (CXXStaticCastExpr 0x916f160 <line:1115:5, line:1116:17> '_CharT *' static_cast<_CharT *> <Dependent>
                (CallExpr 0x916f130 <line:1115:26, line:1116:16> 'void *'
                  (ImplicitCastExpr 0x916f120 <line:1115:26> 'void *(*)(unsigned int)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x916f094 <col:26> 'void *(unsigned int)' lvalue Function 0x9167090 '__builtin_alloca' 'void *(unsigned int)'))
                  (BinaryOperator 0x916f108 <col:43, line:1116:10> 'unsigned int' '*'
                    (UnaryExprOrTypeTraitExpr 0x916f0b8 <line:1115:43, col:56> 'unsigned int' sizeof '_CharT')
                    (ImplicitCastExpr 0x916f0f8 <line:1116:10> 'unsigned int' <IntegralCast>
                      (ImplicitCastExpr 0x916f0e8 <col:10> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x916f0d0 <col:10> 'const streamsize':'const int' lvalue Var 0x916ef80 '__plen' 'const streamsize':'const int'))))))")
          (CallExpr 0x916f2c0 <line:1118:8, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x916f240 <col:8, col:29> '<dependent type>' lvalue)
            (DeclRefExpr 0x916f274 <col:36> '_CharT *' lvalue Var 0x916f060 '__ps' '_CharT *')
            (DeclRefExpr 0x916f28c <col:42> 'const streamsize':'const int' lvalue Var 0x916ef80 '__plen' 'const streamsize':'const int')
            (DeclRefExpr 0x916f2a4 <col:50> 'char_type':'_CharT' lvalue ParmVar 0x916d600 '__fill' 'char_type':'_CharT'))
          (CXXMemberCallExpr 0x916f378 <line:1119:8, col:20> 'streamsize':'int'
            (MemberExpr 0x916f358 <col:8, col:13> '<bound member function type>' .width 0x90ae130
              (DeclRefExpr 0x916f2e8 <col:8> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &'))
            (IntegerLiteral 0x916f340 <col:19> 'int' 0))
          (IfStmt 0x916f920 <line:1121:8, line:1130:3>
            <<<NULL>>>
            (BinaryOperator 0x916f4e8 <line:1121:12, col:59> '_Bool' '=='
              (ImplicitCastExpr 0x916f4c8 <col:12, col:44> 'int' <IntegralCast>
                (ParenExpr 0x916f460 <col:12, col:44> 'enum std::_Ios_Fmtflags'
                  (CXXOperatorCallExpr 0x916f438 <col:13, col:33> 'enum std::_Ios_Fmtflags'
                    (ImplicitCastExpr 0x916f428 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
                      (DeclRefExpr 0x916f410 <col:21, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
                    (ImplicitCastExpr 0x916f3f0 <col:13> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x916f398 <col:13> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x916e400 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
                    (ImplicitCastExpr 0x916f400 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                      (DeclRefExpr 0x916f3cc <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6ac0 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
              (ImplicitCastExpr 0x916f4d8 <col:49, col:59> 'int' <IntegralCast>
                (ImplicitCastExpr 0x916f4b8 <col:49, col:59> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
                  (DeclRefExpr 0x916f494 <col:49, col:59> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6700 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
            (CompoundStmt 0x916f710 <line:1122:3, line:1125:3>
              (BinaryOperator 0x916f608 <line:1123:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x916f52c <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x916f5e0 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x916f560 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
                  (DeclRefExpr 0x916f598 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x916f5b0 <col:29> 'const _CharT *' lvalue Var 0x916eb80 '__name' 'const _CharT *')
                  (DeclRefExpr 0x916f5c8 <col:37> 'int' lvalue Var 0x916ecc0 '__len' 'int')))
              (BinaryOperator 0x916f6f8 <line:1124:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x916f620 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x916f6d0 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x916f650 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
                  (DeclRefExpr 0x916f688 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x916f6a0 <col:29> '_CharT *' lvalue Var 0x916f060 '__ps' '_CharT *')
                  (DeclRefExpr 0x916f6b8 <col:35> 'const streamsize':'const int' lvalue Var 0x916ef80 '__plen' 'const streamsize':'const int'))))
            (CompoundStmt 0x916f908 <line:1127:3, line:1130:3>
              (BinaryOperator 0x916f800 <line:1128:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x916f728 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x916f7d8 <col:11, col:41> '<dependent type>'
                  (UnresolvedLookupExpr 0x916f758 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
                  (DeclRefExpr 0x916f790 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x916f7a8 <col:29> '_CharT *' lvalue Var 0x916f060 '__ps' '_CharT *')
                  (DeclRefExpr 0x916f7c0 <col:35> 'const streamsize':'const int' lvalue Var 0x916ef80 '__plen' 'const streamsize':'const int')))
              (BinaryOperator 0x916f8f0 <line:1129:5, col:42> '<dependent type>' '='
                (DeclRefExpr 0x916f818 <col:5> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                (CallExpr 0x916f8c8 <col:11, col:42> '<dependent type>'
                  (UnresolvedLookupExpr 0x916f848 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
                  (DeclRefExpr 0x916f880 <col:24> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
                  (DeclRefExpr 0x916f898 <col:29> 'const _CharT *' lvalue Var 0x916eb80 '__name' 'const _CharT *')
                  (DeclRefExpr 0x916f8b0 <col:37> 'int' lvalue Var 0x916ecc0 '__len' 'int')))))
          (ReturnStmt 0x916f958 <line:1131:8, col:15>
            (DeclRefExpr 0x916f93c <col:15> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')))
        <<<NULL>>>)
      (CXXMemberCallExpr 0x916fa40 <line:1133:4, col:16> 'streamsize':'int'
        (MemberExpr 0x916fa20 <col:4, col:9> '<bound member function type>' .width 0x90ae130
          (DeclRefExpr 0x916f9ac <col:4> 'class std::ios_base' lvalue ParmVar 0x916d5c0 '__io' 'class std::ios_base &'))
        (IntegerLiteral 0x916fa08 <col:15> 'int' 0))
      (BinaryOperator 0x916fb38 <line:1134:4, col:41> '<dependent type>' '='
        (DeclRefExpr 0x916fa60 <col:4> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
        (CallExpr 0x916fb10 <col:10, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x916fa90 <col:10, col:15> '<overloaded function type>' lvalue (no ADL) = '1' 0x9117fa0 0x9118360)
          (DeclRefExpr 0x916fac8 <col:23> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')
          (DeclRefExpr 0x916fae0 <col:28> 'const _CharT *' lvalue Var 0x916eb80 '__name' 'const _CharT *')
          (DeclRefExpr 0x916faf8 <col:36> 'int' lvalue Var 0x916ecc0 '__len' 'int')))))
  (ReturnStmt 0x916fbc0 <line:1136:7, col:14>
    (DeclRefExpr 0x916fba4 <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x916d570 '__s' 'iter_type':'_OutIter')))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, double __v) const (CompoundStmt 0x91701b8 </usr/include/c++/4.6/bits/locale_facets.tcc:1143:5, col:63>
  (ReturnStmt 0x91701a8 <col:7, col:60>
    (CallExpr 0x9170178 <col:14, col:60> '<dependent type>'
      (UnresolvedMemberExpr 0x91700c0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91700fc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x916fe90 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x9170114 <col:35> 'class std::ios_base' lvalue ParmVar 0x916fee0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x917012c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x916ff20 '__fill' 'char_type':'_CharT')
      (CXXScalarValueInitExpr 0x9170150 <col:49, col:54> 'char')
      (DeclRefExpr 0x9170160 <col:57> 'double' lvalue ParmVar 0x916ff70 '__v' 'double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, long double __v) const (CompoundStmt 0x9170798 </usr/include/c++/4.6/bits/locale_facets.tcc:1158:5, col:60>
  (ReturnStmt 0x9170788 <col:7, col:57>
    (CallExpr 0x9170758 <col:14, col:57> '<dependent type>'
      (UnresolvedMemberExpr 0x91706a0 <col:14> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91706dc <col:30> 'iter_type':'_OutIter' lvalue ParmVar 0x9170470 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x91706f4 <col:35> 'class std::ios_base' lvalue ParmVar 0x91704c0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x917070c <col:41> 'char_type':'_CharT' lvalue ParmVar 0x9170500 '__fill' 'char_type':'_CharT')
      (CharacterLiteral 0x9170728 <col:49> 'char'76)
      (DeclRefExpr 0x917073c <col:54> 'long double' lvalue ParmVar 0x9170550 '__v' 'long double'))))


    _OutIter do_put(iter_type __s, std::ios_base &__io, char_type __fill, const void *__v) const (CompoundStmt 0x9171628 </usr/include/c++/4.6/bits/locale_facets.tcc:1165:5, line:1179:5>
  (DeclStmt 0x9170d80 <line:1166:7, col:54>
    0x9170ca0 "const ios_base::fmtflags __flags =
      (CXXMemberCallExpr 0x9170d50 <col:42, col:53> 'fmtflags':'enum std::_Ios_Fmtflags'
        (MemberExpr 0x9170d2c <col:42, col:47> '<bound member function type>' .flags 0x90ada50
          (ImplicitCastExpr 0x9170d70 <col:42> 'const class std::ios_base' lvalue <NoOp>
            (DeclRefExpr 0x9170cd4 <col:42> 'class std::ios_base' lvalue ParmVar 0x9170aa0 '__io' 'class std::ios_base &'))))")
  (DeclStmt 0x9170f50 <line:1167:7, line:1168:29>
    0x9170dc0 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x9170f30 <line:1167:40, line:1168:28> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9170f20 <<invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9170f08 <<invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)' lvalue Function 0x90a63f0 'operator~' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags)'))
        (ParenExpr 0x9170ef0 <line:1167:41, line:1168:28> 'enum std::_Ios_Fmtflags'
          (CXXOperatorCallExpr 0x9170ec8 <line:1167:42, line:1168:19> 'enum std::_Ios_Fmtflags'
            (ImplicitCastExpr 0x9170eb8 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
              (DeclRefExpr 0x9170ea0 <col:7, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5fb0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
            (ImplicitCastExpr 0x9170e80 <line:1167:42, col:52> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9170e20 <col:42, col:52> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
            (ImplicitCastExpr 0x9170e90 <line:1168:9, col:19> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
              (DeclRefExpr 0x9170e5c <col:9, col:19> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a60 'uppercase' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))")
  (CXXMemberCallExpr 0x91711f0 <line:1169:7, col:74> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x91711cc <col:7, col:12> '<bound member function type>' .flags 0x90adb40
      (DeclRefExpr 0x9170f60 <col:7> 'class std::ios_base' lvalue ParmVar 0x9170aa0 '__io' 'class std::ios_base &'))
    (CXXOperatorCallExpr 0x91711a8 <col:18, col:73> 'enum std::_Ios_Fmtflags'
      (ImplicitCastExpr 0x9171198 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9171180 <col:36, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5fb0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
      (ParenExpr 0x9171058 <col:18, col:34> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9171030 <col:19, col:29> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9171020 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9171008 <col:27, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x9170fe8 <col:19> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9170fb8 <col:19> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9170ca0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9170ff8 <col:29> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9170fd0 <col:29> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9170dc0 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags'))))
      (ParenExpr 0x9171168 <col:38, col:73> 'enum std::_Ios_Fmtflags'
        (CXXOperatorCallExpr 0x9171140 <col:39, col:65> 'enum std::_Ios_Fmtflags'
          (ImplicitCastExpr 0x9171130 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9171118 <col:53, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5fb0 'operator|' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
          (ImplicitCastExpr 0x91710f8 <col:39, col:49> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x9171098 <col:39, col:49> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags'))
          (ImplicitCastExpr 0x9171108 <col:55, col:65> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91710d4 <col:55, col:65> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6880 'showbase' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))))
  (DeclStmt 0x91713e0 <line:1171:7, line:1173:57>
    0x91713b0 "typedef __gnu_cxx::__conditional_type<(sizeof(const void *) <= sizeof(unsigned long)), unsigned long, unsigned long long>::__type _UIntPtrType")
  (BinaryOperator 0x9171528 <line:1175:7, line:1176:41> '<dependent type>' '='
    (DeclRefExpr 0x91713f0 <line:1175:7> 'iter_type':'_OutIter' lvalue ParmVar 0x9170a50 '__s' 'iter_type':'_OutIter')
    (CallExpr 0x91714f8 <col:13, line:1176:41> '<dependent type>'
      (UnresolvedMemberExpr 0x9171418 <line:1175:13> '<bound member function type>' lvalue)
      (DeclRefExpr 0x9171454 <col:27> 'iter_type':'_OutIter' lvalue ParmVar 0x9170a50 '__s' 'iter_type':'_OutIter')
      (DeclRefExpr 0x917146c <col:32> 'class std::ios_base' lvalue ParmVar 0x9170aa0 '__io' 'class std::ios_base &')
      (DeclRefExpr 0x9171484 <col:38> 'char_type':'_CharT' lvalue ParmVar 0x9170ae0 '__fill' 'char_type':'_CharT')
      (CXXReinterpretCastExpr 0x91714e0 <line:1176:6, col:40> '_UIntPtrType':'unsigned long' reinterpret_cast<_UIntPtrType> <PointerToIntegral>
        (ImplicitCastExpr 0x91714d0 <col:37> 'const void *' <LValueToRValue>
          (DeclRefExpr 0x91714b0 <col:37> 'const void *' lvalue ParmVar 0x9170b30 '__v' 'const void *')))))
  (CXXMemberCallExpr 0x91715d0 <line:1177:7, col:25> 'fmtflags':'enum std::_Ios_Fmtflags'
    (MemberExpr 0x91715b0 <col:7, col:12> '<bound member function type>' .flags 0x90adb40
      (DeclRefExpr 0x9171540 <col:7> 'class std::ios_base' lvalue ParmVar 0x9170aa0 '__io' 'class std::ios_base &'))
    (ImplicitCastExpr 0x91715f0 <col:18> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
      (DeclRefExpr 0x9171598 <col:18> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9170ca0 '__flags' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
  (ReturnStmt 0x9171618 <line:1178:7, col:14>
    (DeclRefExpr 0x91715fc <col:14> 'iter_type':'_OutIter' lvalue ParmVar 0x9170a50 '__s' 'iter_type':'_OutIter')))


    static void _S_pad(std::ios_base &__io, _CharT __fill, _CharT *__news, const _CharT *__olds, streamsize __newlen, streamsize __oldlen) (CompoundStmt 0x91734b0 </usr/include/c++/4.6/bits/locale_facets.tcc:1195:5, line:1237:5>
  (DeclStmt 0x9171cc0 <line:1196:7, col:69>
    0x9171bf0 "const size_t __plen =
      (CXXStaticCastExpr 0x9171ca8 <col:29, col:68> 'size_t':'unsigned int' static_cast<size_t> <NoOp>
        (ImplicitCastExpr 0x9171c98 <col:49, col:60> 'size_t':'unsigned int' <IntegralCast>
          (BinaryOperator 0x9171c78 <col:49, col:60> 'int' '-'
            (ImplicitCastExpr 0x9171c58 <col:49> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9171c24 <col:49> 'streamsize':'int' lvalue ParmVar 0x9171a60 '__newlen' 'streamsize':'int'))
            (ImplicitCastExpr 0x9171c68 <col:60> 'streamsize':'int' <LValueToRValue>
              (DeclRefExpr 0x9171c3c <col:60> 'streamsize':'int' lvalue ParmVar 0x9171aa0 '__oldlen' 'streamsize':'int')))))")
  (DeclStmt 0x9171e80 <line:1197:7, col:79>
    0x9171d00 "const ios_base::fmtflags __adjust =
      (CXXOperatorCallExpr 0x9171e58 <col:43, col:68> 'enum std::_Ios_Fmtflags'
        (ImplicitCastExpr 0x9171e48 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (*)(enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9171e30 <col:56, <invalid sloc>> 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)' lvalue Function 0x90a5d80 'operator&' 'enum std::_Ios_Fmtflags (enum std::_Ios_Fmtflags, enum std::_Ios_Fmtflags)'))
        (CXXMemberCallExpr 0x9171db0 <col:43, col:54> 'fmtflags':'enum std::_Ios_Fmtflags'
          (MemberExpr 0x9171d8c <col:43, col:48> '<bound member function type>' .flags 0x90ada50
            (ImplicitCastExpr 0x9171dd0 <col:43> 'const class std::ios_base' lvalue <NoOp>
              (DeclRefExpr 0x9171d34 <col:43> 'class std::ios_base' lvalue ParmVar 0x9171900 '__io' 'class std::ios_base &'))))
        (ImplicitCastExpr 0x9171e20 <col:58, col:68> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9171dfc <col:58, col:68> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6ac0 'adjustfield' 'const fmtflags':'const enum std::_Ios_Fmtflags')))")
  (IfStmt 0x91721b8 <line:1200:7, line:1205:2>
    <<<NULL>>>
    (BinaryOperator 0x9171f28 <line:1200:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x9171f08 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9171ee8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9171e90 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9171d00 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x9171f18 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x9171ef8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9171ec4 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6700 'left' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9172198 <line:1201:2, line:1205:2>
      (CallExpr 0x9172018 <line:1202:4, col:42> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9171fa8 <col:4, col:13> '<dependent type>' lvalue)
        (DeclRefExpr 0x9171fcc <col:18> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
        (DeclRefExpr 0x9171fe4 <col:26> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
        (DeclRefExpr 0x9171ffc <col:34> 'streamsize':'int' lvalue ParmVar 0x9171aa0 '__oldlen' 'streamsize':'int'))
      (CallExpr 0x9172160 <line:1203:4, col:53> '<dependent type>'
        (DependentScopeDeclRefExpr 0x9172068 <col:4, col:13> '<dependent type>' lvalue)
        (CXXOperatorCallExpr 0x9172108 <col:20, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x91720c0 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (DeclRefExpr 0x917208c <col:20> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
          (DeclRefExpr 0x91720a4 <col:29> 'streamsize':'int' lvalue ParmVar 0x9171aa0 '__oldlen' 'streamsize':'int'))
        (DeclRefExpr 0x917212c <col:39> 'const size_t':'const unsigned int' lvalue Var 0x9171bf0 '__plen' 'const size_t':'const unsigned int')
        (DeclRefExpr 0x9172144 <col:47> '_CharT' lvalue ParmVar 0x9171940 '__fill' '_CharT'))
      (ReturnStmt 0x9172188 <line:1204:4>))
    <<<NULL>>>)
  (DeclStmt 0x9172240 <line:1207:7, col:23>
    0x91721e0 "size_t __mod =
      (ImplicitCastExpr 0x9172230 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9172218 <col:22> 'int' 0))")
  (IfStmt 0x91731a0 <line:1208:7, line:1234:2>
    <<<NULL>>>
    (BinaryOperator 0x91722e8 <line:1208:11, col:33> '_Bool' '=='
      (ImplicitCastExpr 0x91722c8 <col:11> 'int' <IntegralCast>
        (ImplicitCastExpr 0x91722a8 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9172250 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x9171d00 '__adjust' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
      (ImplicitCastExpr 0x91722d8 <col:23, col:33> 'int' <IntegralCast>
        (ImplicitCastExpr 0x91722b8 <col:23, col:33> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
          (DeclRefExpr 0x9172284 <col:23, col:33> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b66a0 'internal' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
    (CompoundStmt 0x9173180 <line:1209:2, line:1234:2>
      (DeclStmt 0x91723e0 <line:1213:11, col:49>
        0x9172340 "const std::locale &__loc =
          (CXXMemberCallExpr 0x91723b0 <col:33, col:48> 'const class std::locale' lvalue
            (MemberExpr 0x917238c <col:33, col:38> '<bound member function type>' ._M_getloc 0x90ae450
              (ImplicitCastExpr 0x91723d0 <col:33> 'const class std::ios_base' lvalue <NoOp>
                (DeclRefExpr 0x9172374 <col:33> 'class std::ios_base' lvalue ParmVar 0x9171900 '__io' 'class std::ios_base &'))))")
      (DeclStmt 0x9172640 <line:1214:4, col:67>
        0x91724c0 "const ctype<_CharT> &__ctype =
          (CallExpr 0x9172620 <col:35, col:66> '<dependent type>'
            (UnresolvedLookupExpr 0x91725a0 <col:35, col:59> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
            (DeclRefExpr 0x9172608 <col:61> 'const class std::locale' lvalue Var 0x9172340 '__loc' 'const class std::locale &'))")
      (IfStmt 0x9173160 <line:1216:4, line:1232:6>
        <<<NULL>>>
        (BinaryOperator 0x9172900 <line:1216:8, line:1217:41> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9172780 <line:1216:8, col:38> '<dependent type>'
            (UnresolvedLookupExpr 0x9172720 <col:27, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CallExpr 0x91726b8 <col:8, col:25> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9172668 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9172650 <col:8> 'const ctype<_CharT>' lvalue Var 0x91724c0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x91726a0 <col:22> 'char'45))
            (ArraySubscriptExpr 0x9172708 <col:30, col:38> '<dependent type>' lvalue
              (DeclRefExpr 0x91726d8 <col:30> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x91726f0 <col:37> 'int' 0)))
          (CXXOperatorCallExpr 0x91728d8 <line:1217:11, col:41> '<dependent type>'
            (UnresolvedLookupExpr 0x9172878 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CallExpr 0x9172810 <col:11, col:28> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91727c0 <col:11, col:19> '<dependent type>' lvalue
                (DeclRefExpr 0x91727a4 <col:11> 'const ctype<_CharT>' lvalue Var 0x91724c0 '__ctype' 'const ctype<_CharT> &'))
              (CharacterLiteral 0x91727f8 <col:25> 'char'43))
            (ArraySubscriptExpr 0x9172860 <col:33, col:41> '<dependent type>' lvalue
              (DeclRefExpr 0x9172830 <col:33> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9172848 <col:40> 'int' 0))))
        (CompoundStmt 0x9172a48 <line:1218:6, line:1222:6>
          (BinaryOperator 0x91729a8 <line:1219:8, col:28> '<dependent type>' '='
            (ArraySubscriptExpr 0x9172948 <col:8, col:16> '<dependent type>' lvalue
              (DeclRefExpr 0x9172918 <col:8> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
              (IntegerLiteral 0x9172930 <col:15> 'int' 0))
            (ArraySubscriptExpr 0x9172990 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x917295c <col:20> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
              (IntegerLiteral 0x9172978 <col:27> 'int' 0)))
          (BinaryOperator 0x9172a00 <line:1220:8, col:16> 'size_t':'unsigned int' lvalue '='
            (DeclRefExpr 0x91729c0 <col:8> 'size_t':'unsigned int' lvalue Var 0x91721e0 '__mod' 'size_t':'unsigned int')
            (ImplicitCastExpr 0x91729f0 <col:16> 'size_t':'unsigned int' <IntegralCast>
              (IntegerLiteral 0x91729d8 <col:16> 'int' 1)))
          (UnaryOperator 0x9172a30 <line:1221:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9172a18 <col:10> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')))
        (IfStmt 0x9173140 <line:1223:9, line:1232:6>
          <<<NULL>>>
          (BinaryOperator 0x9172f10 <line:1223:13, line:1226:44> '<dependent type>' '&&'
            (BinaryOperator 0x9172c18 <line:1223:13, line:1224:20> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x9172b98 <line:1223:13, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x9172b38 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                (CallExpr 0x9172ad0 <col:13, col:30> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9172a80 <col:13, col:21> '<dependent type>' lvalue
                    (DeclRefExpr 0x9172a64 <col:13> 'const ctype<_CharT>' lvalue Var 0x91724c0 '__ctype' 'const ctype<_CharT> &'))
                  (CharacterLiteral 0x9172ab8 <col:27> 'char'48))
                (ArraySubscriptExpr 0x9172b20 <col:35, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x9172af0 <col:35> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
                  (IntegerLiteral 0x9172b08 <col:42> 'int' 0)))
              (BinaryOperator 0x9172c00 <line:1224:9, col:20> '_Bool' '>'
                (ImplicitCastExpr 0x9172bf0 <col:9> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x9172bbc <col:9> 'streamsize':'int' lvalue ParmVar 0x9171aa0 '__oldlen' 'streamsize':'int'))
                (IntegerLiteral 0x9172bd8 <col:20> 'int' 1)))
            (ParenExpr 0x9172ef8 <line:1225:9, line:1226:44> '<dependent type>'
              (BinaryOperator 0x9172ee0 <line:1225:10, line:1226:43> '<dependent type>' '||'
                (CXXOperatorCallExpr 0x9172d60 <line:1225:10, col:40> '<dependent type>'
                  (UnresolvedLookupExpr 0x9172d00 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (CallExpr 0x9172c98 <col:10, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9172c48 <col:10, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x9172c30 <col:10> 'const ctype<_CharT>' lvalue Var 0x91724c0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9172c80 <col:24> 'char'120))
                  (ArraySubscriptExpr 0x9172ce8 <col:32, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x9172cb8 <col:32> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9172cd0 <col:39> 'int' 1)))
                (CXXOperatorCallExpr 0x9172eb8 <line:1226:13, col:43> '<dependent type>'
                  (UnresolvedLookupExpr 0x9172e58 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (CallExpr 0x9172df0 <col:13, col:30> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9172da0 <col:13, col:21> '<dependent type>' lvalue
                      (DeclRefExpr 0x9172d84 <col:13> 'const ctype<_CharT>' lvalue Var 0x91724c0 '__ctype' 'const ctype<_CharT> &'))
                    (CharacterLiteral 0x9172dd8 <col:27> 'char'88))
                  (ArraySubscriptExpr 0x9172e40 <col:35, col:43> '<dependent type>' lvalue
                    (DeclRefExpr 0x9172e10 <col:35> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
                    (IntegerLiteral 0x9172e28 <col:42> 'int' 1))))))
          (CompoundStmt 0x9173120 <line:1227:6, line:1232:6>
            (BinaryOperator 0x9172fb8 <line:1228:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9172f58 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9172f28 <col:8> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
                (IntegerLiteral 0x9172f40 <col:15> 'int' 0))
              (ArraySubscriptExpr 0x9172fa0 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9172f6c <col:20> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9172f88 <col:27> 'int' 0)))
            (BinaryOperator 0x9173060 <line:1229:8, col:28> '<dependent type>' '='
              (ArraySubscriptExpr 0x9173000 <col:8, col:16> '<dependent type>' lvalue
                (DeclRefExpr 0x9172fd0 <col:8> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
                (IntegerLiteral 0x9172fe8 <col:15> 'int' 1))
              (ArraySubscriptExpr 0x9173048 <col:20, col:28> '<dependent type>' lvalue
                (DeclRefExpr 0x9173014 <col:20> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
                (IntegerLiteral 0x9173030 <col:27> 'int' 1)))
            (BinaryOperator 0x91730b8 <line:1230:8, col:16> 'size_t':'unsigned int' lvalue '='
              (DeclRefExpr 0x9173078 <col:8> 'size_t':'unsigned int' lvalue Var 0x91721e0 '__mod' 'size_t':'unsigned int')
              (ImplicitCastExpr 0x91730a8 <col:16> 'size_t':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x9173090 <col:16> 'int' 2)))
            (CompoundAssignOperator 0x9173100 <line:1231:8, col:18> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x91730d0 <col:8> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
              (IntegerLiteral 0x91730e8 <col:18> 'int' 2)))
          <<<NULL>>>)))
    <<<NULL>>>)
  (CallExpr 0x9173258 <line:1235:7, col:45> '<dependent type>'
    (DependentScopeDeclRefExpr 0x91731e8 <col:7, col:16> '<dependent type>' lvalue)
    (DeclRefExpr 0x917320c <col:23> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
    (DeclRefExpr 0x9173224 <col:31> 'const size_t':'const unsigned int' lvalue Var 0x9171bf0 '__plen' 'const size_t':'const unsigned int')
    (DeclRefExpr 0x917323c <col:39> '_CharT' lvalue ParmVar 0x9171940 '__fill' '_CharT'))
  (CallExpr 0x9173488 <line:1236:7, col:70> '<dependent type>'
    (DependentScopeDeclRefExpr 0x91732a8 <col:7, col:16> '<dependent type>' lvalue)
    (CXXOperatorCallExpr 0x9173348 <col:21, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x9173300 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (DeclRefExpr 0x91732cc <col:21> '_CharT *' lvalue ParmVar 0x91719b0 '__news' '_CharT *')
      (DeclRefExpr 0x91732e4 <col:30> 'const size_t':'const unsigned int' lvalue Var 0x9171bf0 '__plen' 'const size_t':'const unsigned int'))
    (CXXOperatorCallExpr 0x91733e8 <col:38, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x91733a0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (DeclRefExpr 0x917336c <col:38> 'const _CharT *' lvalue ParmVar 0x9171a20 '__olds' 'const _CharT *')
      (DeclRefExpr 0x9173384 <col:47> 'size_t':'unsigned int' lvalue Var 0x91721e0 '__mod' 'size_t':'unsigned int'))
    (BinaryOperator 0x9173470 <col:54, col:65> 'unsigned int' '-'
      (ImplicitCastExpr 0x9173460 <col:54> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x9173440 <col:54> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x917340c <col:54> 'streamsize':'int' lvalue ParmVar 0x9171aa0 '__oldlen' 'streamsize':'int')))
      (ImplicitCastExpr 0x9173450 <col:65> 'size_t':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x9173424 <col:65> 'size_t':'unsigned int' lvalue Var 0x91721e0 '__mod' 'size_t':'unsigned int')))))


    template <typename _CharT> _CharT *__add_grouping(_CharT *__s, _CharT __sep, const char *__gbeg, size_t __gsize, const _CharT *__first, const _CharT *__last) (CompoundStmt 0x91747d0 </usr/include/c++/4.6/bits/locale_facets.tcc:1244:5, line:1274:5>
  (DeclStmt 0x91738d0 <line:1245:7, col:23>
    0x9173870 "size_t __idx =
      (ImplicitCastExpr 0x91738c0 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x91738a8 <col:22> 'int' 0))")
  (DeclStmt 0x9173950 <line:1246:7, col:23>
    0x91738f0 "size_t __ctr =
      (ImplicitCastExpr 0x9173940 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x9173928 <col:22> 'int' 0))")
  (WhileStmt 0x9173f30 <line:1248:7, line:1254:2>
    <<<NULL>>>
    (BinaryOperator 0x9173d38 <line:1248:14, line:1250:62> '<dependent type>' '&&'
      (BinaryOperator 0x9173bb8 <line:1248:14, line:1249:52> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9173aa0 <line:1248:14, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x9173a58 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (CXXOperatorCallExpr 0x91739c8 <col:14, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9173990 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (DeclRefExpr 0x9173960 <col:14> 'const _CharT *' lvalue ParmVar 0x9173700 '__last' 'const _CharT *')
            (DeclRefExpr 0x9173978 <col:23> 'const _CharT *' lvalue ParmVar 0x91736b0 '__first' 'const _CharT *'))
          (ArraySubscriptExpr 0x9173a40 <col:33, col:45> 'const char' lvalue
            (ImplicitCastExpr 0x9173a20 <col:33> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x91739ec <col:33> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
            (ImplicitCastExpr 0x9173a30 <col:40> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9173a04 <col:40> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))))
        (BinaryOperator 0x9173ba0 <line:1249:10, col:52> '_Bool' '>'
          (ImplicitCastExpr 0x9173b90 <col:10, col:48> 'int' <IntegralCast>
            (CXXStaticCastExpr 0x9173b60 <col:10, col:48> 'signed char' static_cast<signed char> <NoOp>
              (ImplicitCastExpr 0x9173b50 <col:35, col:47> 'signed char' <IntegralCast>
                (ImplicitCastExpr 0x9173b40 <col:35, col:47> 'char' <LValueToRValue>
                  (ArraySubscriptExpr 0x9173b18 <col:35, col:47> 'const char' lvalue
                    (ImplicitCastExpr 0x9173af8 <col:35> 'const char *' <LValueToRValue>
                      (DeclRefExpr 0x9173ac4 <col:35> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
                    (ImplicitCastExpr 0x9173b08 <col:42> 'size_t':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x9173adc <col:42> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int')))))))
          (IntegerLiteral 0x9173b78 <col:52> 'int' 0)))
      (BinaryOperator 0x9173d20 <line:1250:10, col:62> '_Bool' '!='
        (ImplicitCastExpr 0x9173cf0 <col:10, col:22> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9173ce0 <col:10, col:22> 'char' <LValueToRValue>
            (ArraySubscriptExpr 0x9173c20 <col:10, col:22> 'const char' lvalue
              (ImplicitCastExpr 0x9173c00 <col:10> 'const char *' <LValueToRValue>
                (DeclRefExpr 0x9173bd0 <col:10> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
              (ImplicitCastExpr 0x9173c10 <col:17> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9173be8 <col:17> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int')))))
        (ImplicitCastExpr 0x9173d10 <col:27, col:62> 'int' <IntegralCast>
          (ImplicitCastExpr 0x9173d00 <col:27, col:62> 'char':'char' <LValueToRValue>
            (DeclRefExpr 0x9173cc0 <col:27, col:62> 'const char':'const char' lvalue Var 0x91501b0 '__max' 'const char':'const char')))))
    (CompoundStmt 0x9173f18 <line:1251:2, line:1254:2>
      (CompoundAssignOperator 0x9173dd0 <line:1252:4, col:26> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x9173d50 <col:4> 'const _CharT *' lvalue ParmVar 0x9173700 '__last' 'const _CharT *')
        (ArraySubscriptExpr 0x9173db8 <col:14, col:26> 'const char' lvalue
          (ImplicitCastExpr 0x9173d98 <col:14> 'const char *' <LValueToRValue>
            (DeclRefExpr 0x9173d68 <col:14> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
          (ImplicitCastExpr 0x9173da8 <col:21> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9173d80 <col:21> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))))
      (ConditionalOperator 0x9173ef8 <line:1253:4, col:38> 'size_t':'unsigned int' lvalue
        (BinaryOperator 0x9173e80 <col:4, col:22> '_Bool' '<'
          (ImplicitCastExpr 0x9173e70 <col:4> 'size_t':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x9173df0 <col:4> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))
          (BinaryOperator 0x9173e58 <col:12, col:22> 'unsigned int' '-'
            (ImplicitCastExpr 0x9173e38 <col:12> 'size_t':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x9173e08 <col:12> 'size_t':'unsigned int' lvalue ParmVar 0x9173640 '__gsize' 'size_t':'unsigned int'))
            (ImplicitCastExpr 0x9173e48 <col:22> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9173e20 <col:22> 'int' 1))))
        (UnaryOperator 0x9173eb0 <col:26, col:28> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9173e98 <col:28> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))
        (UnaryOperator 0x9173ee0 <col:36, col:38> 'size_t':'unsigned int' lvalue prefix '++'
          (DeclRefExpr 0x9173ec4 <col:38> 'size_t':'unsigned int' lvalue Var 0x91738f0 '__ctr' 'size_t':'unsigned int')))))
  (WhileStmt 0x91740d0 <line:1256:7, line:1257:19>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9173fd0 <line:1256:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9173f78 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (DeclRefExpr 0x9173f44 <col:14> 'const _CharT *' lvalue ParmVar 0x91736b0 '__first' 'const _CharT *')
      (DeclRefExpr 0x9173f5c <col:25> 'const _CharT *' lvalue ParmVar 0x9173700 '__last' 'const _CharT *'))
    (BinaryOperator 0x91740b8 <line:1257:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9174040 <col:2, col:6> '<dependent type>' prefix '*'
        (UnaryOperator 0x9174028 <col:3, col:6> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9173ff4 <col:3> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))
      (UnaryOperator 0x91740a0 <col:11, col:19> '<dependent type>' prefix '*'
        (UnaryOperator 0x9174088 <col:12, col:19> '<dependent type>' postfix '++'
          (DeclRefExpr 0x9174054 <col:12> 'const _CharT *' lvalue ParmVar 0x91736b0 '__first' 'const _CharT *')))))
  (WhileStmt 0x9174430 <line:1259:7, line:1264:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9174118 <line:1259:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9174100 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x91740e4 <col:14> 'size_t':'unsigned int' lvalue Var 0x91738f0 '__ctr' 'size_t':'unsigned int')))
    (CompoundStmt 0x9174418 <line:1260:2, line:1264:2>
      (BinaryOperator 0x91741a0 <line:1261:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x9174170 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x9174158 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9174124 <col:5> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))
        (DeclRefExpr 0x9174184 <col:13> '_CharT' lvalue ParmVar 0x91735b0 '__sep' '_CharT'))
      (ForStmt 0x91743f0 <line:1262:4, line:1263:23>
        (DeclStmt 0x9174270 <line:1262:9, col:33>
          0x91741c0 "char __i =
            (ImplicitCastExpr 0x9174260 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x9174248 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9174228 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x91741f4 <col:20> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9174238 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x917420c <col:27> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x91742d0 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x91742c0 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x91742b0 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x9174280 <col:35> 'char' lvalue Var 0x91741c0 '__i' 'char')))
          (IntegerLiteral 0x9174298 <col:41> 'int' 0))
        (UnaryOperator 0x9174300 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x91742e8 <col:46> 'char' lvalue Var 0x91741c0 '__i' 'char'))
        (BinaryOperator 0x91743d8 <line:1263:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x9174360 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x9174348 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9174314 <col:7> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))
          (UnaryOperator 0x91743c0 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x91743a8 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9174374 <col:16> 'const _CharT *' lvalue ParmVar 0x91736b0 '__first' 'const _CharT *')))))))
  (WhileStmt 0x9174790 <line:1266:7, line:1271:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9174478 <line:1266:14, col:19> '_Bool' <IntegralToBoolean>
      (UnaryOperator 0x9174460 <col:14, col:19> 'size_t':'unsigned int' postfix '--'
        (DeclRefExpr 0x9174444 <col:14> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int')))
    (CompoundStmt 0x9174778 <line:1267:2, line:1271:2>
      (BinaryOperator 0x9174500 <line:1268:4, col:13> '<dependent type>' '='
        (UnaryOperator 0x91744d0 <col:4, col:8> '<dependent type>' prefix '*'
          (UnaryOperator 0x91744b8 <col:5, col:8> '<dependent type>' postfix '++'
            (DeclRefExpr 0x9174484 <col:5> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))
        (DeclRefExpr 0x91744e4 <col:13> '_CharT' lvalue ParmVar 0x91735b0 '__sep' '_CharT'))
      (ForStmt 0x9174750 <line:1269:4, line:1270:23>
        (DeclStmt 0x91745d0 <line:1269:9, col:33>
          0x9174520 "char __i =
            (ImplicitCastExpr 0x91745c0 <col:20, col:32> 'char' <LValueToRValue>
              (ArraySubscriptExpr 0x91745a8 <col:20, col:32> 'const char' lvalue
                (ImplicitCastExpr 0x9174588 <col:20> 'const char *' <LValueToRValue>
                  (DeclRefExpr 0x9174554 <col:20> 'const char *' lvalue ParmVar 0x9173600 '__gbeg' 'const char *'))
                (ImplicitCastExpr 0x9174598 <col:27> 'size_t':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x917456c <col:27> 'size_t':'unsigned int' lvalue Var 0x9173870 '__idx' 'size_t':'unsigned int'))))")
        <<<NULL>>>
        (BinaryOperator 0x9174630 <col:35, col:41> '_Bool' '>'
          (ImplicitCastExpr 0x9174620 <col:35> 'int' <IntegralCast>
            (ImplicitCastExpr 0x9174610 <col:35> 'char' <LValueToRValue>
              (DeclRefExpr 0x91745e0 <col:35> 'char' lvalue Var 0x9174520 '__i' 'char')))
          (IntegerLiteral 0x91745f8 <col:41> 'int' 0))
        (UnaryOperator 0x9174660 <col:44, col:46> 'char' lvalue prefix '--'
          (DeclRefExpr 0x9174648 <col:46> 'char' lvalue Var 0x9174520 '__i' 'char'))
        (BinaryOperator 0x9174738 <line:1270:6, col:23> '<dependent type>' '='
          (UnaryOperator 0x91746c0 <col:6, col:10> '<dependent type>' prefix '*'
            (UnaryOperator 0x91746a8 <col:7, col:10> '<dependent type>' postfix '++'
              (DeclRefExpr 0x9174674 <col:7> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))
          (UnaryOperator 0x9174720 <col:15, col:23> '<dependent type>' prefix '*'
            (UnaryOperator 0x9174708 <col:16, col:23> '<dependent type>' postfix '++'
              (DeclRefExpr 0x91746d4 <col:16> 'const _CharT *' lvalue ParmVar 0x91736b0 '__first' 'const _CharT *')))))))
  (ReturnStmt 0x91747c0 <line:1273:7, col:14>
    (DeclRefExpr 0x91747a4 <col:14> '_CharT *' lvalue ParmVar 0x9173570 '__s' '_CharT *')))

;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        typedef __numpunct_cache<char> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<char> &operator=(const std::numpunct<char> &);
    };
    class numpunct_byname : public numpunct<char> {
        class numpunct_byname;
    public:
    public:
        typedef char char_type;
        typedef basic_string<char> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<char> &operator=(const std::numpunct_byname<char> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef char char_type;
        typedef std::istreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<char> &operator=(const std::num_get<char> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef char char_type;
        typedef std::ostreambuf_iterator<char, std::char_traits<char> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<char> &operator=(const std::num_put<char> &);
    };
    class ctype_byname;
    class numpunct : public locale::facet {
        class numpunct;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        typedef __numpunct_cache<wchar_t> __cache_type;
    protected:
    protected:
        __cache_type *_M_data;
    public:
    public:
        static locale::id id;
        numpunct(size_t __refs);
        numpunct(__cache_type *__cache, size_t __refs);
        numpunct(__c_locale __cloc, size_t __refs);
        char_type decimal_point() const;
        char_type thousands_sep() const;
        string grouping() const;
        string_type truename() const;
        string_type falsename() const;
    protected:
    protected:
        virtual void ~numpunct();
        virtual char_type do_decimal_point() const;
        virtual char_type do_thousands_sep() const;
        virtual string do_grouping() const;
        virtual string_type do_truename() const;
        virtual string_type do_falsename() const;
        void _M_initialize_numpunct(__c_locale __cloc);
        inline std::numpunct<wchar_t> &operator=(const std::numpunct<wchar_t> &);
    };
    class numpunct_byname : public numpunct<wchar_t> {
        class numpunct_byname;
    public:
    public:
        typedef wchar_t char_type;
        typedef basic_string<wchar_t> string_type;
        numpunct_byname(const char *__s, size_t __refs);
    protected:
    protected:
        virtual void ~numpunct_byname();
        inline std::numpunct_byname<wchar_t> &operator=(const std::numpunct_byname<wchar_t> &);
    };
    class num_get : public locale::facet {
        class num_get;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_get(size_t __refs);
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, bool &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, float &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long double &__v) const;
        iter_type get(iter_type __in, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, void *&__v) const;
    protected:
    protected:
        virtual void ~num_get();
        iter_type _M_extract_float(iter_type, iter_type, std::ios_base &, ios_base::iostate &, string &) const;
        template <typename _ValueT> iter_type _M_extract_int(iter_type, iter_type, std::ios_base &, ios_base::iostate &, _ValueT &) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *, size_t __len, _CharT2 __c) const;
        template <typename _CharT2> typename __gnu_cxx::__enable_if<!__is_char<_CharT2>::__value, int>::__type _M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &, bool &) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned short &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned int &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, long long &__v) const;
        virtual iter_type do_get(iter_type __beg, iter_type __end, std::ios_base &__io, ios_base::iostate &__err, unsigned long long &__v) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, float &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, long double &) const;
        virtual iter_type do_get(iter_type, iter_type, std::ios_base &, ios_base::iostate &__err, void *&) const;
        inline std::num_get<wchar_t> &operator=(const std::num_get<wchar_t> &);
    };
    class num_put : public locale::facet {
        class num_put;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > iter_type;
        static locale::id id;
        num_put(size_t __refs);
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, bool __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, unsigned long long __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, long double __v) const;
        iter_type put(iter_type __s, std::ios_base &__f, char_type __fill, const void *__v) const;
    protected:
    protected:
        template <typename _ValueT> iter_type _M_insert_float(iter_type, std::ios_base &__io, char_type __fill, char __mod, _ValueT __v) const;
        void _M_group_float(const char *__grouping, size_t __grouping_size, char_type __sep, const char_type *__p, char_type *__new, char_type *__cs, int &__len) const;
        template <typename _ValueT> iter_type _M_insert_int(iter_type, std::ios_base &__io, char_type __fill, _ValueT __v) const;
        void _M_group_int(const char *__grouping, size_t __grouping_size, char_type __sep, std::ios_base &__io, char_type *__new, char_type *__cs, int &__len) const;
        void _M_pad(char_type __fill, streamsize __w, std::ios_base &__io, char_type *__new, const char_type *__cs, int &__len) const;
        virtual void ~num_put();
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, bool __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, long long __v) const;
        virtual iter_type do_put(iter_type __s, std::ios_base &__io, char_type __fill, unsigned long long __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, long double __v) const;
        virtual iter_type do_put(iter_type, std::ios_base &, char_type __fill, const void *__v) const;
        inline std::num_put<wchar_t> &operator=(const std::num_put<wchar_t> &);
    };
    class ctype_byname;
}
extern void *__builtin_alloca(unsigned int);
namespace std {
    template <typename _Facet> inline const _Facet &__check_facet(const _Facet *__f) (CompoundStmt 0x9198c80 </usr/include/c++/4.6/bits/basic_ios.h:48:5, line:52:5>
  (IfStmt 0x9198c20 <line:49:7, line:50:19>
    <<<NULL>>>
    (UnaryOperator 0x9198b88 <line:49:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x9198b6c <col:12> 'const _Facet *' lvalue ParmVar 0x9198a20 '__f' 'const _Facet *'))
    (CallExpr 0x9198c00 <line:50:2, col:19> 'void'
      (ImplicitCastExpr 0x9198bf0 <col:2> 'void (*)(void) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9198bd4 <col:2> 'void (void) __attribute__((noreturn))' lvalue Function 0x8e0ef90 '__throw_bad_cast' 'void (void) __attribute__((noreturn))')))
    <<<NULL>>>)
  (ReturnStmt 0x9198c70 <line:51:7, col:15>
    (UnaryOperator 0x9198c58 <col:14, col:15> '<dependent type>' prefix '*'
      (DeclRefExpr 0x9198c3c <col:15> 'const _Facet *' lvalue ParmVar 0x9198a20 '__f' 'const _Facet *'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef ctype<_CharT> __ctype_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
    protected:
    protected:
        basic_ostream<_CharT, _Traits> *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<_CharT, _Traits> *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const (CompoundStmt 0x919bd00 </usr/include/c++/4.6/bits/basic_ios.h:113:7, col:65>
  (ReturnStmt 0x919bcf0 <col:9, col:62>
    (ConditionalOperator 0x919bcd0 <col:16, col:62> '<dependent type>'
      (CallExpr 0x919bc40 <col:16, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919bc08 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x919bbf8 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x919bc60 <col:31> 'int' 0)
      (CXXConstCastExpr 0x919bcb8 <col:35, col:62> 'basic_ios<_CharT, _Traits> *' const_cast<basic_ios<_CharT, _Traits> *> <NoOp>
        (CXXThisExpr 0x919bc78 <col:58> 'const basic_ios<_CharT, _Traits> *' this)))))


        bool operator!() const (CompoundStmt 0x919bd90 </usr/include/c++/4.6/bits/basic_ios.h:117:7, col:30>
  (ReturnStmt 0x919bd80 <col:9, col:27>
    (CallExpr 0x919bd60 <col:16, col:27> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x919bd28 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x919bd18 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))))


        iostate rdstate() const (CompoundStmt 0x919bde8 </usr/include/c++/4.6/bits/basic_ios.h:129:7, col:36>
  (ReturnStmt 0x919bdd8 <col:9, col:16>
    (MemberExpr 0x919bdb8 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
      (CXXThisExpr 0x919bda8 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void clear(iostate __state = (ImplicitCastExpr 0x919bbd0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x919bbb4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
);
        void setstate(iostate __state) (CompoundStmt 0x919bf50 </usr/include/c++/4.6/bits/basic_ios.h:149:7, col:49>
  (CallExpr 0x919bf30 <col:9, col:46> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x919be10 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x919be00 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x919bf08 <col:21, col:39> '<dependent type>'
      (UnresolvedLookupExpr 0x919bec8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5fb0 0x90b3d10 0x90b4f80)
      (CallExpr 0x919be90 <col:21, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919be58 <col:21, col:27> '<dependent type>' lvalue
          (CXXThisExpr 0x919be48 <col:21> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x919beac <col:39> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919a010 '__state' 'iostate':'enum std::_Ios_Iostate'))))


        void _M_setstate(iostate __state) (CompoundStmt 0x919c128 </usr/include/c++/4.6/bits/basic_ios.h:156:7, line:162:7>
  (CXXOperatorCallExpr 0x919bfe8 <line:159:2, col:24> '<dependent type>'
    (UnresolvedLookupExpr 0x919bfb0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b5600)
    (MemberExpr 0x919bf78 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
      (CXXThisExpr 0x919bf68 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919bf98 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919a0d0 '__state' 'iostate':'enum std::_Ios_Iostate'))
  (IfStmt 0x919c108 <line:160:2, line:161:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x919c0d0 <line:160:6, col:27> '<dependent type>'
      (UnresolvedLookupExpr 0x919c090 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x919c058 <col:6, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919c020 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x919c010 <col:6> 'basic_ios<_CharT, _Traits> *' this)))
      (DeclRefExpr 0x919c074 <col:27> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919a0d0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (NullStmt 0x919c0f8 <line:161:27>)
    <<<NULL>>>))


        bool good() const (CompoundStmt 0x919c258 </usr/include/c++/4.6/bits/basic_ios.h:172:7, col:38>
  (ReturnStmt 0x919c248 <col:9, col:35>
    (CXXOperatorCallExpr 0x919c220 <col:16, col:35> '<dependent type>'
      (UnresolvedLookupExpr 0x919c1c0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
      (CallExpr 0x919c188 <col:16, col:30> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919c150 <col:16, col:22> '<dependent type>' lvalue
          (CXXThisExpr 0x919c140 <col:16> 'const basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x919c1a8 <col:35> 'int' 0))))


        bool eof() const (CompoundStmt 0x919c418 </usr/include/c++/4.6/bits/basic_ios.h:182:7, col:49>
  (ReturnStmt 0x919c408 <col:9, col:46>
    (CXXOperatorCallExpr 0x919c3e0 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x919c388 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (ParenExpr 0x919c358 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x919c330 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x919c2f0 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CallExpr 0x919c2b8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x919c280 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x919c270 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x919c2d4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x919c370 <col:46> 'int' 0))))


        bool fail() const (CompoundStmt 0x919c678 </usr/include/c++/4.6/bits/basic_ios.h:193:7, col:61>
  (ReturnStmt 0x919c668 <col:9, col:58>
    (CXXOperatorCallExpr 0x919c640 <col:16, col:58> '<dependent type>'
      (UnresolvedLookupExpr 0x919c5e8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (ParenExpr 0x919c5b8 <col:16, col:53> '<dependent type>'
        (CXXOperatorCallExpr 0x919c590 <col:17, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x919c550 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CallExpr 0x919c478 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x919c440 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x919c430 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (ParenExpr 0x919c538 <col:35, col:52> 'enum std::_Ios_Iostate'
            (CXXOperatorCallExpr 0x919c510 <col:36, col:45> 'enum std::_Ios_Iostate'
              (ImplicitCastExpr 0x919c500 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x919c4e8 <col:43, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4f80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
              (ImplicitCastExpr 0x919c4c8 <col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x919c494 <col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
              (ImplicitCastExpr 0x919c4d8 <col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x919c4ac <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))))
      (IntegerLiteral 0x919c5d0 <col:58> 'int' 0))))


        bool bad() const (CompoundStmt 0x919c838 </usr/include/c++/4.6/bits/basic_ios.h:203:7, col:49>
  (ReturnStmt 0x919c828 <col:9, col:46>
    (CXXOperatorCallExpr 0x919c800 <col:16, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x919c7a8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (ParenExpr 0x919c778 <col:16, col:41> '<dependent type>'
        (CXXOperatorCallExpr 0x919c750 <col:17, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x919c710 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CallExpr 0x919c6d8 <col:17, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x919c6a0 <col:17, col:23> '<dependent type>' lvalue
              (CXXThisExpr 0x919c690 <col:17> 'const basic_ios<_CharT, _Traits> *' this)))
          (DeclRefExpr 0x919c6f4 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (IntegerLiteral 0x919c790 <col:46> 'int' 0))))


        iostate exceptions() const (CompoundStmt 0x919c890 </usr/include/c++/4.6/bits/basic_ios.h:214:7, col:30>
  (ReturnStmt 0x919c880 <col:9, col:16>
    (MemberExpr 0x919c860 <col:16> 'const iostate':'const enum std::_Ios_Iostate' lvalue ->_M_exception 0x90ac6d0
      (CXXThisExpr 0x919c850 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        void exceptions(iostate __except) (CompoundStmt 0x919c9a0 </usr/include/c++/4.6/bits/basic_ios.h:249:7, line:252:7>
  (BinaryOperator 0x919c8f0 <line:250:9, col:24> '<dependent type>' '='
    (MemberExpr 0x919c8b8 <col:9> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x90ac6d0
      (CXXThisExpr 0x919c8a8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919c8d8 <col:24> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919a410 '__except' 'iostate':'enum std::_Ios_Iostate'))
  (CallExpr 0x919c980 <line:251:9, col:39> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x919c918 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x919c908 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x919c960 <col:21> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
      (CXXThisExpr 0x919c950 <col:21> 'basic_ios<_CharT, _Traits> *' this))))


        basic_ios<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : std::ios_base(), _M_tie((IntegerLiteral 0x919ca18 </usr/include/c++/4.6/bits/basic_ios.h:262:28> 'int' 0)
), _M_fill(), _M_fill_init((CXXBoolLiteralExpr 0x919ca98 </usr/include/c++/4.6/bits/basic_ios.h:262:56> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x919cae8 </usr/include/c++/4.6/bits/basic_ios.h:262:77> 'int' 0)
), _M_ctype((IntegerLiteral 0x919cb38 </usr/include/c++/4.6/bits/basic_ios.h:263:11> 'int' 0)
), _M_num_put((IntegerLiteral 0x919cb88 </usr/include/c++/4.6/bits/basic_ios.h:263:26> 'int' 0)
), _M_num_get((IntegerLiteral 0x919cbd8 </usr/include/c++/4.6/bits/basic_ios.h:263:41> 'int' 0)
) (CompoundStmt 0x919ccc8 </usr/include/c++/4.6/bits/basic_ios.h:264:7, col:27>
  (CallExpr 0x919cca8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x919cc58 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x919cc48 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919cc8c <col:20> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x919a600 '__sb' 'basic_streambuf<_CharT, _Traits> *')))


        virtual void ~basic_ios<_CharT, _Traits>() (CompoundStmt 0x919cce0 </usr/include/c++/4.6/bits/basic_ios.h:273:20, col:22>)


        basic_ostream<_CharT, _Traits> *tie() const (CompoundStmt 0x919cd30 </usr/include/c++/4.6/bits/basic_ios.h:287:7, col:24>
  (ReturnStmt 0x919cd20 <col:9, col:16>
    (MemberExpr 0x919cd00 <col:16> 'basic_ostream<_CharT, _Traits> *const' lvalue ->_M_tie 0x9199900
      (CXXThisExpr 0x919ccf0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_ostream<_CharT, _Traits> *tie(basic_ostream<_CharT, _Traits> *__tiestr) (CompoundStmt 0x919cf80 </usr/include/c++/4.6/bits/basic_ios.h:299:7, line:303:7>
  (DeclStmt 0x919cee8 <line:300:9, col:55>
    0x919ce80 "basic_ostream<_CharT, _Traits> *__old =
      (MemberExpr 0x919cec8 <col:49> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9199900
        (CXXThisExpr 0x919ceb8 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x919cf40 <line:301:9, col:18> '<dependent type>' '='
    (MemberExpr 0x919cf08 <col:9> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9199900
      (CXXThisExpr 0x919cef8 <col:9> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919cf28 <col:18> 'basic_ostream<_CharT, _Traits> *' lvalue ParmVar 0x919ab90 '__tiestr' 'basic_ostream<_CharT, _Traits> *'))
  (ReturnStmt 0x919cf70 <line:302:9, col:16>
    (DeclRefExpr 0x919cf58 <col:16> 'basic_ostream<_CharT, _Traits> *' lvalue Var 0x919ce80 '__old' 'basic_ostream<_CharT, _Traits> *')))


        basic_streambuf<_CharT, _Traits> *rdbuf() const (CompoundStmt 0x919cfe0 </usr/include/c++/4.6/bits/basic_ios.h:313:7, col:30>
  (ReturnStmt 0x919cfd0 <col:9, col:16>
    (MemberExpr 0x919cfb0 <col:16> 'basic_streambuf<_CharT, _Traits> *const' lvalue ->_M_streambuf 0x9199af0
      (CXXThisExpr 0x919cfa0 <col:16> 'const basic_ios<_CharT, _Traits> *' this))))


        basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb);
        basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs);
        char_type fill() const (CompoundStmt 0x919d1e8 </usr/include/c++/4.6/bits/basic_ios.h:362:7, line:369:7>
  (IfStmt 0x919d188 <line:363:2, line:367:4>
    <<<NULL>>>
    (UnaryOperator 0x919d038 <line:363:6, col:7> '_Bool' prefix '!'
      (ImplicitCastExpr 0x919d028 <col:7> '_Bool' <LValueToRValue>
        (MemberExpr 0x919d008 <col:7> '_Bool' lvalue ->_M_fill_init 0x9199990
          (CXXThisExpr 0x919cff8 <col:7> 'const basic_ios<_CharT, _Traits> *' this))))
    (CompoundStmt 0x919d170 <line:364:4, line:367:4>
      (BinaryOperator 0x919d100 <line:365:6, col:31> '<dependent type>' '='
        (MemberExpr 0x919d060 <col:6> 'char_type':'_CharT' lvalue ->_M_fill 0x9199950
          (CXXThisExpr 0x919d050 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x919d0e0 <col:16, col:31> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x919d090 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x919d080 <col:16> 'const basic_ios<_CharT, _Traits> *' this))
          (CharacterLiteral 0x919d0c8 <col:28> 'char'32)))
      (BinaryOperator 0x919d158 <line:366:6, col:21> '<dependent type>' '='
        (MemberExpr 0x919d128 <col:6> '_Bool' lvalue ->_M_fill_init 0x9199990
          (CXXThisExpr 0x919d118 <col:6> 'const basic_ios<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x919d148 <col:21> '_Bool' true)))
    <<<NULL>>>)
  (ReturnStmt 0x919d1d8 <line:368:2, col:9>
    (MemberExpr 0x919d1b8 <col:9> 'char_type':'_CharT' lvalue ->_M_fill 0x9199950
      (CXXThisExpr 0x919d1a8 <col:9> 'const basic_ios<_CharT, _Traits> *' this))))


        char_type fill(char_type __ch) (CompoundStmt 0x919d348 </usr/include/c++/4.6/bits/basic_ios.h:382:7, line:386:7>
  (DeclStmt 0x919d2b0 <line:383:2, col:32>
    0x919d210 "char_type __old =
      (CallExpr 0x919d290 <col:20, col:31> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919d258 <col:20, col:26> '<dependent type>' lvalue
          (CXXThisExpr 0x919d248 <col:20> 'basic_ios<_CharT, _Traits> *' this)))")
  (BinaryOperator 0x919d308 <line:384:2, col:12> '<dependent type>' '='
    (MemberExpr 0x919d2d0 <col:2> 'char_type':'_CharT' lvalue ->_M_fill 0x9199950
      (CXXThisExpr 0x919d2c0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919d2f0 <col:12> 'char_type':'_CharT' lvalue ParmVar 0x919b420 '__ch' 'char_type':'_CharT'))
  (ReturnStmt 0x919d338 <line:385:2, col:9>
    (DeclRefExpr 0x919d320 <col:9> 'char_type':'_CharT' lvalue Var 0x919d210 '__old' 'char_type':'_CharT')))


        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const (CompoundStmt 0x919d490 </usr/include/c++/4.6/bits/basic_ios.h:422:7, col:63>
  (ReturnStmt 0x919d480 <col:9, col:60>
    (CallExpr 0x919d458 <col:16, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x919d3f0 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x919d3d0 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x919d368 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
          (MemberExpr 0x919d3b0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9199b80
            (CXXThisExpr 0x919d3a0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x919d424 <col:47> 'char_type':'_CharT' lvalue ParmVar 0x919b5e0 '__c' 'char_type':'_CharT')
      (DeclRefExpr 0x919d43c <col:52> 'char' lvalue ParmVar 0x919b620 '__dfault' 'char'))))


        char_type widen(char __c) const (CompoundStmt 0x919d5b0 </usr/include/c++/4.6/bits/basic_ios.h:441:7, col:52>
  (ReturnStmt 0x919d5a0 <col:9, col:49>
    (CallExpr 0x919d580 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x919d530 <col:16, col:40> '<dependent type>' lvalue
        (CallExpr 0x919d510 <col:16, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x919d4a8 <col:16> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
          (MemberExpr 0x919d4f0 <col:30> 'const __ctype_type *const' lvalue ->_M_ctype 0x9199b80
            (CXXThisExpr 0x919d4e0 <col:30> 'const basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x919d564 <col:46> 'char' lvalue ParmVar 0x919b710 '__c' 'char'))))


    protected:
    protected:
        basic_ios<_CharT, _Traits>() : std::ios_base(), _M_tie((IntegerLiteral 0x919d628 </usr/include/c++/4.6/bits/basic_ios.h:452:28> 'int' 0)
), _M_fill((CXXUnresolvedConstructExpr 0x919d680 </usr/include/c++/4.6/bits/basic_ios.h:452:40, col:50> 'char_type':'_CharT')
), _M_fill_init((CXXBoolLiteralExpr 0x919d6d8 </usr/include/c++/4.6/bits/basic_ios.h:452:67> '_Bool' false)
), _M_streambuf((IntegerLiteral 0x919d728 </usr/include/c++/4.6/bits/basic_ios.h:453:15> 'int' 0)
), _M_ctype((IntegerLiteral 0x919d778 </usr/include/c++/4.6/bits/basic_ios.h:453:28> 'int' 0)
), _M_num_put((IntegerLiteral 0x919d7c8 </usr/include/c++/4.6/bits/basic_ios.h:453:43> 'int' 0)
), _M_num_get((IntegerLiteral 0x919d818 </usr/include/c++/4.6/bits/basic_ios.h:453:58> 'int' 0)
) (CompoundStmt 0x919d888 </usr/include/c++/4.6/bits/basic_ios.h:454:7, col:9>)


        void init(basic_streambuf<_CharT, _Traits> *__sb);
        void _M_cache_locale(const std::locale &__loc);
    };
}
namespace std {
    void clear(iostate __state = (ImplicitCastExpr 0x919bbd0 </usr/include/c++/4.6/bits/basic_ios.h:139:31> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
  (DeclRefExpr 0x919bbb4 <col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
) (CompoundStmt 0x919e0d0 </usr/include/c++/4.6/bits/basic_ios.tcc:42:5, line:49:5>
  (IfStmt 0x919de88 <line:43:7, line:46:35>
    <<<NULL>>>
    (CallExpr 0x919dd20 <line:43:11, col:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x919dce8 <col:11, col:17> '<dependent type>' lvalue
        (CXXThisExpr 0x919dcd8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
    (BinaryOperator 0x919dd88 <line:44:2, col:23> '<dependent type>' '='
      (MemberExpr 0x919dd50 <col:2> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
        (CXXThisExpr 0x919dd40 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (DeclRefExpr 0x919dd70 <col:23> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919dbf0 '__state' 'iostate':'enum std::_Ios_Iostate'))
    (BinaryOperator 0x919de70 <line:46:4, col:35> '<dependent type>' '='
      (MemberExpr 0x919ddb0 <col:4> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
        (CXXThisExpr 0x919dda0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x919de48 <col:25, col:35> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x919de38 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x919de20 <col:33, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4f80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x919de00 <col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x919ddd0 <col:25> 'iostate':'enum std::_Ios_Iostate' lvalue ParmVar 0x919dbf0 '__state' 'iostate':'enum std::_Ios_Iostate'))
        (ImplicitCastExpr 0x919de10 <col:35> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x919dde8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (IfStmt 0x919e0b0 <line:47:7, line:48:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x919dfb8 <line:47:11, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x919df78 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x919def0 <col:11, col:28> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919deb8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x919dea8 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x919df58 <col:32, col:46> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919df20 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x919df10 <col:32> 'basic_ios<_CharT, _Traits> *' this))))
    (CallExpr 0x919e080 <line:48:2, col:45> 'void'
      (ImplicitCastExpr 0x919e070 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x919e054 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12910 '__throw_ios_failure' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x919e0a0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x919e040 <col:24, col:30> 'const char [17]' lvalue
          (StringLiteral 0x919e014 </usr/include/c++/4.6/bits/basic_ios.tcc:48:26> 'const char [17]' lvalue "basic_ios::clear"))))
    <<<NULL>>>))


    basic_streambuf<_CharT, _Traits> *rdbuf(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x919ea78 </usr/include/c++/4.6/bits/basic_ios.tcc:54:5, line:59:5>
  (DeclStmt 0x919e978 <line:55:7, col:61>
    0x919e910 "basic_streambuf<_CharT, _Traits> *__old =
      (MemberExpr 0x919e958 <col:49> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9199af0
        (CXXThisExpr 0x919e948 <col:49> 'basic_ios<_CharT, _Traits> *' this))")
  (BinaryOperator 0x919e9d0 <line:56:7, col:22> '<dependent type>' '='
    (MemberExpr 0x919e998 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9199af0
      (CXXThisExpr 0x919e988 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x919e9b8 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x919e590 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (CallExpr 0x919ea30 <line:57:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x919e9f8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x919e9e8 <col:7> 'basic_ios<_CharT, _Traits> *' this)))
  (ReturnStmt 0x919ea68 <line:58:7, col:14>
    (DeclRefExpr 0x919ea4c <col:14> 'basic_streambuf<_CharT, _Traits> *' lvalue Var 0x919e910 '__old' 'basic_streambuf<_CharT, _Traits> *')))


    basic_ios<_CharT, _Traits> &copyfmt(const basic_ios<_CharT, _Traits> &__rhs) (CompoundStmt 0x91a04a0 </usr/include/c++/4.6/bits/basic_ios.tcc:64:5, line:109:5>
  (IfStmt 0x91a0448 <line:67:7, line:107:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x919f148 <line:67:11, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x919f0f0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (CXXThisExpr 0x919f068 <col:11> 'basic_ios<_CharT, _Traits> *' this)
      (CXXOperatorCallExpr 0x919f0d0 <col:19, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x919f090 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (DeclRefExpr 0x919f078 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
    (CompoundStmt 0x91a03e8 <line:68:2, line:107:2>
      (DeclStmt 0x919f550 <line:73:4, line:74:69>
        0x919f180 "std::ios_base::_Words *__words =
          (ConditionalOperator 0x919f530 <line:73:22, line:74:43> '<dependent type>'
            (ParenExpr 0x919f290 <line:73:22, col:63> '<dependent type>'
              (CXXOperatorCallExpr 0x919f268 <col:23, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x919f220 <col:42, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
                (CXXDependentScopeMemberExpr 0x919f1d0 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x919f1b4 <col:23> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
                (DeclRefExpr 0x919f204 <col:45> 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>' EnumConstant 0x90ad1e0 '_S_local_word_size' 'enum std::ios_base::<anonymous at /usr/include/c++/4.6/bits/ios_base.h:512:5>')))
            (MemberExpr 0x919f2b8 <line:74:23> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x90ad310
              (CXXThisExpr 0x919f2a8 <col:23> 'basic_ios<_CharT, _Traits> *' this))
            (CXXNewExpr 0x919f4f0 <col:39, col:43> 'struct std::ios_base::_Words *'
              (CXXDependentScopeMemberExpr 0x919f2f0 <col:50, col:56> '<dependent type>' lvalue
                (DeclRefExpr 0x919f2d8 <col:50> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))")
      (DeclStmt 0x919f5f8 <line:77:4, col:45>
        0x919f570 "std::ios_base::_Callback_list *__cb =
          (CXXDependentScopeMemberExpr 0x919f5c0 <col:27, col:33> '<dependent type>' lvalue
            (DeclRefExpr 0x919f5a4 <col:27> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))")
      (IfStmt 0x919f6a8 <line:78:4, line:79:29>
        <<<NULL>>>
        (ImplicitCastExpr 0x919f630 <line:78:8> '_Bool' <PointerToBoolean>
          (ImplicitCastExpr 0x919f620 <col:8> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
            (DeclRefExpr 0x919f608 <col:8> 'struct std::ios_base::_Callback_list *' lvalue Var 0x919f570 '__cb' 'struct std::ios_base::_Callback_list *')))
        (CXXMemberCallExpr 0x919f688 <line:79:6, col:29> 'void'
          (MemberExpr 0x919f664 <col:6, col:12> '<bound member function type>' ->_M_add_reference 0x90acc00
            (ImplicitCastExpr 0x919f658 <col:6> 'struct std::ios_base::_Callback_list *' <LValueToRValue>
              (DeclRefExpr 0x919f63c <col:6> 'struct std::ios_base::_Callback_list *' lvalue Var 0x919f570 '__cb' 'struct std::ios_base::_Callback_list *'))))
        <<<NULL>>>)
      (CallExpr 0x919f710 <line:80:4, col:33> '<dependent type>'
        (MemberExpr 0x919f6d8 <col:4> '<bound member function type>' ->_M_call_callbacks 0x90acdd0
          (CXXThisExpr 0x919f6c8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x919f6f8 <col:22> 'enum std::ios_base::event' EnumConstant 0x90ac190 'erase_event' 'enum std::ios_base::event'))
      (IfStmt 0x919f8d0 <line:81:4, line:85:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x919f7e8 <line:81:8, col:19> '<dependent type>'
          (UnresolvedLookupExpr 0x919f790 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (MemberExpr 0x919f740 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
            (CXXThisExpr 0x919f730 <col:8> 'basic_ios<_CharT, _Traits> *' this))
          (MemberExpr 0x919f770 <col:19> 'struct std::ios_base::_Words [8]' lvalue ->_M_local_word 0x90ad310
            (CXXThisExpr 0x919f760 <col:19> 'basic_ios<_CharT, _Traits> *' this)))
        (CompoundStmt 0x919f8b8 <line:82:6, line:85:6>
          (CXXDeleteExpr 0x919f840 <line:83:8, col:18> 'void'
            (MemberExpr 0x919f820 <col:18> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
              (CXXThisExpr 0x919f810 <col:18> 'basic_ios<_CharT, _Traits> *' this)))
          (BinaryOperator 0x919f8a0 <line:84:8, col:18> '<dependent type>' '='
            (MemberExpr 0x919f868 <col:8> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
              (CXXThisExpr 0x919f858 <col:8> 'basic_ios<_CharT, _Traits> *' this))
            (IntegerLiteral 0x919f888 <col:18> 'int' 0)))
        <<<NULL>>>)
      (CallExpr 0x919f920 <line:86:4, col:25> '<dependent type>'
        (MemberExpr 0x919f900 <col:4> '<bound member function type>' ->_M_dispose_callbacks 0x90ace90
          (CXXThisExpr 0x919f8f0 <col:4> 'basic_ios<_CharT, _Traits> *' this)))
      (BinaryOperator 0x919f988 <line:89:4, col:19> '<dependent type>' '='
        (MemberExpr 0x919f950 <col:4> 'struct std::ios_base::_Callback_list *' lvalue ->_M_callbacks 0x90accf0
          (CXXThisExpr 0x919f940 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x919f970 <col:19> 'struct std::ios_base::_Callback_list *' lvalue Var 0x919f570 '__cb' 'struct std::ios_base::_Callback_list *'))
      (ForStmt 0x919fc18 <line:90:4, line:91:38>
        (DeclStmt 0x919fa00 <line:90:9, col:20>
          0x919f9b0 "int __i =
            (IntegerLiteral 0x919f9e8 <col:19> 'int' 0)")
        <<<NULL>>>
        (CXXOperatorCallExpr 0x919fac0 <col:22, col:34> '<dependent type>'
          (UnresolvedLookupExpr 0x919fa78 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
          (DeclRefExpr 0x919fa10 <col:22> 'int' lvalue Var 0x919f9b0 '__i' 'int')
          (CXXDependentScopeMemberExpr 0x919fa40 <col:28, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x919fa28 <col:28> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
        (UnaryOperator 0x919fb00 <col:48, col:50> 'int' lvalue prefix '++'
          (DeclRefExpr 0x919fae4 <col:50> 'int' lvalue Var 0x919f9b0 '__i' 'int'))
        (BinaryOperator 0x919fc00 <line:91:6, col:38> '<dependent type>' '='
          (ArraySubscriptExpr 0x919fb68 <col:6, col:17> 'struct std::ios_base::_Words' lvalue
            (ImplicitCastExpr 0x919fb48 <col:6> 'struct std::ios_base::_Words *' <LValueToRValue>
              (DeclRefExpr 0x919fb14 <col:6> 'struct std::ios_base::_Words *' lvalue Var 0x919f180 '__words' 'struct std::ios_base::_Words *'))
            (ImplicitCastExpr 0x919fb58 <col:14> 'int' <LValueToRValue>
              (DeclRefExpr 0x919fb2c <col:14> 'int' lvalue Var 0x919f9b0 '__i' 'int')))
          (ArraySubscriptExpr 0x919fbe8 <col:21, col:38> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x919fb98 <col:21, col:27> '<dependent type>' lvalue
              (DeclRefExpr 0x919fb7c <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))
            (DeclRefExpr 0x919fbcc <col:35> 'int' lvalue Var 0x919f9b0 '__i' 'int'))))
      (BinaryOperator 0x919fc88 <line:92:4, col:14> '<dependent type>' '='
        (MemberExpr 0x919fc50 <col:4> 'struct std::ios_base::_Words *' lvalue ->_M_word 0x90ad3b0
          (CXXThisExpr 0x919fc40 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x919fc70 <col:14> 'struct std::ios_base::_Words *' lvalue Var 0x919f180 '__words' 'struct std::ios_base::_Words *'))
      (BinaryOperator 0x919fd20 <line:93:4, col:25> '<dependent type>' '='
        (MemberExpr 0x919fcb0 <col:4> 'int' lvalue ->_M_word_size 0x90ad350
          (CXXThisExpr 0x919fca0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CXXDependentScopeMemberExpr 0x919fce8 <col:19, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x919fcd0 <col:19> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &')))
      (CallExpr 0x919fdf0 <line:95:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919fd48 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x919fd38 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x919fdd0 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x919fd98 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x919fd7c <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x919fec8 <line:96:4, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919fe20 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x919fe10 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x919fea8 <col:16, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x919fe70 <col:16, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x919fe54 <col:16> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x919ffa0 <line:97:4, col:37> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919fef8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x919fee8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x919ff80 <col:20, col:36> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x919ff48 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x919ff2c <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x91a0078 <line:98:4, col:25> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x919ffd0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x919ffc0 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x91a0058 <col:14, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a0020 <col:14, col:20> '<dependent type>' lvalue
            (DeclRefExpr 0x91a0004 <col:14> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x91a0150 <line:99:4, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91a00a8 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91a0098 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x91a0130 <col:15, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a00f8 <col:15, col:21> '<dependent type>' lvalue
            (DeclRefExpr 0x91a00dc <col:15> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (BinaryOperator 0x91a0210 <line:100:4, col:33> '<dependent type>' '='
        (MemberExpr 0x91a0180 <col:4> 'class std::locale' lvalue ->_M_ios_locale 0x90ad540
          (CXXThisExpr 0x91a0170 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x91a01f0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a01b8 <col:20, col:26> '<dependent type>' lvalue
            (DeclRefExpr 0x91a01a0 <col:20> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &'))))
      (CallExpr 0x91a0288 <line:101:4, col:33> '<dependent type>'
        (MemberExpr 0x91a0238 <col:4> '<bound member function type>' ->_M_cache_locale 0x919bb50
          (CXXThisExpr 0x91a0228 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (MemberExpr 0x91a0268 <col:20> 'class std::locale' lvalue ->_M_ios_locale 0x90ad540
          (CXXThisExpr 0x91a0258 <col:20> 'basic_ios<_CharT, _Traits> *' this)))
      (CallExpr 0x91a02f0 <line:103:4, col:35> '<dependent type>'
        (MemberExpr 0x91a02b8 <col:4> '<bound member function type>' ->_M_call_callbacks 0x90acdd0
          (CXXThisExpr 0x91a02a8 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91a02d8 <col:22> 'enum std::ios_base::event' EnumConstant 0x90ac210 'copyfmt_event' 'enum std::ios_base::event'))
      (CallExpr 0x91a03c8 <line:106:4, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91a0320 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91a0310 <col:4> 'basic_ios<_CharT, _Traits> *' this))
        (CallExpr 0x91a03a8 <col:21, col:38> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a0370 <col:21, col:27> '<dependent type>' lvalue
            (DeclRefExpr 0x91a0354 <col:21> 'const basic_ios<_CharT, _Traits>' lvalue ParmVar 0x919ee20 '__rhs' 'const basic_ios<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (ReturnStmt 0x91a0490 <line:108:7, col:15>
    (UnaryOperator 0x91a0478 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91a0468 <col:15> 'basic_ios<_CharT, _Traits> *' this))))


    std::locale imbue(const std::locale &__loc) (CompoundStmt 0x91a78a0 </usr/include/c++/4.6/bits/basic_ios.tcc:115:5, line:122:5>
  (DeclStmt 0x91a7530 <line:116:7, col:35>
    0x91a7470 "std::locale __old =
      (ParenListExpr 0x91a7510 <col:19, col:34> 'class std::locale'
        (CallExpr 0x91a74f0 <col:20, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a74b8 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x91a74a8 <col:20> 'basic_ios<_CharT, _Traits> *' this))))")
  (CallExpr 0x91a75c0 <line:117:7, col:28> '<dependent type>'
    (MemberExpr 0x91a7578 <col:7, col:17> '<bound member function type>' ->imbue 0x90ae320
      (CXXThisExpr 0x91a7568 <col:17> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91a75a4 <col:23> 'const class std::locale' lvalue ParmVar 0x91a7380 '__loc' 'const class std::locale &'))
  (CallExpr 0x91a7628 <line:118:7, col:28> '<dependent type>'
    (MemberExpr 0x91a75f0 <col:7> '<bound member function type>' ->_M_cache_locale 0x919bb50
      (CXXThisExpr 0x91a75e0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91a7610 <col:23> 'const class std::locale' lvalue ParmVar 0x91a7380 '__loc' 'const class std::locale &'))
  (IfStmt 0x91a7820 <line:119:7, line:120:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x91a7720 <line:119:11, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x91a76c8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (CallExpr 0x91a7690 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91a7658 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x91a7648 <col:11> 'basic_ios<_CharT, _Traits> *' this)))
      (IntegerLiteral 0x91a76b0 <col:28> 'int' 0))
    (CallExpr 0x91a7800 <line:120:2, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91a77b0 <col:2, col:17> '<dependent type>' lvalue
        (CallExpr 0x91a7790 <col:2, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91a7758 <col:2, col:8> '<dependent type>' lvalue
            (CXXThisExpr 0x91a7748 <col:2> 'basic_ios<_CharT, _Traits> *' this))))
      (DeclRefExpr 0x91a77e4 <col:26> 'const class std::locale' lvalue ParmVar 0x91a7380 '__loc' 'const class std::locale &'))
    <<<NULL>>>)
  (ReturnStmt 0x91a7890 <line:121:7, col:14>
    (CXXConstructExpr 0x91a7868 <col:14> 'class std::locale''void (const class std::locale &) throw()' elidable
      (ImplicitCastExpr 0x91a7858 <col:14> 'const class std::locale' lvalue <NoOp>
        (DeclRefExpr 0x91a783c <col:14> 'class std::locale' lvalue Var 0x91a7470 '__old' 'class std::locale')))))


    void init(basic_streambuf<_CharT, _Traits> *__sb) (CompoundStmt 0x91a8140 </usr/include/c++/4.6/bits/basic_ios.tcc:127:5, line:153:5>
  (CallExpr 0x91a7e10 <line:129:7, col:25> '<dependent type>'
    (MemberExpr 0x91a7de0 <col:7, col:17> '<bound member function type>' ->_M_init 0x90ad590
      (CXXThisExpr 0x91a7dd0 <col:17> 'basic_ios<_CharT, _Traits> *' this)))
  (CallExpr 0x91a7e90 <line:132:7, col:36> '<dependent type>'
    (MemberExpr 0x91a7e40 <col:7> '<bound member function type>' ->_M_cache_locale 0x919bb50
      (CXXThisExpr 0x91a7e30 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (MemberExpr 0x91a7e70 <col:23> 'class std::locale' lvalue ->_M_ios_locale 0x90ad540
      (CXXThisExpr 0x91a7e60 <col:23> 'basic_ios<_CharT, _Traits> *' this)))
  (BinaryOperator 0x91a7f00 <line:146:7, col:24> '<dependent type>' '='
    (MemberExpr 0x91a7ec0 <col:7> 'char_type':'_CharT' lvalue ->_M_fill 0x9199950
      (CXXThisExpr 0x91a7eb0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXUnresolvedConstructExpr 0x91a7ee8 <col:17, col:24> '_CharT'))
  (BinaryOperator 0x91a7f58 <line:147:7, col:22> '<dependent type>' '='
    (MemberExpr 0x91a7f28 <col:7> '_Bool' lvalue ->_M_fill_init 0x9199990
      (CXXThisExpr 0x91a7f18 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (CXXBoolLiteralExpr 0x91a7f48 <col:22> '_Bool' false))
  (BinaryOperator 0x91a7fb8 <line:149:7, col:16> '<dependent type>' '='
    (MemberExpr 0x91a7f80 <col:7> 'basic_ostream<_CharT, _Traits> *' lvalue ->_M_tie 0x9199900
      (CXXThisExpr 0x91a7f70 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (IntegerLiteral 0x91a7fa0 <col:16> 'int' 0))
  (BinaryOperator 0x91a8018 <line:150:7, col:22> '<dependent type>' '='
    (MemberExpr 0x91a7fe0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_exception 0x90ac6d0
      (CXXThisExpr 0x91a7fd0 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91a8000 <col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))
  (BinaryOperator 0x91a8078 <line:151:7, col:22> '<dependent type>' '='
    (MemberExpr 0x91a8040 <col:7> 'basic_streambuf<_CharT, _Traits> *' lvalue ->_M_streambuf 0x9199af0
      (CXXThisExpr 0x91a8030 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91a8060 <col:22> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x91a7c90 '__sb' 'basic_streambuf<_CharT, _Traits> *'))
  (BinaryOperator 0x91a8128 <line:152:7, col:45> '<dependent type>' '='
    (MemberExpr 0x91a80a0 <col:7> 'iostate':'enum std::_Ios_Iostate' lvalue ->_M_streambuf_state 0x90ac710
      (CXXThisExpr 0x91a8090 <col:7> 'basic_ios<_CharT, _Traits> *' this))
    (ConditionalOperator 0x91a8108 <col:28, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue
      (DeclRefExpr 0x91a80c0 <col:28> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x91a7c90 '__sb' 'basic_streambuf<_CharT, _Traits> *')
      (DeclRefExpr 0x91a80d8 <col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')
      (DeclRefExpr 0x91a80f0 <col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    void _M_cache_locale(const std::locale &__loc) (CompoundStmt 0x91a8d50 </usr/include/c++/4.6/bits/basic_ios.tcc:158:5, line:173:5>
  (IfStmt 0x91a87a0 <line:159:7, line:162:13>
    <<<NULL>>>
    (CallExpr 0x91a85c8 <line:159:11, col:64> '<dependent type>'
      (DeclRefExpr 0x91a84f4 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x91a8598 <col:28, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x91a8518 <col:28, col:50> '<dependent type>' lvalue (ADL) = '1' 0x90914b0)
        (DeclRefExpr 0x91a8580 <col:52> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x91a85b8 <col:60> '_Bool' true))
    (BinaryOperator 0x91a8728 <line:160:2, col:43> '<dependent type>' '='
      (MemberExpr 0x91a8600 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9199b80
        (CXXThisExpr 0x91a85f0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x91a8708 <col:13, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x91a86c8 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CallExpr 0x91a86a8 <col:14, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x91a8628 <col:14, col:36> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91a8690 <col:38> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x91a8788 <line:162:2, col:13> '<dependent type>' '='
      (MemberExpr 0x91a8750 <col:2> 'const __ctype_type *' lvalue ->_M_ctype 0x9199b80
        (CXXThisExpr 0x91a8740 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x91a8770 <col:13> 'int' 0)))
  (IfStmt 0x91a8a68 <line:164:7, line:167:15>
    <<<NULL>>>
    (CallExpr 0x91a8890 <line:164:11, col:66> '<dependent type>'
      (DeclRefExpr 0x91a87bc <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x91a8860 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x91a87e0 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x90914b0)
        (DeclRefExpr 0x91a8848 <col:54> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x91a8880 <col:62> '_Bool' true))
    (BinaryOperator 0x91a89f0 <line:165:2, col:47> '<dependent type>' '='
      (MemberExpr 0x91a88c8 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9199c10
        (CXXThisExpr 0x91a88b8 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x91a89d0 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x91a8990 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CallExpr 0x91a8970 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x91a88f0 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91a8958 <col:42> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x91a8a50 <line:167:2, col:15> '<dependent type>' '='
      (MemberExpr 0x91a8a18 <col:2> 'const __num_put_type *' lvalue ->_M_num_put 0x9199c10
        (CXXThisExpr 0x91a8a08 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x91a8a38 <col:15> 'int' 0)))
  (IfStmt 0x91a8d30 <line:169:7, line:172:15>
    <<<NULL>>>
    (CallExpr 0x91a8b58 <line:169:11, col:66> '<dependent type>'
      (DeclRefExpr 0x91a8a84 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (CallExpr 0x91a8b28 <col:28, col:59> '<dependent type>'
        (UnresolvedLookupExpr 0x91a8aa8 <col:28, col:52> '<dependent type>' lvalue (ADL) = '1' 0x90914b0)
        (DeclRefExpr 0x91a8b10 <col:54> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))
      (CXXBoolLiteralExpr 0x91a8b48 <col:62> '_Bool' true))
    (BinaryOperator 0x91a8cb8 <line:170:2, col:47> '<dependent type>' '='
      (MemberExpr 0x91a8b90 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9199ca0
        (CXXThisExpr 0x91a8b80 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (CXXOperatorCallExpr 0x91a8c98 <col:15, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x91a8c58 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CallExpr 0x91a8c38 <col:16, col:47> '<dependent type>'
          (UnresolvedLookupExpr 0x91a8bb8 <col:16, col:40> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
          (DeclRefExpr 0x91a8c20 <col:42> 'const class std::locale' lvalue ParmVar 0x91a8410 '__loc' 'const class std::locale &'))))
    (BinaryOperator 0x91a8d18 <line:172:2, col:15> '<dependent type>' '='
      (MemberExpr 0x91a8ce0 <col:2> 'const __num_get_type *' lvalue ->_M_num_get 0x9199ca0
        (CXXThisExpr 0x91a8cd0 <col:2> 'basic_ios<_CharT, _Traits> *' this))
      (IntegerLiteral 0x91a8d00 <col:15> 'int' 0))))


    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef ctype<char> __ctype_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
    protected:
    protected:
        basic_ostream<char, std::char_traits<char> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<char, std::char_traits<char> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<char, std::char_traits<char> > *tie() const;
        basic_ostream<char, std::char_traits<char> > *tie(basic_ostream<char, std::char_traits<char> > *__tiestr);
        basic_streambuf<char, std::char_traits<char> > *rdbuf() const;
        basic_streambuf<char, std::char_traits<char> > *rdbuf(basic_streambuf<char, std::char_traits<char> > *__sb);
        std::basic_ios<char> &copyfmt(const std::basic_ios<char> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<char, std::char_traits<char> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<char> &operator=(const std::basic_ios<char> &);
        inline basic_ios(const std::basic_ios<char> &);
    };
    class basic_ios : public std::ios_base {
        class basic_ios;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef ctype<wchar_t> __ctype_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
    protected:
    protected:
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *_M_tie;
        mutable char_type _M_fill;
        mutable bool _M_fill_init;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *_M_streambuf;
        const __ctype_type *_M_ctype;
        const __num_put_type *_M_num_put;
        const __num_get_type *_M_num_get;
    public:
    public:
        void *operator void *() const;
        bool operator!() const;
        iostate rdstate() const;
        void clear(iostate __state);
        void setstate(iostate __state);
        void _M_setstate(iostate __state);
        bool good() const;
        bool eof() const;
        bool fail() const;
        bool bad() const;
        iostate exceptions() const;
        void exceptions(iostate __except);
        basic_ios(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_ios();
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie() const;
        basic_ostream<wchar_t, std::char_traits<wchar_t> > *tie(basic_ostream<wchar_t, std::char_traits<wchar_t> > *__tiestr);
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf() const;
        basic_streambuf<wchar_t, std::char_traits<wchar_t> > *rdbuf(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        std::basic_ios<wchar_t> &copyfmt(const std::basic_ios<wchar_t> &__rhs);
        char_type fill() const;
        char_type fill(char_type __ch);
        std::locale imbue(const std::locale &__loc);
        char narrow(char_type __c, char __dfault) const;
        char_type widen(char __c) const;
    protected:
    protected:
        basic_ios();
        void init(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        void _M_cache_locale(const std::locale &__loc);
        inline std::basic_ios<wchar_t> &operator=(const std::basic_ios<wchar_t> &);
        inline basic_ios(const std::basic_ios<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_ostream : virtual public basic_ios<_CharT, _Traits> {
        class basic_ostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> > __num_put_type;
        typedef ctype<_CharT> __ctype_type;
        basic_ostream<_CharT, _Traits>(__streambuf_type *__sb) (CompoundStmt 0x91b41e8 </usr/include/c++/4.6/ostream:84:7, col:27>
  (CallExpr 0x91b41c8 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x91b4178 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x91b4168 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91b41ac <col:20> '__streambuf_type *' lvalue ParmVar 0x91b1de0 '__sb' '__streambuf_type *')))


        virtual void ~basic_ostream<_CharT, _Traits>() (CompoundStmt 0x91b4200 </usr/include/c++/4.6/ostream:92:24, col:26>)


        class sentry;
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &)) (CompoundStmt 0x91b4280 </usr/include/c++/4.6/ostream:110:7, line:115:7>
  (ReturnStmt 0x91b4270 <line:114:2, col:19>
    (CallExpr 0x91b4250 <col:9, col:19> '<dependent type>'
      (DeclRefExpr 0x91b4210 <col:9> '__ostream_type &(*)(__ostream_type &)' lvalue ParmVar 0x91b21a0 '__pf' '__ostream_type &(*)(__ostream_type &)')
      (UnaryOperator 0x91b4238 <col:14, col:15> '<dependent type>' prefix '*'
        (CXXThisExpr 0x91b4228 <col:15> 'basic_ostream<_CharT, _Traits> *' this)))))


        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x91b4330 </usr/include/c++/4.6/ostream:119:7, line:125:7>
  (CallExpr 0x91b42d8 <line:123:2, col:12> '<dependent type>'
    (DeclRefExpr 0x91b4294 <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x91b2410 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x91b42c0 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91b42b0 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x91b4320 <line:124:2, col:10>
    (UnaryOperator 0x91b4308 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91b42f8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x91b43e0 </usr/include/c++/4.6/ostream:129:7, line:135:7>
  (CallExpr 0x91b4388 <line:133:2, col:12> '<dependent type>'
    (DeclRefExpr 0x91b4348 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x91b25f0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x91b4370 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91b4360 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x91b43d0 <line:134:2, col:10>
    (UnaryOperator 0x91b43b8 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91b43a8 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))


        __ostream_type &operator<<(long __n) (CompoundStmt 0x91b4490 </usr/include/c++/4.6/ostream:167:7, col:32>
  (ReturnStmt 0x91b4480 <col:9, col:29>
    (CallExpr 0x91b4460 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4408 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b4444 <col:26> 'long' lvalue ParmVar 0x91b2710 '__n' 'long'))))


        __ostream_type &operator<<(unsigned long __n) (CompoundStmt 0x91b4540 </usr/include/c++/4.6/ostream:171:7, col:32>
  (ReturnStmt 0x91b4530 <col:9, col:29>
    (CallExpr 0x91b4510 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b44b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b44f4 <col:26> 'unsigned long' lvalue ParmVar 0x91b2830 '__n' 'unsigned long'))))


        __ostream_type &operator<<(bool __n) (CompoundStmt 0x91b45f0 </usr/include/c++/4.6/ostream:175:7, col:32>
  (ReturnStmt 0x91b45e0 <col:9, col:29>
    (CallExpr 0x91b45c0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4568 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b45a4 <col:26> '_Bool' lvalue ParmVar 0x91b2940 '__n' '_Bool'))))


        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n) (CompoundStmt 0x91b46e8 </usr/include/c++/4.6/ostream:182:7, line:186:7>
  (ReturnStmt 0x91b46d8 <line:185:2, col:50>
    (CallExpr 0x91b46b8 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4618 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x91b46a0 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x91b4690 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x91b4680 <col:46> 'unsigned short' <LValueToRValue>
            (DeclRefExpr 0x91b4654 <col:46> 'unsigned short' lvalue ParmVar 0x91b2b80 '__n' 'unsigned short')))))))


        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n) (CompoundStmt 0x91b47e0 </usr/include/c++/4.6/ostream:193:7, line:197:7>
  (ReturnStmt 0x91b47d0 <line:196:2, col:50>
    (CallExpr 0x91b47b0 <col:9, col:50> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4710 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x91b4798 <col:19, col:49> 'unsigned long' static_cast<unsigned long> <NoOp>
        (ImplicitCastExpr 0x91b4788 <col:46> 'unsigned long' <IntegralCast>
          (ImplicitCastExpr 0x91b4778 <col:46> 'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x91b474c <col:46> 'unsigned int' lvalue ParmVar 0x91b2dc0 '__n' 'unsigned int')))))))


        __ostream_type &operator<<(long long __n) (CompoundStmt 0x91b4890 </usr/include/c++/4.6/ostream:202:7, col:32>
  (ReturnStmt 0x91b4880 <col:9, col:29>
    (CallExpr 0x91b4860 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4808 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b4844 <col:26> 'long long' lvalue ParmVar 0x91b2ee0 '__n' 'long long'))))


        __ostream_type &operator<<(unsigned long long __n) (CompoundStmt 0x91b4940 </usr/include/c++/4.6/ostream:206:7, col:32>
  (ReturnStmt 0x91b4930 <col:9, col:29>
    (CallExpr 0x91b4910 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b48b8 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b48f4 <col:26> 'unsigned long long' lvalue ParmVar 0x91b3000 '__n' 'unsigned long long'))))


        __ostream_type &operator<<(double __f) (CompoundStmt 0x91b49f0 </usr/include/c++/4.6/ostream:211:7, col:32>
  (ReturnStmt 0x91b49e0 <col:9, col:29>
    (CallExpr 0x91b49c0 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4968 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b49a4 <col:26> 'double' lvalue ParmVar 0x91b3120 '__f' 'double'))))


        __ostream_type &operator<<(float __f) (CompoundStmt 0x91b4ae8 </usr/include/c++/4.6/ostream:215:7, line:219:7>
  (ReturnStmt 0x91b4ad8 <line:218:2, col:43>
    (CallExpr 0x91b4ab8 <col:9, col:43> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4a18 <col:9> '<bound member function type>' lvalue)
      (CXXStaticCastExpr 0x91b4aa0 <col:19, col:42> 'double' static_cast<double> <NoOp>
        (ImplicitCastExpr 0x91b4a90 <col:39> 'double' <FloatingCast>
          (ImplicitCastExpr 0x91b4a80 <col:39> 'float' <LValueToRValue>
            (DeclRefExpr 0x91b4a54 <col:39> 'float' lvalue ParmVar 0x91b3240 '__f' 'float')))))))


        __ostream_type &operator<<(long double __f) (CompoundStmt 0x91b4b98 </usr/include/c++/4.6/ostream:223:7, col:32>
  (ReturnStmt 0x91b4b88 <col:9, col:29>
    (CallExpr 0x91b4b68 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4b10 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b4b4c <col:26> 'long double' lvalue ParmVar 0x91b3360 '__f' 'long double'))))


        __ostream_type &operator<<(const void *__p) (CompoundStmt 0x91b4c48 </usr/include/c++/4.6/ostream:227:7, col:32>
  (ReturnStmt 0x91b4c38 <col:9, col:29>
    (CallExpr 0x91b4c18 <col:16, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x91b4bc0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91b4bfc <col:26> 'const void *' lvalue ParmVar 0x91b3480 '__p' 'const void *'))))


        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n) (CompoundStmt 0x91b4ee0 </usr/include/c++/4.6/ostream:289:7, line:293:7>
  (DeclStmt 0x91b4da0 <line:290:2, col:57>
    0x91b4c70 "const streamsize __put =
      (CallExpr 0x91b4d78 <col:27, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91b4d10 <col:27, col:42> '<dependent type>' lvalue
          (CallExpr 0x91b4cf0 <col:27, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91b4cb8 <col:27, col:33> '<dependent type>' lvalue
              (CXXThisExpr 0x91b4ca8 <col:27> 'basic_ostream<_CharT, _Traits> *' this))))
        (DeclRefExpr 0x91b4d44 <col:48> 'const char_type *' lvalue ParmVar 0x91b3810 '__s' 'const char_type *')
        (DeclRefExpr 0x91b4d5c <col:53> 'streamsize':'int' lvalue ParmVar 0x91b3850 '__n' 'streamsize':'int'))")
  (IfStmt 0x91b4ec0 <line:291:2, line:292:35>
    <<<NULL>>>
    (BinaryOperator 0x91b4e00 <line:291:6, col:15> '_Bool' '!='
      (ImplicitCastExpr 0x91b4de0 <col:6> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x91b4db0 <col:6> 'const streamsize':'const int' lvalue Var 0x91b4c70 '__put' 'const streamsize':'const int'))
      (ImplicitCastExpr 0x91b4df0 <col:15> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x91b4dc8 <col:15> 'streamsize':'int' lvalue ParmVar 0x91b3850 '__n' 'streamsize':'int')))
    (CallExpr 0x91b4ea0 <line:292:4, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91b4e28 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x91b4e18 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91b4e7c <col:19, col:29> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>))


        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream<_CharT, _Traits>() (CompoundStmt 0x91b4f78 </usr/include/c++/4.6/ostream:363:7, col:24>
  (CallExpr 0x91b4f58 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x91b4f08 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x91b4ef8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x91b4f40 <col:20> 'int' 0)))


        template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
    };
    class sentry {
        class sentry;
        bool _M_ok;
        basic_ostream<_CharT, _Traits> &_M_os;
    public:
    public:
        sentry(basic_ostream<_CharT, _Traits> &__os);
        void ~sentry() (CompoundStmt 0x91b5d90 </usr/include/c++/4.6/ostream:407:7, line:415:7>
  (IfStmt 0x91b5d70 <line:409:2, line:414:4>
    <<<NULL>>>
    (BinaryOperator 0x91b5a20 <line:409:6, col:69> '_Bool' '&&'
      (CXXUnresolvedConstructExpr 0x91b5928 <col:6, col:44> '_Bool'
        (CXXOperatorCallExpr 0x91b5900 <col:11, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x91b58c0 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CallExpr 0x91b5860 <col:11, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91b5828 <col:11, col:17> '<dependent type>' lvalue
              (MemberExpr 0x91b5808 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x91b53e0
                (CXXThisExpr 0x91b57f8 <col:11> 'class std::basic_ostream::sentry *' this))))
          (DeclRefExpr 0x91b589c <col:27, col:37> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6a00 'unitbuf' 'const fmtflags':'const enum std::_Ios_Fmtflags')))
      (UnaryOperator 0x91b5a08 <col:49, col:69> '_Bool' prefix '!'
        (CallExpr 0x91b59e8 <col:50, col:69> '_Bool'
          (ImplicitCastExpr 0x91b59d8 <col:50> '_Bool (*)(void) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x91b597c <col:50> '_Bool (void) throw()' lvalue Function 0x8ec05b0 'uncaught_exception' '_Bool (void) throw()')))))
    (CompoundStmt 0x91b5d58 <line:410:4, line:414:4>
      (IfStmt 0x91b5d38 <line:412:6, line:413:39>
        <<<NULL>>>
        (BinaryOperator 0x91b5c58 <line:412:10, col:56> '<dependent type>' '&&'
          (CallExpr 0x91b5aa0 <col:10, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91b5a68 <col:10, col:16> '<dependent type>' lvalue
              (MemberExpr 0x91b5a48 <col:10> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x91b53e0
                (CXXThisExpr 0x91b5a38 <col:10> 'class std::basic_ostream::sentry *' this))))
          (CXXOperatorCallExpr 0x91b5c30 <col:27, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x91b5bd0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CallExpr 0x91b5b80 <col:27, col:50> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91b5b48 <col:27, col:42> '<dependent type>' lvalue
                (CallExpr 0x91b5b28 <col:27, col:39> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91b5af0 <col:27, col:33> '<dependent type>' lvalue
                    (MemberExpr 0x91b5ad0 <col:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x91b53e0
                      (CXXThisExpr 0x91b5ac0 <col:27> 'class std::basic_ostream::sentry *' this))))))
            (UnaryOperator 0x91b5bb8 <col:55, col:56> 'int' prefix '-'
              (IntegerLiteral 0x91b5ba0 <col:56> 'int' 1))))
        (CallExpr 0x91b5d18 <line:413:8, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91b5ca0 <col:8, col:14> '<dependent type>' lvalue
            (MemberExpr 0x91b5c80 <col:8> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ->_M_os 0x91b53e0
              (CXXThisExpr 0x91b5c70 <col:8> 'class std::basic_ostream::sentry *' this)))
          (DeclRefExpr 0x91b5cf4 <col:23, col:33> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>))


        bool operator _Bool() const (CompoundStmt 0x91b5e08 </usr/include/c++/4.6/ostream:428:7, col:23>
  (ReturnStmt 0x91b5df8 <col:9, col:16>
    (MemberExpr 0x91b5dd8 <col:16> 'const _Bool' lvalue ->_M_ok 0x91b5280
      (CXXThisExpr 0x91b5dc8 <col:16> 'const class std::basic_ostream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, wchar_t __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, _CharT __c) (CompoundStmt 0x91b63b8 </usr/include/c++/4.6/ostream:451:5, col:48>
  (ReturnStmt 0x91b63a8 <col:7, col:45>
    (CallExpr 0x91b6380 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x91b62a0 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
      (DeclRefExpr 0x91b62d4 <col:31> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b60e0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (CXXOperatorCallExpr 0x91b6348 <col:38, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x91b6308 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (DeclRefExpr 0x91b62ec <col:39> '_CharT' lvalue ParmVar 0x91b6120 '__c' '_CharT'))
      (IntegerLiteral 0x91b6368 <col:44> 'int' 1))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, char __c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, char __c) (CompoundStmt 0x91b6980 </usr/include/c++/4.6/ostream:456:5, col:43>
  (ReturnStmt 0x91b6970 <col:7, col:40>
    (ParenExpr 0x91b6958 <col:14, col:40> '<dependent type>'
      (CXXOperatorCallExpr 0x91b6930 <col:15, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x91b68f0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91b6820 0x91b6270 0x8ffce70)
        (DeclRefExpr 0x91b6850 <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b6690 '__out' 'basic_ostream<_CharT, _Traits> &')
        (CallExpr 0x91b68d0 <col:24, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91b6880 <col:24, col:30> '<dependent type>' lvalue
            (DeclRefExpr 0x91b6868 <col:24> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b6690 '__out' 'basic_ostream<_CharT, _Traits> &'))
          (DeclRefExpr 0x91b68b4 <col:36> 'char' lvalue ParmVar 0x91b66d0 '__c' 'char'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, char __c) (CompoundStmt 0x91b6f10 </usr/include/c++/4.6/ostream:462:5, col:48>
  (ReturnStmt 0x91b6f00 <col:7, col:45>
    (CallExpr 0x91b6ed8 <col:14, col:45> '<dependent type>'
      (UnresolvedLookupExpr 0x91b6e40 <col:14> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
      (DeclRefExpr 0x91b6e74 <col:31> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b6c80 '__out' 'basic_ostream<char, _Traits> &')
      (UnaryOperator 0x91b6ea8 <col:38, col:39> 'char *' prefix '&'
        (DeclRefExpr 0x91b6e8c <col:39> 'char' lvalue ParmVar 0x91b6cc0 '__c' 'char'))
      (IntegerLiteral 0x91b6ec0 <col:44> 'int' 1))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, signed char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, signed char __c) (CompoundStmt 0x91b7478 </usr/include/c++/4.6/ostream:468:5, col:49>
  (ReturnStmt 0x91b7468 <col:7, col:46>
    (ParenExpr 0x91b7450 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x91b7428 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x91b73e0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91b7340 0x91b6e10 0x91b6820 0x91b6270 0x8ffce70)
        (DeclRefExpr 0x91b7370 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b71a0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x91b73c8 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x91b73b8 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x91b73a8 <col:42> 'signed char' <LValueToRValue>
              (DeclRefExpr 0x91b7388 <col:42> 'signed char' lvalue ParmVar 0x91b71f0 '__c' 'signed char'))))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, unsigned char __c)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, unsigned char __c) (CompoundStmt 0x91b79d8 </usr/include/c++/4.6/ostream:473:5, col:49>
  (ReturnStmt 0x91b79c8 <col:7, col:46>
    (ParenExpr 0x91b79b0 <col:14, col:46> '<dependent type>'
      (CXXOperatorCallExpr 0x91b7988 <col:15, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x91b7940 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91b78a0 0x91b7340 0x91b6e10 0x91b6820 0x91b6270 0x8ffce70)
        (DeclRefExpr 0x91b78d0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b7700 '__out' 'basic_ostream<char, _Traits> &')
        (CXXStaticCastExpr 0x91b7928 <col:24, col:45> 'char' static_cast<char> <NoOp>
          (ImplicitCastExpr 0x91b7918 <col:42> 'char' <IntegralCast>
            (ImplicitCastExpr 0x91b7908 <col:42> 'unsigned char' <LValueToRValue>
              (DeclRefExpr 0x91b78e8 <col:42> 'unsigned char' lvalue ParmVar 0x91b7750 '__c' 'unsigned char'))))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const _CharT *__s) (CompoundStmt 0x91b8100 </usr/include/c++/4.6/ostream:493:5, line:500:5>
  (IfStmt 0x91b80b8 <line:494:7, line:498:50>
    <<<NULL>>>
    (UnaryOperator 0x91b7eb8 <line:494:11, col:12> '<dependent type>' prefix '!'
      (DeclRefExpr 0x91b7ea0 <col:12> 'const _CharT *' lvalue ParmVar 0x91b7d20 '__s' 'const _CharT *'))
    (CallExpr 0x91b7f60 <line:495:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91b7ee8 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x91b7ecc <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b7cb0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x91b7f3c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x91b8090 <line:497:2, line:498:50> '<dependent type>'
      (UnresolvedLookupExpr 0x91b7f80 <line:497:2> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
      (DeclRefExpr 0x91b7fb4 <col:19> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b7cb0 '__out' 'basic_ostream<_CharT, _Traits> &')
      (DeclRefExpr 0x91b7fcc <col:26> 'const _CharT *' lvalue ParmVar 0x91b7d20 '__s' 'const _CharT *')
      (CXXStaticCastExpr 0x91b8078 <line:498:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x91b8050 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x91b8010 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x91b8034 <col:45> 'const _CharT *' lvalue ParmVar 0x91b7d20 '__s' 'const _CharT *')))))
  (ReturnStmt 0x91b80f0 <line:499:7, col:14>
    (DeclRefExpr 0x91b80d4 <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91b7cb0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const char *__s) (CompoundStmt 0x91b8c70 </usr/include/c++/4.6/ostream:510:5, line:517:5>
  (IfStmt 0x91b8c28 <line:511:7, line:515:50>
    <<<NULL>>>
    (UnaryOperator 0x91b8a28 <line:511:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x91b8a18 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x91b8a08 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x91b89f0 <col:12> 'const char *' lvalue ParmVar 0x91b8870 '__s' 'const char *'))))
    (CallExpr 0x91b8ad0 <line:512:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91b8a58 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x91b8a3c <col:2> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b8820 '__out' 'basic_ostream<char, _Traits> &'))
      (DeclRefExpr 0x91b8aac <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CallExpr 0x91b8c00 <line:514:2, line:515:50> '<dependent type>'
      (UnresolvedLookupExpr 0x91b8af0 <line:514:2> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
      (DeclRefExpr 0x91b8b24 <col:19> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b8820 '__out' 'basic_ostream<char, _Traits> &')
      (DeclRefExpr 0x91b8b3c <col:26> 'const char *' lvalue ParmVar 0x91b8870 '__s' 'const char *')
      (CXXStaticCastExpr 0x91b8be8 <line:515:5, col:49> 'streamsize':'int' static_cast<streamsize> <Dependent>
        (CallExpr 0x91b8bc0 <col:29, col:48> '<dependent type>'
          (DependentScopeDeclRefExpr 0x91b8b80 <col:29, col:38> '<dependent type>' lvalue)
          (DeclRefExpr 0x91b8ba4 <col:45> 'const char *' lvalue ParmVar 0x91b8870 '__s' 'const char *')))))
  (ReturnStmt 0x91b8c60 <line:516:7, col:14>
    (DeclRefExpr 0x91b8c44 <col:14> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b8820 '__out' 'basic_ostream<char, _Traits> &')))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const signed char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const signed char *__s) (CompoundStmt 0x91baa40 </usr/include/c++/4.6/ostream:523:5, col:61>
  (ReturnStmt 0x91baa30 <col:7, col:58>
    (ParenExpr 0x91baa18 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x91b91b0 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x91b9158 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91b90c0 0x91b89c0 0x91b8580 0x91b7e70 0x91b78a0 0x91b7340 0x91b6e10 0x91b6820 0x91b6270 0x8ffce70)
        (DeclRefExpr 0x91b90f0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91b8f00 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91b9140 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x91b9130 <col:54> 'const signed char *' <LValueToRValue>
            (DeclRefExpr 0x91b9108 <col:54> 'const signed char *' lvalue ParmVar 0x91b8f70 '__s' 'const signed char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const unsigned char *__s)template <class _Traits> inline basic_ostream<char, _Traits> &operator<<(basic_ostream<char, _Traits> &__out, const unsigned char *__s) (CompoundStmt 0x91bafd8 </usr/include/c++/4.6/ostream:528:5, col:61>
  (ReturnStmt 0x91bafc8 <col:7, col:58>
    (ParenExpr 0x91bafb0 <col:14, col:58> '<dependent type>'
      (CXXOperatorCallExpr 0x91baf88 <col:15, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x91baf28 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91bae90 0x91b90c0 0x91b89c0 0x91b8580 0x91b7e70 0x91b78a0 0x91b7340 0x91b6e10 0x91b6820 0x91b6270 0x8ffce70)
        (DeclRefExpr 0x91baec0 <col:15> 'basic_ostream<char, _Traits>' lvalue ParmVar 0x91bacd0 '__out' 'basic_ostream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91baf10 <col:24, col:57> 'const char *' reinterpret_cast<const char *> <BitCast>
          (ImplicitCastExpr 0x91baf00 <col:54> 'const unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x91baed8 <col:54> 'const unsigned char *' lvalue ParmVar 0x91bad40 '__s' 'const unsigned char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &endl(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &endl(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &endl(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x91bb588 </usr/include/c++/4.6/ostream:543:5, col:49>
  (ReturnStmt 0x91bb578 <col:7, col:46>
    (CallExpr 0x91bb558 <col:14, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x91bb430 <col:14> '<overloaded function type>' lvalue (ADL) = '1' empty)
      (CallExpr 0x91bb538 <col:20, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91bb478 <col:20, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x91bb460 <col:20> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bb2b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
        (CallExpr 0x91bb518 <col:29, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91bb4c8 <col:29, col:34> '<dependent type>' lvalue
            (DeclRefExpr 0x91bb4ac <col:29> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bb2b0 '__os' 'basic_ostream<_CharT, _Traits> &'))
          (CharacterLiteral 0x91bb500 <col:40> 'char'10))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &ends(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &ends(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &ends(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x91bba60 </usr/include/c++/4.6/ostream:554:5, col:34>
  (ReturnStmt 0x91bba50 <col:7, col:31>
    (CallExpr 0x91bba30 <col:14, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bb9d8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x91bb9bc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bb860 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (CXXUnresolvedConstructExpr 0x91bba18 <col:23, col:30> '_CharT'))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> inline basic_ostream<wchar_t, std::char_traits<wchar_t> > &flush(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os)template <typename _CharT = char, typename _Traits = std::char_traits<char>> inline basic_ostream<char, std::char_traits<char> > &flush(basic_ostream<char, std::char_traits<char> > &__os)template <typename _CharT, typename _Traits> inline basic_ostream<_CharT, _Traits> &flush(basic_ostream<_CharT, _Traits> &__os) (CompoundStmt 0x91bbf20 </usr/include/c++/4.6/ostream:564:5, col:28>
  (ReturnStmt 0x91bbf10 <col:7, col:25>
    (CallExpr 0x91bbef0 <col:14, col:25> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bbeb8 <col:14, col:19> '<dependent type>' lvalue
        (DeclRefExpr 0x91bbe9c <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bbd40 '__os' 'basic_ostream<_CharT, _Traits> &')))))

;
}
namespace std {
    basic_ostream<_CharT, _Traits>::class sentry::sentry(basic_ostream<_CharT, _Traits> &__os) : _M_ok((CXXBoolLiteralExpr 0x91bc658 </usr/include/c++/4.6/bits/ostream.tcc:49:13> '_Bool' false)
), _M_os((DeclRefExpr 0x91bc6a8 </usr/include/c++/4.6/bits/ostream.tcc:49:27> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &')
) (CompoundStmt 0x91bca78 </usr/include/c++/4.6/bits/ostream.tcc:50:5, line:59:5>
  (IfStmt 0x91bc8c0 <line:52:7, line:53:20>
    <<<NULL>>>
    (BinaryOperator 0x91bc7e0 <line:52:11, col:35> '<dependent type>' '&&'
      (CallExpr 0x91bc750 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91bc718 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x91bc700 <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &')))
      (CallExpr 0x91bc7c0 <col:25, col:35> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91bc788 <col:25, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x91bc76c <col:25> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &'))))
    (CallExpr 0x91bc8a0 <line:53:2, col:20> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bc868 <col:2, col:14> '<dependent type>' lvalue
        (CallExpr 0x91bc848 <col:2, col:11> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91bc810 <col:2, col:7> '<dependent type>' lvalue
            (DeclRefExpr 0x91bc7f8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &')))))
    <<<NULL>>>)
  (IfStmt 0x91bca58 <line:55:7, line:58:33>
    <<<NULL>>>
    (CallExpr 0x91bc930 <line:55:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bc8f8 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x91bc8dc <col:11> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &')))
    (BinaryOperator 0x91bc990 <line:56:2, col:10> '<dependent type>' '='
      (MemberExpr 0x91bc960 <col:2> '_Bool' lvalue ->_M_ok 0x91b5280
        (CXXThisExpr 0x91bc950 <col:2> 'class std::basic_ostream::sentry *' this))
      (CXXBoolLiteralExpr 0x91bc980 <col:10> '_Bool' true))
    (CallExpr 0x91bca38 <line:58:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bc9c0 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x91bc9a8 <col:2> 'basic_ostream<_CharT, _Traits>':'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91bc530 '__os' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x91bca14 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))))


    template <typename _ValueT> basic_ostream<_CharT, _Traits> &_M_insert(_ValueT __v) (CompoundStmt 0x91bda08 </usr/include/c++/4.6/bits/ostream.tcc:66:7, line:88:7>
  (DeclStmt 0x91bd1b0 <line:67:2, col:22>
    0x91bd130 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x91bd190 <col:15, col:21> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x91bd178 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91bd168 <col:17> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x91bd9b0 <line:68:2, line:86:4>
    <<<NULL>>>
    (DeclRefExpr 0x91bd1c0 <line:68:6> 'class std::basic_ostream::sentry' lvalue Var 0x91bd130 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x91bd988 <line:69:4, line:86:4>
      (DeclStmt 0x91bd298 <line:70:6, col:49>
        0x91bd210 "ios_base::iostate __err =
          (ImplicitCastExpr 0x91bd288 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91bd264 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x91bd6a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:76:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bd2a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91bd688 </usr/include/c++/4.6/bits/ostream.tcc:72:8, line:76:8>
          (DeclStmt 0x91bd3f8 <line:73:3, col:63>
            0x91bd320 "const __num_put_type &__np =
              (CallExpr 0x91bd3d8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x91bd358 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
                (CXXDependentScopeMemberExpr 0x91bd3a0 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x91bd390 <col:46> 'basic_ostream<_CharT, _Traits> *' this)))")
          (IfStmt 0x91bd668 <line:74:3, line:75:24>
            <<<NULL>>>
            (CallExpr 0x91bd590 <line:74:7, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91bd558 <col:7, col:49> '<dependent type>' lvalue
                (CallExpr 0x91bd528 <col:7, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91bd420 <col:7, col:12> '<dependent type>' lvalue
                    (DeclRefExpr 0x91bd408 <col:7> 'const __num_put_type':'const num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x91bd320 '__np' 'const __num_put_type &'))
                  (UnaryOperator 0x91bd468 <col:16, col:17> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x91bd458 <col:17> 'basic_ostream<_CharT, _Traits> *' this))
                  (UnaryOperator 0x91bd490 <col:23, col:24> '<dependent type>' prefix '*'
                    (CXXThisExpr 0x91bd480 <col:24> 'basic_ostream<_CharT, _Traits> *' this))
                  (CallExpr 0x91bd4f0 <col:30, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x91bd4b8 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x91bd4a8 <col:30> 'basic_ostream<_CharT, _Traits> *' this)))
                  (DeclRefExpr 0x91bd50c <col:44> '_ValueT' lvalue ParmVar 0x91bce70 '__v' '_ValueT'))))
            (CXXOperatorCallExpr 0x91bd640 <line:75:5, col:24> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91bd630 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91bd618 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91bd5ac <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bd210 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91bd608 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91bd5e4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x91bd7a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:81:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bd6c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91bd788 </usr/include/c++/4.6/bits/ostream.tcc:78:8, line:81:8>
          (CallExpr 0x91bd758 <line:79:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91bd6e0 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x91bd6d0 <col:3> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91bd734 <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91bd778 <line:80:26>))
        <<<NULL>>>)
      (IfStmt 0x91bd890 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:83:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bd7c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91bd878 </usr/include/c++/4.6/bits/ostream.tcc:83:8, col:47>
          (CallExpr 0x91bd858 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91bd7e0 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x91bd7d0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91bd834 <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x91bd968 <line:84:6, line:85:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x91bd8d8 <line:84:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x91bd8c8 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91bd8ac <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bd210 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x91bd948 <line:85:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91bd8f8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x91bd8e8 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x91bd92c <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bd210 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x91bd9f8 <line:87:2, col:10>
    (UnaryOperator 0x91bd9e0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91bd9d0 <col:10> 'basic_ostream<_CharT, _Traits> *' this))))

;
    basic_ostream<_CharT, _Traits> &operator<<(short __n) (CompoundStmt 0x91be518 </usr/include/c++/4.6/bits/ostream.tcc:94:5, line:102:5>
  (DeclStmt 0x91be178 <line:97:7, col:75>
    0x91be030 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x91be150 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x91be110 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CallExpr 0x91be0b0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91be078 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x91be068 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x91be0ec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x91be4f8 <line:98:7, line:101:41>
    <<<NULL>>>
    (BinaryOperator 0x91be2e8 <line:98:11, col:56> '_Bool' '||'
      (BinaryOperator 0x91be220 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x91be200 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91be1e0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91be188 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x91be030 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x91be210 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91be1f0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91be1bc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x91be2d0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x91be2b0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91be290 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91be238 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x91be030 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x91be2c0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91be2a0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91be26c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x91be408 <line:99:2, col:70>
      (CallExpr 0x91be3e8 <col:9, col:70> '<dependent type>'
        (UnresolvedMemberExpr 0x91be310 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x91be3d0 <col:19, col:69> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x91be3c0 <col:37, col:68> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x91be398 <col:37, col:68> 'unsigned short' static_cast<unsigned short> <NoOp>
              (ImplicitCastExpr 0x91be388 <col:65> 'unsigned short' <IntegralCast>
                (ImplicitCastExpr 0x91be378 <col:65> 'short' <LValueToRValue>
                  (DeclRefExpr 0x91be34c <col:65> 'short' lvalue ParmVar 0x91bddb0 '__n' 'short'))))))))
    (ReturnStmt 0x91be4e8 <line:101:2, col:41>
      (CallExpr 0x91be4c8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x91be428 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x91be4b0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x91be4a0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x91be490 <col:37> 'short' <LValueToRValue>
              (DeclRefExpr 0x91be464 <col:37> 'short' lvalue ParmVar 0x91bddb0 '__n' 'short'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(int __n) (CompoundStmt 0x91bf018 </usr/include/c++/4.6/bits/ostream.tcc:108:5, line:116:5>
  (DeclStmt 0x91bec78 <line:111:7, col:75>
    0x91beb30 "const ios_base::fmtflags __fmt =
      (CXXOperatorCallExpr 0x91bec50 <col:40, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x91bec10 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CallExpr 0x91bebb0 <col:40, col:52> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91beb78 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x91beb68 <col:40> 'basic_ostream<_CharT, _Traits> *' this)))
        (DeclRefExpr 0x91bebec <col:56, col:66> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6b20 'basefield' 'const fmtflags':'const enum std::_Ios_Fmtflags'))")
  (IfStmt 0x91beff8 <line:112:7, line:115:41>
    <<<NULL>>>
    (BinaryOperator 0x91bede8 <line:112:11, col:56> '_Bool' '||'
      (BinaryOperator 0x91bed20 <col:11, col:30> '_Bool' '=='
        (ImplicitCastExpr 0x91bed00 <col:11> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91bece0 <col:11> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91bec88 <col:11> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x91beb30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x91bed10 <col:20, col:30> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91becf0 <col:20, col:30> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91becbc <col:20, col:30> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6760 'oct' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
      (BinaryOperator 0x91bedd0 <col:37, col:56> '_Bool' '=='
        (ImplicitCastExpr 0x91bedb0 <col:37> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91bed90 <col:37> 'class ios_base::fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91bed38 <col:37> 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x91beb30 '__fmt' 'const class ios_base::fmtflags':'const enum std::_Ios_Fmtflags')))
        (ImplicitCastExpr 0x91bedc0 <col:46, col:56> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91beda0 <col:46, col:56> 'fmtflags':'enum std::_Ios_Fmtflags' <LValueToRValue>
            (DeclRefExpr 0x91bed6c <col:46, col:56> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b6640 'hex' 'const fmtflags':'const enum std::_Ios_Fmtflags')))))
    (ReturnStmt 0x91bef08 <line:113:2, col:68>
      (CallExpr 0x91beee8 <col:9, col:68> '<dependent type>'
        (UnresolvedMemberExpr 0x91bee10 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x91beed0 <col:19, col:67> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x91beec0 <col:37, col:66> 'long' <IntegralCast>
            (CXXStaticCastExpr 0x91bee98 <col:37, col:66> 'unsigned int' static_cast<unsigned int> <NoOp>
              (ImplicitCastExpr 0x91bee88 <col:63> 'unsigned int' <IntegralCast>
                (ImplicitCastExpr 0x91bee78 <col:63> 'int' <LValueToRValue>
                  (DeclRefExpr 0x91bee4c <col:63> 'int' lvalue ParmVar 0x91be8b0 '__n' 'int'))))))))
    (ReturnStmt 0x91befe8 <line:115:2, col:41>
      (CallExpr 0x91befc8 <col:9, col:41> '<dependent type>'
        (UnresolvedMemberExpr 0x91bef28 <col:9> '<bound member function type>' lvalue)
        (CXXStaticCastExpr 0x91befb0 <col:19, col:40> 'long' static_cast<long> <NoOp>
          (ImplicitCastExpr 0x91befa0 <col:37> 'long' <IntegralCast>
            (ImplicitCastExpr 0x91bef90 <col:37> 'int' <LValueToRValue>
              (DeclRefExpr 0x91bef64 <col:37> 'int' lvalue ParmVar 0x91be8b0 '__n' 'int'))))))))


    basic_ostream<_CharT, _Traits> &operator<<(__streambuf_type *__sbin) (CompoundStmt 0x91bfe08 </usr/include/c++/4.6/bits/ostream.tcc:122:5, line:145:5>
  (DeclStmt 0x91bf6b8 <line:123:7, col:50>
    0x91bf630 "ios_base::iostate __err =
      (ImplicitCastExpr 0x91bf6a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91bf684 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x91bf750 <line:124:7, col:27>
    0x91bf6d0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x91bf730 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x91bf718 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91bf708 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x91bfcd8 <line:125:7, line:141:21>
    <<<NULL>>>
    (BinaryOperator 0x91bf790 <line:125:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x91bf760 <col:11> 'class std::basic_ostream::sentry' lvalue Var 0x91bf6d0 '__cerb' 'class std::basic_ostream::sentry')
      (DeclRefExpr 0x91bf778 <col:21> '__streambuf_type *' lvalue ParmVar 0x91bf3b0 '__sbin' '__streambuf_type *'))
    (CompoundStmt 0x91bfbb0 <line:126:2, line:139:2>
      (IfStmt 0x91bf9a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:131:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bf7a8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91bf988 </usr/include/c++/4.6/bits/ostream.tcc:128:6, line:131:6>
          (IfStmt 0x91bf968 <line:129:8, line:130:22>
            <<<NULL>>>
            (UnaryOperator 0x91bf898 <line:129:12, col:52> '<dependent type>' prefix '!'
              (CallExpr 0x91bf870 <col:13, col:52> '<dependent type>'
                (UnresolvedLookupExpr 0x91bf7b8 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x90e8af0)
                (DeclRefExpr 0x91bf7ec <col:31> '__streambuf_type *' lvalue ParmVar 0x91bf3b0 '__sbin' '__streambuf_type *')
                (CallExpr 0x91bf850 <col:39, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91bf818 <col:39, col:45> '<dependent type>' lvalue
                    (CXXThisExpr 0x91bf808 <col:39> 'basic_ostream<_CharT, _Traits> *' this)))))
            (CXXOperatorCallExpr 0x91bf940 <line:130:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91bf930 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91bf918 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91bf8ac <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bf630 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91bf908 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91bf8e4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x91bfaa0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:136:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bf9c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91bfa88 </usr/include/c++/4.6/bits/ostream.tcc:133:6, line:136:6>
          (CallExpr 0x91bfa58 <line:134:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91bf9e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91bf9d0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91bfa34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91bfa78 <line:135:31>))
        <<<NULL>>>)
      (IfStmt 0x91bfb90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:138:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91bfac0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91bfb78 </usr/include/c++/4.6/bits/ostream.tcc:138:6, col:46>
          (CallExpr 0x91bfb58 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91bfae0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91bfad0 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91bfb34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x91bfcb8 <line:140:12, line:141:21>
      <<<NULL>>>
      (UnaryOperator 0x91bfbe8 <line:140:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x91bfbcc <col:17> '__streambuf_type *' lvalue ParmVar 0x91bf3b0 '__sbin' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x91bfc90 <line:141:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x91bfc80 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91bfc68 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x91bfbfc <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bf630 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x91bfc58 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x91bfc34 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x91bfdb0 <line:142:7, line:143:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x91bfd20 <line:142:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91bfd10 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91bfcf4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bf630 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x91bfd90 <line:143:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91bfd40 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x91bfd30 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91bfd74 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91bf630 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x91bfdf8 <line:144:7, col:15>
    (UnaryOperator 0x91bfde0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91bfdd0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &put(char_type __c) (CompoundStmt 0x91c0c60 </usr/include/c++/4.6/bits/ostream.tcc:151:5, line:179:5>
  (DeclStmt 0x91c0480 <line:158:7, col:27>
    0x91c0400 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x91c0460 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x91c0448 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91c0438 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x91c0c08 <line:159:7, line:177:2>
    <<<NULL>>>
    (DeclRefExpr 0x91c0490 <line:159:11> 'class std::basic_ostream::sentry' lvalue Var 0x91c0400 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x91c0be0 <line:160:2, line:177:2>
      (DeclStmt 0x91c0568 <line:161:4, col:47>
        0x91c04e0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x91c0558 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91c0534 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x91c08f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:167:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c0578 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91c08e0 </usr/include/c++/4.6/bits/ostream.tcc:163:6, line:167:6>
          (DeclStmt 0x91c06c0 <line:164:8, col:56>
            0x91c05b0 "const int_type __put =
              (CallExpr 0x91c06a0 <col:31, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c0650 <col:31, col:46> '<dependent type>' lvalue
                  (CallExpr 0x91c0630 <col:31, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x91c05f8 <col:31, col:37> '<dependent type>' lvalue
                      (CXXThisExpr 0x91c05e8 <col:31> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x91c0684 <col:52> 'char_type':'_CharT' lvalue ParmVar 0x91c01b0 '__c' 'char_type':'_CharT'))")
          (IfStmt 0x91c08c0 <line:165:8, line:166:22>
            <<<NULL>>>
            (CallExpr 0x91c07e0 <line:165:12, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91c0718 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x91c074c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x91c05b0 '__put' 'const int_type':'const typename _Traits::int_type')
              (CallExpr 0x91c07c0 <col:44, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c0788 <col:44, col:57> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x91c0898 <line:166:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91c0888 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91c0870 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91c0804 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c04e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91c0860 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91c083c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x91c09f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:172:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c0918 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c09e0 </usr/include/c++/4.6/bits/ostream.tcc:169:6, line:172:6>
          (CallExpr 0x91c09b0 <line:170:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c0938 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91c0928 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91c098c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91c09d0 <line:171:31>))
        <<<NULL>>>)
      (IfStmt 0x91c0ae8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:174:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c0a18 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c0ad0 </usr/include/c++/4.6/bits/ostream.tcc:174:6, col:45>
          (CallExpr 0x91c0ab0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c0a38 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91c0a28 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91c0a8c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x91c0bc0 <line:175:4, line:176:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x91c0b30 <line:175:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x91c0b20 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91c0b04 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c04e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x91c0ba0 <line:176:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91c0b50 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x91c0b40 <col:6> 'basic_ostream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x91c0b84 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c04e0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x91c0c50 <line:178:7, col:15>
    (UnaryOperator 0x91c0c38 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91c0c28 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &write(const _CharT *__s, streamsize __n) (CompoundStmt 0x91c1690 </usr/include/c++/4.6/bits/ostream.tcc:185:5, line:207:5>
  (DeclStmt 0x91c1330 <line:193:7, col:27>
    0x91c12b0 "std::basic_ostream::sentry __cerb =
      (ParenListExpr 0x91c1310 <col:20, col:26> 'class std::basic_ostream::sentry'
        (UnaryOperator 0x91c12f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91c12e8 <col:22> 'basic_ostream<_CharT, _Traits> *' this)))")
  (IfStmt 0x91c1638 <line:194:7, line:205:2>
    <<<NULL>>>
    (DeclRefExpr 0x91c1340 <line:194:11> 'class std::basic_ostream::sentry' lvalue Var 0x91c12b0 '__cerb' 'class std::basic_ostream::sentry')
    (CompoundStmt 0x91c1618 <line:195:2, line:205:2>
      (IfStmt 0x91c1408 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:197:28>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c1358 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91c13f0 </usr/include/c++/4.6/bits/ostream.tcc:197:6, col:28>
          (CallExpr 0x91c13c8 <col:8, col:25> '<dependent type>'
            (MemberExpr 0x91c1378 <col:8> '<bound member function type>' ->_M_write 0x91b38f0
              (CXXThisExpr 0x91c1368 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91c1398 <col:17> 'const _CharT *' lvalue ParmVar 0x91c1020 '__s' 'const _CharT *')
            (DeclRefExpr 0x91c13b0 <col:22> 'streamsize':'int' lvalue ParmVar 0x91c1060 '__n' 'streamsize':'int')))
        <<<NULL>>>)
      (IfStmt 0x91c1508 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:202:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c1428 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c14f0 </usr/include/c++/4.6/bits/ostream.tcc:199:6, line:202:6>
          (CallExpr 0x91c14c0 <line:200:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c1448 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91c1438 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91c149c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91c14e0 <line:201:31>))
        <<<NULL>>>)
      (IfStmt 0x91c15f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:204:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c1528 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c15e0 </usr/include/c++/4.6/bits/ostream.tcc:204:6, col:45>
          (CallExpr 0x91c15c0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c1548 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91c1538 <col:8> 'basic_ostream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91c159c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x91c1680 <line:206:7, col:15>
    (UnaryOperator 0x91c1668 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91c1658 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &flush() (CompoundStmt 0x91c22f0 </usr/include/c++/4.6/bits/ostream.tcc:213:5, line:233:5>
  (DeclStmt 0x91c1cc8 <line:217:7, col:50>
    0x91c1c40 "ios_base::iostate __err =
      (ImplicitCastExpr 0x91c1cb8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c1c94 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x91c1fd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:222:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c1cd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x91c1fb8 </usr/include/c++/4.6/bits/ostream.tcc:219:2, line:222:2>
      (IfStmt 0x91c1f98 <line:220:4, line:221:25>
        <<<NULL>>>
        (BinaryOperator 0x91c1ec8 <line:220:8, col:54> '<dependent type>' '&&'
          (CallExpr 0x91c1d30 <col:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c1cf8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x91c1ce8 <col:8> 'basic_ostream<_CharT, _Traits> *' this)))
          (CXXOperatorCallExpr 0x91c1ea0 <col:25, col:54> '<dependent type>'
            (UnresolvedLookupExpr 0x91c1e40 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
            (CallExpr 0x91c1df0 <col:25, col:48> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91c1db8 <col:25, col:40> '<dependent type>' lvalue
                (CallExpr 0x91c1d98 <col:25, col:37> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91c1d60 <col:25, col:31> '<dependent type>' lvalue
                    (CXXThisExpr 0x91c1d50 <col:25> 'basic_ostream<_CharT, _Traits> *' this)))))
            (UnaryOperator 0x91c1e28 <col:53, col:54> 'int' prefix '-'
              (IntegerLiteral 0x91c1e10 <col:54> 'int' 1))))
        (CXXOperatorCallExpr 0x91c1f70 <line:221:6, col:25> 'const enum std::_Ios_Iostate' lvalue
          (ImplicitCastExpr 0x91c1f60 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
            (DeclRefExpr 0x91c1f48 <col:12, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
          (DeclRefExpr 0x91c1ee0 <col:6> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c1c40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
          (ImplicitCastExpr 0x91c1f38 <col:15, col:25> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91c1f14 <col:15, col:25> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x91c20d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:227:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c1ff0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c20b8 </usr/include/c++/4.6/bits/ostream.tcc:224:2, line:227:2>
      (CallExpr 0x91c2088 <line:225:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c2010 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c2000 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c2064 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x91c20a8 <line:226:27>))
    <<<NULL>>>)
  (IfStmt 0x91c21c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:229:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c20f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c21a8 </usr/include/c++/4.6/bits/ostream.tcc:229:2, col:41>
      (CallExpr 0x91c2188 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c2110 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c2100 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c2164 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x91c2298 <line:230:7, line:231:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x91c2208 <line:230:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91c21f8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c21dc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c1c40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x91c2278 <line:231:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91c2228 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x91c2218 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91c225c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c1c40 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x91c22e0 <line:232:7, col:15>
    (UnaryOperator 0x91c22c8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91c22b8 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    typename basic_ostream<_CharT, _Traits>::pos_type tellp() (CompoundStmt 0x91c6f20 </usr/include/c++/4.6/bits/ostream.tcc:239:5, line:254:5>
  (DeclStmt 0x91c2980 <line:240:7, col:36>
    0x91c28f0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x91c2960 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x91c2948 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x91c2930 <col:34> 'int' 1)))")
  (IfStmt 0x91c6ce8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:245:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c2990 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x91c6cd0 </usr/include/c++/4.6/bits/ostream.tcc:242:2, line:245:2>
      (IfStmt 0x91c6cb0 <line:243:4, line:244:71>
        <<<NULL>>>
        (UnaryOperator 0x91c6b08 <line:243:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x91c29e8 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c29b0 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x91c29a0 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (BinaryOperator 0x91c6c98 <line:244:6, col:71> '<dependent type>' '='
          (DeclRefExpr 0x91c6b1c <col:6> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x91c28f0 '__ret' 'pos_type':'typename _Traits::pos_type')
          (CallExpr 0x91c6c70 <col:14, col:71> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c6ba0 <col:14, col:29> '<dependent type>' lvalue
              (CallExpr 0x91c6b80 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c6b48 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x91c6b38 <col:14> 'basic_ostream<_CharT, _Traits> *' this))))
            (IntegerLiteral 0x91c6bd8 <col:40> 'int' 0)
            (DeclRefExpr 0x91c6c0c <col:43, col:53> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x90abeb0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
            (DeclRefExpr 0x91c6c4c <col:58, col:68> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x91c6de8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:250:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c6d08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c6dd0 </usr/include/c++/4.6/bits/ostream.tcc:247:2, line:250:2>
      (CallExpr 0x91c6da0 <line:248:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c6d28 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c6d18 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c6d7c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x91c6dc0 <line:249:27>))
    <<<NULL>>>)
  (IfStmt 0x91c6ed8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:252:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c6e08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c6ec0 </usr/include/c++/4.6/bits/ostream.tcc:252:2, col:41>
      (CallExpr 0x91c6ea0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c6e28 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c6e18 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c6e7c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (ReturnStmt 0x91c6f10 <line:253:7, col:14>
    (DeclRefExpr 0x91c6ef4 <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x91c28f0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_ostream<_CharT, _Traits> &seekp(pos_type __pos) (CompoundStmt 0x91c7d50 </usr/include/c++/4.6/bits/ostream.tcc:260:5, line:286:5>
  (DeclStmt 0x91c75d8 <line:261:7, col:50>
    0x91c7550 "ios_base::iostate __err =
      (ImplicitCastExpr 0x91c75c8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c75a4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x91c7a30 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:275:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c75e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x91c7a18 </usr/include/c++/4.6/bits/ostream.tcc:263:2, line:275:2>
      (IfStmt 0x91c79f8 <line:264:4, line:274:6>
        <<<NULL>>>
        (UnaryOperator 0x91c7660 <line:264:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x91c7640 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c7608 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x91c75f8 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x91c79e0 <line:265:6, line:274:6>
          (DeclStmt 0x91c77d8 <line:268:8, line:269:27>
            0x91c7680 "const pos_type __p =
              (CallExpr 0x91c77b0 <line:268:29, line:269:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c7720 <line:268:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x91c7700 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x91c76c8 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x91c76b8 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x91c7754 <col:55> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x91c72d0 '__pos' 'pos_type':'typename _Traits::pos_type')
                (DeclRefExpr 0x91c778c <line:269:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x91c79c0 <line:272:8, line:273:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x91c78e0 <line:272:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x91c7880 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x91c77e8 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x91c7680 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x91c7860 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x91c7840 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x91c7828 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x91c7810 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x91c7998 <line:273:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91c7988 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91c7970 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91c7904 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c7550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91c7960 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91c793c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x91c7b30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:280:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c7a50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c7b18 </usr/include/c++/4.6/bits/ostream.tcc:277:2, line:280:2>
      (CallExpr 0x91c7ae8 <line:278:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c7a70 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c7a60 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c7ac4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x91c7b08 <line:279:27>))
    <<<NULL>>>)
  (IfStmt 0x91c7c20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:282:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c7b50 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c7c08 </usr/include/c++/4.6/bits/ostream.tcc:282:2, col:41>
      (CallExpr 0x91c7be8 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c7b70 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c7b60 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c7bc4 <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x91c7cf8 <line:283:7, line:284:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x91c7c68 <line:283:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91c7c58 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c7c3c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c7550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x91c7cd8 <line:284:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91c7c88 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x91c7c78 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91c7cbc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c7550 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x91c7d40 <line:285:7, col:15>
    (UnaryOperator 0x91c7d28 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91c7d18 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    basic_ostream<_CharT, _Traits> &seekp(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x91c8c08 </usr/include/c++/4.6/bits/ostream.tcc:292:5, line:318:5>
  (DeclStmt 0x91c8478 <line:293:7, col:50>
    0x91c83f0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x91c8468 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c8444 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x91c88e8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c8488 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x91c88d0 </usr/include/c++/4.6/bits/ostream.tcc:295:2, line:307:2>
      (IfStmt 0x91c88b0 <line:296:4, line:306:6>
        <<<NULL>>>
        (UnaryOperator 0x91c8500 <line:296:8, col:20> '<dependent type>' prefix '!'
          (CallExpr 0x91c84e0 <col:9, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c84a8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x91c8498 <col:9> 'basic_ostream<_CharT, _Traits> *' this))))
        (CompoundStmt 0x91c8898 <line:297:6, line:306:6>
          (DeclStmt 0x91c8690 <line:300:8, line:301:27>
            0x91c8520 "const pos_type __p =
              (CallExpr 0x91c8668 <line:300:29, line:301:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c85c0 <line:300:29, col:44> '<dependent type>' lvalue
                  (CallExpr 0x91c85a0 <col:29, col:41> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x91c8568 <col:29, col:35> '<dependent type>' lvalue
                      (CXXThisExpr 0x91c8558 <col:29> 'basic_ostream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x91c85f4 <col:55> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x91c8100 '__off' 'off_type':'typename _Traits::off_type')
                (DeclRefExpr 0x91c860c <col:62> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x91c8170 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                (DeclRefExpr 0x91c8644 <line:301:13, col:23> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x91c8878 <line:304:8, line:305:22>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x91c8798 <line:304:12, col:40> '<dependent type>'
              (UnresolvedLookupExpr 0x91c8738 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
              (DeclRefExpr 0x91c86a0 <col:12> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x91c8520 '__p' 'const pos_type':'const typename _Traits::pos_type')
              (CXXUnresolvedConstructExpr 0x91c8718 <col:19, col:40> 'pos_type':'typename _Traits::pos_type'
                (CXXUnresolvedConstructExpr 0x91c86f8 <col:28, col:39> 'off_type':'typename _Traits::off_type'
                  (UnaryOperator 0x91c86e0 <col:37, col:38> 'int' prefix '-'
                    (IntegerLiteral 0x91c86c8 <col:38> 'int' 1)))))
            (CXXOperatorCallExpr 0x91c8850 <line:305:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91c8840 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91c8828 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91c87bc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c83f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91c8818 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91c87f4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x91c89e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c8908 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c89d0 </usr/include/c++/4.6/bits/ostream.tcc:309:2, line:312:2>
      (CallExpr 0x91c89a0 <line:310:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c8928 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c8918 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c897c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
      (NullStmt 0x91c89c0 <line:311:27>))
    <<<NULL>>>)
  (IfStmt 0x91c8ad8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:314:41>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x91c8a08 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x91c8ac0 </usr/include/c++/4.6/bits/ostream.tcc:314:2, col:41>
      (CallExpr 0x91c8aa0 <col:4, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91c8a28 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x91c8a18 <col:4> 'basic_ostream<_CharT, _Traits> *' this))
        (DeclRefExpr 0x91c8a7c <col:22, col:32> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x91c8bb0 <line:315:7, line:316:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x91c8b20 <line:315:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x91c8b10 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91c8af4 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c83f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x91c8b90 <line:316:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91c8b40 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x91c8b30 <col:2> 'basic_ostream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91c8b74 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91c83f0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x91c8bf8 <line:317:7, col:15>
    (UnaryOperator 0x91c8be0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91c8bd0 <col:15> 'basic_ostream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_ostream<wchar_t, std::char_traits<wchar_t> > &operator<<(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__out, const char *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_ostream<char, std::char_traits<char> > &operator<<(basic_ostream<char, std::char_traits<char> > &__out, const char *__s)template <typename _CharT, typename _Traits> basic_ostream<_CharT, _Traits> &operator<<(basic_ostream<_CharT, _Traits> &__out, const char *__s) (CompoundStmt 0x91ca008 </usr/include/c++/4.6/bits/ostream.tcc:323:5, line:355:5>
  (IfStmt 0x91c9fc0 <line:324:7, line:353:2>
    <<<NULL>>>
    (UnaryOperator 0x91c90f8 <line:324:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x91c90e8 <col:12> '_Bool' <PointerToBoolean>
        (ImplicitCastExpr 0x91c90d8 <col:12> 'const char *' <LValueToRValue>
          (DeclRefExpr 0x91c90bc <col:12> 'const char *' lvalue ParmVar 0x91c8f40 '__s' 'const char *'))))
    (CallExpr 0x91c91a0 <line:325:2, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91c9128 <col:2, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x91c910c <col:2> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &'))
      (DeclRefExpr 0x91c917c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
    (CompoundStmt 0x91c9fa0 <line:327:2, line:353:2>
      (DeclStmt 0x91c9318 <line:330:4, col:56>
        0x91c91d0 "const size_t __clen =
          (CallExpr 0x91c92e8 <col:26, col:55> 'size_t':'unsigned int'
            (ImplicitCastExpr 0x91c92d8 <col:26, col:45> 'size_t (*)(const char_type *)' <FunctionToPointerDecay>
              (DeclRefExpr 0x91c9280 <col:26, col:45> 'size_t (const char_type *)' lvalue CXXMethod 0x8eb1bc0 'length' 'size_t (const char_type *)'))
            (ImplicitCastExpr 0x91c9308 <col:52> 'const char *' <LValueToRValue>
              (DeclRefExpr 0x91c92a0 <col:52> 'const char *' lvalue ParmVar 0x91c8f40 '__s' 'const char *')))")
      (IfStmt 0x91c9d80 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/ostream.tcc:345:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c9328 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91c9d60 </usr/include/c++/4.6/bits/ostream.tcc:332:6, line:345:6>
          (DeclStmt 0x91c9968 <line:333:8, line:339:35>
            0x91c9340 "struct __ptr_guard;"
            0x91c9870 "struct __ptr_guard __pg =
              (ParenListExpr 0x91c9940 <col:15, col:34> 'struct __ptr_guard':'struct std::__ptr_guard'
                (CXXNewExpr 0x91c9900 <col:16, col:20> '_CharT *'
                  (DeclRefExpr 0x91c98a4 <col:27> 'const size_t':'const unsigned int' lvalue Var 0x91c91d0 '__clen' 'const size_t':'const unsigned int')))")
          (DeclStmt 0x91c9a38 <line:341:8, col:35>
            0x91c9990 "_CharT *__ws =
              (CallExpr 0x91c9a18 <col:23, col:34> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c99e0 <col:23, col:28> '<dependent type>' lvalue
                  (DeclRefExpr 0x91c99c4 <col:23> 'struct __ptr_guard':'struct std::__ptr_guard' lvalue Var 0x91c9870 '__pg' 'struct __ptr_guard':'struct std::__ptr_guard')))")
          (ForStmt 0x91c9c90 <line:342:8, line:343:35>
            (DeclStmt 0x91c9ab0 <line:342:13, col:28>
              0x91c9a50 "size_t __i =
                (ImplicitCastExpr 0x91c9aa0 <col:27> 'size_t':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x91c9a88 <col:27> 'int' 0))")
            <<<NULL>>>
            (BinaryOperator 0x91c9b10 <col:30, col:36> '_Bool' '<'
              (ImplicitCastExpr 0x91c9af0 <col:30> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x91c9ac0 <col:30> 'size_t':'unsigned int' lvalue Var 0x91c9a50 '__i' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x91c9b00 <col:36> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x91c9ad8 <col:36> 'const size_t':'const unsigned int' lvalue Var 0x91c91d0 '__clen' 'const size_t':'const unsigned int')))
            (UnaryOperator 0x91c9b40 <col:44, col:46> 'size_t':'unsigned int' lvalue prefix '++'
              (DeclRefExpr 0x91c9b28 <col:46> 'size_t':'unsigned int' lvalue Var 0x91c9a50 '__i' 'size_t':'unsigned int'))
            (BinaryOperator 0x91c9c78 <line:343:3, col:35> '<dependent type>' '='
              (ArraySubscriptExpr 0x91c9b88 <col:3, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x91c9b54 <col:3> '_CharT *' lvalue Var 0x91c9990 '__ws' '_CharT *')
                (DeclRefExpr 0x91c9b6c <col:8> 'size_t':'unsigned int' lvalue Var 0x91c9a50 '__i' 'size_t':'unsigned int'))
              (CallExpr 0x91c9c58 <col:15, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91c9bb8 <col:15, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x91c9b9c <col:15> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &'))
                (ArraySubscriptExpr 0x91c9c40 <col:27, col:34> 'const char' lvalue
                  (ImplicitCastExpr 0x91c9c20 <col:27> 'const char *' <LValueToRValue>
                    (DeclRefExpr 0x91c9bec <col:27> 'const char *' lvalue ParmVar 0x91c8f40 '__s' 'const char *'))
                  (ImplicitCastExpr 0x91c9c30 <col:31> 'size_t':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x91c9c04 <col:31> 'size_t':'unsigned int' lvalue Var 0x91c9a50 '__i' 'size_t':'unsigned int'))))))
          (CallExpr 0x91c9d38 <line:344:8, col:44> '<dependent type>'
            (UnresolvedLookupExpr 0x91c9cb8 <col:8> '<overloaded function type>' lvalue (ADL) = '1' 0x8f001f0)
            (DeclRefExpr 0x91c9cec <col:25> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &')
            (DeclRefExpr 0x91c9d04 <col:32> '_CharT *' lvalue Var 0x91c9990 '__ws' '_CharT *')
            (DeclRefExpr 0x91c9d1c <col:38> 'const size_t':'const unsigned int' lvalue Var 0x91c91d0 '__clen' 'const size_t':'const unsigned int')))
        <<<NULL>>>)
      (IfStmt 0x91c9e88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:350:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c9da0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c9e70 </usr/include/c++/4.6/bits/ostream.tcc:347:6, line:350:6>
          (CallExpr 0x91c9e40 <line:348:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c9dc8 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x91c9db0 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x91c9e1c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91c9e60 <line:349:31>))
        <<<NULL>>>)
      (IfStmt 0x91c9f80 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/ostream.tcc:352:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91c9ea8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91c9f68 </usr/include/c++/4.6/bits/ostream.tcc:352:6, col:45>
          (CallExpr 0x91c9f48 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91c9ed0 <col:8, col:14> '<dependent type>' lvalue
              (DeclRefExpr 0x91c9eb8 <col:8> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &'))
            (DeclRefExpr 0x91c9f24 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)))
  (ReturnStmt 0x91c9ff8 <line:354:7, col:14>
    (DeclRefExpr 0x91c9fdc <col:14> 'basic_ostream<_CharT, _Traits>' lvalue ParmVar 0x91c8ef0 '__out' 'basic_ostream<_CharT, _Traits> &')))

;
    class basic_ostream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_ostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        typedef num_put<char, ostreambuf_iterator<char, std::char_traits<char> > > __num_put_type;
        typedef ctype<char> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<char, std::char_traits<char> > &_M_os;
        public:
        public:
            sentry(basic_ostream<char, std::char_traits<char> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<char> &operator=(const std::basic_ostream<char> &);
        inline basic_ostream(const std::basic_ostream<char> &);
    };
    class basic_ostream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        typedef num_put<wchar_t, ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_put_type;
        typedef ctype<wchar_t> __ctype_type;
        basic_ostream(__streambuf_type *__sb);
        virtual void ~basic_ostream();
        class sentry {
            class sentry;
            bool _M_ok;
            basic_ostream<wchar_t, std::char_traits<wchar_t> > &_M_os;
        public:
        public:
            sentry(basic_ostream<wchar_t, std::char_traits<wchar_t> > &__os);
            void ~sentry();
            bool operator _Bool() const;
        };
        ;
        __ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &));
        __ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &));
        __ostream_type &operator<<(std::ios_base &(*__pf)(std::ios_base &));
        __ostream_type &operator<<(long __n);
        __ostream_type &operator<<(unsigned long __n);
        __ostream_type &operator<<(bool __n);
        __ostream_type &operator<<(short __n);
        __ostream_type &operator<<(unsigned short __n);
        __ostream_type &operator<<(int __n);
        __ostream_type &operator<<(unsigned int __n);
        __ostream_type &operator<<(long long __n);
        __ostream_type &operator<<(unsigned long long __n);
        __ostream_type &operator<<(double __f);
        __ostream_type &operator<<(float __f);
        __ostream_type &operator<<(long double __f);
        __ostream_type &operator<<(const void *__p);
        __ostream_type &operator<<(__streambuf_type *__sb);
        __ostream_type &put(char_type __c);
        void _M_write(const char_type *__s, streamsize __n);
        __ostream_type &write(const char_type *__s, streamsize __n);
        __ostream_type &flush();
        pos_type tellp();
        __ostream_type &seekp(pos_type);
        __ostream_type &seekp(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_ostream();
        template <typename _ValueT = long> __ostream_type &_M_insert(long __v)template <typename _ValueT = double> __ostream_type &_M_insert(double __v)template <typename _ValueT = const void *> __ostream_type &_M_insert(const void *__v)template <typename _ValueT = unsigned long> __ostream_type &_M_insert(unsigned long __v)template <typename _ValueT = long double> __ostream_type &_M_insert(long double __v)template <typename _ValueT = long long> __ostream_type &_M_insert(long long __v)template <typename _ValueT = unsigned long long> __ostream_type &_M_insert(unsigned long long __v)template <typename _ValueT = bool> __ostream_type &_M_insert(bool __v)template <typename _ValueT> __ostream_type &_M_insert(_ValueT __v);
        inline std::basic_ostream<wchar_t> &operator=(const std::basic_ostream<wchar_t> &);
        inline basic_ostream(const std::basic_ostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_istream : virtual public basic_ios<_CharT, _Traits> {
        class basic_istream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_ios<_CharT, _Traits> __ios_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> > __num_get_type;
        typedef ctype<_CharT> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream<_CharT, _Traits>(__streambuf_type *__sb) : _M_gcount((CXXFunctionalCastExpr 0x91e3d50 </usr/include/c++/4.6/istream:93:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x91e3d38 <col:30> 'int' 0))
) (CompoundStmt 0x91e3e48 </usr/include/c++/4.6/istream:94:7, col:27>
  (CallExpr 0x91e3e28 <col:9, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x91e3dd8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x91e3dc8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (DeclRefExpr 0x91e3e0c <col:20> '__streambuf_type *' lvalue ParmVar 0x91dde80 '__sb' '__streambuf_type *')))


        virtual void ~basic_istream<_CharT, _Traits>() (CompoundStmt 0x91e3ee0 </usr/include/c++/4.6/istream:103:7, col:36>
  (BinaryOperator 0x91e3ec8 <col:9, col:33> '<dependent type>' '='
    (MemberExpr 0x91e3e70 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x91e3e60 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (CXXFunctionalCastExpr 0x91e3eb0 <col:21, col:33> 'streamsize':'int' functional cast to streamsize <NoOp>
      (IntegerLiteral 0x91e3e98 <col:32> 'int' 0))))


        class sentry;
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &)) (CompoundStmt 0x91e3f68 </usr/include/c++/4.6/istream:122:7, col:29>
  (ReturnStmt 0x91e3f58 <col:9, col:26>
    (CallExpr 0x91e3f38 <col:16, col:26> '<dependent type>'
      (DeclRefExpr 0x91e3ef4 <col:16> '__istream_type &(*)(__istream_type &)' lvalue ParmVar 0x91de240 '__pf' '__istream_type &(*)(__istream_type &)')
      (UnaryOperator 0x91e3f20 <col:21, col:22> '<dependent type>' prefix '*'
        (CXXThisExpr 0x91e3f10 <col:22> 'basic_istream<_CharT, _Traits> *' this)))))


        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &)) (CompoundStmt 0x91e4018 </usr/include/c++/4.6/istream:126:7, line:129:7>
  (CallExpr 0x91e3fc0 <line:127:2, col:12> '<dependent type>'
    (DeclRefExpr 0x91e3f7c <col:2> '__ios_type &(*)(__ios_type &)' lvalue ParmVar 0x91de450 '__pf' '__ios_type &(*)(__ios_type &)')
    (UnaryOperator 0x91e3fa8 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91e3f98 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x91e4008 <line:128:2, col:10>
    (UnaryOperator 0x91e3ff0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91e3fe0 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &)) (CompoundStmt 0x91e40c8 </usr/include/c++/4.6/istream:133:7, line:136:7>
  (CallExpr 0x91e4070 <line:134:2, col:12> '<dependent type>'
    (DeclRefExpr 0x91e4030 <col:2> 'class std::ios_base &(*)(class std::ios_base &)' lvalue ParmVar 0x91de5d0 '__pf' 'class std::ios_base &(*)(class std::ios_base &)')
    (UnaryOperator 0x91e4058 <col:7, col:8> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91e4048 <col:8> 'basic_istream<_CharT, _Traits> *' this)))
  (ReturnStmt 0x91e40b8 <line:135:2, col:10>
    (UnaryOperator 0x91e40a0 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91e4090 <col:10> 'basic_istream<_CharT, _Traits> *' this))))


        __istream_type &operator>>(bool &__n) (CompoundStmt 0x91e4178 </usr/include/c++/4.6/istream:169:7, col:33>
  (ReturnStmt 0x91e4168 <col:9, col:30>
    (CallExpr 0x91e4148 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e40f0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e412c <col:27> '_Bool' lvalue ParmVar 0x91de6f0 '__n' '_Bool &'))))


        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n) (CompoundStmt 0x91e4228 </usr/include/c++/4.6/istream:176:7, col:33>
  (ReturnStmt 0x91e4218 <col:9, col:30>
    (CallExpr 0x91e41f8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e41a0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e41dc <col:27> 'unsigned short' lvalue ParmVar 0x91de930 '__n' 'unsigned short &'))))


        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n) (CompoundStmt 0x91e42d8 </usr/include/c++/4.6/istream:183:7, col:33>
  (ReturnStmt 0x91e42c8 <col:9, col:30>
    (CallExpr 0x91e42a8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4250 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e428c <col:27> 'unsigned int' lvalue ParmVar 0x91deb70 '__n' 'unsigned int &'))))


        __istream_type &operator>>(long &__n) (CompoundStmt 0x91e4388 </usr/include/c++/4.6/istream:187:7, col:33>
  (ReturnStmt 0x91e4378 <col:9, col:30>
    (CallExpr 0x91e4358 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4300 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e433c <col:27> 'long' lvalue ParmVar 0x91dec90 '__n' 'long &'))))


        __istream_type &operator>>(unsigned long &__n) (CompoundStmt 0x91e4438 </usr/include/c++/4.6/istream:191:7, col:33>
  (ReturnStmt 0x91e4428 <col:9, col:30>
    (CallExpr 0x91e4408 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e43b0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e43ec <col:27> 'unsigned long' lvalue ParmVar 0x91dedb0 '__n' 'unsigned long &'))))


        __istream_type &operator>>(long long &__n) (CompoundStmt 0x91e44e8 </usr/include/c++/4.6/istream:196:7, col:33>
  (ReturnStmt 0x91e44d8 <col:9, col:30>
    (CallExpr 0x91e44b8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4460 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e449c <col:27> 'long long' lvalue ParmVar 0x91deed0 '__n' 'long long &'))))


        __istream_type &operator>>(unsigned long long &__n) (CompoundStmt 0x91e4598 </usr/include/c++/4.6/istream:200:7, col:33>
  (ReturnStmt 0x91e4588 <col:9, col:30>
    (CallExpr 0x91e4568 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4510 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e454c <col:27> 'unsigned long long' lvalue ParmVar 0x91deff0 '__n' 'unsigned long long &'))))


        __istream_type &operator>>(float &__f) (CompoundStmt 0x91e4648 </usr/include/c++/4.6/istream:205:7, col:33>
  (ReturnStmt 0x91e4638 <col:9, col:30>
    (CallExpr 0x91e4618 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e45c0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e45fc <col:27> 'float' lvalue ParmVar 0x91df110 '__f' 'float &'))))


        __istream_type &operator>>(double &__f) (CompoundStmt 0x91e46f8 </usr/include/c++/4.6/istream:209:7, col:33>
  (ReturnStmt 0x91e46e8 <col:9, col:30>
    (CallExpr 0x91e46c8 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4670 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e46ac <col:27> 'double' lvalue ParmVar 0x91df230 '__f' 'double &'))))


        __istream_type &operator>>(long double &__f) (CompoundStmt 0x91e47a8 </usr/include/c++/4.6/istream:213:7, col:33>
  (ReturnStmt 0x91e4798 <col:9, col:30>
    (CallExpr 0x91e4778 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e4720 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e475c <col:27> 'long double' lvalue ParmVar 0x91df350 '__f' 'long double &'))))


        __istream_type &operator>>(void *&__p) (CompoundStmt 0x91e4858 </usr/include/c++/4.6/istream:217:7, col:33>
  (ReturnStmt 0x91e4848 <col:9, col:30>
    (CallExpr 0x91e4828 <col:16, col:30> '<dependent type>'
      (UnresolvedMemberExpr 0x91e47d0 <col:16> '<bound member function type>' lvalue)
      (DeclRefExpr 0x91e480c <col:27> 'void *' lvalue ParmVar 0x91df470 '__p' 'void *&'))))


        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const (CompoundStmt 0x91e48c8 </usr/include/c++/4.6/istream:251:7, col:27>
  (ReturnStmt 0x91e48b8 <col:9, col:16>
    (MemberExpr 0x91e4898 <col:16> 'const streamsize':'const int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x91e4888 <col:16> 'const basic_istream<_CharT, _Traits> *' this))))


        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n) (CompoundStmt 0x91e4a10 </usr/include/c++/4.6/istream:335:7, col:56>
  (ReturnStmt 0x91e4a00 <col:9, col:53>
    (CallExpr 0x91e49d8 <col:16, col:53> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91e48f0 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91e48e0 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91e4924 <col:26> 'char_type *' lvalue ParmVar 0x91dfaf0 '__s' 'char_type *')
      (DeclRefExpr 0x91e493c <col:31> 'streamsize':'int' lvalue ParmVar 0x91dfb30 '__n' 'streamsize':'int')
      (CallExpr 0x91e49b8 <col:36, col:52> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91e4968 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x91e4958 <col:36> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x91e49a0 <col:48> 'char'10)))))


        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb) (CompoundStmt 0x91e4b40 </usr/include/c++/4.6/istream:368:7, col:52>
  (ReturnStmt 0x91e4b30 <col:9, col:49>
    (CallExpr 0x91e4b08 <col:16, col:49> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91e4a38 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91e4a28 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91e4a6c <col:26> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x91dfdf0 '__sb' '__streambuf_type &')
      (CallExpr 0x91e4ae8 <col:32, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91e4a98 <col:32, col:38> '<dependent type>' lvalue
          (CXXThisExpr 0x91e4a88 <col:32> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x91e4ad0 <col:44> 'char'10)))))


        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n) (CompoundStmt 0x91e4c88 </usr/include/c++/4.6/istream:408:7, col:60>
  (ReturnStmt 0x91e4c78 <col:9, col:57>
    (CallExpr 0x91e4c50 <col:16, col:57> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91e4b68 <col:16, col:22> '<dependent type>' lvalue
        (CXXThisExpr 0x91e4b58 <col:16> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x91e4b9c <col:30> 'char_type *' lvalue ParmVar 0x91e0070 '__s' 'char_type *')
      (DeclRefExpr 0x91e4bb4 <col:35> 'streamsize':'int' lvalue ParmVar 0x91e00b0 '__n' 'streamsize':'int')
      (CallExpr 0x91e4c30 <col:40, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91e4be0 <col:40, col:46> '<dependent type>' lvalue
          (CXXThisExpr 0x91e4bd0 <col:40> 'basic_istream<_CharT, _Traits> *' this))
        (CharacterLiteral 0x91e4c18 <col:52> 'char'10)))))


        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream<_CharT, _Traits>() : _M_gcount((CXXFunctionalCastExpr 0x91e4cc0 </usr/include/c++/4.6/istream:587:19, col:31> 'streamsize':'int' functional cast to streamsize <NoOp>
  (IntegerLiteral 0x91e4ca8 <col:30> 'int' 0))
) (CompoundStmt 0x91e4da0 </usr/include/c++/4.6/istream:588:7, col:24>
  (CallExpr 0x91e4d80 <col:9, col:21> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x91e4d30 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x91e4d20 <col:9> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x91e4d68 <col:20> 'int' 0)))


        template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
    };
    basic_istream<char> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<char> &ignore(streamsize __n);
    basic_istream<char> &ignore(streamsize __n, int_type __delim);
    basic_istream<wchar_t> &getline(char_type *__s, streamsize __n, char_type __delim);
    basic_istream<wchar_t> &ignore(streamsize __n);
    basic_istream<wchar_t> &ignore(streamsize __n, int_type __delim);
    class sentry {
        class sentry;
        bool _M_ok;
    public:
    public:
        typedef _Traits traits_type;
        typedef basic_streambuf<_CharT, _Traits> __streambuf_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef typename __istream_type::__ctype_type __ctype_type;
        typedef typename _Traits::int_type __int_type;
        sentry(basic_istream<_CharT, _Traits> &__is, bool __noskipws = (CXXBoolLiteralExpr 0x91f51d0 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
);
        bool operator _Bool() const (CompoundStmt 0x91f5258 </usr/include/c++/4.6/istream:686:7, col:23>
  (ReturnStmt 0x91f5248 <col:9, col:16>
    (MemberExpr 0x91f5224 <col:16> 'const _Bool' lvalue ->_M_ok 0x91f4a40
      (CXXThisExpr 0x91f51f8 <col:16> 'const class std::basic_istream::sentry *' this))))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char &__c) (CompoundStmt 0x91f5cd0 </usr/include/c++/4.6/istream:709:5, col:54>
  (ReturnStmt 0x91f5cc0 <col:7, col:51>
    (ParenExpr 0x91f5ca8 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x91f5c80 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x91f5c40 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91f5ba0 0x91f56f0 0x90f5a70 0x90f54a0)
        (DeclRefExpr 0x91f5bd0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x91f5a00 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91f5c28 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x91f5be8 <col:47> 'unsigned char' lvalue ParmVar 0x91f5a50 '__c' 'unsigned char &'))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char &__c)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char &__c) (CompoundStmt 0x91f6238 </usr/include/c++/4.6/istream:714:5, col:54>
  (ReturnStmt 0x91f6228 <col:7, col:51>
    (ParenExpr 0x91f6210 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x91f61e8 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x91f61a0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91f6100 0x91f5ba0 0x91f56f0 0x90f5a70 0x90f54a0)
        (DeclRefExpr 0x91f6130 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x91f5f60 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91f6188 <col:23, col:50> 'char' lvalue reinterpret_cast<char &> <LValueBitCast>
          (DeclRefExpr 0x91f6148 <col:47> 'signed char' lvalue ParmVar 0x91f5fb0 '__c' 'signed char &'))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s);
    basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s);
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, unsigned char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, unsigned char *__s) (CompoundStmt 0x91f7340 </usr/include/c++/4.6/istream:756:5, col:54>
  (ReturnStmt 0x91f7330 <col:7, col:51>
    (ParenExpr 0x91f7318 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x91f72f0 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x91f72a8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91f7210 0x91f66b0 0x91f6100 0x91f5ba0 0x91f56f0 0x90f5a70)
        (DeclRefExpr 0x91f7240 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x91f7070 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91f7290 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x91f7280 <col:47> 'unsigned char *' <LValueToRValue>
            (DeclRefExpr 0x91f7258 <col:47> 'unsigned char *' lvalue ParmVar 0x91f70c0 '__s' 'unsigned char *')))))))

;
    template <class _Traits = std::char_traits<char>> inline basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, signed char *__s)template <class _Traits> inline basic_istream<char, _Traits> &operator>>(basic_istream<char, _Traits> &__in, signed char *__s) (CompoundStmt 0x91f78a8 </usr/include/c++/4.6/istream:761:5, col:54>
  (ReturnStmt 0x91f7898 <col:7, col:51>
    (ParenExpr 0x91f7880 <col:14, col:51> '<dependent type>'
      (CXXOperatorCallExpr 0x91f7858 <col:15, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x91f7808 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x91f7770 0x91f7210 0x91f66b0 0x91f6100 0x91f5ba0 0x91f56f0 0x90f5a70)
        (DeclRefExpr 0x91f77a0 <col:15> 'basic_istream<char, _Traits>' lvalue ParmVar 0x91f75d0 '__in' 'basic_istream<char, _Traits> &')
        (CXXReinterpretCastExpr 0x91f77f0 <col:23, col:50> 'char *' reinterpret_cast<char *> <BitCast>
          (ImplicitCastExpr 0x91f77e0 <col:47> 'signed char *' <LValueToRValue>
            (DeclRefExpr 0x91f77b8 <col:47> 'signed char *' lvalue ParmVar 0x91f7620 '__s' 'signed char *')))))))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>> class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>> class basic_iostream : public basic_istream<_CharT, _Traits>, public basic_ostream<_CharT, _Traits> {
        class basic_iostream;
    public:
    public:
        typedef _CharT char_type;
        typedef typename _Traits::int_type int_type;
        typedef typename _Traits::pos_type pos_type;
        typedef typename _Traits::off_type off_type;
        typedef _Traits traits_type;
        typedef basic_istream<_CharT, _Traits> __istream_type;
        typedef basic_ostream<_CharT, _Traits> __ostream_type;
        basic_iostream<_CharT, _Traits>(basic_streambuf<_CharT, _Traits> *__sb) : __istream_type((DeclRefExpr 0x91f8568 </usr/include/c++/4.6/istream:799:24> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x91f8300 '__sb' 'basic_streambuf<_CharT, _Traits> *')
), __ostream_type((DeclRefExpr 0x91f85d8 </usr/include/c++/4.6/istream:799:46> 'basic_streambuf<_CharT, _Traits> *' lvalue ParmVar 0x91f8300 '__sb' 'basic_streambuf<_CharT, _Traits> *')
) (CompoundStmt 0x91f8650 </usr/include/c++/4.6/istream:799:52, col:54>)


        virtual void ~basic_iostream<_CharT, _Traits>() (CompoundStmt 0x91f8660 </usr/include/c++/4.6/istream:805:25, col:27>)


    protected:
    protected:
        basic_iostream<_CharT, _Traits>() : __istream_type(), __ostream_type() (CompoundStmt 0x91f86f0 </usr/include/c++/4.6/istream:809:44, col:46>)


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__is);
}
namespace std {
    basic_istream<_CharT, _Traits>::class sentry::sentry(basic_istream<_CharT, _Traits> &__in, bool __noskip = (CXXBoolLiteralExpr 0x91f51d0 </usr/include/c++/4.6/istream:673:70> '_Bool' false)
) : _M_ok((CXXBoolLiteralExpr 0x91f9298 </usr/include/c++/4.6/bits/istream.tcc:48:73> '_Bool' false)
) (CompoundStmt 0x91fa308 </usr/include/c++/4.6/bits/istream.tcc:49:5, line:82:5>
  (DeclStmt 0x91f93a8 <line:50:7, col:50>
    0x91f9320 "ios_base::iostate __err =
      (ImplicitCastExpr 0x91f9398 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x91f9374 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (IfStmt 0x91f9fe0 <line:51:7, line:73:2>
    <<<NULL>>>
    (CallExpr 0x91f9408 <line:51:11, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x91f93d0 <col:11, col:16> '<dependent type>' lvalue
        (DeclRefExpr 0x91f93b8 <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))
    (CompoundStmt 0x91f9fc8 <line:52:2, line:73:2>
      (IfStmt 0x91f9560 <line:53:4, line:54:24>
        <<<NULL>>>
        (CallExpr 0x91f9478 <line:53:8, col:17> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91f9440 <col:8, col:13> '<dependent type>' lvalue
            (DeclRefExpr 0x91f9424 <col:8> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))
        (CallExpr 0x91f9540 <line:54:6, col:24> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91f9508 <col:6, col:18> '<dependent type>' lvalue
            (CallExpr 0x91f94e8 <col:6, col:15> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91f94b0 <col:6, col:11> '<dependent type>' lvalue
                (DeclRefExpr 0x91f9494 <col:6> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))))
        <<<NULL>>>)
      (IfStmt 0x91f9fa8 <line:55:4, line:72:6>
        <<<NULL>>>
        (BinaryOperator 0x91f9700 <line:55:8, col:57> '_Bool' '&&'
          (UnaryOperator 0x91f95a8 <col:8, col:9> '_Bool' prefix '!'
            (ImplicitCastExpr 0x91f9598 <col:9> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x91f957c <col:9> '_Bool' lvalue ParmVar 0x91f9170 '__noskip' '_Bool')))
          (CXXUnresolvedConstructExpr 0x91f96e0 <col:21, col:57> '_Bool'
            (CXXOperatorCallExpr 0x91f96b8 <col:26, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x91f9678 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
              (CallExpr 0x91f9618 <col:26, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f95e0 <col:26, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f95c8 <col:26> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))
              (DeclRefExpr 0x91f9654 <col:41, col:51> 'const fmtflags':'const enum std::_Ios_Fmtflags' lvalue Var 0x90b69a0 'skipws' 'const fmtflags':'const enum std::_Ios_Fmtflags'))))
        (CompoundStmt 0x91f9f80 <line:56:6, line:72:6>
          (DeclStmt 0x91f9810 <line:57:8, col:51>
            0x91f9740 "const __int_type __eof =
              (CallExpr 0x91f97f0 <col:33, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f97b8 <col:33, col:46> '<dependent type>' lvalue))")
          (DeclStmt 0x91f9908 <line:58:8, col:45>
            0x91f9860 "__streambuf_type *__sb =
              (CallExpr 0x91f98e8 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f98b0 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f9894 <col:33> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x91f99c8 <line:59:8, col:38>
            0x91f9920 "__int_type __c =
              (CallExpr 0x91f99a8 <col:25, col:37> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f9970 <col:25, col:31> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f9954 <col:25> '__streambuf_type *' lvalue Var 0x91f9860 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x91f9b00 <line:61:8, col:63>
            0x91f9a20 "const __ctype_type &__ct =
              (CallExpr 0x91f9ae0 <col:35, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x91f9a58 <col:35> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
                (CXXDependentScopeMemberExpr 0x91f9aa8 <col:49, col:54> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f9a8c <col:49> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (WhileStmt 0x91f9dd8 <line:62:8, line:65:22>
            <<<NULL>>>
            (BinaryOperator 0x91f9d20 <line:62:15, line:64:35> '<dependent type>' '&&'
              (UnaryOperator 0x91f9bc0 <line:62:15, col:51> '<dependent type>' prefix '!'
                (CallExpr 0x91f9b98 <col:16, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91f9b30 <col:16, col:29> '<dependent type>' lvalue)
                  (DeclRefExpr 0x91f9b64 <col:41> '__int_type':'typename _Traits::int_type' lvalue Var 0x91f9920 '__c' '__int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x91f9b7c <col:46> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x91f9740 '__eof' 'const __int_type':'const typename _Traits::int_type')))
              (CallExpr 0x91f9cf8 <line:63:11, line:64:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f9bf0 <line:63:11, col:16> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f9bd4 <col:11> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x91f9a20 '__ct' 'const __ctype_type &'))
                (DeclRefExpr 0x91f9c44 <col:19, col:31> 'const mask':'const unsigned short' lvalue Var 0x90fccc0 'space' 'const mask':'const unsigned short')
                (CallExpr 0x91f9cd8 <line:64:5, col:34> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x91f9c88 <col:5, col:18> '<dependent type>' lvalue)
                  (DeclRefExpr 0x91f9cbc <col:31> '__int_type':'typename _Traits::int_type' lvalue Var 0x91f9920 '__c' '__int_type':'typename _Traits::int_type'))))
            (BinaryOperator 0x91f9dc0 <line:65:3, col:22> '<dependent type>' '='
              (DeclRefExpr 0x91f9d38 <col:3> '__int_type':'typename _Traits::int_type' lvalue Var 0x91f9920 '__c' '__int_type':'typename _Traits::int_type')
              (CallExpr 0x91f9da0 <col:9, col:22> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x91f9d68 <col:9, col:15> '<dependent type>' lvalue
                  (DeclRefExpr 0x91f9d50 <col:9> '__streambuf_type *' lvalue Var 0x91f9860 '__sb' '__streambuf_type *')))))
          (IfStmt 0x91f9f60 <line:70:8, line:71:22>
            <<<NULL>>>
            (CallExpr 0x91f9e80 <line:70:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x91f9e18 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x91f9e4c <col:37> '__int_type':'typename _Traits::int_type' lvalue Var 0x91f9920 '__c' '__int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x91f9e64 <col:42> 'const __int_type':'const typename _Traits::int_type' lvalue Var 0x91f9740 '__eof' 'const __int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x91f9f38 <line:71:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x91f9f28 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x91f9f10 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x91f9ea4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91f9320 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x91f9f00 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x91f9edc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x91fa2e8 <line:75:7, line:81:2>
    <<<NULL>>>
    (BinaryOperator 0x91fa120 <line:75:11, col:45> '<dependent type>' '&&'
      (CallExpr 0x91fa050 <col:11, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91fa018 <col:11, col:16> '<dependent type>' lvalue
          (DeclRefExpr 0x91f9ffc <col:11> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &')))
      (BinaryOperator 0x91fa108 <col:26, col:45> '_Bool' '=='
        (ImplicitCastExpr 0x91fa0e8 <col:26> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91fa0c8 <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91fa06c <col:26> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91f9320 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (ImplicitCastExpr 0x91fa0f8 <col:35, col:45> 'int' <IntegralCast>
          (ImplicitCastExpr 0x91fa0d8 <col:35, col:45> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91fa0a4 <col:35, col:45> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate')))))
    (BinaryOperator 0x91fa178 <line:76:2, col:10> '<dependent type>' '='
      (MemberExpr 0x91fa148 <col:2> '_Bool' lvalue ->_M_ok 0x91f4a40
        (CXXThisExpr 0x91fa138 <col:2> 'class std::basic_istream::sentry *' this))
      (CXXBoolLiteralExpr 0x91fa168 <col:10> '_Bool' true))
    (CompoundStmt 0x91fa2d0 <line:78:2, line:81:2>
      (CXXOperatorCallExpr 0x91fa220 <line:79:4, col:23> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x91fa210 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x91fa1f8 <col:10, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x91fa190 <col:4> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91f9320 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x91fa1e8 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x91fa1c4 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      (CallExpr 0x91fa2b0 <line:80:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x91fa260 <col:4, col:9> '<dependent type>' lvalue
          (DeclRefExpr 0x91fa244 <col:4> 'basic_istream<_CharT, _Traits>':'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x91f9130 '__in' 'basic_istream<_CharT, _Traits> &'))
        (DeclRefExpr 0x91fa294 <col:18> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91f9320 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))))


    template <typename _ValueT> basic_istream<_CharT, _Traits> &_M_extract(_ValueT &__v) (CompoundStmt 0x91fb170 </usr/include/c++/4.6/bits/istream.tcc:89:7, line:110:7>
  (DeclStmt 0x91faa80 <line:90:2, col:29>
    0x91fa9f0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x91faa60 <col:15, col:28> 'class std::basic_istream::sentry'
        (UnaryOperator 0x91faa38 <col:16, col:17> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91faa28 <col:17> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x91faa50 <col:23> '_Bool' false))")
  (IfStmt 0x91fb118 <line:91:2, line:108:4>
    <<<NULL>>>
    (DeclRefExpr 0x91faa90 <line:91:6> 'class std::basic_istream::sentry' lvalue Var 0x91fa9f0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x91fb0f0 <line:92:4, line:108:4>
      (DeclStmt 0x91fab68 <line:93:6, col:49>
        0x91faae0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x91fab58 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91fab34 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x91fae08 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:98:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91fab78 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x91fadf0 </usr/include/c++/4.6/bits/istream.tcc:95:8, line:98:8>
          (DeclStmt 0x91facc8 <line:96:3, col:63>
            0x91fabf0 "const __num_get_type &__ng =
              (CallExpr 0x91faca8 <col:32, col:62> '<dependent type>'
                (UnresolvedLookupExpr 0x91fac28 <col:32> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
                (CXXDependentScopeMemberExpr 0x91fac70 <col:46, col:52> '<dependent type>' lvalue
                  (CXXThisExpr 0x91fac60 <col:46> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x91fadc0 <line:97:3, col:39> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91facf0 <col:3, col:8> '<dependent type>' lvalue
              (DeclRefExpr 0x91facd8 <col:3> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x91fabf0 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x91fad38 <col:12, col:13> '<dependent type>' prefix '*'
              (CXXThisExpr 0x91fad28 <col:13> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x91fad50 <col:19> 'int' 0)
            (UnaryOperator 0x91fad78 <col:22, col:23> '<dependent type>' prefix '*'
              (CXXThisExpr 0x91fad68 <col:23> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91fad8c <col:29> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91faae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x91fada4 <col:36> '_ValueT' lvalue ParmVar 0x91fa730 '__v' '_ValueT &')))
        <<<NULL>>>)
      (IfStmt 0x91faf08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:103:8>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91fae28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91faef0 </usr/include/c++/4.6/bits/istream.tcc:100:8, line:103:8>
          (CallExpr 0x91faec0 <line:101:3, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91fae48 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x91fae38 <col:3> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91fae9c <col:21, col:31> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x91faee0 <line:102:26>))
        <<<NULL>>>)
      (IfStmt 0x91faff8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:105:47>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91faf28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x91fafe0 </usr/include/c++/4.6/bits/istream.tcc:105:8, col:47>
          (CallExpr 0x91fafc0 <col:10, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91faf48 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x91faf38 <col:10> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91faf9c <col:28, col:38> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x91fb0d0 <line:106:6, line:107:28>
        <<<NULL>>>
        (ImplicitCastExpr 0x91fb040 <line:106:10> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x91fb030 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91fb014 <col:10> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91faae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x91fb0b0 <line:107:8, col:28> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x91fb060 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x91fb050 <col:8> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x91fb094 <col:23> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91faae0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x91fb160 <line:109:2, col:10>
    (UnaryOperator 0x91fb148 <col:9, col:10> '<dependent type>' prefix '*'
      (CXXThisExpr 0x91fb138 <col:10> 'basic_istream<_CharT, _Traits> *' this))))

;
    basic_istream<_CharT, _Traits> &operator>>(short &__n) (CompoundStmt 0x9200828 </usr/include/c++/4.6/bits/istream.tcc:116:5, line:155:5>
  (DeclStmt 0x91fb7f0 <line:119:7, col:34>
    0x91fb760 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x91fb7d0 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x91fb7a8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x91fb798 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x91fb7c0 <col:28> '_Bool' false))")
  (IfStmt 0x92007d0 <line:120:7, line:153:2>
    <<<NULL>>>
    (DeclRefExpr 0x91fb800 <line:120:11> 'class std::basic_istream::sentry' lvalue Var 0x91fb760 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x92007a8 <line:121:2, line:153:2>
      (DeclStmt 0x91fb8d8 <line:122:4, col:47>
        0x91fb850 "ios_base::iostate __err =
          (ImplicitCastExpr 0x91fb8c8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x91fb8a4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x92004c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:143:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x91fb8e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92004a0 </usr/include/c++/4.6/bits/istream.tcc:124:6, line:143:6>
          (DeclStmt 0x91fb948 <line:125:8, col:16>
            0x91fb910 "long __l")
          (DeclStmt 0x91fba48 <line:126:8, col:68>
            0x91fb970 "const __num_get_type &__ng =
              (CallExpr 0x91fba28 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x91fb9a8 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
                (CXXDependentScopeMemberExpr 0x91fb9f0 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x91fb9e0 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x91fbb40 <line:127:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x91fba70 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x91fba58 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x91fb970 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x91fbab8 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x91fbaa8 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x91fbad0 <col:24> 'int' 0)
            (UnaryOperator 0x91fbaf8 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x91fbae8 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x91fbb0c <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91fb850 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x91fbb24 <col:41> 'long' lvalue Var 0x91fb910 '__l' 'long'))
          (IfStmt 0x9200480 <line:131:8, line:142:18>
            <<<NULL>>>
            (BinaryOperator 0x91ffeb8 <line:131:12, col:54> '_Bool' '<'
              (ImplicitCastExpr 0x91ffe88 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x91fbb70 <col:12> 'long' lvalue Var 0x91fb910 '__l' 'long'))
              (ImplicitCastExpr 0x91ffea8 <col:18, col:54> 'long' <IntegralCast>
                (ImplicitCastExpr 0x91ffe98 <col:18, col:54> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x91ffe68 <col:18, col:54> 'const short':'const short' lvalue Var 0x91ff580 '__min' 'const short':'const short'))))
            (CompoundStmt 0x92000a8 <line:132:3, line:135:3>
              (CXXOperatorCallExpr 0x91fff90 <line:133:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x91fff80 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x91fff68 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x91ffefc <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91fb850 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x91fff58 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x91fff34 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9200090 <line:134:5, col:47> 'short' lvalue '='
                (DeclRefExpr 0x91fffb4 <col:5> 'short' lvalue ParmVar 0x91fb510 '__n' 'short &')
                (ImplicitCastExpr 0x9200080 <col:11, col:47> 'short':'short' <LValueToRValue>
                  (DeclRefExpr 0x9200060 <col:11, col:47> 'const short':'const short' lvalue Var 0x91ff580 '__min' 'const short':'const short'))))
            (IfStmt 0x9200460 <line:136:13, line:142:18>
              <<<NULL>>>
              (BinaryOperator 0x92001c0 <line:136:17, col:59> '_Bool' '>'
                (ImplicitCastExpr 0x9200190 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x92000c0 <col:17> 'long' lvalue Var 0x91fb910 '__l' 'long'))
                (ImplicitCastExpr 0x92001b0 <col:23, col:59> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x92001a0 <col:23, col:59> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9200170 <col:23, col:59> 'const short':'const short' lvalue Var 0x91ff820 '__max' 'const short':'const short'))))
              (CompoundStmt 0x92003b8 <line:137:3, line:140:3>
                (CXXOperatorCallExpr 0x92002a0 <line:138:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9200290 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9200278 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x920020c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91fb850 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9200268 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9200244 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x92003a0 <line:139:5, col:47> 'short' lvalue '='
                  (DeclRefExpr 0x92002c4 <col:5> 'short' lvalue ParmVar 0x91fb510 '__n' 'short &')
                  (ImplicitCastExpr 0x9200390 <col:11, col:47> 'short':'short' <LValueToRValue>
                    (DeclRefExpr 0x9200370 <col:11, col:47> 'const short':'const short' lvalue Var 0x91ff820 '__max' 'const short':'const short'))))
              (BinaryOperator 0x9200448 <line:142:3, col:18> 'short' lvalue '='
                (DeclRefExpr 0x92003d0 <col:3> 'short' lvalue ParmVar 0x91fb510 '__n' 'short &')
                (CXXFunctionalCastExpr 0x9200430 <col:9, col:18> 'short' functional cast to short <NoOp>
                  (ImplicitCastExpr 0x9200420 <col:15> 'short' <IntegralCast>
                    (ImplicitCastExpr 0x9200410 <col:15> 'long' <LValueToRValue>
                      (DeclRefExpr 0x92003f4 <col:15> 'long' lvalue Var 0x91fb910 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x92005c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:148:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92004e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92005a8 </usr/include/c++/4.6/bits/istream.tcc:145:6, line:148:6>
          (CallExpr 0x9200578 <line:146:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9200500 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92004f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9200554 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9200598 <line:147:31>))
        <<<NULL>>>)
      (IfStmt 0x92006b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:150:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92005e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9200698 </usr/include/c++/4.6/bits/istream.tcc:150:6, col:45>
          (CallExpr 0x9200678 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9200600 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92005f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9200654 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9200788 <line:151:4, line:152:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x92006f8 <line:151:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x92006e8 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x92006cc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91fb850 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9200768 <line:152:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9200718 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9200708 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x920074c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x91fb850 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9200818 <line:154:7, col:15>
    (UnaryOperator 0x9200800 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92007f0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(int &__n) (CompoundStmt 0x9201ca8 </usr/include/c++/4.6/bits/istream.tcc:161:5, line:200:5>
  (DeclStmt 0x9200eb0 <line:164:7, col:34>
    0x9200e20 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9200e90 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9200e68 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9200e58 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9200e80 <col:28> '_Bool' false))")
  (IfStmt 0x9201c50 <line:165:7, line:198:2>
    <<<NULL>>>
    (DeclRefExpr 0x9200ec0 <line:165:11> 'class std::basic_istream::sentry' lvalue Var 0x9200e20 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9201c28 <line:166:2, line:198:2>
      (DeclStmt 0x9200f98 <line:167:4, col:47>
        0x9200f10 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9200f88 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9200f64 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9201940 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:188:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9200fa8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9201920 </usr/include/c++/4.6/bits/istream.tcc:169:6, line:188:6>
          (DeclStmt 0x9201008 <line:170:8, col:16>
            0x9200fd0 "long __l")
          (DeclStmt 0x9201108 <line:171:8, col:68>
            0x9201030 "const __num_get_type &__ng =
              (CallExpr 0x92010e8 <col:37, col:67> '<dependent type>'
                (UnresolvedLookupExpr 0x9201068 <col:37> '<overloaded function type>' lvalue (ADL) = '1' 0x9198b40)
                (CXXDependentScopeMemberExpr 0x92010b0 <col:51, col:57> '<dependent type>' lvalue
                  (CXXThisExpr 0x92010a0 <col:51> 'basic_istream<_CharT, _Traits> *' this)))")
          (CallExpr 0x9201200 <line:172:8, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9201130 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9201118 <col:8> 'const __num_get_type':'const num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >' lvalue Var 0x9201030 '__ng' 'const __num_get_type &'))
            (UnaryOperator 0x9201178 <col:17, col:18> '<dependent type>' prefix '*'
              (CXXThisExpr 0x9201168 <col:18> 'basic_istream<_CharT, _Traits> *' this))
            (IntegerLiteral 0x9201190 <col:24> 'int' 0)
            (UnaryOperator 0x92011b8 <col:27, col:28> '<dependent type>' prefix '*'
              (CXXThisExpr 0x92011a8 <col:28> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92011cc <col:34> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9200f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
            (DeclRefExpr 0x92011e4 <col:41> 'long' lvalue Var 0x9200fd0 '__l' 'long'))
          (IfStmt 0x9201900 <line:176:8, line:187:16>
            <<<NULL>>>
            (BinaryOperator 0x9201330 <line:176:12, col:52> '_Bool' '<'
              (ImplicitCastExpr 0x9201300 <col:12> 'long' <LValueToRValue>
                (DeclRefExpr 0x9201230 <col:12> 'long' lvalue Var 0x9200fd0 '__l' 'long'))
              (ImplicitCastExpr 0x9201320 <col:18, col:52> 'long' <IntegralCast>
                (ImplicitCastExpr 0x9201310 <col:18, col:52> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x92012e0 <col:18, col:52> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int'))))
            (CompoundStmt 0x9201528 <line:177:3, line:180:3>
              (CXXOperatorCallExpr 0x9201410 <line:178:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9201400 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92013e8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x920137c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9200f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x92013d8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x92013b4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
              (BinaryOperator 0x9201510 <line:179:5, col:45> 'int' lvalue '='
                (DeclRefExpr 0x9201434 <col:5> 'int' lvalue ParmVar 0x9200bd0 '__n' 'int &')
                (ImplicitCastExpr 0x9201500 <col:11, col:45> 'int':'int' <LValueToRValue>
                  (DeclRefExpr 0x92014e0 <col:11, col:45> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int'))))
            (IfStmt 0x92018e0 <line:181:13, line:187:16>
              <<<NULL>>>
              (BinaryOperator 0x9201640 <line:181:17, col:57> '_Bool' '>'
                (ImplicitCastExpr 0x9201610 <col:17> 'long' <LValueToRValue>
                  (DeclRefExpr 0x9201540 <col:17> 'long' lvalue Var 0x9200fd0 '__l' 'long'))
                (ImplicitCastExpr 0x9201630 <col:23, col:57> 'long' <IntegralCast>
                  (ImplicitCastExpr 0x9201620 <col:23, col:57> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x92015f0 <col:23, col:57> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))))
              (CompoundStmt 0x9201838 <line:182:3, line:185:3>
                (CXXOperatorCallExpr 0x9201720 <line:183:5, col:24> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9201710 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x92016f8 <col:11, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x920168c <col:5> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9200f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x92016e8 <col:14, col:24> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x92016c4 <col:14, col:24> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9201820 <line:184:5, col:45> 'int' lvalue '='
                  (DeclRefExpr 0x9201744 <col:5> 'int' lvalue ParmVar 0x9200bd0 '__n' 'int &')
                  (ImplicitCastExpr 0x9201810 <col:11, col:45> 'int':'int' <LValueToRValue>
                    (DeclRefExpr 0x92017f0 <col:11, col:45> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))))
              (BinaryOperator 0x92018c8 <line:187:3, col:16> 'int' lvalue '='
                (DeclRefExpr 0x9201850 <col:3> 'int' lvalue ParmVar 0x9200bd0 '__n' 'int &')
                (CXXFunctionalCastExpr 0x92018b0 <col:9, col:16> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x92018a0 <col:13> 'int' <IntegralCast>
                    (ImplicitCastExpr 0x9201890 <col:13> 'long' <LValueToRValue>
                      (DeclRefExpr 0x9201874 <col:13> 'long' lvalue Var 0x9200fd0 '__l' 'long'))))))))
        <<<NULL>>>)
      (IfStmt 0x9201a40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:193:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9201960 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9201a28 </usr/include/c++/4.6/bits/istream.tcc:190:6, line:193:6>
          (CallExpr 0x92019f8 <line:191:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9201980 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9201970 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92019d4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9201a18 <line:192:31>))
        <<<NULL>>>)
      (IfStmt 0x9201b30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:195:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9201a60 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9201b18 </usr/include/c++/4.6/bits/istream.tcc:195:6, col:45>
          (CallExpr 0x9201af8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9201a80 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9201a70 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9201ad4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9201c08 <line:196:4, line:197:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9201b78 <line:196:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9201b68 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9201b4c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9200f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9201be8 <line:197:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9201b98 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9201b88 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9201bcc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9200f10 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9201c98 <line:199:7, col:15>
    (UnaryOperator 0x9201c80 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9201c70 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &operator>>(__streambuf_type *__sbout) (CompoundStmt 0x9202c28 </usr/include/c++/4.6/bits/istream.tcc:206:5, line:232:5>
  (DeclStmt 0x9202358 <line:207:7, col:50>
    0x92022d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9202348 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9202324 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9202400 <line:208:7, col:34>
    0x9202370 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x92023e0 <col:20, col:33> 'class std::basic_istream::sentry'
        (UnaryOperator 0x92023b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92023a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x92023d0 <col:28> '_Bool' false))")
  (IfStmt 0x9202af8 <line:209:7, line:228:21>
    <<<NULL>>>
    (BinaryOperator 0x9202440 <line:209:11, col:21> '<dependent type>' '&&'
      (DeclRefExpr 0x9202410 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x9202370 '__cerb' 'class std::basic_istream::sentry')
      (DeclRefExpr 0x9202428 <col:21> '__streambuf_type *' lvalue ParmVar 0x9202050 '__sbout' '__streambuf_type *'))
    (CompoundStmt 0x92029d0 <line:210:2, line:226:2>
      (IfStmt 0x92027c0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:218:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9202458 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92027a0 </usr/include/c++/4.6/bits/istream.tcc:212:6, line:218:6>
          (DeclStmt 0x92024a8 <line:213:8, col:20>
            0x9202470 "bool __ineof")
          (IfStmt 0x9202680 <line:214:8, line:215:22>
            <<<NULL>>>
            (UnaryOperator 0x92025b0 <line:214:12, col:66> '<dependent type>' prefix '!'
              (CallExpr 0x9202588 <col:13, col:66> '<dependent type>'
                (UnresolvedLookupExpr 0x92024b8 <col:13> '<overloaded function type>' lvalue (ADL) = '1' 0x90e7f90)
                (CallExpr 0x9202538 <col:35, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9202500 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x92024f0 <col:35> 'basic_istream<_CharT, _Traits> *' this)))
                (DeclRefExpr 0x9202554 <col:50> '__streambuf_type *' lvalue ParmVar 0x9202050 '__sbout' '__streambuf_type *')
                (DeclRefExpr 0x920256c <col:59> '_Bool' lvalue Var 0x9202470 '__ineof' '_Bool')))
            (CXXOperatorCallExpr 0x9202658 <line:215:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9202648 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9202630 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x92025c4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92022d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9202620 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x92025fc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (IfStmt 0x9202780 <line:216:8, line:217:22>
            <<<NULL>>>
            (ImplicitCastExpr 0x92026b8 <line:216:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x920269c <col:12> '_Bool' lvalue Var 0x9202470 '__ineof' '_Bool'))
            (CXXOperatorCallExpr 0x9202758 <line:217:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9202748 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9202730 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x92026c4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92022d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9202720 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x92026fc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x92028c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:223:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92027e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92028a8 </usr/include/c++/4.6/bits/istream.tcc:220:6, line:223:6>
          (CallExpr 0x9202878 <line:221:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9202800 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92027f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9202854 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9202898 <line:222:31>))
        <<<NULL>>>)
      (IfStmt 0x92029b0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:225:46>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92028e0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9202998 </usr/include/c++/4.6/bits/istream.tcc:225:6, col:46>
          (CallExpr 0x9202978 <col:8, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9202900 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92028f0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9202954 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    (IfStmt 0x9202ad8 <line:227:12, line:228:21>
      <<<NULL>>>
      (UnaryOperator 0x9202a08 <line:227:16, col:17> '<dependent type>' prefix '!'
        (DeclRefExpr 0x92029ec <col:17> '__streambuf_type *' lvalue ParmVar 0x9202050 '__sbout' '__streambuf_type *'))
      (CXXOperatorCallExpr 0x9202ab0 <line:228:2, col:21> 'const enum std::_Ios_Iostate' lvalue
        (ImplicitCastExpr 0x9202aa0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9202a88 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
        (DeclRefExpr 0x9202a1c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92022d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
        (ImplicitCastExpr 0x9202a78 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9202a54 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
      <<<NULL>>>))
  (IfStmt 0x9202bd0 <line:229:7, line:230:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9202b40 <line:229:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9202b30 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9202b14 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92022d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9202bb0 <line:230:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9202b60 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9202b50 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9202b94 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92022d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9202c18 <line:231:7, col:15>
    (UnaryOperator 0x9202c00 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9202bf0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type get() (CompoundStmt 0x9203d30 </usr/include/c++/4.6/bits/istream.tcc:238:5, line:268:5>
  (DeclStmt 0x9203320 <line:239:7, col:48>
    0x9203250 "const int_type __eof =
      (CallExpr 0x9203300 <col:30, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92032c8 <col:30, col:43> '<dependent type>' lvalue))")
  (DeclStmt 0x9203390 <line:240:7, col:27>
    0x9203340 "int_type __c =
      (DeclRefExpr 0x9203374 <col:22> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9203250 '__eof' 'const int_type':'const typename _Traits::int_type')")
  (BinaryOperator 0x92033e8 <line:241:7, col:19> '<dependent type>' '='
    (MemberExpr 0x92033b0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x92033a0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x92033d0 <col:19> 'int' 0))
  (DeclStmt 0x92034b8 <line:242:7, col:50>
    0x9203430 "ios_base::iostate __err =
      (ImplicitCastExpr 0x92034a8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9203484 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9203560 <line:243:7, col:33>
    0x92034d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9203540 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9203518 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9203508 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9203530 <col:28> '_Bool' true))")
  (IfStmt 0x9203ad0 <line:244:7, line:262:2>
    <<<NULL>>>
    (DeclRefExpr 0x9203570 <line:244:11> 'class std::basic_istream::sentry' lvalue Var 0x92034d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9203ab0 <line:245:2, line:262:2>
      (IfStmt 0x92038a0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:254:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9203588 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9203888 </usr/include/c++/4.6/bits/istream.tcc:247:6, line:254:6>
          (BinaryOperator 0x9203670 <line:248:8, col:36> '<dependent type>' '='
            (DeclRefExpr 0x9203598 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x9203340 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x9203650 <col:14, col:36> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9203618 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x92035f8 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92035c0 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x92035b0 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x9203868 <line:250:8, line:253:22>
            <<<NULL>>>
            (UnaryOperator 0x9203738 <line:250:12, col:48> '<dependent type>' prefix '!'
              (CallExpr 0x9203710 <col:13, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92036a8 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x92036dc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9203340 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x92036f4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9203250 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (BinaryOperator 0x9203798 <line:251:3, col:15> '<dependent type>' '='
              (MemberExpr 0x9203760 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x9203750 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x9203780 <col:15> 'int' 1))
            (CXXOperatorCallExpr 0x9203840 <line:253:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9203830 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9203818 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x92037b0 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9203430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9203808 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x92037e4 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x92039a0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:259:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92038c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9203988 </usr/include/c++/4.6/bits/istream.tcc:256:6, line:259:6>
          (CallExpr 0x9203958 <line:257:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92038e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92038d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9203934 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9203978 <line:258:31>))
        <<<NULL>>>)
      (IfStmt 0x9203a90 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:261:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92039c0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9203a78 </usr/include/c++/4.6/bits/istream.tcc:261:6, col:45>
          (CallExpr 0x9203a58 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92039e0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92039d0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9203a34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9203c10 <line:263:7, line:264:21>
    <<<NULL>>>
    (UnaryOperator 0x9203b40 <line:263:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9203b30 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9203b20 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9203b00 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
            (CXXThisExpr 0x9203af0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9203be8 <line:264:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9203bd8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9203bc0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9203b54 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9203430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9203bb0 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9203b8c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9203ce8 <line:265:7, line:266:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9203c58 <line:265:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9203c48 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9203c2c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9203430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9203cc8 <line:266:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9203c78 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9203c68 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9203cac <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9203430 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9203d20 <line:267:7, col:14>
    (DeclRefExpr 0x9203d04 <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x9203340 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &get(char_type &__c) (CompoundStmt 0x9204e38 </usr/include/c++/4.6/bits/istream.tcc:274:5, line:305:5>
  (BinaryOperator 0x9204380 <line:275:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9204348 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9204338 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9204368 <col:19> 'int' 0))
  (DeclStmt 0x9204458 <line:276:7, col:50>
    0x92043d0 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9204448 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9204424 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9204500 <line:277:7, col:33>
    0x9204470 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x92044e0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x92044b8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92044a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x92044d0 <col:28> '_Bool' true))")
  (IfStmt 0x9204bc8 <line:278:7, line:299:2>
    <<<NULL>>>
    (DeclRefExpr 0x9204510 <line:278:11> 'class std::basic_istream::sentry' lvalue Var 0x9204470 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9204ba8 <line:279:2, line:299:2>
      (IfStmt 0x9204998 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:291:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9204528 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9204980 </usr/include/c++/4.6/bits/istream.tcc:281:6, line:291:6>
          (DeclStmt 0x9204638 <line:282:8, col:53>
            0x9204540 "const int_type __cb =
              (CallExpr 0x9204618 <col:30, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92045e0 <col:30, col:45> '<dependent type>' lvalue
                  (CallExpr 0x92045c0 <col:30, col:42> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9204588 <col:30, col:36> '<dependent type>' lvalue
                      (CXXThisExpr 0x9204578 <col:30> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x9204960 <line:284:8, line:290:22>
            <<<NULL>>>
            (UnaryOperator 0x9204758 <line:284:12, col:62> '<dependent type>' prefix '!'
              (CallExpr 0x9204730 <col:13, col:62> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9204668 <col:13, col:26> '<dependent type>' lvalue)
                (DeclRefExpr 0x920469c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9204540 '__cb' 'const int_type':'const typename _Traits::int_type')
                (CallExpr 0x9204710 <col:44, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92046d8 <col:44, col:57> '<dependent type>' lvalue))))
            (CompoundStmt 0x9204890 <line:285:3, line:288:3>
              (BinaryOperator 0x92047b8 <line:286:5, col:17> '<dependent type>' '='
                (MemberExpr 0x9204780 <col:5> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                  (CXXThisExpr 0x9204770 <col:5> 'basic_istream<_CharT, _Traits> *' this))
                (IntegerLiteral 0x92047a0 <col:17> 'int' 1))
              (BinaryOperator 0x9204878 <line:287:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x92047d0 <col:5> 'char_type':'_CharT' lvalue ParmVar 0x92040f0 '__c' 'char_type &')
                (CallExpr 0x9204858 <col:11, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9204808 <col:11, col:24> '<dependent type>' lvalue)
                  (DeclRefExpr 0x920483c <col:37> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9204540 '__cb' 'const int_type':'const typename _Traits::int_type'))))
            (CXXOperatorCallExpr 0x9204938 <line:290:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9204928 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9204910 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x92048a8 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92043d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9204900 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x92048dc <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
        <<<NULL>>>)
      (IfStmt 0x9204a98 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:296:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92049b8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9204a80 </usr/include/c++/4.6/bits/istream.tcc:293:6, line:296:6>
          (CallExpr 0x9204a50 <line:294:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92049d8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92049c8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9204a2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9204a70 <line:295:31>))
        <<<NULL>>>)
      (IfStmt 0x9204b88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:298:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9204ab8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9204b70 </usr/include/c++/4.6/bits/istream.tcc:298:6, col:45>
          (CallExpr 0x9204b50 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9204ad8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9204ac8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9204b2c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9204d08 <line:300:7, line:301:21>
    <<<NULL>>>
    (UnaryOperator 0x9204c38 <line:300:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9204c28 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9204c18 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9204bf8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
            (CXXThisExpr 0x9204be8 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9204ce0 <line:301:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9204cd0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9204cb8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9204c4c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92043d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9204ca8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9204c84 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9204de0 <line:302:7, line:303:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9204d50 <line:302:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9204d40 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9204d24 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92043d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9204dc0 <line:303:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9204d70 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9204d60 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9204da4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92043d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9204e28 <line:304:7, col:15>
    (UnaryOperator 0x9204e10 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9204e00 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9206658 </usr/include/c++/4.6/bits/istream.tcc:311:5, line:352:5>
  (BinaryOperator 0x9205518 <line:312:7, col:19> '<dependent type>' '='
    (MemberExpr 0x92054e0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x92054d0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9205500 <col:19> 'int' 0))
  (DeclStmt 0x92055e8 <line:313:7, col:50>
    0x9205560 "ios_base::iostate __err =
      (ImplicitCastExpr 0x92055d8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x92055b4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9205690 <line:314:7, col:33>
    0x9205600 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9205670 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9205648 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9205638 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9205660 <col:28> '_Bool' true))")
  (IfStmt 0x9206308 <line:315:7, line:342:2>
    <<<NULL>>>
    (DeclRefExpr 0x92056a0 <line:315:11> 'class std::basic_istream::sentry' lvalue Var 0x9205600 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x92062e8 <line:316:2, line:342:2>
      (IfStmt 0x92060d8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:334:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92056b8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92060b0 </usr/include/c++/4.6/bits/istream.tcc:318:6, line:334:6>
          (DeclStmt 0x9205798 <line:319:8, col:67>
            0x92056d0 "const int_type __idelim =
              (CallExpr 0x9205778 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9205728 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x920575c <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9205270 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9205860 <line:320:8, col:49>
            0x92057b0 "const int_type __eof =
              (CallExpr 0x9205840 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9205808 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x9205920 <line:321:8, col:46>
            0x9205880 "__streambuf_type *__sb =
              (CallExpr 0x9205900 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92058c8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x92058b8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x92059e8 <line:322:8, col:36>
            0x9205940 "int_type __c =
              (CallExpr 0x92059c8 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9205990 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x9205974 <col:23> '__streambuf_type *' lvalue Var 0x9205880 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9205f08 <line:324:8, line:331:3>
            <<<NULL>>>
            (BinaryOperator 0x9205ce0 <line:324:15, line:326:50> '<dependent type>' '&&'
              (BinaryOperator 0x9205c00 <line:324:15, line:325:47> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9205b10 <line:324:15, col:31> '<dependent type>'
                  (UnresolvedLookupExpr 0x9205ac8 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                  (CXXOperatorCallExpr 0x9205a88 <col:15, col:27> '<dependent type>'
                    (UnresolvedLookupExpr 0x9205a40 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                    (MemberExpr 0x9205a08 <col:15> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x92059f8 <col:15> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x9205a28 <col:27> 'int' 1))
                  (DeclRefExpr 0x9205aac <col:31> 'streamsize':'int' lvalue ParmVar 0x9205230 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9205be8 <line:325:11, col:47> '<dependent type>' prefix '!'
                  (CallExpr 0x9205bc0 <col:12, col:47> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9205b58 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9205b8c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9205940 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9205ba4 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x92057b0 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9205cc8 <line:326:11, col:50> '<dependent type>' prefix '!'
                (CallExpr 0x9205ca0 <col:12, col:50> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9205c38 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9205c6c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9205940 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9205c84 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x92056d0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9205ee8 <line:327:3, line:331:3>
              (BinaryOperator 0x9205de8 <line:328:5, col:43> '<dependent type>' '='
                (UnaryOperator 0x9205d40 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9205d28 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9205cf8 <col:6> 'char_type *' lvalue ParmVar 0x92051f0 '__s' 'char_type *')))
                (CallExpr 0x9205dc8 <col:14, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9205d78 <col:14, col:27> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9205dac <col:40> 'int_type':'typename _Traits::int_type' lvalue Var 0x9205940 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x9205e30 <line:329:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x9205e10 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                  (CXXThisExpr 0x9205e00 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9205ed0 <line:330:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x9205e44 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9205940 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9205eb0 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9205e78 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x9205e5c <col:11> '__streambuf_type *' lvalue Var 0x9205880 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x9206090 <line:332:8, line:333:22>
            <<<NULL>>>
            (CallExpr 0x9205fb0 <line:332:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9205f48 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x9205f7c <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9205940 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9205f94 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x92057b0 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9206068 <line:333:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9206058 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9206040 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9205fd4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9205560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9206030 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920600c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x92061d8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:339:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92060f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92061c0 </usr/include/c++/4.6/bits/istream.tcc:336:6, line:339:6>
          (CallExpr 0x9206190 <line:337:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9206118 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9206108 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920616c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x92061b0 <line:338:31>))
        <<<NULL>>>)
      (IfStmt 0x92062c8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:341:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92061f8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92062b0 </usr/include/c++/4.6/bits/istream.tcc:341:6, col:45>
          (CallExpr 0x9206290 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9206218 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9206208 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920626c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x92063e8 <line:345:7, line:346:19>
    <<<NULL>>>
    (BinaryOperator 0x9206368 <line:345:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9206358 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x9206324 <col:11> 'streamsize':'int' lvalue ParmVar 0x9205230 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9206340 <col:17> 'int' 0))
    (BinaryOperator 0x92063d0 <line:346:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x9206398 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x9206380 <col:3> 'char_type *' lvalue ParmVar 0x92051f0 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x92063b8 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9206528 <line:347:7, line:348:21>
    <<<NULL>>>
    (UnaryOperator 0x9206458 <line:347:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9206448 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9206438 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9206418 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
            (CXXThisExpr 0x9206408 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9206500 <line:348:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x92064f0 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92064d8 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x920646c <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9205560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x92064c8 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x92064a4 <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9206600 <line:349:7, line:350:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9206570 <line:349:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9206560 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9206544 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9205560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x92065e0 <line:350:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9206590 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9206580 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x92065c4 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9205560 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9206648 <line:351:7, col:15>
    (UnaryOperator 0x9206630 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9206620 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &get(__streambuf_type &__sb, char_type __delim) (CompoundStmt 0x9207df0 </usr/include/c++/4.6/bits/istream.tcc:358:5, line:396:5>
  (BinaryOperator 0x9206ce0 <line:359:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9206ca8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9206c98 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9206cc8 <col:19> 'int' 0))
  (DeclStmt 0x9206db8 <line:360:7, col:50>
    0x9206d30 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9206da8 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9206d84 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9206e60 <line:361:7, col:33>
    0x9206dd0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9206e40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9206e18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9206e08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9206e30 <col:28> '_Bool' true))")
  (IfStmt 0x9207b80 <line:362:7, line:390:2>
    <<<NULL>>>
    (DeclRefExpr 0x9206e70 <line:362:11> 'class std::basic_istream::sentry' lvalue Var 0x9206dd0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9207b60 <line:363:2, line:390:2>
      (IfStmt 0x9207950 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:382:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9206e88 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9207920 </usr/include/c++/4.6/bits/istream.tcc:365:6, line:382:6>
          (DeclStmt 0x9206f68 <line:366:8, col:67>
            0x9206ea0 "const int_type __idelim =
              (CallExpr 0x9206f48 <col:34, col:66> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9206ef8 <col:34, col:47> '<dependent type>' lvalue)
                (DeclRefExpr 0x9206f2c <col:59> 'char_type':'_CharT' lvalue ParmVar 0x9206a50 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9207030 <line:367:8, col:49>
            0x9206f80 "const int_type __eof =
              (CallExpr 0x9207010 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9206fd8 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x92070f0 <line:368:8, col:51>
            0x9207050 "__streambuf_type *__this_sb =
              (CallExpr 0x92070d0 <col:38, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9207098 <col:38, col:44> '<dependent type>' lvalue
                  (CXXThisExpr 0x9207088 <col:38> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x92071b8 <line:369:8, col:41>
            0x9207110 "int_type __c =
              (CallExpr 0x9207198 <col:23, col:40> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9207160 <col:23, col:34> '<dependent type>' lvalue
                  (DeclRefExpr 0x9207144 <col:23> '__streambuf_type *' lvalue Var 0x9207050 '__this_sb' '__streambuf_type *')))")
          (DeclStmt 0x9207298 <line:370:8, col:55>
            0x92071d0 "char_type __c2 =
              (CallExpr 0x9207278 <col:25, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9207228 <col:25, col:38> '<dependent type>' lvalue)
                (DeclRefExpr 0x920725c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type'))")
          (WhileStmt 0x9207778 <line:372:8, line:379:3>
            <<<NULL>>>
            (BinaryOperator 0x9207598 <line:372:15, line:374:60> '<dependent type>' '&&'
              (BinaryOperator 0x9207448 <line:372:15, line:373:50> '<dependent type>' '&&'
                (UnaryOperator 0x9207358 <line:372:15, col:51> '<dependent type>' prefix '!'
                  (CallExpr 0x9207330 <col:16, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92072c8 <col:16, col:29> '<dependent type>' lvalue)
                    (DeclRefExpr 0x92072fc <col:41> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9207314 <col:46> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9206f80 '__eof' 'const int_type':'const typename _Traits::int_type')))
                (UnaryOperator 0x9207430 <line:373:11, col:50> '<dependent type>' prefix '!'
                  (CallExpr 0x92073f8 <col:12, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9207390 <col:12, col:25> '<dependent type>' lvalue)
                    (DeclRefExpr 0x92073c4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x92073dc <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9206ea0 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9207580 <line:374:11, col:60> '<dependent type>' prefix '!'
                (CallExpr 0x9207558 <col:12, col:60> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9207480 <col:12, col:25> '<dependent type>' lvalue)
                  (CallExpr 0x9207520 <col:37, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92074d0 <col:37, col:42> '<dependent type>' lvalue
                      (DeclRefExpr 0x92074b4 <col:37> '__streambuf_type':'basic_streambuf<_CharT, _Traits>' lvalue ParmVar 0x9206a10 '__sb' '__streambuf_type &'))
                    (DeclRefExpr 0x9207504 <col:48> 'char_type':'_CharT' lvalue Var 0x92071d0 '__c2' 'char_type':'_CharT'))
                  (DeclRefExpr 0x9207540 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9206f80 '__eof' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9207758 <line:375:3, line:379:3>
              (UnaryOperator 0x92075e0 <line:376:5, col:7> '<dependent type>' prefix '++'
                (MemberExpr 0x92075c0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                  (CXXThisExpr 0x92075b0 <col:7> 'basic_istream<_CharT, _Traits> *' this)))
              (BinaryOperator 0x9207680 <line:377:5, col:29> '<dependent type>' '='
                (DeclRefExpr 0x92075f4 <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9207660 <col:11, col:29> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9207628 <col:11, col:22> '<dependent type>' lvalue
                    (DeclRefExpr 0x920760c <col:11> '__streambuf_type *' lvalue Var 0x9207050 '__this_sb' '__streambuf_type *'))))
              (BinaryOperator 0x9207740 <line:378:5, col:41> '<dependent type>' '='
                (DeclRefExpr 0x9207698 <col:5> 'char_type':'_CharT' lvalue Var 0x92071d0 '__c2' 'char_type':'_CharT')
                (CallExpr 0x9207720 <col:12, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92076d0 <col:12, col:25> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9207704 <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type')))))
          (IfStmt 0x9207900 <line:380:8, line:381:22>
            <<<NULL>>>
            (CallExpr 0x9207820 <line:380:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x92077b8 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x92077ec <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x9207110 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9207804 <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9206f80 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x92078d8 <line:381:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x92078c8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x92078b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9207844 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9206d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x92078a0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920787c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9207a50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:387:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9207970 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9207a38 </usr/include/c++/4.6/bits/istream.tcc:384:6, line:387:6>
          (CallExpr 0x9207a08 <line:385:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9207990 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9207980 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92079e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9207a28 <line:386:31>))
        <<<NULL>>>)
      (IfStmt 0x9207b40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:389:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9207a70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9207b28 </usr/include/c++/4.6/bits/istream.tcc:389:6, col:45>
          (CallExpr 0x9207b08 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9207a90 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9207a80 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9207ae4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9207cc0 <line:391:7, line:392:21>
    <<<NULL>>>
    (UnaryOperator 0x9207bf0 <line:391:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9207be0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9207bd0 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9207bb0 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
            (CXXThisExpr 0x9207ba0 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9207c98 <line:392:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9207c88 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9207c70 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9207c04 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9206d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x9207c60 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9207c3c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9207d98 <line:393:7, line:394:22>
    <<<NULL>>>
    (ImplicitCastExpr 0x9207d08 <line:393:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9207cf8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9207cdc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9206d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9207d78 <line:394:2, col:22> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9207d28 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9207d18 <col:2> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x9207d5c <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9206d30 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9207de0 <line:395:7, col:15>
    (UnaryOperator 0x9207dc8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9207db8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &getline(char_type *__s, streamsize __n, char_type __delim) (CompoundStmt 0x9209880 </usr/include/c++/4.6/bits/istream.tcc:402:5, line:453:5>
  (BinaryOperator 0x92084c8 <line:403:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9208490 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9208480 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x92084b0 <col:19> 'int' 0))
  (DeclStmt 0x9208598 <line:404:7, col:50>
    0x9208510 "ios_base::iostate __err =
      (ImplicitCastExpr 0x9208588 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x9208564 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x9208640 <line:405:7, col:33>
    0x92085b0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9208620 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x92085f8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92085e8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9208610 <col:28> '_Bool' true))")
  (IfStmt 0x9209530 <line:406:7, line:443:9>
    <<<NULL>>>
    (DeclRefExpr 0x9208650 <line:406:11> 'class std::basic_istream::sentry' lvalue Var 0x92085b0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9209510 <line:407:9, line:443:9>
      (IfStmt 0x9209300 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:435:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9208668 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92092d8 </usr/include/c++/4.6/bits/istream.tcc:409:13, line:435:13>
          (DeclStmt 0x9208748 <line:410:15, col:74>
            0x9208680 "const int_type __idelim =
              (CallExpr 0x9208728 <col:41, col:73> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92086d8 <col:41, col:54> '<dependent type>' lvalue)
                (DeclRefExpr 0x920870c <col:66> 'char_type':'_CharT' lvalue ParmVar 0x9208220 '__delim' 'char_type':'_CharT'))")
          (DeclStmt 0x9208810 <line:411:15, col:56>
            0x9208760 "const int_type __eof =
              (CallExpr 0x92087f0 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92087b8 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x92088d0 <line:412:15, col:53>
            0x9208830 "__streambuf_type *__sb =
              (CallExpr 0x92088b0 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9208878 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9208868 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x9208998 <line:413:15, col:43>
            0x92088f0 "int_type __c =
              (CallExpr 0x9208978 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9208940 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x9208924 <col:30> '__streambuf_type *' lvalue Var 0x9208830 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x9208eb8 <line:415:15, line:422:17>
            <<<NULL>>>
            (BinaryOperator 0x9208c90 <line:415:22, line:417:64> '<dependent type>' '&&'
              (BinaryOperator 0x9208bb0 <line:415:22, line:416:61> '<dependent type>' '&&'
                (CXXOperatorCallExpr 0x9208ac0 <line:415:22, col:38> '<dependent type>'
                  (UnresolvedLookupExpr 0x9208a78 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                  (CXXOperatorCallExpr 0x9208a38 <col:22, col:34> '<dependent type>'
                    (UnresolvedLookupExpr 0x92089f0 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                    (MemberExpr 0x92089b8 <col:22> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x92089a8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
                    (IntegerLiteral 0x92089d8 <col:34> 'int' 1))
                  (DeclRefExpr 0x9208a5c <col:38> 'streamsize':'int' lvalue ParmVar 0x92081e0 '__n' 'streamsize':'int'))
                (UnaryOperator 0x9208b98 <line:416:25, col:61> '<dependent type>' prefix '!'
                  (CallExpr 0x9208b70 <col:26, col:61> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9208b08 <col:26, col:39> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9208b3c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x9208b54 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9208760 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x9208c78 <line:417:25, col:64> '<dependent type>' prefix '!'
                (CallExpr 0x9208c50 <col:26, col:64> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9208be8 <col:26, col:39> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9208c1c <col:51> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x9208c34 <col:56> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9208680 '__idelim' 'const int_type':'const typename _Traits::int_type'))))
            (CompoundStmt 0x9208e98 <line:418:17, line:422:17>
              (BinaryOperator 0x9208d98 <line:419:19, col:57> '<dependent type>' '='
                (UnaryOperator 0x9208cf0 <col:19, col:23> '<dependent type>' prefix '*'
                  (UnaryOperator 0x9208cd8 <col:20, col:23> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x9208ca8 <col:20> 'char_type *' lvalue ParmVar 0x92081a0 '__s' 'char_type *')))
                (CallExpr 0x9208d78 <col:28, col:57> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9208d28 <col:28, col:41> '<dependent type>' lvalue)
                  (DeclRefExpr 0x9208d5c <col:54> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')))
              (BinaryOperator 0x9208e38 <line:420:19, col:38> '<dependent type>' '='
                (DeclRefExpr 0x9208db0 <col:19> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x9208e18 <col:25, col:38> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9208de0 <col:25, col:31> '<dependent type>' lvalue
                    (DeclRefExpr 0x9208dc8 <col:25> '__streambuf_type *' lvalue Var 0x9208830 '__sb' '__streambuf_type *'))))
              (UnaryOperator 0x9208e80 <line:421:19, col:21> '<dependent type>' prefix '++'
                (MemberExpr 0x9208e60 <col:21> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                  (CXXThisExpr 0x9208e50 <col:21> 'basic_istream<_CharT, _Traits> *' this)))))
          (IfStmt 0x92092b8 <line:423:15, line:434:17>
            <<<NULL>>>
            (CallExpr 0x9208f60 <line:423:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9208ef8 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x9208f2c <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x9208f44 <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9208760 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x9209018 <line:424:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9209008 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9208ff0 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9208f84 <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9208510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9208fe0 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9208fbc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (CompoundStmt 0x92092a0 <line:426:17, line:434:17>
              (IfStmt 0x9209280 <line:427:19, line:433:40>
                <<<NULL>>>
                (CallExpr 0x92090d0 <line:427:23, col:61> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9209068 <col:23, col:36> '<dependent type>' lvalue)
                  (DeclRefExpr 0x920909c <col:48> 'int_type':'typename _Traits::int_type' lvalue Var 0x92088f0 '__c' 'int_type':'typename _Traits::int_type')
                  (DeclRefExpr 0x92090b4 <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9208680 '__idelim' 'const int_type':'const typename _Traits::int_type'))
                (CompoundStmt 0x92091b0 <line:428:21, line:431:21>
                  (CallExpr 0x9209148 <line:429:23, col:36> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9209110 <col:23, col:29> '<dependent type>' lvalue
                      (DeclRefExpr 0x92090f4 <col:23> '__streambuf_type *' lvalue Var 0x9208830 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x9209198 <line:430:23, col:25> '<dependent type>' prefix '++'
                    (MemberExpr 0x9209178 <col:25> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x9209168 <col:25> 'basic_istream<_CharT, _Traits> *' this))))
                (CXXOperatorCallExpr 0x9209258 <line:433:21, col:40> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9209248 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9209230 <col:27, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x92091c8 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9208510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9209220 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x92091fc <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9209400 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:440:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9209320 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92093e8 </usr/include/c++/4.6/bits/istream.tcc:437:6, line:440:6>
          (CallExpr 0x92093b8 <line:438:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9209340 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9209330 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9209394 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x92093d8 <line:439:31>))
        <<<NULL>>>)
      (IfStmt 0x92094f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:442:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9209420 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92094d8 </usr/include/c++/4.6/bits/istream.tcc:442:13, col:52>
          (CallExpr 0x92094b8 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9209440 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x9209430 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9209494 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x9209610 <line:446:7, line:447:19>
    <<<NULL>>>
    (BinaryOperator 0x9209590 <line:446:11, col:17> '_Bool' '>'
      (ImplicitCastExpr 0x9209580 <col:11> 'streamsize':'int' <LValueToRValue>
        (DeclRefExpr 0x920954c <col:11> 'streamsize':'int' lvalue ParmVar 0x92081e0 '__n' 'streamsize':'int'))
      (IntegerLiteral 0x9209568 <col:17> 'int' 0))
    (BinaryOperator 0x92095f8 <line:447:2, col:19> '<dependent type>' '='
      (UnaryOperator 0x92095c0 <col:2, col:3> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92095a8 <col:3> 'char_type *' lvalue ParmVar 0x92081a0 '__s' 'char_type *'))
      (CXXUnresolvedConstructExpr 0x92095e0 <col:9, col:19> 'char_type':'_CharT'))
    <<<NULL>>>)
  (IfStmt 0x9209750 <line:448:7, line:449:28>
    <<<NULL>>>
    (UnaryOperator 0x9209680 <line:448:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x9209670 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x9209660 <col:12> 'streamsize':'int' <LValueToRValue>
          (MemberExpr 0x9209640 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
            (CXXThisExpr 0x9209630 <col:12> 'basic_istream<_CharT, _Traits> *' this)))))
    (CXXOperatorCallExpr 0x9209728 <line:449:9, col:28> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x9209718 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9209700 <col:15, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x9209694 <col:9> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9208510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x92096f0 <col:18, col:28> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x92096cc <col:18, col:28> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x9209828 <line:450:7, line:451:29>
    <<<NULL>>>
    (ImplicitCastExpr 0x9209798 <line:450:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x9209788 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x920976c <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9208510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x9209808 <line:451:9, col:29> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92097b8 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x92097a8 <col:9> 'basic_istream<_CharT, _Traits> *' this))
      (DeclRefExpr 0x92097ec <col:24> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9208510 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x9209870 <line:452:7, col:15>
    (UnaryOperator 0x9209858 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9209848 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore() (CompoundStmt 0x920a7c0 </usr/include/c++/4.6/bits/istream.tcc:462:5, line:489:5>
  (BinaryOperator 0x9209ea8 <line:463:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9209e70 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9209e60 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9209e90 <col:19> 'int' 0))
  (DeclStmt 0x9209f60 <line:464:7, col:33>
    0x9209ed0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9209f40 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9209f18 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9209f08 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9209f30 <col:28> '_Bool' true))")
  (IfStmt 0x920a768 <line:465:7, line:487:2>
    <<<NULL>>>
    (DeclRefExpr 0x9209f70 <line:465:11> 'class std::basic_istream::sentry' lvalue Var 0x9209ed0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x920a740 <line:466:2, line:487:2>
      (DeclStmt 0x920a048 <line:467:4, col:47>
        0x9209fc0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x920a038 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920a014 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x920a458 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:477:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920a058 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x920a438 </usr/include/c++/4.6/bits/istream.tcc:469:6, line:477:6>
          (DeclStmt 0x920a120 <line:470:8, col:49>
            0x920a070 "const int_type __eof =
              (CallExpr 0x920a100 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920a0c8 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x920a1e0 <line:471:8, col:46>
            0x920a140 "__streambuf_type *__sb =
              (CallExpr 0x920a1c0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920a188 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x920a178 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x920a418 <line:473:8, line:476:15>
            <<<NULL>>>
            (CallExpr 0x920a2d8 <line:473:12, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x920a218 <col:12, col:25> '<dependent type>' lvalue)
              (CallExpr 0x920a2a0 <col:37, col:50> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920a268 <col:37, col:43> '<dependent type>' lvalue
                  (DeclRefExpr 0x920a24c <col:37> '__streambuf_type *' lvalue Var 0x920a140 '__sb' '__streambuf_type *')))
              (DeclRefExpr 0x920a2bc <col:53> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920a070 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x920a390 <line:474:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x920a380 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x920a368 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x920a2fc <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9209fc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x920a358 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920a334 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (BinaryOperator 0x920a400 <line:476:3, col:15> '<dependent type>' '='
              (MemberExpr 0x920a3c8 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x920a3b8 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (IntegerLiteral 0x920a3e8 <col:15> 'int' 1))))
        <<<NULL>>>)
      (IfStmt 0x920a558 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:482:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920a478 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920a540 </usr/include/c++/4.6/bits/istream.tcc:479:6, line:482:6>
          (CallExpr 0x920a510 <line:480:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920a498 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920a488 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920a4ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x920a530 <line:481:31>))
        <<<NULL>>>)
      (IfStmt 0x920a648 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:484:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920a578 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920a630 </usr/include/c++/4.6/bits/istream.tcc:484:6, col:45>
          (CallExpr 0x920a610 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920a598 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920a588 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920a5ec <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x920a720 <line:485:4, line:486:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x920a690 <line:485:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x920a680 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920a664 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9209fc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x920a700 <line:486:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x920a6b0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x920a6a0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x920a6e4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9209fc0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x920a7b0 <line:488:7, col:15>
    (UnaryOperator 0x920a798 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x920a788 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n) (CompoundStmt 0x920bf70 </usr/include/c++/4.6/bits/istream.tcc:495:5, line:551:5>
  (BinaryOperator 0x920adf0 <line:496:7, col:19> '<dependent type>' '='
    (MemberExpr 0x920adb8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x920ada8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x920add8 <col:19> 'int' 0))
  (DeclStmt 0x920aea0 <line:497:7, col:33>
    0x920ae10 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x920ae80 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x920ae58 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x920ae48 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x920ae70 <col:28> '_Bool' true))")
  (IfStmt 0x920bf18 <line:498:7, line:549:9>
    <<<NULL>>>
    (BinaryOperator 0x920af20 <line:498:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x920aeb0 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x920ae10 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x920af08 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x920aef8 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x920aec8 <col:21> 'streamsize':'int' lvalue ParmVar 0x920ab60 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x920aee0 <col:27> 'int' 0)))
    (CompoundStmt 0x920bef0 <line:499:9, line:549:9>
      (DeclStmt 0x920aff8 <line:500:11, col:54>
        0x920af70 "ios_base::iostate __err =
          (ImplicitCastExpr 0x920afe8 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920afc4 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x920bc08 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:539:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920b008 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x920bbd8 </usr/include/c++/4.6/bits/istream.tcc:502:13, line:539:13>
          (DeclStmt 0x920b0d0 <line:503:15, col:56>
            0x920b020 "const int_type __eof =
              (CallExpr 0x920b0b0 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920b078 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x920b190 <line:504:15, col:53>
            0x920b0f0 "__streambuf_type *__sb =
              (CallExpr 0x920b170 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920b138 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x920b128 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x920b258 <line:505:15, col:43>
            0x920b1b0 "int_type __c =
              (CallExpr 0x920b238 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920b200 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x920b1e4 <col:30> '__streambuf_type *' lvalue Var 0x920b0f0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x920b2b8 <line:514:8, col:35>
            0x920b270 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x920b2a8 <col:30> '_Bool' false)")
          (WhileStmt 0x920b8f0 <line:515:8, line:532:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x920b2c8 <line:515:15> '_Bool' true)
            (CompoundStmt 0x920b8d8 <line:516:3, line:532:3>
              (WhileStmt 0x920b570 <line:517:5, line:522:7>
                <<<NULL>>>
                (BinaryOperator 0x920b458 <line:517:12, line:518:44> '<dependent type>' '&&'
                  (CXXOperatorCallExpr 0x920b368 <line:517:12, col:24> '<dependent type>'
                    (UnresolvedLookupExpr 0x920b320 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                    (MemberExpr 0x920b2e8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920b2d8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x920b308 <col:24> 'streamsize':'int' lvalue ParmVar 0x920ab60 '__n' 'streamsize':'int'))
                  (UnaryOperator 0x920b440 <line:518:8, col:44> '<dependent type>' prefix '!'
                    (CallExpr 0x920b418 <col:9, col:44> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920b3b0 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x920b3e4 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x920b1b0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x920b3fc <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920b020 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x920b558 <line:519:7, line:522:7>
                  (UnaryOperator 0x920b4a0 <line:520:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x920b480 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920b470 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x920b540 <line:521:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x920b4b4 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x920b1b0 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x920b520 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920b4e8 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x920b4cc <col:15> '__streambuf_type *' lvalue Var 0x920b0f0 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x920b8b8 <line:523:5, line:531:7>
                <<<NULL>>>
                (BinaryOperator 0x920b750 <line:523:9, line:524:48> '<dependent type>' '&&'
                  (BinaryOperator 0x920b670 <line:523:9, col:57> '_Bool' '=='
                    (ImplicitCastExpr 0x920b650 <col:9> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x920b584 <col:9> 'streamsize':'int' lvalue ParmVar 0x920ab60 '__n' 'streamsize':'int'))
                    (ImplicitCastExpr 0x920b660 <col:16, col:57> 'int':'int' <LValueToRValue>
                      (DeclRefExpr 0x920b630 <col:16, col:57> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int')))
                  (UnaryOperator 0x920b738 <line:524:12, col:48> '<dependent type>' prefix '!'
                    (CallExpr 0x920b710 <col:13, col:48> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920b6a8 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x920b6dc <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x920b1b0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x920b6f4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920b020 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                (CompoundStmt 0x920b898 <line:525:7, line:529:7>
                  (BinaryOperator 0x920b840 <line:526:9, line:527:45> '<dependent type>' '='
                    (MemberExpr 0x920b778 <line:526:9> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920b768 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x920b820 <line:527:4, col:45> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int'))
                  (BinaryOperator 0x920b880 <line:528:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x920b858 <col:9> '_Bool' lvalue Var 0x920b270 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x920b870 <col:26> '_Bool' true)))
                (BreakStmt 0x920b8b0 <line:531:7>))))
          (IfStmt 0x920ba28 <line:534:8, line:535:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x920b920 <line:534:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x920b904 <col:12> '_Bool' lvalue Var 0x920b270 '__large_ignore' '_Bool'))
            (BinaryOperator 0x920ba10 <line:535:3, col:56> '<dependent type>' '='
              (MemberExpr 0x920b940 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x920b930 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x920b9f0 <col:15, col:56> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x920bbb8 <line:537:8, line:538:36>
            <<<NULL>>>
            (CallExpr 0x920bad8 <line:537:12, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x920ba70 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x920baa4 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x920b1b0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x920babc <col:42> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920b020 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x920bb90 <line:538:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x920bb80 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x920bb68 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x920bafc <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920af70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x920bb58 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920bb34 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x920bd08 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:544:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920bc28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920bcf0 </usr/include/c++/4.6/bits/istream.tcc:541:6, line:544:6>
          (CallExpr 0x920bcc0 <line:542:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920bc48 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920bc38 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920bc9c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x920bce0 <line:543:31>))
        <<<NULL>>>)
      (IfStmt 0x920bdf8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:546:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920bd28 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920bde0 </usr/include/c++/4.6/bits/istream.tcc:546:13, col:52>
          (CallExpr 0x920bdc0 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920bd48 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x920bd38 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920bd9c <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x920bed0 <line:547:11, line:548:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x920be40 <line:547:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x920be30 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920be14 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920af70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x920beb0 <line:548:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x920be60 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x920be50 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x920be94 <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920af70 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x920bf60 <line:550:7, col:15>
    (UnaryOperator 0x920bf48 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x920bf38 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &ignore(streamsize __n, int_type __delim) (CompoundStmt 0x920dc38 </usr/include/c++/4.6/bits/istream.tcc:557:5, line:616:5>
  (BinaryOperator 0x920c5e0 <line:558:7, col:19> '<dependent type>' '='
    (MemberExpr 0x920c5a8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x920c598 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x920c5c8 <col:19> 'int' 0))
  (DeclStmt 0x920c690 <line:559:7, col:33>
    0x920c600 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x920c670 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x920c648 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x920c638 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x920c660 <col:28> '_Bool' true))")
  (IfStmt 0x920dbe0 <line:560:7, line:614:9>
    <<<NULL>>>
    (BinaryOperator 0x920c710 <line:560:11, col:27> '<dependent type>' '&&'
      (DeclRefExpr 0x920c6a0 <col:11> 'class std::basic_istream::sentry' lvalue Var 0x920c600 '__cerb' 'class std::basic_istream::sentry')
      (BinaryOperator 0x920c6f8 <col:21, col:27> '_Bool' '>'
        (ImplicitCastExpr 0x920c6e8 <col:21> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x920c6b8 <col:21> 'streamsize':'int' lvalue ParmVar 0x920c310 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x920c6d0 <col:27> 'int' 0)))
    (CompoundStmt 0x920dbb8 <line:561:9, line:614:9>
      (DeclStmt 0x920c7e8 <line:562:11, col:54>
        0x920c760 "ios_base::iostate __err =
          (ImplicitCastExpr 0x920c7d8 <col:37, col:47> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920c7b4 <col:37, col:47> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x920d8d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:604:13>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920c7f8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x920d8a0 </usr/include/c++/4.6/bits/istream.tcc:564:13, line:604:13>
          (DeclStmt 0x920c8c0 <line:565:15, col:56>
            0x920c810 "const int_type __eof =
              (CallExpr 0x920c8a0 <col:38, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920c868 <col:38, col:51> '<dependent type>' lvalue))")
          (DeclStmt 0x920c980 <line:566:15, col:53>
            0x920c8e0 "__streambuf_type *__sb =
              (CallExpr 0x920c960 <col:40, col:52> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920c928 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x920c918 <col:40> 'basic_istream<_CharT, _Traits> *' this)))")
          (DeclStmt 0x920ca48 <line:567:15, col:43>
            0x920c9a0 "int_type __c =
              (CallExpr 0x920ca28 <col:30, col:42> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920c9f0 <col:30, col:36> '<dependent type>' lvalue
                  (DeclRefExpr 0x920c9d4 <col:30> '__streambuf_type *' lvalue Var 0x920c8e0 '__sb' '__streambuf_type *')))")
          (DeclStmt 0x920caa8 <line:570:8, col:35>
            0x920ca60 "bool __large_ignore =
              (CXXBoolLiteralExpr 0x920ca98 <col:30> '_Bool' false)")
          (WhileStmt 0x920d2a0 <line:571:8, line:590:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x920cab8 <line:571:15> '_Bool' true)
            (CompoundStmt 0x920d288 <line:572:3, line:590:3>
              (WhileStmt 0x920ce40 <line:573:5, line:579:7>
                <<<NULL>>>
                (BinaryOperator 0x920cd28 <line:573:12, line:575:46> '<dependent type>' '&&'
                  (BinaryOperator 0x920cc48 <line:573:12, line:574:44> '<dependent type>' '&&'
                    (CXXOperatorCallExpr 0x920cb58 <line:573:12, col:24> '<dependent type>'
                      (UnresolvedLookupExpr 0x920cb10 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                      (MemberExpr 0x920cad8 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                        (CXXThisExpr 0x920cac8 <col:12> 'basic_istream<_CharT, _Traits> *' this))
                      (DeclRefExpr 0x920caf8 <col:24> 'streamsize':'int' lvalue ParmVar 0x920c310 '__n' 'streamsize':'int'))
                    (UnaryOperator 0x920cc30 <line:574:8, col:44> '<dependent type>' prefix '!'
                      (CallExpr 0x920cc08 <col:9, col:44> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x920cba0 <col:9, col:22> '<dependent type>' lvalue)
                        (DeclRefExpr 0x920cbd4 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x920cbec <col:39> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920c810 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x920cd10 <line:575:8, col:46> '<dependent type>' prefix '!'
                    (CallExpr 0x920cce8 <col:9, col:46> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920cc80 <col:9, col:22> '<dependent type>' lvalue)
                      (DeclRefExpr 0x920ccb4 <col:34> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x920cccc <col:39> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x920c350 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x920ce28 <line:576:7, line:579:7>
                  (UnaryOperator 0x920cd70 <line:577:9, col:11> '<dependent type>' prefix '++'
                    (MemberExpr 0x920cd50 <col:11> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920cd40 <col:11> 'basic_istream<_CharT, _Traits> *' this)))
                  (BinaryOperator 0x920ce10 <line:578:9, col:28> '<dependent type>' '='
                    (DeclRefExpr 0x920cd84 <col:9> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                    (CallExpr 0x920cdf0 <col:15, col:28> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920cdb8 <col:15, col:21> '<dependent type>' lvalue
                        (DeclRefExpr 0x920cd9c <col:15> '__streambuf_type *' lvalue Var 0x920c8e0 '__sb' '__streambuf_type *'))))))
              (IfStmt 0x920d268 <line:580:5, line:589:7>
                <<<NULL>>>
                (BinaryOperator 0x920d100 <line:580:9, line:582:50> '<dependent type>' '&&'
                  (BinaryOperator 0x920d020 <line:580:9, line:581:48> '<dependent type>' '&&'
                    (BinaryOperator 0x920cf40 <line:580:9, col:57> '_Bool' '=='
                      (ImplicitCastExpr 0x920cf20 <col:9> 'streamsize':'int' <LValueToRValue>
                        (DeclRefExpr 0x920ce54 <col:9> 'streamsize':'int' lvalue ParmVar 0x920c310 '__n' 'streamsize':'int'))
                      (ImplicitCastExpr 0x920cf30 <col:16, col:57> 'int':'int' <LValueToRValue>
                        (DeclRefExpr 0x920cf00 <col:16, col:57> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int')))
                    (UnaryOperator 0x920d008 <line:581:12, col:48> '<dependent type>' prefix '!'
                      (CallExpr 0x920cfe0 <col:13, col:48> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x920cf78 <col:13, col:26> '<dependent type>' lvalue)
                        (DeclRefExpr 0x920cfac <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                        (DeclRefExpr 0x920cfc4 <col:43> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920c810 '__eof' 'const int_type':'const typename _Traits::int_type'))))
                  (UnaryOperator 0x920d0e8 <line:582:12, col:50> '<dependent type>' prefix '!'
                    (CallExpr 0x920d0c0 <col:13, col:50> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x920d058 <col:13, col:26> '<dependent type>' lvalue)
                      (DeclRefExpr 0x920d08c <col:38> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                      (DeclRefExpr 0x920d0a4 <col:43> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x920c350 '__delim' 'int_type':'typename _Traits::int_type'))))
                (CompoundStmt 0x920d248 <line:583:7, line:587:7>
                  (BinaryOperator 0x920d1f0 <line:584:9, line:585:45> '<dependent type>' '='
                    (MemberExpr 0x920d128 <line:584:9> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920d118 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x920d1d0 <line:585:4, col:45> 'const int':'const int' lvalue Var 0x8fe2620 '__min' 'const int':'const int'))
                  (BinaryOperator 0x920d230 <line:586:9, col:26> '_Bool' lvalue '='
                    (DeclRefExpr 0x920d208 <col:9> '_Bool' lvalue Var 0x920ca60 '__large_ignore' '_Bool')
                    (CXXBoolLiteralExpr 0x920d220 <col:26> '_Bool' true)))
                (BreakStmt 0x920d260 <line:589:7>))))
          (IfStmt 0x920d3d8 <line:592:8, line:593:56>
            <<<NULL>>>
            (ImplicitCastExpr 0x920d2d0 <line:592:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x920d2b4 <col:12> '_Bool' lvalue Var 0x920ca60 '__large_ignore' '_Bool'))
            (BinaryOperator 0x920d3c0 <line:593:3, col:56> '<dependent type>' '='
              (MemberExpr 0x920d2f0 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x920d2e0 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x920d3a0 <col:15, col:56> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
            <<<NULL>>>)
          (IfStmt 0x920d880 <line:595:15, line:603:3>
            <<<NULL>>>
            (CallExpr 0x920d488 <line:595:19, col:54> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x920d420 <col:19, col:32> '<dependent type>' lvalue)
              (DeclRefExpr 0x920d454 <col:44> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x920d46c <col:49> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x920c810 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x920d540 <line:596:17, col:36> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x920d530 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x920d518 <col:23, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x920d4ac <col:17> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920c760 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x920d508 <col:26, col:36> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920d4e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            (IfStmt 0x920d860 <line:597:13, line:603:3>
              <<<NULL>>>
              (CallExpr 0x920d5f8 <line:597:17, col:54> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920d590 <col:17, col:30> '<dependent type>' lvalue)
                (DeclRefExpr 0x920d5c4 <col:42> 'int_type':'typename _Traits::int_type' lvalue Var 0x920c9a0 '__c' 'int_type':'typename _Traits::int_type')
                (DeclRefExpr 0x920d5dc <col:47> 'int_type':'typename _Traits::int_type' lvalue ParmVar 0x920c350 '__delim' 'int_type':'typename _Traits::int_type'))
              (CompoundStmt 0x920d848 <line:598:3, line:603:3>
                (IfStmt 0x920d7b8 <line:599:5, line:601:9>
                  <<<NULL>>>
                  (CXXOperatorCallExpr 0x920d748 <line:599:9, line:600:52> '<dependent type>'
                    (UnresolvedLookupExpr 0x920d700 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
                    (MemberExpr 0x920d630 <line:599:9> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920d620 <col:9> 'basic_istream<_CharT, _Traits> *' this))
                    (DeclRefExpr 0x920d6e0 <line:600:11, col:52> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
                  (UnaryOperator 0x920d7a0 <line:601:7, col:9> '<dependent type>' prefix '++'
                    (MemberExpr 0x920d780 <col:9> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                      (CXXThisExpr 0x920d770 <col:9> 'basic_istream<_CharT, _Traits> *' this)))
                  <<<NULL>>>)
                (CallExpr 0x920d828 <line:602:5, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x920d7f0 <col:5, col:11> '<dependent type>' lvalue
                    (DeclRefExpr 0x920d7d4 <col:5> '__streambuf_type *' lvalue Var 0x920c8e0 '__sb' '__streambuf_type *'))))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x920d9d0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:609:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920d8f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920d9b8 </usr/include/c++/4.6/bits/istream.tcc:606:6, line:609:6>
          (CallExpr 0x920d988 <line:607:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920d910 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920d900 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920d964 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x920d9a8 <line:608:31>))
        <<<NULL>>>)
      (IfStmt 0x920dac0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:611:52>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920d9f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920daa8 </usr/include/c++/4.6/bits/istream.tcc:611:13, col:52>
          (CallExpr 0x920da88 <col:15, col:49> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920da10 <col:15, col:21> '<dependent type>' lvalue
              (CXXThisExpr 0x920da00 <col:15> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920da64 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x920db98 <line:612:11, line:613:33>
        <<<NULL>>>
        (ImplicitCastExpr 0x920db08 <line:612:15> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x920daf8 <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920dadc <col:15> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920c760 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x920db78 <line:613:13, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x920db28 <col:13, col:19> '<dependent type>' lvalue
            (CXXThisExpr 0x920db18 <col:13> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x920db5c <col:28> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920c760 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x920dc28 <line:615:7, col:15>
    (UnaryOperator 0x920dc10 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x920dc00 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    typename basic_istream<_CharT, _Traits>::int_type peek() (CompoundStmt 0x920eb78 </usr/include/c++/4.6/bits/istream.tcc:622:5, line:646:5>
  (DeclStmt 0x920e310 <line:623:7, col:40>
    0x920e260 "int_type __c =
      (CallExpr 0x920e2f0 <col:22, col:39> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x920e2b8 <col:22, col:35> '<dependent type>' lvalue))")
  (BinaryOperator 0x920e368 <line:624:7, col:19> '<dependent type>' '='
    (MemberExpr 0x920e330 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x920e320 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x920e350 <col:19> 'int' 0))
  (DeclStmt 0x920e420 <line:625:7, col:33>
    0x920e390 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x920e400 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x920e3d8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x920e3c8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x920e3f0 <col:28> '_Bool' true))")
  (IfStmt 0x920eb30 <line:626:7, line:644:2>
    <<<NULL>>>
    (DeclRefExpr 0x920e430 <line:626:11> 'class std::basic_istream::sentry' lvalue Var 0x920e390 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x920eb08 <line:627:2, line:644:2>
      (DeclStmt 0x920e508 <line:628:4, col:47>
        0x920e480 "ios_base::iostate __err =
          (ImplicitCastExpr 0x920e4f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920e4d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x920e820 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:634:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920e518 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x920e808 </usr/include/c++/4.6/bits/istream.tcc:630:6, line:634:6>
          (BinaryOperator 0x920e600 <line:631:8, col:35> '<dependent type>' '='
            (DeclRefExpr 0x920e528 <col:8> 'int_type':'typename _Traits::int_type' lvalue Var 0x920e260 '__c' 'int_type':'typename _Traits::int_type')
            (CallExpr 0x920e5e0 <col:14, col:35> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x920e5a8 <col:14, col:29> '<dependent type>' lvalue
                (CallExpr 0x920e588 <col:14, col:26> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x920e550 <col:14, col:20> '<dependent type>' lvalue
                    (CXXThisExpr 0x920e540 <col:14> 'basic_istream<_CharT, _Traits> *' this))))))
          (IfStmt 0x920e7e8 <line:632:8, line:633:22>
            <<<NULL>>>
            (CallExpr 0x920e708 <line:632:12, col:60> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x920e640 <col:12, col:25> '<dependent type>' lvalue)
              (DeclRefExpr 0x920e674 <col:37> 'int_type':'typename _Traits::int_type' lvalue Var 0x920e260 '__c' 'int_type':'typename _Traits::int_type')
              (CallExpr 0x920e6e8 <col:42, col:59> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x920e6b0 <col:42, col:55> '<dependent type>' lvalue)))
            (CXXOperatorCallExpr 0x920e7c0 <line:633:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x920e7b0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x920e798 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x920e72c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920e480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x920e788 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x920e764 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x920e920 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:639:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920e840 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920e908 </usr/include/c++/4.6/bits/istream.tcc:636:6, line:639:6>
          (CallExpr 0x920e8d8 <line:637:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920e860 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920e850 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920e8b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x920e8f8 <line:638:31>))
        <<<NULL>>>)
      (IfStmt 0x920ea10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:641:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920e940 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x920e9f8 </usr/include/c++/4.6/bits/istream.tcc:641:6, col:45>
          (CallExpr 0x920e9d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x920e960 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x920e950 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x920e9b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x920eae8 <line:642:4, line:643:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x920ea58 <line:642:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x920ea48 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920ea2c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920e480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x920eac8 <line:643:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x920ea78 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x920ea68 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x920eaac <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920e480 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x920eb68 <line:645:7, col:14>
    (DeclRefExpr 0x920eb4c <col:14> 'int_type':'typename _Traits::int_type' lvalue Var 0x920e260 '__c' 'int_type':'typename _Traits::int_type')))


    basic_istream<_CharT, _Traits> &read(char_type *__s, streamsize __n) (CompoundStmt 0x9210cf0 </usr/include/c++/4.6/bits/istream.tcc:652:5, line:675:5>
  (BinaryOperator 0x920f1f0 <line:653:7, col:19> '<dependent type>' '='
    (MemberExpr 0x920f1b8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x920f1a8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x920f1d8 <col:19> 'int' 0))
  (DeclStmt 0x920f2a0 <line:654:7, col:33>
    0x920f210 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x920f280 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x920f258 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x920f248 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x920f270 <col:28> '_Bool' true))")
  (IfStmt 0x9210c98 <line:655:7, line:673:2>
    <<<NULL>>>
    (DeclRefExpr 0x920f2b0 <line:655:11> 'class std::basic_istream::sentry' lvalue Var 0x920f210 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9210c70 <line:656:2, line:673:2>
      (DeclStmt 0x920f388 <line:657:4, col:47>
        0x920f300 "ios_base::iostate __err =
          (ImplicitCastExpr 0x920f378 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x920f354 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9210988 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:663:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x920f398 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9210970 </usr/include/c++/4.6/bits/istream.tcc:659:6, line:663:6>
          (BinaryOperator 0x92106f8 <line:660:8, col:49> '<dependent type>' '='
            (MemberExpr 0x920f3b8 <col:8> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
              (CXXThisExpr 0x920f3a8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (CallExpr 0x92106d0 <col:20, col:49> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9210668 <col:20, col:35> '<dependent type>' lvalue
                (CallExpr 0x9210648 <col:20, col:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x920f3e8 <col:20, col:26> '<dependent type>' lvalue
                    (CXXThisExpr 0x920f3d8 <col:20> 'basic_istream<_CharT, _Traits> *' this))))
              (DeclRefExpr 0x921069c <col:41> 'char_type *' lvalue ParmVar 0x920ef20 '__s' 'char_type *')
              (DeclRefExpr 0x92106b4 <col:46> 'streamsize':'int' lvalue ParmVar 0x920ef60 '__n' 'streamsize':'int')))
          (IfStmt 0x9210950 <line:661:8, line:662:49>
            <<<NULL>>>
            (CXXOperatorCallExpr 0x92107b0 <line:661:12, col:25> '<dependent type>'
              (UnresolvedLookupExpr 0x9210758 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
              (MemberExpr 0x9210720 <col:12> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x9210710 <col:12> 'basic_istream<_CharT, _Traits> *' this))
              (DeclRefExpr 0x9210740 <col:25> 'streamsize':'int' lvalue ParmVar 0x920ef60 '__n' 'streamsize':'int'))
            (CXXOperatorCallExpr 0x9210928 <line:662:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x9210918 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x9210900 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x92107d4 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920f300 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x92108e8 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x92108c0 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x92108b0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9210898 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4f80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x9210878 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9210818 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x9210888 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9210854 <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9210a88 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:668:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92109a8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9210a70 </usr/include/c++/4.6/bits/istream.tcc:665:6, line:668:6>
          (CallExpr 0x9210a40 <line:666:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92109c8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92109b8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9210a1c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9210a60 <line:667:31>))
        <<<NULL>>>)
      (IfStmt 0x9210b78 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:670:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9210aa8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9210b60 </usr/include/c++/4.6/bits/istream.tcc:670:6, col:45>
          (CallExpr 0x9210b40 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9210ac8 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9210ab8 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9210b1c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9210c50 <line:671:4, line:672:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9210bc0 <line:671:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9210bb0 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9210b94 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920f300 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9210c30 <line:672:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9210be0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9210bd0 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9210c14 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x920f300 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9210ce0 <line:674:7, col:15>
    (UnaryOperator 0x9210cc8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9210cb8 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    streamsize readsome(char_type *__s, streamsize __n) (CompoundStmt 0x9211b90 </usr/include/c++/4.6/bits/istream.tcc:681:5, line:707:5>
  (BinaryOperator 0x9211130 <line:682:7, col:19> '<dependent type>' '='
    (MemberExpr 0x92110f8 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x92110e8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x9211118 <col:19> 'int' 0))
  (DeclStmt 0x92111e0 <line:683:7, col:33>
    0x9211150 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x92111c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9211198 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9211188 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x92111b0 <col:28> '_Bool' true))")
  (IfStmt 0x9211b30 <line:684:7, line:705:2>
    <<<NULL>>>
    (DeclRefExpr 0x92111f0 <line:684:11> 'class std::basic_istream::sentry' lvalue Var 0x9211150 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9211b08 <line:685:2, line:705:2>
      (DeclStmt 0x92112c8 <line:686:4, col:47>
        0x9211240 "ios_base::iostate __err =
          (ImplicitCastExpr 0x92112b8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9211294 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9211820 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:695:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92112d8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9211808 </usr/include/c++/4.6/bits/istream.tcc:688:6, line:695:6>
          (DeclStmt 0x92113e8 <line:690:8, col:58>
            0x92112f0 "const streamsize __num =
              (CallExpr 0x92113c8 <col:33, col:57> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9211390 <col:33, col:48> '<dependent type>' lvalue
                  (CallExpr 0x9211370 <col:33, col:45> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9211338 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x9211328 <col:33> 'basic_istream<_CharT, _Traits> *' this)))))")
          (IfStmt 0x92117e8 <line:691:8, line:694:22>
            <<<NULL>>>
            (BinaryOperator 0x9211438 <line:691:12, col:20> '_Bool' '>'
              (ImplicitCastExpr 0x9211428 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x92113f8 <col:12> 'const streamsize':'const int' lvalue Var 0x92112f0 '__num' 'const streamsize':'const int'))
              (IntegerLiteral 0x9211410 <col:20> 'int' 0))
            (BinaryOperator 0x9211688 <line:692:3, col:61> '<dependent type>' '='
              (MemberExpr 0x9211460 <col:3> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
                (CXXThisExpr 0x9211450 <col:3> 'basic_istream<_CharT, _Traits> *' this))
              (CallExpr 0x9211660 <col:15, col:61> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92114e8 <col:15, col:30> '<dependent type>' lvalue
                  (CallExpr 0x92114c8 <col:15, col:27> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9211490 <col:15, col:21> '<dependent type>' lvalue
                      (CXXThisExpr 0x9211480 <col:15> 'basic_istream<_CharT, _Traits> *' this))))
                (DeclRefExpr 0x921151c <col:36> 'char_type *' lvalue ParmVar 0x9210fb0 '__s' 'char_type *')
                (CallExpr 0x9211628 <col:41, col:60> 'const int':'const int' lvalue
                  (ImplicitCastExpr 0x9211618 <col:41, col:46> 'const int &(*)(const int &, const int &)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x92115f0 <col:41, col:46> 'const int &(const int &, const int &)' lvalue Function 0x90e4980 'min' 'const int &(const int &, const int &)' (FunctionTemplate 0x8e798b0 'min')))
                  (DeclRefExpr 0x9211590 <col:50> 'const streamsize':'const int' lvalue Var 0x92112f0 '__num' 'const streamsize':'const int')
                  (ImplicitCastExpr 0x9211650 <col:57> 'const int':'const int' lvalue <NoOp>
                    (DeclRefExpr 0x92115a8 <col:57> 'streamsize':'int' lvalue ParmVar 0x9210ff0 '__n' 'streamsize':'int')))))
            (IfStmt 0x92117c8 <line:693:13, line:694:22>
              <<<NULL>>>
              (BinaryOperator 0x92116f8 <line:693:17, col:27> '_Bool' '=='
                (ImplicitCastExpr 0x92116e8 <col:17> 'streamsize':'int' <LValueToRValue>
                  (DeclRefExpr 0x92116a0 <col:17> 'const streamsize':'const int' lvalue Var 0x92112f0 '__num' 'const streamsize':'const int'))
                (UnaryOperator 0x92116d0 <col:26, col:27> 'int' prefix '-'
                  (IntegerLiteral 0x92116b8 <col:27> 'int' 1)))
              (CXXOperatorCallExpr 0x92117a0 <line:694:3, col:22> 'const enum std::_Ios_Iostate' lvalue
                (ImplicitCastExpr 0x9211790 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x9211778 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                (DeclRefExpr 0x9211710 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9211240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                (ImplicitCastExpr 0x9211768 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                  (DeclRefExpr 0x9211744 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
              <<<NULL>>>)))
        <<<NULL>>>)
      (IfStmt 0x9211920 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:700:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9211840 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9211908 </usr/include/c++/4.6/bits/istream.tcc:697:6, line:700:6>
          (CallExpr 0x92118d8 <line:698:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9211860 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9211850 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92118b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x92118f8 <line:699:31>))
        <<<NULL>>>)
      (IfStmt 0x9211a10 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:702:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9211940 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92119f8 </usr/include/c++/4.6/bits/istream.tcc:702:6, col:45>
          (CallExpr 0x92119d8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9211960 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9211950 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92119b4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9211ae8 <line:703:4, line:704:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9211a58 <line:703:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9211a48 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9211a2c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9211240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9211ac8 <line:704:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9211a78 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9211a68 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9211aac <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9211240 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9211b80 <line:706:7, col:14>
    (MemberExpr 0x9211b60 <col:14> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9211b50 <col:14> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &putback(char_type __c) (CompoundStmt 0x9212cb8 </usr/include/c++/4.6/bits/istream.tcc:713:5, line:742:5>
  (BinaryOperator 0x92121c0 <line:716:7, col:19> '<dependent type>' '='
    (MemberExpr 0x9212188 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9212178 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x92121a8 <col:19> 'int' 0))
  (CallExpr 0x92123a0 <line:718:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92121e8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x92121d8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9212378 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9212338 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x9212268 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9212230 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9212220 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9212318 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9212308 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92122d8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x90b53c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x92122c8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x92122a4 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9212460 <line:719:7, col:33>
    0x92123d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9212440 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9212418 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9212408 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9212430 <col:28> '_Bool' true))")
  (IfStmt 0x9212c60 <line:720:7, line:740:2>
    <<<NULL>>>
    (DeclRefExpr 0x9212470 <line:720:11> 'class std::basic_istream::sentry' lvalue Var 0x92123d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9212c38 <line:721:2, line:740:2>
      (DeclStmt 0x9212548 <line:722:4, col:47>
        0x92124c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9212538 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9212514 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9212950 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:730:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9212558 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9212930 </usr/include/c++/4.6/bits/istream.tcc:724:6, line:730:6>
          (DeclStmt 0x9212620 <line:725:8, col:49>
            0x9212570 "const int_type __eof =
              (CallExpr 0x9212600 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92125c8 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x92126e0 <line:726:8, col:46>
            0x9212640 "__streambuf_type *__sb =
              (CallExpr 0x92126c0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9212688 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9212678 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x9212910 <line:727:8, line:729:22>
            <<<NULL>>>
            (BinaryOperator 0x9212840 <line:727:12, line:728:60> '<dependent type>' '||'
              (UnaryOperator 0x9212708 <line:727:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x92126f0 <col:13> '__streambuf_type *' lvalue Var 0x9212640 '__sb' '__streambuf_type *'))
              (CallExpr 0x9212818 <line:728:8, col:60> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9212740 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x92127e0 <col:33, col:52> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9212790 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9212774 <col:33> '__streambuf_type *' lvalue Var 0x9212640 '__sb' '__streambuf_type *'))
                  (DeclRefExpr 0x92127c4 <col:49> 'char_type':'_CharT' lvalue ParmVar 0x9211f30 '__c' 'char_type':'_CharT'))
                (DeclRefExpr 0x9212800 <col:55> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9212570 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x92128e8 <line:729:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x92128d8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x92128c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9212858 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92124c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x92128b0 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x921288c <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9212a50 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:735:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9212970 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9212a38 </usr/include/c++/4.6/bits/istream.tcc:732:6, line:735:6>
          (CallExpr 0x9212a08 <line:733:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9212990 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9212980 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92129e4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9212a28 <line:734:31>))
        <<<NULL>>>)
      (IfStmt 0x9212b40 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:737:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9212a70 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9212b28 </usr/include/c++/4.6/bits/istream.tcc:737:6, col:45>
          (CallExpr 0x9212b08 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9212a90 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9212a80 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9212ae4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9212c18 <line:738:4, line:739:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9212b88 <line:738:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9212b78 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9212b5c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92124c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9212bf8 <line:739:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9212ba8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9212b98 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9212bdc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92124c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9212ca8 <line:741:7, col:15>
    (UnaryOperator 0x9212c90 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9212c80 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &unget() (CompoundStmt 0x9213da0 </usr/include/c++/4.6/bits/istream.tcc:748:5, line:777:5>
  (BinaryOperator 0x92132d8 <line:751:7, col:19> '<dependent type>' '='
    (MemberExpr 0x92132a0 <col:7> 'streamsize':'int' lvalue ->_M_gcount 0x91dddd0
      (CXXThisExpr 0x9213290 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (IntegerLiteral 0x92132c0 <col:19> 'int' 0))
  (CallExpr 0x92134a0 <line:753:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9213300 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x92132f0 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9213478 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9213438 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x9213380 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9213348 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9213338 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9213418 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9213408 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92133f0 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x90b53c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x92133e0 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x92133bc <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9213560 <line:754:7, col:33>
    0x92134d0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9213540 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9213518 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9213508 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9213530 <col:28> '_Bool' true))")
  (IfStmt 0x9213d48 <line:755:7, line:775:2>
    <<<NULL>>>
    (DeclRefExpr 0x9213570 <line:755:11> 'class std::basic_istream::sentry' lvalue Var 0x92134d0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9213d20 <line:756:2, line:775:2>
      (DeclStmt 0x9213648 <line:757:4, col:47>
        0x92135c0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9213638 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9213614 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9213a38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:765:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9213658 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9213a18 </usr/include/c++/4.6/bits/istream.tcc:759:6, line:765:6>
          (DeclStmt 0x9213720 <line:760:8, col:49>
            0x9213670 "const int_type __eof =
              (CallExpr 0x9213700 <col:31, col:48> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92136c8 <col:31, col:44> '<dependent type>' lvalue))")
          (DeclStmt 0x92137e0 <line:761:8, col:46>
            0x9213740 "__streambuf_type *__sb =
              (CallExpr 0x92137c0 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9213788 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x9213778 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x92139f8 <line:762:8, line:764:22>
            <<<NULL>>>
            (BinaryOperator 0x9213928 <line:762:12, line:763:55> '<dependent type>' '||'
              (UnaryOperator 0x9213808 <line:762:12, col:13> '<dependent type>' prefix '!'
                (DeclRefExpr 0x92137f0 <col:13> '__streambuf_type *' lvalue Var 0x9213740 '__sb' '__streambuf_type *'))
              (CallExpr 0x9213900 <line:763:8, col:55> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9213840 <col:8, col:21> '<dependent type>' lvalue)
                (CallExpr 0x92138c8 <col:33, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x9213890 <col:33, col:39> '<dependent type>' lvalue
                    (DeclRefExpr 0x9213874 <col:33> '__streambuf_type *' lvalue Var 0x9213740 '__sb' '__streambuf_type *')))
                (DeclRefExpr 0x92138e4 <col:50> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x9213670 '__eof' 'const int_type':'const typename _Traits::int_type')))
            (CXXOperatorCallExpr 0x92139d0 <line:764:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x92139c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x92139a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9213940 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92135c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x9213998 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x9213974 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9213b38 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:770:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9213a58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9213b20 </usr/include/c++/4.6/bits/istream.tcc:767:6, line:770:6>
          (CallExpr 0x9213af0 <line:768:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9213a78 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9213a68 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9213acc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9213b10 <line:769:31>))
        <<<NULL>>>)
      (IfStmt 0x9213c28 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:772:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9213b58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9213c10 </usr/include/c++/4.6/bits/istream.tcc:772:6, col:45>
          (CallExpr 0x9213bf0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9213b78 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9213b68 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9213bcc <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9213d00 <line:773:4, line:774:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9213c70 <line:773:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9213c60 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9213c44 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92135c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9213ce0 <line:774:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9213c90 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9213c80 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9213cc4 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92135c0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9213d90 <line:776:7, col:15>
    (UnaryOperator 0x9213d78 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9213d68 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    int sync() (CompoundStmt 0x9214a58 </usr/include/c++/4.6/bits/istream.tcc:783:5, line:813:5>
  (DeclStmt 0x92141c8 <line:786:7, col:21>
    0x9214160 "int __ret =
      (UnaryOperator 0x92141b0 <col:19, col:20> 'int' prefix '-'
        (IntegerLiteral 0x9214198 <col:20> 'int' 1))")
  (DeclStmt 0x9214270 <line:787:7, col:33>
    0x92141e0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9214250 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9214228 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9214218 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9214240 <col:28> '_Bool' true))")
  (IfStmt 0x9214a00 <line:788:7, line:811:2>
    <<<NULL>>>
    (DeclRefExpr 0x9214280 <line:788:11> 'class std::basic_istream::sentry' lvalue Var 0x92141e0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x92149d8 <line:789:2, line:811:2>
      (DeclStmt 0x9214358 <line:790:4, col:47>
        0x92142d0 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9214348 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9214324 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x92146f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:801:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9214368 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92146d8 </usr/include/c++/4.6/bits/istream.tcc:792:6, line:801:6>
          (DeclStmt 0x9214430 <line:793:8, col:46>
            0x9214390 "__streambuf_type *__sb =
              (CallExpr 0x9214410 <col:33, col:45> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92143d8 <col:33, col:39> '<dependent type>' lvalue
                  (CXXThisExpr 0x92143c8 <col:33> 'basic_istream<_CharT, _Traits> *' this)))")
          (IfStmt 0x92146b8 <line:794:8, line:800:3>
            <<<NULL>>>
            (DeclRefExpr 0x9214440 <line:794:12> '__streambuf_type *' lvalue Var 0x9214390 '__sb' '__streambuf_type *')
            (CompoundStmt 0x92146a0 <line:795:3, line:800:3>
              (IfStmt 0x9214680 <line:796:5, line:799:15>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9214558 <line:796:9, col:29> '<dependent type>'
                  (UnresolvedLookupExpr 0x92144f8 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (CallExpr 0x92144a8 <col:9, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9214470 <col:9, col:15> '<dependent type>' lvalue
                      (DeclRefExpr 0x9214458 <col:9> '__streambuf_type *' lvalue Var 0x9214390 '__sb' '__streambuf_type *')))
                  (UnaryOperator 0x92144e0 <col:28, col:29> 'int' prefix '-'
                    (IntegerLiteral 0x92144c8 <col:29> 'int' 1)))
                (CXXOperatorCallExpr 0x9214610 <line:797:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9214600 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x92145e8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x921457c <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92142d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x92145d8 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x92145b4 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
                (BinaryOperator 0x9214668 <line:799:7, col:15> 'int' lvalue '='
                  (DeclRefExpr 0x9214634 <col:7> 'int' lvalue Var 0x9214160 '__ret' 'int')
                  (IntegerLiteral 0x9214650 <col:15> 'int' 0))))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x92147f0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:806:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9214710 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92147d8 </usr/include/c++/4.6/bits/istream.tcc:803:6, line:806:6>
          (CallExpr 0x92147a8 <line:804:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9214730 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9214720 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9214784 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x92147c8 <line:805:31>))
        <<<NULL>>>)
      (IfStmt 0x92148e0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:808:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9214810 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92148c8 </usr/include/c++/4.6/bits/istream.tcc:808:6, col:45>
          (CallExpr 0x92148a8 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9214830 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9214820 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9214884 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x92149b8 <line:809:4, line:810:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9214928 <line:809:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9214918 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x92148fc <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92142d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9214998 <line:810:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9214948 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9214938 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x921497c <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x92142d0 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9214a48 <line:812:7, col:14>
    (ImplicitCastExpr 0x9214a38 <col:14> 'int' <LValueToRValue>
      (DeclRefExpr 0x9214a1c <col:14> 'int' lvalue Var 0x9214160 '__ret' 'int'))))


    typename basic_istream<_CharT, _Traits>::pos_type tellg() (CompoundStmt 0x92156d8 </usr/include/c++/4.6/bits/istream.tcc:819:5, line:841:5>
  (DeclStmt 0x9215130 <line:822:7, col:36>
    0x92150a0 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x9215110 <col:24, col:35> 'pos_type':'typename _Traits::pos_type'
        (UnaryOperator 0x92150f8 <col:33, col:34> 'int' prefix '-'
          (IntegerLiteral 0x92150e0 <col:34> 'int' 1)))")
  (DeclStmt 0x92151e0 <line:823:7, col:33>
    0x9215150 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x92151c0 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9215198 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9215188 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x92151b0 <col:28> '_Bool' true))")
  (IfStmt 0x9215690 <line:824:7, line:839:2>
    <<<NULL>>>
    (DeclRefExpr 0x92151f0 <line:824:11> 'class std::basic_istream::sentry' lvalue Var 0x9215150 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9215670 <line:825:2, line:839:2>
      (IfStmt 0x9215460 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:831:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9215208 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9215448 </usr/include/c++/4.6/bits/istream.tcc:827:6, line:831:6>
          (IfStmt 0x9215428 <line:828:8, line:830:21>
            <<<NULL>>>
            (UnaryOperator 0x9215280 <line:828:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9215260 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9215228 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9215218 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (BinaryOperator 0x9215410 <line:829:3, line:830:21> '<dependent type>' '='
              (DeclRefExpr 0x9215294 <line:829:3> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x92150a0 '__ret' 'pos_type':'typename _Traits::pos_type')
              (CallExpr 0x92153e8 <col:11, line:830:21> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9215318 <line:829:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x92152f8 <col:11, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92152c0 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x92152b0 <col:11> 'basic_istream<_CharT, _Traits> *' this))))
                (IntegerLiteral 0x9215350 <col:37> 'int' 0)
                (DeclRefExpr 0x9215384 <col:40, col:50> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x90abeb0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')
                (DeclRefExpr 0x92153c4 <line:830:9, col:19> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9215560 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:836:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9215480 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9215548 </usr/include/c++/4.6/bits/istream.tcc:833:6, line:836:6>
          (CallExpr 0x9215518 <line:834:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92154a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9215490 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92154f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9215538 <line:835:31>))
        <<<NULL>>>)
      (IfStmt 0x9215650 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:838:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9215580 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9215638 </usr/include/c++/4.6/bits/istream.tcc:838:6, col:45>
          (CallExpr 0x9215618 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92155a0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9215590 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x92155f4 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x92156c8 <line:840:7, col:14>
    (DeclRefExpr 0x92156ac <col:14> 'pos_type':'typename _Traits::pos_type' lvalue Var 0x92150a0 '__ret' 'pos_type':'typename _Traits::pos_type')))


    basic_istream<_CharT, _Traits> &seekg(pos_type __pos) (CompoundStmt 0x92167d8 </usr/include/c++/4.6/bits/istream.tcc:847:5, line:880:5>
  (CallExpr 0x9215e78 <line:851:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9215cd8 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9215cc8 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9215e50 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9215e10 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x9215d58 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9215d20 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9215d10 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9215df0 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9215de0 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9215dc8 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x90b53c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9215db8 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9215d94 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x9215f30 <line:852:7, col:33>
    0x9215ea0 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9215f10 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9215ee8 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9215ed8 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9215f00 <col:28> '_Bool' true))")
  (IfStmt 0x9216780 <line:853:7, line:878:2>
    <<<NULL>>>
    (DeclRefExpr 0x9215f40 <line:853:11> 'class std::basic_istream::sentry' lvalue Var 0x9215ea0 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x9216758 <line:854:2, line:878:2>
      (DeclStmt 0x9216018 <line:855:4, col:47>
        0x9215f90 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9216008 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9215fe4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9216470 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:868:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9216028 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9216458 </usr/include/c++/4.6/bits/istream.tcc:857:6, line:868:6>
          (IfStmt 0x9216438 <line:858:8, line:867:3>
            <<<NULL>>>
            (UnaryOperator 0x92160a0 <line:858:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x9216080 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9216048 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x9216038 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x9216420 <line:859:3, line:867:3>
              (DeclStmt 0x9216218 <line:861:5, line:862:23>
                0x92160c0 "const pos_type __p =
                  (CallExpr 0x92161f0 <line:861:26, line:862:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9216160 <line:861:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x9216140 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9216108 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x92160f8 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9216194 <col:52> 'pos_type':'typename _Traits::pos_type' lvalue ParmVar 0x9215a80 '__pos' 'pos_type':'typename _Traits::pos_type')
                    (DeclRefExpr 0x92161cc <line:862:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9216400 <line:865:5, line:866:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x9216320 <line:865:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x92162c0 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (DeclRefExpr 0x9216228 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x92160c0 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x92162a0 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9216280 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x9216268 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x9216250 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x92163d8 <line:866:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x92163c8 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x92163b0 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x9216344 <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9215f90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x92163a0 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x921637c <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x9216570 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:873:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9216490 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9216558 </usr/include/c++/4.6/bits/istream.tcc:870:6, line:873:6>
          (CallExpr 0x9216528 <line:871:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92164b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92164a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9216504 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9216548 <line:872:31>))
        <<<NULL>>>)
      (IfStmt 0x9216660 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:875:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9216590 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9216648 </usr/include/c++/4.6/bits/istream.tcc:875:6, col:45>
          (CallExpr 0x9216628 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92165b0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92165a0 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x9216604 <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9216738 <line:876:4, line:877:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x92166a8 <line:876:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9216698 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x921667c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9215f90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x9216718 <line:877:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92166c8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92166b8 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x92166fc <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9215f90 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x92167c8 <line:879:7, col:15>
    (UnaryOperator 0x92167b0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92167a0 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    basic_istream<_CharT, _Traits> &seekg(off_type __off, ios_base::seekdir __dir) (CompoundStmt 0x9217960 </usr/include/c++/4.6/bits/istream.tcc:886:5, line:919:5>
  (CallExpr 0x9216fe8 <line:890:7, col:54> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9216e48 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9216e38 <col:7> 'basic_istream<_CharT, _Traits> *' this))
    (CXXOperatorCallExpr 0x9216fc0 <col:19, col:48> '<dependent type>'
      (UnresolvedLookupExpr 0x9216f80 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (CallExpr 0x9216ec8 <col:19, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9216e90 <col:19, col:25> '<dependent type>' lvalue
          (CXXThisExpr 0x9216e80 <col:19> 'basic_istream<_CharT, _Traits> *' this)))
      (CXXOperatorCallExpr 0x9216f60 <col:37, col:48> 'enum std::_Ios_Iostate'
        (ImplicitCastExpr 0x9216f50 <<invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9216f38 <<invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)' lvalue Function 0x90b53c0 'operator~' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate)'))
        (ImplicitCastExpr 0x9216f28 <col:38, col:48> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
          (DeclRefExpr 0x9216f04 <col:38, col:48> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))))
  (DeclStmt 0x92170a0 <line:891:7, col:33>
    0x9217010 "std::basic_istream::sentry __cerb =
      (ParenListExpr 0x9217080 <col:20, col:32> 'class std::basic_istream::sentry'
        (UnaryOperator 0x9217058 <col:21, col:22> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9217048 <col:22> 'basic_istream<_CharT, _Traits> *' this))
        (CXXBoolLiteralExpr 0x9217070 <col:28> '_Bool' true))")
  (IfStmt 0x9217908 <line:892:7, line:917:2>
    <<<NULL>>>
    (DeclRefExpr 0x92170b0 <line:892:11> 'class std::basic_istream::sentry' lvalue Var 0x9217010 '__cerb' 'class std::basic_istream::sentry')
    (CompoundStmt 0x92178e0 <line:893:2, line:917:2>
      (DeclStmt 0x9217188 <line:894:4, col:47>
        0x9217100 "ios_base::iostate __err =
          (ImplicitCastExpr 0x9217178 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9217154 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x92175f8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:907:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9217198 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92175e0 </usr/include/c++/4.6/bits/istream.tcc:896:6, line:907:6>
          (IfStmt 0x92175c0 <line:897:8, line:906:3>
            <<<NULL>>>
            (UnaryOperator 0x9217210 <line:897:12, col:24> '<dependent type>' prefix '!'
              (CallExpr 0x92171f0 <col:13, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92171b8 <col:13, col:19> '<dependent type>' lvalue
                  (CXXThisExpr 0x92171a8 <col:13> 'basic_istream<_CharT, _Traits> *' this))))
            (CompoundStmt 0x92175a8 <line:898:3, line:906:3>
              (DeclStmt 0x92173a0 <line:900:5, line:901:23>
                0x9217230 "const pos_type __p =
                  (CallExpr 0x9217378 <line:900:26, line:901:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92172d0 <line:900:26, col:41> '<dependent type>' lvalue
                      (CallExpr 0x92172b0 <col:26, col:38> '<dependent type>'
                        (CXXDependentScopeMemberExpr 0x9217278 <col:26, col:32> '<dependent type>' lvalue
                          (CXXThisExpr 0x9217268 <col:26> 'basic_istream<_CharT, _Traits> *' this))))
                    (DeclRefExpr 0x9217304 <col:52> 'off_type':'typename _Traits::off_type' lvalue ParmVar 0x9216b80 '__off' 'off_type':'typename _Traits::off_type')
                    (DeclRefExpr 0x921731c <col:59> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x9216bf0 '__dir' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')
                    (DeclRefExpr 0x9217354 <line:901:10, col:20> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
              (IfStmt 0x9217588 <line:904:5, line:905:26>
                <<<NULL>>>
                (CXXOperatorCallExpr 0x92174a8 <line:904:9, col:37> '<dependent type>'
                  (UnresolvedLookupExpr 0x9217448 <col:13, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
                  (DeclRefExpr 0x92173b0 <col:9> 'const pos_type':'const typename _Traits::pos_type' lvalue Var 0x9217230 '__p' 'const pos_type':'const typename _Traits::pos_type')
                  (CXXUnresolvedConstructExpr 0x9217428 <col:16, col:37> 'pos_type':'typename _Traits::pos_type'
                    (CXXUnresolvedConstructExpr 0x9217408 <col:25, col:36> 'off_type':'typename _Traits::off_type'
                      (UnaryOperator 0x92173f0 <col:34, col:35> 'int' prefix '-'
                        (IntegerLiteral 0x92173d8 <col:35> 'int' 1)))))
                (CXXOperatorCallExpr 0x9217560 <line:905:7, col:26> 'const enum std::_Ios_Iostate' lvalue
                  (ImplicitCastExpr 0x9217550 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x9217538 <col:13, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
                  (DeclRefExpr 0x92174cc <col:7> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9217100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
                  (ImplicitCastExpr 0x9217528 <col:16, col:26> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9217504 <col:16, col:26> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
                <<<NULL>>>))
            <<<NULL>>>))
        <<<NULL>>>)
      (IfStmt 0x92176f8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:912:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9217618 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92176e0 </usr/include/c++/4.6/bits/istream.tcc:909:6, line:912:6>
          (CallExpr 0x92176b0 <line:910:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9217638 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9217628 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x921768c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x92176d0 <line:911:31>))
        <<<NULL>>>)
      (IfStmt 0x92177e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:914:45>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9217718 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92177d0 </usr/include/c++/4.6/bits/istream.tcc:914:6, col:45>
          (CallExpr 0x92177b0 <col:8, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9217738 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9217728 <col:8> 'basic_istream<_CharT, _Traits> *' this))
            (DeclRefExpr 0x921778c <col:26, col:36> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x92178c0 <line:915:4, line:916:26>
        <<<NULL>>>
        (ImplicitCastExpr 0x9217830 <line:915:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9217820 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x9217804 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9217100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x92178a0 <line:916:6, col:26> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9217850 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9217840 <col:6> 'basic_istream<_CharT, _Traits> *' this))
          (DeclRefExpr 0x9217884 <col:21> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9217100 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9217950 <line:918:7, col:15>
    (UnaryOperator 0x9217938 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x9217928 <col:15> 'basic_istream<_CharT, _Traits> *' this))))


    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t &__c)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &operator>>(basic_istream<char, std::char_traits<char> > &__in, char &__c)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT &__c) (CompoundStmt 0x9219aa0 </usr/include/c++/4.6/bits/istream.tcc:925:5, line:952:5>
  (DeclStmt 0x9217f70 <line:926:7, col:61>
    0x9217f40 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x9218030 <line:927:7, col:67>
    0x9218000 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x9218120 <line:929:7, col:58>
    0x92180a0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x9218100 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x92180d4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x92180f0 <col:52> '_Bool' false))")
  (IfStmt 0x9219a58 <line:930:7, line:950:2>
    <<<NULL>>>
    (DeclRefExpr 0x9218130 <line:930:11> 'typename __istream_type::sentry' lvalue Var 0x92180a0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x9219a30 <line:931:2, line:950:2>
      (DeclStmt 0x9218208 <line:932:4, col:47>
        0x9218180 "ios_base::iostate __err =
          (ImplicitCastExpr 0x92181f8 <col:30, col:40> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x92181d4 <col:30, col:40> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
      (IfStmt 0x9219730 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:940:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9218218 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x9219718 </usr/include/c++/4.6/bits/istream.tcc:934:6, line:940:6>
          (DeclStmt 0x9218350 <line:935:8, col:54>
            0x9218250 "const __int_type __cb =
              (CallExpr 0x9218330 <col:32, col:53> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92182f8 <col:32, col:46> '<dependent type>' lvalue
                  (CallExpr 0x92182d8 <col:32, col:43> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92182a0 <col:32, col:37> '<dependent type>' lvalue
                      (DeclRefExpr 0x9218284 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &')))))")
          (IfStmt 0x92196f8 <line:936:8, line:939:49>
            <<<NULL>>>
            (UnaryOperator 0x9218458 <line:936:12, col:54> '<dependent type>' prefix '!'
              (CallExpr 0x9218430 <col:13, col:54> '<dependent type>'
                (DependentScopeDeclRefExpr 0x9218388 <col:13, col:22> '<dependent type>' lvalue)
                (DeclRefExpr 0x92183ac <col:34> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9218250 '__cb' 'const __int_type':'const typename __istream_type::int_type')
                (CallExpr 0x9218410 <col:40, col:53> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x92183e8 <col:40, col:49> '<dependent type>' lvalue))))
            (BinaryOperator 0x9218508 <line:937:3, col:35> '<dependent type>' '='
              (DeclRefExpr 0x921846c <col:3> '_CharT' lvalue ParmVar 0x9217cb0 '__c' '_CharT &')
              (CallExpr 0x92184e8 <col:9, col:35> '<dependent type>'
                (DependentScopeDeclRefExpr 0x92184a8 <col:9, col:18> '<dependent type>' lvalue)
                (DeclRefExpr 0x92184cc <col:31> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x9218250 '__cb' 'const __int_type':'const typename __istream_type::int_type')))
            (CXXOperatorCallExpr 0x92196d0 <line:939:3, col:49> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x92196c0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x92196a8 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x9218520 <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9218180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ParenExpr 0x9219690 <col:12, col:49> 'enum std::_Ios_Iostate'
                (CXXOperatorCallExpr 0x9218608 <col:13, col:42> 'enum std::_Ios_Iostate'
                  (ImplicitCastExpr 0x92185f8 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (*)(enum std::_Ios_Iostate, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                    (DeclRefExpr 0x92185e0 <col:30, <invalid sloc>> 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)' lvalue Function 0x90b4f80 'operator|' 'enum std::_Ios_Iostate (enum std::_Ios_Iostate, enum std::_Ios_Iostate)'))
                  (ImplicitCastExpr 0x92185c0 <col:13, col:23> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x9218560 <col:13, col:23> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
                  (ImplicitCastExpr 0x92185d0 <col:32, col:42> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                    (DeclRefExpr 0x921859c <col:32, col:42> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))))))
        <<<NULL>>>)
      (IfStmt 0x9219838 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:945:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9219750 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9219820 </usr/include/c++/4.6/bits/istream.tcc:942:6, line:945:6>
          (CallExpr 0x92197f0 <line:943:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9219778 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9219760 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x92197cc <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x9219810 <line:944:31>))
        <<<NULL>>>)
      (IfStmt 0x9219930 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:947:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x9219858 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x9219918 </usr/include/c++/4.6/bits/istream.tcc:947:6, col:44>
          (CallExpr 0x92198f8 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9219880 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x9219868 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x92198d4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>)
      (IfStmt 0x9219a10 <line:948:4, line:949:25>
        <<<NULL>>>
        (ImplicitCastExpr 0x9219978 <line:948:8> '_Bool' <IntegralToBoolean>
          (ImplicitCastExpr 0x9219968 <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
            (DeclRefExpr 0x921994c <col:8> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9218180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
        (CallExpr 0x92199f0 <line:949:6, col:25> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92199a0 <col:6, col:11> '<dependent type>' lvalue
            (DeclRefExpr 0x9219984 <col:6> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &'))
          (DeclRefExpr 0x92199d4 <col:20> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x9218180 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x9219a90 <line:951:7, col:14>
    (DeclRefExpr 0x9219a74 <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9217c40 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &operator>>(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in, wchar_t *__s)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char> &operator>>(basic_istream<char> &__in, char *__s)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &operator>>(basic_istream<_CharT, _Traits> &__in, _CharT *__s) (CompoundStmt 0x921b8c8 </usr/include/c++/4.6/bits/istream.tcc:957:5, line:1012:5>
  (DeclStmt 0x921a0a0 <line:958:7, col:61>
    0x921a070 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x921a1f0 <line:959:7, col:73>
    0x921a1c0 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x921a2a0 <line:960:7, col:51>
    0x921a270 "typedef typename _Traits::int_type int_type")
  (DeclStmt 0x921a2f0 <line:961:7, col:35>
    0x921a2c0 "typedef _CharT char_type")
  (DeclStmt 0x921a3e0 <line:962:7, col:44>
    0x921a3b0 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x921a450 <line:964:7, col:33>
    0x921a400 "streamsize __extracted =
      (IntegerLiteral 0x921a438 <col:32> 'int' 0)")
  (DeclStmt 0x921a518 <line:965:7, col:50>
    0x921a490 "ios_base::iostate __err =
      (ImplicitCastExpr 0x921a508 <col:33, col:43> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x921a4e4 <col:33, col:43> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abb10 'goodbit' 'const iostate':'const enum std::_Ios_Iostate'))")
  (DeclStmt 0x921a630 <line:966:7, col:58>
    0x921a5b0 "typename __istream_type::sentry __cerb =
      (ParenListExpr 0x921a610 <col:45, col:57> 'typename __istream_type::sentry'
        (DeclRefExpr 0x921a5e4 <col:46> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &')
        (CXXBoolLiteralExpr 0x921a600 <col:52> '_Bool' false))")
  (IfStmt 0x921b678 <line:967:7, line:1006:2>
    <<<NULL>>>
    (DeclRefExpr 0x921a640 <line:967:11> 'typename __istream_type::sentry' lvalue Var 0x921a5b0 '__cerb' 'typename __istream_type::sentry')
    (CompoundStmt 0x921b658 <line:968:2, line:1006:2>
      (IfStmt 0x921b438 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/istream.tcc:998:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x921a658 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x921b400 </usr/include/c++/4.6/bits/istream.tcc:970:6, line:998:6>
          (DeclStmt 0x921a718 <line:972:8, col:39>
            0x921a670 "streamsize __num =
              (CallExpr 0x921a6f8 <col:27, col:38> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x921a6c0 <col:27, col:32> '<dependent type>' lvalue
                  (DeclRefExpr 0x921a6a4 <col:27> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (IfStmt 0x921a868 <line:973:8, line:974:52>
            <<<NULL>>>
            (BinaryOperator 0x921a768 <line:973:12, col:21> '_Bool' '<='
              (ImplicitCastExpr 0x921a758 <col:12> 'streamsize':'int' <LValueToRValue>
                (DeclRefExpr 0x921a728 <col:12> 'streamsize':'int' lvalue Var 0x921a670 '__num' 'streamsize':'int'))
              (IntegerLiteral 0x921a740 <col:21> 'int' 0))
            (BinaryOperator 0x921a850 <line:974:3, col:52> 'streamsize':'int' lvalue '='
              (DeclRefExpr 0x921a780 <col:3> 'streamsize':'int' lvalue Var 0x921a670 '__num' 'streamsize':'int')
              (ImplicitCastExpr 0x921a840 <col:11, col:52> 'int':'int' <LValueToRValue>
                (DeclRefExpr 0x921a820 <col:11, col:52> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int')))
            <<<NULL>>>)
          (DeclStmt 0x921aa08 <line:976:8, col:73>
            0x921a8d0 "const __ctype_type &__ct =
              (CallExpr 0x921a9e8 <col:35, col:72> '<dependent type>'
                (UnresolvedLookupExpr 0x921a910 <col:35, col:57> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
                (CallExpr 0x921a9c8 <col:59, col:71> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x921a990 <col:59, col:64> '<dependent type>' lvalue
                    (DeclRefExpr 0x921a978 <col:59> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &'))))")
          (DeclStmt 0x921aae0 <line:978:8, col:45>
            0x921aa40 "const int_type __eof =
              (CallExpr 0x921aac0 <col:31, col:44> '<dependent type>'
                (DependentScopeDeclRefExpr 0x921aa98 <col:31, col:40> '<dependent type>' lvalue))")
          (DeclStmt 0x921abd8 <line:979:8, col:45>
            0x921ab30 "__streambuf_type *__sb =
              (CallExpr 0x921abb8 <col:33, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x921ab80 <col:33, col:38> '<dependent type>' lvalue
                  (DeclRefExpr 0x921ab64 <col:33> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &')))")
          (DeclStmt 0x921ac98 <line:980:8, col:36>
            0x921abf0 "int_type __c =
              (CallExpr 0x921ac78 <col:23, col:35> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x921ac40 <col:23, col:29> '<dependent type>' lvalue
                  (DeclRefExpr 0x921ac24 <col:23> '__streambuf_type *' lvalue Var 0x921ab30 '__sb' '__streambuf_type *')))")
          (WhileStmt 0x921b160 <line:982:8, line:990:3>
            <<<NULL>>>
            (BinaryOperator 0x921af60 <line:982:15, line:985:32> '<dependent type>' '&&'
              (BinaryOperator 0x921adf8 <line:982:15, line:983:43> '<dependent type>' '&&'
                (BinaryOperator 0x921ad28 <line:982:15, col:37> '_Bool' '<'
                  (ImplicitCastExpr 0x921ad18 <col:15> 'streamsize':'int' <LValueToRValue>
                    (DeclRefExpr 0x921aca8 <col:15> 'streamsize':'int' lvalue Var 0x921a400 '__extracted' 'streamsize':'int'))
                  (BinaryOperator 0x921ad00 <col:29, col:37> 'int' '-'
                    (ImplicitCastExpr 0x921acf0 <col:29> 'streamsize':'int' <LValueToRValue>
                      (DeclRefExpr 0x921acc0 <col:29> 'streamsize':'int' lvalue Var 0x921a670 '__num' 'streamsize':'int'))
                    (IntegerLiteral 0x921acd8 <col:37> 'int' 1)))
                (UnaryOperator 0x921ade0 <line:983:11, col:43> '<dependent type>' prefix '!'
                  (CallExpr 0x921adb8 <col:12, col:43> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x921ad60 <col:12, col:21> '<dependent type>' lvalue)
                    (DeclRefExpr 0x921ad84 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x921abf0 '__c' 'int_type':'typename _Traits::int_type')
                    (DeclRefExpr 0x921ad9c <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x921aa40 '__eof' 'const int_type':'const typename _Traits::int_type'))))
              (UnaryOperator 0x921af48 <line:984:11, line:985:32> '<dependent type>' prefix '!'
                (CallExpr 0x921af20 <line:984:12, line:985:32> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x921ae28 <line:984:12, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x921ae10 <col:12> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x921a8d0 '__ct' 'const __ctype_type &'))
                  (DeclRefExpr 0x921ae7c <col:20, col:32> 'const mask':'const unsigned short' lvalue Var 0x90fccc0 'space' 'const mask':'const unsigned short')
                  (CallExpr 0x921af00 <line:985:6, col:31> '<dependent type>'
                    (DependentScopeDeclRefExpr 0x921aec0 <col:6, col:15> '<dependent type>' lvalue)
                    (DeclRefExpr 0x921aee4 <col:28> 'int_type':'typename _Traits::int_type' lvalue Var 0x921abf0 '__c' 'int_type':'typename _Traits::int_type')))))
            (CompoundStmt 0x921b140 <line:986:3, line:990:3>
              (BinaryOperator 0x921b058 <line:987:5, col:39> '<dependent type>' '='
                (UnaryOperator 0x921afc0 <col:5, col:9> '<dependent type>' prefix '*'
                  (UnaryOperator 0x921afa8 <col:6, col:9> '<dependent type>' postfix '++'
                    (DeclRefExpr 0x921af78 <col:6> '_CharT *' lvalue ParmVar 0x9219e00 '__s' '_CharT *')))
                (CallExpr 0x921b038 <col:14, col:39> '<dependent type>'
                  (DependentScopeDeclRefExpr 0x921aff8 <col:14, col:23> '<dependent type>' lvalue)
                  (DeclRefExpr 0x921b01c <col:36> 'int_type':'typename _Traits::int_type' lvalue Var 0x921abf0 '__c' 'int_type':'typename _Traits::int_type')))
              (UnaryOperator 0x921b088 <line:988:5, col:7> 'streamsize':'int' lvalue prefix '++'
                (DeclRefExpr 0x921b070 <col:7> 'streamsize':'int' lvalue Var 0x921a400 '__extracted' 'streamsize':'int'))
              (BinaryOperator 0x921b128 <line:989:5, col:24> '<dependent type>' '='
                (DeclRefExpr 0x921b09c <col:5> 'int_type':'typename _Traits::int_type' lvalue Var 0x921abf0 '__c' 'int_type':'typename _Traits::int_type')
                (CallExpr 0x921b108 <col:11, col:24> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x921b0d0 <col:11, col:17> '<dependent type>' lvalue
                    (DeclRefExpr 0x921b0b4 <col:11> '__streambuf_type *' lvalue Var 0x921ab30 '__sb' '__streambuf_type *'))))))
          (IfStmt 0x921b2d8 <line:991:8, line:992:22>
            <<<NULL>>>
            (CallExpr 0x921b1f8 <line:991:12, col:43> '<dependent type>'
              (DependentScopeDeclRefExpr 0x921b1a0 <col:12, col:21> '<dependent type>' lvalue)
              (DeclRefExpr 0x921b1c4 <col:33> 'int_type':'typename _Traits::int_type' lvalue Var 0x921abf0 '__c' 'int_type':'typename _Traits::int_type')
              (DeclRefExpr 0x921b1dc <col:38> 'const int_type':'const typename _Traits::int_type' lvalue Var 0x921aa40 '__eof' 'const int_type':'const typename _Traits::int_type'))
            (CXXOperatorCallExpr 0x921b2b0 <line:992:3, col:22> 'const enum std::_Ios_Iostate' lvalue
              (ImplicitCastExpr 0x921b2a0 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
                (DeclRefExpr 0x921b288 <col:9, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
              (DeclRefExpr 0x921b21c <col:3> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x921a490 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
              (ImplicitCastExpr 0x921b278 <col:12, col:22> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
                (DeclRefExpr 0x921b254 <col:12, col:22> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate')))
            <<<NULL>>>)
          (BinaryOperator 0x921b360 <line:996:8, col:25> '<dependent type>' '='
            (UnaryOperator 0x921b310 <col:8, col:9> '<dependent type>' prefix '*'
              (DeclRefExpr 0x921b2f4 <col:9> '_CharT *' lvalue ParmVar 0x9219e00 '__s' '_CharT *'))
            (CXXUnresolvedConstructExpr 0x921b348 <col:15, col:25> 'char_type':'_CharT'))
          (CallExpr 0x921b3e0 <line:997:8, col:20> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x921b390 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x921b378 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &'))
            (IntegerLiteral 0x921b3c8 <col:19> 'int' 0)))
        <<<NULL>>>)
      (IfStmt 0x921b540 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1003:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x921b458 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x921b528 </usr/include/c++/4.6/bits/istream.tcc:1000:6, line:1003:6>
          (CallExpr 0x921b4f8 <line:1001:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x921b480 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x921b468 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x921b4d4 <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate'))
          (NullStmt 0x921b518 <line:1002:31>))
        <<<NULL>>>)
      (IfStmt 0x921b638 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/istream.tcc:1005:44>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x921b560 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x921b620 </usr/include/c++/4.6/bits/istream.tcc:1005:6, col:44>
          (CallExpr 0x921b600 <col:8, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x921b588 <col:8, col:13> '<dependent type>' lvalue
              (DeclRefExpr 0x921b570 <col:8> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &'))
            (DeclRefExpr 0x921b5dc <col:25, col:35> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90b6c30 'badbit' 'const iostate':'const enum std::_Ios_Iostate')))
        <<<NULL>>>))
    <<<NULL>>>)
  (IfStmt 0x921b7a0 <line:1007:7, line:1008:21>
    <<<NULL>>>
    (UnaryOperator 0x921b6d0 <line:1007:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x921b6c0 <col:12> '_Bool' <IntegralToBoolean>
        (ImplicitCastExpr 0x921b6b0 <col:12> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x921b694 <col:12> 'streamsize':'int' lvalue Var 0x921a400 '__extracted' 'streamsize':'int'))))
    (CXXOperatorCallExpr 0x921b778 <line:1008:2, col:21> 'const enum std::_Ios_Iostate' lvalue
      (ImplicitCastExpr 0x921b768 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(*)(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' <FunctionToPointerDecay>
        (DeclRefExpr 0x921b750 <col:8, <invalid sloc>> 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)' lvalue Function 0x90b5600 'operator|=' 'const enum std::_Ios_Iostate &(enum std::_Ios_Iostate &, enum std::_Ios_Iostate)'))
      (DeclRefExpr 0x921b6e4 <col:2> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x921a490 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')
      (ImplicitCastExpr 0x921b740 <col:11, col:21> 'iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x921b71c <col:11, col:21> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90abab0 'failbit' 'const iostate':'const enum std::_Ios_Iostate')))
    <<<NULL>>>)
  (IfStmt 0x921b880 <line:1009:7, line:1010:21>
    <<<NULL>>>
    (ImplicitCastExpr 0x921b7e8 <line:1009:11> '_Bool' <IntegralToBoolean>
      (ImplicitCastExpr 0x921b7d8 <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' <LValueToRValue>
        (DeclRefExpr 0x921b7bc <col:11> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x921a490 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate')))
    (CallExpr 0x921b860 <line:1010:2, col:21> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x921b810 <col:2, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x921b7f4 <col:2> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x921b844 <col:16> 'class ios_base::iostate':'enum std::_Ios_Iostate' lvalue Var 0x921a490 '__err' 'class ios_base::iostate':'enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x921b8b8 <line:1011:7, col:14>
    (DeclRefExpr 0x921b89c <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x9219d90 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>> basic_istream<wchar_t, std::char_traits<wchar_t> > &ws(basic_istream<wchar_t, std::char_traits<wchar_t> > &__in)template <typename _CharT = char, typename _Traits = std::char_traits<char>> basic_istream<char, std::char_traits<char> > &ws(basic_istream<char, std::char_traits<char> > &__in)template <typename _CharT, typename _Traits> basic_istream<_CharT, _Traits> &ws(basic_istream<_CharT, _Traits> &__in) (CompoundStmt 0x921ca28 </usr/include/c++/4.6/bits/istream.tcc:1018:5, line:1036:5>
  (DeclStmt 0x921be90 <line:1019:7, col:61>
    0x921be60 "typedef basic_istream<_CharT, _Traits> __istream_type")
  (DeclStmt 0x921bfe0 <line:1020:7, col:73>
    0x921bfb0 "typedef basic_streambuf<_CharT, _Traits> __streambuf_type")
  (DeclStmt 0x921c0a0 <line:1021:7, col:60>
    0x921c070 "typedef typename __istream_type::int_type __int_type")
  (DeclStmt 0x921c190 <line:1022:7, col:44>
    0x921c160 "typedef ctype<_CharT> __ctype_type")
  (DeclStmt 0x921c318 <line:1024:7, col:72>
    0x921c1e0 "const __ctype_type &__ct =
      (CallExpr 0x921c2f8 <col:34, col:71> '<dependent type>'
        (UnresolvedLookupExpr 0x921c220 <col:34, col:56> '<dependent type>' lvalue (ADL) = '1' 0x9091a40)
        (CallExpr 0x921c2d8 <col:58, col:70> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x921c2a0 <col:58, col:63> '<dependent type>' lvalue
            (DeclRefExpr 0x921c288 <col:58> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x921bbd0 '__in' 'basic_istream<_CharT, _Traits> &'))))")
  (DeclStmt 0x921c3f8 <line:1025:7, col:46>
    0x921c350 "const __int_type __eof =
      (CallExpr 0x921c3d8 <col:32, col:45> '<dependent type>'
        (DependentScopeDeclRefExpr 0x921c3b0 <col:32, col:41> '<dependent type>' lvalue))")
  (DeclStmt 0x921c4f8 <line:1026:7, col:44>
    0x921c450 "__streambuf_type *__sb =
      (CallExpr 0x921c4d8 <col:32, col:43> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x921c4a0 <col:32, col:37> '<dependent type>' lvalue
          (DeclRefExpr 0x921c484 <col:32> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x921bbd0 '__in' 'basic_istream<_CharT, _Traits> &')))")
  (DeclStmt 0x921c5b8 <line:1027:7, col:37>
    0x921c510 "__int_type __c =
      (CallExpr 0x921c598 <col:24, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x921c560 <col:24, col:30> '<dependent type>' lvalue
          (DeclRefExpr 0x921c544 <col:24> '__streambuf_type *' lvalue Var 0x921c450 '__sb' '__streambuf_type *')))")
  (WhileStmt 0x921c870 <line:1029:7, line:1031:21>
    <<<NULL>>>
    (BinaryOperator 0x921c7b8 <line:1029:14, line:1030:63> '<dependent type>' '&&'
      (UnaryOperator 0x921c668 <line:1029:14, col:46> '<dependent type>' prefix '!'
        (CallExpr 0x921c640 <col:15, col:46> '<dependent type>'
          (DependentScopeDeclRefExpr 0x921c5e8 <col:15, col:24> '<dependent type>' lvalue)
          (DeclRefExpr 0x921c60c <col:36> '__int_type':'typename __istream_type::int_type' lvalue Var 0x921c510 '__c' '__int_type':'typename __istream_type::int_type')
          (DeclRefExpr 0x921c624 <col:41> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x921c350 '__eof' 'const __int_type':'const typename __istream_type::int_type')))
      (CallExpr 0x921c790 <line:1030:10, col:63> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x921c698 <col:10, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x921c67c <col:10> 'const __ctype_type':'const ctype<_CharT>' lvalue Var 0x921c1e0 '__ct' 'const __ctype_type &'))
        (DeclRefExpr 0x921c6ec <col:18, col:30> 'const mask':'const unsigned short' lvalue Var 0x90fccc0 'space' 'const mask':'const unsigned short')
        (CallExpr 0x921c770 <col:37, col:62> '<dependent type>'
          (DependentScopeDeclRefExpr 0x921c730 <col:37, col:46> '<dependent type>' lvalue)
          (DeclRefExpr 0x921c754 <col:59> '__int_type':'typename __istream_type::int_type' lvalue Var 0x921c510 '__c' '__int_type':'typename __istream_type::int_type'))))
    (BinaryOperator 0x921c858 <line:1031:2, col:21> '<dependent type>' '='
      (DeclRefExpr 0x921c7d0 <col:2> '__int_type':'typename __istream_type::int_type' lvalue Var 0x921c510 '__c' '__int_type':'typename __istream_type::int_type')
      (CallExpr 0x921c838 <col:8, col:21> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x921c800 <col:8, col:14> '<dependent type>' lvalue
          (DeclRefExpr 0x921c7e8 <col:8> '__streambuf_type *' lvalue Var 0x921c450 '__sb' '__streambuf_type *')))))
  (IfStmt 0x921c9e0 <line:1033:8, line:1034:33>
    <<<NULL>>>
    (CallExpr 0x921c908 <line:1033:12, col:43> '<dependent type>'
      (DependentScopeDeclRefExpr 0x921c8b0 <col:12, col:21> '<dependent type>' lvalue)
      (DeclRefExpr 0x921c8d4 <col:33> '__int_type':'typename __istream_type::int_type' lvalue Var 0x921c510 '__c' '__int_type':'typename __istream_type::int_type')
      (DeclRefExpr 0x921c8ec <col:38> 'const __int_type':'const typename __istream_type::int_type' lvalue Var 0x921c350 '__eof' 'const __int_type':'const typename __istream_type::int_type'))
    (CallExpr 0x921c9c0 <line:1034:3, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x921c948 <col:3, col:8> '<dependent type>' lvalue
        (DeclRefExpr 0x921c92c <col:3> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x921bbd0 '__in' 'basic_istream<_CharT, _Traits> &'))
      (DeclRefExpr 0x921c99c <col:17, col:27> 'const iostate':'const enum std::_Ios_Iostate' lvalue Var 0x90aba50 'eofbit' 'const iostate':'const enum std::_Ios_Iostate'))
    <<<NULL>>>)
  (ReturnStmt 0x921ca18 <line:1035:7, col:14>
    (DeclRefExpr 0x921c9fc <col:14> 'basic_istream<_CharT, _Traits>' lvalue ParmVar 0x921bbd0 '__in' 'basic_istream<_CharT, _Traits> &')))

;
    class basic_istream : virtual public basic_ios<char, std::char_traits<char> > {
        class basic_istream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
        typedef basic_ios<char, std::char_traits<char> > __ios_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef num_get<char, istreambuf_iterator<char, std::char_traits<char> > > __num_get_type;
        typedef ctype<char> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<char> traits_type;
            typedef basic_streambuf<char, std::char_traits<char> > __streambuf_type;
            typedef basic_istream<char, std::char_traits<char> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<char>::int_type __int_type;
            sentry(basic_istream<char, std::char_traits<char> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<char> &operator=(const std::basic_istream<char> &);
        inline basic_istream(const std::basic_istream<char> &);
    };
    class basic_iostream : public basic_istream<char, std::char_traits<char> >, public basic_ostream<char, std::char_traits<char> > {
        class basic_iostream;
    public:
    public:
        typedef char char_type;
        typedef typename char_traits<char>::int_type int_type;
        typedef typename char_traits<char>::pos_type pos_type;
        typedef typename char_traits<char>::off_type off_type;
        typedef std::char_traits<char> traits_type;
        typedef basic_istream<char, std::char_traits<char> > __istream_type;
        typedef basic_ostream<char, std::char_traits<char> > __ostream_type;
        basic_iostream(basic_streambuf<char, std::char_traits<char> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<char> &operator=(const std::basic_iostream<char> &);
        inline basic_iostream(const std::basic_iostream<char> &);
    };
    class basic_istream : virtual public basic_ios<wchar_t, std::char_traits<wchar_t> > {
        class basic_istream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
        typedef basic_ios<wchar_t, std::char_traits<wchar_t> > __ios_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef num_get<wchar_t, istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > __num_get_type;
        typedef ctype<wchar_t> __ctype_type;
    protected:
    protected:
        streamsize _M_gcount;
    public:
    public:
        basic_istream(__streambuf_type *__sb);
        virtual void ~basic_istream();
        class sentry {
            class sentry;
            bool _M_ok;
        public:
        public:
            typedef std::char_traits<wchar_t> traits_type;
            typedef basic_streambuf<wchar_t, std::char_traits<wchar_t> > __streambuf_type;
            typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
            typedef typename __istream_type::__ctype_type __ctype_type;
            typedef typename char_traits<wchar_t>::int_type __int_type;
            sentry(basic_istream<wchar_t, std::char_traits<wchar_t> > &__is, bool __noskipws);
            bool operator _Bool() const;
        };
        ;
        __istream_type &operator>>(__istream_type &(*__pf)(__istream_type &));
        __istream_type &operator>>(__ios_type &(*__pf)(__ios_type &));
        __istream_type &operator>>(std::ios_base &(*__pf)(std::ios_base &));
        __istream_type &operator>>(bool &__n);
        __istream_type &operator>>(short &__n);
        __istream_type &operator>>(unsigned short &__n);
        __istream_type &operator>>(int &__n);
        __istream_type &operator>>(unsigned int &__n);
        __istream_type &operator>>(long &__n);
        __istream_type &operator>>(unsigned long &__n);
        __istream_type &operator>>(long long &__n);
        __istream_type &operator>>(unsigned long long &__n);
        __istream_type &operator>>(float &__f);
        __istream_type &operator>>(double &__f);
        __istream_type &operator>>(long double &__f);
        __istream_type &operator>>(void *&__p);
        __istream_type &operator>>(__streambuf_type *__sb);
        streamsize gcount() const;
        int_type get();
        __istream_type &get(char_type &__c);
        __istream_type &get(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &get(char_type *__s, streamsize __n);
        __istream_type &get(__streambuf_type &__sb, char_type __delim);
        __istream_type &get(__streambuf_type &__sb);
        __istream_type &getline(char_type *__s, streamsize __n, char_type __delim);
        __istream_type &getline(char_type *__s, streamsize __n);
        __istream_type &ignore();
        __istream_type &ignore(streamsize __n);
        __istream_type &ignore(streamsize __n, int_type __delim);
        int_type peek();
        __istream_type &read(char_type *__s, streamsize __n);
        streamsize readsome(char_type *__s, streamsize __n);
        __istream_type &putback(char_type __c);
        __istream_type &unget();
        int sync();
        pos_type tellg();
        __istream_type &seekg(pos_type);
        __istream_type &seekg(off_type, ios_base::seekdir);
    protected:
    protected:
        basic_istream();
        template <typename _ValueT = long> __istream_type &_M_extract(long &__v)template <typename _ValueT = double> __istream_type &_M_extract(double &__v)template <typename _ValueT = float> __istream_type &_M_extract(float &__v)template <typename _ValueT = unsigned int> __istream_type &_M_extract(unsigned int &__v)template <typename _ValueT = unsigned short> __istream_type &_M_extract(unsigned short &__v)template <typename _ValueT = unsigned long> __istream_type &_M_extract(unsigned long &__v)template <typename _ValueT = long double> __istream_type &_M_extract(long double &__v)template <typename _ValueT = long long> __istream_type &_M_extract(long long &__v)template <typename _ValueT = unsigned long long> __istream_type &_M_extract(unsigned long long &__v)template <typename _ValueT = bool> __istream_type &_M_extract(bool &__v)template <typename _ValueT = void *> __istream_type &_M_extract(void *&__v)template <typename _ValueT> __istream_type &_M_extract(_ValueT &__v);
        inline std::basic_istream<wchar_t> &operator=(const std::basic_istream<wchar_t> &);
        inline basic_istream(const std::basic_istream<wchar_t> &);
    };
    class basic_iostream : public basic_istream<wchar_t, std::char_traits<wchar_t> >, public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_iostream;
    public:
    public:
        typedef wchar_t char_type;
        typedef typename char_traits<wchar_t>::int_type int_type;
        typedef typename char_traits<wchar_t>::pos_type pos_type;
        typedef typename char_traits<wchar_t>::off_type off_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef basic_istream<wchar_t, std::char_traits<wchar_t> > __istream_type;
        typedef basic_ostream<wchar_t, std::char_traits<wchar_t> > __ostream_type;
        basic_iostream(basic_streambuf<wchar_t, std::char_traits<wchar_t> > *__sb);
        virtual void ~basic_iostream();
    protected:
    protected:
        basic_iostream();
        inline std::basic_iostream<wchar_t> &operator=(const std::basic_iostream<wchar_t> &);
        inline basic_iostream(const std::basic_iostream<wchar_t> &);
    };
}
namespace std {
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringbuf : public basic_streambuf<_CharT, _Traits> {
        class basic_stringbuf;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, _Traits, _Alloc> __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228378 </usr/include/c++/4.6/sstream:93:51, col:76> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228368 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9228350 <col:64, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9228330 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92282cc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9228340 <col:66, col:76> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922830c <col:66, col:76> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode((DeclRefExpr 0x9228778 </usr/include/c++/4.6/sstream:94:37> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x92270b0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')
), _M_string() (CompoundStmt 0x9228818 </usr/include/c++/4.6/sstream:95:7, col:9>)


        basic_stringbuf<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228468 </usr/include/c++/4.6/sstream:107:37, col:62> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228458 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9228440 <col:50, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9228420 <col:37, col:47> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92283bc <col:37, col:47> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9228430 <col:52, col:62> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92283fc <col:52, col:62> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) : __streambuf_type(), _M_mode(), _M_string((CallExpr 0x92288f8 </usr/include/c++/4.6/sstream:108:50, col:61> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x92288c0 <col:50, col:56> '<dependent type>' lvalue
    (DeclRefExpr 0x92288a8 <col:50> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9227200 '__str' 'const __string_type &')))
, (CallExpr 0x9228968 </usr/include/c++/4.6/sstream:108:64, col:75> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9228930 <col:64, col:70> '<dependent type>' lvalue
    (DeclRefExpr 0x9228914 <col:64> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9227200 '__str' 'const __string_type &')))
) (CompoundStmt 0x9228a60 </usr/include/c++/4.6/sstream:109:7, col:36>
  (CallExpr 0x9228a40 <col:9, col:33> '<dependent type>'
    (MemberExpr 0x9228a08 <col:9> '<bound member function type>' ->_M_stringbuf_init 0x9227610
      (CXXThisExpr 0x92289f8 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9228a28 <col:27> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9227270 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))


        __string_type str() const (CompoundStmt 0x9228fc0 </usr/include/c++/4.6/sstream:122:7, line:135:7>
  (DeclStmt 0x9228ab8 <line:123:2, col:21>
    0x9228a80 "__string_type __ret")
  (IfStmt 0x9228f78 <line:124:2, line:133:12>
    <<<NULL>>>
    (CallExpr 0x9228b30 <line:124:6, col:17> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9228af8 <col:6, col:12> '<dependent type>' lvalue
        (CXXThisExpr 0x9228ae8 <col:6> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CompoundStmt 0x9228f00 <line:125:4, line:131:4>
      (IfStmt 0x9228ee0 <line:127:6, line:130:59>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9228c68 <line:127:10, col:37> '<dependent type>'
          (UnresolvedLookupExpr 0x9228c20 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (CallExpr 0x9228b98 <col:10, col:21> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9228b60 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x9228b50 <col:10> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9228c00 <col:25, col:37> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9228bc8 <col:25, col:31> '<dependent type>' lvalue
              (CXXThisExpr 0x9228bb8 <col:25> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9228da0 <line:128:8, col:57> '<dependent type>' '='
          (DeclRefExpr 0x9228c8c <col:8> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9228a80 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9228d80 <col:16, col:57> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9228cf8 <col:30, col:42> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9228cc0 <col:30, col:36> '<dependent type>' lvalue
                (CXXThisExpr 0x9228cb0 <col:30> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9228d60 <col:45, col:56> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9228d28 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x9228d18 <col:45> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (BinaryOperator 0x9228ec8 <line:130:9, col:59> '<dependent type>' '='
          (DeclRefExpr 0x9228db8 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9228a80 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
          (CXXUnresolvedConstructExpr 0x9228ea8 <col:17, col:59> '__string_type':'basic_string<char_type, _Traits, _Alloc>'
            (CallExpr 0x9228e20 <col:31, col:43> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9228de8 <col:31, col:37> '<dependent type>' lvalue
                (CXXThisExpr 0x9228dd8 <col:31> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9228e88 <col:46, col:58> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9228e50 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x9228e40 <col:46> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))))
    (BinaryOperator 0x9228f60 <line:133:4, col:12> '<dependent type>' '='
      (DeclRefExpr 0x9228f14 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9228a80 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')
      (MemberExpr 0x9228f40 <col:12> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
        (CXXThisExpr 0x9228f30 <col:12> 'const basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
  (ReturnStmt 0x9228fb0 <line:134:2, col:9>
    (DeclRefExpr 0x9228f94 <col:9> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9228a80 '__ret' '__string_type':'basic_string<char_type, _Traits, _Alloc>')))


        void str(const __string_type &__s) (CompoundStmt 0x92291d0 </usr/include/c++/4.6/sstream:146:7, line:150:7>
  (CallExpr 0x9229128 <line:148:2, col:41> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9229010 <col:2, col:12> '<dependent type>' lvalue
      (MemberExpr 0x9228ff0 <col:2> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
        (CXXThisExpr 0x9228fe0 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
    (CallExpr 0x9229098 <col:19, col:28> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9229060 <col:19, col:23> '<dependent type>' lvalue
        (DeclRefExpr 0x9229044 <col:19> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9227440 '__s' 'const __string_type &')))
    (CallExpr 0x9229108 <col:31, col:40> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92290d0 <col:31, col:35> '<dependent type>' lvalue
        (DeclRefExpr 0x92290b4 <col:31> 'const __string_type':'const basic_string<char_type, _Traits, _Alloc>' lvalue ParmVar 0x9227440 '__s' 'const __string_type &'))))
  (CallExpr 0x92291b0 <line:149:2, col:27> '<dependent type>'
    (MemberExpr 0x9229160 <col:2> '<bound member function type>' ->_M_stringbuf_init 0x9227610
      (CXXThisExpr 0x9229150 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (MemberExpr 0x9229190 <col:20> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
      (CXXThisExpr 0x9229180 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))


    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode) (CompoundStmt 0x9229660 </usr/include/c++/4.6/sstream:156:7, line:162:7>
  (BinaryOperator 0x9229230 <line:157:2, col:12> '<dependent type>' '='
    (MemberExpr 0x92291f8 <col:2> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
      (CXXThisExpr 0x92291e8 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x9229218 <col:12> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x92275c0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (DeclStmt 0x92292a0 <line:158:2, col:23>
    0x9229250 "__size_type __len =
      (IntegerLiteral 0x9229288 <col:22> 'int' 0)")
  (IfStmt 0x9229508 <line:159:2, line:160:27>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9229428 <line:159:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x92293f0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b3ae0)
      (MemberExpr 0x92292c0 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
        (CXXThisExpr 0x92292b0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (ParenExpr 0x92293d8 <col:16, col:46> 'enum std::_Ios_Openmode'
        (CXXOperatorCallExpr 0x92293b0 <col:17, col:43> 'enum std::_Ios_Openmode'
          (ImplicitCastExpr 0x92293a0 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
            (DeclRefExpr 0x9229388 <col:31, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
          (ImplicitCastExpr 0x9229368 <col:17, col:27> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9229308 <col:17, col:27> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abc20 'ate' 'const openmode':'const enum std::_Ios_Openmode'))
          (ImplicitCastExpr 0x9229378 <col:33, col:43> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
            (DeclRefExpr 0x9229344 <col:33, col:43> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abbc0 'app' 'const openmode':'const enum std::_Ios_Openmode')))))
    (BinaryOperator 0x92294f0 <line:160:4, col:27> '<dependent type>' '='
      (DeclRefExpr 0x922944c <col:4> '__size_type':'typename __string_type::size_type' lvalue Var 0x9229250 '__len' '__size_type':'typename __string_type::size_type')
      (CallExpr 0x92294d0 <col:12, col:27> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9229498 <col:12, col:22> '<dependent type>' lvalue
          (MemberExpr 0x9229478 <col:12> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9229468 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    <<<NULL>>>)
  (CallExpr 0x9229638 <line:161:2, col:60> '<dependent type>'
    (MemberExpr 0x9229538 <col:2> '<bound member function type>' ->_M_sync 0x9227ff0
      (CXXThisExpr 0x9229528 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (CXXConstCastExpr 0x92295f0 <col:10, col:49> 'char_type *' const_cast<char_type *> <NoOp>
      (CallExpr 0x92295c0 <col:33, col:48> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9229588 <col:33, col:43> '<dependent type>' lvalue
          (MemberExpr 0x9229568 <col:33> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9229558 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (IntegerLiteral 0x9229608 <col:52> 'int' 0)
    (DeclRefExpr 0x9229620 <col:55> '__size_type':'typename __string_type::size_type' lvalue Var 0x9229250 '__len' '__size_type':'typename __string_type::size_type')))


        virtual streamsize showmanyc() (CompoundStmt 0x92299f8 </usr/include/c++/4.6/sstream:166:7, line:174:7>
  (DeclStmt 0x92296f8 <line:167:2, col:23>
    0x9229690 "streamsize __ret =
      (UnaryOperator 0x92296e0 <col:21, col:22> 'int' prefix '-'
        (IntegerLiteral 0x92296c8 <col:22> 'int' 1))")
  (IfStmt 0x92299a0 <line:168:2, line:172:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92297b0 <line:168:6, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x9229778 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b3ae0)
      (MemberExpr 0x9229718 <col:6> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
        (CXXThisExpr 0x9229708 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x9229754 <col:16, col:26> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
    (CompoundStmt 0x9229988 <line:169:4, line:172:4>
      (CallExpr 0x9229808 <line:170:6, col:22> '<dependent type>'
        (MemberExpr 0x92297e8 <col:6> '<bound member function type>' ->_M_update_egptr 0x9228080
          (CXXThisExpr 0x92297d8 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (BinaryOperator 0x9229970 <line:171:6, col:41> '<dependent type>' '='
        (DeclRefExpr 0x9229824 <col:6> 'streamsize':'int' lvalue Var 0x9229690 '__ret' 'streamsize':'int')
        (CXXOperatorCallExpr 0x9229948 <col:14, col:41> '<dependent type>'
          (UnresolvedLookupExpr 0x9229910 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x9229888 <col:14, col:26> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9229850 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x9229840 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x92298f0 <col:30, col:41> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92298b8 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x92298a8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>)
  (ReturnStmt 0x92299e8 <line:173:2, col:9>
    (ImplicitCastExpr 0x92299d8 <col:9> 'streamsize':'int' <LValueToRValue>
      (DeclRefExpr 0x92299bc <col:9> 'streamsize':'int' lvalue Var 0x9229690 '__ret' 'streamsize':'int'))))


        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c = (CallExpr 0x92284d8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x92284b0 <col:32, col:45> '<dependent type>' lvalue))
);
        virtual int_type overflow(int_type __c = (CallExpr 0x9228540 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9228518 <col:31, col:44> '<dependent type>' lvalue))
);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n) (CompoundStmt 0x9229c20 </usr/include/c++/4.6/sstream:198:7, line:213:7>
  (IfStmt 0x9229be0 <line:199:2, line:211:4>
    <<<NULL>>>
    (BinaryOperator 0x9229a88 <line:199:6, col:20> '<dependent type>' '&&'
      (DeclRefExpr 0x9229a14 <col:6> 'char_type *' lvalue ParmVar 0x9227990 '__s' 'char_type *')
      (BinaryOperator 0x9229a70 <col:13, col:20> '_Bool' '>='
        (ImplicitCastExpr 0x9229a60 <col:13> 'streamsize':'int' <LValueToRValue>
          (DeclRefExpr 0x9229a2c <col:13> 'streamsize':'int' lvalue ParmVar 0x92279d0 '__n' 'streamsize':'int'))
        (IntegerLiteral 0x9229a48 <col:20> 'int' 0)))
    (CompoundStmt 0x9229bc8 <line:200:4, line:211:4>
      (CallExpr 0x9229b08 <line:207:6, col:22> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9229ad0 <col:6, col:16> '<dependent type>' lvalue
          (MemberExpr 0x9229ab0 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9229aa0 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (CallExpr 0x9229ba0 <line:210:6, col:25> '<dependent type>'
        (MemberExpr 0x9229b38 <col:6> '<bound member function type>' ->_M_sync 0x9227ff0
          (CXXThisExpr 0x9229b28 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9229b58 <col:14> 'char_type *' lvalue ParmVar 0x9227990 '__s' 'char_type *')
        (DeclRefExpr 0x9229b70 <col:19> 'streamsize':'int' lvalue ParmVar 0x92279d0 '__n' 'streamsize':'int')
        (IntegerLiteral 0x9229b88 <col:24> 'int' 0)))
    <<<NULL>>>)
  (ReturnStmt 0x9229c10 <line:212:2, col:9>
    (CXXThisExpr 0x9229c00 <col:9> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))


        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228628 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228618 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9228600 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x92285e0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922857c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x92285f0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92285bc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228718 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228708 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x92286f0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x92286d0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922866c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x92286e0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92286ac <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr() (CompoundStmt 0x922a2e8 </usr/include/c++/4.6/sstream:233:7, line:242:7>
  (DeclStmt 0x9229d48 <line:234:2, col:46>
    0x9229c40 "const bool __testin =
      (CXXOperatorCallExpr 0x9229d20 <col:24, col:44> '<dependent type>'
        (UnresolvedLookupExpr 0x9229ce8 <col:32, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b3ae0)
        (MemberExpr 0x9229c88 <col:24> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
          (CXXThisExpr 0x9229c78 <col:24> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9229cc4 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x922a2c8 <line:235:2, line:241:4>
    <<<NULL>>>
    (BinaryOperator 0x9229f00 <line:235:6, col:49> '<dependent type>' '&&'
      (CallExpr 0x9229da0 <col:6, col:17> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9229d68 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9229d58 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CXXOperatorCallExpr 0x9229ed8 <col:22, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x9229e90 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
        (CallExpr 0x9229e08 <col:22, col:33> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9229dd0 <col:22, col:28> '<dependent type>' lvalue
            (CXXThisExpr 0x9229dc0 <col:22> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9229e70 <col:37, col:49> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9229e38 <col:37, col:43> '<dependent type>' lvalue
            (CXXThisExpr 0x9229e28 <col:37> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x922a2b0 <line:236:4, line:241:4>
      (IfStmt 0x922a290 <line:237:6, line:240:59>
        <<<NULL>>>
        (ImplicitCastExpr 0x9229f30 <line:237:10> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x9229f18 <col:10> 'const _Bool' lvalue Var 0x9229c40 '__testin' 'const _Bool'))
        (CallExpr 0x922a0c0 <line:238:8, col:60> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9229f50 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9229f40 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x9229fd0 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9229f98 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9229f88 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x922a038 <col:34, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x922a000 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x9229ff0 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x922a0a0 <col:48, col:59> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x922a068 <col:48, col:54> '<dependent type>' lvalue
              (CXXThisExpr 0x922a058 <col:48> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CallExpr 0x922a268 <line:240:8, col:59> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x922a0f8 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x922a0e8 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (CallExpr 0x922a178 <col:19, col:30> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x922a140 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x922a130 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x922a1e0 <col:33, col:44> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x922a1a8 <col:33, col:39> '<dependent type>' lvalue
              (CXXThisExpr 0x922a198 <col:33> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x922a248 <col:47, col:58> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x922a210 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x922a200 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    <<<NULL>>>))


        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_istringstream : public basic_istream<_CharT, _Traits> {
        class basic_istringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x922f0f8 </usr/include/c++/4.6/sstream:298:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x922f0d4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((CXXOperatorCallExpr 0x922f248 </usr/include/c++/4.6/sstream:299:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x922f238 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x922f220 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x922f200 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922f1a8 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x922eb20 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x922f210 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922f1dc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x922f3c0 </usr/include/c++/4.6/sstream:300:7, col:36>
  (CallExpr 0x922f3a0 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x922f2d8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x922f2c8 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x922f380 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x922f340 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x922f320 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x922ea80
        (CXXThisExpr 0x922f310 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_istringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x922f148 </usr/include/c++/4.6/sstream:317:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x922f124 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
) : __istream_type(), _M_stringbuf((DeclRefExpr 0x922f418 </usr/include/c++/4.6/sstream:318:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x922ec40 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x922f4d0 </usr/include/c++/4.6/sstream:318:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x922f4c0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x922f4a8 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x922f488 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922f430 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x922ecb0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x922f498 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922f464 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x922f638 </usr/include/c++/4.6/sstream:319:7, col:36>
  (CallExpr 0x922f618 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x922f550 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x922f540 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x922f5f8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x922f5b8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x922f598 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x922ea80
        (CXXThisExpr 0x922f588 <col:21> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_istringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x922f650 </usr/include/c++/4.6/sstream:328:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x922f740 </usr/include/c++/4.6/sstream:339:7, col:62>
  (ReturnStmt 0x922f730 <col:9, col:59>
    (CXXConstCastExpr 0x922f718 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x922f6e8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x922f6a8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (MemberExpr 0x922f688 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x922ea80
          (CXXThisExpr 0x922f678 <col:47> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x922f7f0 </usr/include/c++/4.6/sstream:347:7, col:36>
  (ReturnStmt 0x922f7e0 <col:9, col:33>
    (CallExpr 0x922f7c0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x922f788 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x922f768 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x922ea80
          (CXXThisExpr 0x922f758 <col:16> 'const basic_istringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x922f8a8 </usr/include/c++/4.6/sstream:357:7, col:32>
  (CallExpr 0x922f888 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x922f838 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x922f818 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x922ea80
        (CXXThisExpr 0x922f808 <col:9> 'basic_istringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x922f86c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x922efd0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_ostringstream : public basic_ostream<_CharT, _Traits> {
        class basic_ostringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __mode = (ImplicitCastExpr 0x92309e8 </usr/include/c++/4.6/sstream:408:55, col:65> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x92309c4 <col:55, col:65> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((CXXOperatorCallExpr 0x9230b38 </usr/include/c++/4.6/sstream:409:40, col:59> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9230b28 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9230b10 <col:47, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9230af0 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9230a98 <col:40> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9230450 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9230b00 <col:49, col:59> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9230acc <col:49, col:59> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9230cb0 </usr/include/c++/4.6/sstream:410:7, col:36>
  (CallExpr 0x9230c90 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9230bc8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9230bb8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9230c70 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9230c30 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x9230c10 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x92303b0
        (CXXThisExpr 0x9230c00 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_ostringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __mode = (ImplicitCastExpr 0x9230a38 </usr/include/c++/4.6/sstream:427:34, col:44> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
  (DeclRefExpr 0x9230a14 <col:34, col:44> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))
) : __ostream_type(), _M_stringbuf((DeclRefExpr 0x9230d08 </usr/include/c++/4.6/sstream:428:40> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9230570 '__str' 'const __string_type &')
, (CXXOperatorCallExpr 0x9230dc0 </usr/include/c++/4.6/sstream:428:47, col:66> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9230db0 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9230d98 <col:54, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9230d78 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9230d20 <col:47> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x92305e0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9230d88 <col:56, col:66> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x9230d54 <col:56, col:66> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x9230f28 </usr/include/c++/4.6/sstream:429:7, col:36>
  (CallExpr 0x9230f08 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9230e40 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9230e30 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x9230ee8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9230ea8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x9230e88 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x92303b0
        (CXXThisExpr 0x9230e78 <col:21> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_ostringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9230f40 </usr/include/c++/4.6/sstream:438:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9231030 </usr/include/c++/4.6/sstream:449:7, col:62>
  (ReturnStmt 0x9231020 <col:9, col:59>
    (CXXConstCastExpr 0x9231008 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x9230fd8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9230f98 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (MemberExpr 0x9230f78 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x92303b0
          (CXXThisExpr 0x9230f68 <col:47> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x92310e0 </usr/include/c++/4.6/sstream:457:7, col:36>
  (ReturnStmt 0x92310d0 <col:9, col:33>
    (CallExpr 0x92310b0 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9231078 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9231058 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x92303b0
          (CXXThisExpr 0x9231048 <col:16> 'const basic_ostringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9231198 </usr/include/c++/4.6/sstream:467:7, col:32>
  (CallExpr 0x9231178 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9231128 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x9231108 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x92303b0
        (CXXThisExpr 0x92310f8 <col:9> 'basic_ostringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x923115c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x92308c0 '__s' 'const __string_type &')))


    };
    template <typename _CharT = wchar_t, typename _Traits = std::char_traits<wchar_t>, typename _Alloc = std::allocator<wchar_t>> class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    }
template <typename _CharT = char, typename _Traits = std::char_traits<char>, typename _Alloc = std::allocator<char>> class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    }
template <typename _CharT, typename _Traits = char_traits<_CharT>, typename _Alloc = allocator<_CharT>> class basic_stringstream : public basic_iostream<_CharT, _Traits> {
        class basic_stringstream;
    public:
    public:
        typedef _CharT char_type;
        typedef _Traits traits_type;
        typedef _Alloc allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
        typedef basic_stringbuf<_CharT, _Traits, _Alloc> __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream<_CharT, _Traits, _Alloc>(ios_base::openmode __m = (CXXOperatorCallExpr 0x9232360 </usr/include/c++/4.6/sstream:516:51, col:77> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9232350 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9232338 <col:65, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9232318 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92322b4 <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9232328 <col:67, col:77> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92322f4 <col:67, col:77> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x92324c8 </usr/include/c++/4.6/sstream:517:41> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9231d40 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x9232630 </usr/include/c++/4.6/sstream:518:7, col:36>
  (CallExpr 0x9232610 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9232548 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9232538 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x92325f0 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x92325b0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x9232590 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9231ca0
        (CXXThisExpr 0x9232580 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        basic_stringstream<_CharT, _Traits, _Alloc>(const __string_type &__str, ios_base::openmode __m = (CXXOperatorCallExpr 0x9232450 </usr/include/c++/4.6/sstream:533:30, col:56> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9232440 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9232428 <col:44, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x9232408 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92323a4 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x9232418 <col:46, col:56> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92323e4 <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')))
) : __iostream_type(), _M_stringbuf((DeclRefExpr 0x9232688 </usr/include/c++/4.6/sstream:534:41> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x9231e60 '__str' 'const __string_type &')
, (DeclRefExpr 0x92326a0 </usr/include/c++/4.6/sstream:534:48> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x9231ed0 '__m' 'class ios_base::openmode':'enum std::_Ios_Openmode')
) (CompoundStmt 0x92327f8 </usr/include/c++/4.6/sstream:535:7, col:36>
  (CallExpr 0x92327d8 <col:9, col:33> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9232710 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x9232700 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this))
    (CXXOperatorCallExpr 0x92327b8 <col:20, col:21> '<dependent type>'
      (UnresolvedLookupExpr 0x9232778 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
      (MemberExpr 0x9232758 <col:21> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9231ca0
        (CXXThisExpr 0x9232748 <col:21> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))))


        void ~basic_stringstream<_CharT, _Traits, _Alloc>() (CompoundStmt 0x9232810 </usr/include/c++/4.6/sstream:544:7, col:9>)


        __stringbuf_type *rdbuf() const (CompoundStmt 0x9232900 </usr/include/c++/4.6/sstream:555:7, col:62>
  (ReturnStmt 0x92328f0 <col:9, col:59>
    (CXXConstCastExpr 0x92328d8 <col:16, col:59> '__stringbuf_type *' const_cast<__stringbuf_type *> <NoOp>
      (CXXOperatorCallExpr 0x92328a8 <col:46, col:47> '<dependent type>'
        (UnresolvedLookupExpr 0x9232868 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (MemberExpr 0x9232848 <col:47> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9231ca0
          (CXXThisExpr 0x9232838 <col:47> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        __string_type str() const (CompoundStmt 0x92329b0 </usr/include/c++/4.6/sstream:563:7, col:36>
  (ReturnStmt 0x92329a0 <col:9, col:33>
    (CallExpr 0x9232980 <col:16, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9232948 <col:16, col:29> '<dependent type>' lvalue
        (MemberExpr 0x9232928 <col:16> 'const __stringbuf_type':'const basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9231ca0
          (CXXThisExpr 0x9232918 <col:16> 'const basic_stringstream<_CharT, _Traits, _Alloc> *' this))))))


        void str(const __string_type &__s) (CompoundStmt 0x9232a68 </usr/include/c++/4.6/sstream:573:7, col:32>
  (CallExpr 0x9232a48 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92329f8 <col:9, col:22> '<dependent type>' lvalue
      (MemberExpr 0x92329d8 <col:9> '__stringbuf_type':'basic_stringbuf<_CharT, _Traits, _Alloc>' lvalue ->_M_stringbuf 0x9231ca0
        (CXXThisExpr 0x92329c8 <col:9> 'basic_stringstream<_CharT, _Traits, _Alloc> *' this)))
    (DeclRefExpr 0x9232a2c <col:26> 'const __string_type':'const basic_string<_CharT, _Traits, _Alloc>' lvalue ParmVar 0x92321b0 '__s' 'const __string_type &')))


    };
}
namespace std {
    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type pbackfail(int_type __c = (CallExpr 0x92284d8 </usr/include/c++/4.6/sstream:180:32, col:49> '<dependent type>'
  (DependentScopeDeclRefExpr 0x92284b0 <col:32, col:45> '<dependent type>' lvalue))
) (CompoundStmt 0x9233e68 </usr/include/c++/4.6/bits/sstream.tcc:48:5, line:76:5>
  (DeclStmt 0x9233360 <line:49:7, col:42>
    0x92332b0 "int_type __ret =
      (CallExpr 0x9233340 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9233308 <col:24, col:37> '<dependent type>' lvalue))")
  (IfStmt 0x9233e20 <line:50:7, line:74:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9233488 <line:50:11, col:38> '<dependent type>'
      (UnresolvedLookupExpr 0x9233440 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (CallExpr 0x92333b8 <col:11, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9233380 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9233370 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (CallExpr 0x9233420 <col:27, col:38> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92333e8 <col:27, col:33> '<dependent type>' lvalue
          (CXXThisExpr 0x92333d8 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
    (CompoundStmt 0x9233e08 <line:51:2, line:74:2>
      (DeclStmt 0x92335a8 <line:54:4, col:63>
        0x92334c0 "const bool __testeof =
          (CallExpr 0x9233580 <col:27, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9233518 <col:27, col:40> '<dependent type>' lvalue)
            (DeclRefExpr 0x923354c <col:52> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9233030 '__c' 'int_type':'typename traits_type::int_type')
            (DeclRefExpr 0x9233564 <col:57> 'int_type':'typename traits_type::int_type' lvalue Var 0x92332b0 '__ret' 'int_type':'typename traits_type::int_type'))")
      (IfStmt 0x9233de8 <line:55:4, line:73:6>
        <<<NULL>>>
        (UnaryOperator 0x92335e0 <line:55:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x92335d0 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x92335b8 <col:9> 'const _Bool' lvalue Var 0x92334c0 '__testeof' 'const _Bool')))
        (CompoundStmt 0x9233c58 <line:56:6, line:68:6>
          (DeclStmt 0x92337f8 <line:57:8, line:59:28>
            0x9233600 "const bool __testeq =
              (CallExpr 0x92337d0 <line:57:30, line:59:27> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9233658 <line:57:30, col:43> '<dependent type>' lvalue)
                (CallExpr 0x9233700 <col:46, line:58:27> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92336b0 <line:57:46, line:58:11> '<dependent type>' lvalue)
                  (DeclRefExpr 0x92336e4 <col:24> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9233030 '__c' 'int_type':'typename traits_type::int_type'))
                (ArraySubscriptExpr 0x92337b8 <line:59:11, col:26> '<dependent type>' lvalue
                  (CallExpr 0x9233768 <col:11, col:22> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9233730 <col:11, col:17> '<dependent type>' lvalue
                      (CXXThisExpr 0x9233720 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (UnaryOperator 0x92337a0 <col:24, col:25> 'int' prefix '-'
                    (IntegerLiteral 0x9233788 <col:25> 'int' 1))))")
          (DeclStmt 0x9233938 <line:60:8, col:60>
            0x9233810 "const bool __testout =
              (CXXOperatorCallExpr 0x9233910 <col:31, col:57> '<dependent type>'
                (UnresolvedLookupExpr 0x92338d0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
                (CXXDependentScopeMemberExpr 0x9233858 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x9233848 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (DeclRefExpr 0x92338ac <col:47, col:57> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
          (IfStmt 0x9233c38 <line:61:8, line:67:3>
            <<<NULL>>>
            (BinaryOperator 0x9233998 <line:61:12, col:24> '_Bool' '||'
              (ImplicitCastExpr 0x9233978 <col:12> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9233948 <col:12> 'const _Bool' lvalue Var 0x9233600 '__testeq' 'const _Bool'))
              (ImplicitCastExpr 0x9233988 <col:24> '_Bool' <LValueToRValue>
                (DeclRefExpr 0x9233960 <col:24> 'const _Bool' lvalue Var 0x9233810 '__testout' 'const _Bool')))
            (CompoundStmt 0x9233c18 <line:62:3, line:67:3>
              (CallExpr 0x9233a28 <line:63:5, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92339c0 <col:5, col:11> '<dependent type>' lvalue
                  (CXXThisExpr 0x92339b0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
                (UnaryOperator 0x9233a10 <col:17, col:18> 'int' prefix '-'
                  (IntegerLiteral 0x92339f8 <col:18> 'int' 1)))
              (IfStmt 0x9233bb0 <line:64:5, line:65:52>
                <<<NULL>>>
                (UnaryOperator 0x9233a70 <line:64:9, col:10> '_Bool' prefix '!'
                  (ImplicitCastExpr 0x9233a60 <col:10> '_Bool' <LValueToRValue>
                    (DeclRefExpr 0x9233a48 <col:10> 'const _Bool' lvalue Var 0x9233600 '__testeq' 'const _Bool')))
                (BinaryOperator 0x9233b98 <line:65:7, col:52> '<dependent type>' '='
                  (UnaryOperator 0x9233af0 <col:7, col:19> '<dependent type>' prefix '*'
                    (CallExpr 0x9233ad0 <col:8, col:19> '<dependent type>'
                      (CXXDependentScopeMemberExpr 0x9233a98 <col:8, col:14> '<dependent type>' lvalue
                        (CXXThisExpr 0x9233a88 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
                  (CallExpr 0x9233b78 <col:23, col:52> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x9233b28 <col:23, col:36> '<dependent type>' lvalue)
                    (DeclRefExpr 0x9233b5c <col:49> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9233030 '__c' 'int_type':'typename traits_type::int_type')))
                <<<NULL>>>)
              (BinaryOperator 0x9233c00 <line:66:5, col:13> '<dependent type>' '='
                (DeclRefExpr 0x9233bcc <col:5> 'int_type':'typename traits_type::int_type' lvalue Var 0x92332b0 '__ret' 'int_type':'typename traits_type::int_type')
                (DeclRefExpr 0x9233be4 <col:13> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9233030 '__c' 'int_type':'typename traits_type::int_type')))
            <<<NULL>>>))
        (CompoundStmt 0x9233dd0 <line:70:6, line:73:6>
          (CallExpr 0x9233cf0 <line:71:8, col:22> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9233c88 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9233c78 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (UnaryOperator 0x9233cd8 <col:20, col:21> 'int' prefix '-'
              (IntegerLiteral 0x9233cc0 <col:21> 'int' 1)))
          (BinaryOperator 0x9233db8 <line:72:8, col:40> '<dependent type>' '='
            (DeclRefExpr 0x9233d10 <col:8> 'int_type':'typename traits_type::int_type' lvalue Var 0x92332b0 '__ret' 'int_type':'typename traits_type::int_type')
            (CallExpr 0x9233d98 <col:16, col:40> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9233d48 <col:16, col:29> '<dependent type>' lvalue)
              (DeclRefExpr 0x9233d7c <col:37> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9233030 '__c' 'int_type':'typename traits_type::int_type'))))))
    <<<NULL>>>)
  (ReturnStmt 0x9233e58 <line:75:7, col:14>
    (DeclRefExpr 0x9233e3c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x92332b0 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type overflow(int_type __c = (CallExpr 0x9228540 </usr/include/c++/4.6/sstream:183:31, col:48> '<dependent type>'
  (DependentScopeDeclRefExpr 0x9228518 <col:31, col:44> '<dependent type>' lvalue))
) (CompoundStmt 0x9235e20 </usr/include/c++/4.6/bits/sstream.tcc:82:5, line:127:5>
  (DeclStmt 0x9234708 <line:83:7, col:59>
    0x92345e0 "const bool __testout =
      (CXXOperatorCallExpr 0x92346e0 <col:30, col:56> '<dependent type>'
        (UnresolvedLookupExpr 0x92346a0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CXXDependentScopeMemberExpr 0x9234628 <col:30, col:36> '<dependent type>' lvalue
          (CXXThisExpr 0x9234618 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x923467c <col:46, col:56> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x9234870 <line:84:7, line:85:26>
    <<<NULL>>>
    (ImplicitCastExpr 0x92347d8 <line:84:11, col:45> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9234790 <col:11, col:45> 'long'
        (ImplicitCastExpr 0x9234780 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x9234718 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x92347b8 <col:28, col:29> 'long' <IntegralCast>
          (UnaryOperator 0x9234758 <col:28, col:29> '_Bool' prefix '!'
            (ImplicitCastExpr 0x9234748 <col:29> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x9234730 <col:29> 'const _Bool' lvalue Var 0x92345e0 '__testout' 'const _Bool'))))
        (ImplicitCastExpr 0x92347c8 <col:40> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9234770 <col:40> '_Bool' false))))
    (ReturnStmt 0x9234860 <line:85:2, col:26>
      (CallExpr 0x9234840 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9234808 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x92349e8 <line:87:7, col:79>
    0x92348a0 "const bool __testeof =
      (CallExpr 0x92349c0 <col:30, col:78> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92348f8 <col:30, col:43> '<dependent type>' lvalue)
        (DeclRefExpr 0x923492c <col:55> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9234360 '__c' 'int_type':'typename traits_type::int_type')
        (CallExpr 0x92349a0 <col:60, col:77> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9234968 <col:60, col:73> '<dependent type>' lvalue)))")
  (IfStmt 0x9234b50 <line:88:7, line:89:33>
    <<<NULL>>>
    (ImplicitCastExpr 0x9234aa0 <line:88:11, col:44> '_Bool' <IntegralToBoolean>
      (CallExpr 0x9234a48 <col:11, col:44> 'long'
        (ImplicitCastExpr 0x9234a38 <col:11> 'long (*)(long, long)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92349f8 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)'))
        (ImplicitCastExpr 0x9234a80 <col:28> 'long' <IntegralCast>
          (ImplicitCastExpr 0x9234a70 <col:28> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9234a10 <col:28> 'const _Bool' lvalue Var 0x92348a0 '__testeof' 'const _Bool')))
        (ImplicitCastExpr 0x9234a90 <col:39> 'long' <IntegralCast>
          (CXXBoolLiteralExpr 0x9234a28 <col:39> '_Bool' false))))
    (ReturnStmt 0x9234b40 <line:89:2, col:33>
      (CallExpr 0x9234b20 <col:9, col:33> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9234ad0 <col:9, col:22> '<dependent type>' lvalue)
        (DeclRefExpr 0x9234b04 <col:30> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9234360 '__c' 'int_type':'typename traits_type::int_type')))
    <<<NULL>>>)
  (DeclStmt 0x9234c40 <line:91:7, col:58>
    0x9234b80 "const __size_type __capacity =
      (CallExpr 0x9234c20 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9234be8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9234bc8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9234bb8 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9234d20 <line:92:7, col:58>
    0x9234c60 "const __size_type __max_size =
      (CallExpr 0x9234d00 <col:38, col:57> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9234cc8 <col:38, col:48> '<dependent type>' lvalue
          (MemberExpr 0x9234ca8 <col:38> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9234c98 <col:38> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (DeclStmt 0x9234eb8 <line:93:7, col:58>
    0x9234d40 "const bool __testput =
      (CXXOperatorCallExpr 0x9234e90 <col:30, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x9234e48 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (CallExpr 0x9234dc0 <col:30, col:41> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9234d88 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9234d78 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x9234e28 <col:45, col:57> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9234df0 <col:45, col:51> '<dependent type>' lvalue
            (CXXThisExpr 0x9234de0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x92350b0 <line:94:7, line:95:26>
    <<<NULL>>>
    (CallExpr 0x9235000 <line:94:11, col:73> '<dependent type>'
      (DeclRefExpr 0x9234ec8 <col:11> 'long (long, long)' lvalue Function 0x8fdbe90 '__builtin_expect' 'long (long, long)')
      (BinaryOperator 0x9234fd8 <col:28, col:56> '<dependent type>' '&&'
        (UnaryOperator 0x9234f08 <col:28, col:29> '_Bool' prefix '!'
          (ImplicitCastExpr 0x9234ef8 <col:29> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x9234ee0 <col:29> 'const _Bool' lvalue Var 0x9234d40 '__testput' 'const _Bool')))
        (CXXOperatorCallExpr 0x9234fb0 <col:42, col:56> '<dependent type>'
          (UnresolvedLookupExpr 0x9234f50 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
          (DeclRefExpr 0x9234f1c <col:42> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9234b80 '__capacity' 'const __size_type':'const typename __string_type::size_type')
          (DeclRefExpr 0x9234f34 <col:56> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9234c60 '__max_size' 'const __size_type':'const typename __string_type::size_type')))
      (CXXBoolLiteralExpr 0x9234ff0 <col:68> '_Bool' false))
    (ReturnStmt 0x92350a0 <line:95:2, col:26>
      (CallExpr 0x9235080 <col:9, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9235048 <col:9, col:22> '<dependent type>' lvalue)))
    <<<NULL>>>)
  (DeclStmt 0x92351a8 <line:99:7, col:62>
    0x92350e0 "const char_type __conv =
      (CallExpr 0x9235188 <col:32, col:61> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9235138 <col:32, col:45> '<dependent type>' lvalue)
        (DeclRefExpr 0x923516c <col:58> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9234360 '__c' 'int_type':'typename traits_type::int_type'))")
  (IfStmt 0x9235d58 <line:100:7, line:124:18>
    <<<NULL>>>
    (UnaryOperator 0x92351e0 <line:100:11, col:12> '_Bool' prefix '!'
      (ImplicitCastExpr 0x92351d0 <col:12> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x92351b8 <col:12> 'const _Bool' lvalue Var 0x9234d40 '__testput' 'const _Bool')))
    (CompoundStmt 0x9235c78 <line:101:2, line:122:2>
      (DeclStmt 0x9235368 <line:111:4, line:112:25>
        0x9235200 "const __size_type __opt_len =
          (CallExpr 0x9235340 <line:111:34, line:112:24> '<dependent type>'
            (UnresolvedLookupExpr 0x9235258 <line:111:34, col:39> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e79fe0 0x8e7a750)
            (CXXUnresolvedConstructExpr 0x92352e0 <col:43, col:69> '__size_type':'typename __string_type::size_type'
              (BinaryOperator 0x92352c8 <col:55, col:59> '<dependent type>' '*'
                (IntegerLiteral 0x9235298 <col:55> 'int' 2)
                (DeclRefExpr 0x92352b0 <col:59> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9234b80 '__capacity' 'const __size_type':'const typename __string_type::size_type')))
            (CXXUnresolvedConstructExpr 0x9235320 <line:112:8, col:23> '__size_type':'typename __string_type::size_type'
              (IntegerLiteral 0x9235308 <col:20> 'int' 512)))")
      (DeclStmt 0x9235460 <line:113:4, col:61>
        0x9235380 "const __size_type __len =
          (CallExpr 0x9235438 <col:30, col:60> '<dependent type>'
            (UnresolvedLookupExpr 0x92353d0 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e798b0 0x8e7a3c0)
            (DeclRefExpr 0x9235408 <col:39> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9235200 '__opt_len' 'const __size_type':'const typename __string_type::size_type')
            (DeclRefExpr 0x9235420 <col:50> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9234c60 '__max_size' 'const __size_type':'const typename __string_type::size_type'))")
      (DeclStmt 0x92354b8 <line:114:4, col:23>
        0x9235480 "__string_type __tmp")
      (CallExpr 0x9235530 <line:115:4, col:23> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92354e0 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x92354c8 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9235480 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9235514 <col:18> 'const __size_type':'const typename __string_type::size_type' lvalue Var 0x9235380 '__len' 'const __size_type':'const typename __string_type::size_type'))
      (IfStmt 0x92357c8 <line:116:4, line:117:63>
        <<<NULL>>>
        (CallExpr 0x9235598 <line:116:8, col:20> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9235560 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9235550 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x92357a0 <line:117:6, col:63> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92355d0 <col:6, col:12> '<dependent type>' lvalue
            (DeclRefExpr 0x92355b4 <col:6> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9235480 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
          (CallExpr 0x9235650 <col:19, col:31> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235618 <col:19, col:25> '<dependent type>' lvalue
              (CXXThisExpr 0x9235608 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x9235778 <col:34, col:62> '<dependent type>'
            (UnresolvedLookupExpr 0x9235740 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
            (CallExpr 0x92356b8 <col:34, col:46> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x9235680 <col:34, col:40> '<dependent type>' lvalue
                (CXXThisExpr 0x9235670 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x9235720 <col:50, col:62> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x92356e8 <col:50, col:56> '<dependent type>' lvalue
                (CXXThisExpr 0x92356d8 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        <<<NULL>>>)
      (CallExpr 0x9235850 <line:118:4, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9235800 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x92357e4 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9235480 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
        (DeclRefExpr 0x9235834 <col:20> 'const char_type':'const _CharT' lvalue Var 0x92350e0 '__conv' 'const char_type':'const _CharT'))
      (CallExpr 0x92358f0 <line:119:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92358a0 <col:4, col:14> '<dependent type>' lvalue
          (MemberExpr 0x9235880 <col:4> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x9235870 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (DeclRefExpr 0x92358d4 <col:19> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue Var 0x9235480 '__tmp' '__string_type':'basic_string<char_type, _Traits, _Alloc>'))
      (CallExpr 0x9235c50 <line:120:4, line:121:63> '<dependent type>'
        (MemberExpr 0x9235920 <line:120:4> '<bound member function type>' ->_M_sync 0x9227ff0
          (CXXThisExpr 0x9235910 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (CXXConstCastExpr 0x92359d8 <col:12, col:51> 'char_type *' const_cast<char_type *> <NoOp>
          (CallExpr 0x92359a8 <col:35, col:50> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235970 <col:35, col:45> '<dependent type>' lvalue
              (MemberExpr 0x9235950 <col:35> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
                (CXXThisExpr 0x9235940 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
        (CXXOperatorCallExpr 0x9235af8 <line:121:5, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x9235ac0 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x9235a38 <col:5, col:16> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235a00 <col:5, col:11> '<dependent type>' lvalue
              (CXXThisExpr 0x92359f0 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9235aa0 <col:20, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235a68 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9235a58 <col:20> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (CXXOperatorCallExpr 0x9235c28 <col:35, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x9235bf0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x9235b68 <col:35, col:46> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235b30 <col:35, col:41> '<dependent type>' lvalue
              (CXXThisExpr 0x9235b20 <col:35> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9235bd0 <col:50, col:62> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9235b98 <col:50, col:56> '<dependent type>' lvalue
              (CXXThisExpr 0x9235b88 <col:50> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
    (BinaryOperator 0x9235d40 <line:124:2, col:18> '<dependent type>' '='
      (UnaryOperator 0x9235d10 <col:2, col:14> '<dependent type>' prefix '*'
        (CallExpr 0x9235cf0 <col:3, col:14> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9235cb8 <col:3, col:9> '<dependent type>' lvalue
            (CXXThisExpr 0x9235ca8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
      (DeclRefExpr 0x9235d24 <col:18> 'const char_type':'const _CharT' lvalue Var 0x92350e0 '__conv' 'const char_type':'const _CharT')))
  (CallExpr 0x9235dd8 <line:125:7, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9235d88 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x9235d78 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (IntegerLiteral 0x9235dc0 <col:19> 'int' 1))
  (ReturnStmt 0x9235e10 <line:126:7, col:14>
    (DeclRefExpr 0x9235df8 <col:14> 'int_type':'typename traits_type::int_type' lvalue ParmVar 0x9234360 '__c' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::int_type underflow() (CompoundStmt 0x923a088 </usr/include/c++/4.6/bits/sstream.tcc:133:5, line:145:5>
  (DeclStmt 0x9239bd0 <line:134:7, col:42>
    0x9239b20 "int_type __ret =
      (CallExpr 0x9239bb0 <col:24, col:41> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9239b78 <col:24, col:37> '<dependent type>' lvalue))")
  (DeclStmt 0x9239d18 <line:135:7, col:57>
    0x9239bf0 "const bool __testin =
      (CXXOperatorCallExpr 0x9239cf0 <col:29, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9239cb0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (CXXDependentScopeMemberExpr 0x9239c38 <col:29, col:35> '<dependent type>' lvalue
          (CXXThisExpr 0x9239c28 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x9239c8c <col:45, col:55> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (IfStmt 0x923a040 <line:136:7, line:143:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x9239d40 <line:136:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9239d28 <col:11> 'const _Bool' lvalue Var 0x9239bf0 '__testin' 'const _Bool'))
    (CompoundStmt 0x923a028 <line:137:2, line:143:2>
      (CallExpr 0x9239d80 <line:139:4, col:20> '<dependent type>'
        (MemberExpr 0x9239d60 <col:4> '<bound member function type>' ->_M_update_egptr 0x9228080
          (CXXThisExpr 0x9239d50 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (IfStmt 0x923a008 <line:141:4, line:142:52>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9239eb8 <line:141:8, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x9239e70 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
          (CallExpr 0x9239de8 <col:8, col:19> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9239db0 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x9239da0 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
          (CallExpr 0x9239e50 <col:23, col:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9239e18 <col:23, col:29> '<dependent type>' lvalue
              (CXXThisExpr 0x9239e08 <col:23> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
        (BinaryOperator 0x9239ff0 <line:142:6, col:52> '<dependent type>' '='
          (DeclRefExpr 0x9239edc <col:6> 'int_type':'typename traits_type::int_type' lvalue Var 0x9239b20 '__ret' 'int_type':'typename traits_type::int_type')
          (CallExpr 0x9239fd0 <col:14, col:52> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9239f18 <col:14, col:27> '<dependent type>' lvalue)
            (UnaryOperator 0x9239fb8 <col:39, col:51> '<dependent type>' prefix '*'
              (CallExpr 0x9239f98 <col:40, col:51> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x9239f60 <col:40, col:46> '<dependent type>' lvalue
                  (CXXThisExpr 0x9239f50 <col:40> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x923a078 <line:144:7, col:14>
    (DeclRefExpr 0x923a05c <col:14> 'int_type':'typename traits_type::int_type' lvalue Var 0x9239b20 '__ret' 'int_type':'typename traits_type::int_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228628 </usr/include/c++/4.6/sstream:217:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228618 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x9228600 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x92285e0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922857c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x92285f0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92285bc <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x923c758 </usr/include/c++/4.6/bits/sstream.tcc:151:5, line:193:5>
  (DeclStmt 0x923a9d8 <line:152:7, col:47>
    0x923a920 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x923a9b8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x923a998 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x923a980 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x923a968 <col:44> 'int' 1))))")
  (DeclStmt 0x923ac50 <line:153:7, col:67>
    0x923a9f0 "bool __testin =
      (CXXOperatorCallExpr 0x923ac28 <col:23, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x923abd0 <col:63, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
        (ParenExpr 0x923aba0 <col:23, col:61> '<dependent type>'
          (CXXOperatorCallExpr 0x923ab78 <col:24, col:55> '<dependent type>'
            (UnresolvedLookupExpr 0x923ab38 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
            (CXXOperatorCallExpr 0x923aaf8 <col:24, col:45> '<dependent type>'
              (UnresolvedLookupExpr 0x923aab8 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
              (DeclRefExpr 0x923aa50 <col:24, col:34> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x923aa80 <col:39, col:45> '<dependent type>' lvalue
                (CXXThisExpr 0x923aa70 <col:39> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x923ab1c <col:55> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923a680 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x923abb8 <col:66> 'int' 0))")
  (DeclStmt 0x923aed0 <line:154:7, col:69>
    0x923ac70 "bool __testout =
      (CXXOperatorCallExpr 0x923aea8 <col:24, col:68> '<dependent type>'
        (UnresolvedLookupExpr 0x923ae50 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
        (ParenExpr 0x923ae20 <col:24, col:63> '<dependent type>'
          (CXXOperatorCallExpr 0x923adf8 <col:25, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x923adb8 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
            (CXXOperatorCallExpr 0x923ad78 <col:25, col:47> '<dependent type>'
              (UnresolvedLookupExpr 0x923ad38 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
              (DeclRefExpr 0x923acd0 <col:25, col:35> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x923ad00 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x923acf0 <col:41> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x923ad9c <col:57> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923a680 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x923ae38 <col:68> 'int' 0))")
  (DeclStmt 0x923b090 <line:155:7, col:78>
    0x923aef0 "const bool __testboth =
      (BinaryOperator 0x923b040 <col:31, col:75> '_Bool' '&&'
        (BinaryOperator 0x923af78 <col:31, col:43> '_Bool' '&&'
          (ImplicitCastExpr 0x923af58 <col:31> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923af24 <col:31> '_Bool' lvalue Var 0x923a9f0 '__testin' '_Bool'))
          (ImplicitCastExpr 0x923af68 <col:43> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923af3c <col:43> '_Bool' lvalue Var 0x923ac70 '__testout' '_Bool')))
        (BinaryOperator 0x923b028 <col:56, col:75> '_Bool' '!='
          (ImplicitCastExpr 0x923b008 <col:56> 'int' <IntegralCast>
            (ImplicitCastExpr 0x923afe8 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x923af90 <col:56> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x923a610 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x923b018 <col:65, col:75> 'int' <IntegralCast>
            (ImplicitCastExpr 0x923aff8 <col:65, col:75> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x923afc4 <col:65, col:75> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x90abeb0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir')))))")
  (CompoundAssignOperator 0x923b1d0 <line:156:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x923b0a0 <col:7> '_Bool' lvalue Var 0x923a9f0 '__testin' '_Bool')
    (ImplicitCastExpr 0x923b1c0 <col:19, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x923b1a8 <col:19, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x923b198 <col:20, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x923b180 <col:20, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x923b158 <col:21, col:40> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x923b148 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x923b130 <col:28, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3ae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x923b110 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x923b0b8 <col:21> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923a680 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x923b120 <col:30, col:40> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x923b0ec <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (CompoundAssignOperator 0x923b320 <line:157:7, col:43> '_Bool' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
    (DeclRefExpr 0x923b1f0 <col:7> '_Bool' lvalue Var 0x923ac70 '__testout' '_Bool')
    (ImplicitCastExpr 0x923b310 <col:20, col:43> 'int' <IntegralCast>
      (UnaryOperator 0x923b2f8 <col:20, col:43> '_Bool' prefix '!'
        (ImplicitCastExpr 0x923b2e8 <col:21, col:43> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x923b2d0 <col:21, col:43> 'enum std::_Ios_Openmode'
            (CXXOperatorCallExpr 0x923b2a8 <col:22, col:41> 'enum std::_Ios_Openmode'
              (ImplicitCastExpr 0x923b298 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
                (DeclRefExpr 0x923b280 <col:29, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3ae0 'operator&' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
              (ImplicitCastExpr 0x923b260 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x923b208 <col:22> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923a680 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode'))
              (ImplicitCastExpr 0x923b270 <col:31, col:41> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
                (DeclRefExpr 0x923b23c <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))))))))
  (DeclStmt 0x923b4c0 <line:161:7, col:72>
    0x923b370 "const char_type *__beg =
      (ConditionalOperator 0x923b4a0 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x923b490 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x923b3a4 <col:32> '_Bool' lvalue Var 0x923a9f0 '__testin' '_Bool'))
        (CallExpr 0x923b408 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923b3d0 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x923b3c0 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x923b470 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923b438 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x923b428 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x923c710 <line:162:7, line:191:2>
    <<<NULL>>>
    (BinaryOperator 0x923b608 <line:162:11, col:68> '<dependent type>' '&&'
      (ParenExpr 0x923b530 <col:11, col:27> '<dependent type>'
        (BinaryOperator 0x923b518 <col:12, col:22> '<dependent type>' '||'
          (DeclRefExpr 0x923b4d0 <col:12> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *')
          (UnaryOperator 0x923b500 <col:21, col:22> '<dependent type>' prefix '!'
            (DeclRefExpr 0x923b4e8 <col:22> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x923a5a0 '__off' 'off_type':'typename traits_type::off_type'))))
      (ParenExpr 0x923b5f0 <col:32, col:68> '_Bool'
        (BinaryOperator 0x923b5d8 <col:33, col:58> '_Bool' '||'
          (BinaryOperator 0x923b598 <col:33, col:45> '_Bool' '||'
            (ImplicitCastExpr 0x923b578 <col:33> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x923b544 <col:33> '_Bool' lvalue Var 0x923a9f0 '__testin' '_Bool'))
            (ImplicitCastExpr 0x923b588 <col:45> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x923b55c <col:45> '_Bool' lvalue Var 0x923ac70 '__testout' '_Bool')))
          (ImplicitCastExpr 0x923b5c8 <col:58> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923b5b0 <col:58> 'const _Bool' lvalue Var 0x923aef0 '__testboth' 'const _Bool')))))
    (CompoundStmt 0x923c6e8 <line:163:2, line:191:2>
      (CallExpr 0x923b650 <line:164:4, col:20> '<dependent type>'
        (MemberExpr 0x923b630 <col:4> '<bound member function type>' ->_M_update_egptr 0x9228080
          (CXXThisExpr 0x923b620 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x923b6d0 <line:166:4, col:30>
        0x923b680 "off_type __newoffi =
          (DeclRefExpr 0x923b6b4 <col:25> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x923a5a0 '__off' 'off_type':'typename traits_type::off_type')")
      (DeclStmt 0x923b740 <line:167:4, col:34>
        0x923b6f0 "off_type __newoffo =
          (DeclRefExpr 0x923b724 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type')")
      (IfStmt 0x923bc98 <line:168:4, line:174:47>
        <<<NULL>>>
        (BinaryOperator 0x923b7e8 <line:168:8, col:27> '_Bool' '=='
          (ImplicitCastExpr 0x923b7c8 <col:8> 'int' <IntegralCast>
            (ImplicitCastExpr 0x923b7a8 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x923b750 <col:8> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x923a610 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
          (ImplicitCastExpr 0x923b7d8 <col:17, col:27> 'int' <IntegralCast>
            (ImplicitCastExpr 0x923b7b8 <col:17, col:27> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
              (DeclRefExpr 0x923b784 <col:17, col:27> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x90abeb0 'cur' 'const seekdir':'const enum std::_Ios_Seekdir'))))
        (CompoundStmt 0x923ba30 <line:169:6, line:172:6>
          (CompoundAssignOperator 0x923b8f8 <line:170:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x923b800 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x923b8d0 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x923b898 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (CallExpr 0x923b860 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923b828 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x923b818 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923b87c <col:36> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *')))
          (CompoundAssignOperator 0x923ba10 <line:171:8, col:36> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (DeclRefExpr 0x923b918 <col:8> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CXXOperatorCallExpr 0x923b9e8 <col:21, col:36> '<dependent type>'
              (UnresolvedLookupExpr 0x923b9b0 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (CallExpr 0x923b978 <col:21, col:32> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923b940 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x923b930 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923b994 <col:36> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *'))))
        (IfStmt 0x923bc78 <line:173:9, line:174:47>
          <<<NULL>>>
          (BinaryOperator 0x923bae0 <line:173:13, col:32> '_Bool' '=='
            (ImplicitCastExpr 0x923bac0 <col:13> 'int' <IntegralCast>
              (ImplicitCastExpr 0x923baa0 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x923ba48 <col:13> 'class ios_base::seekdir':'enum std::_Ios_Seekdir' lvalue ParmVar 0x923a610 '__way' 'class ios_base::seekdir':'enum std::_Ios_Seekdir')))
            (ImplicitCastExpr 0x923bad0 <col:22, col:32> 'int' <IntegralCast>
              (ImplicitCastExpr 0x923bab0 <col:22, col:32> 'seekdir':'enum std::_Ios_Seekdir' <LValueToRValue>
                (DeclRefExpr 0x923ba7c <col:22, col:32> 'const seekdir':'const enum std::_Ios_Seekdir' lvalue Var 0x90abf10 'end' 'const seekdir':'const enum std::_Ios_Seekdir'))))
          (BinaryOperator 0x923bc60 <line:174:6, col:47> '<dependent type>' '='
            (DeclRefExpr 0x923bb2c <col:6> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type')
            (CompoundAssignOperator 0x923bc40 <col:18, col:47> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
              (DeclRefExpr 0x923bb44 <col:18> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type')
              (CXXOperatorCallExpr 0x923bc18 <col:31, col:47> '<dependent type>'
                (UnresolvedLookupExpr 0x923bbe0 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                (CallExpr 0x923bba8 <col:31, col:43> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x923bb70 <col:31, col:37> '<dependent type>' lvalue
                    (CXXThisExpr 0x923bb60 <col:31> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x923bbc4 <col:47> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *'))))
          <<<NULL>>>))
      (IfStmt 0x923c228 <line:176:4, line:183:6>
        <<<NULL>>>
        (BinaryOperator 0x923bf58 <line:176:8, line:178:36> '<dependent type>' '&&'
          (BinaryOperator 0x923bdd8 <line:176:8, line:177:24> '<dependent type>' '&&'
            (ParenExpr 0x923bd20 <line:176:8, col:31> '_Bool'
              (BinaryOperator 0x923bd08 <col:9, col:21> '_Bool' '||'
                (ImplicitCastExpr 0x923bce8 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x923bcb4 <col:9> '_Bool' lvalue Var 0x923a9f0 '__testin' '_Bool'))
                (ImplicitCastExpr 0x923bcf8 <col:21> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x923bccc <col:21> 'const _Bool' lvalue Var 0x923aef0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x923bdb0 <line:177:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x923bd68 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
              (DeclRefExpr 0x923bd34 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x923bd50 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x923bf30 <line:178:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x923bee8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
            (CXXOperatorCallExpr 0x923bea8 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x923be70 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (CallExpr 0x923be38 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923be00 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x923bdf0 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923be54 <col:27> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *'))
            (DeclRefExpr 0x923becc <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x923c210 <line:179:6, line:183:6>
          (CallExpr 0x923c178 <line:180:8, line:181:18> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x923bf80 <line:180:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x923bf70 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x923c000 <col:19, col:31> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x923bfc8 <col:19, col:25> '<dependent type>' lvalue
                (CXXThisExpr 0x923bfb8 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x923c0e8 <col:34, col:50> '<dependent type>'
              (UnresolvedLookupExpr 0x923c0a0 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
              (CallExpr 0x923c068 <col:34, col:46> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923c030 <col:34, col:40> '<dependent type>' lvalue
                  (CXXThisExpr 0x923c020 <col:34> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923c084 <col:50> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type'))
            (CallExpr 0x923c158 <line:181:5, col:17> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x923c120 <col:5, col:11> '<dependent type>' lvalue
                (CXXThisExpr 0x923c110 <col:5> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
          (BinaryOperator 0x923c1f8 <line:182:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x923c1a0 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x923a920 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x923c1d8 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x923c1c0 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b680 '__newoffi' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>)
      (IfStmt 0x923c6c8 <line:184:4, line:190:6>
        <<<NULL>>>
        (BinaryOperator 0x923c4e8 <line:184:8, line:186:36> '<dependent type>' '&&'
          (BinaryOperator 0x923c368 <line:184:8, line:185:24> '<dependent type>' '&&'
            (ParenExpr 0x923c2b0 <line:184:8, col:32> '_Bool'
              (BinaryOperator 0x923c298 <col:9, col:22> '_Bool' '||'
                (ImplicitCastExpr 0x923c278 <col:9> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x923c244 <col:9> '_Bool' lvalue Var 0x923ac70 '__testout' '_Bool'))
                (ImplicitCastExpr 0x923c288 <col:22> '_Bool' <LValueToRValue>
                  (DeclRefExpr 0x923c25c <col:22> 'const _Bool' lvalue Var 0x923aef0 '__testboth' 'const _Bool'))))
            (CXXOperatorCallExpr 0x923c340 <line:185:11, col:24> '<dependent type>'
              (UnresolvedLookupExpr 0x923c2f8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
              (DeclRefExpr 0x923c2c4 <col:11> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type')
              (IntegerLiteral 0x923c2e0 <col:24> 'int' 0)))
          (CXXOperatorCallExpr 0x923c4c0 <line:186:11, col:36> '<dependent type>'
            (UnresolvedLookupExpr 0x923c478 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
            (CXXOperatorCallExpr 0x923c438 <col:11, col:27> '<dependent type>'
              (UnresolvedLookupExpr 0x923c400 <col:25, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
              (CallExpr 0x923c3c8 <col:11, col:23> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923c390 <col:11, col:17> '<dependent type>' lvalue
                  (CXXThisExpr 0x923c380 <col:11> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923c3e4 <col:27> 'const char_type *' lvalue Var 0x923b370 '__beg' 'const char_type *'))
            (DeclRefExpr 0x923c45c <col:36> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type')))
        (CompoundStmt 0x923c6b0 <line:187:6, line:190:6>
          (CallExpr 0x923c618 <line:188:8, col:56> '<dependent type>'
            (MemberExpr 0x923c510 <col:8> '<bound member function type>' ->_M_pbump 0x9228240
              (CXXThisExpr 0x923c500 <col:8> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
            (CallExpr 0x923c578 <col:17, col:29> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x923c540 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x923c530 <col:17> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (CallExpr 0x923c5e0 <col:32, col:44> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x923c5a8 <col:32, col:38> '<dependent type>' lvalue
                (CXXThisExpr 0x923c598 <col:32> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x923c5fc <col:47> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type'))
          (BinaryOperator 0x923c698 <line:189:8, col:34> '<dependent type>' '='
            (DeclRefExpr 0x923c640 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x923a920 '__ret' 'pos_type':'typename traits_type::pos_type')
            (CXXUnresolvedConstructExpr 0x923c678 <col:16, col:34> 'pos_type':'typename traits_type::pos_type'
              (DeclRefExpr 0x923c660 <col:25> 'off_type':'typename traits_type::off_type' lvalue Var 0x923b6f0 '__newoffo' 'off_type':'typename traits_type::off_type'))))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x923c748 <line:192:7, col:14>
    (DeclRefExpr 0x923c72c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x923a920 '__ret' 'pos_type':'typename traits_type::pos_type')))


    typename basic_stringbuf<_CharT, _Traits, _Alloc>::pos_type seekpos(pos_type __sp, ios_base::openmode __mode = (CXXOperatorCallExpr 0x9228718 </usr/include/c++/4.6/sstream:221:36, col:61> 'enum std::_Ios_Openmode'
  (ImplicitCastExpr 0x9228708 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (*)(enum std::_Ios_Openmode, enum std::_Ios_Openmode)' <FunctionToPointerDecay>
    (DeclRefExpr 0x92286f0 <col:49, <invalid sloc>> 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)' lvalue Function 0x90b3d10 'operator|' 'enum std::_Ios_Openmode (enum std::_Ios_Openmode, enum std::_Ios_Openmode)'))
  (ImplicitCastExpr 0x92286d0 <col:36, col:46> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x922866c <col:36, col:46> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))
  (ImplicitCastExpr 0x92286e0 <col:51, col:61> 'openmode':'enum std::_Ios_Openmode' <LValueToRValue>
    (DeclRefExpr 0x92286ac <col:51, col:61> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')))
) (CompoundStmt 0x923e048 </usr/include/c++/4.6/bits/sstream.tcc:199:5, line:223:5>
  (DeclStmt 0x923d018 <line:200:7, col:47>
    0x923cf60 "pos_type __ret =
      (CXXUnresolvedConstructExpr 0x923cff8 <col:25, col:46> 'pos_type':'typename traits_type::pos_type'
        (CXXUnresolvedConstructExpr 0x923cfd8 <col:34, col:45> 'off_type':'typename traits_type::off_type'
          (UnaryOperator 0x923cfc0 <col:43, col:44> 'int' prefix '-'
            (IntegerLiteral 0x923cfa8 <col:44> 'int' 1))))")
  (DeclStmt 0x923d290 <line:201:7, col:73>
    0x923d030 "const bool __testin =
      (CXXOperatorCallExpr 0x923d268 <col:29, col:72> '<dependent type>'
        (UnresolvedLookupExpr 0x923d210 <col:69, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
        (ParenExpr 0x923d1e0 <col:29, col:67> '<dependent type>'
          (CXXOperatorCallExpr 0x923d1b8 <col:30, col:61> '<dependent type>'
            (UnresolvedLookupExpr 0x923d178 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
            (CXXOperatorCallExpr 0x923d138 <col:30, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x923d0f8 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
              (DeclRefExpr 0x923d090 <col:30, col:40> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x923d0c0 <col:45, col:51> '<dependent type>' lvalue
                (CXXThisExpr 0x923d0b0 <col:45> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x923d15c <col:61> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923ccd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x923d1f8 <col:72> 'int' 0))")
  (DeclStmt 0x923d510 <line:202:7, col:75>
    0x923d2b0 "const bool __testout =
      (CXXOperatorCallExpr 0x923d4e8 <col:30, col:74> '<dependent type>'
        (UnresolvedLookupExpr 0x923d490 <col:71, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
        (ParenExpr 0x923d460 <col:30, col:69> '<dependent type>'
          (CXXOperatorCallExpr 0x923d438 <col:31, col:63> '<dependent type>'
            (UnresolvedLookupExpr 0x923d3f8 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
            (CXXOperatorCallExpr 0x923d3b8 <col:31, col:53> '<dependent type>'
              (UnresolvedLookupExpr 0x923d378 <col:45, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
              (DeclRefExpr 0x923d310 <col:31, col:41> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode')
              (CXXDependentScopeMemberExpr 0x923d340 <col:47, col:53> '<dependent type>' lvalue
                (CXXThisExpr 0x923d330 <col:47> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
            (DeclRefExpr 0x923d3dc <col:63> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ParmVar 0x923ccd0 '__mode' 'class ios_base::openmode':'enum std::_Ios_Openmode')))
        (IntegerLiteral 0x923d478 <col:74> 'int' 0))")
  (DeclStmt 0x923d680 <line:204:7, col:72>
    0x923d530 "const char_type *__beg =
      (ConditionalOperator 0x923d660 <col:32, col:71> '<dependent type>'
        (ImplicitCastExpr 0x923d650 <col:32> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x923d564 <col:32> 'const _Bool' lvalue Var 0x923d030 '__testin' 'const _Bool'))
        (CallExpr 0x923d5c8 <col:43, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923d590 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x923d580 <col:43> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
        (CallExpr 0x923d630 <col:59, col:71> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923d5f8 <col:59, col:65> '<dependent type>' lvalue
            (CXXThisExpr 0x923d5e8 <col:59> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))")
  (IfStmt 0x923e000 <line:205:7, line:221:2>
    <<<NULL>>>
    (BinaryOperator 0x923d7b0 <line:205:11, col:63> '<dependent type>' '&&'
      (ParenExpr 0x923d718 <col:11, col:36> '<dependent type>'
        (BinaryOperator 0x923d700 <col:12, col:35> '<dependent type>' '||'
          (DeclRefExpr 0x923d690 <col:12> 'const char_type *' lvalue Var 0x923d530 '__beg' 'const char_type *')
          (UnaryOperator 0x923d6e8 <col:21, col:35> '<dependent type>' prefix '!'
            (CXXUnresolvedConstructExpr 0x923d6c8 <col:22, col:35> 'off_type':'typename traits_type::off_type'
              (DeclRefExpr 0x923d6b0 <col:31> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x923cc60 '__sp' 'pos_type':'typename traits_type::pos_type')))))
      (ParenExpr 0x923d798 <col:41, col:63> '_Bool'
        (BinaryOperator 0x923d780 <col:42, col:54> '_Bool' '||'
          (ImplicitCastExpr 0x923d760 <col:42> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923d72c <col:42> 'const _Bool' lvalue Var 0x923d030 '__testin' 'const _Bool'))
          (ImplicitCastExpr 0x923d770 <col:54> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923d744 <col:54> 'const _Bool' lvalue Var 0x923d2b0 '__testout' 'const _Bool')))))
    (CompoundStmt 0x923dfe0 <line:206:2, line:221:2>
      (CallExpr 0x923d7f8 <line:207:4, col:20> '<dependent type>'
        (MemberExpr 0x923d7d8 <col:4> '<bound member function type>' ->_M_update_egptr 0x9228080
          (CXXThisExpr 0x923d7c8 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
      (DeclStmt 0x923d890 <line:209:4, col:30>
        0x923d820 "const off_type __pos =
          (ParenListExpr 0x923d870 <col:24, col:29> 'const off_type':'const typename traits_type::off_type'
            (DeclRefExpr 0x923d854 <col:25> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x923cc60 '__sp' 'pos_type':'typename traits_type::pos_type'))")
      (DeclStmt 0x923db20 <line:210:4, line:211:41>
        0x923d8b0 "const bool __testpos =
          (ParenExpr 0x923db08 <line:210:27, line:211:40> '<dependent type>'
            (BinaryOperator 0x923daf0 <line:210:28, line:211:35> '<dependent type>' '&&'
              (CXXOperatorCallExpr 0x923d960 <line:210:28, col:33> '<dependent type>'
                (UnresolvedLookupExpr 0x923d918 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
                (IntegerLiteral 0x923d8e8 <col:28> 'int' 0)
                (DeclRefExpr 0x923d900 <col:33> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x923d820 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CXXOperatorCallExpr 0x923dac8 <line:211:10, col:35> '<dependent type>'
                (UnresolvedLookupExpr 0x923da80 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e458a0 0x8e5bac0 0x8e5e8c0 0x8ff9570 0x8ff9aa0 0x8ff9fd0)
                (DeclRefExpr 0x923d984 <col:10> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x923d820 '__pos' 'const off_type':'const typename traits_type::off_type')
                (CXXOperatorCallExpr 0x923da58 <col:19, col:35> '<dependent type>'
                  (UnresolvedLookupExpr 0x923da20 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
                  (CallExpr 0x923d9e8 <col:19, col:31> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x923d9b0 <col:19, col:25> '<dependent type>' lvalue
                      (CXXThisExpr 0x923d9a0 <col:19> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                  (DeclRefExpr 0x923da04 <col:35> 'const char_type *' lvalue Var 0x923d530 '__beg' 'const char_type *')))))")
      (IfStmt 0x923dfc0 <line:212:4, line:220:6>
        <<<NULL>>>
        (ImplicitCastExpr 0x923db48 <line:212:8> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x923db30 <col:8> 'const _Bool' lvalue Var 0x923d8b0 '__testpos' 'const _Bool'))
        (CompoundStmt 0x923dfa0 <line:213:6, line:220:6>
          (IfStmt 0x923ddb0 <line:214:8, line:216:20>
            <<<NULL>>>
            (ImplicitCastExpr 0x923db70 <line:214:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x923db54 <col:12> 'const _Bool' lvalue Var 0x923d030 '__testin' 'const _Bool'))
            (CallExpr 0x923dd88 <line:215:3, line:216:20> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x923db90 <line:215:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x923db80 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x923dc10 <col:14, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923dbd8 <col:14, col:20> '<dependent type>' lvalue
                  (CXXThisExpr 0x923dbc8 <col:14> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x923dcf8 <col:29, col:45> '<dependent type>'
                (UnresolvedLookupExpr 0x923dcb0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
                (CallExpr 0x923dc78 <col:29, col:41> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x923dc40 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x923dc30 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
                (DeclRefExpr 0x923dc94 <col:45> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x923d820 '__pos' 'const off_type':'const typename traits_type::off_type'))
              (CallExpr 0x923dd68 <line:216:7, col:19> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923dd30 <col:7, col:13> '<dependent type>' lvalue
                  (CXXThisExpr 0x923dd20 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))))
            <<<NULL>>>)
          (IfStmt 0x923df38 <line:217:8, line:218:47>
            <<<NULL>>>
            (ImplicitCastExpr 0x923dde8 <line:217:12> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x923ddcc <col:12> 'const _Bool' lvalue Var 0x923d2b0 '__testout' 'const _Bool'))
            (CallExpr 0x923df10 <line:218:3, col:47> '<dependent type>'
              (MemberExpr 0x923de08 <col:3> '<bound member function type>' ->_M_pbump 0x9228240
                (CXXThisExpr 0x923ddf8 <col:3> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
              (CallExpr 0x923de70 <col:12, col:24> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923de38 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x923de28 <col:12> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (CallExpr 0x923ded8 <col:27, col:39> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x923dea0 <col:27, col:33> '<dependent type>' lvalue
                  (CXXThisExpr 0x923de90 <col:27> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))
              (DeclRefExpr 0x923def4 <col:42> 'const off_type':'const typename traits_type::off_type' lvalue Var 0x923d820 '__pos' 'const off_type':'const typename traits_type::off_type'))
            <<<NULL>>>)
          (BinaryOperator 0x923df88 <line:219:8, col:16> '<dependent type>' '='
            (DeclRefExpr 0x923df54 <col:8> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x923cf60 '__ret' 'pos_type':'typename traits_type::pos_type')
            (DeclRefExpr 0x923df6c <col:16> 'pos_type':'typename traits_type::pos_type' lvalue ParmVar 0x923cc60 '__sp' 'pos_type':'typename traits_type::pos_type')))
        <<<NULL>>>))
    <<<NULL>>>)
  (ReturnStmt 0x923e038 <line:222:7, col:14>
    (DeclRefExpr 0x923e01c <col:14> 'pos_type':'typename traits_type::pos_type' lvalue Var 0x923cf60 '__ret' 'pos_type':'typename traits_type::pos_type')))


    void _M_sync(char_type *__base, __size_type __i, __size_type __o) (CompoundStmt 0x923f078 </usr/include/c++/4.6/bits/sstream.tcc:229:5, line:254:5>
  (DeclStmt 0x923e688 <line:230:7, col:51>
    0x923e580 "const bool __testin =
      (CXXOperatorCallExpr 0x923e660 <col:29, col:49> '<dependent type>'
        (UnresolvedLookupExpr 0x923e628 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b3ae0)
        (MemberExpr 0x923e5c8 <col:29> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
          (CXXThisExpr 0x923e5b8 <col:29> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x923e604 <col:39, col:49> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abce0 'in' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x923e7a8 <line:231:7, col:53>
    0x923e6a0 "const bool __testout =
      (CXXOperatorCallExpr 0x923e780 <col:30, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x923e748 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90b3ae0)
        (MemberExpr 0x923e6e8 <col:30> 'class ios_base::openmode':'enum std::_Ios_Openmode' lvalue ->_M_mode 0x9226fd0
          (CXXThisExpr 0x923e6d8 <col:30> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x923e724 <col:40, col:50> 'const openmode':'const enum std::_Ios_Openmode' lvalue Var 0x90abd40 'out' 'const openmode':'const enum std::_Ios_Openmode'))")
  (DeclStmt 0x923e918 <line:232:7, col:52>
    0x923e7d0 "char_type *__endg =
      (CXXOperatorCallExpr 0x923e8f0 <col:27, col:51> '<dependent type>'
        (UnresolvedLookupExpr 0x923e8a8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x923e804 <col:27> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
        (CallExpr 0x923e888 <col:36, col:51> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923e850 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x923e830 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
              (CXXThisExpr 0x923e820 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (DeclStmt 0x923ea88 <line:233:7, col:56>
    0x923e940 "char_type *__endp =
      (CXXOperatorCallExpr 0x923ea60 <col:27, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x923ea18 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x923e974 <col:27> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
        (CallExpr 0x923e9f8 <col:36, col:55> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923e9c0 <col:36, col:46> '<dependent type>' lvalue
            (MemberExpr 0x923e9a0 <col:36> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
              (CXXThisExpr 0x923e990 <col:36> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))")
  (IfStmt 0x923ecb8 <line:235:7, line:241:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x923eb90 <line:235:11, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x923eb38 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (DeclRefExpr 0x923ea98 <col:11> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
      (CallExpr 0x923eb18 <col:21, col:36> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x923eae0 <col:21, col:31> '<dependent type>' lvalue
          (MemberExpr 0x923eac0 <col:21> '__string_type':'basic_string<char_type, _Traits, _Alloc>' lvalue ->_M_string 0x9227010
            (CXXThisExpr 0x923eab0 <col:21> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this)))))
    (CompoundStmt 0x923ec98 <line:236:2, line:241:2>
      (CompoundAssignOperator 0x923ebe8 <line:238:4, col:14> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x923ebb4 <col:4> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *')
        (DeclRefExpr 0x923ebcc <col:14> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x923e430 '__i' '__size_type':'typename __string_type::size_type'))
      (BinaryOperator 0x923ec38 <line:239:4, col:10> '<dependent type>' '='
        (DeclRefExpr 0x923ec08 <col:4> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x923e430 '__i' '__size_type':'typename __string_type::size_type')
        (IntegerLiteral 0x923ec20 <col:10> 'int' 0))
      (BinaryOperator 0x923ec80 <line:240:4, col:13> '<dependent type>' '='
        (DeclRefExpr 0x923ec50 <col:4> 'char_type *' lvalue Var 0x923e940 '__endp' 'char_type *')
        (DeclRefExpr 0x923ec68 <col:13> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *')))
    <<<NULL>>>)
  (IfStmt 0x923ee40 <line:243:7, line:244:41>
    <<<NULL>>>
    (ImplicitCastExpr 0x923ecf0 <line:243:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x923ecd4 <col:11> 'const _Bool' lvalue Var 0x923e580 '__testin' 'const _Bool'))
    (CallExpr 0x923ee18 <line:244:2, col:41> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x923ed10 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x923ed00 <col:2> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
      (DeclRefExpr 0x923ed44 <col:13> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
      (CXXOperatorCallExpr 0x923edd8 <col:21, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x923ed90 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (DeclRefExpr 0x923ed5c <col:21> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
        (DeclRefExpr 0x923ed74 <col:30> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x923e430 '__i' '__size_type':'typename __string_type::size_type'))
      (DeclRefExpr 0x923edfc <col:35> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *'))
    <<<NULL>>>)
  (IfStmt 0x923f058 <line:245:7, line:253:2>
    <<<NULL>>>
    (ImplicitCastExpr 0x923ee78 <line:245:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x923ee5c <col:11> 'const _Bool' lvalue Var 0x923e6a0 '__testout' 'const _Bool'))
    (CompoundStmt 0x923f040 <line:246:2, line:253:2>
      (CallExpr 0x923ef00 <line:247:4, col:32> '<dependent type>'
        (MemberExpr 0x923ee98 <col:4> '<bound member function type>' ->_M_pbump 0x9228240
          (CXXThisExpr 0x923ee88 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x923eeb8 <col:13> 'char_type *' lvalue ParmVar 0x923e3f0 '__base' 'char_type *')
        (DeclRefExpr 0x923eed0 <col:21> 'char_type *' lvalue Var 0x923e940 '__endp' 'char_type *')
        (DeclRefExpr 0x923eee8 <col:29> '__size_type':'typename __string_type::size_type' lvalue ParmVar 0x923e470 '__o' '__size_type':'typename __string_type::size_type'))
      (IfStmt 0x923f020 <line:251:4, line:252:39>
        <<<NULL>>>
        (UnaryOperator 0x923ef50 <line:251:8, col:9> '_Bool' prefix '!'
          (ImplicitCastExpr 0x923ef40 <col:9> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x923ef28 <col:9> 'const _Bool' lvalue Var 0x923e580 '__testin' 'const _Bool')))
        (CallExpr 0x923eff8 <line:252:6, col:39> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x923ef78 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x923ef68 <col:6> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
          (DeclRefExpr 0x923efac <col:17> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *')
          (DeclRefExpr 0x923efc4 <col:25> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *')
          (DeclRefExpr 0x923efdc <col:33> 'char_type *' lvalue Var 0x923e7d0 '__endg' 'char_type *'))
        <<<NULL>>>))
    <<<NULL>>>))


    void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off) (CompoundStmt 0x923fa60 </usr/include/c++/4.6/bits/sstream.tcc:260:5, line:268:5>
  (CallExpr 0x923f638 <line:261:7, col:32> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x923f5d0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x923f5c0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x923f604 <col:18> 'char_type *' lvalue ParmVar 0x923f430 '__pbeg' 'char_type *')
    (DeclRefExpr 0x923f61c <col:26> 'char_type *' lvalue ParmVar 0x923f480 '__pend' 'char_type *'))
  (WhileStmt 0x923f9c8 <line:262:7, line:266:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x923f778 <line:262:14, col:56> '<dependent type>'
      (UnresolvedLookupExpr 0x923f730 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
      (DeclRefExpr 0x923f65c <col:14> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x923f4c0 '__off' 'off_type':'typename traits_type::off_type')
      (DeclRefExpr 0x923f710 <col:22, col:56> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
    (CompoundStmt 0x923f9b0 <line:263:2, line:266:2>
      (CallExpr 0x923f8a0 <line:264:4, col:55> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x923f7b0 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x923f7a0 <col:4> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
        (DeclRefExpr 0x923f880 <col:16, col:50> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
      (CompoundAssignOperator 0x923f990 <line:265:4, col:47> '<dependent type>' lvalue '-=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (DeclRefExpr 0x923f8c0 <col:4> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x923f4c0 '__off' 'off_type':'typename traits_type::off_type')
        (DeclRefExpr 0x923f970 <col:13, col:47> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))))
  (CallExpr 0x923fa40 <line:267:7, col:24> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x923f9f0 <col:7, col:13> '<dependent type>' lvalue
      (CXXThisExpr 0x923f9e0 <col:7> 'basic_stringbuf<_CharT, _Traits, _Alloc> *' this))
    (DeclRefExpr 0x923fa24 <col:19> 'off_type':'typename traits_type::off_type' lvalue ParmVar 0x923f4c0 '__off' 'off_type':'typename traits_type::off_type')))


    class basic_stringbuf : public basic_streambuf<char, std::char_traits<char> > {
        class basic_stringbuf;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<char> &operator=(const std::basic_stringbuf<char> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<char> &);
    };
    class basic_istringstream : public basic_istream<char, std::char_traits<char> > {
        class basic_istringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<char> &operator=(const std::basic_istringstream<char> &);
    };
    class basic_ostringstream : public basic_ostream<char, std::char_traits<char> > {
        class basic_ostringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<char> &operator=(const std::basic_ostringstream<char> &);
    };
    class basic_stringstream : public basic_iostream<char, std::char_traits<char> > {
        class basic_stringstream;
    public:
    public:
        typedef char char_type;
        typedef std::char_traits<char> traits_type;
        typedef std::allocator<char> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<char, std::char_traits<char>, std::allocator<char> > __string_type;
        typedef basic_stringbuf<char, std::char_traits<char>, std::allocator<char> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<char> &operator=(const std::basic_stringstream<char> &);
        inline basic_stringstream(const std::basic_stringstream<char> &);
    };
    class basic_stringbuf : public basic_streambuf<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringbuf;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_streambuf<char_type, traits_type> __streambuf_type;
        typedef basic_string<char_type, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef typename __string_type::size_type __size_type;
    protected:
    protected:
        ios_base::openmode _M_mode;
        __string_type _M_string;
    public:
    public:
        basic_stringbuf(ios_base::openmode __mode);
        basic_stringbuf(const __string_type &__str, ios_base::openmode __mode);
        __string_type str() const;
        void str(const __string_type &__s);
    protected:
    protected:
        void _M_stringbuf_init(ios_base::openmode __mode);
        virtual streamsize showmanyc();
        virtual int_type underflow();
        virtual int_type pbackfail(int_type __c);
        virtual int_type overflow(int_type __c);
        virtual __streambuf_type *setbuf(char_type *__s, streamsize __n);
        virtual pos_type seekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode __mode);
        virtual pos_type seekpos(pos_type __sp, ios_base::openmode __mode);
        void _M_sync(char_type *__base, __size_type __i, __size_type __o);
        void _M_update_egptr();
        void _M_pbump(char_type *__pbeg, char_type *__pend, off_type __off);
        inline std::basic_stringbuf<wchar_t> &operator=(const std::basic_stringbuf<wchar_t> &);
        inline void ~basic_stringbuf();
        inline basic_stringbuf(const std::basic_stringbuf<wchar_t> &);
    };
    class basic_istringstream : public basic_istream<wchar_t, std::char_traits<wchar_t> > {
        class basic_istringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_istream<char_type, traits_type> __istream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_istringstream(ios_base::openmode __mode);
        basic_istringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_istringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_istringstream<wchar_t> &operator=(const std::basic_istringstream<wchar_t> &);
    };
    class basic_ostringstream : public basic_ostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_ostringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_ostream<char_type, traits_type> __ostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_ostringstream(ios_base::openmode __mode);
        basic_ostringstream(const __string_type &__str, ios_base::openmode __mode);
        void ~basic_ostringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_ostringstream<wchar_t> &operator=(const std::basic_ostringstream<wchar_t> &);
    };
    class basic_stringstream : public basic_iostream<wchar_t, std::char_traits<wchar_t> > {
        class basic_stringstream;
    public:
    public:
        typedef wchar_t char_type;
        typedef std::char_traits<wchar_t> traits_type;
        typedef std::allocator<wchar_t> allocator_type;
        typedef typename traits_type::int_type int_type;
        typedef typename traits_type::pos_type pos_type;
        typedef typename traits_type::off_type off_type;
        typedef basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __string_type;
        typedef basic_stringbuf<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > __stringbuf_type;
        typedef basic_iostream<char_type, traits_type> __iostream_type;
    private:
    private:
        __stringbuf_type _M_stringbuf;
    public:
    public:
        basic_stringstream(ios_base::openmode __m);
        basic_stringstream(const __string_type &__str, ios_base::openmode __m);
        void ~basic_stringstream();
        __stringbuf_type *rdbuf() const;
        __string_type str() const;
        void str(const __string_type &__s);
        inline std::basic_stringstream<wchar_t> &operator=(const std::basic_stringstream<wchar_t> &);
        inline basic_stringstream(const std::basic_stringstream<wchar_t> &);
    };
}
namespace std {
    template <typename _T1, typename _T2> inline void _Construct(_T1 *__p, const _T2 &__value) (CompoundStmt 0x9254ba0 </usr/include/c++/4.6/bits/stl_construct.h:81:5, line:85:5>
  (CXXNewExpr 0x9254b60 <line:84:7, col:49> '_T1 *'
    (CXXStaticCastExpr 0x9254b28 <col:13, col:35> 'void *' static_cast<void *> <Dependent>
      (DeclRefExpr 0x9254b00 <col:32> '_T1 *' lvalue ParmVar 0x9254960 '__p' '_T1 *'))
    (DeclRefExpr 0x9254b40 <col:42> 'const _T2' lvalue ParmVar 0x92549d0 '__value' 'const _T2 &')))

;
    template <typename _Tp> inline void _Destroy(_Tp *__pointer) (CompoundStmt 0x9254dd0 </usr/include/c++/4.6/bits/stl_construct.h:94:5, col:26>
  (CallExpr 0x9254db0 <col:7, col:23> 'void'
    (CXXPseudoDestructorExpr 0x9254d80 <col:7, col:19> 'void (*)(void)'
      (DeclRefExpr 0x9254d5c <col:7> '_Tp *' lvalue ParmVar 0x9254c50 '__pointer' '_Tp *'))))

;
    template <bool = true> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9255860 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    }
template <bool> struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9255460 </usr/include/c++/4.6/bits/stl_construct.h:102:2, line:105:2>
  (ForStmt 0x9255438 <line:103:4, line:104:46>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92552b8 <line:103:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x9255260 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (DeclRefExpr 0x9255230 <col:11> '_ForwardIterator' lvalue ParmVar 0x92550b0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9255248 <col:22> '_ForwardIterator' lvalue ParmVar 0x92550f0 '__last' '_ForwardIterator'))
    (UnaryOperator 0x92552f8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92552dc <col:32> '_ForwardIterator' lvalue ParmVar 0x92550b0 '__first' '_ForwardIterator'))
    (CallExpr 0x9255418 <line:104:6, col:46> '<dependent type>'
      (UnresolvedLookupExpr 0x9255340 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30)
      (CallExpr 0x92553f8 <col:20, col:45> '<dependent type>'
        (UnresolvedLookupExpr 0x9255390 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
        (UnaryOperator 0x92553e0 <col:37, col:38> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92553c4 <col:38> '_ForwardIterator' lvalue ParmVar 0x92550b0 '__first' '_ForwardIterator'))))))

;
    };
    struct _Destroy_aux {
        struct _Destroy_aux;
        template <typename _ForwardIterator> static void __destroy(_ForwardIterator, _ForwardIterator) (CompoundStmt 0x9255860 </usr/include/c++/4.6/bits/stl_construct.h:113:55, col:57>)

;
    };
    template <typename _ForwardIterator> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x9255d08 </usr/include/c++/4.6/bits/stl_construct.h:124:5, line:129:5>
  (DeclStmt 0x9255b40 <line:125:7, line:126:35>
    0x9255b10 "typedef typename iterator_traits<_ForwardIterator>::value_type _Value_type")
  (CallExpr 0x9255ce0 <line:127:7, line:128:27> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9255c88 <line:127:7, line:128:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x9255cac <col:12> '_ForwardIterator' lvalue ParmVar 0x92558d0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9255cc4 <col:21> '_ForwardIterator' lvalue ParmVar 0x9255910 '__last' '_ForwardIterator')))

;
    template <typename _Tp = std::basic_string<wchar_t>> class allocator
template <typename _Tp = std::basic_string<char>> class allocator
template <typename _Tp = wchar_t> class allocator : public __gnu_cxx::new_allocator<wchar_t> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef wchar_t *pointer;
        typedef const wchar_t *const_pointer;
        typedef wchar_t &reference;
        typedef const wchar_t &const_reference;
        typedef wchar_t value_type;
        template <typename _Tp1 = wchar_t> struct rebind {
            struct rebind;
            typedef allocator<wchar_t> other;
        }
template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw() : __gnu_cxx::new_allocator<wchar_t>() (CompoundStmt 0x8ec8fb8 </usr/include/c++/4.6/bits/allocator.h:107:27, col:29>)


        allocator(const std::allocator<wchar_t> &__a) throw() : __gnu_cxx::new_allocator<wchar_t>((ImplicitCastExpr 0x92fed80 </usr/include/c++/4.6/bits/allocator.h:110:39> 'const class __gnu_cxx::new_allocator<wchar_t>' lvalue <DerivedToBase (new_allocator)>
  (DeclRefExpr 0x92fead4 <col:39> 'const class std::allocator<wchar_t>' lvalue ParmVar 0x8ecf610 '__a' 'const class std::allocator<wchar_t> &'))
) (CompoundStmt 0x8ec90d0 </usr/include/c++/4.6/bits/allocator.h:110:44, col:46>)


        template <typename _Tp1 = wchar_t> allocator(const allocator<wchar_t> &) throw()template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw() (CompoundStmt 0x8ec90f0 </usr/include/c++/4.6/bits/allocator.h:115:28, col:30>)


    }
template <typename _Tp = char> class allocator : public __gnu_cxx::new_allocator<char> {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef char *pointer;
        typedef const char *const_pointer;
        typedef char &reference;
        typedef const char &const_reference;
        typedef char value_type;
        template <typename _Tp1 = char> struct rebind {
            struct rebind;
            typedef allocator<char> other;
        }
template <typename _Tp1> struct rebind;
        allocator() throw();
        allocator(const std::allocator<char> &__a) throw();
        template <typename _Tp1> allocator(const allocator<_Tp1> &) throw();
        void ~allocator() throw();
    }
template <typename _Tp = void> class allocator {
        class allocator;
    public:
    public:
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef void *pointer;
        typedef const void *const_pointer;
        typedef void value_type;
        template <typename _Tp1> struct rebind {
            struct rebind;
            typedef allocator<_Tp1> other;
        };
    }
template <typename _Tp> class allocator;
    template <typename _ForwardIterator, typename _Allocator> void _Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &__alloc) (CompoundStmt 0x92562e0 </usr/include/c++/4.6/bits/stl_construct.h:143:5, line:146:5>
  (ForStmt 0x92562b8 <line:144:7, line:145:44>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9256150 <line:144:14, col:25> '<dependent type>'
      (UnresolvedLookupExpr 0x92560f8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (DeclRefExpr 0x92560c4 <col:14> '_ForwardIterator' lvalue ParmVar 0x9255ec0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92560dc <col:25> '_ForwardIterator' lvalue ParmVar 0x9255f00 '__last' '_ForwardIterator'))
    (UnaryOperator 0x9256190 <col:33, col:35> '<dependent type>' prefix '++'
      (DeclRefExpr 0x9256174 <col:35> '_ForwardIterator' lvalue ParmVar 0x9255ec0 '__first' '_ForwardIterator'))
    (CallExpr 0x9256298 <line:145:2, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92561c0 <col:2, col:10> '<dependent type>' lvalue
        (DeclRefExpr 0x92561a4 <col:2> '_Allocator' lvalue ParmVar 0x9255f70 '__alloc' '_Allocator &'))
      (CallExpr 0x9256278 <col:18, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9256210 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
        (UnaryOperator 0x9256260 <col:35, col:36> '<dependent type>' prefix '*'
          (DeclRefExpr 0x9256244 <col:36> '_ForwardIterator' lvalue ParmVar 0x9255ec0 '__first' '_ForwardIterator'))))))

;
    template <typename _ForwardIterator, typename _Tp> inline void _Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator<_Tp> &) (CompoundStmt 0x9256710 </usr/include/c++/4.6/bits/stl_construct.h:152:5, line:154:5>
  (CallExpr 0x92566e8 <line:153:7, col:31> '<dependent type>'
    (UnresolvedLookupExpr 0x9256678 <col:7> '<overloaded function type>' lvalue (ADL) = '1' 0x9256640 0x9256090 0x92559f0 0x9254d30)
    (DeclRefExpr 0x92566b8 <col:16> '_ForwardIterator' lvalue ParmVar 0x92563c0 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92566d0 <col:25> '_ForwardIterator' lvalue ParmVar 0x9256400 '__last' '_ForwardIterator')))

;
}
namespace std {
    template <bool _TrivialValueTypes = true> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92576f0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x92576e0 <col:11, col:53>
    (CallExpr 0x92576b8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9257638 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
      (DeclRefExpr 0x9257670 <col:28> '_InputIterator' lvalue ParmVar 0x9257460 '__first' '_InputIterator')
      (DeclRefExpr 0x9257688 <col:37> '_InputIterator' lvalue ParmVar 0x92574a0 '__last' '_InputIterator')
      (DeclRefExpr 0x92576a0 <col:45> '_ForwardIterator' lvalue ParmVar 0x92574e0 '__result' '_ForwardIterator'))))

;
    }
template <bool _TrivialValueTypes> struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9257178 </usr/include/c++/4.6/bits/stl_uninitialized.h:72:9, line:85:2>
  (DeclStmt 0x9256d30 <line:73:4, col:37>
    0x9256ce0 "_ForwardIterator __cur =
      (DeclRefExpr 0x9256d14 <col:29> '_ForwardIterator' lvalue ParmVar 0x9256b90 '__result' '_ForwardIterator')")
  (IfStmt 0x9257040 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:79:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9256d40 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9257028 </usr/include/c++/4.6/bits/stl_uninitialized.h:75:6, line:79:6>
      (ForStmt 0x9256fd8 <line:76:8, line:77:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9256dd8 <line:76:15, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9256d80 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (DeclRefExpr 0x9256d50 <col:15> '_InputIterator' lvalue ParmVar 0x9256b10 '__first' '_InputIterator')
          (DeclRefExpr 0x9256d68 <col:26> '_InputIterator' lvalue ParmVar 0x9256b50 '__last' '_InputIterator'))
        (BinaryOperator 0x9256e60 <col:34, col:47> '<dependent type>' ','
          (UnaryOperator 0x9256e18 <col:34, col:36> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9256dfc <col:36> '_InputIterator' lvalue ParmVar 0x9256b10 '__first' '_InputIterator'))
          (UnaryOperator 0x9256e48 <col:45, col:47> '<dependent type>' prefix '++'
            (DeclRefExpr 0x9256e2c <col:47> '_ForwardIterator' lvalue Var 0x9256ce0 '__cur' '_ForwardIterator')))
        (CallExpr 0x9256fb0 <line:77:3, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x9256ea8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254ad0)
          (CallExpr 0x9256f60 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9256ef8 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x9256f48 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9256f2c <col:37> '_ForwardIterator' lvalue Var 0x9256ce0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x9256f98 <col:45, col:46> '<dependent type>' prefix '*'
            (DeclRefExpr 0x9256f80 <col:46> '_InputIterator' lvalue ParmVar 0x9256b10 '__first' '_InputIterator'))))
      (ReturnStmt 0x9257018 <line:78:8, col:15>
        (DeclRefExpr 0x9256ffc <col:15> '_ForwardIterator' lvalue Var 0x9256ce0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x9257158 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:84:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9257060 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9257140 </usr/include/c++/4.6/bits/stl_uninitialized.h:81:6, line:84:6>
      (CallExpr 0x9257108 <line:82:8, col:37> '<dependent type>'
        (UnresolvedLookupExpr 0x9257098 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x92570d8 <col:22> '_ForwardIterator' lvalue ParmVar 0x9256b90 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92570f0 <col:32> '_ForwardIterator' lvalue Var 0x9256ce0 '__cur' '_ForwardIterator'))
      (NullStmt 0x9257130 <line:83:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_copy {
        struct __uninitialized_copy;
        template <typename _InputIterator, typename _ForwardIterator> static _ForwardIterator __uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x92576f0 </usr/include/c++/4.6/bits/stl_uninitialized.h:95:9, col:56>
  (ReturnStmt 0x92576e0 <col:11, col:53>
    (CallExpr 0x92576b8 <col:18, col:53> '<dependent type>'
      (UnresolvedLookupExpr 0x9257638 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
      (DeclRefExpr 0x9257670 <col:28> '_InputIterator' lvalue ParmVar 0x9257460 '__first' '_InputIterator')
      (DeclRefExpr 0x9257688 <col:37> '_InputIterator' lvalue ParmVar 0x92574a0 '__last' '_InputIterator')
      (DeclRefExpr 0x92576a0 <col:45> '_ForwardIterator' lvalue ParmVar 0x92574e0 '__result' '_ForwardIterator'))))

;
    };
    template <typename _InputIterator, typename _ForwardIterator> inline _ForwardIterator uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator __result) (CompoundStmt 0x9257df8 </usr/include/c++/4.6/bits/stl_uninitialized.h:111:5, line:120:5>
  (DeclStmt 0x9257a90 <line:112:7, line:113:13>
    0x9257a60 "typedef typename iterator_traits<_InputIterator>::value_type _ValueType1")
  (DeclStmt 0x9257bc0 <line:114:7, line:115:13>
    0x9257b90 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType2")
  (ReturnStmt 0x9257de8 <line:117:7, line:119:41>
    (CallExpr 0x9257dc0 <line:117:14, line:119:41> '<dependent type>'
      (DependentScopeDeclRefExpr 0x9257d50 <line:117:14, line:119:2> '<dependent type>' lvalue)
      (DeclRefExpr 0x9257d74 <col:16> '_InputIterator' lvalue ParmVar 0x92577d0 '__first' '_InputIterator')
      (DeclRefExpr 0x9257d8c <col:25> '_InputIterator' lvalue ParmVar 0x9257810 '__last' '_InputIterator')
      (DeclRefExpr 0x9257da4 <col:33> '_ForwardIterator' lvalue ParmVar 0x9257850 '__result' '_ForwardIterator'))))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9258d30 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9258d08 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9258c88 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40)
    (DeclRefExpr 0x9258cbc <col:21> '_ForwardIterator' lvalue ParmVar 0x9258a70 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9258cd4 <col:30> '_ForwardIterator' lvalue ParmVar 0x9258ab0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9258cec <col:38> 'const _Tp' lvalue ParmVar 0x9258b20 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9258790 </usr/include/c++/4.6/bits/stl_uninitialized.h:130:9, line:142:2>
  (DeclStmt 0x92583e0 <line:131:4, col:36>
    0x9258390 "_ForwardIterator __cur =
      (DeclRefExpr 0x92583c4 <col:29> '_ForwardIterator' lvalue ParmVar 0x9258140 '__first' '_ForwardIterator')")
  (IfStmt 0x9258658 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:136:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92583f0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9258640 </usr/include/c++/4.6/bits/stl_uninitialized.h:133:6, line:136:6>
      (ForStmt 0x9258618 <line:134:8, line:135:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9258488 <line:134:15, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x9258430 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (DeclRefExpr 0x9258400 <col:15> '_ForwardIterator' lvalue Var 0x9258390 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x9258418 <col:24> '_ForwardIterator' lvalue ParmVar 0x9258180 '__last' '_ForwardIterator'))
        (UnaryOperator 0x92584c8 <col:32, col:34> '<dependent type>' prefix '++'
          (DeclRefExpr 0x92584ac <col:34> '_ForwardIterator' lvalue Var 0x9258390 '__cur' '_ForwardIterator'))
        (CallExpr 0x92585f0 <line:135:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9258500 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254ad0)
          (CallExpr 0x92585b8 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9258550 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x92585a0 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9258584 <col:37> '_ForwardIterator' lvalue Var 0x9258390 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92585d8 <col:45> 'const _Tp' lvalue ParmVar 0x9258210 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9258770 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:141:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9258678 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9258758 </usr/include/c++/4.6/bits/stl_uninitialized.h:138:6, line:141:6>
      (CallExpr 0x9258720 <line:139:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92586b0 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x92586f0 <col:22> '_ForwardIterator' lvalue ParmVar 0x9258140 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9258708 <col:31> '_ForwardIterator' lvalue Var 0x9258390 '__cur' '_ForwardIterator'))
      (NullStmt 0x9258748 <line:140:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill {
        struct __uninitialized_fill;
        template <typename _ForwardIterator, typename _Tp> static void __uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x9258d30 </usr/include/c++/4.6/bits/stl_uninitialized.h:152:9, col:44>
  (CallExpr 0x9258d08 <col:11, col:41> '<dependent type>'
    (UnresolvedLookupExpr 0x9258c88 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40)
    (DeclRefExpr 0x9258cbc <col:21> '_ForwardIterator' lvalue ParmVar 0x9258a70 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9258cd4 <col:30> '_ForwardIterator' lvalue ParmVar 0x9258ab0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9258cec <col:38> 'const _Tp' lvalue ParmVar 0x9258b20 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Tp> inline void uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x) (CompoundStmt 0x92592e0 </usr/include/c++/4.6/bits/stl_uninitialized.h:168:5, line:174:5>
  (DeclStmt 0x9259100 <line:169:7, line:170:12>
    0x92590d0 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x92592b8 <line:172:7, line:173:36> '<dependent type>'
    (DependentScopeDeclRefExpr 0x9259248 <line:172:7, line:173:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x925926c <col:16> '_ForwardIterator' lvalue ParmVar 0x9258e10 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9259284 <col:25> '_ForwardIterator' lvalue ParmVar 0x9258e50 '__last' '_ForwardIterator')
    (DeclRefExpr 0x925929c <col:33> 'const _Tp' lvalue ParmVar 0x9258ec0 '__x' 'const _Tp &')))

;
    template <bool _TrivialValueType = true> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x925a320 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x925a2f8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x925a278 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ce60)
    (DeclRefExpr 0x925a2ac <col:23> '_ForwardIterator' lvalue ParmVar 0x925a030 '__first' '_ForwardIterator')
    (DeclRefExpr 0x925a2c4 <col:32> '_Size' lvalue ParmVar 0x925a070 '__n' '_Size')
    (DeclRefExpr 0x925a2dc <col:37> 'const _Tp' lvalue ParmVar 0x925a0e0 '__x' 'const _Tp &')))

;
    }
template <bool _TrivialValueType> struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x9259d00 </usr/include/c++/4.6/bits/stl_uninitialized.h:184:9, line:196:2>
  (DeclStmt 0x9259910 <line:185:4, col:36>
    0x92598c0 "_ForwardIterator __cur =
      (DeclRefExpr 0x92598f4 <col:29> '_ForwardIterator' lvalue ParmVar 0x9259670 '__first' '_ForwardIterator')")
  (IfStmt 0x9259bc8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:190:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9259920 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9259bb0 </usr/include/c++/4.6/bits/stl_uninitialized.h:187:6, line:190:6>
      (ForStmt 0x9259b88 <line:188:8, line:189:48>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92599a8 <line:188:15, col:21> '<dependent type>'
          (UnresolvedLookupExpr 0x9259960 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (DeclRefExpr 0x9259930 <col:15> '_Size' lvalue ParmVar 0x92596b0 '__n' '_Size')
          (IntegerLiteral 0x9259948 <col:21> 'int' 0))
        (BinaryOperator 0x9259a30 <col:24, col:33> '<dependent type>' ','
          (UnaryOperator 0x92599e8 <col:24, col:26> '<dependent type>' prefix '--'
            (DeclRefExpr 0x92599cc <col:26> '_Size' lvalue ParmVar 0x92596b0 '__n' '_Size'))
          (UnaryOperator 0x9259a18 <col:31, col:33> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92599fc <col:33> '_ForwardIterator' lvalue Var 0x92598c0 '__cur' '_ForwardIterator')))
        (CallExpr 0x9259b60 <line:189:3, col:48> '<dependent type>'
          (UnresolvedLookupExpr 0x9259a70 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254ad0)
          (CallExpr 0x9259b28 <col:19, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x9259ac0 <col:19, col:24> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x9259b10 <col:36, col:37> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9259af4 <col:37> '_ForwardIterator' lvalue Var 0x92598c0 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9259b48 <col:45> 'const _Tp' lvalue ParmVar 0x9259740 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9259ce0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:195:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9259be8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9259cc8 </usr/include/c++/4.6/bits/stl_uninitialized.h:192:6, line:195:6>
      (CallExpr 0x9259c90 <line:193:8, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9259c20 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9259c60 <col:22> '_ForwardIterator' lvalue ParmVar 0x9259670 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9259c78 <col:31> '_ForwardIterator' lvalue Var 0x92598c0 '__cur' '_ForwardIterator'))
      (NullStmt 0x9259cb8 <line:194:31>))
    <<<NULL>>>))

;
    };
    struct __uninitialized_fill_n {
        struct __uninitialized_fill_n;
        template <typename _ForwardIterator, typename _Size, typename _Tp> static void __uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x925a320 </usr/include/c++/4.6/bits/stl_uninitialized.h:206:9, col:43>
  (CallExpr 0x925a2f8 <col:11, col:40> '<dependent type>'
    (UnresolvedLookupExpr 0x925a278 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ce60)
    (DeclRefExpr 0x925a2ac <col:23> '_ForwardIterator' lvalue ParmVar 0x925a030 '__first' '_ForwardIterator')
    (DeclRefExpr 0x925a2c4 <col:32> '_Size' lvalue ParmVar 0x925a070 '__n' '_Size')
    (DeclRefExpr 0x925a2dc <col:37> 'const _Tp' lvalue ParmVar 0x925a0e0 '__x' 'const _Tp &')))

;
    };
    template <typename _ForwardIterator, typename _Size, typename _Tp> inline void uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x) (CompoundStmt 0x925a920 </usr/include/c++/4.6/bits/stl_uninitialized.h:221:5, line:227:5>
  (DeclStmt 0x925a740 <line:222:7, line:223:12>
    0x925a710 "typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType")
  (CallExpr 0x925a8f8 <line:225:7, line:226:35> '<dependent type>'
    (DependentScopeDeclRefExpr 0x925a888 <line:225:7, line:226:2> '<dependent type>' lvalue)
    (DeclRefExpr 0x925a8ac <col:18> '_ForwardIterator' lvalue ParmVar 0x925a450 '__first' '_ForwardIterator')
    (DeclRefExpr 0x925a8c4 <col:27> '_Size' lvalue ParmVar 0x925a490 '__n' '_Size')
    (DeclRefExpr 0x925a8dc <col:32> 'const _Tp' lvalue ParmVar 0x925a500 '__x' 'const _Tp &')))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x925b158 </usr/include/c++/4.6/bits/stl_uninitialized.h:240:5, line:253:5>
  (DeclStmt 0x925ad10 <line:241:7, col:40>
    0x925acc0 "_ForwardIterator __cur =
      (DeclRefExpr 0x925acf4 <col:32> '_ForwardIterator' lvalue ParmVar 0x925aad0 '__result' '_ForwardIterator')")
  (IfStmt 0x925b008 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:247:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x925ad20 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x925aff0 </usr/include/c++/4.6/bits/stl_uninitialized.h:243:2, line:247:2>
      (ForStmt 0x925afa0 <line:244:4, line:245:58>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x925adb8 <line:244:11, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x925ad60 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (DeclRefExpr 0x925ad30 <col:11> '_InputIterator' lvalue ParmVar 0x925aa50 '__first' '_InputIterator')
          (DeclRefExpr 0x925ad48 <col:22> '_InputIterator' lvalue ParmVar 0x925aa90 '__last' '_InputIterator'))
        (BinaryOperator 0x925ae40 <col:30, col:43> '<dependent type>' ','
          (UnaryOperator 0x925adf8 <col:30, col:32> '<dependent type>' prefix '++'
            (DeclRefExpr 0x925addc <col:32> '_InputIterator' lvalue ParmVar 0x925aa50 '__first' '_InputIterator'))
          (UnaryOperator 0x925ae28 <col:41, col:43> '<dependent type>' prefix '++'
            (DeclRefExpr 0x925ae0c <col:43> '_ForwardIterator' lvalue Var 0x925acc0 '__cur' '_ForwardIterator')))
        (CallExpr 0x925af78 <line:245:6, col:58> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x925ae70 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x925ae58 <col:6> '_Allocator' lvalue ParmVar 0x925ab60 '__alloc' '_Allocator &'))
          (CallExpr 0x925af28 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x925aec0 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x925af10 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x925aef4 <col:42> '_ForwardIterator' lvalue Var 0x925acc0 '__cur' '_ForwardIterator')))
          (UnaryOperator 0x925af60 <col:50, col:51> '<dependent type>' prefix '*'
            (DeclRefExpr 0x925af48 <col:51> '_InputIterator' lvalue ParmVar 0x925aa50 '__first' '_InputIterator'))))
      (ReturnStmt 0x925afe0 <line:246:4, col:11>
        (DeclRefExpr 0x925afc4 <col:11> '_ForwardIterator' lvalue Var 0x925acc0 '__cur' '_ForwardIterator')))
    <<<NULL>>>)
  (IfStmt 0x925b138 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:252:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x925b028 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x925b120 </usr/include/c++/4.6/bits/stl_uninitialized.h:249:2, line:252:2>
      (CallExpr 0x925b0e8 <line:250:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x925b060 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x925b0a0 <col:18> '_ForwardIterator' lvalue ParmVar 0x925aad0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x925b0b8 <col:28> '_ForwardIterator' lvalue Var 0x925acc0 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x925b0d0 <col:35> '_Allocator' lvalue ParmVar 0x925ab60 '__alloc' '_Allocator &'))
      (NullStmt 0x925b110 <line:251:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp> inline _ForwardIterator __uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, allocator<_Tp> &) (CompoundStmt 0x925b688 </usr/include/c++/4.6/bits/stl_uninitialized.h:259:5, col:66>
  (ReturnStmt 0x925b678 <col:7, col:63>
    (CallExpr 0x925b650 <col:14, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x925b5d0 <col:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x9257940)
      (DeclRefExpr 0x925b604 <col:38> '_InputIterator' lvalue ParmVar 0x925b290 '__first' '_InputIterator')
      (DeclRefExpr 0x925b61c <col:47> '_InputIterator' lvalue ParmVar 0x925b2d0 '__last' '_InputIterator')
      (DeclRefExpr 0x925b634 <col:55> '_ForwardIterator' lvalue ParmVar 0x925b310 '__result' '_ForwardIterator'))))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x925bae8 </usr/include/c++/4.6/bits/stl_uninitialized.h:266:5, line:270:5>
  (ReturnStmt 0x925bad8 <line:267:7, line:269:24>
    (CallExpr 0x925baa8 <line:267:14, line:269:24> '<dependent type>'
      (UnresolvedLookupExpr 0x925b9e0 <line:267:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
      (ParenExpr 0x925ba30 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x925ba18 </usr/include/c++/4.6/bits/stl_uninitialized.h:267:70> '_InputIterator' lvalue ParmVar 0x925b7b0 '__first' '_InputIterator'))
      (ParenExpr 0x925ba60 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '_InputIterator' lvalue
        (DeclRefExpr 0x925ba44 </usr/include/c++/4.6/bits/stl_uninitialized.h:268:35> '_InputIterator' lvalue ParmVar 0x925b7f0 '__last' '_InputIterator'))
      (DeclRefExpr 0x925ba74 <line:269:7> '_ForwardIterator' lvalue ParmVar 0x925b830 '__result' '_ForwardIterator')
      (DeclRefExpr 0x925ba8c <col:17> '_Allocator' lvalue ParmVar 0x925b8a0 '__alloc' '_Allocator &'))))

;
    template <typename _ForwardIterator, typename _Tp, typename _Allocator> void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9261b40 </usr/include/c++/4.6/bits/stl_uninitialized.h:276:5, line:288:5>
  (DeclStmt 0x9261780 <line:277:7, col:39>
    0x9261730 "_ForwardIterator __cur =
      (DeclRefExpr 0x9261764 <col:32> '_ForwardIterator' lvalue ParmVar 0x925bc10 '__first' '_ForwardIterator')")
  (IfStmt 0x92619f0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:282:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9261790 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92619d8 </usr/include/c++/4.6/bits/stl_uninitialized.h:279:2, line:282:2>
      (ForStmt 0x92619b0 <line:280:4, line:281:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9261828 <line:280:11, col:20> '<dependent type>'
          (UnresolvedLookupExpr 0x92617d0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
          (DeclRefExpr 0x92617a0 <col:11> '_ForwardIterator' lvalue Var 0x9261730 '__cur' '_ForwardIterator')
          (DeclRefExpr 0x92617b8 <col:20> '_ForwardIterator' lvalue ParmVar 0x92614f0 '__last' '_ForwardIterator'))
        (UnaryOperator 0x9261868 <col:28, col:30> '<dependent type>' prefix '++'
          (DeclRefExpr 0x926184c <col:30> '_ForwardIterator' lvalue Var 0x9261730 '__cur' '_ForwardIterator'))
        (CallExpr 0x9261988 <line:281:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9261898 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x926187c <col:6> '_Allocator' lvalue ParmVar 0x92615d0 '__alloc' '_Allocator &'))
          (CallExpr 0x9261950 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x92618e8 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x9261938 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x926191c <col:42> '_ForwardIterator' lvalue Var 0x9261730 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x9261970 <col:50> 'const _Tp' lvalue ParmVar 0x9261560 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9261b20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:287:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9261a10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9261b08 </usr/include/c++/4.6/bits/stl_uninitialized.h:284:2, line:287:2>
      (CallExpr 0x9261ad0 <line:285:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x9261a48 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9261a88 <col:18> '_ForwardIterator' lvalue ParmVar 0x925bc10 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9261aa0 <col:27> '_ForwardIterator' lvalue Var 0x9261730 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9261ab8 <col:34> '_Allocator' lvalue ParmVar 0x92615d0 '__alloc' '_Allocator &'))
      (NullStmt 0x9261af8 <line:286:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _Tp2> inline void __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9262048 </usr/include/c++/4.6/bits/stl_uninitialized.h:294:5, col:54>
  (CallExpr 0x9262020 <col:7, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x9261fa0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9258fb0)
    (DeclRefExpr 0x9261fd4 <col:31> '_ForwardIterator' lvalue ParmVar 0x9261c70 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9261fec <col:40> '_ForwardIterator' lvalue ParmVar 0x9261cb0 '__last' '_ForwardIterator')
    (DeclRefExpr 0x9262004 <col:48> 'const _Tp' lvalue ParmVar 0x9261d20 '__x' 'const _Tp &')))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Allocator> void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x92628a8 </usr/include/c++/4.6/bits/stl_uninitialized.h:301:5, line:313:5>
  (DeclStmt 0x92624b0 <line:302:7, col:39>
    0x9262460 "_ForwardIterator __cur =
      (DeclRefExpr 0x9262494 <col:32> '_ForwardIterator' lvalue ParmVar 0x92621c0 '__first' '_ForwardIterator')")
  (IfStmt 0x9262758 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:307:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92624c0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9262740 </usr/include/c++/4.6/bits/stl_uninitialized.h:304:2, line:307:2>
      (ForStmt 0x9262718 <line:305:4, line:306:53>
        <<<NULL>>>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x9262548 <line:305:11, col:17> '<dependent type>'
          (UnresolvedLookupExpr 0x9262500 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
          (DeclRefExpr 0x92624d0 <col:11> '_Size' lvalue ParmVar 0x9262200 '__n' '_Size')
          (IntegerLiteral 0x92624e8 <col:17> 'int' 0))
        (BinaryOperator 0x92625d0 <col:20, col:29> '<dependent type>' ','
          (UnaryOperator 0x9262588 <col:20, col:22> '<dependent type>' prefix '--'
            (DeclRefExpr 0x926256c <col:22> '_Size' lvalue ParmVar 0x9262200 '__n' '_Size'))
          (UnaryOperator 0x92625b8 <col:27, col:29> '<dependent type>' prefix '++'
            (DeclRefExpr 0x926259c <col:29> '_ForwardIterator' lvalue Var 0x9262460 '__cur' '_ForwardIterator')))
        (CallExpr 0x92626f0 <line:306:6, col:53> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x9262600 <col:6, col:14> '<dependent type>' lvalue
            (DeclRefExpr 0x92625e8 <col:6> '_Allocator' lvalue ParmVar 0x9262300 '__alloc' '_Allocator &'))
          (CallExpr 0x92626b8 <col:24, col:47> '<dependent type>'
            (UnresolvedLookupExpr 0x9262650 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
            (UnaryOperator 0x92626a0 <col:41, col:42> '<dependent type>' prefix '*'
              (DeclRefExpr 0x9262684 <col:42> '_ForwardIterator' lvalue Var 0x9262460 '__cur' '_ForwardIterator')))
          (DeclRefExpr 0x92626d8 <col:50> 'const _Tp' lvalue ParmVar 0x9262270 '__x' 'const _Tp &'))))
    <<<NULL>>>)
  (IfStmt 0x9262888 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:312:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9262778 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9262870 </usr/include/c++/4.6/bits/stl_uninitialized.h:309:2, line:312:2>
      (CallExpr 0x9262838 <line:310:4, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x92627b0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x92627f0 <col:18> '_ForwardIterator' lvalue ParmVar 0x92621c0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x9262808 <col:27> '_ForwardIterator' lvalue Var 0x9262460 '__cur' '_ForwardIterator')
        (DeclRefExpr 0x9262820 <col:34> '_Allocator' lvalue ParmVar 0x9262300 '__alloc' '_Allocator &'))
      (NullStmt 0x9262860 <line:311:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Size, typename _Tp, typename _Tp2> inline void __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &__x, allocator<_Tp2> &) (CompoundStmt 0x9262e58 </usr/include/c++/4.6/bits/stl_uninitialized.h:320:5, col:53>
  (CallExpr 0x9262e30 <col:7, col:50> '<dependent type>'
    (UnresolvedLookupExpr 0x9262db0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925a5f0)
    (DeclRefExpr 0x9262de4 <col:33> '_ForwardIterator' lvalue ParmVar 0x9262a30 '__first' '_ForwardIterator')
    (DeclRefExpr 0x9262dfc <col:42> '_Size' lvalue ParmVar 0x9262a70 '__n' '_Size')
    (DeclRefExpr 0x9262e14 <col:47> 'const _Tp' lvalue ParmVar 0x9262ae0 '__x' 'const _Tp &')))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9263650 </usr/include/c++/4.6/bits/stl_uninitialized.h:341:5, line:354:5>
  (DeclStmt 0x92633d8 <line:342:7, line:344:19>
    0x92632c0 "_ForwardIterator __mid =
      (CallExpr 0x92633a8 <line:342:32, line:344:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9263310 <line:342:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
        (DeclRefExpr 0x9263348 <col:60> '_InputIterator1' lvalue ParmVar 0x9262fd0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9263360 <col:70> '_InputIterator1' lvalue ParmVar 0x9263010 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9263378 <line:343:11> '_ForwardIterator' lvalue ParmVar 0x92630d0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9263390 <line:344:11> '_Allocator' lvalue ParmVar 0x9263140 '__alloc' '_Allocator &'))")
  (IfStmt 0x9263500 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:348:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92633e8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92634e8 </usr/include/c++/4.6/bits/stl_uninitialized.h:346:2, line:348:2>
      (ReturnStmt 0x92634d8 <line:347:4, col:72>
        (CallExpr 0x92634a8 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9263410 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
          (DeclRefExpr 0x9263444 <col:39> '_InputIterator2' lvalue ParmVar 0x9263050 '__first2' '_InputIterator2')
          (DeclRefExpr 0x926345c <col:49> '_InputIterator2' lvalue ParmVar 0x9263090 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9263474 <col:58> '_ForwardIterator' lvalue Var 0x92632c0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x926348c <col:65> '_Allocator' lvalue ParmVar 0x9263140 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9263630 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:353:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9263520 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9263618 </usr/include/c++/4.6/bits/stl_uninitialized.h:350:2, line:353:2>
      (CallExpr 0x92635e0 <line:351:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9263558 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9263598 <col:18> '_ForwardIterator' lvalue ParmVar 0x92630d0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x92635b0 <col:28> '_ForwardIterator' lvalue Var 0x92632c0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x92635c8 <col:35> '_Allocator' lvalue ParmVar 0x9263140 '__alloc' '_Allocator &'))
      (NullStmt 0x9263608 <line:352:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator1, typename _InputIterator2, typename _ForwardIterator, typename _Allocator> inline _ForwardIterator __uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _ForwardIterator __result, _Allocator &__alloc) (CompoundStmt 0x9263e20 </usr/include/c++/4.6/bits/stl_uninitialized.h:369:5, line:382:5>
  (DeclStmt 0x9263ba8 <line:370:7, line:372:19>
    0x9263a90 "_ForwardIterator __mid =
      (CallExpr 0x9263b78 <line:370:32, line:372:18> '<dependent type>'
        (UnresolvedLookupExpr 0x9263ae0 <line:370:32, col:37> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
        (DeclRefExpr 0x9263b14 <col:60> '_InputIterator1' lvalue ParmVar 0x92637d0 '__first1' '_InputIterator1')
        (DeclRefExpr 0x9263b2c <col:70> '_InputIterator1' lvalue ParmVar 0x9263810 '__last1' '_InputIterator1')
        (DeclRefExpr 0x9263b44 <line:371:11> '_ForwardIterator' lvalue ParmVar 0x92638d0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9263b5c <line:372:11> '_Allocator' lvalue ParmVar 0x9263940 '__alloc' '_Allocator &'))")
  (IfStmt 0x9263cd0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:376:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9263bb8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9263cb8 </usr/include/c++/4.6/bits/stl_uninitialized.h:374:2, line:376:2>
      (ReturnStmt 0x9263ca8 <line:375:4, col:72>
        (CallExpr 0x9263c78 <col:11, col:72> '<dependent type>'
          (UnresolvedLookupExpr 0x9263be0 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
          (DeclRefExpr 0x9263c18 <col:39> '_InputIterator2' lvalue ParmVar 0x9263850 '__first2' '_InputIterator2')
          (DeclRefExpr 0x9263c30 <col:49> '_InputIterator2' lvalue ParmVar 0x9263890 '__last2' '_InputIterator2')
          (DeclRefExpr 0x9263c48 <col:58> '_ForwardIterator' lvalue Var 0x9263a90 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9263c60 <col:65> '_Allocator' lvalue ParmVar 0x9263940 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x9263e00 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:381:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9263cf0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9263de8 </usr/include/c++/4.6/bits/stl_uninitialized.h:378:2, line:381:2>
      (CallExpr 0x9263db0 <line:379:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9263d28 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9263d68 <col:18> '_ForwardIterator' lvalue ParmVar 0x92638d0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9263d80 <col:28> '_ForwardIterator' lvalue Var 0x9263a90 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9263d98 <col:35> '_Allocator' lvalue ParmVar 0x9263940 '__alloc' '_Allocator &'))
      (NullStmt 0x9263dd8 <line:380:27>))
    <<<NULL>>>))

;
    template <typename _ForwardIterator, typename _Tp, typename _InputIterator, typename _Allocator> inline _ForwardIterator __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &__x, _InputIterator __first, _InputIterator __last, _Allocator &__alloc) (CompoundStmt 0x9264608 </usr/include/c++/4.6/bits/stl_uninitialized.h:393:5, line:404:5>
  (CallExpr 0x9264370 <line:394:7, col:64> '<dependent type>'
    (UnresolvedLookupExpr 0x92642d8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x92616f0 0x9261f40)
    (DeclRefExpr 0x9264310 <col:35> '_ForwardIterator' lvalue ParmVar 0x9263fa0 '__result' '_ForwardIterator')
    (DeclRefExpr 0x9264328 <col:45> '_ForwardIterator' lvalue ParmVar 0x9263fe0 '__mid' '_ForwardIterator')
    (DeclRefExpr 0x9264340 <col:52> 'const _Tp' lvalue ParmVar 0x9264050 '__x' 'const _Tp &')
    (DeclRefExpr 0x9264358 <col:57> '_Allocator' lvalue ParmVar 0x9264140 '__alloc' '_Allocator &'))
  (IfStmt 0x92644b8 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:398:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92643a0 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x92644a0 </usr/include/c++/4.6/bits/stl_uninitialized.h:396:2, line:398:2>
      (ReturnStmt 0x9264490 <line:397:4, col:70>
        (CallExpr 0x9264460 <col:11, col:70> '<dependent type>'
          (UnresolvedLookupExpr 0x92643c8 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
          (DeclRefExpr 0x92643fc <col:39> '_InputIterator' lvalue ParmVar 0x9264090 '__first' '_InputIterator')
          (DeclRefExpr 0x9264414 <col:48> '_InputIterator' lvalue ParmVar 0x92640d0 '__last' '_InputIterator')
          (DeclRefExpr 0x926442c <col:56> '_ForwardIterator' lvalue ParmVar 0x9263fe0 '__mid' '_ForwardIterator')
          (DeclRefExpr 0x9264444 <col:63> '_Allocator' lvalue ParmVar 0x9264140 '__alloc' '_Allocator &'))))
    <<<NULL>>>)
  (IfStmt 0x92645e8 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:403:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x92644d8 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x92645d0 </usr/include/c++/4.6/bits/stl_uninitialized.h:400:2, line:403:2>
      (CallExpr 0x9264598 <line:401:4, col:42> '<dependent type>'
        (UnresolvedLookupExpr 0x9264510 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9264550 <col:18> '_ForwardIterator' lvalue ParmVar 0x9263fa0 '__result' '_ForwardIterator')
        (DeclRefExpr 0x9264568 <col:28> '_ForwardIterator' lvalue ParmVar 0x9263fe0 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x9264580 <col:35> '_Allocator' lvalue ParmVar 0x9264140 '__alloc' '_Allocator &'))
      (NullStmt 0x92645c0 <line:402:27>))
    <<<NULL>>>))

;
    template <typename _InputIterator, typename _ForwardIterator, typename _Tp, typename _Allocator> inline void __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator __first2, _ForwardIterator __last2, const _Tp &__x, _Allocator &__alloc) (CompoundStmt 0x9264e40 </usr/include/c++/4.6/bits/stl_uninitialized.h:416:5, line:429:5>
  (DeclStmt 0x9264bc8 <line:417:7, line:419:20>
    0x9264ab0 "_ForwardIterator __mid2 =
      (CallExpr 0x9264b98 <line:417:33, line:419:19> '<dependent type>'
        (UnresolvedLookupExpr 0x9264b00 <line:417:33, col:38> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
        (DeclRefExpr 0x9264b34 <col:61> '_InputIterator' lvalue ParmVar 0x9264790 '__first1' '_InputIterator')
        (DeclRefExpr 0x9264b4c <col:71> '_InputIterator' lvalue ParmVar 0x92647d0 '__last1' '_InputIterator')
        (DeclRefExpr 0x9264b64 <line:418:12> '_ForwardIterator' lvalue ParmVar 0x9264810 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9264b7c <line:419:12> '_Allocator' lvalue ParmVar 0x9264930 '__alloc' '_Allocator &'))")
  (IfStmt 0x9264cf0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:423:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9264bd8 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x9264cd8 </usr/include/c++/4.6/bits/stl_uninitialized.h:421:2, line:423:2>
      (CallExpr 0x9264ca8 <line:422:4, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x9264c10 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x92616f0 0x9261f40)
        (DeclRefExpr 0x9264c48 <col:32> '_ForwardIterator' lvalue Var 0x9264ab0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9264c60 <col:40> '_ForwardIterator' lvalue ParmVar 0x9264850 '__last2' '_ForwardIterator')
        (DeclRefExpr 0x9264c78 <col:49> 'const _Tp' lvalue ParmVar 0x92648c0 '__x' 'const _Tp &')
        (DeclRefExpr 0x9264c90 <col:54> '_Allocator' lvalue ParmVar 0x9264930 '__alloc' '_Allocator &')))
    <<<NULL>>>)
  (IfStmt 0x9264e20 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_uninitialized.h:428:2>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x9264d10 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x9264e08 </usr/include/c++/4.6/bits/stl_uninitialized.h:425:2, line:428:2>
      (CallExpr 0x9264dd0 <line:426:4, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x9264d48 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (DeclRefExpr 0x9264d88 <col:18> '_ForwardIterator' lvalue ParmVar 0x9264810 '__first2' '_ForwardIterator')
        (DeclRefExpr 0x9264da0 <col:28> '_ForwardIterator' lvalue Var 0x9264ab0 '__mid2' '_ForwardIterator')
        (DeclRefExpr 0x9264db8 <col:36> '_Allocator' lvalue ParmVar 0x9264930 '__alloc' '_Allocator &'))
      (NullStmt 0x9264df8 <line:427:27>))
    <<<NULL>>>))

;
}
namespace std {
    template <typename _Tp, typename _Alloc> struct _Vector_base {
        struct _Vector_base;
        typedef typename _Alloc::_Alloc::rebind<_Tp>::other _Tp_alloc_type;
        struct _Vector_impl : public _Tp_alloc_type {
            struct _Vector_impl;
            typename _Tp_alloc_type::pointer _M_start;
            typename _Tp_alloc_type::pointer _M_finish;
            typename _Tp_alloc_type::pointer _M_end_of_storage;
            _Vector_impl() : _Tp_alloc_type(), _M_start((IntegerLiteral 0x9266408 </usr/include/c++/4.6/bits/stl_vector.h:83:31> 'int' 0)
), _M_finish((IntegerLiteral 0x9266458 </usr/include/c++/4.6/bits/stl_vector.h:83:45> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x92664a8 </usr/include/c++/4.6/bits/stl_vector.h:83:67> 'int' 0)
) (CompoundStmt 0x9266508 </usr/include/c++/4.6/bits/stl_vector.h:84:2, col:4>)


            _Vector_impl(const _Tp_alloc_type &__a) : _Tp_alloc_type((DeclRefExpr 0x9266518 </usr/include/c++/4.6/bits/stl_vector.h:87:19> 'const _Tp_alloc_type':'const typename _Alloc::_Alloc::rebind<_Tp>::other' lvalue ParmVar 0x92657c0 '__a' 'const _Tp_alloc_type &')
), _M_start((IntegerLiteral 0x9266578 </usr/include/c++/4.6/bits/stl_vector.h:87:34> 'int' 0)
), _M_finish((IntegerLiteral 0x92665c8 </usr/include/c++/4.6/bits/stl_vector.h:87:48> 'int' 0)
), _M_end_of_storage((IntegerLiteral 0x9266618 </usr/include/c++/4.6/bits/stl_vector.h:87:70> 'int' 0)
) (CompoundStmt 0x9266678 </usr/include/c++/4.6/bits/stl_vector.h:88:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Tp_alloc_type &_M_get_Tp_allocator() (CompoundStmt 0x92667d8 </usr/include/c++/4.6/bits/stl_vector.h:96:7, col:63>
  (ReturnStmt 0x92667c8 <col:9, col:60>
    (UnaryOperator 0x92667b0 <col:16, col:60> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x9266798 <col:17, col:60> '_Tp_alloc_type *' static_cast<_Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9266730 <col:46, col:53> '<dependent type>'
          (UnresolvedLookupExpr 0x92666f0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CXXDependentScopeMemberExpr 0x92666b8 <col:47, col:53> '<dependent type>' lvalue
            (CXXThisExpr 0x92666a8 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))))))


        const _Tp_alloc_type &_M_get_Tp_allocator() const (CompoundStmt 0x9266938 </usr/include/c++/4.6/bits/stl_vector.h:100:7, col:69>
  (ReturnStmt 0x9266928 <col:9, col:66>
    (UnaryOperator 0x9266910 <col:16, col:66> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x92668f8 <col:17, col:66> 'const _Tp_alloc_type *' static_cast<const _Tp_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9266890 <col:52, col:59> '<dependent type>'
          (UnresolvedLookupExpr 0x9266850 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CXXDependentScopeMemberExpr 0x9266818 <col:53, col:59> '<dependent type>' lvalue
            (CXXThisExpr 0x9266808 <col:53> 'const _Vector_base<_Tp, _Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x92669f8 </usr/include/c++/4.6/bits/stl_vector.h:104:7, col:55>
  (ReturnStmt 0x92669e8 <col:9, col:52>
    (CXXUnresolvedConstructExpr 0x92669c8 <col:16, col:52> 'allocator_type':'_Alloc'
      (CallExpr 0x92669a8 <col:31, col:51> '<dependent type>'
        (UnresolvedMemberExpr 0x9266968 <col:31> '<bound member function type>' lvalue)))))


        _Vector_base<_Tp, _Alloc>() : _M_impl() (CompoundStmt 0x9266a50 </usr/include/c++/4.6/bits/stl_vector.h:107:19, col:21>)


        _Vector_base<_Tp, _Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9266a60 </usr/include/c++/4.6/bits/stl_vector.h:110:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9265c80 '__a' 'const allocator_type &')
) (CompoundStmt 0x9266ac0 </usr/include/c++/4.6/bits/stl_vector.h:110:22, col:24>)


        _Vector_base<_Tp, _Alloc>(size_t __n) : _M_impl() (CompoundStmt 0x9266ee0 </usr/include/c++/4.6/bits/stl_vector.h:114:7, line:118:7>
  (BinaryOperator 0x9266c10 <line:115:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9266b58 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9266b20 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9266b10 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9266bf0 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9266ba0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9266b90 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9266bd4 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9265da0 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9266d28 <line:116:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9266c70 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9266c38 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9266c28 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9266cf0 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9266cb8 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9266ca8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9266ec8 <line:117:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9266d88 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9266d50 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9266d40 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9266ea0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x9266e58 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (CXXDependentScopeMemberExpr 0x9266e08 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9266dd0 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9266dc0 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9266e3c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9265da0 '__n' 'size_t':'unsigned int'))))


        _Vector_base<_Tp, _Alloc>(size_t __n, const allocator_type &__a) : _M_impl((DeclRefExpr 0x9266efc </usr/include/c++/4.6/bits/stl_vector.h:121:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9265ec0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9267330 </usr/include/c++/4.6/bits/stl_vector.h:122:7, line:126:7>
  (BinaryOperator 0x9267060 <line:123:2, col:48> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9266fa8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9266f70 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9266f60 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CallExpr 0x9267040 <col:27, col:48> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9266ff0 <col:27, col:33> '<dependent type>' lvalue
        (CXXThisExpr 0x9266fe0 <col:27> '_Vector_base<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x9267024 <col:45> 'size_t':'unsigned int' lvalue ParmVar 0x9265e70 '__n' 'size_t':'unsigned int')))
  (BinaryOperator 0x9267178 <line:124:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92670c0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9267088 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9267078 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9267140 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9267108 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x92670f8 <col:28> '_Vector_base<_Tp, _Alloc> *' this))))
  (BinaryOperator 0x9267318 <line:125:2, col:61> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92671d8 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92671a0 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9267190 <col:2> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x92672f0 <col:36, col:61> '<dependent type>'
      (UnresolvedLookupExpr 0x92672a8 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (CXXDependentScopeMemberExpr 0x9267258 <col:36, col:50> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9267220 <col:36, col:42> '<dependent type>' lvalue
          (CXXThisExpr 0x9267210 <col:36> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x926728c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x9265e70 '__n' 'size_t':'unsigned int'))))


        void ~_Vector_base<_Tp, _Alloc>() (CompoundStmt 0x9267588 </usr/include/c++/4.6/bits/stl_vector.h:142:7, line:143:36>
  (CallExpr 0x9267560 <line:142:9, line:143:33> '<dependent type>'
    (MemberExpr 0x9267360 <line:142:9> '<bound member function type>' ->_M_deallocate 0x9266360
      (CXXThisExpr 0x9267350 <col:9> '_Vector_base<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x92673c8 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9267390 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9267380 <col:23> '_Vector_base<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x9267538 <col:47, line:143:25> '<dependent type>'
      (UnresolvedLookupExpr 0x9267500 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
      (CXXDependentScopeMemberExpr 0x9267448 <line:142:47, col:61> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9267410 <col:47, col:53> '<dependent type>' lvalue
          (CXXThisExpr 0x9267400 <col:47> '_Vector_base<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x92674c8 <line:143:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9267490 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9267480 <col:11> '_Vector_base<_Tp, _Alloc> *' this))))))


    public:
    public:
        std::_Vector_base::_Vector_impl _M_impl;
        typename _Tp_alloc_type::pointer _M_allocate(size_t __n) (CompoundStmt 0x92676f0 </usr/include/c++/4.6/bits/stl_vector.h:150:7, col:54>
  (ReturnStmt 0x92676e0 <col:9, col:51>
    (ConditionalOperator 0x92676c0 <col:16, col:51> '<dependent type>'
      (BinaryOperator 0x92675f0 <col:16, col:23> '_Bool' '!='
        (ImplicitCastExpr 0x92675d0 <col:16> 'size_t':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x926759c <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x9266120 '__n' 'size_t':'unsigned int'))
        (ImplicitCastExpr 0x92675e0 <col:23> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x92675b8 <col:23> 'int' 0)))
      (CallExpr 0x9267688 <col:27, col:47> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9267638 <col:27, col:35> '<dependent type>' lvalue
          (MemberExpr 0x9267618 <col:27> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x92660c0
            (CXXThisExpr 0x9267608 <col:27> '_Vector_base<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x926766c <col:44> 'size_t':'unsigned int' lvalue ParmVar 0x9266120 '__n' 'size_t':'unsigned int'))
      (IntegerLiteral 0x92676a8 <col:51> 'int' 0))))


        void _M_deallocate(typename _Tp_alloc_type::pointer __p, size_t __n) (CompoundStmt 0x9267800 </usr/include/c++/4.6/bits/stl_vector.h:154:7, line:157:7>
  (IfStmt 0x92677e0 <line:155:2, line:156:31>
    <<<NULL>>>
    (DeclRefExpr 0x9267704 <line:155:6> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9266280 '__p' 'typename _Tp_alloc_type::pointer')
    (CallExpr 0x92677b8 <line:156:4, col:31> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9267750 <col:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9267730 <col:4> 'struct std::_Vector_base::_Vector_impl' lvalue ->_M_impl 0x92660c0
          (CXXThisExpr 0x9267720 <col:4> '_Vector_base<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9267784 <col:23> 'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9266280 '__p' 'typename _Tp_alloc_type::pointer')
      (DeclRefExpr 0x926779c <col:28> 'size_t':'unsigned int' lvalue ParmVar 0x92662c0 '__n' 'size_t':'unsigned int'))
    <<<NULL>>>))


    };
    template <typename _Tp = std::basic_string<char>, typename _Alloc = std::allocator<std::basic_string<char> >> class vector
template <typename _Tp = std::basic_string<wchar_t>, typename _Alloc = std::allocator<std::basic_string<wchar_t> >> class vector
template <typename _Tp, typename _Alloc = std::allocator<_Tp>> class vector : protected _Vector_base<_Tp, _Alloc> {
        class vector;
        typedef typename _Alloc::value_type _Alloc_value_type;
        typedef _Vector_base<_Tp, _Alloc> _Base;
        typedef typename _Base::_Tp_alloc_type _Tp_alloc_type;
    public:
    public:
        typedef _Tp value_type;
        typedef typename _Tp_alloc_type::pointer pointer;
        typedef typename _Tp_alloc_type::const_pointer const_pointer;
        typedef typename _Tp_alloc_type::reference reference;
        typedef typename _Tp_alloc_type::const_reference const_reference;
        typedef __gnu_cxx::__normal_iterator<pointer, vector<_Tp, _Alloc> > iterator;
        typedef __gnu_cxx::__normal_iterator<const_pointer, vector<_Tp, _Alloc> > const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef _Alloc allocator_type;
    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Tp, _Alloc>() : _Base() (CompoundStmt 0x9271660 </usr/include/c++/4.6/bits/stl_vector.h:218:17, col:19>)


        vector<_Tp, _Alloc>(const allocator_type &__a) : _Base((DeclRefExpr 0x9271670 </usr/include/c++/4.6/bits/stl_vector.h:226:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9268d50 '__a' 'const allocator_type &')
) (CompoundStmt 0x92716d0 </usr/include/c++/4.6/bits/stl_vector.h:226:20, col:22>)


        vector<_Tp, _Alloc>(size_type __n, const value_type &__value = (CXXUnresolvedConstructExpr 0x92715a0 </usr/include/c++/4.6/bits/stl_vector.h:263:57, col:68> 'value_type':'_Tp')
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x92715c0 </usr/include/c++/4.6/bits/stl_vector.h:264:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x92716e0 </usr/include/c++/4.6/bits/stl_vector.h:265:15> 'size_type':'unsigned int' lvalue ParmVar 0x9268e60 '__n' 'size_type':'unsigned int')
, (DeclRefExpr 0x92716f8 </usr/include/c++/4.6/bits/stl_vector.h:265:20> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9268f30 '__a' 'const allocator_type &')
) (CompoundStmt 0x9271800 </usr/include/c++/4.6/bits/stl_vector.h:266:7, col:43>
  (CallExpr 0x92717d8 <col:9, col:40> '<dependent type>'
    (MemberExpr 0x9271788 <col:9> '<bound member function type>' ->_M_fill_initialize 0x926fc30
      (CXXThisExpr 0x9271778 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x92717a8 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9268e60 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x92717c0 <col:33> 'const value_type':'const _Tp' lvalue ParmVar 0x9268ee0 '__value' 'const value_type &')))


        vector<_Tp, _Alloc>(const vector<_Tp, _Alloc> &__x) : _Base((CallExpr 0x9271868 </usr/include/c++/4.6/bits/stl_vector.h:279:15, col:24> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9271830 <col:15, col:19> '<dependent type>' lvalue
    (DeclRefExpr 0x9271814 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92690a0 '__x' 'const vector<_Tp, _Alloc> &')))
, (CallExpr 0x92718d8 </usr/include/c++/4.6/bits/stl_vector.h:279:27, col:51> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x92718a0 <col:27, col:31> '<dependent type>' lvalue
    (DeclRefExpr 0x9271884 <col:27> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92690a0 '__x' 'const vector<_Tp, _Alloc> &')))
) (CompoundStmt 0x9271c10 </usr/include/c++/4.6/bits/stl_vector.h:280:7, line:284:7>
  (BinaryOperator 0x9271bf8 <line:280:9, line:283:32> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9271988 <line:280:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9271950 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x9271940 <col:9> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9271bc8 <line:281:4, line:283:32> '<dependent type>'
      (UnresolvedLookupExpr 0x92719d8 <line:281:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
      (CallExpr 0x9271a60 <col:32, col:42> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9271a28 <col:32, col:36> '<dependent type>' lvalue
          (DeclRefExpr 0x9271a10 <col:32> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92690a0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9271ad0 <col:45, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9271a98 <col:45, col:49> '<dependent type>' lvalue
          (DeclRefExpr 0x9271a7c <col:45> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92690a0 '__x' 'const vector<_Tp, _Alloc> &')))
      (CXXDependentScopeMemberExpr 0x9271b38 <line:282:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9271b00 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x9271af0 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x9271ba8 <line:283:11, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x9271b6c <col:11> '<dependent type>' lvalue)))))


        template <typename _InputIterator> vector<_Tp, _Alloc>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x92715e0 </usr/include/c++/4.6/bits/stl_vector.h:335:37, col:52> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9271c24 </usr/include/c++/4.6/bits/stl_vector.h:336:10> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9269280 '__a' 'const allocator_type &')
) (CompoundStmt 0x9271ea8 </usr/include/c++/4.6/bits/stl_vector.h:337:9, line:341:2>
  (DeclStmt 0x9271dc0 <line:339:4, col:72>
    0x9271d90 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9271e80 <line:340:4, col:55> '<dependent type>'
    (UnresolvedMemberExpr 0x9271de0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9271e20 <col:27> '_InputIterator' lvalue ParmVar 0x92691f0 '__first' '_InputIterator')
    (DeclRefExpr 0x9271e38 <col:36> '_InputIterator' lvalue ParmVar 0x9269230 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9271e68 <col:44, col:54> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Tp, _Alloc>() (CompoundStmt 0x92720a8 </usr/include/c++/4.6/bits/stl_vector.h:350:7, line:351:33>
  (CallExpr 0x9272080 <line:350:9, line:351:30> '<dependent type>'
    (UnresolvedLookupExpr 0x9271ee8 <line:350:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
    (CXXDependentScopeMemberExpr 0x9271f70 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9271f38 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9271f28 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9271ff0 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9271fb8 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9271fa8 <col:47> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9272060 <line:351:9, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x9272024 <col:9> '<dependent type>' lvalue))))


        vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x);
        void assign(size_type __n, const value_type &__val) (CompoundStmt 0x9272148 </usr/include/c++/4.6/bits/stl_vector.h:413:7, col:37>
  (CallExpr 0x9272120 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x92720d0 <col:9> '<bound member function type>' ->_M_fill_assign 0x92705d0
      (CXXThisExpr 0x92720c0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x92720f0 <col:24> 'size_type':'unsigned int' lvalue ParmVar 0x926cee0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9272108 <col:29> 'const value_type':'const _Tp' lvalue ParmVar 0x926cf30 '__val' 'const value_type &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9272378 </usr/include/c++/4.6/bits/stl_vector.h:430:9, line:434:2>
  (DeclStmt 0x9272290 <line:432:4, col:72>
    0x9272260 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9272350 <line:433:4, col:51> '<dependent type>'
    (UnresolvedMemberExpr 0x92722b0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92722f0 <col:23> '_InputIterator' lvalue ParmVar 0x926d0a0 '__first' '_InputIterator')
    (DeclRefExpr 0x9272308 <col:32> '_InputIterator' lvalue ParmVar 0x926d0e0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9272338 <col:40, col:50> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        using _Base::1;
        iterator begin() (CompoundStmt 0x9272448 </usr/include/c++/4.6/bits/stl_vector.h:464:7, col:50>
  (ReturnStmt 0x9272438 <col:9, col:47>
    (CXXUnresolvedConstructExpr 0x9272418 <col:16, col:47> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x92723e0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92723a8 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9272398 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator begin() const (CompoundStmt 0x9272538 </usr/include/c++/4.6/bits/stl_vector.h:473:7, col:56>
  (ReturnStmt 0x9272528 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x9272508 <col:16, col:53> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x92724d0 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9272498 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9272488 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        iterator end() (CompoundStmt 0x9272608 </usr/include/c++/4.6/bits/stl_vector.h:482:7, col:51>
  (ReturnStmt 0x92725f8 <col:9, col:48>
    (CXXUnresolvedConstructExpr 0x92725d8 <col:16, col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x92725a0 <col:25, col:39> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9272568 <col:25, col:31> '<dependent type>' lvalue
          (CXXThisExpr 0x9272558 <col:25> 'vector<_Tp, _Alloc> *' this))))))


        const_iterator end() const (CompoundStmt 0x92726d8 </usr/include/c++/4.6/bits/stl_vector.h:491:7, col:57>
  (ReturnStmt 0x92726c8 <col:9, col:54>
    (CXXUnresolvedConstructExpr 0x92726a8 <col:16, col:54> 'const_iterator':'__normal_iterator<const_pointer, vector<_Tp, _Alloc> >'
      (CXXDependentScopeMemberExpr 0x9272670 <col:31, col:45> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9272638 <col:31, col:37> '<dependent type>' lvalue
          (CXXThisExpr 0x9272628 <col:31> 'const vector<_Tp, _Alloc> *' this))))))


        reverse_iterator rbegin() (CompoundStmt 0x9272798 </usr/include/c++/4.6/bits/stl_vector.h:500:7, col:41>
  (ReturnStmt 0x9272788 <col:9, col:38>
    (CXXUnresolvedConstructExpr 0x9272768 <col:16, col:38> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x9272748 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x9272708 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x9272858 </usr/include/c++/4.6/bits/stl_vector.h:509:7, col:47>
  (ReturnStmt 0x9272848 <col:9, col:44>
    (CXXUnresolvedConstructExpr 0x9272828 <col:16, col:44> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9272808 <col:39, col:43> '<dependent type>'
        (UnresolvedMemberExpr 0x92727c8 <col:39> '<bound member function type>' lvalue)))))


        reverse_iterator rend() (CompoundStmt 0x9272918 </usr/include/c++/4.6/bits/stl_vector.h:518:7, col:43>
  (ReturnStmt 0x9272908 <col:9, col:40>
    (CXXUnresolvedConstructExpr 0x92728e8 <col:16, col:40> 'reverse_iterator':'reverse_iterator<iterator>'
      (CallExpr 0x92728c8 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9272888 <col:33> '<bound member function type>' lvalue)))))


        const_reverse_iterator rend() const (CompoundStmt 0x92729d8 </usr/include/c++/4.6/bits/stl_vector.h:527:7, col:49>
  (ReturnStmt 0x92729c8 <col:9, col:46>
    (CXXUnresolvedConstructExpr 0x92729a8 <col:16, col:46> 'const_reverse_iterator':'reverse_iterator<const_iterator>'
      (CallExpr 0x9272988 <col:39, col:45> '<dependent type>'
        (UnresolvedMemberExpr 0x9272948 <col:39> '<bound member function type>' lvalue)))))


        size_type size() const (CompoundStmt 0x9272b88 </usr/include/c++/4.6/bits/stl_vector.h:571:7, col:77>
  (ReturnStmt 0x9272b78 <col:9, col:74>
    (CXXUnresolvedConstructExpr 0x9272b58 <col:16, col:74> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x9272b30 <col:26, col:66> '<dependent type>'
        (UnresolvedLookupExpr 0x9272af8 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CXXDependentScopeMemberExpr 0x9272a40 <col:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9272a08 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x92729f8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9272ac0 <col:52, col:66> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9272a88 <col:52, col:58> '<dependent type>' lvalue
            (CXXThisExpr 0x9272a78 <col:52> 'const vector<_Tp, _Alloc> *' this)))))))


        size_type max_size() const (CompoundStmt 0x9272c60 </usr/include/c++/4.6/bits/stl_vector.h:576:7, col:50>
  (ReturnStmt 0x9272c50 <col:9, col:47>
    (CallExpr 0x9272c30 <col:16, col:47> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9272bf8 <col:16, col:38> '<dependent type>' lvalue
        (CallExpr 0x9272bd8 <col:16, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x9272b9c <col:16> '<dependent type>' lvalue))))))


        void resize(size_type __new_size, value_type __x = (CXXUnresolvedConstructExpr 0x9271600 </usr/include/c++/4.6/bits/stl_vector.h:629:53, col:64> 'value_type':'_Tp')
) (CompoundStmt 0x9273190 </usr/include/c++/4.6/bits/stl_vector.h:630:7, line:635:7>
  (IfStmt 0x9273170 <line:631:2, line:634:55>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9272d28 <line:631:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9272ce0 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
      (DeclRefExpr 0x9272c74 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x926d840 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x9272cc0 <col:19, col:24> '<dependent type>'
        (MemberExpr 0x9272ca0 <col:19> '<bound member function type>' ->size 0x926d750
          (CXXThisExpr 0x9272c90 <col:19> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9272ef8 <line:632:4, col:42> '<dependent type>'
      (UnresolvedMemberExpr 0x9272d60 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x9272df8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x9272db8 <col:11> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x9272eb8 <col:18, col:36> '<dependent type>'
        (UnresolvedLookupExpr 0x9272e80 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (DeclRefExpr 0x9272e14 <col:18> 'size_type':'unsigned int' lvalue ParmVar 0x926d840 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9272e60 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x9272e40 <col:31> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x9272e30 <col:31> 'vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9272edc <col:39> 'value_type':'_Tp' lvalue ParmVar 0x926d880 '__x' 'value_type':'_Tp'))
    (IfStmt 0x9273150 <line:633:7, line:634:55>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x9272fd0 <line:633:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x9272f88 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
        (DeclRefExpr 0x9272f20 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x926d840 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x9272f68 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x9272f48 <col:24> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x9272f38 <col:24> 'vector<_Tp, _Alloc> *' this))))
      (CallExpr 0x9273130 <line:634:4, col:55> '<dependent type>'
        (MemberExpr 0x9273008 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9271530
          (CXXThisExpr 0x9272ff8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x9273108 <col:20, col:45> '<dependent type>'
          (UnresolvedLookupExpr 0x92730c0 <col:43, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (CXXDependentScopeMemberExpr 0x9273070 <col:20, col:34> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9273038 <col:20, col:26> '<dependent type>' lvalue
              (CXXThisExpr 0x9273028 <col:20> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92730a4 <col:45> 'size_type':'unsigned int' lvalue ParmVar 0x926d840 '__new_size' 'size_type':'unsigned int')))
      <<<NULL>>>)))


        size_type capacity() const (CompoundStmt 0x9273340 </usr/include/c++/4.6/bits/stl_vector.h:651:7, line:652:32>
  (ReturnStmt 0x9273330 <line:651:9, line:652:29>
    (CXXUnresolvedConstructExpr 0x9273310 <line:651:16, line:652:29> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x92732e8 <line:651:26, line:652:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92732b0 <col:5, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CXXDependentScopeMemberExpr 0x92731f8 <line:651:26, col:40> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92731c0 <col:26, col:32> '<dependent type>' lvalue
            (CXXThisExpr 0x92731b0 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9273278 <line:652:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9273240 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x9273230 <col:7> 'const vector<_Tp, _Alloc> *' this)))))))


        bool empty() const (CompoundStmt 0x92734d0 </usr/include/c++/4.6/bits/stl_vector.h:660:7, col:34>
  (ReturnStmt 0x92734c0 <col:9, col:31>
    (CXXOperatorCallExpr 0x9273498 <col:16, col:31> '<dependent type>'
      (UnresolvedLookupExpr 0x9273438 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
      (CallExpr 0x92733a8 <col:16, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9273368 <col:16> '<bound member function type>' lvalue))
      (CallExpr 0x9273418 <col:27, col:31> '<dependent type>'
        (UnresolvedMemberExpr 0x92733d8 <col:27> '<bound member function type>' lvalue)))))


        void reserve(size_type __n);
        reference operator[](size_type __n) (CompoundStmt 0x9273630 </usr/include/c++/4.6/bits/stl_vector.h:696:7, col:49>
  (ReturnStmt 0x9273620 <col:9, col:46>
    (UnaryOperator 0x9273608 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x92735f0 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x92735c8 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x9273580 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (CXXDependentScopeMemberExpr 0x9273530 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92734f8 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x92734e8 <col:18> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9273564 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x926dba0 '__n' 'size_type':'unsigned int'))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x9273790 </usr/include/c++/4.6/bits/stl_vector.h:711:7, col:49>
  (ReturnStmt 0x9273780 <col:9, col:46>
    (UnaryOperator 0x9273768 <col:16, col:46> '<dependent type>' prefix '*'
      (ParenExpr 0x9273750 <col:17, col:46> '<dependent type>'
        (CXXOperatorCallExpr 0x9273728 <col:18, col:43> '<dependent type>'
          (UnresolvedLookupExpr 0x92736e0 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
          (CXXDependentScopeMemberExpr 0x9273690 <col:18, col:32> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x9273658 <col:18, col:24> '<dependent type>' lvalue
              (CXXThisExpr 0x9273648 <col:18> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92736c4 <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x926dcd0 '__n' 'size_type':'unsigned int'))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x9273990 </usr/include/c++/4.6/bits/stl_vector.h:717:7, line:720:7>
  (IfStmt 0x9273970 <line:718:2, line:719:54>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9273870 <line:718:6, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x9273828 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0)
      (DeclRefExpr 0x92737a4 <col:6> 'size_type':'unsigned int' lvalue ParmVar 0x926de30 '__n' 'size_type':'unsigned int')
      (CallExpr 0x9273808 <col:13, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92737d0 <col:13, col:19> '<dependent type>' lvalue
          (CXXThisExpr 0x92737c0 <col:13> 'const vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x9273940 <line:719:4, col:54> 'void'
      (ImplicitCastExpr 0x9273930 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9273914 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9273960 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x9273900 <col:24, col:30> 'const char [23]' lvalue
          (StringLiteral 0x92738cc </usr/include/c++/4.6/bits/stl_vector.h:719:29> 'const char [23]' lvalue "vector::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x9273a90 </usr/include/c++/4.6/bits/stl_vector.h:736:7, line:739:7>
  (CallExpr 0x92739f0 <line:737:2, col:20> '<dependent type>'
    (MemberExpr 0x92739b8 <col:2> '<bound member function type>' ->_M_range_check 0x926ded0
      (CXXThisExpr 0x92739a8 <col:2> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x92739d8 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x926df90 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9273a80 <line:738:2, col:20>
    (ArraySubscriptExpr 0x9273a68 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9273a38 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9273a20 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9273a10 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9273a4c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x926df90 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x9273b90 </usr/include/c++/4.6/bits/stl_vector.h:754:7, line:757:7>
  (CallExpr 0x9273af0 <line:755:2, col:20> '<dependent type>'
    (MemberExpr 0x9273ab8 <col:2> '<bound member function type>' ->_M_range_check 0x926ded0
      (CXXThisExpr 0x9273aa8 <col:2> 'const vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9273ad8 <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x926e050 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x9273b80 <line:756:2, col:20>
    (ArraySubscriptExpr 0x9273b68 <col:9, col:20> '<dependent type>' lvalue
      (ParenExpr 0x9273b38 <col:9, col:15> '<dependent type>'
        (UnaryOperator 0x9273b20 <col:10, col:11> '<dependent type>' prefix '*'
          (CXXThisExpr 0x9273b10 <col:11> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x9273b4c <col:17> 'size_type':'unsigned int' lvalue ParmVar 0x926e050 '__n' 'size_type':'unsigned int'))))


        reference front() (CompoundStmt 0x9273c40 </usr/include/c++/4.6/bits/stl_vector.h:765:7, col:26>
  (ReturnStmt 0x9273c30 <col:9, col:23>
    (UnaryOperator 0x9273c18 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9273bf8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9273bb8 <col:17> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x9273cf0 </usr/include/c++/4.6/bits/stl_vector.h:773:7, col:26>
  (ReturnStmt 0x9273ce0 <col:9, col:23>
    (UnaryOperator 0x9273cc8 <col:16, col:23> '<dependent type>' prefix '*'
      (CallExpr 0x9273ca8 <col:17, col:23> '<dependent type>'
        (UnresolvedMemberExpr 0x9273c68 <col:17> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x9273e30 </usr/include/c++/4.6/bits/stl_vector.h:781:7, col:30>
  (ReturnStmt 0x9273e20 <col:9, col:27>
    (UnaryOperator 0x9273e08 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9273df0 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9273dc8 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9273d90 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x9273d58 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9273d18 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9273d78 <col:26> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x9273f70 </usr/include/c++/4.6/bits/stl_vector.h:789:7, col:30>
  (ReturnStmt 0x9273f60 <col:9, col:27>
    (UnaryOperator 0x9273f48 <col:16, col:27> '<dependent type>' prefix '*'
      (ParenExpr 0x9273f30 <col:17, col:27> '<dependent type>'
        (CXXOperatorCallExpr 0x9273f08 <col:18, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x9273ed0 <col:24, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
          (CallExpr 0x9273e98 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x9273e58 <col:18> '<bound member function type>' lvalue))
          (IntegerLiteral 0x9273eb8 <col:26> 'int' 1))))))


        pointer data() (CompoundStmt 0x9274078 </usr/include/c++/4.6/bits/stl_vector.h:804:7, col:43>
  (ReturnStmt 0x9274068 <col:9, col:40>
    (CallExpr 0x9274048 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x9273fa0 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
      (CallExpr 0x9274028 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x9273fe8 <col:33> '<bound member function type>' lvalue)))))


        const_pointer data() const (CompoundStmt 0x9274180 </usr/include/c++/4.6/bits/stl_vector.h:812:7, col:43>
  (ReturnStmt 0x9274170 <col:9, col:40>
    (CallExpr 0x9274150 <col:16, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x92740a8 <col:16, col:21> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3f800)
      (CallExpr 0x9274130 <col:33, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x92740f0 <col:33> '<bound member function type>' lvalue)))))


        void push_back(const value_type &__x) (CompoundStmt 0x9274608 </usr/include/c++/4.6/bits/stl_vector.h:827:7, line:835:7>
  (IfStmt 0x92745e8 <line:828:2, line:834:28>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92742f0 <line:828:6, col:47> '<dependent type>'
      (UnresolvedLookupExpr 0x9274298 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (CXXDependentScopeMemberExpr 0x92741e0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92741a8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9274198 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x9274260 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9274228 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x9274218 <col:33> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x92744f0 <line:829:4, line:832:4>
      (CallExpr 0x9274430 <line:830:6, col:58> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9274360 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9274328 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x9274318 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92743e0 <col:30, col:44> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92743a8 <col:30, col:36> '<dependent type>' lvalue
            (CXXThisExpr 0x9274398 <col:30> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x9274414 <col:55> 'const value_type':'const _Tp' lvalue ParmVar 0x926e4e0 '__x' 'const value_type &'))
      (UnaryOperator 0x92744d8 <line:831:6, col:22> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x92744a0 <col:8, col:22> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x9274468 <col:8, col:14> '<dependent type>' lvalue
            (CXXThisExpr 0x9274458 <col:8> 'vector<_Tp, _Alloc> *' this)))))
    (CallExpr 0x92745c0 <line:834:4, col:28> '<dependent type>'
      (MemberExpr 0x9274518 <col:4> '<bound member function type>' ->_M_insert_aux 0x92712e0
        (CXXThisExpr 0x9274508 <col:4> 'vector<_Tp, _Alloc> *' this))
      (CallExpr 0x9274588 <col:18, col:22> '<dependent type>'
        (UnresolvedMemberExpr 0x9274548 <col:18> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92745a4 <col:25> 'const value_type':'const _Tp' lvalue ParmVar 0x926e4e0 '__x' 'const value_type &'))))


        void pop_back() (CompoundStmt 0x92747d8 </usr/include/c++/4.6/bits/stl_vector.h:858:7, line:861:7>
  (UnaryOperator 0x92746a0 <line:859:2, col:18> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x9274668 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274630 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9274620 <col:4> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x92747b8 <line:860:2, col:47> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9274700 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92746c8 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x92746b8 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9274780 <col:24, col:38> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274748 <col:24, col:30> '<dependent type>' lvalue
        (CXXThisExpr 0x9274738 <col:24> 'vector<_Tp, _Alloc> *' this)))))


        iterator insert(iterator __position, const value_type &__x);
        void insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x9274890 </usr/include/c++/4.6/bits/stl_vector.h:944:7, col:47>
  (CallExpr 0x9274868 <col:9, col:44> '<dependent type>'
    (MemberExpr 0x9274800 <col:9> '<bound member function type>' ->_M_fill_insert 0x9271170
      (CXXThisExpr 0x92747f0 <col:9> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9274820 <col:24> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x926e7b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9274838 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x926e7f0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9274850 <col:41> 'const value_type':'const _Tp' lvalue ParmVar 0x926e840 '__x' 'const value_type &')))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x9274ae0 </usr/include/c++/4.6/bits/stl_vector.h:964:9, line:968:2>
  (DeclStmt 0x92749d0 <line:966:4, col:72>
    0x92749a0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9274ab0 <line:967:4, col:63> '<dependent type>'
    (UnresolvedMemberExpr 0x92749f0 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9274a30 <col:23> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x926e9d0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9274a48 <col:35> '_InputIterator' lvalue ParmVar 0x926ea10 '__first' '_InputIterator')
    (DeclRefExpr 0x9274a60 <col:44> '_InputIterator' lvalue ParmVar 0x926ea50 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9274a98 <col:52, col:62> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator erase(iterator __position);
        iterator erase(iterator __first, iterator __last);
        void swap(vector<_Tp, _Alloc> &__x) (CompoundStmt 0x927f070 </usr/include/c++/4.6/bits/stl_vector.h:1020:7, line:1030:7>
  (CallExpr 0x9274c68 <line:1021:2, col:56> '<dependent type>'
    (UnresolvedLookupExpr 0x9274b20 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770)
    (CXXDependentScopeMemberExpr 0x9274ba8 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274b70 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9274b60 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9274c30 <col:36, col:48> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274bf8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9274bdc <col:36> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x926ee20 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x927ec00 <line:1022:2, col:58> '<dependent type>'
    (UnresolvedLookupExpr 0x9274cb0 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770)
    (CXXDependentScopeMemberExpr 0x9274d38 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274d00 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x9274cf0 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x9274dc0 <col:37, col:49> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9274d88 <col:37, col:41> '<dependent type>' lvalue
        (DeclRefExpr 0x9274d6c <col:37> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x926ee20 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x927ed90 <line:1023:2, line:1024:34> '<dependent type>'
    (UnresolvedLookupExpr 0x927ec48 <line:1023:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770)
    (CXXDependentScopeMemberExpr 0x927ecd0 <col:12, col:26> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927ec98 <col:12, col:18> '<dependent type>' lvalue
        (CXXThisExpr 0x927ec88 <col:12> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x927ed58 <line:1024:5, col:17> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927ed20 <col:5, col:9> '<dependent type>' lvalue
        (DeclRefExpr 0x927ed04 <col:5> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x926ee20 '__x' 'vector<_Tp, _Alloc> &'))))
  (CallExpr 0x927f048 <line:1028:2, line:1029:36> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x927ef48 <line:1028:2, col:37> '<dependent type>' lvalue)
    (CallExpr 0x927efb8 <col:46, col:66> '<dependent type>'
      (UnresolvedMemberExpr 0x927ef7c <col:46> '<dependent type>' lvalue))
    (CallExpr 0x927f028 <line:1029:11, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x927eff0 <col:11, col:15> '<dependent type>' lvalue
        (DeclRefExpr 0x927efd4 <col:11> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x926ee20 '__x' 'vector<_Tp, _Alloc> &')))))


        void clear() (CompoundStmt 0x927f160 </usr/include/c++/4.6/bits/stl_vector.h:1040:7, col:50>
  (CallExpr 0x927f140 <col:9, col:47> '<dependent type>'
    (MemberExpr 0x927f0a0 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9271530
      (CXXThisExpr 0x927f090 <col:9> 'vector<_Tp, _Alloc> *' this))
    (CXXDependentScopeMemberExpr 0x927f108 <col:25, col:39> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927f0d0 <col:25, col:31> '<dependent type>' lvalue
        (CXXThisExpr 0x927f0c0 <col:25> 'vector<_Tp, _Alloc> *' this)))))


    protected:
    protected:
        template <typename _ForwardIterator> pointer _M_allocate_and_copy(size_type __n, _ForwardIterator __first, _ForwardIterator __last) (CompoundStmt 0x927f4e0 </usr/include/c++/4.6/bits/stl_vector.h:1051:9, line:1064:2>
  (DeclStmt 0x927f238 <line:1052:4, col:45>
    0x927f180 "pointer __result =
      (CallExpr 0x927f218 <col:23, col:44> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x927f1c8 <col:23, col:29> '<dependent type>' lvalue
          (CXXThisExpr 0x927f1b8 <col:23> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x927f1fc <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x926f020 '__n' 'size_type':'unsigned int'))")
  (IfStmt 0x927f3d0 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/stl_vector.h:1058:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x927f248 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
    (CompoundStmt 0x927f3b8 </usr/include/c++/4.6/bits/stl_vector.h:1054:6, line:1058:6>
      (CallExpr 0x927f360 <line:1055:8, line:1056:29> '<dependent type>'
        (UnresolvedLookupExpr 0x927f280 <line:1055:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
        (DeclRefExpr 0x927f2b8 <col:36> '_ForwardIterator' lvalue ParmVar 0x926f060 '__first' '_ForwardIterator')
        (DeclRefExpr 0x927f2d0 <col:45> '_ForwardIterator' lvalue ParmVar 0x926f0a0 '__last' '_ForwardIterator')
        (DeclRefExpr 0x927f2e8 <col:53> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x927f180 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (CallExpr 0x927f340 <line:1056:8, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x927f300 <col:8> '<dependent type>' lvalue)))
      (ReturnStmt 0x927f3a8 <line:1057:8, col:15>
        (DeclRefExpr 0x927f38c <col:15> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x927f180 '__result' 'pointer':'typename _Tp_alloc_type::pointer')))
    <<<NULL>>>)
  (IfStmt 0x927f4c0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/stl_vector.h:1063:6>
    <<<NULL>>>
    (CXXBoolLiteralExpr 0x927f3f0 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
    (CompoundStmt 0x927f4a8 </usr/include/c++/4.6/bits/stl_vector.h:1060:6, line:1063:6>
      (CallExpr 0x927f470 <line:1061:8, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x927f400 <col:8> '<dependent type>' lvalue)
        (DeclRefExpr 0x927f43c <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x927f180 '__result' 'pointer':'typename _Tp_alloc_type::pointer')
        (DeclRefExpr 0x927f454 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x926f020 '__n' 'size_type':'unsigned int'))
      (NullStmt 0x927f498 <line:1062:31>))
    <<<NULL>>>))

;
        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __value, std::__true_type) (CompoundStmt 0x927f890 </usr/include/c++/4.6/bits/stl_vector.h:1076:9, line:1081:2>
  (BinaryOperator 0x927f610 <line:1077:4, col:68> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x927f548 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927f510 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x927f500 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x927f5f0 <col:29, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x927f57c <col:29> '<dependent type>' lvalue)
      (CXXStaticCastExpr 0x927f5d8 <col:41, col:67> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x927f5b8 <col:64> '_Integer' lvalue ParmVar 0x926f260 '__n' '_Integer'))))
  (BinaryOperator 0x927f7d0 <line:1078:4, line:1079:57> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x927f670 <line:1078:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927f638 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x927f628 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x927f7a8 <line:1079:6, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x927f760 <col:29, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (CXXDependentScopeMemberExpr 0x927f6f0 <col:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x927f6b8 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x927f6a8 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CXXStaticCastExpr 0x927f748 <col:31, col:57> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
        (DeclRefExpr 0x927f724 <col:54> '_Integer' lvalue ParmVar 0x926f260 '__n' '_Integer'))))
  (CallExpr 0x927f868 <line:1080:4, col:59> '<dependent type>'
    (MemberExpr 0x927f7f8 <col:4> '<bound member function type>' ->_M_fill_initialize 0x926fc30
      (CXXThisExpr 0x927f7e8 <col:4> 'vector<_Tp, _Alloc> *' this))
    (CXXStaticCastExpr 0x927f838 <col:23, col:49> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x927f818 <col:46> '_Integer' lvalue ParmVar 0x926f260 '__n' '_Integer'))
    (DeclRefExpr 0x927f850 <col:52> '_Integer' lvalue ParmVar 0x926f2a0 '__value' '_Integer')))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x927fac8 </usr/include/c++/4.6/bits/stl_vector.h:1088:9, line:1092:2>
  (DeclStmt 0x927f9e0 <line:1089:4, line:1090:37>
    0x927f9b0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x927faa0 <line:1091:4, col:56> '<dependent type>'
    (UnresolvedMemberExpr 0x927fa00 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x927fa40 <col:24> '_InputIterator' lvalue ParmVar 0x926f4a0 '__first' '_InputIterator')
    (DeclRefExpr 0x927fa58 <col:33> '_InputIterator' lvalue ParmVar 0x926f4e0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x927fa88 <col:41, col:55> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_initialize(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x927fc68 </usr/include/c++/4.6/bits/stl_vector.h:1099:9, line:1102:2>
  (ForStmt 0x927fc40 <line:1100:4, line:1101:24>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x927fb68 <line:1100:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x927fb10 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00)
      (DeclRefExpr 0x927fae0 <col:11> '_InputIterator' lvalue ParmVar 0x926f6e0 '__first' '_InputIterator')
      (DeclRefExpr 0x927faf8 <col:22> '_InputIterator' lvalue ParmVar 0x926f720 '__last' '_InputIterator'))
    (UnaryOperator 0x927fba8 <col:30, col:32> '<dependent type>' prefix '++'
      (DeclRefExpr 0x927fb8c <col:32> '_InputIterator' lvalue ParmVar 0x926f6e0 '__first' '_InputIterator'))
    (CallExpr 0x927fc20 <line:1101:6, col:24> '<dependent type>'
      (MemberExpr 0x927fbd0 <col:6> '<bound member function type>' ->push_back 0x926e560
        (CXXThisExpr 0x927fbc0 <col:6> 'vector<_Tp, _Alloc> *' this))
      (UnaryOperator 0x927fc08 <col:16, col:17> '<dependent type>' prefix '*'
        (DeclRefExpr 0x927fbf0 <col:17> '_InputIterator' lvalue ParmVar 0x926f6e0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_range_initialize(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x9280258 </usr/include/c++/4.6/bits/stl_vector.h:1109:9, line:1117:2>
  (DeclStmt 0x927fd70 <line:1110:4, col:56>
    0x927fc90 "const size_type __n =
      (CallExpr 0x927fd48 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x927fce0 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
        (DeclRefExpr 0x927fd14 <col:40> '_ForwardIterator' lvalue ParmVar 0x926f960 '__first' '_ForwardIterator')
        (DeclRefExpr 0x927fd2c <col:49> '_ForwardIterator' lvalue ParmVar 0x926f9a0 '__last' '_ForwardIterator'))")
  (BinaryOperator 0x927fe80 <line:1111:4, col:50> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x927fdc8 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927fd90 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x927fd80 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x927fe60 <col:29, col:50> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x927fe10 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x927fe00 <col:29> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x927fe44 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x927fc90 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9280020 <line:1112:4, col:63> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x927fee0 <col:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x927fea8 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x927fe98 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CXXOperatorCallExpr 0x927fff8 <col:38, col:63> '<dependent type>'
      (UnresolvedLookupExpr 0x927ffb0 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
      (CXXDependentScopeMemberExpr 0x927ff60 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x927ff28 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x927ff18 <col:38> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x927ff94 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x927fc90 '__n' 'const size_type':'const unsigned int')))
  (BinaryOperator 0x9280240 <line:1113:4, line:1116:27> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9280080 <line:1113:4, col:18> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9280048 <col:4, col:10> '<dependent type>' lvalue
        (CXXThisExpr 0x9280038 <col:4> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9280210 <line:1114:6, line:1116:27> '<dependent type>'
      (UnresolvedLookupExpr 0x92800d0 <line:1114:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
      (DeclRefExpr 0x9280108 <col:34> '_ForwardIterator' lvalue ParmVar 0x926f960 '__first' '_ForwardIterator')
      (DeclRefExpr 0x9280120 <col:43> '_ForwardIterator' lvalue ParmVar 0x926f9a0 '__last' '_ForwardIterator')
      (CXXDependentScopeMemberExpr 0x9280180 <line:1115:6, col:20> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x9280148 <col:6, col:12> '<dependent type>' lvalue
          (CXXThisExpr 0x9280138 <col:6> 'vector<_Tp, _Alloc> *' this)))
      (CallExpr 0x92801f0 <line:1116:6, col:26> '<dependent type>'
        (UnresolvedMemberExpr 0x92801b4 <col:6> '<dependent type>' lvalue)))))

;
        void _M_fill_initialize(size_type __n, const value_type &__value) (CompoundStmt 0x9280528 </usr/include/c++/4.6/bits/stl_vector.h:1123:7, line:1127:7>
  (CallExpr 0x92803e0 <line:1124:2, line:1125:32> '<dependent type>'
    (UnresolvedLookupExpr 0x92802a0 <line:1124:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9262420 0x9262d50)
    (CXXDependentScopeMemberExpr 0x9280320 <col:32, col:46> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92802e8 <col:32, col:38> '<dependent type>' lvalue
        (CXXThisExpr 0x92802d8 <col:32> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9280354 <col:56> 'size_type':'unsigned int' lvalue ParmVar 0x926fb80 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x928036c <col:61> 'const value_type':'const _Tp' lvalue ParmVar 0x926fbd0 '__value' 'const value_type &')
    (CallExpr 0x92803c0 <line:1125:11, col:31> '<dependent type>'
      (UnresolvedMemberExpr 0x9280384 <col:11> '<dependent type>' lvalue)))
  (BinaryOperator 0x9280510 <line:1126:2, col:42> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x9280458 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9280420 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9280410 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x92804d8 <col:28, col:42> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92804a0 <col:28, col:34> '<dependent type>' lvalue
        (CXXThisExpr 0x9280490 <col:28> 'vector<_Tp, _Alloc> *' this)))))


        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x92805c8 </usr/include/c++/4.6/bits/stl_vector.h:1150:9, col:39>
  (CallExpr 0x92805a0 <col:11, col:36> '<dependent type>'
    (MemberExpr 0x9280550 <col:11> '<bound member function type>' ->_M_fill_assign 0x92705d0
      (CXXThisExpr 0x9280540 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9280570 <col:26> '_Integer' lvalue ParmVar 0x926fd00 '__n' '_Integer')
    (DeclRefExpr 0x9280588 <col:31> '_Integer' lvalue ParmVar 0x926fd40 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x92807f8 </usr/include/c++/4.6/bits/stl_vector.h:1157:9, line:1161:2>
  (DeclStmt 0x9280710 <line:1158:4, line:1159:37>
    0x92806e0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x92807d0 <line:1160:4, col:50> '<dependent type>'
    (UnresolvedMemberExpr 0x9280730 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9280770 <col:18> '_InputIterator' lvalue ParmVar 0x926ff10 '__first' '_InputIterator')
    (DeclRefExpr 0x9280788 <col:27> '_InputIterator' lvalue ParmVar 0x926ff50 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x92807b8 <col:35, col:49> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_assign(size_type __n, const value_type &__val);
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x92808b0 </usr/include/c++/4.6/bits/stl_vector.h:1191:9, col:46>
  (CallExpr 0x9280888 <col:11, col:43> '<dependent type>'
    (MemberExpr 0x9280820 <col:11> '<bound member function type>' ->_M_fill_insert 0x9271170
      (CXXThisExpr 0x9280810 <col:11> 'vector<_Tp, _Alloc> *' this))
    (DeclRefExpr 0x9280840 <col:26> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92706a0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9280858 <col:33> '_Integer' lvalue ParmVar 0x92706e0 '__n' '_Integer')
    (DeclRefExpr 0x9280870 <col:38> '_Integer' lvalue ParmVar 0x9270720 '__val' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x9280b00 </usr/include/c++/4.6/bits/stl_vector.h:1198:9, line:1202:2>
  (DeclStmt 0x92809f0 <line:1199:4, line:1200:37>
    0x92809c0 "typedef typename std::iterator_traits<_InputIterator>::iterator_category _IterCategory")
  (CallExpr 0x9280ad0 <line:1201:4, col:59> '<dependent type>'
    (UnresolvedMemberExpr 0x9280a10 <col:4> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9280a50 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x9270920 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
    (DeclRefExpr 0x9280a68 <col:27> '_InputIterator' lvalue ParmVar 0x9270960 '__first' '_InputIterator')
    (DeclRefExpr 0x9280a80 <col:36> '_InputIterator' lvalue ParmVar 0x92709a0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9280ab8 <col:44, col:58> '_IterCategory':'typename std::iterator_traits<_InputIterator>::iterator_category')))

;
        template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag);
        template <typename _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_fill_insert(iterator __pos, size_type __n, const value_type &__x);
        void _M_insert_aux(iterator __position, const value_type &__x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x92811f0 </usr/include/c++/4.6/bits/stl_vector.h:1240:7, line:1246:7>
  (IfStmt 0x9280d60 <line:1241:2, line:1242:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9280c78 <line:1241:6, col:28> '<dependent type>'
      (UnresolvedLookupExpr 0x9280c30 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (CXXOperatorCallExpr 0x9280bf0 <col:6, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x9280bb8 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0)
        (CallExpr 0x9280b48 <col:6, col:15> '<dependent type>'
          (MemberExpr 0x9280b28 <col:6> '<bound member function type>' ->max_size 0x926d7d0
            (CXXThisExpr 0x9280b18 <col:6> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9280b98 <col:19, col:24> '<dependent type>'
          (MemberExpr 0x9280b78 <col:19> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x9280b68 <col:19> 'const vector<_Tp, _Alloc> *' this))))
      (DeclRefExpr 0x9280c14 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x9271350 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x9280d30 <line:1242:4, col:33> 'void'
      (ImplicitCastExpr 0x9280d20 <col:4> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x9280d04 <col:4> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x9280d50 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x9280cf0 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x9280cd4 </usr/include/c++/4.6/bits/stl_vector.h:1242:29> 'const char *' lvalue ParmVar 0x92713a0 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x9280f68 <line:1244:2, col:56>
    0x9280d90 "const size_type __len =
      (CXXOperatorCallExpr 0x9280f40 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x9280ef8 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0)
        (CallExpr 0x9280df8 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x9280dd8 <col:26> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x9280dc8 <col:26> 'const vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x9280ed0 <col:35, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x9280e30 <col:35, col:40> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e79fe0 0x8e7a750)
          (CallExpr 0x9280e98 <col:44, col:49> '<dependent type>'
            (MemberExpr 0x9280e78 <col:44> '<bound member function type>' ->size 0x926d750
              (CXXThisExpr 0x9280e68 <col:44> 'const vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x9280eb4 <col:52> 'size_type':'unsigned int' lvalue ParmVar 0x9271350 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x92811e0 <line:1245:2, col:63>
    (ConditionalOperator 0x92811c0 <col:9, col:63> '<dependent type>'
      (ParenExpr 0x9281140 <col:9, col:46> '<dependent type>'
        (BinaryOperator 0x9281128 <col:10, col:45> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x9281028 <col:10, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x9280fe0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
            (DeclRefExpr 0x9280f78 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x9280d90 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9280fc0 <col:18, col:23> '<dependent type>'
              (MemberExpr 0x9280fa0 <col:18> '<bound member function type>' ->size 0x926d750
                (CXXThisExpr 0x9280f90 <col:18> 'const vector<_Tp, _Alloc> *' this))))
          (CXXOperatorCallExpr 0x9281100 <col:28, col:45> '<dependent type>'
            (UnresolvedLookupExpr 0x92810b8 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0)
            (DeclRefExpr 0x928104c <col:28> 'const size_type':'const unsigned int' lvalue Var 0x9280d90 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x9281098 <col:36, col:45> '<dependent type>'
              (MemberExpr 0x9281078 <col:36> '<bound member function type>' ->max_size 0x926d7d0
                (CXXThisExpr 0x9281068 <col:36> 'const vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x9281188 <col:50, col:59> '<dependent type>'
        (MemberExpr 0x9281168 <col:50> '<bound member function type>' ->max_size 0x926d7d0
          (CXXThisExpr 0x9281158 <col:50> 'const vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x92811a4 <col:63> 'const size_type':'const unsigned int' lvalue Var 0x9280d90 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(pointer __pos) (CompoundStmt 0x9281438 </usr/include/c++/4.6/bits/stl_vector.h:1254:7, line:1257:7>
  (CallExpr 0x9281360 <line:1255:2, col:69> '<dependent type>'
    (UnresolvedLookupExpr 0x9281230 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
    (DeclRefExpr 0x9281270 <col:16> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9271490 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')
    (CXXDependentScopeMemberExpr 0x92812d0 <col:23, col:37> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9281298 <col:23, col:29> '<dependent type>' lvalue
        (CXXThisExpr 0x9281288 <col:23> 'vector<_Tp, _Alloc> *' this)))
    (CallExpr 0x9281340 <col:48, col:68> '<dependent type>'
      (UnresolvedMemberExpr 0x9281304 <col:48> '<dependent type>' lvalue)))
  (BinaryOperator 0x9281420 <line:1256:2, col:28> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92813d0 <col:2, col:16> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9281398 <col:2, col:8> '<dependent type>' lvalue
        (CXXThisExpr 0x9281388 <col:2> 'vector<_Tp, _Alloc> *' this)))
    (DeclRefExpr 0x9281404 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue ParmVar 0x9271490 '__pos' 'pointer':'typename _Tp_alloc_type::pointer')))


    };
    template <typename _Tp, typename _Alloc> inline bool operator==(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9281c60 </usr/include/c++/4.6/bits/stl_vector.h:1274:5, line:1275:61>
  (ReturnStmt 0x9281c50 <line:1274:7, line:1275:58>
    (ParenExpr 0x9281c38 <line:1274:14, line:1275:58> '<dependent type>'
      (BinaryOperator 0x9281c20 <line:1274:15, line:1275:57> '<dependent type>' '&&'
        (CXXOperatorCallExpr 0x9281a30 <line:1274:15, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x92819d0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92818c0 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
          (CallExpr 0x9281940 <col:15, col:24> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9281908 <col:15, col:19> '<dependent type>' lvalue
              (DeclRefExpr 0x92818f0 <col:15> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281650 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x92819b0 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9281978 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x928195c <col:29> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92817c0 '__y' 'const vector<_Tp, _Alloc> &'))))
        (CallExpr 0x9281bf8 <line:1275:11, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x9281a70 <col:11, col:16> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e99510 0x8e99a80)
          (CallExpr 0x9281af8 <col:22, col:32> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9281ac0 <col:22, col:26> '<dependent type>' lvalue
              (DeclRefExpr 0x9281aa8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281650 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9281b68 <col:35, col:43> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9281b30 <col:35, col:39> '<dependent type>' lvalue
              (DeclRefExpr 0x9281b14 <col:35> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281650 '__x' 'const vector<_Tp, _Alloc> &')))
          (CallExpr 0x9281bd8 <col:46, col:56> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x9281ba0 <col:46, col:50> '<dependent type>' lvalue
              (DeclRefExpr 0x9281b84 <col:46> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92817c0 '__y' 'const vector<_Tp, _Alloc> &'))))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9282330 </usr/include/c++/4.6/bits/stl_vector.h:1291:5, line:1292:33>
  (ReturnStmt 0x9282320 <line:1291:7, line:1292:30>
    (CallExpr 0x92822f0 <line:1291:14, line:1292:30> '<dependent type>'
      (UnresolvedLookupExpr 0x92820f8 <line:1291:14, col:19> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e99fd0 0x8e9aee0)
      (CallExpr 0x9282180 <col:43, col:53> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9282148 <col:43, col:47> '<dependent type>' lvalue
          (DeclRefExpr 0x9282130 <col:43> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281e60 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x92821f0 <col:56, col:64> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92821b8 <col:56, col:60> '<dependent type>' lvalue
          (DeclRefExpr 0x928219c <col:56> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281e60 '__x' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x9282260 <line:1292:8, col:18> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9282228 <col:8, col:12> '<dependent type>' lvalue
          (DeclRefExpr 0x928220c <col:8> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281fd0 '__y' 'const vector<_Tp, _Alloc> &')))
      (CallExpr 0x92822d0 <col:21, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9282298 <col:21, col:25> '<dependent type>' lvalue
          (DeclRefExpr 0x928227c <col:21> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9281fd0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator!=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x92828a8 </usr/include/c++/4.6/bits/stl_vector.h:1298:5, col:29>
  (ReturnStmt 0x9282898 <col:7, col:26>
    (UnaryOperator 0x9282880 <col:14, col:26> '<dependent type>' prefix '!'
      (ParenExpr 0x9282868 <col:15, col:26> '<dependent type>'
        (CXXOperatorCallExpr 0x9282840 <col:16, col:23> '<dependent type>'
          (UnresolvedLookupExpr 0x92827e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92818c0 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0)
          (DeclRefExpr 0x92827b0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9282530 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x92827c8 <col:23> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92826a0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9282dd8 </usr/include/c++/4.6/bits/stl_vector.h:1304:5, col:25>
  (ReturnStmt 0x9282dc8 <col:7, col:20>
    (CXXOperatorCallExpr 0x9282da0 <col:14, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x9282d50 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92820b0 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
      (DeclRefExpr 0x9282d20 <col:14> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9282c10 '__y' 'const vector<_Tp, _Alloc> &')
      (DeclRefExpr 0x9282d38 <col:20> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9282aa0 '__x' 'const vector<_Tp, _Alloc> &'))))

;
    template <typename _Tp, typename _Alloc> inline bool operator<=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9283338 </usr/include/c++/4.6/bits/stl_vector.h:1310:5, col:28>
  (ReturnStmt 0x9283328 <col:7, col:25>
    (UnaryOperator 0x9283310 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x92832f8 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x92832d0 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x9283280 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92820b0 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
          (DeclRefExpr 0x9283250 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9283140 '__y' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x9283268 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9282fd0 '__x' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline bool operator>=(const vector<_Tp, _Alloc> &__x, const vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9283898 </usr/include/c++/4.6/bits/stl_vector.h:1316:5, col:28>
  (ReturnStmt 0x9283888 <col:7, col:25>
    (UnaryOperator 0x9283870 <col:14, col:25> '<dependent type>' prefix '!'
      (ParenExpr 0x9283858 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x9283830 <col:16, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x92837e0 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92820b0 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20)
          (DeclRefExpr 0x92837b0 <col:16> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x9283530 '__x' 'const vector<_Tp, _Alloc> &')
          (DeclRefExpr 0x92837c8 <col:22> 'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92836a0 '__y' 'const vector<_Tp, _Alloc> &'))))))

;
    template <typename _Tp, typename _Alloc> inline void swap(vector<_Tp, _Alloc> &__x, vector<_Tp, _Alloc> &__y) (CompoundStmt 0x9283dd8 </usr/include/c++/4.6/bits/stl_vector.h:1322:5, col:22>
  (CallExpr 0x9283db8 <col:7, col:19> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x9283d68 <col:7, col:11> '<dependent type>' lvalue
      (DeclRefExpr 0x9283d50 <col:7> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9283ab0 '__x' 'vector<_Tp, _Alloc> &'))
    (DeclRefExpr 0x9283d9c <col:16> 'vector<_Tp, _Alloc>' lvalue ParmVar 0x9283c20 '__y' 'vector<_Tp, _Alloc> &')))

;
}
namespace std {
    typedef unsigned long _Bit_type;
    enum  {
        _S_word_bit = (ImplicitCastExpr 0x9284028 </usr/include/c++/4.6/bits/stl_bvector.h:67:24, col:60> 'unsigned int' <IntegralCast>
  (CXXFunctionalCastExpr 0x9283fd8 <col:24, col:60> 'int' functional cast to int <NoOp>
    (ImplicitCastExpr 0x9283fc8 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'int' <IntegralCast>
      (BinaryOperator 0x9283fb0 <<built-in>:17:22, /usr/include/c++/4.6/bits/stl_bvector.h:67:59> 'unsigned int' '*'
        (ImplicitCastExpr 0x9283fa0 <<built-in>:17:22> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x9283f50 <col:22> 'int' 8))
        (UnaryExprOrTypeTraitExpr 0x9283f88 </usr/include/c++/4.6/bits/stl_bvector.h:67:43, col:59> 'unsigned int' sizeof '_Bit_type':'unsigned long')))))

    };
    struct _Bit_reference {
        struct _Bit_reference;
        _Bit_type *_M_p;
        _Bit_type _M_mask;
        _Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p((ImplicitCastExpr 0x9284918 </usr/include/c++/4.6/bits/stl_bvector.h:75:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x92848fc <col:12> '_Bit_type *' lvalue ParmVar 0x9284210 '__x' '_Bit_type *'))
), _M_mask((ImplicitCastExpr 0x9284960 </usr/include/c++/4.6/bits/stl_bvector.h:75:26> '_Bit_type':'unsigned long' <LValueToRValue>
  (DeclRefExpr 0x9284948 <col:26> '_Bit_type':'unsigned long' lvalue ParmVar 0x9284250 '__y' '_Bit_type':'unsigned long'))
) (CompoundStmt 0x9284990 </usr/include/c++/4.6/bits/stl_bvector.h:75:31, col:33>)


        _Bit_reference() : _M_p((ImplicitCastExpr 0x92849b8 </usr/include/c++/4.6/bits/stl_bvector.h:77:29> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x92849a0 <col:29> 'int' 0))
), _M_mask((ImplicitCastExpr 0x9284a00 </usr/include/c++/4.6/bits/stl_bvector.h:77:41> '_Bit_type':'unsigned long' <IntegralCast>
  (IntegerLiteral 0x92849e8 <col:41> 'int' 0))
) (CompoundStmt 0x9284a30 </usr/include/c++/4.6/bits/stl_bvector.h:77:44, col:46>)


        bool operator _Bool() const (CompoundStmt 0x9284ba0 </usr/include/c++/4.6/bits/stl_bvector.h:80:5, col:35>
  (ReturnStmt 0x9284b90 <col:7, col:32>
    (UnaryOperator 0x9284b78 <col:14, col:32> '_Bool' prefix '!'
      (UnaryOperator 0x9284b60 <col:15, col:32> '_Bool' prefix '!'
        (ImplicitCastExpr 0x9284b50 <col:16, col:32> '_Bool' <IntegralToBoolean>
          (ParenExpr 0x9284b38 <col:16, col:32> 'unsigned long'
            (BinaryOperator 0x9284b20 <col:17, col:25> 'unsigned long' '&'
              (ImplicitCastExpr 0x9284b00 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
                (UnaryOperator 0x9284ab8 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
                  (ImplicitCastExpr 0x9284aa8 <col:18> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x9284a84 <col:18> '_Bit_type *const' lvalue ->_M_p 0x9284190
                      (CXXThisExpr 0x9284a58 <col:18> 'const struct std::_Bit_reference *' this)))))
              (ImplicitCastExpr 0x9284b10 <col:25> '_Bit_type':'unsigned long' <LValueToRValue>
                (MemberExpr 0x9284ae0 <col:25> 'const _Bit_type':'const unsigned long' lvalue ->_M_mask 0x92841d0
                  (CXXThisExpr 0x9284ad0 <col:25> 'const struct std::_Bit_reference *' this))))))))))


        std::_Bit_reference &operator=(bool __x) (CompoundStmt 0x9284dc0 </usr/include/c++/4.6/bits/stl_bvector.h:84:5, line:90:5>
  (IfStmt 0x9284d68 <line:85:7, line:88:12>
    <<<NULL>>>
    (ImplicitCastExpr 0x9284bd0 <line:85:11> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x9284bb4 <col:11> '_Bool' lvalue ParmVar 0x9284490 '__x' '_Bool'))
    (CompoundAssignOperator 0x9284c78 <line:86:2, col:11> '_Bit_type':'unsigned long' lvalue '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9284c20 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9284c10 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9284bf0 <col:3> '_Bit_type *' lvalue ->_M_p 0x9284190
            (CXXThisExpr 0x9284be0 <col:3> 'struct std::_Bit_reference *' this))))
      (ImplicitCastExpr 0x9284c68 <col:11> '_Bit_type':'unsigned long' <LValueToRValue>
        (MemberExpr 0x9284c48 <col:11> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x92841d0
          (CXXThisExpr 0x9284c38 <col:11> 'struct std::_Bit_reference *' this))))
    (CompoundAssignOperator 0x9284d48 <line:88:2, col:12> '_Bit_type':'unsigned long' lvalue '&=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
      (UnaryOperator 0x9284cd8 <col:2, col:3> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x9284cc8 <col:3> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9284ca8 <col:3> '_Bit_type *' lvalue ->_M_p 0x9284190
            (CXXThisExpr 0x9284c98 <col:3> 'struct std::_Bit_reference *' this))))
      (UnaryOperator 0x9284d30 <col:11, col:12> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x9284d20 <col:12> '_Bit_type':'unsigned long' <LValueToRValue>
          (MemberExpr 0x9284d00 <col:12> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x92841d0
            (CXXThisExpr 0x9284cf0 <col:12> 'struct std::_Bit_reference *' this))))))
  (ReturnStmt 0x9284db0 <line:89:7, col:15>
    (UnaryOperator 0x9284d98 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
      (CXXThisExpr 0x9284d88 <col:15> 'struct std::_Bit_reference *' this))))


        std::_Bit_reference &operator=(const std::_Bit_reference &__x) (CompoundStmt 0x9285020 </usr/include/c++/4.6/bits/stl_bvector.h:94:5, col:33>
  (ReturnStmt 0x9285010 <col:7, col:30>
    (CXXOperatorCallExpr 0x9284fe8 <col:14, col:30> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x9284fd8 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x9284fa0 <col:20, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9284530 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (UnaryOperator 0x9284de8 <col:14, col:15> 'struct std::_Bit_reference' lvalue prefix '*'
        (CXXThisExpr 0x9284dd8 <col:15> 'struct std::_Bit_reference *' this))
      (CXXFunctionalCastExpr 0x9284e90 <col:22, col:30> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x9284e80 <col:27> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x9284e60 <col:27> '_Bool'
            (MemberExpr 0x9284e40 <col:27, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
              (DeclRefExpr 0x9284e08 <col:27> 'const struct std::_Bit_reference' lvalue ParmVar 0x92845d0 '__x' 'const struct std::_Bit_reference &'))))))))


        bool operator==(const std::_Bit_reference &__x) const (CompoundStmt 0x92851b0 </usr/include/c++/4.6/bits/stl_bvector.h:98:5, col:40>
  (ReturnStmt 0x92851a0 <col:7, col:37>
    (BinaryOperator 0x9285188 <col:14, col:37> '_Bool' '=='
      (ImplicitCastExpr 0x9285168 <col:14, col:24> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x92850c0 <col:14, col:24> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x92850b0 <col:19, col:20> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9285090 <col:19, col:20> '_Bool'
              (MemberExpr 0x9285070 <col:19, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
                (UnaryOperator 0x9285050 <col:19, col:20> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x9285040 <col:20> 'const struct std::_Bit_reference *' this)))))))
      (ImplicitCastExpr 0x9285178 <col:29, col:37> 'int' <IntegralCast>
        (CXXFunctionalCastExpr 0x9285150 <col:29, col:37> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9285140 <col:34> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9285120 <col:34> '_Bool'
              (MemberExpr 0x9285100 <col:34, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
                (DeclRefExpr 0x92850e0 <col:34> 'const struct std::_Bit_reference' lvalue ParmVar 0x92846d0 '__x' 'const struct std::_Bit_reference &')))))))))


        bool operator<(const std::_Bit_reference &__x) const (CompoundStmt 0x9285338 </usr/include/c++/4.6/bits/stl_bvector.h:102:5, col:41>
  (ReturnStmt 0x9285328 <col:7, col:38>
    (BinaryOperator 0x9285310 <col:14, col:38> '_Bool' '&&'
      (UnaryOperator 0x9285268 <col:14, col:25> '_Bool' prefix '!'
        (CXXFunctionalCastExpr 0x9285250 <col:15, col:25> '_Bool' functional cast to _Bool <NoOp>
          (ImplicitCastExpr 0x9285240 <col:20, col:21> '_Bool' <UserDefinedConversion>
            (CXXMemberCallExpr 0x9285220 <col:20, col:21> '_Bool'
              (MemberExpr 0x9285200 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
                (UnaryOperator 0x92851e0 <col:20, col:21> 'const struct std::_Bit_reference' lvalue prefix '*'
                  (CXXThisExpr 0x92851d0 <col:21> 'const struct std::_Bit_reference *' this)))))))
      (CXXFunctionalCastExpr 0x92852f8 <col:30, col:38> '_Bool' functional cast to _Bool <NoOp>
        (ImplicitCastExpr 0x92852e8 <col:35> '_Bool' <UserDefinedConversion>
          (CXXMemberCallExpr 0x92852c8 <col:35> '_Bool'
            (MemberExpr 0x92852a8 <col:35, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
              (DeclRefExpr 0x9285288 <col:35> 'const struct std::_Bit_reference' lvalue ParmVar 0x92847d0 '__x' 'const struct std::_Bit_reference &'))))))))


        void flip() (CompoundStmt 0x9285408 </usr/include/c++/4.6/bits/stl_bvector.h:106:5, col:25>
  (CompoundAssignOperator 0x92853e8 <col:7, col:16> '_Bit_type':'unsigned long' lvalue '^=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
    (UnaryOperator 0x9285390 <col:7, col:8> '_Bit_type':'unsigned long' lvalue prefix '*'
      (ImplicitCastExpr 0x9285380 <col:8> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x9285360 <col:8> '_Bit_type *' lvalue ->_M_p 0x9284190
          (CXXThisExpr 0x9285350 <col:8> 'struct std::_Bit_reference *' this))))
    (ImplicitCastExpr 0x92853d8 <col:16> '_Bit_type':'unsigned long' <LValueToRValue>
      (MemberExpr 0x92853b8 <col:16> '_Bit_type':'unsigned long' lvalue ->_M_mask 0x92841d0
        (CXXThisExpr 0x92853a8 <col:16> 'struct std::_Bit_reference *' this)))))


        inline _Bit_reference(const std::_Bit_reference &) throw() : _M_p((ImplicitCastExpr 0x928a620 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x928a5fc <col:10> '_Bit_type *const' lvalue ._M_p 0x9284190
    (DeclRefExpr 0x928a5e4 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9284f60 '' 'const struct std::_Bit_reference &')))
), _M_mask((ImplicitCastExpr 0x928a680 </usr/include/c++/4.6/bits/stl_bvector.h:69:10> '_Bit_type':'unsigned long' <LValueToRValue>
  (MemberExpr 0x928a65c <col:10> 'const _Bit_type':'const unsigned long' lvalue ._M_mask 0x92841d0
    (DeclRefExpr 0x928a644 <col:10> 'const struct std::_Bit_reference' lvalue ParmVar 0x9284f60 '' 'const struct std::_Bit_reference &')))
) (CompoundStmt 0x928a6b0 </usr/include/c++/4.6/bits/stl_bvector.h:69:10>)


    };
    struct _Bit_iterator_base : public std::iterator<std::random_access_iterator_tag, bool> {
        struct _Bit_iterator_base;
        _Bit_type *_M_p;
        unsigned int _M_offset;
        _Bit_iterator_base(_Bit_type *__x, unsigned int __y) : std::iterator<std::random_access_iterator_tag, bool>(), _M_p((ImplicitCastExpr 0x92863c0 </usr/include/c++/4.6/bits/stl_bvector.h:116:12> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x92863a4 <col:12> '_Bit_type *' lvalue ParmVar 0x9285b10 '__x' '_Bit_type *'))
), _M_offset((ImplicitCastExpr 0x9286400 </usr/include/c++/4.6/bits/stl_bvector.h:116:28> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x92863e8 <col:28> 'unsigned int' lvalue ParmVar 0x9285b60 '__y' 'unsigned int'))
) (CompoundStmt 0x9286678 </usr/include/c++/4.6/bits/stl_bvector.h:116:33, col:35>)


        void _M_bump_up() (CompoundStmt 0x9286888 </usr/include/c++/4.6/bits/stl_bvector.h:120:5, line:126:5>
  (IfStmt 0x9286868 <line:121:7, line:125:2>
    <<<NULL>>>
    (BinaryOperator 0x9286780 <line:121:11, col:45> '_Bool' '=='
      (UnaryOperator 0x92866d8 <col:11, col:20> 'unsigned int' postfix '++'
        (MemberExpr 0x92866b8 <col:11> 'unsigned int' lvalue ->_M_offset 0x9285ad0
          (CXXThisExpr 0x92866a8 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9286770 <col:26, col:45> 'unsigned int' <IntegralCast>
        (BinaryOperator 0x9286758 <col:26, col:45> 'int' '-'
          (CXXFunctionalCastExpr 0x9286728 <col:26, col:41> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x9286718 <col:30> 'int' <IntegralCast>
              (DeclRefExpr 0x92866fc <col:30> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
          (IntegerLiteral 0x9286740 <col:45> 'int' 1))))
    (CompoundStmt 0x9286850 <line:122:2, line:125:2>
      (BinaryOperator 0x92867f0 <line:123:4, col:16> 'unsigned int' lvalue '='
        (MemberExpr 0x92867a8 <col:4> 'unsigned int' lvalue ->_M_offset 0x9285ad0
          (CXXThisExpr 0x9286798 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x92867e0 <col:16> 'unsigned int' <IntegralCast>
          (IntegerLiteral 0x92867c8 <col:16> 'int' 0)))
      (UnaryOperator 0x9286838 <line:124:4, col:6> '_Bit_type *' lvalue prefix '++'
        (MemberExpr 0x9286818 <col:6> '_Bit_type *' lvalue ->_M_p 0x9285a90
          (CXXThisExpr 0x9286808 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_bump_down() (CompoundStmt 0x9286a80 </usr/include/c++/4.6/bits/stl_bvector.h:130:5, line:136:5>
  (IfStmt 0x9286a60 <line:131:7, line:135:2>
    <<<NULL>>>
    (BinaryOperator 0x9286910 <line:131:11, col:26> '_Bool' '=='
      (UnaryOperator 0x92868d0 <col:11, col:20> 'unsigned int' postfix '--'
        (MemberExpr 0x92868b0 <col:11> 'unsigned int' lvalue ->_M_offset 0x9285ad0
          (CXXThisExpr 0x92868a0 <col:11> 'struct std::_Bit_iterator_base *' this)))
      (ImplicitCastExpr 0x9286900 <col:26> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x92868e8 <col:26> 'int' 0)))
    (CompoundStmt 0x9286a48 <line:132:2, line:135:2>
      (BinaryOperator 0x92869e8 <line:133:4, col:35> 'unsigned int' lvalue '='
        (MemberExpr 0x9286938 <col:4> 'unsigned int' lvalue ->_M_offset 0x9285ad0
          (CXXThisExpr 0x9286928 <col:4> 'struct std::_Bit_iterator_base *' this))
        (ImplicitCastExpr 0x92869d8 <col:16, col:35> 'unsigned int' <IntegralCast>
          (BinaryOperator 0x92869c0 <col:16, col:35> 'int' '-'
            (CXXFunctionalCastExpr 0x9286990 <col:16, col:31> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x9286980 <col:20> 'int' <IntegralCast>
                (DeclRefExpr 0x9286964 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
            (IntegerLiteral 0x92869a8 <col:35> 'int' 1))))
      (UnaryOperator 0x9286a30 <line:134:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9286a10 <col:6> '_Bit_type *' lvalue ->_M_p 0x9285a90
          (CXXThisExpr 0x9286a00 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>))


        void _M_incr(ptrdiff_t __i) (CompoundStmt 0x9288a18 </usr/include/c++/4.6/bits/stl_bvector.h:140:5, line:150:5>
  (DeclStmt 0x9286b98 <line:141:7, col:44>
    0x9286ac0 "difference_type __n =
      (ImplicitCastExpr 0x9286b88 <col:29, col:35> 'difference_type':'int' <IntegralCast>
        (BinaryOperator 0x9286b70 <col:29, col:35> 'unsigned int' '+'
          (ImplicitCastExpr 0x9286b60 <col:29> 'unsigned int' <IntegralCast>
            (ImplicitCastExpr 0x9286b40 <col:29> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x9286af4 <col:29> 'ptrdiff_t':'int' lvalue ParmVar 0x9285d90 '__i' 'ptrdiff_t':'int')))
          (ImplicitCastExpr 0x9286b50 <col:35> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x9286b20 <col:35> 'unsigned int' lvalue ->_M_offset 0x9285ad0
              (CXXThisExpr 0x9286b10 <col:35> 'struct std::_Bit_iterator_base *' this)))))")
  (CompoundAssignOperator 0x9288730 <line:142:7, col:36> '_Bit_type *' lvalue '+=' ComputeLHSTy='_Bit_type *' ComputeResultTy='_Bit_type *'
    (MemberExpr 0x9286bb8 <col:7> '_Bit_type *' lvalue ->_M_p 0x9285a90
      (CXXThisExpr 0x9286ba8 <col:7> 'struct std::_Bit_iterator_base *' this))
    (BinaryOperator 0x9288718 <col:15, col:36> 'int' '/'
      (ImplicitCastExpr 0x9288708 <col:15> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9286bd8 <col:15> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x92886f0 <col:21, col:36> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x92886e0 <col:25> 'int' <IntegralCast>
          (DeclRefExpr 0x92886c4 <col:25> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (BinaryOperator 0x92887f8 <line:143:7, col:34> 'difference_type':'int' lvalue '='
    (DeclRefExpr 0x9288750 <col:7> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int')
    (BinaryOperator 0x92887e0 <col:13, col:34> 'int' '%'
      (ImplicitCastExpr 0x92887d0 <col:13> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9288768 <col:13> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int'))
      (CXXFunctionalCastExpr 0x92887b8 <col:19, col:34> 'int' functional cast to int <NoOp>
        (ImplicitCastExpr 0x92887a8 <col:23> 'int' <IntegralCast>
          (DeclRefExpr 0x928878c <col:23> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
  (IfStmt 0x9288950 <line:144:7, line:148:2>
    <<<NULL>>>
    (BinaryOperator 0x9288850 <line:144:11, col:17> '_Bool' '<'
      (ImplicitCastExpr 0x9288840 <col:11> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x9288810 <col:11> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int'))
      (IntegerLiteral 0x9288828 <col:17> 'int' 0))
    (CompoundStmt 0x9288938 <line:145:2, line:148:2>
      (CompoundAssignOperator 0x92888d0 <line:146:4, col:26> 'difference_type':'int' lvalue '+=' ComputeLHSTy='int' ComputeResultTy='int'
        (DeclRefExpr 0x9288868 <col:4> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int')
        (CXXFunctionalCastExpr 0x92888b8 <col:11, col:26> 'int' functional cast to int <NoOp>
          (ImplicitCastExpr 0x92888a8 <col:15> 'int' <IntegralCast>
            (DeclRefExpr 0x928888c <col:15> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
      (UnaryOperator 0x9288920 <line:147:4, col:6> '_Bit_type *' lvalue prefix '--'
        (MemberExpr 0x9288900 <col:6> '_Bit_type *' lvalue ->_M_p 0x9285a90
          (CXXThisExpr 0x92888f0 <col:6> 'struct std::_Bit_iterator_base *' this))))
    <<<NULL>>>)
  (BinaryOperator 0x9288a00 <line:149:7, col:48> 'unsigned int' lvalue '='
    (MemberExpr 0x9288980 <col:7> 'unsigned int' lvalue ->_M_offset 0x9285ad0
      (CXXThisExpr 0x9288970 <col:7> 'struct std::_Bit_iterator_base *' this))
    (CXXStaticCastExpr 0x92889e8 <col:19, col:48> 'unsigned int' static_cast<unsigned int> <NoOp>
      (ImplicitCastExpr 0x92889d8 <col:45> 'unsigned int' <IntegralCast>
        (ImplicitCastExpr 0x92889c8 <col:45> 'difference_type':'int' <LValueToRValue>
          (DeclRefExpr 0x92889a0 <col:45> 'difference_type':'int' lvalue Var 0x9286ac0 '__n' 'difference_type':'int'))))))


        bool operator==(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9288bc0 </usr/include/c++/4.6/bits/stl_bvector.h:154:5, col:62>
  (ReturnStmt 0x9288bb0 <col:7, col:51>
    (BinaryOperator 0x9288b98 <col:14, col:51> '_Bool' '&&'
      (BinaryOperator 0x9288ae0 <col:14, col:26> '_Bool' '=='
        (ImplicitCastExpr 0x9288ac0 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9288a68 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9285a90
            (CXXThisExpr 0x9288a58 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9288ad0 <col:22, col:26> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9288aa0 <col:22, col:26> '_Bit_type *const' lvalue ._M_p 0x9285a90
            (DeclRefExpr 0x9288a88 <col:22> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9285eb0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (BinaryOperator 0x9288b80 <col:34, col:51> '_Bool' '=='
        (ImplicitCastExpr 0x9288b60 <col:34> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9288b08 <col:34> 'const unsigned int' lvalue ->_M_offset 0x9285ad0
            (CXXThisExpr 0x9288af8 <col:34> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9288b70 <col:47, col:51> 'unsigned int' <LValueToRValue>
          (MemberExpr 0x9288b40 <col:47, col:51> 'const unsigned int' lvalue ._M_offset 0x9285ad0
            (DeclRefExpr 0x9288b28 <col:47> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9285eb0 '__i' 'const struct std::_Bit_iterator_base &')))))))


        bool operator<(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9288e10 </usr/include/c++/4.6/bits/stl_bvector.h:158:5, line:161:5>
  (ReturnStmt 0x9288e00 <line:159:7, line:160:56>
    (BinaryOperator 0x9288de8 <line:159:14, line:160:56> '_Bool' '||'
      (BinaryOperator 0x9288c60 <line:159:14, col:25> '_Bool' '<'
        (ImplicitCastExpr 0x9288c40 <col:14> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9288be8 <col:14> '_Bit_type *const' lvalue ->_M_p 0x9285a90
            (CXXThisExpr 0x9288bd8 <col:14> 'const struct std::_Bit_iterator_base *' this)))
        (ImplicitCastExpr 0x9288c50 <col:21, col:25> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x9288c20 <col:21, col:25> '_Bit_type *const' lvalue ._M_p 0x9285a90
            (DeclRefExpr 0x9288c08 <col:21> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9285fb0 '__i' 'const struct std::_Bit_iterator_base &'))))
      (ParenExpr 0x9288dd0 <line:160:10, col:56> '_Bool'
        (BinaryOperator 0x9288db8 <col:11, col:47> '_Bool' '&&'
          (BinaryOperator 0x9288d00 <col:11, col:23> '_Bool' '=='
            (ImplicitCastExpr 0x9288ce0 <col:11> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9288c88 <col:11> '_Bit_type *const' lvalue ->_M_p 0x9285a90
                (CXXThisExpr 0x9288c78 <col:11> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9288cf0 <col:19, col:23> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x9288cc0 <col:19, col:23> '_Bit_type *const' lvalue ._M_p 0x9285a90
                (DeclRefExpr 0x9288ca8 <col:19> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9285fb0 '__i' 'const struct std::_Bit_iterator_base &'))))
          (BinaryOperator 0x9288da0 <col:31, col:47> '_Bool' '<'
            (ImplicitCastExpr 0x9288d80 <col:31> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9288d28 <col:31> 'const unsigned int' lvalue ->_M_offset 0x9285ad0
                (CXXThisExpr 0x9288d18 <col:31> 'const struct std::_Bit_iterator_base *' this)))
            (ImplicitCastExpr 0x9288d90 <col:43, col:47> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9288d60 <col:43, col:47> 'const unsigned int' lvalue ._M_offset 0x9285ad0
                (DeclRefExpr 0x9288d48 <col:43> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9285fb0 '__i' 'const struct std::_Bit_iterator_base &')))))))))


        bool operator!=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9288f10 </usr/include/c++/4.6/bits/stl_bvector.h:165:5, col:31>
  (ReturnStmt 0x9288f00 <col:7, col:28>
    (UnaryOperator 0x9288ee8 <col:14, col:28> '_Bool' prefix '!'
      (ParenExpr 0x9288ed0 <col:15, col:28> '_Bool'
        (CXXOperatorCallExpr 0x9288ea8 <col:16, col:25> '_Bool'
          (ImplicitCastExpr 0x9288e98 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9288e68 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9285f30 'operator==' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x9288e38 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9288e28 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x9288e4c <col:25> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9286080 '__i' 'const struct std::_Bit_iterator_base &'))))))


        bool operator>(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9288fc8 </usr/include/c++/4.6/bits/stl_bvector.h:169:5, col:27>
  (ReturnStmt 0x9288fb8 <col:7, col:21>
    (CXXOperatorCallExpr 0x9288f90 <col:14, col:21> '_Bool'
      (ImplicitCastExpr 0x9288f80 <col:18, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x9288f68 <col:18, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9286000 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (DeclRefExpr 0x9288f24 <col:14> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9286150 '__i' 'const struct std::_Bit_iterator_base &')
      (UnaryOperator 0x9288f50 <col:20, col:21> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
        (CXXThisExpr 0x9288f40 <col:21> 'const struct std::_Bit_iterator_base *' this)))))


        bool operator<=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x92890b0 </usr/include/c++/4.6/bits/stl_bvector.h:173:5, col:30>
  (ReturnStmt 0x92890a0 <col:7, col:27>
    (UnaryOperator 0x9289088 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9289070 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9289048 <col:16, col:23> '_Bool'
          (ImplicitCastExpr 0x9289038 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9289020 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9286000 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (DeclRefExpr 0x9288fdc <col:16> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9286220 '__i' 'const struct std::_Bit_iterator_base &')
          (UnaryOperator 0x9289008 <col:22, col:23> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x9288ff8 <col:23> 'const struct std::_Bit_iterator_base *' this)))))))


        bool operator>=(const std::_Bit_iterator_base &__i) const (CompoundStmt 0x9289198 </usr/include/c++/4.6/bits/stl_bvector.h:177:5, col:30>
  (ReturnStmt 0x9289188 <col:7, col:27>
    (UnaryOperator 0x9289170 <col:14, col:27> '_Bool' prefix '!'
      (ParenExpr 0x9289158 <col:15, col:27> '_Bool'
        (CXXOperatorCallExpr 0x9289130 <col:16, col:24> '_Bool'
          (ImplicitCastExpr 0x9289120 <col:22, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x9289108 <col:22, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x9286000 'operator<' '_Bool (const struct std::_Bit_iterator_base &) const'))
          (UnaryOperator 0x92890d8 <col:16, col:17> 'const struct std::_Bit_iterator_base' lvalue prefix '*'
            (CXXThisExpr 0x92890c8 <col:17> 'const struct std::_Bit_iterator_base *' this))
          (DeclRefExpr 0x92890ec <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x92862f0 '__i' 'const struct std::_Bit_iterator_base &'))))))


        inline _Bit_iterator_base(const std::_Bit_iterator_base &) throw() : std::iterator<std::random_access_iterator_tag, bool>((ImplicitCastExpr 0x928a9c0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'const std::iterator<std::random_access_iterator_tag, _Bool>':'const struct std::iterator<struct std::random_access_iterator_tag, _Bool, int, _Bool *, _Bool &>' lvalue <UncheckedDerivedToBase (iterator)>
  (DeclRefExpr 0x928a9a8 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x928a330 '' 'const struct std::_Bit_iterator_base &'))
), _M_p((ImplicitCastExpr 0x928aac0 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x928aaa0 <col:10> '_Bit_type *const' lvalue ._M_p 0x9285a90
    (DeclRefExpr 0x928aa88 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x928a330 '' 'const struct std::_Bit_iterator_base &')))
), _M_offset((ImplicitCastExpr 0x928ab20 </usr/include/c++/4.6/bits/stl_bvector.h:109:10> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x928aafc <col:10> 'const unsigned int' lvalue ._M_offset 0x9285ad0
    (DeclRefExpr 0x928aae4 <col:10> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x928a330 '' 'const struct std::_Bit_iterator_base &')))
) (CompoundStmt 0x928ab58 </usr/include/c++/4.6/bits/stl_bvector.h:109:10>)


    };
    inline ptrdiff_t operator-(const std::_Bit_iterator_base &__x, const std::_Bit_iterator_base &__y) (CompoundStmt 0x9289548 </usr/include/c++/4.6/bits/stl_bvector.h:182:3, line:185:3>
  (ReturnStmt 0x9289538 <line:183:5, line:184:37>
    (ImplicitCastExpr 0x9289528 <line:183:12, line:184:37> 'ptrdiff_t':'int' <IntegralCast>
      (ParenExpr 0x9289510 <line:183:12, line:184:37> 'unsigned int'
        (BinaryOperator 0x92894f8 <line:183:13, line:184:28> 'unsigned int' '-'
          (BinaryOperator 0x9289498 <line:183:13, line:184:12> 'unsigned int' '+'
            (ImplicitCastExpr 0x9289488 <line:183:13, col:52> 'unsigned int' <IntegralCast>
              (BinaryOperator 0x9289428 <col:13, col:52> 'int' '*'
                (CXXFunctionalCastExpr 0x9289350 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x9289340 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x9289324 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))
                (ParenExpr 0x9289410 <col:32, col:52> 'int'
                  (BinaryOperator 0x92893f8 <col:33, col:48> 'int' '-'
                    (ImplicitCastExpr 0x92893d8 <col:33, col:37> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x9289380 <col:33, col:37> '_Bit_type *const' lvalue ._M_p 0x9285a90
                        (DeclRefExpr 0x9289368 <col:33> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x92891c0 '__x' 'const struct std::_Bit_iterator_base &')))
                    (ImplicitCastExpr 0x92893e8 <col:44, col:48> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x92893b8 <col:44, col:48> '_Bit_type *const' lvalue ._M_p 0x9285a90
                        (DeclRefExpr 0x92893a0 <col:44> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9289210 '__y' 'const struct std::_Bit_iterator_base &')))))))
            (ImplicitCastExpr 0x9289478 <line:184:8, col:12> 'unsigned int' <LValueToRValue>
              (MemberExpr 0x9289458 <col:8, col:12> 'const unsigned int' lvalue ._M_offset 0x9285ad0
                (DeclRefExpr 0x9289440 <col:8> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x92891c0 '__x' 'const struct std::_Bit_iterator_base &'))))
          (ImplicitCastExpr 0x92894e8 <col:24, col:28> 'unsigned int' <LValueToRValue>
            (MemberExpr 0x92894c8 <col:24, col:28> 'const unsigned int' lvalue ._M_offset 0x9285ad0
              (DeclRefExpr 0x92894b0 <col:24> 'const struct std::_Bit_iterator_base' lvalue ParmVar 0x9289210 '__y' 'const struct std::_Bit_iterator_base &'))))))))


    struct _Bit_iterator : public std::_Bit_iterator_base {
        struct _Bit_iterator;
        typedef std::_Bit_reference reference;
        typedef std::_Bit_reference *pointer;
        typedef std::_Bit_iterator iterator;
        _Bit_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x928a370 </usr/include/c++/4.6/bits/stl_bvector.h:193:42> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x928a228 <col:42> 'int' 0))
, (ImplicitCastExpr 0x928a380 </usr/include/c++/4.6/bits/stl_bvector.h:193:45> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x928a240 <col:45> 'int' 0))
) (CompoundStmt 0x928a3e0 </usr/include/c++/4.6/bits/stl_bvector.h:193:48, col:50>)


        _Bit_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x928a428 </usr/include/c++/4.6/bits/stl_bvector.h:196:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x928a3f0 <col:26> '_Bit_type *' lvalue ParmVar 0x9289830 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x928a438 </usr/include/c++/4.6/bits/stl_bvector.h:196:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x928a408 <col:31> 'unsigned int' lvalue ParmVar 0x9289880 '__y' 'unsigned int'))
) (CompoundStmt 0x928a490 </usr/include/c++/4.6/bits/stl_bvector.h:196:36, col:38>)


        reference operator*() const (CompoundStmt 0x928a6f8 </usr/include/c++/4.6/bits/stl_bvector.h:200:5, col:49>
  (ReturnStmt 0x928a6e8 <col:7, col:46>
    (CXXConstructExpr 0x928a6c0 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x928a5d8 <col:14, col:46> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x928a5c8 <col:14, col:46> 'const struct std::_Bit_reference' <NoOp>
          (CXXTemporaryObjectExpr 0x928a598 <col:14, col:46> 'reference':'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
            (ImplicitCastExpr 0x928a588 <col:24> '_Bit_type *' <LValueToRValue>
              (MemberExpr 0x928a4e8 <col:24> '_Bit_type *const' lvalue ->_M_p 0x9285a90
                (ImplicitCastExpr 0x928a4d8 <col:24> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                  (CXXThisExpr 0x928a4c8 <col:24> 'const struct std::_Bit_iterator *' this))))
            (BinaryOperator 0x928a570 <col:30, col:37> 'unsigned long' '<<'
              (IntegerLiteral 0x928a508 <col:30> 'unsigned long' 1)
              (ImplicitCastExpr 0x928a560 <col:37> 'unsigned int' <LValueToRValue>
                (MemberExpr 0x928a540 <col:37> 'const unsigned int' lvalue ->_M_offset 0x9285ad0
                  (ImplicitCastExpr 0x928a530 <col:37> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x928a520 <col:37> 'const struct std::_Bit_iterator *' this)))))))))))


        iterator &operator++() (CompoundStmt 0x928a7c0 </usr/include/c++/4.6/bits/stl_bvector.h:204:5, line:207:5>
  (CXXMemberCallExpr 0x928a758 <line:205:7, col:18> 'void'
    (MemberExpr 0x928a738 <col:7> '<bound member function type>' ->_M_bump_up 0x9285ca0
      (ImplicitCastExpr 0x928a778 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928a728 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x928a7b0 <line:206:7, col:15>
    (UnaryOperator 0x928a798 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928a788 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator++(int) (CompoundStmt 0x928acc8 </usr/include/c++/4.6/bits/stl_bvector.h:211:5, line:215:5>
  (DeclStmt 0x928abf8 <line:212:7, col:29>
    0x928a7e0 "iterator __tmp =
      (CXXConstructExpr 0x928abd0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x928a970 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x928a828 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x928a818 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x928ac38 <line:213:7, col:18> 'void'
    (MemberExpr 0x928ac18 <col:7> '<bound member function type>' ->_M_bump_up 0x9285ca0
      (ImplicitCastExpr 0x928ac58 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928ac08 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x928acb8 <line:214:7, col:14>
    (CXXConstructExpr 0x928ac90 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x928ac80 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x928ac68 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x928a7e0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator--() (CompoundStmt 0x928ad80 </usr/include/c++/4.6/bits/stl_bvector.h:219:5, line:222:5>
  (CXXMemberCallExpr 0x928ad18 <line:220:7, col:20> 'void'
    (MemberExpr 0x928acf8 <col:7> '<bound member function type>' ->_M_bump_down 0x9285d20
      (ImplicitCastExpr 0x928ad38 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928ace8 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x928ad70 <line:221:7, col:15>
    (UnaryOperator 0x928ad58 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928ad48 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator--(int) (CompoundStmt 0x928af08 </usr/include/c++/4.6/bits/stl_bvector.h:226:5, line:230:5>
  (DeclStmt 0x928ae38 <line:227:7, col:29>
    0x928ada0 "iterator __tmp =
      (CXXConstructExpr 0x928ae10 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x928ae00 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (UnaryOperator 0x928ade8 <col:24, col:25> 'struct std::_Bit_iterator' lvalue prefix '*'
            (CXXThisExpr 0x928add8 <col:25> 'struct std::_Bit_iterator *' this))))")
  (CXXMemberCallExpr 0x928ae78 <line:228:7, col:20> 'void'
    (MemberExpr 0x928ae58 <col:7> '<bound member function type>' ->_M_bump_down 0x9285d20
      (ImplicitCastExpr 0x928ae98 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928ae48 <col:7> 'struct std::_Bit_iterator *' this))))
  (ReturnStmt 0x928aef8 <line:229:7, col:14>
    (CXXConstructExpr 0x928aed0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (ImplicitCastExpr 0x928aec0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x928aea8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x928ada0 '__tmp' 'iterator':'struct std::_Bit_iterator')))))


        iterator &operator+=(difference_type __i) (CompoundStmt 0x928afe8 </usr/include/c++/4.6/bits/stl_bvector.h:234:5, line:237:5>
  (CXXMemberCallExpr 0x928af70 <line:235:7, col:18> 'void'
    (MemberExpr 0x928af38 <col:7> '<bound member function type>' ->_M_incr 0x9285e10
      (ImplicitCastExpr 0x928af90 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928af28 <col:7> 'struct std::_Bit_iterator *' this)))
    (ImplicitCastExpr 0x928afa0 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x928af58 <col:15> 'difference_type':'int' lvalue ParmVar 0x9289d70 '__i' 'difference_type':'int')))
  (ReturnStmt 0x928afd8 <line:236:7, col:15>
    (UnaryOperator 0x928afc0 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928afb0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator &operator-=(difference_type __i) (CompoundStmt 0x928b128 </usr/include/c++/4.6/bits/stl_bvector.h:241:5, line:244:5>
  (CXXOperatorCallExpr 0x928b0c8 <line:242:7, col:17> 'iterator':'struct std::_Bit_iterator' lvalue
    (ImplicitCastExpr 0x928b0b8 <col:13, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x928b068 <col:13, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9289e10 'operator+=' 'iterator &(difference_type)'))
    (UnaryOperator 0x928b010 <col:7, col:8> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928b000 <col:8> 'struct std::_Bit_iterator *' this))
    (UnaryOperator 0x928b050 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x928b040 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x928b024 <col:17> 'difference_type':'int' lvalue ParmVar 0x9289e80 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x928b118 <line:243:7, col:15>
    (UnaryOperator 0x928b100 <col:14, col:15> 'struct std::_Bit_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928b0f0 <col:15> 'struct std::_Bit_iterator *' this))))


        iterator operator+(difference_type __i) const (CompoundStmt 0x928b2c0 </usr/include/c++/4.6/bits/stl_bvector.h:248:5, line:251:5>
  (DeclStmt 0x928b1d8 <line:249:7, col:29>
    0x928b150 "iterator __tmp =
      (CXXConstructExpr 0x928b1b0 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x928b198 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x928b188 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x928b2b0 <line:250:7, col:23>
    (CXXConstructExpr 0x928b288 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x928b278 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x928b250 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x928b240 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x928b228 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9289e10 'operator+=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x928b1e8 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x928b150 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x928b218 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x928b200 <col:23> 'difference_type':'int' lvalue ParmVar 0x9289f50 '__i' 'difference_type':'int')))))))


        iterator operator-(difference_type __i) const (CompoundStmt 0x928b450 </usr/include/c++/4.6/bits/stl_bvector.h:255:5, line:258:5>
  (DeclStmt 0x928b368 <line:256:7, col:29>
    0x928b2e0 "iterator __tmp =
      (CXXConstructExpr 0x928b340 <col:24, col:25> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (UnaryOperator 0x928b328 <col:24, col:25> 'const struct std::_Bit_iterator' lvalue prefix '*'
          (CXXThisExpr 0x928b318 <col:25> 'const struct std::_Bit_iterator *' this)))")
  (ReturnStmt 0x928b440 <line:257:7, col:23>
    (CXXConstructExpr 0x928b418 <col:14, col:23> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x928b408 <col:14, col:23> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x928b3e0 <col:14, col:23> 'iterator':'struct std::_Bit_iterator' lvalue
          (ImplicitCastExpr 0x928b3d0 <col:20, <invalid sloc>> 'iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x928b3b8 <col:20, <invalid sloc>> 'iterator &(difference_type)' lvalue CXXMethod 0x9289ee0 'operator-=' 'iterator &(difference_type)'))
          (DeclRefExpr 0x928b378 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x928b2e0 '__tmp' 'iterator':'struct std::_Bit_iterator')
          (ImplicitCastExpr 0x928b3a8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x928b390 <col:23> 'difference_type':'int' lvalue ParmVar 0x928a060 '__i' 'difference_type':'int')))))))


        reference operator[](difference_type __i) const (CompoundStmt 0x928b640 </usr/include/c++/4.6/bits/stl_bvector.h:262:5, col:30>
  (ReturnStmt 0x928b630 <col:7, col:27>
    (CXXConstructExpr 0x928b608 <col:14, col:27> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x928b5f8 <col:14, col:27> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x928b5e8 <col:14, col:27> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x928b5c8 <col:14, col:27> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x928b5b8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x928b568 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x928b558 <col:15, col:27> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (ParenExpr 0x928b540 <col:15, col:27> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x928b518 <col:16, col:24> 'iterator':'struct std::_Bit_iterator'
                  (ImplicitCastExpr 0x928b508 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                    (DeclRefExpr 0x928b4b8 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
                  (UnaryOperator 0x928b478 <col:16, col:17> 'const struct std::_Bit_iterator' lvalue prefix '*'
                    (CXXThisExpr 0x928b468 <col:17> 'const struct std::_Bit_iterator *' this))
                  (ImplicitCastExpr 0x928b4a8 <col:24> 'difference_type':'int' <LValueToRValue>
                    (DeclRefExpr 0x928b48c <col:24> 'difference_type':'int' lvalue ParmVar 0x928a120 '__i' 'difference_type':'int')))))))))))


        inline _Bit_iterator(const std::_Bit_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x928a998 </usr/include/c++/4.6/bits/stl_bvector.h:187:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x928a97c <col:10> 'const struct std::_Bit_iterator' lvalue ParmVar 0x928a930 '' 'const struct std::_Bit_iterator &'))
) (CompoundStmt 0x928abc0 </usr/include/c++/4.6/bits/stl_bvector.h:187:10>)


    };
    inline std::_Bit_iterator operator+(ptrdiff_t __n, const std::_Bit_iterator &__x) (CompoundStmt 0x928b8a0 </usr/include/c++/4.6/bits/stl_bvector.h:267:3, col:23>
  (ReturnStmt 0x928b890 <col:5, col:18>
    (CXXConstructExpr 0x928b868 <col:12, col:18> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x928b858 <col:12, col:18> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x928b848 <col:12, col:18> 'const struct std::_Bit_iterator' <NoOp>
          (CXXOperatorCallExpr 0x928b820 <col:12, col:18> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x928b810 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x928b7f8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
            (DeclRefExpr 0x928b7b8 <col:12> 'const struct std::_Bit_iterator' lvalue ParmVar 0x928b6b0 '__x' 'const struct std::_Bit_iterator &')
            (ImplicitCastExpr 0x928b7e8 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x928b7d0 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x928b660 '__n' 'ptrdiff_t':'int'))))))))


    struct _Bit_const_iterator : public std::_Bit_iterator_base {
        struct _Bit_const_iterator;
        typedef bool reference;
        typedef bool const_reference;
        typedef const bool *pointer;
        typedef std::_Bit_const_iterator const_iterator;
        _Bit_const_iterator() : std::_Bit_iterator_base((ImplicitCastExpr 0x928c6d0 </usr/include/c++/4.6/bits/stl_bvector.h:276:48> '_Bit_type *' <NullToPointer>
  (IntegerLiteral 0x928c698 <col:48> 'int' 0))
, (ImplicitCastExpr 0x928c6e0 </usr/include/c++/4.6/bits/stl_bvector.h:276:51> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x928c6b0 <col:51> 'int' 0))
) (CompoundStmt 0x928c740 </usr/include/c++/4.6/bits/stl_bvector.h:276:54, col:56>)


        _Bit_const_iterator(_Bit_type *__x, unsigned int __y) : std::_Bit_iterator_base((ImplicitCastExpr 0x928c788 </usr/include/c++/4.6/bits/stl_bvector.h:279:26> '_Bit_type *' <LValueToRValue>
  (DeclRefExpr 0x928c750 <col:26> '_Bit_type *' lvalue ParmVar 0x928bbf0 '__x' '_Bit_type *'))
, (ImplicitCastExpr 0x928c798 </usr/include/c++/4.6/bits/stl_bvector.h:279:31> 'unsigned int' <LValueToRValue>
  (DeclRefExpr 0x928c768 <col:31> 'unsigned int' lvalue ParmVar 0x928bc40 '__y' 'unsigned int'))
) (CompoundStmt 0x928c7f0 </usr/include/c++/4.6/bits/stl_bvector.h:279:36, col:38>)


        _Bit_const_iterator(const std::_Bit_iterator &__x) : std::_Bit_iterator_base((ImplicitCastExpr 0x928c898 </usr/include/c++/4.6/bits/stl_bvector.h:282:26, col:30> '_Bit_type *' <LValueToRValue>
  (MemberExpr 0x928c828 <col:26, col:30> '_Bit_type *const' lvalue ._M_p 0x9285a90
    (ImplicitCastExpr 0x928c818 <col:26> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x928c800 <col:26> 'const struct std::_Bit_iterator' lvalue ParmVar 0x928bd20 '__x' 'const struct std::_Bit_iterator &'))))
, (ImplicitCastExpr 0x928c8a8 </usr/include/c++/4.6/bits/stl_bvector.h:282:36, col:40> 'unsigned int' <LValueToRValue>
  (MemberExpr 0x928c870 <col:36, col:40> 'const unsigned int' lvalue ._M_offset 0x9285ad0
    (ImplicitCastExpr 0x928c860 <col:36> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
      (DeclRefExpr 0x928c848 <col:36> 'const struct std::_Bit_iterator' lvalue ParmVar 0x928bd20 '__x' 'const struct std::_Bit_iterator &'))))
) (CompoundStmt 0x928c900 </usr/include/c++/4.6/bits/stl_bvector.h:282:51, col:53>)


        const_reference operator*() const (CompoundStmt 0x928cab0 </usr/include/c++/4.6/bits/stl_bvector.h:286:5, col:54>
  (ReturnStmt 0x928caa0 <col:7, col:51>
    (ImplicitCastExpr 0x928ca90 <col:14, col:51> '_Bool' <UserDefinedConversion>
      (CXXMemberCallExpr 0x928ca70 <col:14, col:51> '_Bool'
        (MemberExpr 0x928ca50 <col:14, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
          (ImplicitCastExpr 0x928ca40 <col:14, col:51> 'const struct std::_Bit_reference' lvalue <NoOp>
            (CXXTemporaryObjectExpr 0x928ca08 <col:14, col:51> 'struct std::_Bit_reference''void (_Bit_type *, _Bit_type)'
              (ImplicitCastExpr 0x928c9f8 <col:29> '_Bit_type *' <LValueToRValue>
                (MemberExpr 0x928c958 <col:29> '_Bit_type *const' lvalue ->_M_p 0x9285a90
                  (ImplicitCastExpr 0x928c948 <col:29> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                    (CXXThisExpr 0x928c938 <col:29> 'const struct std::_Bit_const_iterator *' this))))
              (BinaryOperator 0x928c9e0 <col:35, col:42> 'unsigned long' '<<'
                (IntegerLiteral 0x928c978 <col:35> 'unsigned long' 1)
                (ImplicitCastExpr 0x928c9d0 <col:42> 'unsigned int' <LValueToRValue>
                  (MemberExpr 0x928c9b0 <col:42> 'const unsigned int' lvalue ->_M_offset 0x9285ad0
                    (ImplicitCastExpr 0x928c9a0 <col:42> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (CXXThisExpr 0x928c990 <col:42> 'const struct std::_Bit_const_iterator *' this))))))))))))


        const_iterator &operator++() (CompoundStmt 0x928cb80 </usr/include/c++/4.6/bits/stl_bvector.h:290:5, line:293:5>
  (CXXMemberCallExpr 0x928cb18 <line:291:7, col:18> 'void'
    (MemberExpr 0x928caf8 <col:7> '<bound member function type>' ->_M_bump_up 0x9285ca0
      (ImplicitCastExpr 0x928cb38 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928cae8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x928cb70 <line:292:7, col:15>
    (UnaryOperator 0x928cb58 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928cb48 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator++(int) (CompoundStmt 0x928cea8 </usr/include/c++/4.6/bits/stl_bvector.h:297:5, line:301:5>
  (DeclStmt 0x928cdd8 <line:298:7, col:35>
    0x928cba0 "const_iterator __tmp =
      (CXXConstructExpr 0x928cdb0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x928cd10 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x928cbe8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x928cbd8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x928ce18 <line:299:7, col:18> 'void'
    (MemberExpr 0x928cdf8 <col:7> '<bound member function type>' ->_M_bump_up 0x9285ca0
      (ImplicitCastExpr 0x928ce38 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928cde8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x928ce98 <line:300:7, col:14>
    (CXXConstructExpr 0x928ce70 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x928ce60 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x928ce48 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x928cba0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator--() (CompoundStmt 0x928cf60 </usr/include/c++/4.6/bits/stl_bvector.h:305:5, line:308:5>
  (CXXMemberCallExpr 0x928cef8 <line:306:7, col:20> 'void'
    (MemberExpr 0x928ced8 <col:7> '<bound member function type>' ->_M_bump_down 0x9285d20
      (ImplicitCastExpr 0x928cf18 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928cec8 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x928cf50 <line:307:7, col:15>
    (UnaryOperator 0x928cf38 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928cf28 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator--(int) (CompoundStmt 0x928d0e8 </usr/include/c++/4.6/bits/stl_bvector.h:312:5, line:316:5>
  (DeclStmt 0x928d018 <line:313:7, col:35>
    0x928cf80 "const_iterator __tmp =
      (CXXConstructExpr 0x928cff0 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (ImplicitCastExpr 0x928cfe0 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
          (UnaryOperator 0x928cfc8 <col:30, col:31> 'struct std::_Bit_const_iterator' lvalue prefix '*'
            (CXXThisExpr 0x928cfb8 <col:31> 'struct std::_Bit_const_iterator *' this))))")
  (CXXMemberCallExpr 0x928d058 <line:314:7, col:20> 'void'
    (MemberExpr 0x928d038 <col:7> '<bound member function type>' ->_M_bump_down 0x9285d20
      (ImplicitCastExpr 0x928d078 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928d028 <col:7> 'struct std::_Bit_const_iterator *' this))))
  (ReturnStmt 0x928d0d8 <line:315:7, col:14>
    (CXXConstructExpr 0x928d0b0 <col:14> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (ImplicitCastExpr 0x928d0a0 <col:14> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (DeclRefExpr 0x928d088 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x928cf80 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')))))


        const_iterator &operator+=(difference_type __i) (CompoundStmt 0x928d1c8 </usr/include/c++/4.6/bits/stl_bvector.h:320:5, line:323:5>
  (CXXMemberCallExpr 0x928d150 <line:321:7, col:18> 'void'
    (MemberExpr 0x928d118 <col:7> '<bound member function type>' ->_M_incr 0x9285e10
      (ImplicitCastExpr 0x928d170 <col:7> 'struct std::_Bit_iterator_base *' <UncheckedDerivedToBase (_Bit_iterator_base)>
        (CXXThisExpr 0x928d108 <col:7> 'struct std::_Bit_const_iterator *' this)))
    (ImplicitCastExpr 0x928d180 <col:15> 'difference_type':'int' <LValueToRValue>
      (DeclRefExpr 0x928d138 <col:15> 'difference_type':'int' lvalue ParmVar 0x928c1e0 '__i' 'difference_type':'int')))
  (ReturnStmt 0x928d1b8 <line:322:7, col:15>
    (UnaryOperator 0x928d1a0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928d190 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator &operator-=(difference_type __i) (CompoundStmt 0x928d308 </usr/include/c++/4.6/bits/stl_bvector.h:327:5, line:330:5>
  (CXXOperatorCallExpr 0x928d2a8 <line:328:7, col:17> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
    (ImplicitCastExpr 0x928d298 <col:13, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
      (DeclRefExpr 0x928d248 <col:13, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x928c280 'operator+=' 'const_iterator &(difference_type)'))
    (UnaryOperator 0x928d1f0 <col:7, col:8> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928d1e0 <col:8> 'struct std::_Bit_const_iterator *' this))
    (UnaryOperator 0x928d230 <col:16, col:17> 'difference_type':'int' prefix '-'
      (ImplicitCastExpr 0x928d220 <col:17> 'difference_type':'int' <LValueToRValue>
        (DeclRefExpr 0x928d204 <col:17> 'difference_type':'int' lvalue ParmVar 0x928c2f0 '__i' 'difference_type':'int'))))
  (ReturnStmt 0x928d2f8 <line:329:7, col:15>
    (UnaryOperator 0x928d2e0 <col:14, col:15> 'struct std::_Bit_const_iterator' lvalue prefix '*'
      (CXXThisExpr 0x928d2d0 <col:15> 'struct std::_Bit_const_iterator *' this))))


        const_iterator operator+(difference_type __i) const (CompoundStmt 0x928d4a0 </usr/include/c++/4.6/bits/stl_bvector.h:334:5, line:337:5>
  (DeclStmt 0x928d3b8 <line:335:7, col:35>
    0x928d330 "const_iterator __tmp =
      (CXXConstructExpr 0x928d390 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x928d378 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x928d368 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x928d490 <line:336:7, col:23>
    (CXXConstructExpr 0x928d468 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x928d458 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x928d430 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x928d420 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x928d408 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x928c280 'operator+=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x928d3c8 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x928d330 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x928d3f8 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x928d3e0 <col:23> 'difference_type':'int' lvalue ParmVar 0x928c3c0 '__i' 'difference_type':'int')))))))


        const_iterator operator-(difference_type __i) const (CompoundStmt 0x928d630 </usr/include/c++/4.6/bits/stl_bvector.h:341:5, line:344:5>
  (DeclStmt 0x928d548 <line:342:7, col:35>
    0x928d4c0 "const_iterator __tmp =
      (CXXConstructExpr 0x928d520 <col:30, col:31> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
        (UnaryOperator 0x928d508 <col:30, col:31> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
          (CXXThisExpr 0x928d4f8 <col:31> 'const struct std::_Bit_const_iterator *' this)))")
  (ReturnStmt 0x928d620 <line:343:7, col:23>
    (CXXConstructExpr 0x928d5f8 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
      (ImplicitCastExpr 0x928d5e8 <col:14, col:23> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXOperatorCallExpr 0x928d5c0 <col:14, col:23> 'const_iterator':'struct std::_Bit_const_iterator' lvalue
          (ImplicitCastExpr 0x928d5b0 <col:20, <invalid sloc>> 'const_iterator &(*)(difference_type)' <FunctionToPointerDecay>
            (DeclRefExpr 0x928d598 <col:20, <invalid sloc>> 'const_iterator &(difference_type)' lvalue CXXMethod 0x928c350 'operator-=' 'const_iterator &(difference_type)'))
          (DeclRefExpr 0x928d558 <col:14> 'const_iterator':'struct std::_Bit_const_iterator' lvalue Var 0x928d4c0 '__tmp' 'const_iterator':'struct std::_Bit_const_iterator')
          (ImplicitCastExpr 0x928d588 <col:23> 'difference_type':'int' <LValueToRValue>
            (DeclRefExpr 0x928d570 <col:23> 'difference_type':'int' lvalue ParmVar 0x928c4d0 '__i' 'difference_type':'int')))))))


        const_reference operator[](difference_type __i) const (CompoundStmt 0x928d7b8 </usr/include/c++/4.6/bits/stl_bvector.h:348:5, col:30>
  (ReturnStmt 0x928d7a8 <col:7, col:27>
    (CXXOperatorCallExpr 0x928d788 <col:14, col:27> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x928d778 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x928d748 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x928be20 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x928d738 <col:15, col:27> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (ParenExpr 0x928d720 <col:15, col:27> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x928d6f8 <col:16, col:24> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x928d6e8 <col:22, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x928d698 <col:22, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x928c460 'operator+' 'const_iterator (difference_type) const'))
            (UnaryOperator 0x928d658 <col:16, col:17> 'const struct std::_Bit_const_iterator' lvalue prefix '*'
              (CXXThisExpr 0x928d648 <col:17> 'const struct std::_Bit_const_iterator *' this))
            (ImplicitCastExpr 0x928d688 <col:24> 'difference_type':'int' <LValueToRValue>
              (DeclRefExpr 0x928d66c <col:24> 'difference_type':'int' lvalue ParmVar 0x928c590 '__i' 'difference_type':'int'))))))))


        inline _Bit_const_iterator(const std::_Bit_const_iterator &) throw() : std::_Bit_iterator_base((ImplicitCastExpr 0x928cd38 </usr/include/c++/4.6/bits/stl_bvector.h:269:10> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
  (DeclRefExpr 0x928cd1c <col:10> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x928ccd0 '' 'const struct std::_Bit_const_iterator &'))
) (CompoundStmt 0x928cda0 </usr/include/c++/4.6/bits/stl_bvector.h:269:10>)


    };
    inline std::_Bit_const_iterator operator+(ptrdiff_t __n, const std::_Bit_const_iterator &__x) (CompoundStmt 0x928da20 </usr/include/c++/4.6/bits/stl_bvector.h:353:3, col:23>
  (ReturnStmt 0x928da10 <col:5, col:18>
    (CXXConstructExpr 0x928d9e8 <col:12, col:18> 'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x928d9d8 <col:12, col:18> 'const struct std::_Bit_const_iterator' lvalue
        (ImplicitCastExpr 0x928d9c8 <col:12, col:18> 'const struct std::_Bit_const_iterator' <NoOp>
          (CXXOperatorCallExpr 0x928d9a0 <col:12, col:18> 'const_iterator':'struct std::_Bit_const_iterator'
            (ImplicitCastExpr 0x928d990 <col:16, <invalid sloc>> 'const_iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x928d978 <col:16, <invalid sloc>> 'const_iterator (difference_type) const' lvalue CXXMethod 0x928c460 'operator+' 'const_iterator (difference_type) const'))
            (DeclRefExpr 0x928d938 <col:12> 'const struct std::_Bit_const_iterator' lvalue ParmVar 0x928d830 '__x' 'const struct std::_Bit_const_iterator &')
            (ImplicitCastExpr 0x928d968 <col:18> 'ptrdiff_t':'int' <LValueToRValue>
              (DeclRefExpr 0x928d950 <col:18> 'ptrdiff_t':'int' lvalue ParmVar 0x928d7e0 '__n' 'ptrdiff_t':'int'))))))))


    inline void __fill_bvector(std::_Bit_iterator __first, std::_Bit_iterator __last, bool __x) (CompoundStmt 0x928de18 </usr/include/c++/4.6/bits/stl_bvector.h:357:3, line:360:3>
  (ForStmt 0x928ddf0 <line:358:5, line:359:18>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x928dc48 <line:358:12, col:23> '_Bool'
      (ImplicitCastExpr 0x928dc38 <col:20, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x928dc20 <col:20, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x92860d0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x928dc10 <col:12> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x928dbbc <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x928da40 '__first' 'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x928dc00 <col:23> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x928dbf0 <col:23> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x928dbd4 <col:23> 'struct std::_Bit_iterator' lvalue ParmVar 0x928da80 '__last' 'struct std::_Bit_iterator'))))
    (CXXOperatorCallExpr 0x928dce8 <col:31, col:33> 'iterator':'struct std::_Bit_iterator' lvalue
      (ImplicitCastExpr 0x928dcd8 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
        (DeclRefExpr 0x928dc88 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9289ab0 'operator++' 'iterator &(void)'))
      (DeclRefExpr 0x928dc6c <col:33> 'struct std::_Bit_iterator' lvalue ParmVar 0x928da40 '__first' 'struct std::_Bit_iterator'))
    (CXXOperatorCallExpr 0x928ddc8 <line:359:7, col:18> 'struct std::_Bit_reference' lvalue
      (ImplicitCastExpr 0x928ddb8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x928dda0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9284530 'operator=' 'struct std::_Bit_reference &(_Bool)'))
      (CXXOperatorCallExpr 0x928dd58 <col:7, col:8> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x928dd48 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x928dd30 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x928dd20 <col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x928dd08 <col:8> 'struct std::_Bit_iterator' lvalue ParmVar 0x928da40 '__first' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x928dd90 <col:18> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x928dd78 <col:18> '_Bool' lvalue ParmVar 0x928dac0 '__x' '_Bool')))))


    inline void fill(std::_Bit_iterator __first, std::_Bit_iterator __last, const bool &__x) (CompoundStmt 0x928ec00 </usr/include/c++/4.6/bits/stl_bvector.h:364:3, line:373:3>
  (IfStmt 0x928ebe0 <line:365:5, line:372:42>
    <<<NULL>>>
    (BinaryOperator 0x928e0a0 <line:365:9, col:32> '_Bool' '!='
      (ImplicitCastExpr 0x928e080 <col:9, col:17> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x928e018 <col:9, col:17> '_Bit_type *' lvalue ._M_p 0x9285a90
          (ImplicitCastExpr 0x928e008 <col:9> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x928dfec <col:9> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de40 '__first' 'struct std::_Bit_iterator'))))
      (ImplicitCastExpr 0x928e090 <col:25, col:32> '_Bit_type *' <LValueToRValue>
        (MemberExpr 0x928e060 <col:25, col:32> '_Bit_type *' lvalue ._M_p 0x9285a90
          (ImplicitCastExpr 0x928e050 <col:25> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
            (DeclRefExpr 0x928e038 <col:25> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de80 '__last' 'struct std::_Bit_iterator')))))
    (CompoundStmt 0x928ea70 <line:366:7, line:370:7>
      (CallExpr 0x928e5d8 <line:367:2, col:55> 'void'
        (ImplicitCastExpr 0x928e5c8 <col:2, col:7> 'void (*)(unsigned long *, unsigned long *, const int &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x928e568 <col:2, col:7> 'void (unsigned long *, unsigned long *, const int &)' lvalue Function 0x928e4a0 'fill' 'void (unsigned long *, unsigned long *, const int &)' (FunctionTemplate 0x8e8ab40 'fill')))
        (BinaryOperator 0x928e188 <col:12, col:27> '_Bit_type *' '+'
          (ImplicitCastExpr 0x928e178 <col:12, col:20> '_Bit_type *' <LValueToRValue>
            (MemberExpr 0x928e140 <col:12, col:20> '_Bit_type *' lvalue ._M_p 0x9285a90
              (ImplicitCastExpr 0x928e130 <col:12> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                (DeclRefExpr 0x928e118 <col:12> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de40 '__first' 'struct std::_Bit_iterator'))))
          (IntegerLiteral 0x928e160 <col:27> 'int' 1))
        (ImplicitCastExpr 0x928e600 <col:30, col:37> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x928e1c8 <col:30, col:37> '_Bit_type *' lvalue ._M_p 0x9285a90
            (ImplicitCastExpr 0x928e1b8 <col:30> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x928e1a0 <col:30> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de80 '__last' 'struct std::_Bit_iterator'))))
        (MaterializeTemporaryExpr 0x928e610 <col:43, col:54> 'const int':'const int' lvalue
          (ConditionalOperator 0x928e258 <col:43, col:54> 'int'
            (ImplicitCastExpr 0x928e248 <col:43> '_Bool' <LValueToRValue>
              (DeclRefExpr 0x928e1e8 <col:43> 'const _Bool' lvalue ParmVar 0x928def0 '__x' 'const _Bool &'))
            (UnaryOperator 0x928e218 <col:49, col:50> 'int' prefix '~'
              (IntegerLiteral 0x928e200 <col:50> 'int' 0))
            (IntegerLiteral 0x928e230 <col:54> 'int' 0))))
      (CallExpr 0x928e7b8 <line:368:2, col:65> 'void'
        (ImplicitCastExpr 0x928e7a8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x928e770 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x928db50 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x928e7f0 <col:17> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x928e7e0 <col:17> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x928e654 <col:17> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de40 '__first' 'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x928e838 <col:26, col:59> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x928e828 <col:26, col:59> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x928e818 <col:26, col:59> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x928e728 <col:26, col:59> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (BinaryOperator 0x928e6e8 <col:40, col:55> '_Bit_type *' '+'
                  (ImplicitCastExpr 0x928e6d8 <col:40, col:48> '_Bit_type *' <LValueToRValue>
                    (MemberExpr 0x928e6a0 <col:40, col:48> '_Bit_type *' lvalue ._M_p 0x9285a90
                      (ImplicitCastExpr 0x928e690 <col:40> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                        (DeclRefExpr 0x928e678 <col:40> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de40 '__first' 'struct std::_Bit_iterator'))))
                  (IntegerLiteral 0x928e6c0 <col:55> 'int' 1))
                (ImplicitCastExpr 0x928e718 <col:58> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x928e700 <col:58> 'int' 0))))))
        (ImplicitCastExpr 0x928e860 <col:62> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x928e758 <col:62> 'const _Bool' lvalue ParmVar 0x928def0 '__x' 'const _Bool &')))
      (CallExpr 0x928e9b8 <line:369:2, col:59> 'void'
        (ImplicitCastExpr 0x928e9a8 <col:2> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x928e990 <col:2> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x928db50 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
        (CXXConstructExpr 0x928ea00 <col:17, col:45> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x928e9f0 <col:17, col:45> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x928e9e0 <col:17, col:45> 'const struct std::_Bit_iterator' <NoOp>
              (CXXTemporaryObjectExpr 0x928e930 <col:17, col:45> 'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                (ImplicitCastExpr 0x928e910 <col:31, col:38> '_Bit_type *' <LValueToRValue>
                  (MemberExpr 0x928e8d8 <col:31, col:38> '_Bit_type *' lvalue ._M_p 0x9285a90
                    (ImplicitCastExpr 0x928e8c8 <col:31> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                      (DeclRefExpr 0x928e8b0 <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de80 '__last' 'struct std::_Bit_iterator'))))
                (ImplicitCastExpr 0x928e920 <col:44> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x928e8f8 <col:44> 'int' 0))))))
        (CXXConstructExpr 0x928ea38 <col:48> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x928ea28 <col:48> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x928e960 <col:48> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de80 '__last' 'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x928ea60 <col:56> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x928e978 <col:56> 'const _Bool' lvalue ParmVar 0x928def0 '__x' 'const _Bool &'))))
    (CallExpr 0x928eb38 <line:372:7, col:42> 'void'
      (ImplicitCastExpr 0x928eb28 <col:7> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' <FunctionToPointerDecay>
        (DeclRefExpr 0x928eb0c <col:7> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)' lvalue Function 0x928db50 '__fill_bvector' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, _Bool)'))
      (CXXConstructExpr 0x928eb70 <col:22> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x928eb60 <col:22> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x928eac4 <col:22> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de40 '__first' 'struct std::_Bit_iterator')))
      (CXXConstructExpr 0x928eba8 <col:31> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
        (ImplicitCastExpr 0x928eb98 <col:31> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x928eadc <col:31> 'struct std::_Bit_iterator' lvalue ParmVar 0x928de80 '__last' 'struct std::_Bit_iterator')))
      (ImplicitCastExpr 0x928ebd0 <col:39> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x928eaf4 <col:39> 'const _Bool' lvalue ParmVar 0x928def0 '__x' 'const _Bool &')))))


    template <typename _Alloc> struct _Bvector_base {
        struct _Bvector_base;
        typedef typename _Alloc::_Alloc::rebind<_Bit_type>::other _Bit_alloc_type;
        struct _Bvector_impl : public _Bit_alloc_type {
            struct _Bvector_impl;
            std::_Bit_iterator _M_start;
            std::_Bit_iterator _M_finish;
            _Bit_type *_M_end_of_storage;
            _Bvector_impl() : _Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x928fc68 </usr/include/c++/4.6/bits/stl_bvector.h:389:66> 'int' 0)
) (CompoundStmt 0x928fcd8 </usr/include/c++/4.6/bits/stl_bvector.h:390:2, col:4>)


            _Bvector_impl(const _Bit_alloc_type &__a) : _Bit_alloc_type((DeclRefExpr 0x928fce8 </usr/include/c++/4.6/bits/stl_bvector.h:393:20> 'const _Bit_alloc_type':'const typename _Alloc::_Alloc::rebind<_Bit_type>::other' lvalue ParmVar 0x928f350 '__a' 'const _Bit_alloc_type &')
), _M_start(), _M_finish(), _M_end_of_storage((IntegerLiteral 0x928fde8 </usr/include/c++/4.6/bits/stl_bvector.h:393:69> 'int' 0)
) (CompoundStmt 0x928fe58 </usr/include/c++/4.6/bits/stl_bvector.h:394:2, col:4>)


        };
    public:
    public:
        typedef _Alloc allocator_type;
        _Bit_alloc_type &_M_get_Bit_allocator() (CompoundStmt 0x928ffb8 </usr/include/c++/4.6/bits/stl_bvector.h:402:7, col:64>
  (ReturnStmt 0x928ffa8 <col:9, col:61>
    (UnaryOperator 0x928ff90 <col:16, col:61> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x928ff78 <col:17, col:61> '_Bit_alloc_type *' static_cast<_Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x928ff10 <col:47, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x928fed0 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CXXDependentScopeMemberExpr 0x928fe98 <col:48, col:54> '<dependent type>' lvalue
            (CXXThisExpr 0x928fe88 <col:48> '_Bvector_base<_Alloc> *' this)))))))


        const _Bit_alloc_type &_M_get_Bit_allocator() const (CompoundStmt 0x9290118 </usr/include/c++/4.6/bits/stl_bvector.h:406:7, col:70>
  (ReturnStmt 0x9290108 <col:9, col:67>
    (UnaryOperator 0x92900f0 <col:16, col:67> '<dependent type>' prefix '*'
      (CXXStaticCastExpr 0x92900d8 <col:17, col:67> 'const _Bit_alloc_type *' static_cast<const _Bit_alloc_type *> <Dependent>
        (CXXOperatorCallExpr 0x9290070 <col:53, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x9290030 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
          (CXXDependentScopeMemberExpr 0x928fff8 <col:54, col:60> '<dependent type>' lvalue
            (CXXThisExpr 0x928ffe8 <col:54> 'const _Bvector_base<_Alloc> *' this)))))))


        allocator_type get_allocator() const (CompoundStmt 0x92901d8 </usr/include/c++/4.6/bits/stl_bvector.h:410:7, col:56>
  (ReturnStmt 0x92901c8 <col:9, col:53>
    (CXXUnresolvedConstructExpr 0x92901a8 <col:16, col:53> 'allocator_type':'_Alloc'
      (CallExpr 0x9290188 <col:31, col:52> '<dependent type>'
        (UnresolvedMemberExpr 0x9290148 <col:31> '<bound member function type>' lvalue)))))


        _Bvector_base<_Alloc>() : _M_impl() (CompoundStmt 0x9290230 </usr/include/c++/4.6/bits/stl_bvector.h:413:19, col:21>)


        _Bvector_base<_Alloc>(const allocator_type &__a) : _M_impl((DeclRefExpr 0x9290240 </usr/include/c++/4.6/bits/stl_bvector.h:416:17> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x928f7f0 '__a' 'const allocator_type &')
) (CompoundStmt 0x92902a0 </usr/include/c++/4.6/bits/stl_bvector.h:416:22, col:24>)


        void ~_Bvector_base<_Alloc>() (CompoundStmt 0x9290318 </usr/include/c++/4.6/bits/stl_bvector.h:432:7, col:32>
  (CallExpr 0x92902f8 <col:9, col:29> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92902c0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x92902b0 <col:9> '_Bvector_base<_Alloc> *' this))))


    protected:
    protected:
        std::_Bvector_base::_Bvector_impl _M_impl;
        _Bit_type *_M_allocate(size_t __n) (CompoundStmt 0x9290538 </usr/include/c++/4.6/bits/stl_bvector.h:439:7, line:440:26>
  (ReturnStmt 0x9290528 <line:439:9, line:440:23>
    (CallExpr 0x9290508 <line:439:16, line:440:23> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9290360 <line:439:16, col:24> '<dependent type>' lvalue
        (MemberExpr 0x9290340 <col:16> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
          (CXXThisExpr 0x9290330 <col:16> '_Bvector_base<_Alloc> *' this)))
      (BinaryOperator 0x92904f0 <col:33, line:440:22> 'unsigned int' '/'
        (ParenExpr 0x9290478 <line:439:33, col:60> 'unsigned int'
          (BinaryOperator 0x9290460 <col:34, col:59> 'unsigned int' '-'
            (BinaryOperator 0x9290420 <col:34, col:55> 'unsigned int' '+'
              (ImplicitCastExpr 0x9290400 <col:34> 'size_t':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x9290394 <col:34> 'size_t':'unsigned int' lvalue ParmVar 0x928fa10 '__n' 'size_t':'unsigned int'))
              (ImplicitCastExpr 0x9290410 <col:40, col:55> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x92903e8 <col:40, col:55> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x92903d8 <col:44> 'int' <IntegralCast>
                    (DeclRefExpr 0x92903bc <col:44> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
            (ImplicitCastExpr 0x9290450 <col:59> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x9290438 <col:59> 'int' 1))))
        (ImplicitCastExpr 0x92904e0 <line:440:7, col:22> 'unsigned int' <IntegralCast>
          (CXXFunctionalCastExpr 0x92904c8 <col:7, col:22> 'int' functional cast to int <NoOp>
            (ImplicitCastExpr 0x92904b8 <col:11> 'int' <IntegralCast>
              (DeclRefExpr 0x929049c <col:11> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))


        void _M_deallocate() (CompoundStmt 0x92908e8 </usr/include/c++/4.6/bits/stl_bvector.h:444:7, line:448:7>
  (IfStmt 0x92908c8 <line:445:2, line:447:58>
    <<<NULL>>>
    (CXXDependentScopeMemberExpr 0x92905b8 <line:445:6, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9290580 <col:6, col:14> '<dependent type>' lvalue
        (MemberExpr 0x9290560 <col:6> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
          (CXXThisExpr 0x9290550 <col:6> '_Bvector_base<_Alloc> *' this))))
    (CallExpr 0x92908a0 <line:446:4, line:447:58> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9290620 <line:446:4, col:12> '<dependent type>' lvalue
        (MemberExpr 0x9290600 <col:4> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
          (CXXThisExpr 0x92905f0 <col:4> '_Bvector_base<_Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x92906f8 <col:23, col:40> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92906c0 <col:23, col:31> '<dependent type>' lvalue
          (MemberExpr 0x9290668 <col:23> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
            (CXXThisExpr 0x9290658 <col:23> '_Bvector_base<_Alloc> *' this))))
      (CXXOperatorCallExpr 0x9290878 <line:447:9, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x9290838 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x92892b0 0x8e5c440 0x8e5f2c0)
        (CXXDependentScopeMemberExpr 0x9290760 <col:9, col:17> '<dependent type>' lvalue
          (MemberExpr 0x9290740 <col:9> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
            (CXXThisExpr 0x9290730 <col:9> '_Bvector_base<_Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x9290800 <col:37, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92907c8 <col:37, col:45> '<dependent type>' lvalue
            (MemberExpr 0x92907a8 <col:37> 'struct std::_Bvector_base::_Bvector_impl' lvalue ->_M_impl 0x928f9d0
              (CXXThisExpr 0x9290798 <col:37> '_Bvector_base<_Alloc> *' this))))))
    <<<NULL>>>))


    };
}
namespace std {
    class vector : protected _Bvector_base<_Alloc> {
        class vector;
        typedef _Bvector_base<_Alloc> _Base;
    public:
    public:
        typedef bool value_type;
        typedef size_t size_type;
        typedef ptrdiff_t difference_type;
        typedef std::_Bit_reference reference;
        typedef bool const_reference;
        typedef std::_Bit_reference *pointer;
        typedef const bool *const_pointer;
        typedef std::_Bit_iterator iterator;
        typedef std::_Bit_const_iterator const_iterator;
        typedef std::reverse_iterator<const_iterator> const_reverse_iterator;
        typedef std::reverse_iterator<iterator> reverse_iterator;
        typedef _Alloc allocator_type;
        allocator_type get_allocator() const (CompoundStmt 0x9296770 </usr/include/c++/4.6/bits/stl_bvector.h:502:5, col:38>
  (ReturnStmt 0x9296760 <col:7, col:35>
    (CallExpr 0x9296740 <col:14, col:35> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9296708 <col:14, col:21> '<dependent type>' lvalue))))


    protected:
    protected:
        using _Base::1;
        using _Base::1;
        using _Base::1;
    public:
    public:
        vector<_Bool, type-parameter-0-0>() : _Base() (CompoundStmt 0x92967d0 </usr/include/c++/4.6/bits/stl_bvector.h:511:15, col:17>)


        vector<_Bool, type-parameter-0-0>(const allocator_type &__a) : _Base((DeclRefExpr 0x92967e0 </usr/include/c++/4.6/bits/stl_bvector.h:515:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9291830 '__a' 'const allocator_type &')
) (CompoundStmt 0x9296840 </usr/include/c++/4.6/bits/stl_bvector.h:515:18, col:20>)


        vector<_Bool, type-parameter-0-0>(size_type __n, const bool &__value = (MaterializeTemporaryExpr 0x9296640 </usr/include/c++/4.6/bits/stl_bvector.h:518:49, col:54> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9296630 <col:49, col:54> '_Bool'))
, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9296658 </usr/include/c++/4.6/bits/stl_bvector.h:519:33, col:48> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9296850 </usr/include/c++/4.6/bits/stl_bvector.h:520:13> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x92919e0 '__a' 'const allocator_type &')
) (CompoundStmt 0x9296b80 </usr/include/c++/4.6/bits/stl_bvector.h:521:5, line:525:5>
  (CallExpr 0x9296910 <line:522:7, col:24> '<dependent type>'
    (MemberExpr 0x92968d8 <col:7> '<bound member function type>' ->_M_initialize 0x92943c0
      (CXXThisExpr 0x92968c8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92968f8 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x9291940 '__n' 'size_type':'unsigned int'))
  (CallExpr 0x9296b58 <line:523:7, line:524:19> '<dependent type>'
    (UnresolvedLookupExpr 0x9296958 <line:523:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
    (CXXDependentScopeMemberExpr 0x9296a10 <col:17, col:40> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92969d8 <col:17, col:31> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92969a0 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x9296990 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x9296a90 <col:46, col:60> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9296a58 <col:46, col:52> '<dependent type>' lvalue
        (CXXThisExpr 0x9296a48 <col:46> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x9296b38 <line:524:3, col:18> 'int'
      (ImplicitCastExpr 0x9296b28 <col:3> '_Bool' <LValueToRValue>
        (DeclRefExpr 0x9296ac4 <col:3> 'const _Bool' lvalue ParmVar 0x9291990 '__value' 'const _Bool &'))
      (UnaryOperator 0x9296af8 <col:13, col:14> 'int' prefix '~'
        (IntegerLiteral 0x9296ae0 <col:14> 'int' 0))
      (IntegerLiteral 0x9296b10 <col:18> 'int' 0))))


        vector<_Bool, type-parameter-0-0>(const vector<bool, type-parameter-0-0> &__x) : _Base((CallExpr 0x9296be8 </usr/include/c++/4.6/bits/stl_bvector.h:528:13, col:38> '<dependent type>'
  (CXXDependentScopeMemberExpr 0x9296bb0 <col:13, col:17> '<dependent type>' lvalue
    (DeclRefExpr 0x9296b98 <col:13> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291b50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
) (CompoundStmt 0x9296ec8 </usr/include/c++/4.6/bits/stl_bvector.h:529:5, line:532:5>
  (CallExpr 0x9296cf0 <line:530:7, col:31> '<dependent type>'
    (MemberExpr 0x9296c60 <col:7> '<bound member function type>' ->_M_initialize 0x92943c0
      (CXXThisExpr 0x9296c50 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9296cd0 <col:21, col:30> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9296c98 <col:21, col:25> '<dependent type>' lvalue
        (DeclRefExpr 0x9296c80 <col:21> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291b50 '__x' 'const vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x9296ea0 <line:531:7, col:69> '<dependent type>'
    (MemberExpr 0x9296d20 <col:7> '<bound member function type>' ->_M_copy_aligned 0x92942f0
      (CXXThisExpr 0x9296d10 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x9296d90 <col:23, col:33> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9296d58 <col:23, col:27> '<dependent type>' lvalue
        (DeclRefExpr 0x9296d40 <col:23> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291b50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CallExpr 0x9296e00 <col:36, col:44> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x9296dc8 <col:36, col:40> '<dependent type>' lvalue
        (DeclRefExpr 0x9296dac <col:36> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291b50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
    (CXXDependentScopeMemberExpr 0x9296e68 <col:47, col:61> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9296e30 <col:47, col:53> '<dependent type>' lvalue
        (CXXThisExpr 0x9296e20 <col:47> 'vector<_Bool, type-parameter-0-0> *' this)))))


        template <typename _InputIterator> vector<_Bool, type-parameter-0-0>(_InputIterator __first, _InputIterator __last, const allocator_type &__a = (CXXUnresolvedConstructExpr 0x9296678 </usr/include/c++/4.6/bits/stl_bvector.h:549:35, col:50> 'allocator_type':'_Alloc')
) : _Base((DeclRefExpr 0x9296ee0 </usr/include/c++/4.6/bits/stl_bvector.h:550:15> 'const allocator_type':'const _Alloc' lvalue ParmVar 0x9291d30 '__a' 'const allocator_type &')
) (CompoundStmt 0x9297158 </usr/include/c++/4.6/bits/stl_bvector.h:551:7, line:554:7>
  (DeclStmt 0x9297070 <line:552:2, col:70>
    0x9297040 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9297130 <line:553:2, col:53> '<dependent type>'
    (UnresolvedMemberExpr 0x9297090 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92970d0 <col:25> '_InputIterator' lvalue ParmVar 0x9291ca0 '__first' '_InputIterator')
    (DeclRefExpr 0x92970e8 <col:34> '_InputIterator' lvalue ParmVar 0x9291ce0 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9297118 <col:42, col:52> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void ~vector<_Bool, type-parameter-0-0>() (CompoundStmt 0x9297170 </usr/include/c++/4.6/bits/stl_bvector.h:556:15, col:17>)


        vector<bool, type-parameter-0-0> &operator=(const vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x92977f8 </usr/include/c++/4.6/bits/stl_bvector.h:560:5, line:571:5>
  (IfStmt 0x92972c8 <line:561:7, line:562:10>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x9297268 <line:561:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x9297208 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
      (CXXOperatorCallExpr 0x92971d8 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0x9297198 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (DeclRefExpr 0x9297180 <col:12> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291f50 '__x' 'const vector<_Bool, type-parameter-0-0> &'))
      (CXXThisExpr 0x92971f8 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
    (ReturnStmt 0x92972b8 <line:562:2, col:10>
      (UnaryOperator 0x92972a0 <col:9, col:10> '<dependent type>' prefix '*'
        (CXXThisExpr 0x9297290 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
    <<<NULL>>>)
  (IfStmt 0x9297560 <line:563:7, line:567:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92973f8 <line:563:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x92973a8 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (CallExpr 0x9297338 <col:11, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9297300 <col:11, col:15> '<dependent type>' lvalue
          (DeclRefExpr 0x92972e4 <col:11> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291f50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9297388 <col:24, col:33> '<dependent type>'
        (MemberExpr 0x9297368 <col:24> '<bound member function type>' ->capacity 0x9292980
          (CXXThisExpr 0x9297358 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x9297548 <line:564:2, line:567:2>
      (CallExpr 0x9297468 <line:565:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9297430 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x9297420 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CallExpr 0x9297528 <line:566:4, col:28> '<dependent type>'
        (MemberExpr 0x9297498 <col:4> '<bound member function type>' ->_M_initialize 0x92943c0
          (CXXThisExpr 0x9297488 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CallExpr 0x9297508 <col:18, col:27> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92974d0 <col:18, col:22> '<dependent type>' lvalue
            (DeclRefExpr 0x92974b8 <col:18> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291f50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))))
    <<<NULL>>>)
  (BinaryOperator 0x92977a8 <line:568:7, line:569:14> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92975c8 <line:568:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9297590 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x9297580 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CallExpr 0x9297780 <col:33, line:569:14> '<dependent type>'
      (MemberExpr 0x9297610 <line:568:33> '<bound member function type>' ->_M_copy_aligned 0x92942f0
        (CXXThisExpr 0x9297600 <col:33> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x9297680 <col:49, col:59> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x9297648 <col:49, col:53> '<dependent type>' lvalue
          (DeclRefExpr 0x9297630 <col:49> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291f50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x92976f0 <col:62, col:70> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92976b8 <col:62, col:66> '<dependent type>' lvalue
          (DeclRefExpr 0x929769c <col:62> 'const vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9291f50 '__x' 'const vector<_Bool, type-parameter-0-0> &')))
      (CallExpr 0x9297760 <line:569:7, col:13> '<dependent type>'
        (UnresolvedMemberExpr 0x9297720 <col:7> '<bound member function type>' lvalue))))
  (ReturnStmt 0x92977e8 <line:570:7, col:15>
    (UnaryOperator 0x92977d0 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92977c0 <col:15> 'vector<_Bool, type-parameter-0-0> *' this))))


        void assign(size_type __n, const bool &__x) (CompoundStmt 0x92978a0 </usr/include/c++/4.6/bits/stl_bvector.h:598:5, col:33>
  (CallExpr 0x9297878 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x9297828 <col:7> '<bound member function type>' ->_M_fill_assign 0x92951d0
      (CXXThisExpr 0x9297818 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x9297848 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9292060 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x9297860 <col:27> 'const _Bool' lvalue ParmVar 0x92920b0 '__x' 'const _Bool &')))


        template <typename _InputIterator> void assign(_InputIterator __first, _InputIterator __last) (CompoundStmt 0x9297ac8 </usr/include/c++/4.6/bits/stl_bvector.h:603:7, line:606:7>
  (DeclStmt 0x92979e0 <line:604:2, col:70>
    0x92979b0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x9297aa0 <line:605:2, col:49> '<dependent type>'
    (UnresolvedMemberExpr 0x9297a00 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x9297a40 <col:21> '_InputIterator' lvalue ParmVar 0x9292220 '__first' '_InputIterator')
    (DeclRefExpr 0x9297a58 <col:30> '_InputIterator' lvalue ParmVar 0x9292260 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x9297a88 <col:38, col:48> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        iterator begin() (CompoundStmt 0x9297b70 </usr/include/c++/4.6/bits/stl_bvector.h:616:5, col:38>
  (ReturnStmt 0x9297b60 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9297b28 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9297af0 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9297ae0 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator begin() const (CompoundStmt 0x9297c18 </usr/include/c++/4.6/bits/stl_bvector.h:620:5, col:38>
  (ReturnStmt 0x9297c08 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9297bd0 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9297b98 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9297b88 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        iterator end() (CompoundStmt 0x9297cc0 </usr/include/c++/4.6/bits/stl_bvector.h:624:5, col:39>
  (ReturnStmt 0x9297cb0 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9297c78 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9297c40 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9297c30 <col:14> 'vector<_Bool, type-parameter-0-0> *' this)))))


        const_iterator end() const (CompoundStmt 0x9297d68 </usr/include/c++/4.6/bits/stl_bvector.h:628:5, col:39>
  (ReturnStmt 0x9297d58 <col:7, col:28>
    (CXXDependentScopeMemberExpr 0x9297d20 <col:14, col:28> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x9297ce8 <col:14, col:20> '<dependent type>' lvalue
        (CXXThisExpr 0x9297cd8 <col:14> 'const vector<_Bool, type-parameter-0-0> *' this)))))


        reverse_iterator rbegin() (CompoundStmt 0x92a3ea0 </usr/include/c++/4.6/bits/stl_bvector.h:632:5, col:39>
  (ReturnStmt 0x92a3e90 <col:7, col:36>
    (CXXConstructExpr 0x92a3e68 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x92a3e58 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x92a3e48 <col:14, col:36> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x92a3c18 <col:14, col:36> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x92a3bf8 <col:31, col:35> '<dependent type>'
              (UnresolvedMemberExpr 0x92a3bb8 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rbegin() const (CompoundStmt 0x92a6e00 </usr/include/c++/4.6/bits/stl_bvector.h:636:5, col:45>
  (ReturnStmt 0x92a6df0 <col:7, col:42>
    (CXXConstructExpr 0x92a6dc8 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x92a6db8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x92a6da8 <col:14, col:42> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x92a6b78 <col:14, col:42> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x92a6b58 <col:37, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x92a6b18 <col:37> '<bound member function type>' lvalue))))))))


        reverse_iterator rend() (CompoundStmt 0x92a6f58 </usr/include/c++/4.6/bits/stl_bvector.h:640:5, col:41>
  (ReturnStmt 0x92a6f48 <col:7, col:38>
    (CXXConstructExpr 0x92a6f20 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>''void (const class std::reverse_iterator<struct std::_Bit_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x92a6f10 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' lvalue
        (ImplicitCastExpr 0x92a6f00 <col:14, col:38> 'const class std::reverse_iterator<struct std::_Bit_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x92a6e90 <col:14, col:38> 'reverse_iterator':'class std::reverse_iterator<struct std::_Bit_iterator>'
            (CallExpr 0x92a6e70 <col:31, col:37> '<dependent type>'
              (UnresolvedMemberExpr 0x92a6e30 <col:31> '<bound member function type>' lvalue))))))))


        const_reverse_iterator rend() const (CompoundStmt 0x92a70b0 </usr/include/c++/4.6/bits/stl_bvector.h:644:5, col:47>
  (ReturnStmt 0x92a70a0 <col:7, col:44>
    (CXXConstructExpr 0x92a7078 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>''void (const class std::reverse_iterator<struct std::_Bit_const_iterator> &)' elidable
      (MaterializeTemporaryExpr 0x92a7068 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' lvalue
        (ImplicitCastExpr 0x92a7058 <col:14, col:44> 'const class std::reverse_iterator<struct std::_Bit_const_iterator>' <NoOp>
          (CXXUnresolvedConstructExpr 0x92a6fe8 <col:14, col:44> 'const_reverse_iterator':'class std::reverse_iterator<struct std::_Bit_const_iterator>'
            (CallExpr 0x92a6fc8 <col:37, col:43> '<dependent type>'
              (UnresolvedMemberExpr 0x92a6f88 <col:37> '<bound member function type>' lvalue))))))))


        size_type size() const (CompoundStmt 0x92a7248 </usr/include/c++/4.6/bits/stl_bvector.h:666:5, col:42>
  (ReturnStmt 0x92a7238 <col:7, col:39>
    (CXXUnresolvedConstructExpr 0x92a7218 <col:14, col:39> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x92a71f0 <col:24, col:38> '<dependent type>'
        (UnresolvedLookupExpr 0x92a71b0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (CallExpr 0x92a7120 <col:24, col:28> '<dependent type>'
          (UnresolvedMemberExpr 0x92a70e0 <col:24> '<bound member function type>' lvalue))
        (CallExpr 0x92a7190 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x92a7150 <col:32> '<bound member function type>' lvalue))))))


        size_type max_size() const (CompoundStmt 0x92a7728 </usr/include/c++/4.6/bits/stl_bvector.h:670:5, line:677:5>
  (DeclStmt 0x92a7428 <line:671:7, line:673:24>
    0x92a7270 "const size_type __isize =
      (ImplicitCastExpr 0x92a7418 <line:672:2, line:673:23> 'const size_type':'const unsigned int' <IntegralCast>
        (BinaryOperator 0x92a7400 <line:672:2, line:673:23> 'int' '+'
          (BinaryOperator 0x92a73d0 <line:672:2, line:673:19> 'int' '-'
            (ImplicitCastExpr 0x92a73c0 <line:672:2, col:48> 'int':'int' <LValueToRValue>
              (DeclRefExpr 0x92a7350 <col:2, col:48> 'const int':'const int' lvalue Var 0x8fe2830 '__max' 'const int':'const int'))
            (CXXFunctionalCastExpr 0x92a73a8 <line:673:4, col:19> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x92a7398 <col:8> 'int' <IntegralCast>
                (DeclRefExpr 0x92a737c <col:8> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))
          (IntegerLiteral 0x92a73e8 <col:23> 'int' 1)))")
  (DeclStmt 0x92a7528 <line:674:7, col:66>
    0x92a7440 "const size_type __asize =
      (CallExpr 0x92a7508 <col:33, col:65> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a74d0 <col:33, col:56> '<dependent type>' lvalue
          (CallExpr 0x92a74b0 <col:33, col:54> '<dependent type>'
            (UnresolvedMemberExpr 0x92a7474 <col:33> '<dependent type>' lvalue))))")
  (ReturnStmt 0x92a7718 <line:675:7, line:676:46>
    (ParenExpr 0x92a7700 <line:675:14, line:676:46> 'unsigned int'
      (ConditionalOperator 0x92a76e0 <line:675:15, line:676:39> 'unsigned int'
        (BinaryOperator 0x92a7600 <line:675:15, col:51> '_Bool' '<='
          (ImplicitCastExpr 0x92a75f0 <col:15> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92a7538 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x92a7440 '__asize' 'const size_type':'const unsigned int'))
          (BinaryOperator 0x92a75d8 <col:26, col:51> 'unsigned int' '/'
            (ImplicitCastExpr 0x92a75b8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x92a7550 <col:26> 'const size_type':'const unsigned int' lvalue Var 0x92a7270 '__isize' 'const size_type':'const unsigned int'))
            (ImplicitCastExpr 0x92a75c8 <col:36, col:51> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x92a75a0 <col:36, col:51> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x92a7590 <col:40> 'int' <IntegralCast>
                  (DeclRefExpr 0x92a7574 <col:40> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
        (BinaryOperator 0x92a76a0 <line:676:10, col:35> 'unsigned int' '*'
          (ImplicitCastExpr 0x92a7680 <col:10> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92a7618 <col:10> 'const size_type':'const unsigned int' lvalue Var 0x92a7440 '__asize' 'const size_type':'const unsigned int'))
          (ImplicitCastExpr 0x92a7690 <col:20, col:35> 'unsigned int' <IntegralCast>
            (CXXFunctionalCastExpr 0x92a7668 <col:20, col:35> 'int' functional cast to int <NoOp>
              (ImplicitCastExpr 0x92a7658 <col:24> 'int' <IntegralCast>
                (DeclRefExpr 0x92a763c <col:24> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
        (ImplicitCastExpr 0x92a76d0 <col:39> 'size_type':'unsigned int' <LValueToRValue>
          (DeclRefExpr 0x92a76b8 <col:39> 'const size_type':'const unsigned int' lvalue Var 0x92a7270 '__isize' 'const size_type':'const unsigned int'))))))


        size_type capacity() const (CompoundStmt 0x92a7918 </usr/include/c++/4.6/bits/stl_bvector.h:681:5, line:682:22>
  (ReturnStmt 0x92a7908 <line:681:7, line:682:19>
    (CXXUnresolvedConstructExpr 0x92a78e8 <line:681:14, line:682:19> 'size_type':'unsigned int'
      (CXXOperatorCallExpr 0x92a78c0 <line:681:24, line:682:18> '<dependent type>'
        (UnresolvedLookupExpr 0x92a7880 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (CXXUnresolvedConstructExpr 0x92a77f0 <line:681:24, col:73> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXDependentScopeMemberExpr 0x92a77a0 <col:39, col:53> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92a7768 <col:39, col:45> '<dependent type>' lvalue
              (CXXThisExpr 0x92a7758 <col:39> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x92a77d8 <col:72> 'int' 0))
        (CallExpr 0x92a7860 <line:682:12, col:18> '<dependent type>'
          (UnresolvedMemberExpr 0x92a7820 <col:12> '<bound member function type>' lvalue))))))


        bool empty() const (CompoundStmt 0x92a7aa8 </usr/include/c++/4.6/bits/stl_bvector.h:686:5, col:32>
  (ReturnStmt 0x92a7a98 <col:7, col:29>
    (CXXOperatorCallExpr 0x92a7a70 <col:14, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x92a7a10 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
      (CallExpr 0x92a7980 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x92a7940 <col:14> '<bound member function type>' lvalue))
      (CallExpr 0x92a79f0 <col:25, col:29> '<dependent type>'
        (UnresolvedMemberExpr 0x92a79b0 <col:25> '<bound member function type>' lvalue)))))


        reference operator[](size_type __n) (CompoundStmt 0x92a7e08 </usr/include/c++/4.6/bits/stl_bvector.h:690:5, line:693:5>
  (ReturnStmt 0x92a7df8 <line:691:7, line:692:58>
    (CXXConstructExpr 0x92a7dd0 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference''void (const struct std::_Bit_reference &) throw()' elidable
      (MaterializeTemporaryExpr 0x92a7dc0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x92a7db0 <line:691:14, line:692:58> 'const struct std::_Bit_reference' <NoOp>
          (CXXOperatorCallExpr 0x92a7d90 <line:691:14, line:692:58> 'reference':'struct std::_Bit_reference'
            (ImplicitCastExpr 0x92a7d80 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x92a7d68 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
            (ImplicitCastExpr 0x92a7d58 <line:691:15, line:692:58> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (CXXUnresolvedConstructExpr 0x92a7d38 <line:691:15, line:692:58> 'iterator':'struct std::_Bit_iterator'
                (CXXOperatorCallExpr 0x92a7c70 <line:691:24, line:692:33> '<dependent type>'
                  (UnresolvedLookupExpr 0x92a7c20 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                  (CXXDependentScopeMemberExpr 0x92a7b48 <line:691:24, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92a7b10 <col:24, col:38> '<dependent type>' lvalue
                      (CXXDependentScopeMemberExpr 0x92a7ad8 <col:24, col:30> '<dependent type>' lvalue
                        (CXXThisExpr 0x92a7ac8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
                  (BinaryOperator 0x92a7c08 <line:692:12, col:33> 'unsigned int' '/'
                    (ImplicitCastExpr 0x92a7be8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x92a7b7c <col:12> 'size_type':'unsigned int' lvalue ParmVar 0x9292a80 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x92a7bf8 <col:18, col:33> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x92a7bd0 <col:18, col:33> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x92a7bc0 <col:22> 'int' <IntegralCast>
                          (DeclRefExpr 0x92a7ba4 <col:22> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
                (BinaryOperator 0x92a7d20 <col:36, col:57> 'unsigned int' '%'
                  (ImplicitCastExpr 0x92a7d00 <col:36> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92a7c94 <col:36> 'size_type':'unsigned int' lvalue ParmVar 0x9292a80 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x92a7d10 <col:42, col:57> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x92a7ce8 <col:42, col:57> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x92a7cd8 <col:46> 'int' <IntegralCast>
                        (DeclRefExpr 0x92a7cbc <col:46> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))))))


        const_reference operator[](size_type __n) const (CompoundStmt 0x92a8120 </usr/include/c++/4.6/bits/stl_bvector.h:697:5, line:700:5>
  (ReturnStmt 0x92a8110 <line:698:7, line:699:57>
    (CXXOperatorCallExpr 0x92a80f0 <line:698:14, line:699:57> 'const_reference':'_Bool'
      (ImplicitCastExpr 0x92a80e0 <<invalid sloc>> 'const_reference (*)(void) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x92a80c8 <<invalid sloc>> 'const_reference (void) const' lvalue CXXMethod 0x928be20 'operator*' 'const_reference (void) const'))
      (ImplicitCastExpr 0x92a80b8 <line:698:15, line:699:57> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
        (CXXUnresolvedConstructExpr 0x92a8098 <line:698:15, line:699:57> 'const_iterator':'struct std::_Bit_const_iterator'
          (CXXOperatorCallExpr 0x92a7fd0 <line:698:30, line:699:32> '<dependent type>'
            (UnresolvedLookupExpr 0x92a7f80 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
            (CXXDependentScopeMemberExpr 0x92a7ea8 <line:698:30, col:53> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92a7e70 <col:30, col:44> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92a7e38 <col:30, col:36> '<dependent type>' lvalue
                  (CXXThisExpr 0x92a7e28 <col:30> 'const vector<_Bool, type-parameter-0-0> *' this))))
            (BinaryOperator 0x92a7f68 <line:699:11, col:32> 'unsigned int' '/'
              (ImplicitCastExpr 0x92a7f48 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92a7edc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9292bb0 '__n' 'size_type':'unsigned int'))
              (ImplicitCastExpr 0x92a7f58 <col:17, col:32> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x92a7f30 <col:17, col:32> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x92a7f20 <col:21> 'int' <IntegralCast>
                    (DeclRefExpr 0x92a7f04 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))
          (BinaryOperator 0x92a8080 <col:35, col:56> 'unsigned int' '%'
            (ImplicitCastExpr 0x92a8060 <col:35> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x92a7ff4 <col:35> 'size_type':'unsigned int' lvalue ParmVar 0x9292bb0 '__n' 'size_type':'unsigned int'))
            (ImplicitCastExpr 0x92a8070 <col:41, col:56> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x92a8048 <col:41, col:56> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x92a8038 <col:45> 'int' <IntegralCast>
                  (DeclRefExpr 0x92a801c <col:45> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>'))))))))))


    protected:
    protected:
        void _M_range_check(size_type __n) const (CompoundStmt 0x92a8330 </usr/include/c++/4.6/bits/stl_bvector.h:705:5, line:708:5>
  (IfStmt 0x92a8310 <line:706:7, line:707:65>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92a8208 <line:706:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x92a81b8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0 0x9283780)
      (DeclRefExpr 0x92a8134 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9292d10 '__n' 'size_type':'unsigned int')
      (CallExpr 0x92a8198 <col:18, col:29> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92a8160 <col:18, col:24> '<dependent type>' lvalue
          (CXXThisExpr 0x92a8150 <col:18> 'const vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x92a82e0 <line:707:9, col:65> 'void'
      (ImplicitCastExpr 0x92a82d0 <col:9> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92a82b4 <col:9> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12500 '__throw_out_of_range' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92a8300 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x92a82a0 <col:24, col:30> 'const char [29]' lvalue
          (StringLiteral 0x92a8264 </usr/include/c++/4.6/bits/stl_bvector.h:707:34> 'const char [29]' lvalue "vector<bool>::_M_range_check"))))
    <<<NULL>>>))


    public:
    public:
        reference at(size_type __n) (CompoundStmt 0x92a8430 </usr/include/c++/4.6/bits/stl_bvector.h:713:5, col:49>
  (CallExpr 0x92a8390 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x92a8358 <col:7> '<bound member function type>' ->_M_range_check 0x9292d90
      (CXXThisExpr 0x92a8348 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92a8378 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9292e50 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x92a8420 <col:28, col:46>
    (ArraySubscriptExpr 0x92a8408 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x92a83d8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x92a83c0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92a83b0 <col:37> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x92a83ec <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9292e50 '__n' 'size_type':'unsigned int'))))


        const_reference at(size_type __n) const (CompoundStmt 0x92a8530 </usr/include/c++/4.6/bits/stl_bvector.h:717:5, col:49>
  (CallExpr 0x92a8490 <col:7, col:25> '<dependent type>'
    (MemberExpr 0x92a8458 <col:7> '<bound member function type>' ->_M_range_check 0x9292d90
      (CXXThisExpr 0x92a8448 <col:7> 'const vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92a8478 <col:22> 'size_type':'unsigned int' lvalue ParmVar 0x9292f10 '__n' 'size_type':'unsigned int'))
  (ReturnStmt 0x92a8520 <col:28, col:46>
    (ArraySubscriptExpr 0x92a8508 <col:35, col:46> '<dependent type>' lvalue
      (ParenExpr 0x92a84d8 <col:35, col:41> '<dependent type>'
        (UnaryOperator 0x92a84c0 <col:36, col:37> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92a84b0 <col:37> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x92a84ec <col:43> 'size_type':'unsigned int' lvalue ParmVar 0x9292f10 '__n' 'size_type':'unsigned int'))))


        void reserve(size_type __n);
        reference front() (CompoundStmt 0x92a85e0 </usr/include/c++/4.6/bits/stl_bvector.h:724:5, col:24>
  (ReturnStmt 0x92a85d0 <col:7, col:21>
    (UnaryOperator 0x92a85b8 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x92a8598 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x92a8558 <col:15> '<bound member function type>' lvalue)))))


        const_reference front() const (CompoundStmt 0x92a8690 </usr/include/c++/4.6/bits/stl_bvector.h:728:5, col:24>
  (ReturnStmt 0x92a8680 <col:7, col:21>
    (UnaryOperator 0x92a8668 <col:14, col:21> '<dependent type>' prefix '*'
      (CallExpr 0x92a8648 <col:15, col:21> '<dependent type>'
        (UnresolvedMemberExpr 0x92a8608 <col:15> '<bound member function type>' lvalue)))))


        reference back() (CompoundStmt 0x92a87d8 </usr/include/c++/4.6/bits/stl_bvector.h:732:5, col:28>
  (ReturnStmt 0x92a87c8 <col:7, col:25>
    (UnaryOperator 0x92a87b0 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x92a8798 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x92a8770 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x92a8730 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CallExpr 0x92a86f8 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x92a86b8 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x92a8718 <col:24> 'int' 1))))))


        const_reference back() const (CompoundStmt 0x92a8920 </usr/include/c++/4.6/bits/stl_bvector.h:736:5, col:28>
  (ReturnStmt 0x92a8910 <col:7, col:25>
    (UnaryOperator 0x92a88f8 <col:14, col:25> '<dependent type>' prefix '*'
      (ParenExpr 0x92a88e0 <col:15, col:25> '<dependent type>'
        (CXXOperatorCallExpr 0x92a88b8 <col:16, col:24> '<dependent type>'
          (UnresolvedLookupExpr 0x92a8878 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CallExpr 0x92a8840 <col:16, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x92a8800 <col:16> '<bound member function type>' lvalue))
          (IntegerLiteral 0x92a8860 <col:24> 'int' 1))))))


        void data() (CompoundStmt 0x92a8938 </usr/include/c++/4.6/bits/stl_bvector.h:744:12, col:14>)


        void push_back(bool __x) (CompoundStmt 0x92a8d00 </usr/include/c++/4.6/bits/stl_bvector.h:748:5, line:753:5>
  (IfStmt 0x92a8ce0 <line:749:7, line:752:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92a8ae0 <line:749:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x92a8a80 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXDependentScopeMemberExpr 0x92a89c8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92a8990 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92a8958 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x92a8948 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x92a8a48 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92a8a10 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x92a8a00 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (BinaryOperator 0x92a8be8 <line:750:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x92a8bb8 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x92a8ba0 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x92a8b50 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92a8b18 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x92a8b08 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x92a8bcc <col:38> '_Bool' lvalue ParmVar 0x9293390 '__x' '_Bool'))
    (CallExpr 0x92a8cb8 <line:752:9, col:33> '<dependent type>'
      (MemberExpr 0x92a8c10 <col:9> '<bound member function type>' ->_M_insert_aux 0x9296370
        (CXXThisExpr 0x92a8c00 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x92a8c80 <col:23, col:27> '<dependent type>'
        (UnresolvedMemberExpr 0x92a8c40 <col:23> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92a8c9c <col:30> '_Bool' lvalue ParmVar 0x9293390 '__x' '_Bool'))))


        void swap(vector<bool, type-parameter-0-0> &__x) (CompoundStmt 0x92a9500 </usr/include/c++/4.6/bits/stl_bvector.h:757:5, line:767:5>
  (CallExpr 0x92a8e80 <line:758:7, col:61> '<dependent type>'
    (UnresolvedLookupExpr 0x92a8d38 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770 0x9283d20)
    (CXXDependentScopeMemberExpr 0x92a8dc0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a8d88 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x92a8d78 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x92a8e48 <col:41, col:53> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a8e10 <col:41, col:45> '<dependent type>' lvalue
        (DeclRefExpr 0x92a8df4 <col:41> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9293490 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x92a9010 <line:759:7, col:63> '<dependent type>'
    (UnresolvedLookupExpr 0x92a8ec8 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770 0x9283d20)
    (CXXDependentScopeMemberExpr 0x92a8f50 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a8f18 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x92a8f08 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x92a8fd8 <col:42, col:54> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a8fa0 <col:42, col:46> '<dependent type>' lvalue
        (DeclRefExpr 0x92a8f84 <col:42> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9293490 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x92a91a0 <line:760:7, line:761:32> '<dependent type>'
    (UnresolvedLookupExpr 0x92a9058 <line:760:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770 0x9283d20)
    (CXXDependentScopeMemberExpr 0x92a90e0 <col:17, col:31> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a90a8 <col:17, col:23> '<dependent type>' lvalue
        (CXXThisExpr 0x92a9098 <col:17> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXDependentScopeMemberExpr 0x92a9168 <line:761:3, col:15> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92a9130 <col:3, col:7> '<dependent type>' lvalue
        (DeclRefExpr 0x92a9114 <col:3> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9293490 '__x' 'vector<_Bool, type-parameter-0-0> &'))))
  (CallExpr 0x92a94d8 <line:765:7, line:766:61> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92a93d8 <line:765:7, line:766:2> '<dependent type>' lvalue)
    (CallExpr 0x92a9448 <col:11, col:32> '<dependent type>'
      (UnresolvedMemberExpr 0x92a940c <col:11> '<dependent type>' lvalue))
    (CallExpr 0x92a94b8 <col:35, col:60> '<dependent type>'
      (CXXDependentScopeMemberExpr 0x92a9480 <col:35, col:39> '<dependent type>' lvalue
        (DeclRefExpr 0x92a9464 <col:35> 'vector<_Bool, type-parameter-0-0>' lvalue ParmVar 0x9293490 '__x' 'vector<_Bool, type-parameter-0-0> &')))))


        static void swap(reference __x, reference __y) (CompoundStmt 0x92a9740 </usr/include/c++/4.6/bits/stl_bvector.h:772:5, line:776:5>
  (DeclStmt 0x92a95e8 <line:773:7, col:23>
    0x92a9530 "bool __tmp =
      (ImplicitCastExpr 0x92a95d8 <col:20> '_Bool' <UserDefinedConversion>
        (CXXMemberCallExpr 0x92a95b8 <col:20> '_Bool'
          (MemberExpr 0x92a9598 <col:20, <invalid sloc>> '_Bool (void) const' .operator _Bool 0x9284420
            (ImplicitCastExpr 0x92a9588 <col:20> 'const struct std::_Bit_reference' lvalue <NoOp>
              (DeclRefExpr 0x92a9564 <col:20> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9293580 '__x' 'reference':'struct std::_Bit_reference')))))")
  (CXXOperatorCallExpr 0x92a9688 <line:774:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x92a9678 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(const struct std::_Bit_reference &)' <FunctionToPointerDecay>
      (DeclRefExpr 0x92a9640 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(const struct std::_Bit_reference &)' lvalue CXXMethod 0x9284650 'operator=' 'struct std::_Bit_reference &(const struct std::_Bit_reference &)'))
    (DeclRefExpr 0x92a95f8 <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x9293580 '__x' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x92a9630 <col:13> 'const struct std::_Bit_reference' lvalue <NoOp>
      (DeclRefExpr 0x92a9610 <col:13> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x92935c0 '__y' 'reference':'struct std::_Bit_reference')))
  (CXXOperatorCallExpr 0x92a9718 <line:775:7, col:13> 'struct std::_Bit_reference' lvalue
    (ImplicitCastExpr 0x92a9708 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
      (DeclRefExpr 0x92a96f0 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9284530 'operator=' 'struct std::_Bit_reference &(_Bool)'))
    (DeclRefExpr 0x92a96ac <col:7> 'reference':'struct std::_Bit_reference' lvalue ParmVar 0x92935c0 '__y' 'reference':'struct std::_Bit_reference')
    (ImplicitCastExpr 0x92a96e0 <col:13> '_Bool' <LValueToRValue>
      (DeclRefExpr 0x92a96c4 <col:13> '_Bool' lvalue Var 0x92a9530 '__tmp' '_Bool'))))


        iterator insert(iterator __position, const bool &__x = (MaterializeTemporaryExpr 0x92966a8 </usr/include/c++/4.6/bits/stl_bvector.h:779:51, col:56> 'const _Bool' lvalue
  (CXXScalarValueInitExpr 0x9296698 <col:51, col:56> '_Bool'))
) (CompoundStmt 0x92ac3d0 </usr/include/c++/4.6/bits/stl_bvector.h:780:5, line:788:5>
  (DeclStmt 0x92abe28 <line:781:7, col:55>
    0x92a9770 "const difference_type __n =
      (CXXOperatorCallExpr 0x92abe00 <col:35, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x92abdc0 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (DeclRefExpr 0x92a97a4 <col:35> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92936d0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92a9810 <col:48, col:54> '<dependent type>'
          (UnresolvedMemberExpr 0x92a97d0 <col:48> '<bound member function type>' lvalue)))")
  (IfStmt 0x92ac2a0 <line:782:7, line:786:38>
    <<<NULL>>>
    (BinaryOperator 0x92ac108 <line:782:11, line:783:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92abfd0 <line:782:11, col:57> '<dependent type>'
        (UnresolvedLookupExpr 0x92abf70 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (CXXDependentScopeMemberExpr 0x92abeb8 <col:11, col:35> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92abe80 <col:11, col:25> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92abe48 <col:11, col:17> '<dependent type>' lvalue
              (CXXThisExpr 0x92abe38 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x92abf38 <col:43, col:57> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92abf00 <col:43, col:49> '<dependent type>' lvalue
            (CXXThisExpr 0x92abef0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXOperatorCallExpr 0x92ac0e0 <line:783:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x92ac080 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
        (DeclRefExpr 0x92abff4 <col:7> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92936d0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92ac060 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x92ac020 <col:21> '<bound member function type>' lvalue))))
    (BinaryOperator 0x92ac200 <line:784:9, col:38> '<dependent type>' '='
      (UnaryOperator 0x92ac1d0 <col:9, col:33> '<dependent type>' prefix '*'
        (UnaryOperator 0x92ac1b8 <col:10, col:33> '<dependent type>' postfix '++'
          (CXXDependentScopeMemberExpr 0x92ac168 <col:10, col:24> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92ac130 <col:10, col:16> '<dependent type>' lvalue
              (CXXThisExpr 0x92ac120 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))))
      (DeclRefExpr 0x92ac1e4 <col:38> 'const _Bool' lvalue ParmVar 0x9293720 '__x' 'const _Bool &'))
    (CallExpr 0x92ac278 <line:786:9, col:38> '<dependent type>'
      (MemberExpr 0x92ac228 <col:9> '<bound member function type>' ->_M_insert_aux 0x9296370
        (CXXThisExpr 0x92ac218 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x92ac248 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92936d0 '__position' 'iterator':'struct std::_Bit_iterator')
      (DeclRefExpr 0x92ac260 <col:35> 'const _Bool' lvalue ParmVar 0x9293720 '__x' 'const _Bool &')))
  (ReturnStmt 0x92ac3c0 <line:787:7, col:24>
    (CXXOperatorCallExpr 0x92ac398 <col:14, col:24> '<dependent type>'
      (UnresolvedLookupExpr 0x92ac348 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
      (CallExpr 0x92ac310 <col:14, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x92ac2d0 <col:14> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92ac32c <col:24> 'const difference_type':'const int' lvalue Var 0x92a9770 '__n' 'const difference_type':'const int'))))


        template <typename _InputIterator> void insert(iterator __position, _InputIterator __first, _InputIterator __last) (CompoundStmt 0x92ac630 </usr/include/c++/4.6/bits/stl_bvector.h:794:7, line:797:7>
  (DeclStmt 0x92ac520 <line:795:2, col:70>
    0x92ac4f0 "typedef typename std::__is_integer<_InputIterator>::__type _Integral")
  (CallExpr 0x92ac600 <line:796:2, col:61> '<dependent type>'
    (UnresolvedMemberExpr 0x92ac540 <col:2> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92ac580 <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293890 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x92ac598 <col:33> '_InputIterator' lvalue ParmVar 0x92938d0 '__first' '_InputIterator')
    (DeclRefExpr 0x92ac5b0 <col:42> '_InputIterator' lvalue ParmVar 0x9293910 '__last' '_InputIterator')
    (CXXUnresolvedConstructExpr 0x92ac5e8 <col:50, col:60> '_Integral':'typename std::__is_integer<_InputIterator>::__type')))

;
        void insert(iterator __position, size_type __n, const bool &__x) (CompoundStmt 0x92ac6e8 </usr/include/c++/4.6/bits/stl_bvector.h:801:5, col:45>
  (CallExpr 0x92ac6c0 <col:7, col:42> '<dependent type>'
    (MemberExpr 0x92ac658 <col:7> '<bound member function type>' ->_M_fill_insert 0x9295ce0
      (CXXThisExpr 0x92ac648 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92ac678 <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293a70 '__position' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x92ac690 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x9293ab0 '__n' 'size_type':'unsigned int')
    (DeclRefExpr 0x92ac6a8 <col:39> 'const _Bool' lvalue ParmVar 0x9293b00 '__x' 'const _Bool &')))


        void pop_back() (CompoundStmt 0x92ac798 </usr/include/c++/4.6/bits/stl_bvector.h:810:5, col:34>
  (UnaryOperator 0x92ac780 <col:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x92ac748 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ac710 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x92ac700 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))))


        iterator erase(iterator __position) (CompoundStmt 0x92acbe8 </usr/include/c++/4.6/bits/stl_bvector.h:814:5, line:819:5>
  (IfStmt 0x92acad0 <line:815:7, line:816:52>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ac910 <line:815:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x92ac8b0 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXOperatorCallExpr 0x92ac818 <col:11, col:24> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x92ac808 <col:22, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x92ac7f0 <col:22, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x92ac7e0 <col:11> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x92ac7ac <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293cc0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x92ac7c8 <col:24> 'int' 1))
      (CallExpr 0x92ac890 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x92ac850 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x92acaa8 <line:816:9, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x92ac958 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
      (CXXOperatorCallExpr 0x92ac9f8 <col:19, col:32> 'iterator':'struct std::_Bit_iterator'
        (ImplicitCastExpr 0x92ac9e8 <col:30, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x92ac9d0 <col:30, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
        (ImplicitCastExpr 0x92ac9c0 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x92ac990 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293cc0 '__position' 'iterator':'struct std::_Bit_iterator'))
        (IntegerLiteral 0x92ac9a8 <col:32> 'int' 1))
      (CallExpr 0x92aca70 <col:35, col:39> '<dependent type>'
        (UnresolvedMemberExpr 0x92aca30 <col:35> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92aca8c <col:42> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293cc0 '__position' 'iterator':'struct std::_Bit_iterator'))
    <<<NULL>>>)
  (UnaryOperator 0x92acb70 <line:817:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x92acb38 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92acb00 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x92acaf0 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))))
  (ReturnStmt 0x92acbd8 <line:818:7, col:14>
    (CXXConstructExpr 0x92acbb0 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x92acba0 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x92acb84 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293cc0 '__position' 'iterator':'struct std::_Bit_iterator')))))


        iterator erase(iterator __first, iterator __last) (CompoundStmt 0x92acea0 </usr/include/c++/4.6/bits/stl_bvector.h:823:5, line:827:5>
  (IfStmt 0x92ace20 <line:824:7, line:825:51>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92acc90 <line:824:11, col:22> '_Bool'
      (ImplicitCastExpr 0x92acc80 <col:19, <invalid sloc>> '_Bool (*)(const struct std::_Bit_iterator_base &) const' <FunctionToPointerDecay>
        (DeclRefExpr 0x92acc68 <col:19, <invalid sloc>> '_Bool (const struct std::_Bit_iterator_base &) const' lvalue CXXMethod 0x92860d0 'operator!=' '_Bool (const struct std::_Bit_iterator_base &) const'))
      (ImplicitCastExpr 0x92acc58 <col:11> 'const struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
        (DeclRefExpr 0x92acc04 <col:11> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293dd0 '__first' 'iterator':'struct std::_Bit_iterator'))
      (ImplicitCastExpr 0x92acc48 <col:22> 'const struct std::_Bit_iterator_base' lvalue <NoOp>
        (ImplicitCastExpr 0x92acc38 <col:22> 'struct std::_Bit_iterator_base' lvalue <DerivedToBase (_Bit_iterator_base)>
          (DeclRefExpr 0x92acc1c <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293e10 '__last' 'iterator':'struct std::_Bit_iterator'))))
    (CallExpr 0x92ace00 <line:825:2, col:51> '<dependent type>'
      (MemberExpr 0x92accc8 <col:2> '<bound member function type>' ->_M_erase_at_end 0x92965c0
        (CXXThisExpr 0x92accb8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x92acdd8 <col:18, col:50> '<dependent type>'
        (UnresolvedLookupExpr 0x92acd00 <col:18, col:23> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
        (DeclRefExpr 0x92acd38 <col:28> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293e10 '__last' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92acda0 <col:36, col:40> '<dependent type>'
          (UnresolvedMemberExpr 0x92acd60 <col:36> '<bound member function type>' lvalue))
        (DeclRefExpr 0x92acdbc <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293dd0 '__first' 'iterator':'struct std::_Bit_iterator')))
    <<<NULL>>>)
  (ReturnStmt 0x92ace90 <line:826:7, col:14>
    (CXXConstructExpr 0x92ace68 <col:14> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
      (ImplicitCastExpr 0x92ace58 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
        (DeclRefExpr 0x92ace3c <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9293dd0 '__first' 'iterator':'struct std::_Bit_iterator')))))


        void resize(size_type __new_size, bool __x = (CXXScalarValueInitExpr 0x92966c0 </usr/include/c++/4.6/bits/stl_bvector.h:830:45, col:50> '_Bool')
) (CompoundStmt 0x92ad320 </usr/include/c++/4.6/bits/stl_bvector.h:831:5, line:836:5>
  (IfStmt 0x92ad300 <line:832:7, line:835:47>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92acf70 <line:832:11, col:29> '<dependent type>'
      (UnresolvedLookupExpr 0x92acf20 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
      (DeclRefExpr 0x92aceb8 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9293f20 '__new_size' 'size_type':'unsigned int')
      (CallExpr 0x92acf00 <col:24, col:29> '<dependent type>'
        (MemberExpr 0x92acee0 <col:24> '<bound member function type>' ->size 0x9292880
          (CXXThisExpr 0x92aced0 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x92ad108 <line:833:9, col:62> '<dependent type>'
      (MemberExpr 0x92acfa8 <col:9> '<bound member function type>' ->_M_erase_at_end 0x92965c0
        (CXXThisExpr 0x92acf98 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
      (CXXOperatorCallExpr 0x92ad0e0 <col:25, col:61> '<dependent type>'
        (UnresolvedLookupExpr 0x92ad090 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
        (CallExpr 0x92ad018 <col:25, col:31> '<dependent type>'
          (UnresolvedMemberExpr 0x92acfd8 <col:25> '<bound member function type>' lvalue))
        (CXXFunctionalCastExpr 0x92ad078 <col:35, col:61> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x92ad068 <col:51> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x92ad058 <col:51> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x92ad040 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x9293f20 '__new_size' 'size_type':'unsigned int'))))))
    (CallExpr 0x92ad2d8 <line:835:9, col:47> '<dependent type>'
      (UnresolvedMemberExpr 0x92ad138 <col:9> '<bound member function type>' lvalue)
      (CallExpr 0x92ad1d0 <col:16, col:20> '<dependent type>'
        (UnresolvedMemberExpr 0x92ad190 <col:16> '<bound member function type>' lvalue))
      (CXXOperatorCallExpr 0x92ad298 <col:23, col:41> '<dependent type>'
        (UnresolvedLookupExpr 0x92ad258 <col:34, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (DeclRefExpr 0x92ad1ec <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x9293f20 '__new_size' 'size_type':'unsigned int')
        (CallExpr 0x92ad238 <col:36, col:41> '<dependent type>'
          (MemberExpr 0x92ad218 <col:36> '<bound member function type>' ->size 0x9292880
            (CXXThisExpr 0x92ad208 <col:36> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x92ad2bc <col:44> '_Bool' lvalue ParmVar 0x9293f60 '__x' '_Bool'))))


        void flip() (CompoundStmt 0x92ad688 </usr/include/c++/4.6/bits/stl_bvector.h:846:5, line:850:5>
  (ForStmt 0x92ad660 <line:847:7, line:849:18>
    (DeclStmt 0x92ad440 <line:847:12, col:57>
      0x92ad350 "_Bit_type *__p =
        (CXXDependentScopeMemberExpr 0x92ad408 <col:30, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92ad3d0 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92ad398 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x92ad388 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))))")
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ad548 <line:848:5, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x92ad4e8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92ad450 <col:5> '_Bit_type *' lvalue Var 0x92ad350 '__p' '_Bit_type *')
      (CXXDependentScopeMemberExpr 0x92ad4b0 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ad478 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x92ad468 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (UnaryOperator 0x92ad588 <col:45, col:47> '_Bit_type *' lvalue prefix '++'
      (DeclRefExpr 0x92ad56c <col:47> '_Bit_type *' lvalue Var 0x92ad350 '__p' '_Bit_type *'))
    (BinaryOperator 0x92ad648 <line:849:9, col:18> '_Bit_type':'unsigned long' lvalue '='
      (UnaryOperator 0x92ad5c8 <col:9, col:10> '_Bit_type':'unsigned long' lvalue prefix '*'
        (ImplicitCastExpr 0x92ad5b8 <col:10> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x92ad59c <col:10> '_Bit_type *' lvalue Var 0x92ad350 '__p' '_Bit_type *')))
      (UnaryOperator 0x92ad630 <col:16, col:18> '_Bit_type':'unsigned long' prefix '~'
        (ImplicitCastExpr 0x92ad620 <col:17, col:18> '_Bit_type':'unsigned long' <LValueToRValue>
          (UnaryOperator 0x92ad608 <col:17, col:18> '_Bit_type':'unsigned long' lvalue prefix '*'
            (ImplicitCastExpr 0x92ad5f8 <col:18> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x92ad5dc <col:18> '_Bit_type *' lvalue Var 0x92ad350 '__p' '_Bit_type *'))))))))


        void clear() (CompoundStmt 0x92ad760 </usr/include/c++/4.6/bits/stl_bvector.h:854:5, col:33>
  (CallExpr 0x92ad740 <col:7, col:30> '<dependent type>'
    (MemberExpr 0x92ad6b0 <col:7> '<bound member function type>' ->_M_erase_at_end 0x92965c0
      (CXXThisExpr 0x92ad6a0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this))
    (CallExpr 0x92ad720 <col:23, col:29> '<dependent type>'
      (UnresolvedMemberExpr 0x92ad6e0 <col:23> '<bound member function type>' lvalue))))


    protected:
    protected:
        iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator __result) (CompoundStmt 0x92ae250 </usr/include/c++/4.6/bits/stl_bvector.h:862:5, line:866:5>
  (DeclStmt 0x92adc80 <line:863:7, col:75>
    0x92ad790 "_Bit_type *__q =
      (CallExpr 0x92adc28 <col:24, col:74> 'unsigned long *':'unsigned long *'
        (ImplicitCastExpr 0x92adc18 <col:24, col:29> 'unsigned long *(*)(unsigned long *, unsigned long *, unsigned long *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92adbb8 <col:24, col:29> 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' lvalue Function 0x92adaf0 'copy' 'unsigned long *(unsigned long *, unsigned long *, unsigned long *)' (FunctionTemplate 0x8e833d0 'copy')))
        (ImplicitCastExpr 0x92adc50 <col:34, col:42> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x92ad840 <col:34, col:42> '_Bit_type *' lvalue ._M_p 0x9285a90
            (ImplicitCastExpr 0x92ad830 <col:34> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x92ad818 <col:34> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x92941b0 '__first' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x92adc60 <col:48, col:55> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x92ad888 <col:48, col:55> '_Bit_type *' lvalue ._M_p 0x9285a90
            (ImplicitCastExpr 0x92ad878 <col:48> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x92ad860 <col:48> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x92941f0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
        (ImplicitCastExpr 0x92adc70 <col:61, col:70> '_Bit_type *' <LValueToRValue>
          (MemberExpr 0x92ad8d0 <col:61, col:70> '_Bit_type *' lvalue ._M_p 0x9285a90
            (ImplicitCastExpr 0x92ad8c0 <col:61> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
              (DeclRefExpr 0x92ad8a8 <col:61> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9294230 '__result' 'iterator':'struct std::_Bit_iterator')))))")
  (ReturnStmt 0x92ae240 <line:864:7, line:865:26>
    (CXXConstructExpr 0x92ae218 <line:864:14, line:865:26> 'iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
      (MaterializeTemporaryExpr 0x92ae208 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x92ae1f8 <line:864:14, line:865:26> 'const struct std::_Bit_iterator' <NoOp>
          (CallExpr 0x92ae108 <line:864:14, line:865:26> 'struct std::_Bit_iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x92ae0f8 <line:864:14, col:19> 'struct std::_Bit_iterator (*)(struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' <FunctionToPointerDecay>
              (DeclRefExpr 0x92ae098 <col:14, col:19> 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' lvalue Function 0x92adfd0 'copy' 'struct std::_Bit_iterator (struct std::_Bit_const_iterator, struct std::_Bit_const_iterator, struct std::_Bit_iterator)' (FunctionTemplate 0x8e833d0 'copy')))
            (CXXConstructExpr 0x92ae150 <col:24, col:53> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x92ae140 <col:24, col:53> 'const struct std::_Bit_const_iterator' lvalue
                (ImplicitCastExpr 0x92ae130 <col:24, col:53> 'const struct std::_Bit_const_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x92add68 <col:24, col:53> 'const_iterator':'struct std::_Bit_const_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x92add48 <col:39, col:46> '_Bit_type *' <LValueToRValue>
                      (MemberExpr 0x92add10 <col:39, col:46> '_Bit_type *' lvalue ._M_p 0x9285a90
                        (ImplicitCastExpr 0x92add00 <col:39> 'struct std::_Bit_iterator_base' lvalue <UncheckedDerivedToBase (_Bit_iterator_base)>
                          (DeclRefExpr 0x92adce8 <col:39> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x92941f0 '__last' 'const_iterator':'struct std::_Bit_const_iterator'))))
                    (ImplicitCastExpr 0x92add58 <col:52> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x92add30 <col:52> 'int' 0))))))
            (CXXConstructExpr 0x92ae188 <col:56> 'struct std::_Bit_const_iterator':'struct std::_Bit_const_iterator''void (const struct std::_Bit_const_iterator &) throw()'
              (ImplicitCastExpr 0x92ae178 <col:56> 'const struct std::_Bit_const_iterator' lvalue <NoOp>
                (DeclRefExpr 0x92add98 <col:56> 'const_iterator':'struct std::_Bit_const_iterator' lvalue ParmVar 0x92941f0 '__last' 'const_iterator':'struct std::_Bit_const_iterator')))
            (CXXConstructExpr 0x92ae1d0 <line:865:10, col:25> 'struct std::_Bit_iterator':'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
              (MaterializeTemporaryExpr 0x92ae1c0 <col:10, col:25> 'const struct std::_Bit_iterator' lvalue
                (ImplicitCastExpr 0x92ae1b0 <col:10, col:25> 'const struct std::_Bit_iterator' <NoOp>
                  (CXXTemporaryObjectExpr 0x92ade08 <col:10, col:25> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                    (ImplicitCastExpr 0x92adde8 <col:19> '_Bit_type *' <LValueToRValue>
                      (DeclRefExpr 0x92addb8 <col:19> '_Bit_type *' lvalue Var 0x92ad790 '__q' '_Bit_type *'))
                    (ImplicitCastExpr 0x92addf8 <col:24> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x92addd0 <col:24> 'int' 0))))))))))))


        void _M_initialize(size_type __n) (CompoundStmt 0x92ae8c8 </usr/include/c++/4.6/bits/stl_bvector.h:870:5, line:877:5>
  (DeclStmt 0x92ae338 <line:871:7, col:46>
    0x92ae280 "_Bit_type *__q =
      (CallExpr 0x92ae318 <col:24, col:45> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92ae2c8 <col:24, col:30> '<dependent type>' lvalue
          (CXXThisExpr 0x92ae2b8 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))
        (DeclRefExpr 0x92ae2fc <col:42> 'size_type':'unsigned int' lvalue ParmVar 0x9294370 '__n' 'size_type':'unsigned int'))")
  (BinaryOperator 0x92ae5a8 <line:872:7, line:874:29> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ae390 <line:872:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ae358 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x92ae348 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ParenExpr 0x92ae590 <col:41, line:874:29> '_Bit_type *'
      (BinaryOperator 0x92ae578 <line:872:42, line:874:28> '_Bit_type *' '+'
        (ImplicitCastExpr 0x92ae568 <line:872:42> '_Bit_type *' <LValueToRValue>
          (DeclRefExpr 0x92ae3c4 <col:42> '_Bit_type *' lvalue Var 0x92ae280 '__q' '_Bit_type *'))
        (ParenExpr 0x92ae550 <line:873:9, line:874:28> 'unsigned int'
          (BinaryOperator 0x92ae538 <line:873:10, line:874:27> 'unsigned int' '/'
            (ParenExpr 0x92ae4c0 <line:873:10, col:37> 'unsigned int'
              (BinaryOperator 0x92ae4a8 <col:11, col:36> 'unsigned int' '-'
                (BinaryOperator 0x92ae468 <col:11, col:32> 'unsigned int' '+'
                  (ImplicitCastExpr 0x92ae448 <col:11> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92ae3dc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x9294370 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x92ae458 <col:17, col:32> 'unsigned int' <IntegralCast>
                    (CXXFunctionalCastExpr 0x92ae430 <col:17, col:32> 'int' functional cast to int <NoOp>
                      (ImplicitCastExpr 0x92ae420 <col:21> 'int' <IntegralCast>
                        (DeclRefExpr 0x92ae404 <col:21> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                (ImplicitCastExpr 0x92ae498 <col:36> 'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x92ae480 <col:36> 'int' 1))))
            (ImplicitCastExpr 0x92ae528 <line:874:12, col:27> 'unsigned int' <IntegralCast>
              (CXXFunctionalCastExpr 0x92ae510 <col:12, col:27> 'int' functional cast to int <NoOp>
                (ImplicitCastExpr 0x92ae500 <col:16> 'int' <IntegralCast>
                  (DeclRefExpr 0x92ae4e4 <col:16> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
  (BinaryOperator 0x92ae6c8 <line:875:7, col:47> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ae608 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ae5d0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x92ae5c0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXTemporaryObjectExpr 0x92ae698 <col:32, col:47> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
      (ImplicitCastExpr 0x92ae678 <col:41> '_Bit_type *' <LValueToRValue>
        (DeclRefExpr 0x92ae648 <col:41> '_Bit_type *' lvalue Var 0x92ae280 '__q' '_Bit_type *'))
      (ImplicitCastExpr 0x92ae688 <col:46> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x92ae660 <col:46> 'int' 0))))
  (BinaryOperator 0x92ae8b0 <line:876:7, col:77> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92ae728 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92ae6f0 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x92ae6e0 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (CXXOperatorCallExpr 0x92ae888 <col:33, col:77> '<dependent type>'
      (UnresolvedLookupExpr 0x92ae838 <col:56, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
      (CXXDependentScopeMemberExpr 0x92ae7a8 <col:33, col:47> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ae770 <col:33, col:39> '<dependent type>' lvalue
          (CXXThisExpr 0x92ae760 <col:33> 'vector<_Bool, type-parameter-0-0> *' this)))
      (CXXFunctionalCastExpr 0x92ae820 <col:58, col:77> 'difference_type':'int' functional cast to difference_type <NoOp>
        (ImplicitCastExpr 0x92ae810 <col:74> 'difference_type':'int' <IntegralCast>
          (ImplicitCastExpr 0x92ae800 <col:74> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92ae7e8 <col:74> 'size_type':'unsigned int' lvalue ParmVar 0x9294370 '__n' 'size_type':'unsigned int')))))))


        template <typename _Integer> void _M_initialize_dispatch(_Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x92aebb0 </usr/include/c++/4.6/bits/stl_bvector.h:886:7, line:890:7>
  (CallExpr 0x92ae950 <line:887:2, col:43> '<dependent type>'
    (MemberExpr 0x92ae8f8 <col:2> '<bound member function type>' ->_M_initialize 0x92943c0
      (CXXThisExpr 0x92ae8e8 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (CXXStaticCastExpr 0x92ae938 <col:16, col:42> 'size_type':'unsigned int' static_cast<size_type> <Dependent>
      (DeclRefExpr 0x92ae918 <col:39> '_Integer' lvalue ParmVar 0x9294490 '__n' '_Integer')))
  (CallExpr 0x92aeb88 <line:888:2, line:889:50> '<dependent type>'
    (UnresolvedLookupExpr 0x92ae998 <line:888:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
    (CXXDependentScopeMemberExpr 0x92aea50 <col:12, col:35> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92aea18 <col:12, col:26> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92ae9e0 <col:12, col:18> '<dependent type>' lvalue
          (CXXThisExpr 0x92ae9d0 <col:12> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CXXDependentScopeMemberExpr 0x92aead0 <line:889:5, col:19> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92aea98 <col:5, col:11> '<dependent type>' lvalue
        (CXXThisExpr 0x92aea88 <col:5> 'vector<_Bool, type-parameter-0-0> *' this)))
    (ConditionalOperator 0x92aeb68 <col:38, col:49> 'int'
      (DeclRefExpr 0x92aeb04 <col:38> '_Integer' lvalue ParmVar 0x92944d0 '__x' '_Integer')
      (UnaryOperator 0x92aeb38 <col:44, col:45> 'int' prefix '~'
        (IntegerLiteral 0x92aeb20 <col:45> 'int' 0))
      (IntegerLiteral 0x92aeb50 <col:49> 'int' 0))))

;
        template <typename _InputIterator> void _M_initialize_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x92aecf8 </usr/include/c++/4.6/bits/stl_bvector.h:896:7, line:897:44>
  (CallExpr 0x92aecd0 <line:896:9, line:897:41> '<dependent type>'
    (UnresolvedMemberExpr 0x92aebd8 <line:896:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92aec18 <col:29> '_InputIterator' lvalue ParmVar 0x92946a0 '__first' '_InputIterator')
    (DeclRefExpr 0x92aec30 <col:38> '_InputIterator' lvalue ParmVar 0x92946e0 '__last' '_InputIterator')
    (CallExpr 0x92aecb0 <line:897:8, col:40> '<dependent type>'
      (UnresolvedLookupExpr 0x92aec60 <col:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e4e620)
      (DeclRefExpr 0x92aec94 <col:33> '_InputIterator' lvalue ParmVar 0x92946a0 '__first' '_InputIterator'))))

;
        template <typename _InputIterator> void _M_initialize_range(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x92aeea0 </usr/include/c++/4.6/bits/stl_bvector.h:903:7, line:906:7>
  (ForStmt 0x92aee78 <line:904:2, line:905:22>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92aeda0 <line:904:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x92aed40 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92aed0c <col:9> '_InputIterator' lvalue ParmVar 0x92948b0 '__first' '_InputIterator')
      (DeclRefExpr 0x92aed24 <col:20> '_InputIterator' lvalue ParmVar 0x92948f0 '__last' '_InputIterator'))
    (UnaryOperator 0x92aede0 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92aedc4 <col:30> '_InputIterator' lvalue ParmVar 0x92948b0 '__first' '_InputIterator'))
    (CallExpr 0x92aee58 <line:905:4, col:22> '<dependent type>'
      (MemberExpr 0x92aee08 <col:4> '<bound member function type>' ->push_back 0x9293410
        (CXXThisExpr 0x92aedf8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (UnaryOperator 0x92aee40 <col:14, col:15> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92aee28 <col:15> '_InputIterator' lvalue ParmVar 0x92948b0 '__first' '_InputIterator')))))

;
        template <typename _ForwardIterator> void _M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x92af150 </usr/include/c++/4.6/bits/stl_bvector.h:912:7, line:916:7>
  (DeclStmt 0x92aefa0 <line:913:2, col:54>
    0x92aeec0 "const size_type __n =
      (CallExpr 0x92aef78 <col:24, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x92aef10 <col:24, col:29> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
        (DeclRefExpr 0x92aef44 <col:38> '_ForwardIterator' lvalue ParmVar 0x9294b00 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92aef5c <col:47> '_ForwardIterator' lvalue ParmVar 0x9294b40 '__last' '_ForwardIterator'))")
  (CallExpr 0x92aeff8 <line:914:2, col:19> '<dependent type>'
    (MemberExpr 0x92aefc0 <col:2> '<bound member function type>' ->_M_initialize 0x92943c0
      (CXXThisExpr 0x92aefb0 <col:2> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92aefe0 <col:16> 'const size_type':'const unsigned int' lvalue Var 0x92aeec0 '__n' 'const size_type':'const unsigned int'))
  (CallExpr 0x92af128 <line:915:2, col:51> '<dependent type>'
    (UnresolvedLookupExpr 0x92af040 <col:2, col:7> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
    (DeclRefExpr 0x92af078 <col:12> '_ForwardIterator' lvalue ParmVar 0x9294b00 '__first' '_ForwardIterator')
    (DeclRefExpr 0x92af090 <col:21> '_ForwardIterator' lvalue ParmVar 0x9294b40 '__last' '_ForwardIterator')
    (CXXDependentScopeMemberExpr 0x92af0f0 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92af0b8 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x92af0a8 <col:29> 'vector<_Bool, type-parameter-0-0> *' this)))))

;
        template <typename _Integer> void _M_assign_dispatch(_Integer __n, _Integer __val, std::__true_type) (CompoundStmt 0x92af1f8 </usr/include/c++/4.6/bits/stl_bvector.h:923:7, col:37>
  (CallExpr 0x92af1d0 <col:9, col:34> '<dependent type>'
    (MemberExpr 0x92af180 <col:9> '<bound member function type>' ->_M_fill_assign 0x92951d0
      (CXXThisExpr 0x92af170 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92af1a0 <col:24> '_Integer' lvalue ParmVar 0x9294d50 '__n' '_Integer')
    (DeclRefExpr 0x92af1b8 <col:29> '_Integer' lvalue ParmVar 0x9294d90 '__val' '_Integer')))

;
        template <class _InputIterator> void _M_assign_dispatch(_InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x92af340 </usr/include/c++/4.6/bits/stl_bvector.h:929:7, col:76>
  (CallExpr 0x92af318 <col:9, col:73> '<dependent type>'
    (UnresolvedMemberExpr 0x92af220 <col:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92af260 <col:23> '_InputIterator' lvalue ParmVar 0x9294f60 '__first' '_InputIterator')
    (DeclRefExpr 0x92af278 <col:32> '_InputIterator' lvalue ParmVar 0x9294fa0 '__last' '_InputIterator')
    (CallExpr 0x92af2f8 <col:40, col:72> '<dependent type>'
      (UnresolvedLookupExpr 0x92af2a8 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e4e620)
      (DeclRefExpr 0x92af2dc <col:65> '_InputIterator' lvalue ParmVar 0x9294f60 '__first' '_InputIterator'))))

;
        void _M_fill_assign(size_t __n, bool __x) (CompoundStmt 0x92afc48 </usr/include/c++/4.6/bits/stl_bvector.h:933:5, line:946:5>
  (IfStmt 0x92afc28 <line:934:7, line:945:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92af410 <line:934:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92af3c0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (DeclRefExpr 0x92af354 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x9295110 '__n' 'size_t':'unsigned int')
      (CallExpr 0x92af3a0 <col:17, col:22> '<dependent type>'
        (MemberExpr 0x92af380 <col:17> '<bound member function type>' ->size 0x9292880
          (CXXThisExpr 0x92af370 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x92af858 <line:935:2, line:939:2>
      (CallExpr 0x92af658 <line:936:4, line:937:52> '<dependent type>'
        (UnresolvedLookupExpr 0x92af458 <line:936:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
        (CXXDependentScopeMemberExpr 0x92af510 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92af4d8 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92af4a0 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x92af490 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x92af590 <line:937:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92af558 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x92af548 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x92af638 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x92af628 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x92af5c4 <col:40> '_Bool' lvalue ParmVar 0x9295150 '__x' '_Bool'))
          (UnaryOperator 0x92af5f8 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x92af5e0 <col:47> 'int' 0))
          (IntegerLiteral 0x92af610 <col:51> 'int' 0)))
      (CallExpr 0x92af830 <line:938:4, col:35> '<dependent type>'
        (UnresolvedMemberExpr 0x92af690 <col:4> '<bound member function type>' lvalue)
        (CallExpr 0x92af728 <col:11, col:15> '<dependent type>'
          (UnresolvedMemberExpr 0x92af6e8 <col:11> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x92af7f0 <col:18, col:29> '<dependent type>'
          (UnresolvedLookupExpr 0x92af7b0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (DeclRefExpr 0x92af744 <col:18> 'size_t':'unsigned int' lvalue ParmVar 0x9295110 '__n' 'size_t':'unsigned int')
          (CallExpr 0x92af790 <col:24, col:29> '<dependent type>'
            (MemberExpr 0x92af770 <col:24> '<bound member function type>' ->size 0x9292880
              (CXXThisExpr 0x92af760 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
        (DeclRefExpr 0x92af814 <col:32> '_Bool' lvalue ParmVar 0x9295150 '__x' '_Bool')))
    (CompoundStmt 0x92afc10 <line:941:2, line:945:2>
      (CallExpr 0x92af9a0 <line:942:4, col:33> '<dependent type>'
        (MemberExpr 0x92af880 <col:4> '<bound member function type>' ->_M_erase_at_end 0x92965c0
          (CXXThisExpr 0x92af870 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
        (CXXOperatorCallExpr 0x92af978 <col:20, col:30> '<dependent type>'
          (UnresolvedLookupExpr 0x92af928 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CallExpr 0x92af8f0 <col:20, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x92af8b0 <col:20> '<bound member function type>' lvalue))
          (DeclRefExpr 0x92af90c <col:30> 'size_t':'unsigned int' lvalue ParmVar 0x9295110 '__n' 'size_t':'unsigned int')))
      (CallExpr 0x92afbe8 <line:943:4, line:944:52> '<dependent type>'
        (UnresolvedLookupExpr 0x92af9e8 <line:943:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
        (CXXDependentScopeMemberExpr 0x92afaa0 <col:14, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92afa68 <col:14, col:28> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92afa30 <col:14, col:20> '<dependent type>' lvalue
              (CXXThisExpr 0x92afa20 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
        (CXXDependentScopeMemberExpr 0x92afb20 <line:944:7, col:21> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92afae8 <col:7, col:13> '<dependent type>' lvalue
            (CXXThisExpr 0x92afad8 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ConditionalOperator 0x92afbc8 <col:40, col:51> 'int'
          (ImplicitCastExpr 0x92afbb8 <col:40> '_Bool' <LValueToRValue>
            (DeclRefExpr 0x92afb54 <col:40> '_Bool' lvalue ParmVar 0x9295150 '__x' '_Bool'))
          (UnaryOperator 0x92afb88 <col:46, col:47> 'int' prefix '~'
            (IntegerLiteral 0x92afb70 <col:47> 'int' 0))
          (IntegerLiteral 0x92afba0 <col:51> 'int' 0))))))


        template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x92b02f0 </usr/include/c++/4.6/bits/stl_bvector.h:952:7, line:960:7>
  (DeclStmt 0x92afd18 <line:953:2, col:26>
    0x92afc70 "iterator __cur =
      (CallExpr 0x92afcf8 <col:19, col:25> '<dependent type>'
        (UnresolvedMemberExpr 0x92afcb8 <col:19> '<bound member function type>' lvalue))")
  (ForStmt 0x92b0068 <line:954:2, line:955:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x92afef0 <line:954:9, col:43> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92afdb8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x92afd58 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (DeclRefExpr 0x92afd28 <col:9> '_InputIterator' lvalue ParmVar 0x92952a0 '__first' '_InputIterator')
        (DeclRefExpr 0x92afd40 <col:20> '_InputIterator' lvalue ParmVar 0x92952e0 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x92afec8 <col:30, col:43> '<dependent type>'
        (UnresolvedLookupExpr 0x92afe68 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (DeclRefExpr 0x92afddc <col:30> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92afc70 '__cur' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92afe48 <col:39, col:43> '<dependent type>'
          (UnresolvedMemberExpr 0x92afe08 <col:39> '<bound member function type>' lvalue))))
    (BinaryOperator 0x92aff98 <col:46, col:57> '<dependent type>' ','
      (CXXOperatorCallExpr 0x92aff48 <col:46, col:48> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x92aff38 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92aff20 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9289ab0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x92aff08 <col:48> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92afc70 '__cur' 'iterator':'struct std::_Bit_iterator'))
      (UnaryOperator 0x92aff80 <col:55, col:57> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92aff68 <col:57> '_InputIterator' lvalue ParmVar 0x92952a0 '__first' '_InputIterator')))
    (BinaryOperator 0x92b0050 <line:955:4, col:14> '<dependent type>' '='
      (CXXOperatorCallExpr 0x92b0000 <col:4, col:5> 'reference':'struct std::_Bit_reference'
        (ImplicitCastExpr 0x92afff0 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
          (DeclRefExpr 0x92affd8 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
        (ImplicitCastExpr 0x92affc8 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
          (DeclRefExpr 0x92affb0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92afc70 '__cur' 'iterator':'struct std::_Bit_iterator')))
      (UnaryOperator 0x92b0038 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92b0020 <col:14> '_InputIterator' lvalue ParmVar 0x92952a0 '__first' '_InputIterator'))))
  (IfStmt 0x92b02d0 <line:956:2, line:959:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b0120 <line:956:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92b00c0 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
      (DeclRefExpr 0x92b008c <col:6> '_InputIterator' lvalue ParmVar 0x92952a0 '__first' '_InputIterator')
      (DeclRefExpr 0x92b00a4 <col:17> '_InputIterator' lvalue ParmVar 0x92952e0 '__last' '_InputIterator'))
    (CallExpr 0x92b0190 <line:957:4, col:25> '<dependent type>'
      (MemberExpr 0x92b0158 <col:4> '<bound member function type>' ->_M_erase_at_end 0x92965c0
        (CXXThisExpr 0x92b0148 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (DeclRefExpr 0x92b0178 <col:20> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92afc70 '__cur' 'iterator':'struct std::_Bit_iterator'))
    (CallExpr 0x92b02a8 <line:959:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x92b01c0 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x92b0258 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x92b0218 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92b0274 <col:18> '_InputIterator' lvalue ParmVar 0x92952a0 '__first' '_InputIterator')
      (DeclRefExpr 0x92b028c <col:27> '_InputIterator' lvalue ParmVar 0x92952e0 '__last' '_InputIterator'))))

;
        template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x92b0a30 </usr/include/c++/4.6/bits/stl_bvector.h:966:7, line:977:7>
  (DeclStmt 0x92b0400 <line:967:2, col:56>
    0x92b0320 "const size_type __len =
      (CallExpr 0x92b03d8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x92b0370 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
        (DeclRefExpr 0x92b03a4 <col:40> '_ForwardIterator' lvalue ParmVar 0x92954d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92b03bc <col:49> '_ForwardIterator' lvalue ParmVar 0x9295510 '__last' '_ForwardIterator'))")
  (IfStmt 0x92b0a10 <line:968:2, line:976:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b04c8 <line:968:6, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x92b0478 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
      (DeclRefExpr 0x92b0410 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x92b0320 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x92b0458 <col:14, col:19> '<dependent type>'
        (MemberExpr 0x92b0438 <col:14> '<bound member function type>' ->size 0x9292880
          (CXXThisExpr 0x92b0428 <col:14> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x92b0638 <line:969:4, col:55> '<dependent type>'
      (MemberExpr 0x92b0500 <col:4> '<bound member function type>' ->_M_erase_at_end 0x92965c0
        (CXXThisExpr 0x92b04f0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this))
      (CallExpr 0x92b0610 <col:20, col:54> '<dependent type>'
        (UnresolvedLookupExpr 0x92b0538 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
        (DeclRefExpr 0x92b0570 <col:30> '_ForwardIterator' lvalue ParmVar 0x92954d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92b0588 <col:39> '_ForwardIterator' lvalue ParmVar 0x9295510 '__last' '_ForwardIterator')
        (CallExpr 0x92b05f0 <col:47, col:53> '<dependent type>'
          (UnresolvedMemberExpr 0x92b05b0 <col:47> '<bound member function type>' lvalue))))
    (CompoundStmt 0x92b09f0 <line:971:4, line:976:4>
      (DeclStmt 0x92b06b0 <line:972:6, col:38>
        0x92b0660 "_ForwardIterator __mid =
          (DeclRefExpr 0x92b0694 <col:31> '_ForwardIterator' lvalue ParmVar 0x92954d0 '__first' '_ForwardIterator')")
      (CallExpr 0x92b0788 <line:973:6, col:32> '<dependent type>'
        (UnresolvedLookupExpr 0x92b06e8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e53920)
        (DeclRefExpr 0x92b071c <col:19> '_ForwardIterator' lvalue Var 0x92b0660 '__mid' '_ForwardIterator')
        (CallExpr 0x92b0768 <col:26, col:31> '<dependent type>'
          (MemberExpr 0x92b0748 <col:26> '<bound member function type>' ->size 0x9292880
            (CXXThisExpr 0x92b0738 <col:26> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CallExpr 0x92b08a8 <line:974:6, col:39> '<dependent type>'
        (UnresolvedLookupExpr 0x92b07d0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
        (DeclRefExpr 0x92b0808 <col:16> '_ForwardIterator' lvalue ParmVar 0x92954d0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92b0820 <col:25> '_ForwardIterator' lvalue Var 0x92b0660 '__mid' '_ForwardIterator')
        (CallExpr 0x92b0888 <col:32, col:38> '<dependent type>'
          (UnresolvedMemberExpr 0x92b0848 <col:32> '<bound member function type>' lvalue)))
      (CallExpr 0x92b09c8 <line:975:6, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x92b08e0 <col:6> '<bound member function type>' lvalue)
        (CallExpr 0x92b0978 <col:13, col:17> '<dependent type>'
          (UnresolvedMemberExpr 0x92b0938 <col:13> '<bound member function type>' lvalue))
        (DeclRefExpr 0x92b0994 <col:20> '_ForwardIterator' lvalue Var 0x92b0660 '__mid' '_ForwardIterator')
        (DeclRefExpr 0x92b09ac <col:27> '_ForwardIterator' lvalue ParmVar 0x9295510 '__last' '_ForwardIterator')))))

;
        template <typename _Integer> void _M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, std::__true_type) (CompoundStmt 0x92b0ae8 </usr/include/c++/4.6/bits/stl_bvector.h:987:7, col:42>
  (CallExpr 0x92b0ac0 <col:9, col:39> '<dependent type>'
    (MemberExpr 0x92b0a58 <col:9> '<bound member function type>' ->_M_fill_insert 0x9295ce0
      (CXXThisExpr 0x92b0a48 <col:9> 'vector<_Bool, type-parameter-0-0> *' this))
    (DeclRefExpr 0x92b0a78 <col:24> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9295700 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x92b0a90 <col:31> '_Integer' lvalue ParmVar 0x9295740 '__n' '_Integer')
    (DeclRefExpr 0x92b0aa8 <col:36> '_Integer' lvalue ParmVar 0x9295780 '__x' '_Integer')))

;
        template <typename _InputIterator> void _M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator __last, std::__false_type) (CompoundStmt 0x92b0c50 </usr/include/c++/4.6/bits/stl_bvector.h:994:7, line:995:40>
  (CallExpr 0x92b0c20 <line:994:9, line:995:37> '<dependent type>'
    (UnresolvedMemberExpr 0x92b0b10 <line:994:9> '<bound member function type>' lvalue)
    (DeclRefExpr 0x92b0b50 <col:25> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9295980 '__pos' 'iterator':'struct std::_Bit_iterator')
    (DeclRefExpr 0x92b0b68 <col:32> '_InputIterator' lvalue ParmVar 0x92959c0 '__first' '_InputIterator')
    (DeclRefExpr 0x92b0b80 <col:41> '_InputIterator' lvalue ParmVar 0x9295a00 '__last' '_InputIterator')
    (CallExpr 0x92b0c00 <line:995:4, col:36> '<dependent type>'
      (UnresolvedLookupExpr 0x92b0bb0 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e4e620)
      (DeclRefExpr 0x92b0be4 <col:29> '_InputIterator' lvalue ParmVar 0x92959c0 '__first' '_InputIterator'))))

;
        void _M_fill_insert(iterator __position, size_type __n, bool __x);
        template <typename _InputIterator> void _M_insert_range(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x92b0ee8 </usr/include/c++/4.6/bits/stl_bvector.h:1004:7, line:1010:7>
  (ForStmt 0x92b0ec0 <line:1005:2, line:1009:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b0cf8 <line:1005:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x92b0c98 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92b0c64 <col:9> '_InputIterator' lvalue ParmVar 0x9295df0 '__first' '_InputIterator')
      (DeclRefExpr 0x92b0c7c <col:20> '_InputIterator' lvalue ParmVar 0x9295e30 '__last' '_InputIterator'))
    (UnaryOperator 0x92b0d38 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92b0d1c <col:30> '_InputIterator' lvalue ParmVar 0x9295df0 '__first' '_InputIterator'))
    (CompoundStmt 0x92b0ea8 <line:1006:4, line:1009:4>
      (BinaryOperator 0x92b0e30 <line:1007:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x92b0d4c <col:6> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9295db0 '__pos' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92b0e08 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x92b0d78 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x92b0dbc <col:21> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9295db0 '__pos' 'iterator':'struct std::_Bit_iterator')
          (UnaryOperator 0x92b0df0 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92b0dd4 <col:29> '_InputIterator' lvalue ParmVar 0x9295df0 '__first' '_InputIterator'))))
      (CXXOperatorCallExpr 0x92b0e88 <line:1008:6, col:8> 'iterator':'struct std::_Bit_iterator' lvalue
        (ImplicitCastExpr 0x92b0e78 <<invalid sloc>> 'iterator &(*)(void)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92b0e60 <<invalid sloc>> 'iterator &(void)' lvalue CXXMethod 0x9289ab0 'operator++' 'iterator &(void)'))
        (DeclRefExpr 0x92b0e48 <col:8> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9295db0 '__pos' 'iterator':'struct std::_Bit_iterator')))))

;
        template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag);
        void _M_insert_aux(iterator __position, bool __x);
        size_type _M_check_len(size_type __n, const char *__s) const (CompoundStmt 0x92b15f8 </usr/include/c++/4.6/bits/stl_bvector.h:1022:5, line:1028:5>
  (IfStmt 0x92b1158 <line:1023:7, line:1024:31>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b1070 <line:1023:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x92b1020 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
      (CXXOperatorCallExpr 0x92b0fe0 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x92b0fa0 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (CallExpr 0x92b0f30 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x92b0f10 <col:11> '<bound member function type>' ->max_size 0x9292900
            (CXXThisExpr 0x92b0f00 <col:11> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92b0f80 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x92b0f60 <col:24> '<bound member function type>' ->size 0x9292880
            (CXXThisExpr 0x92b0f50 <col:24> 'const vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x92b1004 <col:33> 'size_type':'unsigned int' lvalue ParmVar 0x92963e0 '__n' 'size_type':'unsigned int'))
    (CallExpr 0x92b1128 <line:1024:2, col:31> 'void'
      (ImplicitCastExpr 0x92b1118 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92b10fc <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92b1148 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <LValueToRValue>
        (ParenExpr 0x92b10e8 <col:24, col:30> 'const char *' lvalue
          (DeclRefExpr 0x92b10cc </usr/include/c++/4.6/bits/stl_bvector.h:1024:27> 'const char *' lvalue ParmVar 0x9296430 '__s' 'const char *'))))
    <<<NULL>>>)
  (DeclStmt 0x92b1360 <line:1026:7, col:61>
    0x92b1180 "const size_type __len =
      (CXXOperatorCallExpr 0x92b1338 <col:31, col:60> '<dependent type>'
        (UnresolvedLookupExpr 0x92b12e8 <col:38, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
        (CallExpr 0x92b11e8 <col:31, col:36> '<dependent type>'
          (MemberExpr 0x92b11c8 <col:31> '<bound member function type>' ->size 0x9292880
            (CXXThisExpr 0x92b11b8 <col:31> 'const vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92b12c0 <col:40, col:60> '<dependent type>'
          (UnresolvedLookupExpr 0x92b1220 <col:40, col:45> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e79fe0 0x8e7a750)
          (CallExpr 0x92b1288 <col:49, col:54> '<dependent type>'
            (MemberExpr 0x92b1268 <col:49> '<bound member function type>' ->size 0x9292880
              (CXXThisExpr 0x92b1258 <col:49> 'const vector<_Bool, type-parameter-0-0> *' this)))
          (DeclRefExpr 0x92b12a4 <col:57> 'size_type':'unsigned int' lvalue ParmVar 0x92963e0 '__n' 'size_type':'unsigned int')))")
  (ReturnStmt 0x92b15e8 <line:1027:7, col:68>
    (ConditionalOperator 0x92b15c8 <col:14, col:68> '<dependent type>'
      (ParenExpr 0x92b1548 <col:14, col:51> '<dependent type>'
        (BinaryOperator 0x92b1530 <col:15, col:50> '<dependent type>' '||'
          (CXXOperatorCallExpr 0x92b1428 <col:15, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x92b13d8 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
            (DeclRefExpr 0x92b1370 <col:15> 'const size_type':'const unsigned int' lvalue Var 0x92b1180 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x92b13b8 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x92b1398 <col:23> '<bound member function type>' ->size 0x9292880
                (CXXThisExpr 0x92b1388 <col:23> 'const vector<_Bool, type-parameter-0-0> *' this))))
          (CXXOperatorCallExpr 0x92b1508 <col:33, col:50> '<dependent type>'
            (UnresolvedLookupExpr 0x92b14b8 <col:39, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
            (DeclRefExpr 0x92b144c <col:33> 'const size_type':'const unsigned int' lvalue Var 0x92b1180 '__len' 'const size_type':'const unsigned int')
            (CallExpr 0x92b1498 <col:41, col:50> '<dependent type>'
              (MemberExpr 0x92b1478 <col:41> '<bound member function type>' ->max_size 0x9292900
                (CXXThisExpr 0x92b1468 <col:41> 'const vector<_Bool, type-parameter-0-0> *' this))))))
      (CallExpr 0x92b1590 <col:55, col:64> '<dependent type>'
        (MemberExpr 0x92b1570 <col:55> '<bound member function type>' ->max_size 0x9292900
          (CXXThisExpr 0x92b1560 <col:55> 'const vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x92b15ac <col:68> 'const size_type':'const unsigned int' lvalue Var 0x92b1180 '__len' 'const size_type':'const unsigned int'))))


        void _M_erase_at_end(iterator __pos) (CompoundStmt 0x92b16c8 </usr/include/c++/4.6/bits/stl_bvector.h:1032:5, col:40>
  (BinaryOperator 0x92b16b0 <col:7, col:33> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92b1660 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92b1628 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x92b1618 <col:7> 'vector<_Bool, type-parameter-0-0> *' this)))
    (DeclRefExpr 0x92b1694 <col:33> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x9296520 '__pos' 'iterator':'struct std::_Bit_iterator')))


    };
}
namespace std {
    void reserve(size_type __n) (CompoundStmt 0x92b2900 </usr/include/c++/4.6/bits/vector.tcc:68:5, line:86:5>
  (IfStmt 0x92b1d10 <line:69:7, line:70:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b1be8 <line:69:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x92b1b98 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (DeclRefExpr 0x92b1b14 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92b1a30 '__n' 'size_type':'unsigned int')
      (CallExpr 0x92b1b78 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92b1b40 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x92b1b30 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CallExpr 0x92b1ce0 <line:70:2, col:45> 'void'
      (ImplicitCastExpr 0x92b1cd0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92b1cb4 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92b1d00 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x92b1ca0 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x92b1c70 </usr/include/c++/4.6/bits/vector.tcc:70:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x92b28e0 <line:71:7, line:85:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b1e00 <line:71:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x92b1db0 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
      (CallExpr 0x92b1d78 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92b1d40 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x92b1d30 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (DeclRefExpr 0x92b1d94 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x92b1a30 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x92b28b0 <line:72:2, line:85:2>
      (DeclStmt 0x92b1eb8 <line:73:4, col:39>
        0x92b1e30 "const size_type __old_size =
          (CallExpr 0x92b1e98 <col:33, col:38> '<dependent type>'
            (MemberExpr 0x92b1e78 <col:33> '<bound member function type>' ->size 0x926d750
              (CXXThisExpr 0x92b1e68 <col:33> 'vector<_Tp, _Alloc> *' this)))")
      (DeclStmt 0x92b20c8 <line:74:4, line:76:57>
        0x92b1ed0 "pointer __tmp =
          (CallExpr 0x92b20a0 <line:74:20, line:76:56> '<dependent type>'
            (UnresolvedMemberExpr 0x92b1f18 <line:74:20> '<bound member function type>' lvalue)
            (DeclRefExpr 0x92b1f54 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x92b1a30 '__n' 'size_type':'unsigned int')
            (ParenExpr 0x92b1ff0 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b1fb8 </usr/include/c++/4.6/bits/vector.tcc:75:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b1f80 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b1f70 <col:32> 'vector<_Tp, _Alloc> *' this))))
            (ParenExpr 0x92b2088 </usr/include/c++/4.6/bits/stl_iterator.h:1128:44, col:50> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b2050 </usr/include/c++/4.6/bits/vector.tcc:76:32, col:46> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b2018 <col:32, col:38> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b2008 <col:32> 'vector<_Tp, _Alloc> *' this)))))")
      (CallExpr 0x92b22a0 <line:77:4, line:78:25> '<dependent type>'
        (UnresolvedLookupExpr 0x92b2108 <line:77:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (CXXDependentScopeMemberExpr 0x92b2190 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b2158 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x92b2148 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92b2210 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b21d8 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x92b21c8 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x92b2280 <line:78:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x92b2244 <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x92b24f0 <line:79:4, line:81:28> '<dependent type>'
        (UnresolvedMemberExpr 0x92b22c8 <line:79:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x92b2350 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b2318 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x92b2308 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92b24c8 <line:80:4, line:81:20> '<dependent type>'
          (UnresolvedLookupExpr 0x92b2488 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CXXDependentScopeMemberExpr 0x92b23d0 <line:80:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92b2398 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x92b2388 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x92b2450 <line:81:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92b2418 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x92b2408 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x92b25b0 <line:82:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92b2560 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b2528 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92b2518 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92b2594 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92b1ed0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x92b26f0 <line:83:4, col:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92b2610 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b25d8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92b25c8 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92b26c8 <col:30, col:38> '<dependent type>'
          (UnresolvedLookupExpr 0x92b2678 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (DeclRefExpr 0x92b2644 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92b1ed0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x92b265c <col:38> 'const size_type':'const unsigned int' lvalue Var 0x92b1e30 '__old_size' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x92b2898 <line:84:4, col:63> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92b2750 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b2718 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92b2708 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92b2870 <col:38, col:63> '<dependent type>'
          (UnresolvedLookupExpr 0x92b2820 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CXXDependentScopeMemberExpr 0x92b27d0 <col:38, col:52> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92b2798 <col:38, col:44> '<dependent type>' lvalue
              (CXXThisExpr 0x92b2788 <col:38> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92b2804 <col:63> 'size_type':'unsigned int' lvalue ParmVar 0x92b1a30 '__n' 'size_type':'unsigned int'))))
    <<<NULL>>>))


    typename vector<_Tp, _Alloc>::iterator insert(iterator __position, const value_type &__x) (CompoundStmt 0x92b3790 </usr/include/c++/4.6/bits/vector.tcc:110:5, line:131:5>
  (DeclStmt 0x92b30d8 <line:111:7, col:49>
    0x92b2fb0 "const size_type __n =
      (CXXOperatorCallExpr 0x92b30b0 <col:29, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x92b3070 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (DeclRefExpr 0x92b2fe4 <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b2d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x92b3050 <col:42, col:48> '<dependent type>'
          (UnresolvedMemberExpr 0x92b3010 <col:42> '<bound member function type>' lvalue)))")
  (IfStmt 0x92b3628 <line:112:7, line:129:2>
    <<<NULL>>>
    (BinaryOperator 0x92b3380 <line:112:11, line:113:25> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92b3248 <line:112:11, col:52> '<dependent type>'
        (UnresolvedLookupExpr 0x92b31e8 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (CXXDependentScopeMemberExpr 0x92b3130 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b30f8 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x92b30e8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92b31b0 <col:38, col:52> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b3178 <col:38, col:44> '<dependent type>' lvalue
            (CXXThisExpr 0x92b3168 <col:38> 'vector<_Tp, _Alloc> *' this))))
      (CXXOperatorCallExpr 0x92b3358 <line:113:7, col:25> '<dependent type>'
        (UnresolvedLookupExpr 0x92b32f8 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
        (DeclRefExpr 0x92b326c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b2d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x92b32d8 <col:21, col:25> '<dependent type>'
          (UnresolvedMemberExpr 0x92b3298 <col:21> '<bound member function type>' lvalue))))
    (CompoundStmt 0x92b3570 <line:114:2, line:117:2>
      (CallExpr 0x92b34b0 <line:115:4, col:56> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92b33e0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b33a8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92b3398 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92b3460 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b3428 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x92b3418 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92b3494 <col:53> 'const value_type':'const _Tp' lvalue ParmVar 0x92b2d60 '__x' 'const value_type &'))
      (UnaryOperator 0x92b3558 <line:116:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x92b3520 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b34e8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92b34d8 <col:6> 'vector<_Tp, _Alloc> *' this)))))
    (CompoundStmt 0x92b3610 <line:119:2, line:129:2>
      (CallExpr 0x92b35e8 <line:128:6, col:35> '<dependent type>'
        (MemberExpr 0x92b3598 <col:6> '<bound member function type>' ->_M_insert_aux 0x92712e0
          (CXXThisExpr 0x92b3588 <col:6> 'vector<_Tp, _Alloc> *' this))
        (DeclRefExpr 0x92b35b8 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b2d10 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (DeclRefExpr 0x92b35d0 <col:32> 'const value_type':'const _Tp' lvalue ParmVar 0x92b2d60 '__x' 'const value_type &'))))
  (ReturnStmt 0x92b3780 <line:130:7, col:51>
    (CXXUnresolvedConstructExpr 0x92b3760 <col:14, col:51> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'
      (CXXOperatorCallExpr 0x92b3738 <col:23, col:48> '<dependent type>'
        (UnresolvedLookupExpr 0x92b36e8 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
        (CXXDependentScopeMemberExpr 0x92b3698 <col:23, col:37> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92b3660 <col:23, col:29> '<dependent type>' lvalue
            (CXXThisExpr 0x92b3650 <col:23> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92b36cc <col:48> 'const size_type':'const unsigned int' lvalue Var 0x92b2fb0 '__n' 'const size_type':'const unsigned int')))))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __position) (CompoundStmt 0x92b7738 </usr/include/c++/4.6/bits/vector.tcc:137:5, line:143:5>
  (IfStmt 0x92b7538 <line:138:7, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b7360 </usr/include/c++/4.6/bits/vector.tcc:138:11, col:33> '<dependent type>'
      (UnresolvedLookupExpr 0x92b7300 <col:26, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXOperatorCallExpr 0x92b7268 <col:11, col:24> '<dependent type>'
        (UnresolvedLookupExpr 0x92b7218 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
        (DeclRefExpr 0x92b71e8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b3b70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x92b7200 <col:24> 'int' 1))
      (CallExpr 0x92b72e0 <col:29, col:33> '<dependent type>'
        (UnresolvedMemberExpr 0x92b72a0 <col:29> '<bound member function type>' lvalue)))
    (CallExpr 0x92b7510 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
      (UnresolvedLookupExpr 0x92b73a8 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
      (CXXOperatorCallExpr 0x92b7460 </usr/include/c++/4.6/bits/vector.tcc:139:17, col:30> '<dependent type>'
        (UnresolvedLookupExpr 0x92b7410 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
        (DeclRefExpr 0x92b73e0 <col:17> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b3b70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (IntegerLiteral 0x92b73f8 <col:30> 'int' 1))
      (CallExpr 0x92b74d8 <col:33, col:37> '<dependent type>'
        (UnresolvedMemberExpr 0x92b7498 <col:33> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92b74f4 <col:40> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b3b70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    <<<NULL>>>)
  (UnaryOperator 0x92b75d8 <line:140:7, col:23> '<dependent type>' prefix '--'
    (CXXDependentScopeMemberExpr 0x92b75a0 <col:9, col:23> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92b7568 <col:9, col:15> '<dependent type>' lvalue
        (CXXThisExpr 0x92b7558 <col:9> 'vector<_Tp, _Alloc> *' this))))
  (CallExpr 0x92b76f0 <line:141:7, col:52> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92b7638 <col:7, col:21> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92b7600 <col:7, col:13> '<dependent type>' lvalue
        (CXXThisExpr 0x92b75f0 <col:7> 'vector<_Tp, _Alloc> *' this)))
    (CXXDependentScopeMemberExpr 0x92b76b8 <col:29, col:43> '<dependent type>' lvalue
      (CXXDependentScopeMemberExpr 0x92b7680 <col:29, col:35> '<dependent type>' lvalue
        (CXXThisExpr 0x92b7670 <col:29> 'vector<_Tp, _Alloc> *' this))))
  (ReturnStmt 0x92b7728 <line:142:7, col:14>
    (DeclRefExpr 0x92b7710 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b3b70 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    typename vector<_Tp, _Alloc>::iterator erase(iterator __first, iterator __last) (CompoundStmt 0x92b8350 </usr/include/c++/4.6/bits/vector.tcc:149:5, line:157:5>
  (IfStmt 0x92b8308 <line:150:7, line:155:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b7e38 <line:150:11, col:22> '<dependent type>'
      (UnresolvedLookupExpr 0x92b7dd8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92b7da8 <col:11> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b20 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
      (DeclRefExpr 0x92b7dc0 <col:22> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b60 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
    (CompoundStmt 0x92b82f0 <line:151:2, line:155:2>
      (IfStmt 0x92b8090 <line:152:4, /usr/include/c++/4.6/bits/stl_algobase.h:491:62>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92b7f48 </usr/include/c++/4.6/bits/vector.tcc:152:8, col:22> '<dependent type>'
          (UnresolvedLookupExpr 0x92b7ee8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
          (DeclRefExpr 0x92b7e5c <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b60 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x92b7ec8 <col:18, col:22> '<dependent type>'
            (UnresolvedMemberExpr 0x92b7e88 <col:18> '<bound member function type>' lvalue)))
        (CallExpr 0x92b8068 </usr/include/c++/4.6/bits/stl_algobase.h:491:39, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x92b7f90 <col:39, col:44> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
          (DeclRefExpr 0x92b7fc8 </usr/include/c++/4.6/bits/vector.tcc:153:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b60 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (CallExpr 0x92b8030 <col:29, col:33> '<dependent type>'
            (UnresolvedMemberExpr 0x92b7ff0 <col:29> '<bound member function type>' lvalue))
          (DeclRefExpr 0x92b804c <col:36> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b20 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        <<<NULL>>>)
      (CallExpr 0x92b82d0 <line:154:4, col:53> '<dependent type>'
        (MemberExpr 0x92b80c0 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9271530
          (CXXThisExpr 0x92b80b0 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CXXOperatorCallExpr 0x92b82a8 <col:20, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x92b8258 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CallExpr 0x92b8130 <col:20, col:33> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92b80f8 <col:20, col:28> '<dependent type>' lvalue
              (DeclRefExpr 0x92b80e0 <col:20> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b20 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
          (ParenExpr 0x92b8240 <col:37, col:52> '<dependent type>'
            (CXXOperatorCallExpr 0x92b8218 <col:38, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x92b81d8 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CallExpr 0x92b81a0 <col:38, col:42> '<dependent type>'
                (UnresolvedMemberExpr 0x92b8160 <col:38> '<bound member function type>' lvalue))
              (DeclRefExpr 0x92b81bc <col:46> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b60 '__last' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))))))
    <<<NULL>>>)
  (ReturnStmt 0x92b8340 <line:156:7, col:14>
    (DeclRefExpr 0x92b8324 <col:14> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92b7b20 '__first' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))


    vector<_Tp, _Alloc> &operator=(const vector<_Tp, _Alloc> &__x) (CompoundStmt 0x92ba220 </usr/include/c++/4.6/bits/vector.tcc:163:5, line:196:5>
  (IfStmt 0x92ba1c8 <line:164:7, line:194:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92b8b40 <line:164:11, col:19> '<dependent type>'
      (UnresolvedLookupExpr 0x92b8ae0 <col:16, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXOperatorCallExpr 0x92b8ab0 <col:11, col:12> '<dependent type>'
        (UnresolvedLookupExpr 0x92b8a70 <col:11, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x90a5d80 0x90b3ae0 0x90b4d50)
        (DeclRefExpr 0x92b8a54 <col:12> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &'))
      (CXXThisExpr 0x92b8ad0 <col:19> 'vector<_Tp, _Alloc> *' this))
    (CompoundStmt 0x92ba1a8 <line:165:2, line:194:2>
      (DeclStmt 0x92b8c18 <line:166:4, col:39>
        0x92b8b70 "const size_type __xlen =
          (CallExpr 0x92b8bf8 <col:29, col:38> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92b8bc0 <col:29, col:33> '<dependent type>' lvalue
              (DeclRefExpr 0x92b8ba4 <col:29> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))")
      (IfStmt 0x92b9fe0 <line:167:4, line:192:6>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92b8ce0 <line:167:8, col:26> '<dependent type>'
          (UnresolvedLookupExpr 0x92b8c90 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
          (DeclRefExpr 0x92b8c28 <col:8> 'const size_type':'const unsigned int' lvalue Var 0x92b8b70 '__xlen' 'const size_type':'const unsigned int')
          (CallExpr 0x92b8c70 <col:17, col:26> '<dependent type>'
            (MemberExpr 0x92b8c50 <col:17> '<bound member function type>' ->capacity 0x926d9a0
              (CXXThisExpr 0x92b8c40 <col:17> 'vector<_Tp, _Alloc> *' this))))
        (CompoundStmt 0x92b9558 <line:168:6, line:178:6>
          (DeclStmt 0x92b8eb8 <line:169:8, line:170:20>
            0x92b8d10 "pointer __tmp =
              (CallExpr 0x92b8e90 <line:169:24, line:170:19> '<dependent type>'
                (UnresolvedMemberExpr 0x92b8d58 <line:169:24> '<bound member function type>' lvalue)
                (DeclRefExpr 0x92b8d94 <col:45> 'const size_type':'const unsigned int' lvalue Var 0x92b8b70 '__xlen' 'const size_type':'const unsigned int')
                (CallExpr 0x92b8e00 <col:53, col:63> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92b8dc8 <col:53, col:57> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b8dac <col:53> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x92b8e70 <line:170:10, col:18> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92b8e38 <col:10, col:14> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b8e1c <col:10> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &'))))")
          (CallExpr 0x92b9088 <line:171:8, line:172:29> '<dependent type>'
            (UnresolvedLookupExpr 0x92b8ef0 <line:171:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
            (CXXDependentScopeMemberExpr 0x92b8f78 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b8f40 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x92b8f30 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x92b8ff8 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b8fc0 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x92b8fb0 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x92b9068 <line:172:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x92b902c <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x92b92d8 <line:173:8, line:175:32> '<dependent type>'
            (UnresolvedMemberExpr 0x92b90b0 <line:173:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x92b9138 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b9100 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x92b90f0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92b92b0 <line:174:8, line:175:24> '<dependent type>'
              (UnresolvedLookupExpr 0x92b9270 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CXXDependentScopeMemberExpr 0x92b91b8 <line:174:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9180 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b9170 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x92b9238 <line:175:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9200 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b91f0 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x92b9398 <line:176:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92b9348 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b9310 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92b9300 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92b937c <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92b8d10 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92b9540 <line:177:8, col:67> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92b93f8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92b93c0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92b93b0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92b9518 <col:42, col:67> '<dependent type>'
              (UnresolvedLookupExpr 0x92b94c8 <col:65, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
              (CXXDependentScopeMemberExpr 0x92b9478 <col:42, col:56> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9440 <col:42, col:48> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b9430 <col:42> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x92b94ac <col:67> 'const size_type':'const unsigned int' lvalue Var 0x92b8b70 '__xlen' 'const size_type':'const unsigned int'))))
        (IfStmt 0x92b9fc0 <line:179:9, line:192:6>
          <<<NULL>>>
          (CXXOperatorCallExpr 0x92b9638 <line:179:13, col:23> '<dependent type>'
            (UnresolvedLookupExpr 0x92b95e8 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0 0x9283780)
            (CallExpr 0x92b95b0 <col:13, col:18> '<dependent type>'
              (MemberExpr 0x92b9590 <col:13> '<bound member function type>' ->size 0x926d750
                (CXXThisExpr 0x92b9580 <col:13> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92b95cc <col:23> 'const size_type':'const unsigned int' lvalue Var 0x92b8b70 '__xlen' 'const size_type':'const unsigned int'))
          (CompoundStmt 0x92b9978 <line:180:6, line:183:6>
            (CallExpr 0x92b9950 <line:181:8, line:182:36> '<dependent type>'
              (UnresolvedLookupExpr 0x92b9680 <line:181:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
              (CallExpr 0x92b9860 <col:22, col:63> '<dependent type>'
                (UnresolvedLookupExpr 0x92b96d8 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
                (CallExpr 0x92b9760 <col:32, col:42> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92b9728 <col:32, col:36> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b9710 <col:32> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x92b97d0 <col:45, col:53> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92b9798 <col:45, col:49> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b977c <col:45> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x92b9840 <col:56, col:62> '<dependent type>'
                  (UnresolvedMemberExpr 0x92b9800 <col:56> '<bound member function type>' lvalue)))
              (CallExpr 0x92b98d8 <line:182:8, col:12> '<dependent type>'
                (UnresolvedMemberExpr 0x92b9898 <col:8> '<bound member function type>' lvalue))
              (CallExpr 0x92b9930 <col:15, col:35> '<dependent type>'
                (UnresolvedMemberExpr 0x92b98f4 <col:15> '<dependent type>' lvalue))))
          (CompoundStmt 0x92b9fa8 <line:185:6, line:192:6>
            (CallExpr 0x92b9c40 <line:186:8, line:187:26> '<dependent type>'
              (UnresolvedLookupExpr 0x92b99b0 <line:186:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
              (CXXDependentScopeMemberExpr 0x92b9a38 <col:18, col:30> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9a00 <col:18, col:22> '<dependent type>' lvalue
                  (DeclRefExpr 0x92b99e8 <col:18> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXOperatorCallExpr 0x92b9b98 <col:40, col:68> '<dependent type>'
                (UnresolvedLookupExpr 0x92b9b48 <col:61, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                (CXXDependentScopeMemberExpr 0x92b9ac0 <col:40, col:52> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92b9a88 <col:40, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b9a6c <col:40> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x92b9b28 <col:63, col:68> '<dependent type>'
                  (MemberExpr 0x92b9b08 <col:63> '<bound member function type>' ->size 0x926d750
                    (CXXThisExpr 0x92b9af8 <col:63> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x92b9c08 <line:187:4, col:18> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9bd0 <col:4, col:10> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b9bc0 <col:4> 'vector<_Tp, _Alloc> *' this))))
            (CallExpr 0x92b9f78 <line:188:8, line:191:29> '<dependent type>'
              (UnresolvedLookupExpr 0x92b9c90 <line:188:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
              (CXXOperatorCallExpr 0x92b9df0 <col:36, col:64> '<dependent type>'
                (UnresolvedLookupExpr 0x92b9da0 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                (CXXDependentScopeMemberExpr 0x92b9d18 <col:36, col:48> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92b9ce0 <col:36, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x92b9cc8 <col:36> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
                (CallExpr 0x92b9d80 <col:59, col:64> '<dependent type>'
                  (MemberExpr 0x92b9d60 <col:59> '<bound member function type>' ->size 0x926d750
                    (CXXThisExpr 0x92b9d50 <col:59> 'vector<_Tp, _Alloc> *' this))))
              (CXXDependentScopeMemberExpr 0x92b9e68 <line:189:8, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9e30 <col:8, col:12> '<dependent type>' lvalue
                  (DeclRefExpr 0x92b9e14 <col:8> 'const vector<_Tp, _Alloc>':'const vector<_Tp, _Alloc>' lvalue ParmVar 0x92b8810 '__x' 'const vector<_Tp, _Alloc> &')))
              (CXXDependentScopeMemberExpr 0x92b9ee8 <line:190:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92b9eb0 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x92b9ea0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x92b9f58 <line:191:8, col:28> '<dependent type>'
                (UnresolvedMemberExpr 0x92b9f1c <col:8> '<dependent type>' lvalue))))))
      (BinaryOperator 0x92ba190 <line:193:4, col:55> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92ba048 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92ba010 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92ba000 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92ba168 <col:30, col:55> '<dependent type>'
          (UnresolvedLookupExpr 0x92ba118 <col:53, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CXXDependentScopeMemberExpr 0x92ba0c8 <col:30, col:44> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92ba090 <col:30, col:36> '<dependent type>' lvalue
              (CXXThisExpr 0x92ba080 <col:30> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92ba0fc <col:55> 'const size_type':'const unsigned int' lvalue Var 0x92b8b70 '__xlen' 'const size_type':'const unsigned int'))))
    <<<NULL>>>)
  (ReturnStmt 0x92ba210 <line:195:7, col:15>
    (UnaryOperator 0x92ba1f8 <col:14, col:15> '<dependent type>' prefix '*'
      (CXXThisExpr 0x92ba1e8 <col:15> 'vector<_Tp, _Alloc> *' this))))


    void _M_fill_assign(size_t __n, const value_type &__val) (CompoundStmt 0x92bb0c8 </usr/include/c++/4.6/bits/vector.tcc:202:5, line:218:5>
  (IfStmt 0x92bb0a8 <line:203:7, line:217:72>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92ba700 <line:203:11, col:26> '<dependent type>'
      (UnresolvedLookupExpr 0x92ba6b0 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (DeclRefExpr 0x92ba648 <col:11> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
      (CallExpr 0x92ba690 <col:17, col:26> '<dependent type>'
        (MemberExpr 0x92ba670 <col:17> '<bound member function type>' ->capacity 0x926d9a0
          (CXXThisExpr 0x92ba660 <col:17> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x92ba8c0 <line:204:2, line:207:2>
      (DeclStmt 0x92ba818 <line:205:4, col:51>
        0x92ba730 "vector<_Tp, _Alloc> __tmp =
          (ParenListExpr 0x92ba7f0 <col:16, col:50> 'vector<_Tp, _Alloc>'
            (DeclRefExpr 0x92ba764 <col:17> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
            (DeclRefExpr 0x92ba77c <col:22> 'const value_type':'const _Tp' lvalue ParmVar 0x92ba530 '__val' 'const value_type &')
            (CallExpr 0x92ba7d0 <col:29, col:49> '<dependent type>'
              (UnresolvedMemberExpr 0x92ba794 <col:29> '<dependent type>' lvalue)))")
      (CallExpr 0x92ba8a0 <line:206:4, col:20> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92ba840 <col:4, col:10> '<dependent type>' lvalue
          (DeclRefExpr 0x92ba828 <col:4> 'vector<_Tp, _Alloc>' lvalue Var 0x92ba730 '__tmp' 'vector<_Tp, _Alloc>'))
        (UnaryOperator 0x92ba888 <col:15, col:16> '<dependent type>' prefix '*'
          (CXXThisExpr 0x92ba878 <col:16> 'vector<_Tp, _Alloc> *' this))))
    (IfStmt 0x92bb088 <line:208:12, line:217:72>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x92ba990 <line:208:16, col:27> '<dependent type>'
        (UnresolvedLookupExpr 0x92ba940 <col:20, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
        (DeclRefExpr 0x92ba8d8 <col:16> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
        (CallExpr 0x92ba920 <col:22, col:27> '<dependent type>'
          (MemberExpr 0x92ba900 <col:22> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x92ba8f0 <col:22> 'vector<_Tp, _Alloc> *' this))))
      (CompoundStmt 0x92baef0 <line:209:2, line:215:2>
        (CallExpr 0x92bab08 <line:210:4, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x92ba9d8 <col:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
          (CallExpr 0x92baa60 <col:14, col:20> '<dependent type>'
            (UnresolvedMemberExpr 0x92baa20 <col:14> '<bound member function type>' lvalue))
          (CallExpr 0x92baad0 <col:23, col:27> '<dependent type>'
            (UnresolvedMemberExpr 0x92baa90 <col:23> '<bound member function type>' lvalue))
          (DeclRefExpr 0x92baaec <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x92ba530 '__val' 'const value_type &'))
        (CallExpr 0x92bad50 <line:211:4, line:213:27> '<dependent type>'
          (UnresolvedLookupExpr 0x92bab58 <line:211:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9262420 0x9262d50)
          (CXXDependentScopeMemberExpr 0x92babd8 <col:34, col:48> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92baba0 <col:34, col:40> '<dependent type>' lvalue
              (CXXThisExpr 0x92bab90 <col:34> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x92bacb8 <line:212:6, col:17> '<dependent type>'
            (UnresolvedLookupExpr 0x92bac78 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
            (DeclRefExpr 0x92bac0c <col:6> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
            (CallExpr 0x92bac58 <col:12, col:17> '<dependent type>'
              (MemberExpr 0x92bac38 <col:12> '<bound member function type>' ->size 0x926d750
                (CXXThisExpr 0x92bac28 <col:12> 'vector<_Tp, _Alloc> *' this))))
          (DeclRefExpr 0x92bacdc <col:20> 'const value_type':'const _Tp' lvalue ParmVar 0x92ba530 '__val' 'const value_type &')
          (CallExpr 0x92bad30 <line:213:6, col:26> '<dependent type>'
            (UnresolvedMemberExpr 0x92bacf4 <col:6> '<dependent type>' lvalue)))
        (CompoundAssignOperator 0x92baed0 <line:214:4, col:42> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
          (CXXDependentScopeMemberExpr 0x92badc8 <col:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bad90 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x92bad80 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXOperatorCallExpr 0x92baea8 <col:31, col:42> '<dependent type>'
            (UnresolvedLookupExpr 0x92bae68 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
            (DeclRefExpr 0x92badfc <col:31> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
            (CallExpr 0x92bae48 <col:37, col:42> '<dependent type>'
              (MemberExpr 0x92bae28 <col:37> '<bound member function type>' ->size 0x926d750
                (CXXThisExpr 0x92bae18 <col:37> 'vector<_Tp, _Alloc> *' this))))))
      (CallExpr 0x92bb068 <line:217:9, col:72> '<dependent type>'
        (MemberExpr 0x92baf20 <col:9> '<bound member function type>' ->_M_erase_at_end 0x9271530
          (CXXThisExpr 0x92baf10 <col:9> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x92bb040 <col:25, col:71> '<dependent type>'
          (UnresolvedLookupExpr 0x92baf58 <col:25, col:30> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ce60)
          (CXXDependentScopeMemberExpr 0x92bafd8 <col:37, col:51> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bafa0 <col:37, col:43> '<dependent type>' lvalue
              (CXXThisExpr 0x92baf90 <col:37> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92bb00c <col:61> 'size_t':'unsigned int' lvalue ParmVar 0x92ba4e0 '__n' 'size_t':'unsigned int')
          (DeclRefExpr 0x92bb024 <col:66> 'const value_type':'const _Tp' lvalue ParmVar 0x92ba530 '__val' 'const value_type &'))))))


    template <typename _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x92bbc90 </usr/include/c++/4.6/bits/vector.tcc:226:7, line:235:7>
  (DeclStmt 0x92bb718 <line:227:2, col:39>
    0x92bb640 "pointer __cur =
      (ParenListExpr 0x92bb6f8 <col:15, col:38> 'pointer':'typename _Tp_alloc_type::pointer'
        (CXXDependentScopeMemberExpr 0x92bb6c0 <col:16, col:30> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bb688 <col:16, col:22> '<dependent type>' lvalue
            (CXXThisExpr 0x92bb678 <col:16> 'vector<_Tp, _Alloc> *' this))))")
  (ForStmt 0x92bba08 <line:228:2, line:230:14>
    <<<NULL>>>
    <<<NULL>>>
    (BinaryOperator 0x92bb900 <line:228:9, col:53> '<dependent type>' '&&'
      (CXXOperatorCallExpr 0x92bb7b8 <col:9, col:20> '<dependent type>'
        (UnresolvedLookupExpr 0x92bb758 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (DeclRefExpr 0x92bb728 <col:9> '_InputIterator' lvalue ParmVar 0x92bb3e0 '__first' '_InputIterator')
        (DeclRefExpr 0x92bb740 <col:20> '_InputIterator' lvalue ParmVar 0x92bb420 '__last' '_InputIterator'))
      (CXXOperatorCallExpr 0x92bb8d8 <col:30, col:53> '<dependent type>'
        (UnresolvedLookupExpr 0x92bb878 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
        (DeclRefExpr 0x92bb7dc <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bb640 '__cur' 'pointer':'typename _Tp_alloc_type::pointer')
        (CXXDependentScopeMemberExpr 0x92bb840 <col:39, col:53> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bb808 <col:39, col:45> '<dependent type>' lvalue
            (CXXThisExpr 0x92bb7f8 <col:39> 'vector<_Tp, _Alloc> *' this)))))
    (BinaryOperator 0x92bb978 <line:229:7, col:18> '<dependent type>' ','
      (UnaryOperator 0x92bb930 <col:7, col:9> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bb918 <col:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bb640 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x92bb960 <col:16, col:18> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92bb944 <col:18> '_InputIterator' lvalue ParmVar 0x92bb3e0 '__first' '_InputIterator')))
    (BinaryOperator 0x92bb9f0 <line:230:4, col:14> '<dependent type>' '='
      (UnaryOperator 0x92bb9a8 <col:4, col:5> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92bb990 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bb640 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
      (UnaryOperator 0x92bb9d8 <col:13, col:14> '<dependent type>' prefix '*'
        (DeclRefExpr 0x92bb9bc <col:14> '_InputIterator' lvalue ParmVar 0x92bb3e0 '__first' '_InputIterator'))))
  (IfStmt 0x92bbc70 <line:231:2, line:234:33>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bbac0 <line:231:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92bba60 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e428b0 0x8e598b0 0x8e5cfb0 0x8ea6870 0x8ec94f0 0x8ec9880 0x8ff4490 0x8ff4f00 0x8ff5740 0x8ff5cb0 0x910c9f0 0x92818c0)
      (DeclRefExpr 0x92bba2c <col:6> '_InputIterator' lvalue ParmVar 0x92bb3e0 '__first' '_InputIterator')
      (DeclRefExpr 0x92bba44 <col:17> '_InputIterator' lvalue ParmVar 0x92bb420 '__last' '_InputIterator'))
    (CallExpr 0x92bbb30 <line:232:4, col:25> '<dependent type>'
      (MemberExpr 0x92bbaf8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9271530
        (CXXThisExpr 0x92bbae8 <col:4> 'vector<_Tp, _Alloc> *' this))
      (DeclRefExpr 0x92bbb18 <col:20> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bb640 '__cur' 'pointer':'typename _Tp_alloc_type::pointer'))
    (CallExpr 0x92bbc48 <line:234:4, col:33> '<dependent type>'
      (UnresolvedMemberExpr 0x92bbb60 <col:4> '<bound member function type>' lvalue)
      (CallExpr 0x92bbbf8 <col:11, col:15> '<dependent type>'
        (UnresolvedMemberExpr 0x92bbbb8 <col:11> '<bound member function type>' lvalue))
      (DeclRefExpr 0x92bbc14 <col:18> '_InputIterator' lvalue ParmVar 0x92bb3e0 '__first' '_InputIterator')
      (DeclRefExpr 0x92bbc2c <col:27> '_InputIterator' lvalue ParmVar 0x92bb420 '__last' '_InputIterator'))))

;
    template <typename _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x92bd450 </usr/include/c++/4.6/bits/vector.tcc:243:7, line:270:7>
  (DeclStmt 0x92bc2f0 <line:244:2, col:56>
    0x92bc210 "const size_type __len =
      (CallExpr 0x92bc2c8 <col:26, col:55> '<dependent type>'
        (UnresolvedLookupExpr 0x92bc260 <col:26, col:31> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
        (DeclRefExpr 0x92bc294 <col:40> '_ForwardIterator' lvalue ParmVar 0x92bbfb0 '__first' '_ForwardIterator')
        (DeclRefExpr 0x92bc2ac <col:49> '_ForwardIterator' lvalue ParmVar 0x92bbff0 '__last' '_ForwardIterator'))")
  (IfStmt 0x92bd430 <line:246:2, line:269:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bc3b8 <line:246:6, col:23> '<dependent type>'
      (UnresolvedLookupExpr 0x92bc368 <col:12, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (DeclRefExpr 0x92bc300 <col:6> 'const size_type':'const unsigned int' lvalue Var 0x92bc210 '__len' 'const size_type':'const unsigned int')
      (CallExpr 0x92bc348 <col:14, col:23> '<dependent type>'
        (MemberExpr 0x92bc328 <col:14> '<bound member function type>' ->capacity 0x926d9a0
          (CXXThisExpr 0x92bc318 <col:14> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x92bccc0 <line:247:4, line:257:4>
      (DeclStmt 0x92bc508 <line:248:6, col:65>
        0x92bc3f0 "pointer __tmp =
          (ParenListExpr 0x92bc4e8 <col:19, col:64> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x92bc4c0 <col:20, col:63> '<dependent type>'
              (UnresolvedMemberExpr 0x92bc438 <col:20> '<bound member function type>' lvalue)
              (DeclRefExpr 0x92bc474 <col:41> 'const size_type':'const unsigned int' lvalue Var 0x92bc210 '__len' 'const size_type':'const unsigned int')
              (DeclRefExpr 0x92bc48c <col:48> '_ForwardIterator' lvalue ParmVar 0x92bbfb0 '__first' '_ForwardIterator')
              (DeclRefExpr 0x92bc4a4 <col:57> '_ForwardIterator' lvalue ParmVar 0x92bbff0 '__last' '_ForwardIterator')))")
      (CallExpr 0x92bc6d8 <line:249:6, line:250:27> '<dependent type>'
        (UnresolvedLookupExpr 0x92bc540 <line:249:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (CXXDependentScopeMemberExpr 0x92bc5c8 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bc590 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x92bc580 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92bc648 <col:44, col:58> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bc610 <col:44, col:50> '<dependent type>' lvalue
            (CXXThisExpr 0x92bc600 <col:44> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x92bc6b8 <line:250:6, col:26> '<dependent type>'
          (UnresolvedMemberExpr 0x92bc67c <col:6> '<dependent type>' lvalue)))
      (CallExpr 0x92bc928 <line:251:6, line:253:30> '<dependent type>'
        (UnresolvedMemberExpr 0x92bc700 <line:251:6> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x92bc788 <col:20, col:34> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bc750 <col:20, col:26> '<dependent type>' lvalue
            (CXXThisExpr 0x92bc740 <col:20> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92bc900 <line:252:6, line:253:22> '<dependent type>'
          (UnresolvedLookupExpr 0x92bc8c0 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CXXDependentScopeMemberExpr 0x92bc808 <line:252:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bc7d0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x92bc7c0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x92bc888 <line:253:8, col:22> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bc850 <col:8, col:14> '<dependent type>' lvalue
              (CXXThisExpr 0x92bc840 <col:8> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x92bc9e8 <line:254:6, col:31> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bc998 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bc960 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92bc950 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92bc9cc <col:31> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bc3f0 '__tmp' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x92bcb90 <line:255:6, col:57> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bca48 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bca10 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92bca00 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92bcb68 <col:32, col:57> '<dependent type>'
          (UnresolvedLookupExpr 0x92bcb18 <col:55, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CXXDependentScopeMemberExpr 0x92bcac8 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bca90 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x92bca80 <col:32> 'vector<_Tp, _Alloc> *' this)))
          (DeclRefExpr 0x92bcafc <col:57> 'const size_type':'const unsigned int' lvalue Var 0x92bc210 '__len' 'const size_type':'const unsigned int')))
      (BinaryOperator 0x92bcca8 <line:256:6, col:54> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bcbf0 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bcbb8 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92bcba8 <col:6> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92bcc70 <col:40, col:54> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bcc38 <col:40, col:46> '<dependent type>' lvalue
            (CXXThisExpr 0x92bcc28 <col:40> 'vector<_Tp, _Alloc> *' this)))))
    (IfStmt 0x92bd410 <line:258:7, line:269:4>
      <<<NULL>>>
      (CXXOperatorCallExpr 0x92bcda0 <line:258:11, col:21> '<dependent type>'
        (UnresolvedLookupExpr 0x92bcd50 <col:18, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0 0x9283780)
        (CallExpr 0x92bcd18 <col:11, col:16> '<dependent type>'
          (MemberExpr 0x92bccf8 <col:11> '<bound member function type>' ->size 0x926d750
            (CXXThisExpr 0x92bcce8 <col:11> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92bcd34 <col:21> 'const size_type':'const unsigned int' lvalue Var 0x92bc210 '__len' 'const size_type':'const unsigned int'))
      (CallExpr 0x92bcf20 <line:259:4, col:70> '<dependent type>'
        (MemberExpr 0x92bcdd8 <col:4> '<bound member function type>' ->_M_erase_at_end 0x9271530
          (CXXThisExpr 0x92bcdc8 <col:4> 'vector<_Tp, _Alloc> *' this))
        (CallExpr 0x92bcef8 <col:20, col:69> '<dependent type>'
          (UnresolvedLookupExpr 0x92bce10 <col:20, col:25> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
          (DeclRefExpr 0x92bce48 <col:30> '_ForwardIterator' lvalue ParmVar 0x92bbfb0 '__first' '_ForwardIterator')
          (DeclRefExpr 0x92bce60 <col:39> '_ForwardIterator' lvalue ParmVar 0x92bbff0 '__last' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x92bcec0 <col:47, col:61> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bce88 <col:47, col:53> '<dependent type>' lvalue
              (CXXThisExpr 0x92bce78 <col:47> 'vector<_Tp, _Alloc> *' this)))))
      (CompoundStmt 0x92bd3f0 <line:261:4, line:269:4>
        (DeclStmt 0x92bcfa0 <line:262:6, col:38>
          0x92bcf50 "_ForwardIterator __mid =
            (DeclRefExpr 0x92bcf84 <col:31> '_ForwardIterator' lvalue ParmVar 0x92bbfb0 '__first' '_ForwardIterator')")
        (CallExpr 0x92bd078 <line:263:6, col:32> '<dependent type>'
          (UnresolvedLookupExpr 0x92bcfd8 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e53920)
          (DeclRefExpr 0x92bd00c <col:19> '_ForwardIterator' lvalue Var 0x92bcf50 '__mid' '_ForwardIterator')
          (CallExpr 0x92bd058 <col:26, col:31> '<dependent type>'
            (MemberExpr 0x92bd038 <col:26> '<bound member function type>' ->size 0x926d750
              (CXXThisExpr 0x92bd028 <col:26> 'vector<_Tp, _Alloc> *' this))))
        (CallExpr 0x92bd1a8 <line:264:6, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x92bd0c0 <col:6, col:11> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
          (DeclRefExpr 0x92bd0f8 <col:16> '_ForwardIterator' lvalue ParmVar 0x92bbfb0 '__first' '_ForwardIterator')
          (DeclRefExpr 0x92bd110 <col:25> '_ForwardIterator' lvalue Var 0x92bcf50 '__mid' '_ForwardIterator')
          (CXXDependentScopeMemberExpr 0x92bd170 <col:32, col:46> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bd138 <col:32, col:38> '<dependent type>' lvalue
              (CXXThisExpr 0x92bd128 <col:32> 'vector<_Tp, _Alloc> *' this))))
        (BinaryOperator 0x92bd3d8 <line:265:6, line:268:29> '<dependent type>' '='
          (CXXDependentScopeMemberExpr 0x92bd218 <line:265:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bd1e0 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x92bd1d0 <col:6> 'vector<_Tp, _Alloc> *' this)))
          (CallExpr 0x92bd3a8 <line:266:8, line:268:29> '<dependent type>'
            (UnresolvedLookupExpr 0x92bd268 <line:266:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
            (DeclRefExpr 0x92bd2a0 <col:36> '_ForwardIterator' lvalue Var 0x92bcf50 '__mid' '_ForwardIterator')
            (DeclRefExpr 0x92bd2b8 <col:43> '_ForwardIterator' lvalue ParmVar 0x92bbff0 '__last' '_ForwardIterator')
            (CXXDependentScopeMemberExpr 0x92bd318 <line:267:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92bd2e0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92bd2d0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x92bd388 <line:268:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x92bd34c <col:8> '<dependent type>' lvalue))))))))

;
    void _M_insert_aux(iterator __position, const _Tp &__x) (CompoundStmt 0x92bf670 </usr/include/c++/4.6/bits/vector.tcc:303:5, line:373:5>
  (IfStmt 0x92bf650 <line:304:7, line:372:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92bd9f8 <line:304:11, col:52> '<dependent type>'
      (UnresolvedLookupExpr 0x92bd998 <col:35, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXDependentScopeMemberExpr 0x92bd8e0 <col:11, col:25> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92bd8a8 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x92bd898 <col:11> 'vector<_Tp, _Alloc> *' this)))
      (CXXDependentScopeMemberExpr 0x92bd960 <col:38, col:52> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92bd928 <col:38, col:44> '<dependent type>' lvalue
          (CXXThisExpr 0x92bd918 <col:38> 'vector<_Tp, _Alloc> *' this))))
    (CompoundStmt 0x92be0e8 <line:305:2, line:321:2>
      (CallExpr 0x92bdc68 <line:306:4, line:308:14> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92bda68 <line:306:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bda30 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92bda20 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92bdae8 <col:28, col:42> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bdab0 <col:28, col:34> '<dependent type>' lvalue
            (CXXThisExpr 0x92bdaa0 <col:28> 'vector<_Tp, _Alloc> *' this)))
        (ParenExpr 0x92bdc50 </usr/include/c++/4.6/bits/move.h:105:30, col:36> '<dependent type>'
          (UnaryOperator 0x92bdc38 </usr/include/c++/4.6/bits/vector.tcc:307:21, line:308:12> '<dependent type>' prefix '*'
            (ParenExpr 0x92bdc20 <line:307:22, line:308:12> '<dependent type>'
              (CXXOperatorCallExpr 0x92bdbf8 <line:307:23, line:308:11> '<dependent type>'
                (UnresolvedLookupExpr 0x92bdbb8 <col:9, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                (CXXDependentScopeMemberExpr 0x92bdb68 <line:307:23, col:37> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92bdb30 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x92bdb20 <col:23> 'vector<_Tp, _Alloc> *' this)))
                (IntegerLiteral 0x92bdba0 <line:308:11> 'int' 1))))))
      (UnaryOperator 0x92bdd10 <line:309:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x92bdcd8 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bdca0 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92bdc90 <col:6> 'vector<_Tp, _Alloc> *' this))))
      (DeclStmt 0x92bdd80 <line:311:4, col:22>
        0x92bdd30 "_Tp __x_copy =
          (DeclRefExpr 0x92bdd64 <col:19> 'const _Tp' lvalue ParmVar 0x92bd780 '__x' 'const _Tp &')")
      (CallExpr 0x92be060 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
        (UnresolvedLookupExpr 0x92bddb8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
        (CallExpr 0x92bde40 </usr/include/c++/4.6/bits/vector.tcc:313:28, col:44> '<dependent type>'
          (CXXDependentScopeMemberExpr 0x92bde08 <col:28, col:39> '<dependent type>' lvalue
            (DeclRefExpr 0x92bddec <col:28> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bd710 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
        (CXXOperatorCallExpr 0x92bdf38 <line:314:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x92bdef8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CXXDependentScopeMemberExpr 0x92bdea8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bde70 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x92bde60 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x92bdee0 <col:33> 'int' 2))
        (CXXOperatorCallExpr 0x92be038 <line:315:7, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x92bdff8 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CXXDependentScopeMemberExpr 0x92bdfa8 <col:7, col:21> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bdf70 <col:7, col:13> '<dependent type>' lvalue
              (CXXThisExpr 0x92bdf60 <col:7> 'vector<_Tp, _Alloc> *' this)))
          (IntegerLiteral 0x92bdfe0 <col:33> 'int' 1)))
      (BinaryOperator 0x92be0d0 <line:317:4, col:18> '<dependent type>' '='
        (UnaryOperator 0x92be0a0 <col:4, col:5> '<dependent type>' prefix '*'
          (DeclRefExpr 0x92be088 <col:5> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bd710 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))
        (DeclRefExpr 0x92be0b4 <col:18> '_Tp' lvalue Var 0x92bdd30 '__x_copy' '_Tp')))
    (CompoundStmt 0x92bf610 <line:323:2, line:372:2>
      (DeclStmt 0x92be230 <line:324:4, line:325:57>
        0x92be120 "const size_type __len =
          (CallExpr 0x92be208 <col:6, col:56> '<dependent type>'
            (MemberExpr 0x92be168 <col:6> '<bound member function type>' ->_M_check_len 0x9271420
              (CXXThisExpr 0x92be158 <col:6> 'vector<_Tp, _Alloc> *' this))
            (CXXFunctionalCastExpr 0x92be1b8 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x92be1a8 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92be190 <col:29> 'int' 1)))
            (StringLiteral 0x92be1d0 <col:33> 'const char [22]' lvalue "vector::_M_insert_aux"))")
      (DeclStmt 0x92be378 <line:326:4, col:57>
        0x92be250 "const size_type __elems_before =
          (CXXOperatorCallExpr 0x92be350 <col:37, col:56> '<dependent type>'
            (UnresolvedLookupExpr 0x92be310 <col:48, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
            (DeclRefExpr 0x92be284 <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bd710 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
            (CallExpr 0x92be2f0 <col:50, col:56> '<dependent type>'
              (UnresolvedMemberExpr 0x92be2b0 <col:50> '<bound member function type>' lvalue)))")
      (DeclStmt 0x92be468 <line:327:4, col:49>
        0x92be390 "pointer __new_start =
          (ParenListExpr 0x92be448 <col:23, col:48> 'pointer':'typename _Tp_alloc_type::pointer'
            (CallExpr 0x92be428 <col:24, col:47> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x92be3d8 <col:24, col:30> '<dependent type>' lvalue
                (CXXThisExpr 0x92be3c8 <col:24> 'vector<_Tp, _Alloc> *' this))
              (DeclRefExpr 0x92be40c <col:42> 'const size_type':'const unsigned int' lvalue Var 0x92be120 '__len' 'const size_type':'const unsigned int')))")
      (DeclStmt 0x92be4f0 <line:328:4, col:37>
        0x92be480 "pointer __new_finish =
          (ParenListExpr 0x92be4d0 <col:24, col:36> 'pointer':'typename _Tp_alloc_type::pointer'
            (DeclRefExpr 0x92be4b4 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
      (IfStmt 0x92beb38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:354:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92be500 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
        (CompoundStmt 0x92beb10 </usr/include/c++/4.6/bits/vector.tcc:330:6, line:354:6>
          (CallExpr 0x92be650 <line:335:8, line:339:35> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92be558 <line:335:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92be520 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92be510 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92be610 <col:32, col:46> '<dependent type>'
              (UnresolvedLookupExpr 0x92be5c0 <col:44, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
              (DeclRefExpr 0x92be58c <col:32> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x92be5a4 <col:46> 'const size_type':'const unsigned int' lvalue Var 0x92be250 '__elems_before' 'const size_type':'const unsigned int'))
            (DeclRefExpr 0x92be634 <line:339:32> 'const _Tp' lvalue ParmVar 0x92bd780 '__x' 'const _Tp &'))
          (BinaryOperator 0x92be6a8 <line:341:8, col:23> '<dependent type>' '='
            (DeclRefExpr 0x92be674 <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (IntegerLiteral 0x92be690 <col:23> 'int' 0))
          (BinaryOperator 0x92be8b8 <line:343:8, line:346:31> '<dependent type>' '='
            (DeclRefExpr 0x92be6c0 <line:343:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x92be888 <line:344:3, line:346:31> '<dependent type>'
              (UnresolvedLookupExpr 0x92be6f0 <line:344:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
              (CXXDependentScopeMemberExpr 0x92be770 <col:31, col:45> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92be738 <col:31, col:37> '<dependent type>' lvalue
                  (CXXThisExpr 0x92be728 <col:31> 'vector<_Tp, _Alloc> *' this)))
              (CallExpr 0x92be7f8 <line:345:10, col:26> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92be7c0 <col:10, col:21> '<dependent type>' lvalue
                  (DeclRefExpr 0x92be7a4 <col:10> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bd710 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (DeclRefExpr 0x92be814 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x92be868 <line:346:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x92be82c <col:10> '<dependent type>' lvalue))))
          (UnaryOperator 0x92be8e8 <line:347:8, col:10> '<dependent type>' prefix '++'
            (DeclRefExpr 0x92be8d0 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92beaf8 <line:349:8, line:353:31> '<dependent type>' '='
            (DeclRefExpr 0x92be8fc <line:349:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
            (CallExpr 0x92beac8 <line:350:3, line:353:31> '<dependent type>'
              (UnresolvedLookupExpr 0x92be930 <line:350:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
              (CallExpr 0x92be9b8 <col:31, col:47> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92be980 <col:31, col:42> '<dependent type>' lvalue
                  (DeclRefExpr 0x92be964 <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bd710 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
              (CXXDependentScopeMemberExpr 0x92bea20 <line:351:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92be9e8 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x92be9d8 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (DeclRefExpr 0x92bea54 <line:352:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x92beaa8 <line:353:10, col:30> '<dependent type>'
                (UnresolvedMemberExpr 0x92bea6c <col:10> '<dependent type>' lvalue)))))
        <<<NULL>>>)
      (IfStmt 0x92beee0 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:363:6>
        <<<NULL>>>
        (CXXBoolLiteralExpr 0x92beb58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
        (CompoundStmt 0x92beec0 </usr/include/c++/4.6/bits/vector.tcc:356:6, line:363:6>
          (IfStmt 0x92bee00 <line:357:8, line:360:65>
            <<<NULL>>>
            (UnaryOperator 0x92beb80 <line:357:12, col:13> '<dependent type>' prefix '!'
              (DeclRefExpr 0x92beb68 <col:13> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
            (CallExpr 0x92becc0 <line:358:3, col:53> '<dependent type>'
              (CXXDependentScopeMemberExpr 0x92bebe0 <col:3, col:17> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92beba8 <col:3, col:9> '<dependent type>' lvalue
                  (CXXThisExpr 0x92beb98 <col:3> 'vector<_Tp, _Alloc> *' this)))
              (CXXOperatorCallExpr 0x92bec98 <col:25, col:39> '<dependent type>'
                (UnresolvedLookupExpr 0x92bec48 <col:37, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                (DeclRefExpr 0x92bec14 <col:25> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92bec2c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x92be250 '__elems_before' 'const size_type':'const unsigned int')))
            (CallExpr 0x92bedd8 <line:360:3, col:65> '<dependent type>'
              (UnresolvedLookupExpr 0x92bed08 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
              (DeclRefExpr 0x92bed48 <col:17> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x92bed60 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
              (CallExpr 0x92bedb8 <col:44, col:64> '<dependent type>'
                (UnresolvedMemberExpr 0x92bed78 <col:44> '<dependent type>' lvalue))))
          (CallExpr 0x92bee88 <line:361:8, col:40> '<dependent type>'
            (UnresolvedMemberExpr 0x92bee1c <col:8> '<dependent type>' lvalue)
            (DeclRefExpr 0x92bee58 <col:22> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
            (DeclRefExpr 0x92bee70 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x92be120 '__len' 'const size_type':'const unsigned int'))
          (NullStmt 0x92beeb0 <line:362:31>))
        <<<NULL>>>)
      (CallExpr 0x92bf0b8 <line:364:4, line:365:25> '<dependent type>'
        (UnresolvedLookupExpr 0x92bef20 <line:364:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
        (CXXDependentScopeMemberExpr 0x92befa8 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bef70 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x92bef60 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXDependentScopeMemberExpr 0x92bf028 <col:42, col:56> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92beff0 <col:42, col:48> '<dependent type>' lvalue
            (CXXThisExpr 0x92befe0 <col:42> 'vector<_Tp, _Alloc> *' this)))
        (CallExpr 0x92bf098 <line:365:4, col:24> '<dependent type>'
          (UnresolvedMemberExpr 0x92bf05c <col:4> '<dependent type>' lvalue)))
      (CallExpr 0x92bf348 <line:366:4, line:368:28> '<dependent type>'
        (UnresolvedMemberExpr 0x92bf0e0 <line:366:4> '<dependent type>' lvalue)
        (CXXDependentScopeMemberExpr 0x92bf168 <col:18, col:32> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bf130 <col:18, col:24> '<dependent type>' lvalue
            (CXXThisExpr 0x92bf120 <col:18> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92bf320 <line:367:4, line:368:20> '<dependent type>'
          (UnresolvedLookupExpr 0x92bf2e0 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
          (CXXDependentScopeMemberExpr 0x92bf228 <line:367:4, col:18> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bf1f0 <col:4, col:10> '<dependent type>' lvalue
              (CXXThisExpr 0x92bf1a0 <col:4> 'vector<_Tp, _Alloc> *' this)))
          (CXXDependentScopeMemberExpr 0x92bf2a8 <line:368:6, col:20> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92bf270 <col:6, col:12> '<dependent type>' lvalue
              (CXXThisExpr 0x92bf260 <col:6> 'vector<_Tp, _Alloc> *' this)))))
      (BinaryOperator 0x92bf408 <line:369:4, col:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bf3b8 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bf380 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92bf370 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92bf3ec <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x92bf4b8 <line:370:4, col:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bf468 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bf430 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92bf420 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (DeclRefExpr 0x92bf49c <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be480 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
      (BinaryOperator 0x92bf5f8 <line:371:4, col:52> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92bf518 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92bf4e0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92bf4d0 <col:4> 'vector<_Tp, _Alloc> *' this)))
        (CXXOperatorCallExpr 0x92bf5d0 <col:38, col:52> '<dependent type>'
          (UnresolvedLookupExpr 0x92bf580 <col:50, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (DeclRefExpr 0x92bf54c <col:38> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92be390 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
          (DeclRefExpr 0x92bf564 <col:52> 'const size_type':'const unsigned int' lvalue Var 0x92be120 '__len' 'const size_type':'const unsigned int'))))))


    void _M_fill_insert(iterator __position, size_type __n, const value_type &__x) (CompoundStmt 0x92c25b8 </usr/include/c++/4.6/bits/vector.tcc:379:5, line:464:5>
  (IfStmt 0x92c2598 <line:380:7, line:463:2>
    <<<NULL>>>
    (BinaryOperator 0x92bfb10 <line:380:11, col:18> '_Bool' '!='
      (ImplicitCastExpr 0x92bfaf0 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x92bfabc <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x92bfb00 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x92bfad8 <col:18> 'int' 0)))
    (CompoundStmt 0x92c2580 <line:381:2, line:463:2>
      (IfStmt 0x92c2560 <line:382:4, line:462:6>
        <<<NULL>>>
        (BinaryOperator 0x92bfce0 <line:382:8, line:383:34> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x92bfc98 <line:382:8, line:383:29> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x92bfc70 <line:382:18, line:383:20> '<dependent type>'
              (UnresolvedLookupExpr 0x92bfc30 <col:4, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CXXDependentScopeMemberExpr 0x92bfb78 <line:382:18, col:32> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92bfb40 <col:18, col:24> '<dependent type>' lvalue
                  (CXXThisExpr 0x92bfb30 <col:18> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x92bfbf8 <line:383:6, col:20> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92bfbc0 <col:6, col:12> '<dependent type>' lvalue
                  (CXXThisExpr 0x92bfbb0 <col:6> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x92bfcd0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92bfcb4 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int')))
        (CompoundStmt 0x92c0e88 <line:384:6, line:413:6>
          (DeclStmt 0x92bfd50 <line:385:8, col:33>
            0x92bfd00 "value_type __x_copy =
              (DeclRefExpr 0x92bfd34 <col:30> 'const value_type':'const _Tp' lvalue ParmVar 0x92bf9c0 '__x' 'const value_type &')")
          (DeclStmt 0x92bfe98 <line:386:8, col:58>
            0x92bfd70 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x92bfe70 <col:40, col:48> '<dependent type>'
                (UnresolvedLookupExpr 0x92bfe30 <col:46, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                (CallExpr 0x92bfdf8 <col:40, col:44> '<dependent type>'
                  (UnresolvedMemberExpr 0x92bfdb8 <col:40> '<bound member function type>' lvalue))
                (DeclRefExpr 0x92bfe14 <col:48> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x92bff88 <line:387:8, col:53>
            0x92bfeb0 "pointer __old_finish =
              (ParenListExpr 0x92bff68 <col:28, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x92bff30 <col:29, col:43> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92bfef8 <col:29, col:35> '<dependent type>' lvalue
                    (CXXThisExpr 0x92bfee8 <col:29> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x92c0e68 <line:388:8, line:412:3>
            <<<NULL>>>
            (BinaryOperator 0x92bffe8 <line:388:12, col:28> '_Bool' '>'
              (ImplicitCastExpr 0x92bffc8 <col:12> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92bff98 <col:12> 'const size_type':'const unsigned int' lvalue Var 0x92bfd70 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x92bffd8 <col:28> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92bffb0 <col:28> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int')))
            (CompoundStmt 0x92c0758 <line:389:3, line:399:3>
              (CallExpr 0x92c02b8 <line:390:5, line:393:33> '<dependent type>'
                (UnresolvedLookupExpr 0x92c0028 <line:390:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                (CXXOperatorCallExpr 0x92c0138 <col:33, col:59> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c00f8 <col:57, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                  (CXXDependentScopeMemberExpr 0x92c00a8 <col:33, col:47> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c0070 <col:33, col:39> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c0060 <col:33> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x92c00dc <col:59> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                (CXXDependentScopeMemberExpr 0x92c01a8 <line:391:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c0170 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c0160 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x92c0228 <line:392:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c01f0 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c01e0 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x92c0298 <line:393:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c025c <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c0380 <line:394:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c0330 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c02f8 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c02e8 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x92c0364 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
              (CallExpr 0x92c0520 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x92c03c8 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
                (CallExpr 0x92c0450 </usr/include/c++/4.6/bits/vector.tcc:395:29, col:45> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c0418 <col:29, col:40> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c03fc <col:29> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x92c04e0 <line:396:8, col:23> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c04a0 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                  (DeclRefExpr 0x92c046c <col:8> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bfeb0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x92c0484 <col:23> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x92c0504 <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bfeb0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x92c0730 <line:397:5, line:398:16> '<dependent type>'
                (UnresolvedLookupExpr 0x92c0570 <line:397:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
                (CallExpr 0x92c05f8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c05c0 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c05a8 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x92c06f0 <col:34, col:54> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c06a0 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                  (CallExpr 0x92c0668 <col:34, col:50> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92c0630 <col:34, col:45> '<dependent type>' lvalue
                      (DeclRefExpr 0x92c0614 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x92c0684 <col:54> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                (DeclRefExpr 0x92c0714 <line:398:8> 'value_type':'_Tp' lvalue Var 0x92bfd00 '__x_copy' 'value_type':'_Tp')))
            (CompoundStmt 0x92c0e40 <line:401:3, line:412:3>
              (CallExpr 0x92c0938 <line:402:5, line:405:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c07a0 <line:402:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9262420 0x9262d50)
                (CXXDependentScopeMemberExpr 0x92c0820 <col:35, col:49> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c07e8 <col:35, col:41> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c07d8 <col:35> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x92c08a8 <line:403:7, col:13> 'unsigned int' '-'
                  (ImplicitCastExpr 0x92c0888 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c0854 <col:7> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x92c0898 <col:13> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c086c <col:13> 'const size_type':'const unsigned int' lvalue Var 0x92bfd70 '__elems_after' 'const size_type':'const unsigned int')))
                (DeclRefExpr 0x92c08c0 <line:404:7> 'value_type':'_Tp' lvalue Var 0x92bfd00 '__x_copy' 'value_type':'_Tp')
                (CallExpr 0x92c0918 <line:405:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c08d8 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c0a50 <line:406:5, col:38> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c09b0 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c0978 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c0968 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x92c0a38 <col:32, col:38> 'unsigned int' '-'
                  (ImplicitCastExpr 0x92c0a18 <col:32> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c09e4 <col:32> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                  (ImplicitCastExpr 0x92c0a28 <col:38> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c09fc <col:38> 'const size_type':'const unsigned int' lvalue Var 0x92bfd70 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x92c0c30 <line:407:5, line:409:33> '<dependent type>'
                (UnresolvedLookupExpr 0x92c0a98 <line:407:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                (CallExpr 0x92c0b20 <col:33, col:49> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c0ae8 <col:33, col:44> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c0acc <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x92c0b3c <col:52> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bfeb0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x92c0ba0 <line:408:12, col:26> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c0b68 <col:12, col:18> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c0b58 <col:12> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x92c0c10 <line:409:12, col:32> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c0bd4 <col:12> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c0cf8 <line:410:5, col:32> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c0ca8 <col:5, col:19> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c0c70 <col:5, col:11> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c0c60 <col:5> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x92c0cdc <col:32> 'const size_type':'const unsigned int' lvalue Var 0x92bfd70 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x92c0e18 <line:411:5, col:56> '<dependent type>'
                (UnresolvedLookupExpr 0x92c0d40 <col:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e8ab40 0x928df80)
                (CallExpr 0x92c0dc8 <col:15, col:31> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c0d90 <col:15, col:26> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c0d78 <col:15> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x92c0de4 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92bfeb0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92c0dfc <col:48> 'value_type':'_Tp' lvalue Var 0x92bfd00 '__x_copy' 'value_type':'_Tp')))))
        (CompoundStmt 0x92c2520 <line:415:6, line:462:6>
          (DeclStmt 0x92c0f90 <line:416:8, line:417:46>
            0x92c0eb0 "const size_type __len =
              (CallExpr 0x92c0f68 <col:3, col:45> '<dependent type>'
                (MemberExpr 0x92c0ef8 <col:3> '<bound member function type>' ->_M_check_len 0x9271420
                  (CXXThisExpr 0x92c0ee8 <col:3> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x92c0f18 <col:16> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x92c0f30 <col:21> 'const char [23]' lvalue "vector::_M_fill_insert"))")
          (DeclStmt 0x92c10d8 <line:418:8, col:61>
            0x92c0fb0 "const size_type __elems_before =
              (CXXOperatorCallExpr 0x92c10b0 <col:41, col:60> '<dependent type>'
                (UnresolvedLookupExpr 0x92c1070 <col:52, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                (DeclRefExpr 0x92c0fe4 <col:41> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
                (CallExpr 0x92c1050 <col:54, col:60> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c1010 <col:54> '<bound member function type>' lvalue)))")
          (DeclStmt 0x92c11c8 <line:419:8, col:53>
            0x92c10f0 "pointer __new_start =
              (ParenListExpr 0x92c11a8 <col:27, col:52> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x92c1188 <col:28, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c1138 <col:28, col:34> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c1128 <col:28> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x92c116c <col:46> 'const size_type':'const unsigned int' lvalue Var 0x92c0eb0 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x92c1250 <line:420:8, col:41>
            0x92c11e0 "pointer __new_finish =
              (ParenListExpr 0x92c1230 <col:28, col:40> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x92c1214 <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x92c1910 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:441:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x92c1260 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x92c18e8 </usr/include/c++/4.6/bits/vector.tcc:422:3, line:441:3>
              (CallExpr 0x92c1400 <line:424:5, line:426:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c1298 <line:424:5, col:10> '<overloaded function type>' lvalue (no ADL) = '1' 0x9262420 0x9262d50)
                (CXXOperatorCallExpr 0x92c1350 <col:35, col:49> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c1300 <col:47, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                  (DeclRefExpr 0x92c12d0 <col:35> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x92c12e8 <col:49> 'const size_type':'const unsigned int' lvalue Var 0x92c0fb0 '__elems_before' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x92c1374 <line:425:7> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int')
                (DeclRefExpr 0x92c138c <col:12> 'const value_type':'const _Tp' lvalue ParmVar 0x92bf9c0 '__x' 'const value_type &')
                (CallExpr 0x92c13e0 <line:426:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c13a4 <col:7> '<dependent type>' lvalue)))
              (BinaryOperator 0x92c1460 <line:427:5, col:20> '<dependent type>' '='
                (DeclRefExpr 0x92c142c <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (IntegerLiteral 0x92c1448 <col:20> 'int' 0))
              (BinaryOperator 0x92c1670 <line:429:5, line:433:28> '<dependent type>' '='
                (DeclRefExpr 0x92c1478 <line:429:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c1640 <line:430:7, line:433:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c14a8 <line:430:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                  (CXXDependentScopeMemberExpr 0x92c1528 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c14f0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c14e0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x92c15b0 <line:431:7, col:23> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92c1578 <col:7, col:18> '<dependent type>' lvalue
                      (DeclRefExpr 0x92c155c <col:7> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x92c15cc <line:432:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c1620 <line:433:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c15e4 <col:7> '<dependent type>' lvalue))))
              (CompoundAssignOperator 0x92c16b8 <line:434:5, col:21> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (DeclRefExpr 0x92c1688 <col:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92c16a0 <col:21> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
              (BinaryOperator 0x92c18d0 <line:436:5, line:440:28> '<dependent type>' '='
                (DeclRefExpr 0x92c16d8 <line:436:5> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c18a0 <line:437:7, line:440:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c1708 <line:437:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                  (CallExpr 0x92c1790 <col:35, col:51> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92c1758 <col:35, col:46> '<dependent type>' lvalue
                      (DeclRefExpr 0x92c173c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92bf930 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x92c17f8 <line:438:7, col:21> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c17c0 <col:7, col:13> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c17b0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x92c182c <line:439:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c1880 <line:440:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c1844 <col:7> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x92c1e30 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:453:3>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x92c1930 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x92c1e10 </usr/include/c++/4.6/bits/vector.tcc:443:3, line:453:3>
              (IfStmt 0x92c1d50 <line:444:5, line:450:28>
                <<<NULL>>>
                (UnaryOperator 0x92c1958 <line:444:9, col:10> '<dependent type>' prefix '!'
                  (DeclRefExpr 0x92c1940 <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
                (CallExpr 0x92c1c08 <line:445:7, line:447:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c1990 <line:445:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
                  (CXXOperatorCallExpr 0x92c1a50 <col:21, col:35> '<dependent type>'
                    (UnresolvedLookupExpr 0x92c1a00 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                    (DeclRefExpr 0x92c19d0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                    (DeclRefExpr 0x92c19e8 <col:35> 'const size_type':'const unsigned int' lvalue Var 0x92c0fb0 '__elems_before' 'const size_type':'const unsigned int'))
                  (CXXOperatorCallExpr 0x92c1b88 <line:446:7, col:38> '<dependent type>'
                    (UnresolvedLookupExpr 0x92c1b38 <col:36, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                    (CXXOperatorCallExpr 0x92c1af8 <col:7, col:21> '<dependent type>'
                      (UnresolvedLookupExpr 0x92c1aa8 <col:19, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
                      (DeclRefExpr 0x92c1a74 <col:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                      (DeclRefExpr 0x92c1a8c <col:21> 'const size_type':'const unsigned int' lvalue Var 0x92c0fb0 '__elems_before' 'const size_type':'const unsigned int'))
                    (DeclRefExpr 0x92c1b1c <col:38> 'size_type':'unsigned int' lvalue ParmVar 0x92bf970 '__n' 'size_type':'unsigned int'))
                  (CallExpr 0x92c1be8 <line:447:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c1bac <col:7> '<dependent type>' lvalue)))
                (CallExpr 0x92c1d28 <line:449:7, line:450:28> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c1c58 <line:449:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
                  (DeclRefExpr 0x92c1c98 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x92c1cb0 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c1d08 <line:450:7, col:27> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c1cc8 <col:7> '<dependent type>' lvalue))))
              (CallExpr 0x92c1dd8 <line:451:5, col:37> '<dependent type>'
                (UnresolvedMemberExpr 0x92c1d6c <col:5> '<dependent type>' lvalue)
                (DeclRefExpr 0x92c1da8 <col:19> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92c1dc0 <col:32> 'const size_type':'const unsigned int' lvalue Var 0x92c0eb0 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x92c1e00 <line:452:28>))
            <<<NULL>>>)
          (CallExpr 0x92c2008 <line:454:8, line:455:29> '<dependent type>'
            (UnresolvedLookupExpr 0x92c1e70 <line:454:8, col:13> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
            (CXXDependentScopeMemberExpr 0x92c1ef8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c1ec0 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x92c1eb0 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x92c1f78 <col:46, col:60> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c1f40 <col:46, col:52> '<dependent type>' lvalue
                (CXXThisExpr 0x92c1f30 <col:46> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x92c1fe8 <line:455:8, col:28> '<dependent type>'
              (UnresolvedMemberExpr 0x92c1fac <col:8> '<dependent type>' lvalue)))
          (CallExpr 0x92c2258 <line:456:8, line:458:32> '<dependent type>'
            (UnresolvedMemberExpr 0x92c2030 <line:456:8> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x92c20b8 <col:22, col:36> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c2080 <col:22, col:28> '<dependent type>' lvalue
                (CXXThisExpr 0x92c2070 <col:22> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92c2230 <line:457:8, line:458:24> '<dependent type>'
              (UnresolvedLookupExpr 0x92c21f0 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CXXDependentScopeMemberExpr 0x92c2138 <line:457:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c2100 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c20f0 <col:8> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x92c21b8 <line:458:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c2180 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c2170 <col:10> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x92c2318 <line:459:8, col:33> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c22c8 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c2290 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92c2280 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92c22fc <col:33> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92c23c8 <line:460:8, col:34> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c2378 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c2340 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92c2330 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92c23ac <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c11e0 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92c2508 <line:461:8, col:56> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c2428 <col:8, col:22> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c23f0 <col:8, col:14> '<dependent type>' lvalue
                (CXXThisExpr 0x92c23e0 <col:8> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92c24e0 <col:42, col:56> '<dependent type>'
              (UnresolvedLookupExpr 0x92c2490 <col:54, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
              (DeclRefExpr 0x92c245c <col:42> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c10f0 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x92c2474 <col:56> 'const size_type':'const unsigned int' lvalue Var 0x92c0eb0 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))


    template <typename _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, std::input_iterator_tag) (CompoundStmt 0x92c2d90 </usr/include/c++/4.6/bits/vector.tcc:525:7, line:531:7>
  (ForStmt 0x92c2d68 <line:526:2, line:530:4>
    <<<NULL>>>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c2bd0 <line:526:9, col:20> '<dependent type>'
      (UnresolvedLookupExpr 0x92c2b70 <col:17, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92c2b3c <col:9> '_InputIterator' lvalue ParmVar 0x92c2910 '__first' '_InputIterator')
      (DeclRefExpr 0x92c2b54 <col:20> '_InputIterator' lvalue ParmVar 0x92c2950 '__last' '_InputIterator'))
    (UnaryOperator 0x92c2c10 <col:28, col:30> '<dependent type>' prefix '++'
      (DeclRefExpr 0x92c2bf4 <col:30> '_InputIterator' lvalue ParmVar 0x92c2910 '__first' '_InputIterator'))
    (CompoundStmt 0x92c2d50 <line:527:4, line:530:4>
      (BinaryOperator 0x92c2d08 <line:528:6, col:36> '<dependent type>' '='
        (DeclRefExpr 0x92c2c24 <col:6> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c28d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
        (CallExpr 0x92c2ce0 <col:14, col:36> '<dependent type>'
          (UnresolvedMemberExpr 0x92c2c50 <col:14> '<bound member function type>' lvalue)
          (DeclRefExpr 0x92c2c94 <col:21> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c28d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')
          (UnaryOperator 0x92c2cc8 <col:28, col:29> '<dependent type>' prefix '*'
            (DeclRefExpr 0x92c2cac <col:29> '_InputIterator' lvalue ParmVar 0x92c2910 '__first' '_InputIterator'))))
      (UnaryOperator 0x92c2d38 <line:529:6, col:8> '<dependent type>' prefix '++'
        (DeclRefExpr 0x92c2d20 <col:8> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c28d0 '__pos' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))

;
    template <typename _ForwardIterator> void _M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x92c58d0 </usr/include/c++/4.6/bits/vector.tcc:539:7, line:615:7>
  (IfStmt 0x92c58b0 <line:540:2, line:614:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c33b0 <line:540:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92c3350 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92c331c <col:6> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92c3334 <col:17> '_ForwardIterator' lvalue ParmVar 0x92c3130 '__last' '_ForwardIterator'))
    (CompoundStmt 0x92c5898 <line:541:4, line:614:4>
      (DeclStmt 0x92c34c0 <line:542:6, col:58>
        0x92c33e0 "const size_type __n =
          (CallExpr 0x92c3498 <col:28, col:57> '<dependent type>'
            (UnresolvedLookupExpr 0x92c3430 <col:28, col:33> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
            (DeclRefExpr 0x92c3464 <col:42> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x92c347c <col:51> '_ForwardIterator' lvalue ParmVar 0x92c3130 '__last' '_ForwardIterator'))")
      (IfStmt 0x92c5878 <line:543:6, line:613:8>
        <<<NULL>>>
        (BinaryOperator 0x92c3688 <line:543:10, line:544:36> '_Bool' '>='
          (CXXUnresolvedConstructExpr 0x92c3640 <line:543:10, line:544:31> 'size_type':'unsigned int'
            (CXXOperatorCallExpr 0x92c3618 <line:543:20, line:544:22> '<dependent type>'
              (UnresolvedLookupExpr 0x92c35d8 <col:6, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CXXDependentScopeMemberExpr 0x92c3520 <line:543:20, col:34> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c34e8 <col:20, col:26> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c34d8 <col:20> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x92c35a0 <line:544:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c3568 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c3558 <col:8> 'vector<_Tp, _Alloc> *' this)))))
          (ImplicitCastExpr 0x92c3678 <col:36> 'size_type':'unsigned int' <LValueToRValue>
            (DeclRefExpr 0x92c365c <col:36> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int')))
        (CompoundStmt 0x92c46f8 <line:545:8, line:574:8>
          (DeclStmt 0x92c37d8 <line:546:3, col:53>
            0x92c36b0 "const size_type __elems_after =
              (CXXOperatorCallExpr 0x92c37b0 <col:35, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x92c3770 <col:41, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                (CallExpr 0x92c3738 <col:35, col:39> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c36f8 <col:35> '<bound member function type>' lvalue))
                (DeclRefExpr 0x92c3754 <col:43> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >'))")
          (DeclStmt 0x92c38c8 <line:547:3, col:48>
            0x92c37f0 "pointer __old_finish =
              (ParenListExpr 0x92c38a8 <col:23, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CXXDependentScopeMemberExpr 0x92c3870 <col:24, col:38> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c3838 <col:24, col:30> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c3828 <col:24> 'vector<_Tp, _Alloc> *' this))))")
          (IfStmt 0x92c46d8 <line:548:3, line:573:5>
            <<<NULL>>>
            (BinaryOperator 0x92c3928 <line:548:7, col:23> '_Bool' '>'
              (ImplicitCastExpr 0x92c3908 <col:7> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92c38d8 <col:7> 'const size_type':'const unsigned int' lvalue Var 0x92c36b0 '__elems_after' 'const size_type':'const unsigned int'))
              (ImplicitCastExpr 0x92c3918 <col:23> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92c38f0 <col:23> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int')))
            (CompoundStmt 0x92c3f58 <line:549:5, line:558:5>
              (CallExpr 0x92c3bf8 <line:550:7, line:553:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c3968 <line:550:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                (CXXOperatorCallExpr 0x92c3a78 <col:35, col:61> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c3a38 <col:59, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                  (CXXDependentScopeMemberExpr 0x92c39e8 <col:35, col:49> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c39b0 <col:35, col:41> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c39a0 <col:35> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x92c3a1c <col:61> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int'))
                (CXXDependentScopeMemberExpr 0x92c3ae8 <line:551:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c3ab0 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c3aa0 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CXXDependentScopeMemberExpr 0x92c3b68 <line:552:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c3b30 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c3b20 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x92c3bd8 <line:553:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c3b9c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c3cc0 <line:554:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c3c70 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c3c38 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c3c28 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x92c3ca4 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int'))
              (CallExpr 0x92c3e60 </usr/include/c++/4.6/bits/stl_algobase.h:666:48, col:80> '<dependent type>'
                (UnresolvedLookupExpr 0x92c3d08 <col:48, col:53> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
                (CallExpr 0x92c3d90 </usr/include/c++/4.6/bits/vector.tcc:555:31, col:47> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c3d58 <col:31, col:42> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c3d3c <col:31> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (CXXOperatorCallExpr 0x92c3e20 <line:556:10, col:25> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c3de0 <col:23, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
                  (DeclRefExpr 0x92c3dac <col:10> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c37f0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (DeclRefExpr 0x92c3dc4 <col:25> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int'))
                (DeclRefExpr 0x92c3e44 <col:30> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c37f0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
              (CallExpr 0x92c3f30 <line:557:7, col:44> '<dependent type>'
                (UnresolvedLookupExpr 0x92c3eb0 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
                (DeclRefExpr 0x92c3ee8 <col:17> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x92c3f00 <col:26> '_ForwardIterator' lvalue ParmVar 0x92c3130 '__last' '_ForwardIterator')
                (DeclRefExpr 0x92c3f18 <col:34> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
            (CompoundStmt 0x92c46a8 <line:560:5, line:573:5>
              (DeclStmt 0x92c3fd0 <line:561:7, col:39>
                0x92c3f80 "_ForwardIterator __mid =
                  (DeclRefExpr 0x92c3fb4 <col:32> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')")
              (CallExpr 0x92c4070 <line:562:7, col:40> '<dependent type>'
                (UnresolvedLookupExpr 0x92c4008 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e53920)
                (DeclRefExpr 0x92c403c <col:20> '_ForwardIterator' lvalue Var 0x92c3f80 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x92c4054 <col:27> 'const size_type':'const unsigned int' lvalue Var 0x92c36b0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x92c41f8 <line:563:7, line:565:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c40b8 <line:563:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
                (DeclRefExpr 0x92c40f0 <col:35> '_ForwardIterator' lvalue Var 0x92c3f80 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x92c4108 <col:42> '_ForwardIterator' lvalue ParmVar 0x92c3130 '__last' '_ForwardIterator')
                (CXXDependentScopeMemberExpr 0x92c4168 <line:564:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c4130 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c4120 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x92c41d8 <line:565:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c419c <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c4310 <line:566:7, col:40> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c4270 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c4238 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c4228 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (BinaryOperator 0x92c42f8 <col:34, col:40> 'unsigned int' '-'
                  (ImplicitCastExpr 0x92c42d8 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c42a4 <col:34> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int'))
                  (ImplicitCastExpr 0x92c42e8 <col:40> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c42bc <col:40> 'const size_type':'const unsigned int' lvalue Var 0x92c36b0 '__elems_after' 'const size_type':'const unsigned int'))))
              (CallExpr 0x92c44f0 <line:567:7, line:570:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c4358 <line:567:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                (CallExpr 0x92c43e0 <col:35, col:51> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c43a8 <col:35, col:46> '<dependent type>' lvalue
                    (DeclRefExpr 0x92c438c <col:35> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                (DeclRefExpr 0x92c43fc <line:568:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c37f0 '__old_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CXXDependentScopeMemberExpr 0x92c4460 <line:569:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c4428 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c4418 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (CallExpr 0x92c44d0 <line:570:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c4494 <col:7> '<dependent type>' lvalue)))
              (CompoundAssignOperator 0x92c45b8 <line:571:7, col:34> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c4568 <col:7, col:21> '<dependent type>' lvalue
                  (CXXDependentScopeMemberExpr 0x92c4530 <col:7, col:13> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c4520 <col:7> 'vector<_Tp, _Alloc> *' this)))
                (DeclRefExpr 0x92c459c <col:34> 'const size_type':'const unsigned int' lvalue Var 0x92c36b0 '__elems_after' 'const size_type':'const unsigned int'))
              (CallExpr 0x92c4680 <line:572:7, col:43> '<dependent type>'
                (UnresolvedLookupExpr 0x92c4600 <col:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
                (DeclRefExpr 0x92c4638 <col:17> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')
                (DeclRefExpr 0x92c4650 <col:26> '_ForwardIterator' lvalue Var 0x92c3f80 '__mid' '_ForwardIterator')
                (DeclRefExpr 0x92c4668 <col:33> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))))
        (CompoundStmt 0x92c5840 <line:576:8, line:613:8>
          (DeclStmt 0x92c4800 <line:577:3, line:578:49>
            0x92c4720 "const size_type __len =
              (CallExpr 0x92c47d8 <col:5, col:48> '<dependent type>'
                (MemberExpr 0x92c4768 <col:5> '<bound member function type>' ->_M_check_len 0x9271420
                  (CXXThisExpr 0x92c4758 <col:5> 'vector<_Tp, _Alloc> *' this))
                (DeclRefExpr 0x92c4788 <col:18> 'const size_type':'const unsigned int' lvalue Var 0x92c33e0 '__n' 'const size_type':'const unsigned int')
                (StringLiteral 0x92c47a0 <col:23> 'const char [24]' lvalue "vector::_M_range_insert"))")
          (DeclStmt 0x92c48f8 <line:579:3, col:48>
            0x92c4820 "pointer __new_start =
              (ParenListExpr 0x92c48d8 <col:22, col:47> 'pointer':'typename _Tp_alloc_type::pointer'
                (CallExpr 0x92c48b8 <col:23, col:46> '<dependent type>'
                  (CXXDependentScopeMemberExpr 0x92c4868 <col:23, col:29> '<dependent type>' lvalue
                    (CXXThisExpr 0x92c4858 <col:23> 'vector<_Tp, _Alloc> *' this))
                  (DeclRefExpr 0x92c489c <col:41> 'const size_type':'const unsigned int' lvalue Var 0x92c4720 '__len' 'const size_type':'const unsigned int')))")
          (DeclStmt 0x92c4980 <line:580:3, col:36>
            0x92c4910 "pointer __new_finish =
              (ParenListExpr 0x92c4960 <col:23, col:35> 'pointer':'typename _Tp_alloc_type::pointer'
                (DeclRefExpr 0x92c4944 <col:24> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))")
          (IfStmt 0x92c4f38 </usr/include/c++/4.6/bits/exception_defines.h:37:21, /usr/include/c++/4.6/bits/vector.tcc:597:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x92c4990 </usr/include/c++/4.6/bits/exception_defines.h:37:25> '_Bool' true)
            (CompoundStmt 0x92c4f18 </usr/include/c++/4.6/bits/vector.tcc:582:5, line:597:5>
              (BinaryOperator 0x92c4b98 <line:583:7, line:587:30> '<dependent type>' '='
                (DeclRefExpr 0x92c49a0 <line:583:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c4b68 <line:584:9, line:587:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c49d0 <line:584:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                  (CXXDependentScopeMemberExpr 0x92c4a50 <col:37, col:51> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c4a18 <col:37, col:43> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c4a08 <col:37> 'vector<_Tp, _Alloc> *' this)))
                  (CallExpr 0x92c4ad8 <line:585:9, col:25> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92c4aa0 <col:9, col:20> '<dependent type>' lvalue
                      (DeclRefExpr 0x92c4a84 <col:9> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (DeclRefExpr 0x92c4af4 <line:586:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c4b48 <line:587:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c4b0c <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x92c4cf0 <line:588:7, line:591:30> '<dependent type>' '='
                (DeclRefExpr 0x92c4bb0 <line:588:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c4cc0 <line:589:9, line:591:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c4be0 <line:589:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x925ac80 0x925b580)
                  (DeclRefExpr 0x92c4c18 <col:37> '_ForwardIterator' lvalue ParmVar 0x92c30f0 '__first' '_ForwardIterator')
                  (DeclRefExpr 0x92c4c30 <col:46> '_ForwardIterator' lvalue ParmVar 0x92c3130 '__last' '_ForwardIterator')
                  (DeclRefExpr 0x92c4c48 <line:590:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c4ca0 <line:591:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c4c60 <col:9> '<dependent type>' lvalue))))
              (BinaryOperator 0x92c4f00 <line:592:7, line:596:30> '<dependent type>' '='
                (DeclRefExpr 0x92c4d08 <line:592:7> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c4ed0 <line:593:9, line:596:30> '<dependent type>'
                  (UnresolvedLookupExpr 0x92c4d38 <line:593:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x925b990)
                  (CallExpr 0x92c4dc0 <col:37, col:53> '<dependent type>'
                    (CXXDependentScopeMemberExpr 0x92c4d88 <col:37, col:48> '<dependent type>' lvalue
                      (DeclRefExpr 0x92c4d6c <col:37> 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >' lvalue ParmVar 0x92c30b0 '__position' 'iterator':'__normal_iterator<pointer, vector<_Tp, _Alloc> >')))
                  (CXXDependentScopeMemberExpr 0x92c4e28 <line:594:9, col:23> '<dependent type>' lvalue
                    (CXXDependentScopeMemberExpr 0x92c4df0 <col:9, col:15> '<dependent type>' lvalue
                      (CXXThisExpr 0x92c4de0 <col:9> 'vector<_Tp, _Alloc> *' this)))
                  (DeclRefExpr 0x92c4e5c <line:595:9> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                  (CallExpr 0x92c4eb0 <line:596:9, col:29> '<dependent type>'
                    (UnresolvedMemberExpr 0x92c4e74 <col:9> '<dependent type>' lvalue)))))
            <<<NULL>>>)
          (IfStmt 0x92c5150 </usr/include/c++/4.6/bits/exception_defines.h:38:21, /usr/include/c++/4.6/bits/vector.tcc:604:5>
            <<<NULL>>>
            (CXXBoolLiteralExpr 0x92c4f58 </usr/include/c++/4.6/bits/exception_defines.h:38:25> '_Bool' false)
            (CompoundStmt 0x92c5130 </usr/include/c++/4.6/bits/vector.tcc:599:5, line:604:5>
              (CallExpr 0x92c5060 <line:600:7, line:601:28> '<dependent type>'
                (UnresolvedLookupExpr 0x92c4f90 <line:600:7, col:12> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
                (DeclRefExpr 0x92c4fd0 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92c4fe8 <col:34> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer')
                (CallExpr 0x92c5040 <line:601:7, col:27> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c5000 <col:7> '<dependent type>' lvalue)))
              (CallExpr 0x92c50f8 <line:602:7, col:39> '<dependent type>'
                (UnresolvedMemberExpr 0x92c5088 <col:7> '<dependent type>' lvalue)
                (DeclRefExpr 0x92c50c4 <col:21> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
                (DeclRefExpr 0x92c50dc <col:34> 'const size_type':'const unsigned int' lvalue Var 0x92c4720 '__len' 'const size_type':'const unsigned int'))
              (NullStmt 0x92c5120 <line:603:30>))
            <<<NULL>>>)
          (CallExpr 0x92c5328 <line:605:3, line:606:31> '<dependent type>'
            (UnresolvedLookupExpr 0x92c5190 <line:605:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x9254d30 0x92559f0 0x9256090 0x9256640)
            (CXXDependentScopeMemberExpr 0x92c5218 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c51e0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x92c51d0 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXDependentScopeMemberExpr 0x92c5298 <col:41, col:55> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c5260 <col:41, col:47> '<dependent type>' lvalue
                (CXXThisExpr 0x92c5250 <col:41> 'vector<_Tp, _Alloc> *' this)))
            (CallExpr 0x92c5308 <line:606:10, col:30> '<dependent type>'
              (UnresolvedMemberExpr 0x92c52cc <col:10> '<dependent type>' lvalue)))
          (CallExpr 0x92c5578 <line:607:3, line:609:34> '<dependent type>'
            (UnresolvedMemberExpr 0x92c5350 <line:607:3> '<dependent type>' lvalue)
            (CXXDependentScopeMemberExpr 0x92c53d8 <col:17, col:31> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c53a0 <col:17, col:23> '<dependent type>' lvalue
                (CXXThisExpr 0x92c5390 <col:17> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92c5550 <line:608:10, line:609:26> '<dependent type>'
              (UnresolvedLookupExpr 0x92c5510 <col:10, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
              (CXXDependentScopeMemberExpr 0x92c5458 <line:608:10, col:24> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c5420 <col:10, col:16> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c5410 <col:10> 'vector<_Tp, _Alloc> *' this)))
              (CXXDependentScopeMemberExpr 0x92c54d8 <line:609:12, col:26> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c54a0 <col:12, col:18> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c5490 <col:12> 'vector<_Tp, _Alloc> *' this)))))
          (BinaryOperator 0x92c5638 <line:610:3, col:28> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c55e8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c55b0 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c55a0 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92c561c <col:28> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92c56e8 <line:611:3, col:29> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c5698 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c5660 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c5650 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (DeclRefExpr 0x92c56cc <col:29> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4910 '__new_finish' 'pointer':'typename _Tp_alloc_type::pointer'))
          (BinaryOperator 0x92c5828 <line:612:3, col:51> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c5748 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c5710 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c5700 <col:3> 'vector<_Tp, _Alloc> *' this)))
            (CXXOperatorCallExpr 0x92c5800 <col:37, col:51> '<dependent type>'
              (UnresolvedLookupExpr 0x92c57b0 <col:49, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
              (DeclRefExpr 0x92c577c <col:37> 'pointer':'typename _Tp_alloc_type::pointer' lvalue Var 0x92c4820 '__new_start' 'pointer':'typename _Tp_alloc_type::pointer')
              (DeclRefExpr 0x92c5794 <col:51> 'const size_type':'const unsigned int' lvalue Var 0x92c4720 '__len' 'const size_type':'const unsigned int'))))))
    <<<NULL>>>))

;
    void reserve(size_type __n) (CompoundStmt 0x92c6670 </usr/include/c++/4.6/bits/vector.tcc:624:5, line:637:5>
  (IfStmt 0x92c5df0 <line:625:7, line:626:45>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c5cf8 <line:625:11, col:32> '<dependent type>'
      (UnresolvedLookupExpr 0x92c5ca8 <col:15, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45380 0x8e5b6d0 0x8e5de40 0x8ff8490 0x8ff89c0 0x8ff8ef0 0x9282cf0)
      (DeclRefExpr 0x92c5c24 <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92c5b40 '__n' 'size_type':'unsigned int')
      (CallExpr 0x92c5c88 <col:17, col:32> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92c5c50 <col:17, col:23> '<dependent type>' lvalue
          (CXXThisExpr 0x92c5c40 <col:17> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CallExpr 0x92c5dc0 <line:626:2, col:45> 'void'
      (ImplicitCastExpr 0x92c5db0 <col:2> 'void (*)(const char *) __attribute__((noreturn))' <FunctionToPointerDecay>
        (DeclRefExpr 0x92c5d94 <col:2> 'void (const char *) __attribute__((noreturn))' lvalue Function 0x8e12430 '__throw_length_error' 'void (const char *) __attribute__((noreturn))'))
      (ImplicitCastExpr 0x92c5de0 </usr/include/c++/4.6//i686-linux-gnu/bits/c++config.h:426:24, col:30> 'const char *' <ArrayToPointerDecay>
        (ParenExpr 0x92c5d80 <col:24, col:30> 'const char [16]' lvalue
          (StringLiteral 0x92c5d54 </usr/include/c++/4.6/bits/vector.tcc:626:27> 'const char [16]' lvalue "vector::reserve"))))
    <<<NULL>>>)
  (IfStmt 0x92c6650 <line:627:7, line:636:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c5ee0 <line:627:11, col:30> '<dependent type>'
      (UnresolvedLookupExpr 0x92c5e90 <col:28, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43200 0x8e59d50 0x8e5d4c0 0x8ff73c0 0x8ff78f0 0x8ff7e20 0x92820b0)
      (CallExpr 0x92c5e58 <col:11, col:26> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92c5e20 <col:11, col:17> '<dependent type>' lvalue
          (CXXThisExpr 0x92c5e10 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
      (DeclRefExpr 0x92c5e74 <col:30> 'size_type':'unsigned int' lvalue ParmVar 0x92c5b40 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x92c6628 <line:628:2, line:636:2>
      (DeclStmt 0x92c5fd8 <line:629:4, col:43>
        0x92c5f20 "_Bit_type *__q =
          (CallExpr 0x92c5fb8 <col:21, col:42> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92c5f68 <col:21, col:27> '<dependent type>' lvalue
              (CXXThisExpr 0x92c5f58 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x92c5f9c <col:39> 'size_type':'unsigned int' lvalue ParmVar 0x92c5b40 '__n' 'size_type':'unsigned int'))")
      (BinaryOperator 0x92c6228 <line:630:4, line:631:27> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c6030 <line:630:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c5ff8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c5fe8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92c6200 <col:30, line:631:27> '<dependent type>'
          (MemberExpr 0x92c6078 <line:630:30> '<bound member function type>' ->_M_copy_aligned 0x92942f0
            (CXXThisExpr 0x92c6068 <col:30> 'vector<_Bool, type-parameter-0-0> *' this))
          (CallExpr 0x92c60e8 <col:46, col:52> '<dependent type>'
            (UnresolvedMemberExpr 0x92c60a8 <col:46> '<bound member function type>' lvalue))
          (CallExpr 0x92c6158 <col:55, col:59> '<dependent type>'
            (UnresolvedMemberExpr 0x92c6118 <col:55> '<bound member function type>' lvalue))
          (CXXTemporaryObjectExpr 0x92c61d0 <line:631:11, col:26> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
            (ImplicitCastExpr 0x92c61b0 <col:20> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x92c6180 <col:20> '_Bit_type *' lvalue Var 0x92c5f20 '__q' '_Bit_type *'))
            (ImplicitCastExpr 0x92c61c0 <col:25> 'unsigned int' <IntegralCast>
              (IntegerLiteral 0x92c6198 <col:25> 'int' 0)))))
      (CallExpr 0x92c6288 <line:632:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92c6250 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x92c6240 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x92c63b0 <line:633:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c62f0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c62b8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c62a8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x92c6380 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x92c6360 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x92c6330 <col:38> '_Bit_type *' lvalue Var 0x92c5f20 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x92c6370 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92c6348 <col:43> 'int' 0))))
      (BinaryOperator 0x92c6610 <line:634:4, line:635:29> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c6410 <line:634:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c63d8 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c63c8 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x92c65f8 <col:38, line:635:29> '_Bit_type *'
          (BinaryOperator 0x92c65e0 <line:634:39, line:635:28> '_Bit_type *' '+'
            (ImplicitCastExpr 0x92c65d0 <line:634:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x92c6444 <col:39> '_Bit_type *' lvalue Var 0x92c5f20 '__q' '_Bit_type *'))
            (BinaryOperator 0x92c65b8 <col:45, line:635:28> 'unsigned int' '/'
              (ParenExpr 0x92c6540 <line:634:45, col:72> 'unsigned int'
                (BinaryOperator 0x92c6528 <col:46, col:71> 'unsigned int' '-'
                  (BinaryOperator 0x92c64e8 <col:46, col:67> 'unsigned int' '+'
                    (ImplicitCastExpr 0x92c64c8 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x92c645c <col:46> 'size_type':'unsigned int' lvalue ParmVar 0x92c5b40 '__n' 'size_type':'unsigned int'))
                    (ImplicitCastExpr 0x92c64d8 <col:52, col:67> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x92c64b0 <col:52, col:67> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x92c64a0 <col:56> 'int' <IntegralCast>
                          (DeclRefExpr 0x92c6484 <col:56> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                  (ImplicitCastExpr 0x92c6518 <col:71> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x92c6500 <col:71> 'int' 1))))
              (ImplicitCastExpr 0x92c65a8 <line:635:13, col:28> 'unsigned int' <IntegralCast>
                (CXXFunctionalCastExpr 0x92c6590 <col:13, col:28> 'int' functional cast to int <NoOp>
                  (ImplicitCastExpr 0x92c6580 <col:17> 'int' <IntegralCast>
                    (DeclRefExpr 0x92c6564 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
    <<<NULL>>>))


    void _M_fill_insert(iterator __position, size_type __n, bool __x) (CompoundStmt 0x92c81d8 </usr/include/c++/4.6/bits/vector.tcc:643:5, line:669:5>
  (IfStmt 0x92c6ad8 <line:644:7, line:645:2>
    <<<NULL>>>
    (BinaryOperator 0x92c6ab0 <line:644:11, col:18> '_Bool' '=='
      (ImplicitCastExpr 0x92c6a90 <col:11> 'size_type':'unsigned int' <LValueToRValue>
        (DeclRefExpr 0x92c6a5c <col:11> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))
      (ImplicitCastExpr 0x92c6aa0 <col:18> 'unsigned int' <IntegralCast>
        (IntegerLiteral 0x92c6a78 <col:18> 'int' 0)))
    (ReturnStmt 0x92c6ac8 <line:645:2>)
    <<<NULL>>>)
  (IfStmt 0x92c81b8 <line:646:7, line:668:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c6c68 <line:646:11, col:34> '<dependent type>'
      (UnresolvedLookupExpr 0x92c6c18 <col:31, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0 0x9283780)
      (CXXOperatorCallExpr 0x92c6bd8 <col:11, col:29> '<dependent type>'
        (UnresolvedLookupExpr 0x92c6b98 <col:22, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
        (CallExpr 0x92c6b28 <col:11, col:20> '<dependent type>'
          (MemberExpr 0x92c6b08 <col:11> '<bound member function type>' ->capacity 0x9292980
            (CXXThisExpr 0x92c6af8 <col:11> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92c6b78 <col:24, col:29> '<dependent type>'
          (MemberExpr 0x92c6b58 <col:24> '<bound member function type>' ->size 0x9292880
            (CXXThisExpr 0x92c6b48 <col:24> 'vector<_Bool, type-parameter-0-0> *' this))))
      (DeclRefExpr 0x92c6bfc <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))
    (CompoundStmt 0x92c74e8 <line:647:2, line:652:2>
      (CallExpr 0x92c6ec0 <line:648:4, line:649:55> '<dependent type>'
        (UnresolvedLookupExpr 0x92c6cb0 <line:648:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
        (DeclRefExpr 0x92c6ce4 <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c68e0 '__position' 'iterator':'struct std::_Bit_iterator')
        (CallExpr 0x92c6d50 <col:35, col:39> '<dependent type>'
          (UnresolvedMemberExpr 0x92c6d10 <col:35> '<bound member function type>' lvalue))
        (CXXOperatorCallExpr 0x92c6e98 <line:649:9, col:54> '<dependent type>'
          (UnresolvedLookupExpr 0x92c6e48 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CXXDependentScopeMemberExpr 0x92c6db8 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92c6d80 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x92c6d70 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (CXXFunctionalCastExpr 0x92c6e30 <col:35, col:54> 'difference_type':'int' functional cast to difference_type <NoOp>
            (ImplicitCastExpr 0x92c6e20 <col:51> 'difference_type':'int' <IntegralCast>
              (ImplicitCastExpr 0x92c6e10 <col:51> 'size_type':'unsigned int' <LValueToRValue>
                (DeclRefExpr 0x92c6df8 <col:51> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))))))
      (CallExpr 0x92c7338 <line:650:4, col:64> 'void'
        (ImplicitCastExpr 0x92c7328 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92c72e8 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x928df80 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x92c7370 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x92c7360 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x92c6f48 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c68e0 '__position' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x92c73b8 <col:26, col:58> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x92c73a8 <col:26, col:58> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x92c7398 <col:26, col:58> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x92c7008 <col:26, col:58> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x92c6ff8 <col:37, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92c6fe0 <col:37, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x92c6fd0 <col:26> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x92c6f60 <col:26> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c68e0 '__position' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x92c6fb8 <col:39, col:58> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x92c6fa8 <col:55> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x92c6f98 <col:55> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x92c6f80 <col:55> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x92c73e0 <col:61> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x92c702c <col:61> '_Bool' lvalue ParmVar 0x92c6960 '__x' '_Bool')))
      (CompoundAssignOperator 0x92c74c8 <line:651:4, col:50> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
        (CXXDependentScopeMemberExpr 0x92c7438 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c7400 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c73f0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXFunctionalCastExpr 0x92c74b0 <col:31, col:50> 'difference_type':'int' functional cast to difference_type <NoOp>
          (ImplicitCastExpr 0x92c74a0 <col:47> 'difference_type':'int' <IntegralCast>
            (ImplicitCastExpr 0x92c7490 <col:47> 'size_type':'unsigned int' <LValueToRValue>
              (DeclRefExpr 0x92c7478 <col:47> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))))))
    (CompoundStmt 0x92c8188 <line:654:2, line:668:2>
      (DeclStmt 0x92c75f0 <line:655:4, line:656:55>
        0x92c7510 "const size_type __len =
          (CallExpr 0x92c75c8 <col:6, col:54> '<dependent type>'
            (MemberExpr 0x92c7558 <col:6> '<bound member function type>' ->_M_check_len 0x92964b0
              (CXXThisExpr 0x92c7548 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x92c7578 <col:19> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int')
            (StringLiteral 0x92c7590 <col:24> 'const char [29]' lvalue "vector<bool>::_M_fill_insert"))")
      (DeclStmt 0x92c76c8 <line:657:4, col:46>
        0x92c7610 "_Bit_type *__q =
          (CallExpr 0x92c76a8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92c7658 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x92c7648 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x92c768c <col:40> 'const size_type':'const unsigned int' lvalue Var 0x92c7510 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x92c7880 <line:658:4, line:659:24>
        0x92c76e0 "iterator __i =
          (CallExpr 0x92c7858 <line:658:19, line:659:23> '<dependent type>'
            (MemberExpr 0x92c7728 <line:658:19> '<bound member function type>' ->_M_copy_aligned 0x92942f0
              (CXXThisExpr 0x92c7718 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x92c7798 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x92c7758 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x92c77b4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c68e0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x92c7828 <line:659:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x92c7808 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x92c77d8 <col:16> '_Bit_type *' lvalue Var 0x92c7610 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x92c7818 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92c77f0 <col:21> 'int' 0))))")
      (CallExpr 0x92c7a68 <line:660:4, col:50> 'void'
        (ImplicitCastExpr 0x92c7a58 <col:4, col:9> 'void (*)(struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92c7a38 <col:4, col:9> 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)' lvalue Function 0x928df80 'fill' 'void (struct std::_Bit_iterator, struct std::_Bit_iterator, const _Bool &)'))
        (CXXConstructExpr 0x92c7aa0 <col:14> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()'
          (ImplicitCastExpr 0x92c7a90 <col:14> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x92c78f0 <col:14> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c76e0 '__i' 'iterator':'struct std::_Bit_iterator')))
        (CXXConstructExpr 0x92c7ae8 <col:19, col:44> 'struct std::_Bit_iterator''void (const struct std::_Bit_iterator &) throw()' elidable
          (MaterializeTemporaryExpr 0x92c7ad8 <col:19, col:44> 'const struct std::_Bit_iterator' lvalue
            (ImplicitCastExpr 0x92c7ac8 <col:19, col:44> 'const struct std::_Bit_iterator' <NoOp>
              (CXXOperatorCallExpr 0x92c79b0 <col:19, col:44> 'iterator':'struct std::_Bit_iterator'
                (ImplicitCastExpr 0x92c79a0 <col:23, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92c7988 <col:23, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
                (ImplicitCastExpr 0x92c7978 <col:19> 'const struct std::_Bit_iterator' lvalue <NoOp>
                  (DeclRefExpr 0x92c7908 <col:19> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c76e0 '__i' 'iterator':'struct std::_Bit_iterator'))
                (CXXFunctionalCastExpr 0x92c7960 <col:25, col:44> 'difference_type':'int' functional cast to difference_type <NoOp>
                  (ImplicitCastExpr 0x92c7950 <col:41> 'difference_type':'int' <IntegralCast>
                    (ImplicitCastExpr 0x92c7940 <col:41> 'size_type':'unsigned int' <LValueToRValue>
                      (DeclRefExpr 0x92c7928 <col:41> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int'))))))))
        (ImplicitCastExpr 0x92c7b10 <col:47> 'const _Bool' lvalue <NoOp>
          (DeclRefExpr 0x92c79d4 <col:47> '_Bool' lvalue ParmVar 0x92c6960 '__x' '_Bool')))
      (BinaryOperator 0x92c7d70 <line:661:4, line:662:38> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c7b68 <line:661:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c7b30 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c7b20 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92c7d48 <col:30, line:662:38> '<dependent type>'
          (UnresolvedLookupExpr 0x92c7bb8 <line:661:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
          (DeclRefExpr 0x92c7bf0 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c68e0 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x92c7c58 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x92c7c18 <col:52> '<bound member function type>' lvalue))
          (CXXOperatorCallExpr 0x92c7d20 <line:662:12, col:37> 'iterator':'struct std::_Bit_iterator'
            (ImplicitCastExpr 0x92c7d10 <col:16, <invalid sloc>> 'iterator (*)(difference_type) const' <FunctionToPointerDecay>
              (DeclRefExpr 0x92c7cf8 <col:16, <invalid sloc>> 'iterator (difference_type) const' lvalue CXXMethod 0x9289ff0 'operator+' 'iterator (difference_type) const'))
            (ImplicitCastExpr 0x92c7ce8 <col:12> 'const struct std::_Bit_iterator' lvalue <NoOp>
              (DeclRefExpr 0x92c7c74 <col:12> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c76e0 '__i' 'iterator':'struct std::_Bit_iterator'))
            (CXXFunctionalCastExpr 0x92c7cd0 <col:18, col:37> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x92c7cc0 <col:34> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x92c7cb0 <col:34> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x92c7c98 <col:34> 'size_type':'unsigned int' lvalue ParmVar 0x92c6920 '__n' 'size_type':'unsigned int')))))))
      (CallExpr 0x92c7dd0 <line:663:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92c7d98 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x92c7d88 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x92c8050 <line:664:4, line:666:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c7e38 <line:664:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c7e00 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c7df0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x92c8038 <col:38, line:666:30> '_Bit_type *'
          (BinaryOperator 0x92c8020 <line:664:39, line:666:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x92c8010 <line:664:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x92c7e6c <col:39> '_Bit_type *' lvalue Var 0x92c7610 '__q' '_Bit_type *'))
            (ParenExpr 0x92c7ff8 <col:45, line:666:29> 'unsigned int'
              (BinaryOperator 0x92c7fe0 <line:664:46, line:666:28> 'unsigned int' '/'
                (ParenExpr 0x92c7f68 <line:664:46, line:665:34> 'unsigned int'
                  (BinaryOperator 0x92c7f50 <line:664:47, line:665:33> 'unsigned int' '-'
                    (BinaryOperator 0x92c7f10 <line:664:47, line:665:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x92c7ef0 <line:664:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x92c7e84 <col:47> 'const size_type':'const unsigned int' lvalue Var 0x92c7510 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x92c7f00 <line:665:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x92c7ed8 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x92c7ec8 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x92c7eac <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x92c7f40 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x92c7f28 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x92c7fd0 <line:666:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x92c7fb8 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x92c7fa8 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x92c7f8c <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x92c8170 <line:667:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92c80b0 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c8078 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92c8068 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x92c8140 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x92c8120 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x92c80f0 <col:38> '_Bit_type *' lvalue Var 0x92c7610 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x92c8130 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92c8108 <col:43> 'int' 0)))))))


    template <typename _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, std::forward_iterator_tag) (CompoundStmt 0x92c9998 </usr/include/c++/4.6/bits/vector.tcc:677:7, line:706:7>
  (IfStmt 0x92c9978 <line:678:2, line:705:4>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c87a0 <line:678:6, col:17> '<dependent type>'
      (UnresolvedLookupExpr 0x92c8740 <col:14, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (DeclRefExpr 0x92c870c <col:6> '_ForwardIterator' lvalue ParmVar 0x92c84e0 '__first' '_ForwardIterator')
      (DeclRefExpr 0x92c8724 <col:17> '_ForwardIterator' lvalue ParmVar 0x92c8520 '__last' '_ForwardIterator'))
    (CompoundStmt 0x92c9960 <line:679:4, line:705:4>
      (DeclStmt 0x92c88b0 <line:680:6, col:52>
        0x92c87d0 "size_type __n =
          (CallExpr 0x92c8888 <col:22, col:51> '<dependent type>'
            (UnresolvedLookupExpr 0x92c8820 <col:22, col:27> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e521d0)
            (DeclRefExpr 0x92c8854 <col:36> '_ForwardIterator' lvalue ParmVar 0x92c84e0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x92c886c <col:45> '_ForwardIterator' lvalue ParmVar 0x92c8520 '__last' '_ForwardIterator'))")
      (IfStmt 0x92c9940 <line:681:6, line:704:8>
        <<<NULL>>>
        (CXXOperatorCallExpr 0x92c8a30 <line:681:10, col:33> '<dependent type>'
          (UnresolvedLookupExpr 0x92c89e0 <col:30, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e45df0 0x8e5bee0 0x8e5ed40 0x8ffa650 0x8ffab80 0x8ffb0b0 0x9283780)
          (CXXOperatorCallExpr 0x92c89a0 <col:10, col:28> '<dependent type>'
            (UnresolvedLookupExpr 0x92c8960 <col:21, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c440 0x8e5f2c0 0x92892b0)
            (CallExpr 0x92c88f0 <col:10, col:19> '<dependent type>'
              (MemberExpr 0x92c88d0 <col:10> '<bound member function type>' ->capacity 0x9292980
                (CXXThisExpr 0x92c88c0 <col:10> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x92c8940 <col:23, col:28> '<dependent type>'
              (MemberExpr 0x92c8920 <col:23> '<bound member function type>' ->size 0x9292880
                (CXXThisExpr 0x92c8910 <col:23> 'vector<_Bool, type-parameter-0-0> *' this))))
          (DeclRefExpr 0x92c89c4 <col:33> 'size_type':'unsigned int' lvalue Var 0x92c87d0 '__n' 'size_type':'unsigned int'))
        (CompoundStmt 0x92c8e78 <line:682:8, line:688:8>
          (CallExpr 0x92c8c88 <line:683:3, line:685:30> '<dependent type>'
            (UnresolvedLookupExpr 0x92c8a78 <line:683:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
            (DeclRefExpr 0x92c8aac <col:22> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c84a0 '__position' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x92c8b18 <col:34, col:38> '<dependent type>'
              (UnresolvedMemberExpr 0x92c8ad8 <col:34> '<bound member function type>' lvalue))
            (CXXOperatorCallExpr 0x92c8c60 <line:684:8, line:685:29> '<dependent type>'
              (UnresolvedLookupExpr 0x92c8c10 <col:8, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
              (CXXDependentScopeMemberExpr 0x92c8b80 <line:684:8, col:22> '<dependent type>' lvalue
                (CXXDependentScopeMemberExpr 0x92c8b48 <col:8, col:14> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c8b38 <col:8> 'vector<_Bool, type-parameter-0-0> *' this)))
              (CXXFunctionalCastExpr 0x92c8bf8 <line:685:10, col:29> 'difference_type':'int' functional cast to difference_type <NoOp>
                (ImplicitCastExpr 0x92c8be8 <col:26> 'difference_type':'int' <IntegralCast>
                  (ImplicitCastExpr 0x92c8bd8 <col:26> 'size_type':'unsigned int' <LValueToRValue>
                    (DeclRefExpr 0x92c8bc0 <col:26> 'size_type':'unsigned int' lvalue Var 0x92c87d0 '__n' 'size_type':'unsigned int'))))))
          (CallExpr 0x92c8d58 <line:686:3, col:40> '<dependent type>'
            (UnresolvedLookupExpr 0x92c8cd8 <col:3, col:8> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
            (DeclRefExpr 0x92c8d10 <col:13> '_ForwardIterator' lvalue ParmVar 0x92c84e0 '__first' '_ForwardIterator')
            (DeclRefExpr 0x92c8d28 <col:22> '_ForwardIterator' lvalue ParmVar 0x92c8520 '__last' '_ForwardIterator')
            (DeclRefExpr 0x92c8d40 <col:30> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c84a0 '__position' 'iterator':'struct std::_Bit_iterator'))
          (CompoundAssignOperator 0x92c8e58 <line:687:3, col:49> '<dependent type>' lvalue '+=' ComputeLHSTy='<dependent type>' ComputeResultTy='<dependent type>'
            (CXXDependentScopeMemberExpr 0x92c8dc8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c8d90 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c8d80 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXFunctionalCastExpr 0x92c8e40 <col:30, col:49> 'difference_type':'int' functional cast to difference_type <NoOp>
              (ImplicitCastExpr 0x92c8e30 <col:46> 'difference_type':'int' <IntegralCast>
                (ImplicitCastExpr 0x92c8e20 <col:46> 'size_type':'unsigned int' <LValueToRValue>
                  (DeclRefExpr 0x92c8e08 <col:46> 'size_type':'unsigned int' lvalue Var 0x92c87d0 '__n' 'size_type':'unsigned int'))))))
        (CompoundStmt 0x92c9910 <line:690:8, line:704:8>
          (DeclStmt 0x92c8fc8 <line:691:3, line:692:55>
            0x92c8ea0 "const size_type __len =
              (CallExpr 0x92c8fa0 <col:5, col:54> '<dependent type>'
                (MemberExpr 0x92c8ee8 <col:5> '<bound member function type>' ->_M_check_len 0x92964b0
                  (CXXThisExpr 0x92c8ed8 <col:5> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x92c8f08 <col:18> 'size_type':'unsigned int' lvalue Var 0x92c87d0 '__n' 'size_type':'unsigned int')
                (StringLiteral 0x92c8f60 <col:23> 'const char [30]' lvalue "vector<bool>::_M_insert_range"))")
          (DeclStmt 0x92c90a8 <line:693:3, col:45>
            0x92c8ff0 "_Bit_type *__q =
              (CallExpr 0x92c9088 <col:21, col:44> '<dependent type>'
                (CXXDependentScopeMemberExpr 0x92c9038 <col:21, col:27> '<dependent type>' lvalue
                  (CXXThisExpr 0x92c9028 <col:21> 'vector<_Bool, type-parameter-0-0> *' this))
                (DeclRefExpr 0x92c906c <col:39> 'const size_type':'const unsigned int' lvalue Var 0x92c8ea0 '__len' 'const size_type':'const unsigned int'))")
          (DeclStmt 0x92c9260 <line:694:3, line:695:30>
            0x92c90c0 "iterator __i =
              (CallExpr 0x92c9238 <line:694:18, line:695:29> '<dependent type>'
                (MemberExpr 0x92c9108 <line:694:18> '<bound member function type>' ->_M_copy_aligned 0x92942f0
                  (CXXThisExpr 0x92c90f8 <col:18> 'vector<_Bool, type-parameter-0-0> *' this))
                (CallExpr 0x92c9178 <col:34, col:40> '<dependent type>'
                  (UnresolvedMemberExpr 0x92c9138 <col:34> '<bound member function type>' lvalue))
                (DeclRefExpr 0x92c9194 <col:43> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c84a0 '__position' 'iterator':'struct std::_Bit_iterator')
                (CXXTemporaryObjectExpr 0x92c9208 <line:695:13, col:28> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
                  (ImplicitCastExpr 0x92c91e8 <col:22> '_Bit_type *' <LValueToRValue>
                    (DeclRefExpr 0x92c91b8 <col:22> '_Bit_type *' lvalue Var 0x92c8ff0 '__q' '_Bit_type *'))
                  (ImplicitCastExpr 0x92c91f8 <col:27> 'unsigned int' <IntegralCast>
                    (IntegerLiteral 0x92c91d0 <col:27> 'int' 0))))")
          (BinaryOperator 0x92c9348 <line:696:3, col:39> '<dependent type>' '='
            (DeclRefExpr 0x92c9270 <col:3> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c90c0 '__i' 'iterator':'struct std::_Bit_iterator')
            (CallExpr 0x92c9320 <col:9, col:39> '<dependent type>'
              (UnresolvedLookupExpr 0x92c92a0 <col:9, col:14> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
              (DeclRefExpr 0x92c92d8 <col:19> '_ForwardIterator' lvalue ParmVar 0x92c84e0 '__first' '_ForwardIterator')
              (DeclRefExpr 0x92c92f0 <col:28> '_ForwardIterator' lvalue ParmVar 0x92c8520 '__last' '_ForwardIterator')
              (DeclRefExpr 0x92c9308 <col:36> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c90c0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (BinaryOperator 0x92c94f8 <line:697:3, col:61> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c93a8 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c9370 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c9360 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CallExpr 0x92c94d0 <col:29, col:61> '<dependent type>'
              (UnresolvedLookupExpr 0x92c93f8 <col:29, col:34> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
              (DeclRefExpr 0x92c9430 <col:39> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c84a0 '__position' 'iterator':'struct std::_Bit_iterator')
              (CallExpr 0x92c9498 <col:51, col:55> '<dependent type>'
                (UnresolvedMemberExpr 0x92c9458 <col:51> '<bound member function type>' lvalue))
              (DeclRefExpr 0x92c94b4 <col:58> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92c90c0 '__i' 'iterator':'struct std::_Bit_iterator')))
          (CallExpr 0x92c9558 <line:698:3, col:23> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92c9520 <col:3, col:9> '<dependent type>' lvalue
              (CXXThisExpr 0x92c9510 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
          (BinaryOperator 0x92c97d8 <line:699:3, line:702:32> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c95c0 <line:699:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c9588 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c9578 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (ParenExpr 0x92c97c0 <col:37, line:702:32> '_Bit_type *'
              (BinaryOperator 0x92c97a8 <line:699:38, line:702:31> '_Bit_type *' '+'
                (ImplicitCastExpr 0x92c9798 <line:699:38> '_Bit_type *' <LValueToRValue>
                  (DeclRefExpr 0x92c95f4 <col:38> '_Bit_type *' lvalue Var 0x92c8ff0 '__q' '_Bit_type *'))
                (ParenExpr 0x92c9780 <line:700:12, line:702:31> 'unsigned int'
                  (BinaryOperator 0x92c9768 <line:700:13, line:702:30> 'unsigned int' '/'
                    (ParenExpr 0x92c96f0 <line:700:13, line:701:36> 'unsigned int'
                      (BinaryOperator 0x92c96d8 <line:700:14, line:701:35> 'unsigned int' '-'
                        (BinaryOperator 0x92c9698 <line:700:14, line:701:31> 'unsigned int' '+'
                          (ImplicitCastExpr 0x92c9678 <line:700:14> 'size_type':'unsigned int' <LValueToRValue>
                            (DeclRefExpr 0x92c960c <col:14> 'const size_type':'const unsigned int' lvalue Var 0x92c8ea0 '__len' 'const size_type':'const unsigned int'))
                          (ImplicitCastExpr 0x92c9688 <line:701:16, col:31> 'unsigned int' <IntegralCast>
                            (CXXFunctionalCastExpr 0x92c9660 <col:16, col:31> 'int' functional cast to int <NoOp>
                              (ImplicitCastExpr 0x92c9650 <col:20> 'int' <IntegralCast>
                                (DeclRefExpr 0x92c9634 <col:20> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                        (ImplicitCastExpr 0x92c96c8 <col:35> 'unsigned int' <IntegralCast>
                          (IntegerLiteral 0x92c96b0 <col:35> 'int' 1))))
                    (ImplicitCastExpr 0x92c9758 <line:702:15, col:30> 'unsigned int' <IntegralCast>
                      (CXXFunctionalCastExpr 0x92c9740 <col:15, col:30> 'int' functional cast to int <NoOp>
                        (ImplicitCastExpr 0x92c9730 <col:19> 'int' <IntegralCast>
                          (DeclRefExpr 0x92c9714 <col:19> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
          (BinaryOperator 0x92c98f8 <line:703:3, col:43> '<dependent type>' '='
            (CXXDependentScopeMemberExpr 0x92c9838 <col:3, col:17> '<dependent type>' lvalue
              (CXXDependentScopeMemberExpr 0x92c9800 <col:3, col:9> '<dependent type>' lvalue
                (CXXThisExpr 0x92c97f0 <col:3> 'vector<_Bool, type-parameter-0-0> *' this)))
            (CXXTemporaryObjectExpr 0x92c98c8 <col:28, col:43> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x92c98a8 <col:37> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x92c9878 <col:37> '_Bit_type *' lvalue Var 0x92c8ff0 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x92c98b8 <col:42> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92c9890 <col:42> 'int' 0)))))))
    <<<NULL>>>))

;
    void _M_insert_aux(iterator __position, bool __x) (CompoundStmt 0x92cae50 </usr/include/c++/4.6/bits/vector.tcc:712:5, line:735:5>
  (IfStmt 0x92cae30 <line:713:7, line:734:2>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92c9ed0 <line:713:11, col:57> '<dependent type>'
      (UnresolvedLookupExpr 0x92c9e70 <col:40, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e43a00 0x8e5b2b0 0x8e5d9c0 0x8ea6c60 0x8ec9c50 0x8ec9fc0 0x8ff6360 0x8ff6860 0x8ff6d70 0x910cf00 0x9282780)
      (CXXDependentScopeMemberExpr 0x92c9db8 <col:11, col:35> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92c9d80 <col:11, col:25> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c9d48 <col:11, col:17> '<dependent type>' lvalue
            (CXXThisExpr 0x92c9d38 <col:11> 'vector<_Bool, type-parameter-0-0> *' this))))
      (CXXDependentScopeMemberExpr 0x92c9e38 <col:43, col:57> '<dependent type>' lvalue
        (CXXDependentScopeMemberExpr 0x92c9e00 <col:43, col:49> '<dependent type>' lvalue
          (CXXThisExpr 0x92c9df0 <col:43> 'vector<_Bool, type-parameter-0-0> *' this))))
    (CompoundStmt 0x92ca2a0 <line:714:2, line:719:2>
      (CallExpr 0x92ca0f8 <line:715:4, line:716:36> '<dependent type>'
        (UnresolvedLookupExpr 0x92c9f18 <line:715:4, col:9> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e883e0)
        (DeclRefExpr 0x92c9f4c <col:23> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c9c00 '__position' 'iterator':'struct std::_Bit_iterator')
        (CXXDependentScopeMemberExpr 0x92c9fb0 <col:35, col:49> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92c9f78 <col:35, col:41> '<dependent type>' lvalue
            (CXXThisExpr 0x92c9f68 <col:35> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXOperatorCallExpr 0x92ca0d0 <line:716:9, col:35> '<dependent type>'
          (UnresolvedLookupExpr 0x92ca080 <col:33, <invalid sloc>> '<overloaded function type>' lvalue (ADL) = '1' 0x8e5c9d0 0x8fef0c0 0x901c7d0 0x901d3d0 0x8ff32e0 0x8ff3ae0 0x928b750 0x928d8d0)
          (CXXDependentScopeMemberExpr 0x92ca030 <col:9, col:23> '<dependent type>' lvalue
            (CXXDependentScopeMemberExpr 0x92c9ff8 <col:9, col:15> '<dependent type>' lvalue
              (CXXThisExpr 0x92c9fe8 <col:9> 'vector<_Bool, type-parameter-0-0> *' this)))
          (IntegerLiteral 0x92ca068 <col:35> 'int' 1)))
      (CXXOperatorCallExpr 0x92ca1e0 <line:717:4, col:18> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x92ca1d0 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92ca1b8 <col:16, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9284530 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x92ca170 <col:4, col:5> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x92ca160 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x92ca148 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x92ca138 <col:5> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (DeclRefExpr 0x92ca120 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c9c00 '__position' 'iterator':'struct std::_Bit_iterator')))
        (ImplicitCastExpr 0x92ca1a8 <col:18> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x92ca190 <col:18> '_Bool' lvalue ParmVar 0x92c9c40 '__x' '_Bool')))
      (UnaryOperator 0x92ca288 <line:718:4, col:20> '<dependent type>' prefix '++'
        (CXXDependentScopeMemberExpr 0x92ca250 <col:6, col:20> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92ca218 <col:6, col:12> '<dependent type>' lvalue
            (CXXThisExpr 0x92ca208 <col:6> 'vector<_Bool, type-parameter-0-0> *' this)))))
    (CompoundStmt 0x92cae00 <line:721:2, line:734:2>
      (DeclStmt 0x92ca420 <line:722:4, line:723:63>
        0x92ca2d0 "const size_type __len =
          (CallExpr 0x92ca3f8 <col:6, col:62> '<dependent type>'
            (MemberExpr 0x92ca318 <col:6> '<bound member function type>' ->_M_check_len 0x92964b0
              (CXXThisExpr 0x92ca308 <col:6> 'vector<_Bool, type-parameter-0-0> *' this))
            (CXXFunctionalCastExpr 0x92ca368 <col:19, col:30> 'size_type':'unsigned int' functional cast to size_type <NoOp>
              (ImplicitCastExpr 0x92ca358 <col:29> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92ca340 <col:29> 'int' 1)))
            (StringLiteral 0x92ca3c0 <col:33> 'const char [28]' lvalue "vector<bool>::_M_insert_aux"))")
      (DeclStmt 0x92ca4f8 <line:724:4, col:46>
        0x92ca440 "_Bit_type *__q =
          (CallExpr 0x92ca4d8 <col:22, col:45> '<dependent type>'
            (CXXDependentScopeMemberExpr 0x92ca488 <col:22, col:28> '<dependent type>' lvalue
              (CXXThisExpr 0x92ca478 <col:22> 'vector<_Bool, type-parameter-0-0> *' this))
            (DeclRefExpr 0x92ca4bc <col:40> 'const size_type':'const unsigned int' lvalue Var 0x92ca2d0 '__len' 'const size_type':'const unsigned int'))")
      (DeclStmt 0x92ca6b0 <line:725:4, line:726:24>
        0x92ca510 "iterator __i =
          (CallExpr 0x92ca688 <line:725:19, line:726:23> '<dependent type>'
            (MemberExpr 0x92ca558 <line:725:19> '<bound member function type>' ->_M_copy_aligned 0x92942f0
              (CXXThisExpr 0x92ca548 <col:19> 'vector<_Bool, type-parameter-0-0> *' this))
            (CallExpr 0x92ca5c8 <col:35, col:41> '<dependent type>'
              (UnresolvedMemberExpr 0x92ca588 <col:35> '<bound member function type>' lvalue))
            (DeclRefExpr 0x92ca5e4 <col:44> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c9c00 '__position' 'iterator':'struct std::_Bit_iterator')
            (CXXTemporaryObjectExpr 0x92ca658 <line:726:7, col:22> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
              (ImplicitCastExpr 0x92ca638 <col:16> '_Bit_type *' <LValueToRValue>
                (DeclRefExpr 0x92ca608 <col:16> '_Bit_type *' lvalue Var 0x92ca440 '__q' '_Bit_type *'))
              (ImplicitCastExpr 0x92ca648 <col:21> 'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92ca620 <col:21> 'int' 0))))")
      (CXXOperatorCallExpr 0x92ca828 <line:727:4, col:13> 'struct std::_Bit_reference' lvalue
        (ImplicitCastExpr 0x92ca818 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(*)(_Bool)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92ca800 <col:11, <invalid sloc>> 'struct std::_Bit_reference &(_Bool)' lvalue CXXMethod 0x9284530 'operator=' 'struct std::_Bit_reference &(_Bool)'))
        (CXXOperatorCallExpr 0x92ca7b8 <col:4, col:8> 'reference':'struct std::_Bit_reference'
          (ImplicitCastExpr 0x92ca7a8 <<invalid sloc>> 'reference (*)(void) const' <FunctionToPointerDecay>
            (DeclRefExpr 0x92ca790 <<invalid sloc>> 'reference (void) const' lvalue CXXMethod 0x92899b0 'operator*' 'reference (void) const'))
          (ImplicitCastExpr 0x92ca780 <col:5, col:8> 'const struct std::_Bit_iterator' lvalue <NoOp>
            (CXXOperatorCallExpr 0x92ca758 <col:5, col:8> 'iterator':'struct std::_Bit_iterator'
              (ImplicitCastExpr 0x92ca748 <<invalid sloc>> 'iterator (*)(int)' <FunctionToPointerDecay>
                (DeclRefExpr 0x92ca6f0 <<invalid sloc>> 'iterator (int)' lvalue CXXMethod 0x9289bc0 'operator++' 'iterator (int)'))
              (DeclRefExpr 0x92ca6c0 <col:5> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92ca510 '__i' 'iterator':'struct std::_Bit_iterator')
              (IntegerLiteral 0x92ca6d8 <<invalid sloc>> 'int' 0))))
        (ImplicitCastExpr 0x92ca7f0 <col:13> '_Bool' <LValueToRValue>
          (DeclRefExpr 0x92ca7d8 <col:13> '_Bool' lvalue ParmVar 0x92c9c40 '__x' '_Bool')))
      (BinaryOperator 0x92ca9e8 <line:728:4, col:62> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92ca898 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92ca860 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92ca850 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CallExpr 0x92ca9c0 <col:30, col:62> '<dependent type>'
          (UnresolvedLookupExpr 0x92ca8e8 <col:30, col:35> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e833d0 0x910fd30)
          (DeclRefExpr 0x92ca920 <col:40> 'iterator':'struct std::_Bit_iterator' lvalue ParmVar 0x92c9c00 '__position' 'iterator':'struct std::_Bit_iterator')
          (CallExpr 0x92ca988 <col:52, col:56> '<dependent type>'
            (UnresolvedMemberExpr 0x92ca948 <col:52> '<bound member function type>' lvalue))
          (DeclRefExpr 0x92ca9a4 <col:59> 'iterator':'struct std::_Bit_iterator' lvalue Var 0x92ca510 '__i' 'iterator':'struct std::_Bit_iterator')))
      (CallExpr 0x92caa48 <line:729:4, col:24> '<dependent type>'
        (CXXDependentScopeMemberExpr 0x92caa10 <col:4, col:10> '<dependent type>' lvalue
          (CXXThisExpr 0x92caa00 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
      (BinaryOperator 0x92cacc8 <line:730:4, line:732:30> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92caab0 <line:730:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92caa78 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92caa68 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (ParenExpr 0x92cacb0 <col:38, line:732:30> '_Bit_type *'
          (BinaryOperator 0x92cac98 <line:730:39, line:732:29> '_Bit_type *' '+'
            (ImplicitCastExpr 0x92cac88 <line:730:39> '_Bit_type *' <LValueToRValue>
              (DeclRefExpr 0x92caae4 <col:39> '_Bit_type *' lvalue Var 0x92ca440 '__q' '_Bit_type *'))
            (ParenExpr 0x92cac70 <col:45, line:732:29> 'unsigned int'
              (BinaryOperator 0x92cac58 <line:730:46, line:732:28> 'unsigned int' '/'
                (ParenExpr 0x92cabe0 <line:730:46, line:731:34> 'unsigned int'
                  (BinaryOperator 0x92cabc8 <line:730:47, line:731:33> 'unsigned int' '-'
                    (BinaryOperator 0x92cab88 <line:730:47, line:731:29> 'unsigned int' '+'
                      (ImplicitCastExpr 0x92cab68 <line:730:47> 'size_type':'unsigned int' <LValueToRValue>
                        (DeclRefExpr 0x92caafc <col:47> 'const size_type':'const unsigned int' lvalue Var 0x92ca2d0 '__len' 'const size_type':'const unsigned int'))
                      (ImplicitCastExpr 0x92cab78 <line:731:14, col:29> 'unsigned int' <IntegralCast>
                        (CXXFunctionalCastExpr 0x92cab50 <col:14, col:29> 'int' functional cast to int <NoOp>
                          (ImplicitCastExpr 0x92cab40 <col:18> 'int' <IntegralCast>
                            (DeclRefExpr 0x92cab24 <col:18> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))
                    (ImplicitCastExpr 0x92cabb8 <col:33> 'unsigned int' <IntegralCast>
                      (IntegerLiteral 0x92caba0 <col:33> 'int' 1))))
                (ImplicitCastExpr 0x92cac48 <line:732:13, col:28> 'unsigned int' <IntegralCast>
                  (CXXFunctionalCastExpr 0x92cac30 <col:13, col:28> 'int' functional cast to int <NoOp>
                    (ImplicitCastExpr 0x92cac20 <col:17> 'int' <IntegralCast>
                      (DeclRefExpr 0x92cac04 <col:17> 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>' EnumConstant 0x9283ff0 '_S_word_bit' 'enum std::<anonymous at /usr/include/c++/4.6/bits/stl_bvector.h:67:3>')))))))))
      (BinaryOperator 0x92cade8 <line:733:4, col:44> '<dependent type>' '='
        (CXXDependentScopeMemberExpr 0x92cad28 <col:4, col:18> '<dependent type>' lvalue
          (CXXDependentScopeMemberExpr 0x92cacf0 <col:4, col:10> '<dependent type>' lvalue
            (CXXThisExpr 0x92cace0 <col:4> 'vector<_Bool, type-parameter-0-0> *' this)))
        (CXXTemporaryObjectExpr 0x92cadb8 <col:29, col:44> 'iterator':'struct std::_Bit_iterator''void (_Bit_type *, unsigned int)'
          (ImplicitCastExpr 0x92cad98 <col:38> '_Bit_type *' <LValueToRValue>
            (DeclRefExpr 0x92cad68 <col:38> '_Bit_type *' lvalue Var 0x92ca440 '__q' '_Bit_type *'))
          (ImplicitCastExpr 0x92cada8 <col:43> 'unsigned int' <IntegralCast>
            (IntegerLiteral 0x92cad80 <col:43> 'int' 0)))))))


}
extern "C" {
    extern void *memcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *memmove(void *__dest, const void *__src, size_t __n) throw();
    extern void *memccpy(void *restrict __dest, const void *restrict __src, int __c, size_t __n) throw();
    extern void *memset(void *__s, int __c, size_t __n) throw();
    extern int memcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern void *memchr(const void *__s, int __c, size_t __n) throw();
    extern void *rawmemchr(const void *__s, int __c) throw();
    extern void *memrchr(const void *__s, int __c, size_t __n) throw();
    extern char *strcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *strcat(char *restrict __dest, const char *restrict __src) throw();
    extern char *strncat(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcmp(const char *__s1, const char *__s2) throw();
    extern int strncmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcoll(const char *__s1, const char *__s2) throw();
    extern size_t strxfrm(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strcoll_l(const char *__s1, const char *__s2, __locale_t __l) throw();
    extern size_t strxfrm_l(char *__dest, const char *__src, size_t __n, __locale_t __l) throw();
    extern char *strdup(const char *__s) throw();
    extern char *strndup(const char *__string, size_t __n) throw();
    extern char *strchr(const char *__s, int __c) throw();
    extern char *strrchr(const char *__s, int __c) throw();
    extern char *strchrnul(const char *__s, int __c) throw();
    extern size_t strcspn(const char *__s, const char *__reject) throw();
    extern size_t strspn(const char *__s, const char *__accept) throw();
    extern char *strpbrk(const char *__s, const char *__accept) throw();
    extern char *strstr(const char *__haystack, const char *__needle) throw();
    extern char *strtok(char *restrict __s, const char *restrict __delim) throw();
    extern char *__strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strtok_r(char *restrict __s, const char *restrict __delim, char **restrict __save_ptr) throw();
    extern char *strcasestr(const char *__haystack, const char *__needle) throw();
    extern void *memmem(const void *__haystack, size_t __haystacklen, const void *__needle, size_t __needlelen) throw();
    extern void *__mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern void *mempcpy(void *restrict __dest, const void *restrict __src, size_t __n) throw();
    extern size_t strlen(const char *__s) throw();
    extern size_t strnlen(const char *__string, size_t __maxlen) throw();
    extern char *strerror(int __errnum) throw();
    extern char *strerror_r(int __errnum, char *__buf, size_t __buflen) throw();
    extern char *strerror_l(int __errnum, __locale_t __l) throw();
    extern void __bzero(void *__s, size_t __n) throw();
    extern void bcopy(const void *__src, void *__dest, size_t __n) throw();
    extern void bzero(void *__s, size_t __n) throw();
    extern int bcmp(const void *__s1, const void *__s2, size_t __n) throw();
    extern char *index(const char *__s, int __c) throw();
    extern char *rindex(const char *__s, int __c) throw();
    extern int ffs(int __i) throw();
    extern int ffsl(long __l) throw();
    extern int ffsll(long long __ll) throw();
    extern int strcasecmp(const char *__s1, const char *__s2) throw();
    extern int strncasecmp(const char *__s1, const char *__s2, size_t __n) throw();
    extern int strcasecmp_l(const char *__s1, const char *__s2, __locale_t __loc) throw();
    extern int strncasecmp_l(const char *__s1, const char *__s2, size_t __n, __locale_t __loc) throw();
    extern char *strsep(char **restrict __stringp, const char *restrict __delim) throw();
    extern char *strsignal(int __sig) throw();
    extern char *__stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *stpcpy(char *restrict __dest, const char *restrict __src) throw();
    extern char *__stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern char *stpncpy(char *restrict __dest, const char *restrict __src, size_t __n) throw();
    extern int strverscmp(const char *__s1, const char *__s2) throw();
    extern char *strfry(char *__string) throw();
    extern void *memfrob(void *__s, size_t __n) throw();
    extern char *basename(const char *__filename) throw();
}
extern "C" {
    extern int *__errno_location() throw();
    extern char *program_invocation_name;
    extern char *program_invocation_short_name;
}
typedef int error_t;
extern "C" {
    extern void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function) throw();
    extern void __assert(const char *__assertion, const char *__file, int __line) throw();
}
template <typename T> static inline T maxi(T a, T b) (CompoundStmt 0x92d2d18 <../codeBase/fish-shell-master/util.h:17:1, line:19:1>
  (ReturnStmt 0x92d2d08 <line:18:5, col:18>
    (ConditionalOperator 0x92d2ce8 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x92d2ca0 <col:12, col:14> '<dependent type>' '>'
        (DeclRefExpr 0x92d2c70 <col:12> 'T' lvalue ParmVar 0x92d2b00 'a' 'T')
        (DeclRefExpr 0x92d2c88 <col:14> 'T' lvalue ParmVar 0x92d2b40 'b' 'T'))
      (DeclRefExpr 0x92d2cb8 <col:16> 'T' lvalue ParmVar 0x92d2b00 'a' 'T')
      (DeclRefExpr 0x92d2cd0 <col:18> 'T' lvalue ParmVar 0x92d2b40 'b' 'T'))))

;
template <typename T> static inline T mini(T a, T b) (CompoundStmt 0x92d2f88 <../codeBase/fish-shell-master/util.h:26:1, line:28:1>
  (ReturnStmt 0x92d2f78 <line:27:5, col:18>
    (ConditionalOperator 0x92d2f58 <col:12, col:18> '<dependent type>'
      (BinaryOperator 0x92d2f10 <col:12, col:14> '<dependent type>' '<'
        (DeclRefExpr 0x92d2ee0 <col:12> 'T' lvalue ParmVar 0x92d2d90 'a' 'T')
        (DeclRefExpr 0x92d2ef8 <col:14> 'T' lvalue ParmVar 0x92d2dd0 'b' 'T'))
      (DeclRefExpr 0x92d2f28 <col:16> 'T' lvalue ParmVar 0x92d2d90 'a' 'T')
      (DeclRefExpr 0x92d2f40 <col:18> 'T' lvalue ParmVar 0x92d2dd0 'b' 'T'))))

;
int wcsfilecmp(const wchar_t *a, const wchar_t *b);
long long get_time();
class completion_t;
typedef std::wstring wcstring;
typedef std::vector<wcstring> wcstring_list_t;
enum  {
    ESCAPE_ALL = (ImplicitCastExpr 0x92d3738 <../codeBase/fish-shell-master/common.h:76:18, col:23> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x92d35e0 <col:18, col:23> 'int' '<<'
    (IntegerLiteral 0x92d35b0 <col:18> 'int' 1)
    (IntegerLiteral 0x92d35c8 <col:23> 'int' 0)))
,
    ESCAPE_NO_QUOTED = (ImplicitCastExpr 0x92d3748 <../codeBase/fish-shell-master/common.h:79:24, col:29> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x92d3668 <col:24, col:29> 'int' '<<'
    (IntegerLiteral 0x92d3638 <col:24> 'int' 1)
    (IntegerLiteral 0x92d3650 <col:29> 'int' 1)))
,
    ESCAPE_NO_TILDE = (ImplicitCastExpr 0x92d3758 <../codeBase/fish-shell-master/common.h:82:23, col:28> 'unsigned int' <IntegralCast>
  (BinaryOperator 0x92d36e8 <col:23, col:28> 'int' '<<'
    (IntegerLiteral 0x92d36b8 <col:23> 'int' 1)
    (IntegerLiteral 0x92d36d0 <col:28> 'int' 2)))

};
typedef unsigned int escape_flags_t;
void exit_without_destructors(int code);
extern struct termios shell_modes;
extern wchar_t ellipsis_char;
extern wchar_t omitted_newline_char;
extern int debug_level;
extern char *profile;
extern const wchar_t *program_name;
void show_stackframe();
int fgetws2(wcstring *s, FILE *f);
wcstring str2wcstring(const char *in);
wcstring str2wcstring(const char *in, size_t len);
wcstring str2wcstring(const std::string &in);
char *wcs2str(const wchar_t *in);
char *wcs2str(const wcstring &in);
std::string wcs2string(const wcstring &input);
bool string_prefixes_string(const wcstring &proposed_prefix, const wcstring &value);
bool string_prefixes_string(const wchar_t *proposed_prefix, const wcstring &value);
bool string_suffixes_string(const wcstring &proposed_suffix, const wcstring &value);
bool string_suffixes_string(const wchar_t *proposed_suffix, const wcstring &value);
bool string_prefixes_string_case_insensitive(const wcstring &proposed_prefix, const wcstring &value);
enum fuzzy_match_type_t {
    fuzzy_match_exact = (ImplicitCastExpr 0x92d4c78 <../codeBase/fish-shell-master/common.h:252:25> 'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92d4aa0 <col:25> 'int' 0))
,
    fuzzy_match_prefix,
    fuzzy_match_case_insensitive,
    fuzzy_match_prefix_case_insensitive,
    fuzzy_match_substring,
    fuzzy_match_subsequence_insertions_only,
    fuzzy_match_none
};
static inline bool match_type_requires_full_replacement(fuzzy_match_type_t t) (CompoundStmt 0x92d4ed0 <../codeBase/fish-shell-master/common.h:275:1, line:284:1>
  (SwitchStmt 0x92d4db0 <line:276:5, line:283:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x92d4da0 <line:276:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x92d4d90 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x92d4d74 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x92d4c90 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x92d4e98 <line:277:5, line:283:5>
      (CaseStmt 0x92d4de8 <line:278:9, line:280:20>
        (ImplicitCastExpr 0x92d4ec0 <line:278:14> 'int' <IntegralCast>
          (DeclRefExpr 0x92d4dcc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4ac0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x92d4e20 <line:279:9, line:280:20>
          (ImplicitCastExpr 0x92d4eb0 <line:279:14> 'int' <IntegralCast>
            (DeclRefExpr 0x92d4e08 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4b00 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (ReturnStmt 0x92d4e50 <line:280:13, col:20>
            (CXXBoolLiteralExpr 0x92d4e40 <col:20> '_Bool' false))))
      (DefaultStmt 0x92d4e80 <line:281:9, line:282:20>
        (ReturnStmt 0x92d4e70 <col:13, col:20>
          (CXXBoolLiteralExpr 0x92d4e60 <col:20> '_Bool' true))))))


static inline bool match_type_shares_prefix(fuzzy_match_type_t t) (CompoundStmt 0x92d5190 <../codeBase/fish-shell-master/common.h:288:1, line:299:1>
  (SwitchStmt 0x92d4fe0 <line:289:5, line:298:5>
    <<<NULL>>>
    (ImplicitCastExpr 0x92d4fd0 <line:289:13> 'int' <IntegralCast>
      (ImplicitCastExpr 0x92d4fc0 <col:13> 'enum fuzzy_match_type_t' <LValueToRValue>
        (DeclRefExpr 0x92d4fa4 <col:13> 'enum fuzzy_match_type_t' lvalue ParmVar 0x92d4ef0 't' 'enum fuzzy_match_type_t')))
    (CompoundStmt 0x92d5138 <line:290:5, line:298:5>
      (CaseStmt 0x92d5018 <line:291:9, line:295:20>
        (ImplicitCastExpr 0x92d5180 <line:291:14> 'int' <IntegralCast>
          (DeclRefExpr 0x92d4ffc <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4ac0 'fuzzy_match_exact' 'enum fuzzy_match_type_t'))
        <<<NULL>>>
        (CaseStmt 0x92d5050 <line:292:9, line:295:20>
          (ImplicitCastExpr 0x92d5170 <line:292:14> 'int' <IntegralCast>
            (DeclRefExpr 0x92d5038 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4b00 'fuzzy_match_prefix' 'enum fuzzy_match_type_t'))
          <<<NULL>>>
          (CaseStmt 0x92d5088 <line:293:9, line:295:20>
            (ImplicitCastExpr 0x92d5160 <line:293:14> 'int' <IntegralCast>
              (DeclRefExpr 0x92d5070 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4b40 'fuzzy_match_case_insensitive' 'enum fuzzy_match_type_t'))
            <<<NULL>>>
            (CaseStmt 0x92d50c0 <line:294:9, line:295:20>
              (ImplicitCastExpr 0x92d5150 <line:294:14> 'int' <IntegralCast>
                (DeclRefExpr 0x92d50a8 <col:14> 'enum fuzzy_match_type_t' EnumConstant 0x92d4b80 'fuzzy_match_prefix_case_insensitive' 'enum fuzzy_match_type_t'))
              <<<NULL>>>
              (ReturnStmt 0x92d50f0 <line:295:13, col:20>
                (CXXBoolLiteralExpr 0x92d50e0 <col:20> '_Bool' true))))))
      (DefaultStmt 0x92d5120 <line:296:9, line:297:20>
        (ReturnStmt 0x92d5110 <col:13, col:20>
          (CXXBoolLiteralExpr 0x92d5100 <col:20> '_Bool' false))))))


struct string_fuzzy_match_t {
    struct string_fuzzy_match_t;
    enum fuzzy_match_type_t type;
    size_t match_distance_first;
    size_t match_distance_second;
    string_fuzzy_match_t(enum fuzzy_match_type_t t, size_t distance_first = (ImplicitCastExpr 0x92d56c0 <../codeBase/fish-shell-master/common.h:311:77> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92d56a8 <col:77> 'int' 0))
, size_t distance_second = (ImplicitCastExpr 0x92d56e8 <../codeBase/fish-shell-master/common.h:311:105> 'size_t':'unsigned int' <IntegralCast>
  (IntegerLiteral 0x92d56d0 <col:105> 'int' 0))
);
    int compare(const string_fuzzy_match_t &rhs) const;
};
string_fuzzy_match_t string_fuzzy_match_string(const wcstring &string, const wcstring &match_against, fuzzy_match_type_t limit_type = (DeclRefExpr 0x92d57d4 <../codeBase/fish-shell-master/common.h:318:135> 'enum fuzzy_match_type_t' EnumConstant 0x92d4c40 'fuzzy_match_none' 'enum fuzzy_match_type_t')
);
bool list_contains_string(const wcstring_list_t &list, const wcstring &str);
void assert_is_main_thread(const char *who);
void assert_is_background_thread(const char *who);
void assert_is_locked(void *mutex, const char *who, const char *caller);
wcstring format_size(long long sz);
void format_size_safe(char buff[128], unsigned long long sz);
void debug_safe(int level, const char *msg, const char *param1 = (ImplicitCastExpr 0x92d6180 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6168 <col:14> 'int' 0))
, const char *param2 = (ImplicitCastExpr 0x92d61f0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d61d8 <col:14> 'int' 0))
, const char *param3 = (ImplicitCastExpr 0x92d6260 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6248 <col:14> 'int' 0))
, const char *param4 = (ImplicitCastExpr 0x92d62d0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d62b8 <col:14> 'int' 0))
, const char *param5 = (ImplicitCastExpr 0x92d6340 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6328 <col:14> 'int' 0))
, const char *param6 = (ImplicitCastExpr 0x92d63b0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6398 <col:14> 'int' 0))
, const char *param7 = (ImplicitCastExpr 0x92d6420 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6408 <col:14> 'int' 0))
, const char *param8 = (ImplicitCastExpr 0x92d6490 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6478 <col:14> 'int' 0))
, const char *param9 = (ImplicitCastExpr 0x92d6500 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d64e8 <col:14> 'int' 0))
, const char *param10 = (ImplicitCastExpr 0x92d6570 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6558 <col:14> 'int' 0))
, const char *param11 = (ImplicitCastExpr 0x92d65e0 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d65c8 <col:14> 'int' 0))
, const char *param12 = (ImplicitCastExpr 0x92d6650 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92d6638 <col:14> 'int' 0))
);
void format_long_safe(char buff[128], long val);
void format_long_safe(wchar_t buff[128], long val);
template <typename T = bool> inline bool from_string(const wcstring &x) (CompoundStmt 0x92e6698 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x92e6688 <line:395:5, col:51>
    (BinaryOperator 0x92e6670 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x92e6468 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x92e6430 <col:14, col:22> '_Bool'
          (MemberExpr 0x92e6410 <col:14, col:16> '<bound member function type>' .empty 0x905fa20
            (DeclRefExpr 0x92e63f8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92e6110 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x92e6660 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x92e6618 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x92e6608 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x92e65ec <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x8d9fd30 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x92e6640 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x92e6500 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x92e6650 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x92e65c0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x92e65a0 <col:44, col:46> '<bound member function type>' .at 0x90603b0
                (DeclRefExpr 0x92e6530 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92e6110 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x92e65e0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92e6588 <col:49> 'int' 0)))))))))

template <typename T> T from_string(const wcstring &x) (CompoundStmt 0x92e43d0 <../codeBase/fish-shell-master/common.h:353:1, line:358:1>
  (DeclStmt 0x92d6c88 <line:354:5, col:13>
    0x92d6c50 "T result")
  (DeclStmt 0x92e4350 <line:355:5, col:33>
    0x92d6cf0 "std::wstringstream stream =
      (CXXConstructExpr 0x92e4328 <col:24, col:32> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x92d6d24 <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92d6b10 'x' 'const wcstring &')
        (CXXDefaultArgExpr 0x92e4310 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x92e4390 <line:356:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x92e4360 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x92d6cf0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x92e4378 <col:15> 'T' lvalue Var 0x92d6c50 'result' 'T'))
  (ReturnStmt 0x92e43c0 <line:357:5, col:12>
    (DeclRefExpr 0x92e43a8 <col:12> 'T' lvalue Var 0x92d6c50 'result' 'T')))

;
template <typename T = bool> inline bool from_string(const std::string &x) (CompoundStmt 0x92e60d8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x92e60c8 <line:389:5, col:50>
    (BinaryOperator 0x92e60b0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x92e5eb0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x92e5e90 <col:14, col:22> '_Bool'
          (MemberExpr 0x92e5e70 <col:14, col:16> '<bound member function type>' .empty 0x903a470
            (DeclRefExpr 0x92e5e58 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x92e5b70 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x92e60a0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x92e6048 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x92e6038 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x92e5fdc <col:27> 'char *(const char *, int) throw()' lvalue Function 0x92cd870 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x92e6070 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x92e5efc <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x92e6090 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x92e6080 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x92e5fb0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x92e5f90 <col:43, col:45> '<bound member function type>' .at 0x903ae00
                  (DeclRefExpr 0x92e5f20 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x92e5b70 'x' 'const std::string &'))
                (ImplicitCastExpr 0x92e5fd0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x92e5f78 <col:48> 'int' 0))))))))))

template <typename T> T from_string(const std::string &x) (CompoundStmt 0x92e4dc0 <../codeBase/fish-shell-master/common.h:362:1, line:367:1>
  (DeclStmt 0x92e4618 <line:363:5, col:19>
    0x92e45c0 "T result =
      (CXXUnresolvedConstructExpr 0x92e4600 <col:16, col:18> 'T')")
  (DeclStmt 0x92e4d40 <line:364:5, col:32>
    0x92e4680 "std::stringstream stream =
      (CXXConstructExpr 0x92e4d18 <col:23, col:31> 'std::stringstream':'class std::basic_stringstream<char>''void (const __string_type &, class ios_base::openmode)'
        (DeclRefExpr 0x92e46b4 <col:30> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x92e4480 'x' 'const std::string &')
        (CXXDefaultArgExpr 0x92e4d00 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x92e4d80 <line:365:5, col:15> '<dependent type>' '>>'
    (DeclRefExpr 0x92e4d50 <col:5> 'std::stringstream':'class std::basic_stringstream<char>' lvalue Var 0x92e4680 'stream' 'std::stringstream':'class std::basic_stringstream<char>')
    (DeclRefExpr 0x92e4d68 <col:15> 'T' lvalue Var 0x92e45c0 'result' 'T'))
  (ReturnStmt 0x92e4db0 <line:366:5, col:12>
    (DeclRefExpr 0x92e4d98 <col:12> 'T' lvalue Var 0x92e45c0 'result' 'T')))

;
template <typename T = long> inline wcstring to_string(const long &x) (CompoundStmt 0x92e5b08 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x92e5668 <line:381:5, col:22>
    0x92e5630 "wchar_t buff[128]")
  (CallExpr 0x92e5728 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x92e5718 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x92e56e0 <col:5> 'void (wchar_t *, long)' lvalue Function 0x92d6a30 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x92e5750 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x92e56b0 <col:22> 'wchar_t [128]' lvalue Var 0x92e5630 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x92e5760 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x92e56c8 <col:28> 'const long' lvalue ParmVar 0x92e52d0 'x' 'const long &')))
  (ReturnStmt 0x92e5af8 <line:383:5, col:25>
    (ExprWithCleanups 0x92e5ad8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x92e57e0)
      (CXXTemporary 0x92e5a60)
      (CXXConstructExpr 0x92e5ab0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x92e5aa0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x92e5a90 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x92e5a78 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x92e5a68 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x92e5a60)
                (CXXConstructExpr 0x92e5a38 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x92e57a0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x92e5790 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x92e5778 <col:21> 'wchar_t [128]' lvalue Var 0x92e5630 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x92e5a20 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))

template <typename T = int> inline wcstring to_string(const int &x) (CompoundStmt 0x92e6bd0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x92e6bc0 <line:401:5, col:42>
    (ExprWithCleanups 0x92e6ba0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x92e6b40)
      (CXXConstructExpr 0x92e6b78 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x92e6b68 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x92e6b58 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x92e6b48 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x92e6b40)
              (CallExpr 0x92e6b08 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x92e6af8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92e6aa0 <col:12> 'wcstring (const long &)' lvalue Function 0x92e5370 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x92e4f70 'to_string')))
                (MaterializeTemporaryExpr 0x92e6b28 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x92e6a58 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x92e6a48 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x92e6a38 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x92e6a0c <col:40> 'const int' lvalue ParmVar 0x92e66d0 'x' 'const int &')))))))))))))

template <typename T> wcstring to_string(const T &x) (CompoundStmt 0x92e5270 <../codeBase/fish-shell-master/common.h:371:1, line:375:1>
  (DeclStmt 0x92e50b8 <line:372:5, col:30>
    0x92e4fd0 "std::wstringstream stream =
      (CXXConstructExpr 0x92e5090 <col:24> 'std::wstringstream':'class std::basic_stringstream<wchar_t>''void (class ios_base::openmode)'
        (CXXDefaultArgExpr 0x92e5078 <<invalid sloc>> 'enum std::_Ios_Openmode'))")
  (BinaryOperator 0x92e50f8 <line:373:5, col:15> '<dependent type>' '<<'
    (DeclRefExpr 0x92e50c8 <col:5> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x92e4fd0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')
    (DeclRefExpr 0x92e50e0 <col:15> 'const T' lvalue ParmVar 0x92e4e70 'x' 'const T &'))
  (ReturnStmt 0x92e5260 <line:374:5, col:23>
    (ExprWithCleanups 0x92e5240 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x92e51e0)
      (CXXConstructExpr 0x92e5218 <col:12, col:23> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x92e5208 <col:12, col:23> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x92e51f8 <col:12, col:23> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x92e51e8 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>' (CXXTemporary 0x92e51e0)
              (CXXMemberCallExpr 0x92e5188 <col:12, col:23> '__string_type':'class std::basic_string<wchar_t>'
                (MemberExpr 0x92e5168 <col:12, col:19> '<bound member function type>' .str 0x9254430
                  (ImplicitCastExpr 0x92e51c8 <col:12> 'const class std::basic_stringstream<wchar_t>' lvalue <NoOp>
                    (DeclRefExpr 0x92e5110 <col:12> 'std::wstringstream':'class std::basic_stringstream<wchar_t>' lvalue Var 0x92e4fd0 'stream' 'std::wstringstream':'class std::basic_stringstream<wchar_t>')))))))))))

;
inline wcstring to_string(const long &x) (CompoundStmt 0x92e5b08 <../codeBase/fish-shell-master/common.h:380:1, line:384:1>
  (DeclStmt 0x92e5668 <line:381:5, col:22>
    0x92e5630 "wchar_t buff[128]")
  (CallExpr 0x92e5728 <line:382:5, col:29> 'void'
    (ImplicitCastExpr 0x92e5718 <col:5> 'void (*)(wchar_t *, long)' <FunctionToPointerDecay>
      (DeclRefExpr 0x92e56e0 <col:5> 'void (wchar_t *, long)' lvalue Function 0x92d6a30 'format_long_safe' 'void (wchar_t *, long)'))
    (ImplicitCastExpr 0x92e5750 <col:22> 'wchar_t *' <ArrayToPointerDecay>
      (DeclRefExpr 0x92e56b0 <col:22> 'wchar_t [128]' lvalue Var 0x92e5630 'buff' 'wchar_t [128]'))
    (ImplicitCastExpr 0x92e5760 <col:28> 'long' <LValueToRValue>
      (DeclRefExpr 0x92e56c8 <col:28> 'const long' lvalue ParmVar 0x92e52d0 'x' 'const long &')))
  (ReturnStmt 0x92e5af8 <line:383:5, col:25>
    (ExprWithCleanups 0x92e5ad8 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x92e57e0)
      (CXXTemporary 0x92e5a60)
      (CXXConstructExpr 0x92e5ab0 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x92e5aa0 <col:12, col:25> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x92e5a90 <col:12, col:25> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXFunctionalCastExpr 0x92e5a78 <col:12, col:25> 'wcstring':'class std::basic_string<wchar_t>' functional cast to wcstring <ConstructorConversion>
              (CXXBindTemporaryExpr 0x92e5a68 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x92e5a60)
                (CXXConstructExpr 0x92e5a38 <col:12, col:21> 'wcstring':'class std::basic_string<wchar_t>''void (const wchar_t *, const class std::allocator<wchar_t> &)'
                  (ImplicitCastExpr 0x92e57a0 <col:21> 'const wchar_t *' <NoOp>
                    (ImplicitCastExpr 0x92e5790 <col:21> 'wchar_t *' <ArrayToPointerDecay>
                      (DeclRefExpr 0x92e5778 <col:21> 'wchar_t [128]' lvalue Var 0x92e5630 'buff' 'wchar_t [128]')))
                  (CXXDefaultArgExpr 0x92e5a20 <<invalid sloc>> 'const class std::allocator<wchar_t>':'const class std::allocator<wchar_t>' lvalue))))))))))


inline bool from_string(const std::string &x) (CompoundStmt 0x92e60d8 <../codeBase/fish-shell-master/common.h:388:1, line:390:1>
  (ReturnStmt 0x92e60c8 <line:389:5, col:50>
    (BinaryOperator 0x92e60b0 <col:12, col:50> '_Bool' '&&'
      (UnaryOperator 0x92e5eb0 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x92e5e90 <col:14, col:22> '_Bool'
          (MemberExpr 0x92e5e70 <col:14, col:16> '<bound member function type>' .empty 0x903a470
            (DeclRefExpr 0x92e5e58 <col:14> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x92e5b70 'x' 'const std::string &'))))
      (ImplicitCastExpr 0x92e60a0 <col:27, col:50> '_Bool' <PointerToBoolean>
        (CallExpr 0x92e6048 <col:27, col:50> 'char *'
          (ImplicitCastExpr 0x92e6038 <col:27> 'char *(*)(const char *, int) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x92e5fdc <col:27> 'char *(const char *, int) throw()' lvalue Function 0x92cd870 'strchr' 'char *(const char *, int) throw()'))
          (ImplicitCastExpr 0x92e6070 <col:34> 'const char *' <ArrayToPointerDecay>
            (StringLiteral 0x92e5efc <col:34> 'const char [6]' lvalue "YTyt1"))
          (ImplicitCastExpr 0x92e6090 <col:43, col:49> 'int' <IntegralCast>
            (ImplicitCastExpr 0x92e6080 <col:43, col:49> 'char':'char' <LValueToRValue>
              (CXXMemberCallExpr 0x92e5fb0 <col:43, col:49> 'const char':'const char' lvalue
                (MemberExpr 0x92e5f90 <col:43, col:45> '<bound member function type>' .at 0x903ae00
                  (DeclRefExpr 0x92e5f20 <col:43> 'const std::string':'const class std::basic_string<char>' lvalue ParmVar 0x92e5b70 'x' 'const std::string &'))
                (ImplicitCastExpr 0x92e5fd0 <col:48> 'size_type':'unsigned int' <IntegralCast>
                  (IntegerLiteral 0x92e5f78 <col:48> 'int' 0))))))))))


inline bool from_string(const wcstring &x) (CompoundStmt 0x92e6698 <../codeBase/fish-shell-master/common.h:394:1, line:396:1>
  (ReturnStmt 0x92e6688 <line:395:5, col:51>
    (BinaryOperator 0x92e6670 <col:12, col:51> '_Bool' '&&'
      (UnaryOperator 0x92e6468 <col:12, col:22> '_Bool' prefix '!'
        (CXXMemberCallExpr 0x92e6430 <col:14, col:22> '_Bool'
          (MemberExpr 0x92e6410 <col:14, col:16> '<bound member function type>' .empty 0x905fa20
            (DeclRefExpr 0x92e63f8 <col:14> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92e6110 'x' 'const wcstring &'))))
      (ImplicitCastExpr 0x92e6660 <col:27, col:51> '_Bool' <PointerToBoolean>
        (CallExpr 0x92e6618 <col:27, col:51> 'wchar_t *'
          (ImplicitCastExpr 0x92e6608 <col:27> 'wchar_t *(*)(const wchar_t *, wchar_t) throw()' <FunctionToPointerDecay>
            (DeclRefExpr 0x92e65ec <col:27> 'wchar_t *(const wchar_t *, wchar_t) throw()' lvalue Function 0x8d9fd30 'wcschr' 'wchar_t *(const wchar_t *, wchar_t) throw()'))
          (ImplicitCastExpr 0x92e6640 <col:34> 'const wchar_t *' <ArrayToPointerDecay>
            (StringLiteral 0x92e6500 <col:34> 'const wchar_t [6]' lvalue L"Y\000\000\000T\000\000\000y\000\000\000t\000\000\0001\000\000\000"))
          (ImplicitCastExpr 0x92e6650 <col:44, col:50> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x92e65c0 <col:44, col:50> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x92e65a0 <col:44, col:46> '<bound member function type>' .at 0x90603b0
                (DeclRefExpr 0x92e6530 <col:44> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92e6110 'x' 'const wcstring &'))
              (ImplicitCastExpr 0x92e65e0 <col:49> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92e6588 <col:49> 'int' 0)))))))))


inline wcstring to_string(const int &x) (CompoundStmt 0x92e6bd0 <../codeBase/fish-shell-master/common.h:400:1, line:402:1>
  (ReturnStmt 0x92e6bc0 <line:401:5, col:42>
    (ExprWithCleanups 0x92e6ba0 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
      (CXXTemporary 0x92e6b40)
      (CXXConstructExpr 0x92e6b78 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>''void (const class std::basic_string<wchar_t> &)' elidable
        (MaterializeTemporaryExpr 0x92e6b68 <col:12, col:42> 'const class std::basic_string<wchar_t>' lvalue
          (ImplicitCastExpr 0x92e6b58 <col:12, col:42> 'const class std::basic_string<wchar_t>' <NoOp>
            (CXXBindTemporaryExpr 0x92e6b48 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>' (CXXTemporary 0x92e6b40)
              (CallExpr 0x92e6b08 <col:12, col:42> 'wcstring':'class std::basic_string<wchar_t>'
                (ImplicitCastExpr 0x92e6af8 <col:12> 'wcstring (*)(const long &)' <FunctionToPointerDecay>
                  (DeclRefExpr 0x92e6aa0 <col:12> 'wcstring (const long &)' lvalue Function 0x92e5370 'to_string' 'wcstring (const long &)' (FunctionTemplate 0x92e4f70 'to_string')))
                (MaterializeTemporaryExpr 0x92e6b28 <col:22, col:41> 'const long' lvalue
                  (CXXStaticCastExpr 0x92e6a58 <col:22, col:41> 'long' static_cast<long> <NoOp>
                    (ImplicitCastExpr 0x92e6a48 <col:40> 'long' <IntegralCast>
                      (ImplicitCastExpr 0x92e6a38 <col:40> 'int' <LValueToRValue>
                        (DeclRefExpr 0x92e6a0c <col:40> 'const int' lvalue ParmVar 0x92e66d0 'x' 'const int &')))))))))))))


wchar_t **make_null_terminated_array(const wcstring_list_t &lst);
char **make_null_terminated_array(const std::vector<std::string> &lst);
template <typename CharType_t = wchar_t> class null_terminated_array_t
template <typename CharType_t = char> class null_terminated_array_t
template <typename CharType_t> class null_terminated_array_t {
    class null_terminated_array_t;
    CharType_t **array;
    void operator=(null_terminated_array_t<CharType_t> rhs);
    null_terminated_array_t<CharType_t>(const null_terminated_array_t<CharType_t> &);
    typedef std::vector<std::basic_string<CharType_t> > string_list_t;
    size_t size() const (CompoundStmt 0x92e8418 <../codeBase/fish-shell-master/common.h:420:5, line:430:5>
  (DeclStmt 0x92e8210 <line:421:9, col:23>
    0x92e81b0 "size_t len =
      (ImplicitCastExpr 0x92e8200 <col:22> 'size_t':'unsigned int' <IntegralCast>
        (IntegerLiteral 0x92e81e8 <col:22> 'int' 0))")
  (IfStmt 0x92e83c0 <line:422:9, line:428:9>
    <<<NULL>>>
    (BinaryOperator 0x92e82a0 <line:422:13, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
      (MemberExpr 0x92e8264 <../codeBase/fish-shell-master/common.h:422:13> 'CharType_t **const' lvalue ->array 0x92e7400
        (CXXThisExpr 0x92e8238 <col:13> 'const null_terminated_array_t<CharType_t> *' this))
      (IntegerLiteral 0x92e8288 </usr/include/linux/stddef.h:8:14> 'int' 0))
    (CompoundStmt 0x92e83a8 <../codeBase/fish-shell-master/common.h:423:9, line:428:9>
      (WhileStmt 0x92e8390 <line:424:13, line:427:13>
        <<<NULL>>>
        (BinaryOperator 0x92e8330 <line:424:20, /usr/include/linux/stddef.h:8:14> '<dependent type>' '!='
          (ArraySubscriptExpr 0x92e8300 <../codeBase/fish-shell-master/common.h:424:20, col:29> '<dependent type>' lvalue
            (MemberExpr 0x92e82c8 <col:20> 'CharType_t **const' lvalue ->array 0x92e7400
              (CXXThisExpr 0x92e82b8 <col:20> 'const null_terminated_array_t<CharType_t> *' this))
            (DeclRefExpr 0x92e82e8 <col:26> 'size_t':'unsigned int' lvalue Var 0x92e81b0 'len' 'size_t':'unsigned int'))
          (IntegerLiteral 0x92e8318 </usr/include/linux/stddef.h:8:14> 'int' 0))
        (CompoundStmt 0x92e8378 <../codeBase/fish-shell-master/common.h:425:13, line:427:13>
          (UnaryOperator 0x92e8360 <line:426:17, col:20> 'size_t':'unsigned int' postfix '++'
            (DeclRefExpr 0x92e8348 <col:17> 'size_t':'unsigned int' lvalue Var 0x92e81b0 'len' 'size_t':'unsigned int')))))
    <<<NULL>>>)
  (ReturnStmt 0x92e8408 <line:429:9, col:16>
    (ImplicitCastExpr 0x92e83f8 <col:16> 'size_t':'unsigned int' <LValueToRValue>
      (DeclRefExpr 0x92e83dc <col:16> 'size_t':'unsigned int' lvalue Var 0x92e81b0 'len' 'size_t':'unsigned int'))))


    void free() (CompoundStmt 0x92e8578 <../codeBase/fish-shell-master/common.h:433:5, line:436:5>
  (CallExpr 0x92e84f8 <line:434:9, col:29> 'void'
    (ImplicitCastExpr 0x92e84e8 <col:9, col:11> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x92e844c <col:9, col:11> 'void (void *) throw()' lvalue Function 0x8d5d8b0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x92e84b0 <col:16, col:24> 'void *' <Dependent>
      (MemberExpr 0x92e8480 <col:24> 'CharType_t **' lvalue ->array 0x92e7400
        (CXXThisExpr 0x92e8470 <col:24> 'null_terminated_array_t<CharType_t> *' this))))
  (BinaryOperator 0x92e8560 <line:435:9, /usr/include/linux/stddef.h:8:14> '<dependent type>' '='
    (MemberExpr 0x92e8528 <../codeBase/fish-shell-master/common.h:435:9> 'CharType_t **' lvalue ->array 0x92e7400
      (CXXThisExpr 0x92e8518 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (IntegerLiteral 0x92e8548 </usr/include/linux/stddef.h:8:14> 'int' 0)))


public:
public:
    null_terminated_array_t<CharType_t>() : array((IntegerLiteral 0x92e8590 </usr/include/linux/stddef.h:8:14> 'int' 0)
) (CompoundStmt 0x92e85f0 <../codeBase/fish-shell-master/common.h:439:45, col:47>)


    null_terminated_array_t<CharType_t>(const string_list_t &argv) : array((CallExpr 0x92e8650 <../codeBase/fish-shell-master/common.h:440:64, col:95> '<dependent type>'
  (UnresolvedLookupExpr 0x92e8600 <col:64> '<overloaded function type>' lvalue (ADL) = '1' 0x92e70d0 0x92e6ca0)
  (DeclRefExpr 0x92e8638 <col:91> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x92e7d80 'argv' 'const string_list_t &'))
) (CompoundStmt 0x92e86b0 <../codeBase/fish-shell-master/common.h:441:5, line:442:5>)


    void ~null_terminated_array_t<CharType_t>() (CompoundStmt 0x92e8728 <../codeBase/fish-shell-master/common.h:445:5, line:447:5>
  (CallExpr 0x92e8708 <line:446:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92e86d0 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x92e86c0 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


    void set(const string_list_t &argv) (CompoundStmt 0x92e8878 <../codeBase/fish-shell-master/common.h:450:5, line:453:5>
  (CallExpr 0x92e8788 <line:451:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92e8750 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x92e8740 <col:9> 'null_terminated_array_t<CharType_t> *' this)))
  (BinaryOperator 0x92e8860 <line:452:9, col:54> '<dependent type>' '='
    (CXXDependentScopeMemberExpr 0x92e87b8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x92e87a8 <col:9> 'null_terminated_array_t<CharType_t> *' this))
    (CallExpr 0x92e8840 <col:23, col:54> '<dependent type>'
      (UnresolvedLookupExpr 0x92e87f0 <col:23> '<overloaded function type>' lvalue (ADL) = '1' 0x92e70d0 0x92e6ca0)
      (DeclRefExpr 0x92e8828 <col:50> 'const string_list_t':'const vector<std::basic_string<CharType_t> >' lvalue ParmVar 0x92e7f40 'argv' 'const string_list_t &'))))


    const CharType_t *const *get() const (CompoundStmt 0x92e88d0 <../codeBase/fish-shell-master/common.h:456:5, line:458:5>
  (ReturnStmt 0x92e88c0 <line:457:9, col:16>
    (MemberExpr 0x92e88a0 <col:16> 'CharType_t **const' lvalue ->array 0x92e7400
      (CXXThisExpr 0x92e8890 <col:16> 'const null_terminated_array_t<CharType_t> *' this))))


    void clear() (CompoundStmt 0x92e8950 <../codeBase/fish-shell-master/common.h:461:5, line:463:5>
  (CallExpr 0x92e8930 <line:462:9, col:20> '<dependent type>'
    (CXXDependentScopeMemberExpr 0x92e88f8 <col:9, col:15> '<dependent type>' lvalue
      (CXXThisExpr 0x92e88e8 <col:9> 'null_terminated_array_t<CharType_t> *' this))))


};
void convert_wide_array_to_narrow(const null_terminated_array_t<wchar_t> &arr, null_terminated_array_t<char> *output);
class narrow_string_rep_t {
    class narrow_string_rep_t;
private:
private:
    const char *str;
    narrow_string_rep_t &operator=(const narrow_string_rep_t &);
    narrow_string_rep_t(const narrow_string_rep_t &x);
public:
public:
    void ~narrow_string_rep_t() (CompoundStmt 0x92e9538 <../codeBase/fish-shell-master/common.h:481:5, line:483:5>
  (CallExpr 0x92e9518 <line:482:9, col:25> 'void'
    (ImplicitCastExpr 0x92e9508 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x92e94f0 <col:9> 'void (void *) throw()' lvalue Function 0x8d5d8b0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x92e94d8 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x92e94c8 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x92e94b8 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x92e9488 <col:22> 'const char *' lvalue ->str 0x92e8ed0
            (CXXThisExpr 0x92e9478 <col:22> 'class narrow_string_rep_t *' this)))))))


    narrow_string_rep_t() : str((ImplicitCastExpr 0x92e9568 </usr/include/linux/stddef.h:8:14> 'const char *' <NullToPointer>
  (IntegerLiteral 0x92e9550 <col:14> 'int' 0))
) (CompoundStmt 0x92e95a0 <../codeBase/fish-shell-master/common.h:485:39, col:40>)


    void set(const wcstring &s) (CompoundStmt 0x92e97f0 <../codeBase/fish-shell-master/common.h:488:5, line:491:5>
  (CallExpr 0x92e9688 <line:489:9, col:25> 'void'
    (ImplicitCastExpr 0x92e9678 <col:9> 'void (*)(void *) throw()' <FunctionToPointerDecay>
      (DeclRefExpr 0x92e9660 <col:9> 'void (void *) throw()' lvalue Function 0x8d5d8b0 'free' 'void (void *) throw()'))
    (CStyleCastExpr 0x92e9648 <col:14, col:22> 'void *' <NoOp>
      (ImplicitCastExpr 0x92e9638 <col:22> 'void *' <BitCast>
        (ImplicitCastExpr 0x92e9628 <col:22> 'const char *' <LValueToRValue>
          (MemberExpr 0x92e95f8 <col:22> 'const char *' lvalue ->str 0x92e8ed0
            (CXXThisExpr 0x92e95e8 <col:22> 'class narrow_string_rep_t *' this))))))
  (BinaryOperator 0x92e97d8 <line:490:9, col:32> 'const char *' lvalue '='
    (MemberExpr 0x92e96b8 <col:9> 'const char *' lvalue ->str 0x92e8ed0
      (CXXThisExpr 0x92e96a8 <col:9> 'class narrow_string_rep_t *' this))
    (ImplicitCastExpr 0x92e97c8 <col:15, col:32> 'const char *' <NoOp>
      (CallExpr 0x92e97a8 <col:15, col:32> 'char *'
        (ImplicitCastExpr 0x92e9798 <col:15> 'char *(*)(const wchar_t *)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92e9764 <col:15> 'char *(const wchar_t *)' lvalue Function 0x92d40f0 'wcs2str' 'char *(const wchar_t *)'))
        (CXXMemberCallExpr 0x92e9748 <col:23, col:31> 'const wchar_t *'
          (MemberExpr 0x92e9728 <col:23, col:25> '<bound member function type>' .c_str 0x90717a0
            (DeclRefExpr 0x92e9710 <col:23> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92e92c0 's' 'const wcstring &')))))))


    const char *get() const (CompoundStmt 0x92e9878 <../codeBase/fish-shell-master/common.h:494:5, line:496:5>
  (ReturnStmt 0x92e9868 <line:495:9, col:16>
    (ImplicitCastExpr 0x92e9858 <col:16> 'const char *' <LValueToRValue>
      (MemberExpr 0x92e9838 <col:16> 'const char *const' lvalue ->str 0x92e8ed0
        (CXXThisExpr 0x92e9828 <col:16> 'const class narrow_string_rep_t *' this)))))


};
bool is_forked_child();
class scoped_lock {
    class scoped_lock;
    pthread_mutex_t *lock_obj;
    bool locked;
    scoped_lock &operator=(const scoped_lock &);
    scoped_lock(const scoped_lock &);
public:
public:
    void lock();
    void unlock();
    scoped_lock(pthread_mutex_t &mutex);
    void ~scoped_lock();
};
template <typename T> class scoped_push {
    class scoped_push;
    T *const ref;
    T saved_value;
    bool restored;
public:
public:
    scoped_push<T>(T *r) : ref((DeclRefExpr 0x92ea7bc <../codeBase/fish-shell-master/common.h:534:28> 'T *' lvalue ParmVar 0x92ea440 'r' 'T *')
), saved_value((UnaryOperator 0x92ea830 <../codeBase/fish-shell-master/common.h:534:44, col:45> '<dependent type>' prefix '*'
  (DeclRefExpr 0x92ea818 <col:45> 'T *' lvalue ParmVar 0x92ea440 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x92ea888 <../codeBase/fish-shell-master/common.h:534:58> '_Bool' false)
) (CompoundStmt 0x92ea8e8 <../codeBase/fish-shell-master/common.h:535:5, line:536:5>)


    scoped_push<T>(T *r, const T &new_value) : ref((DeclRefExpr 0x92ea8f8 <../codeBase/fish-shell-master/common.h:538:49> 'T *' lvalue ParmVar 0x92ea550 'r' 'T *')
), saved_value((UnaryOperator 0x92ea960 <../codeBase/fish-shell-master/common.h:538:65, col:66> '<dependent type>' prefix '*'
  (DeclRefExpr 0x92ea948 <col:66> 'T *' lvalue ParmVar 0x92ea550 'r' 'T *'))
), restored((CXXBoolLiteralExpr 0x92ea9b8 <../codeBase/fish-shell-master/common.h:538:79> '_Bool' false)
) (CompoundStmt 0x92eaa78 <../codeBase/fish-shell-master/common.h:539:5, line:541:5>
  (BinaryOperator 0x92eaa60 <line:540:9, col:14> '<dependent type>' '='
    (UnaryOperator 0x92eaa30 <col:9, col:10> '<dependent type>' prefix '*'
      (DeclRefExpr 0x92eaa14 <col:10> 'T *' lvalue ParmVar 0x92ea550 'r' 'T *'))
    (DeclRefExpr 0x92eaa44 <col:14> 'const T' lvalue ParmVar 0x92ea5c0 'new_value' 'const T &')))


    void ~scoped_push<T>() (CompoundStmt 0x92eaaf8 <../codeBase/fish-shell-master/common.h:544:5, line:546:5>
  (CallExpr 0x92eaad8 <line:545:9, col:17> '<dependent type>'
    (MemberExpr 0x92eaab8 <col:9> '<bound member function type>' ->restore 0x92ea760
      (CXXThisExpr 0x92eaaa8 <col:9> 'scoped_push<T> *' this))))


    void restore() (CompoundStmt 0x92eacf8 <../codeBase/fish-shell-master/common.h:549:5, line:555:5>
  (IfStmt 0x92eacd8 <line:550:9, line:554:9>
    <<<NULL>>>
    (UnaryOperator 0x92eab50 <line:550:13, col:14> '_Bool' prefix '!'
      (ImplicitCastExpr 0x92eab40 <col:14> '_Bool' <LValueToRValue>
        (MemberExpr 0x92eab20 <col:14> '_Bool' lvalue ->restored 0x92ea3c0
          (CXXThisExpr 0x92eab10 <col:14> 'scoped_push<T> *' this))))
    (CompoundStmt 0x92eacc0 <line:551:9, line:554:9>
      (CallExpr 0x92eac40 <line:552:13, col:40> '<dependent type>'
        (UnresolvedLookupExpr 0x92eab88 <col:13, col:18> '<overloaded function type>' lvalue (no ADL) = '1' 0x8e3fbf0 0x8e40130 0x8ffb770 0x9283d20)
        (UnaryOperator 0x92eabf8 <col:23, col:24> '<dependent type>' prefix '*'
          (MemberExpr 0x92eabd8 <col:24> 'T *const' lvalue ->ref 0x92ea340
            (CXXThisExpr 0x92eabc8 <col:24> 'scoped_push<T> *' this)))
        (MemberExpr 0x92eac20 <col:29> 'T' lvalue ->saved_value 0x92ea380
          (CXXThisExpr 0x92eac10 <col:29> 'scoped_push<T> *' this)))
      (BinaryOperator 0x92eaca8 <line:553:13, col:24> '<dependent type>' '='
        (MemberExpr 0x92eac78 <col:13> '_Bool' lvalue ->restored 0x92ea3c0
          (CXXThisExpr 0x92eac68 <col:13> 'scoped_push<T> *' this))
        (CXXBoolLiteralExpr 0x92eac98 <col:24> '_Bool' true)))
    <<<NULL>>>))


};
class wcstokenizer {
    class wcstokenizer;
    wchar_t *buffer;
    wchar_t *str;
    wchar_t *state;
    const wcstring sep;
    wcstokenizer &operator=(const wcstokenizer &);
    wcstokenizer(const wcstokenizer &);
public:
public:
    wcstokenizer(const wcstring &s, const wcstring &separator);
    bool next(wcstring &result);
    void ~wcstokenizer();
};
void append_path_component(wcstring &path, const wcstring &component);
wcstring format_string(const wchar_t *format, ...);
wcstring vformat_string(const wchar_t *format, va_list va_orig);
void append_format(wcstring &str, const wchar_t *format, ...);
void append_formatv(wcstring &str, const wchar_t *format, va_list ap);
char **wcsv2strv(const wchar_t *const *in);
wchar_t *wcsvarname(const wchar_t *str);
const wchar_t *wcsfuncname(const wchar_t *str);
int wcsvarchr(wchar_t chr);
int my_wcswidth(const wchar_t *c);
wchar_t *quote_end(const wchar_t *in);
void error_reset();
wcstring wsetlocale(int category, const wchar_t *locale);
bool contains_internal(const wchar_t *needle, ...);
bool contains_internal(const wcstring &needle, ...);
long read_blocked(int fd, void *buf, size_t count);
ssize_t write_loop(int fd, const char *buff, size_t count);
ssize_t read_loop(int fd, void *buff, size_t count);
void debug(int level, const char *msg, ...);
void debug(int level, const wchar_t *msg, ...);
wchar_t *escape(const wchar_t *in, escape_flags_t flags);
wcstring escape_string(const wcstring &in, escape_flags_t flags);
wchar_t *unescape(const wchar_t *in, int escape_special);
bool unescape_string(wcstring &str, int escape_special);
int common_get_width();
int common_get_height();
void common_handle_winch(int signal);
void write_screen(const wcstring &msg, wcstring &buff);
void tokenize_variable_array(const wcstring &val, wcstring_list_t &out);
int create_directory(const wcstring &d);
void bugreport();
double timef();
void set_main_thread();
bool is_main_thread();
void configure_thread_assertions_for_testing();
void setup_fork_guards();
void save_term_foreground_process_group();
void restore_term_foreground_process_group();
bool is_forked_child();
void assert_is_not_forked_child(const char *who);
extern "C" {
    void debug_thread_error();
}
enum  {
    ARG_NON_SWITCH,
    ARG_SWITCH,
    ARG_SKIP
};
bool parser_keywords_is_switch(const wcstring &cmd);
bool parser_keywords_is_subcommand(const wcstring &cmd);
bool parser_keywords_is_reserved(const wcstring &word);
bool parser_keywords_is_block(const wcstring &word);
bool parser_keywords_skip_arguments(const wcstring &cmd);
bool parser_keywords_is_switch(const wcstring &cmd) (CompoundStmt 0x92f69f8 <../codeBase/fish-shell-master/parser_keywords.cpp:18:1, line:31:1>
  (IfStmt 0x92f69d8 <line:19:5, line:30:5>
    <<<NULL>>>
    (CXXOperatorCallExpr 0x92f6718 <line:19:9, col:16> '_Bool'
      (ImplicitCastExpr 0x92f6708 <col:13, <invalid sloc>> '_Bool (*)(const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92f66b8 <col:13, <invalid sloc>> '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)' lvalue Function 0x92f6570 'operator==' '_Bool (const basic_string<wchar_t, struct std::char_traits<wchar_t>, class std::allocator<wchar_t> > &, const wchar_t *)'))
      (DeclRefExpr 0x92f6234 <col:9> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6180 'cmd' 'const wcstring &')
      (ImplicitCastExpr 0x92f66a8 <col:16> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f6290 <col:16> 'const wchar_t [3]' lvalue L"-\000\000\000-\000\000\000")))
    (CompoundStmt 0x92f6778 <line:20:5, line:22:5>
      (ReturnStmt 0x92f6768 <line:21:9, col:16>
        (ImplicitCastExpr 0x92f6758 <col:16> '_Bool' <IntegralToBoolean>
          (DeclRefExpr 0x92f673c <col:16> 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>' EnumConstant 0x92f5d20 'ARG_SKIP' 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>'))))
    (IfStmt 0x92f69b8 <line:23:10, line:30:5>
      <<<NULL>>>
      (BinaryOperator 0x92f6900 <line:23:14, col:44> '_Bool' '&&'
        (UnaryOperator 0x92f67e8 <col:14, col:26> '_Bool' prefix '!'
          (CXXMemberCallExpr 0x92f67c8 <col:16, col:26> '_Bool'
            (MemberExpr 0x92f67a4 <col:16, col:20> '<bound member function type>' .empty 0x905fa20
              (DeclRefExpr 0x92f678c <col:16> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6180 'cmd' 'const wcstring &'))))
        (BinaryOperator 0x92f68e8 <col:31, col:44> '_Bool' '=='
          (ImplicitCastExpr 0x92f68d8 <col:31, col:39> 'wchar_t':'wchar_t' <LValueToRValue>
            (CXXMemberCallExpr 0x92f6890 <col:31, col:39> 'const wchar_t':'const wchar_t' lvalue
              (MemberExpr 0x92f6870 <col:31, col:35> '<bound member function type>' .at 0x90603b0
                (DeclRefExpr 0x92f67fc <col:31> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6180 'cmd' 'const wcstring &'))
              (ImplicitCastExpr 0x92f68b0 <col:38> 'size_type':'unsigned int' <IntegralCast>
                (IntegerLiteral 0x92f6858 <col:38> 'int' 0))))
          (CharacterLiteral 0x92f68c0 <col:44> 'wchar_t'45)))
      (CompoundStmt 0x92f6950 <line:24:5, line:26:5>
        (ReturnStmt 0x92f6940 <line:25:9, col:16>
          (ImplicitCastExpr 0x92f6930 <col:16> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0x92f6918 <col:16> 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>' EnumConstant 0x92f5ce0 'ARG_SWITCH' 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>'))))
      (CompoundStmt 0x92f69a0 <line:28:5, line:30:5>
        (ReturnStmt 0x92f6990 <line:29:9, col:16>
          (ImplicitCastExpr 0x92f6980 <col:16> '_Bool' <IntegralToBoolean>
            (DeclRefExpr 0x92f6964 <col:16> 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>' EnumConstant 0x92f5ca0 'ARG_NON_SWITCH' 'enum <anonymous at ../codeBase/fish-shell-master/parser_keywords.h:12:1>')))))))


bool parser_keywords_skip_arguments(const wcstring &cmd) (CompoundStmt 0x92f6ca8 <../codeBase/fish-shell-master/parser_keywords.cpp:34:1, line:38:1>
  (ReturnStmt 0x92f6c98 <line:35:5, ../codeBase/fish-shell-master/common.h:196:71>
    (CallExpr 0x92f6c48 <col:29, col:71> '_Bool'
      (ImplicitCastExpr 0x92f6c38 <col:29> '_Bool (*)(const wcstring &, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92f6be8 <col:29> '_Bool (const wcstring &, ...)' lvalue Function 0x92f40f0 'contains_internal' '_Bool (const wcstring &, ...)'))
      (DeclRefExpr 0x92f6b10 <../codeBase/fish-shell-master/parser_keywords.cpp:35:21> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6a20 'cmd' 'const wcstring &')
      (ImplicitCastExpr 0x92f6c78 <line:36:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f6b70 <col:21> 'const wchar_t [5]' lvalue L"e\000\000\000l\000\000\000s\000\000\000e\000\000\000"))
      (ImplicitCastExpr 0x92f6c88 <line:37:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f6b9c <col:21> 'const wchar_t [6]' lvalue L"b\000\000\000e\000\000\000g\000\000\000i\000\000\000n\000\000\000"))
      (IntegerLiteral 0x92f6bd0 </usr/include/linux/stddef.h:8:14> 'int' 0))))


bool parser_keywords_is_subcommand(const wcstring &cmd) (CompoundStmt 0x92f71c8 <../codeBase/fish-shell-master/parser_keywords.cpp:42:1, line:55:1>
  (ReturnStmt 0x92f71b8 <line:44:5, ../codeBase/fish-shell-master/common.h:196:71>
    (BinaryOperator 0x92f71a0 <../codeBase/fish-shell-master/parser_keywords.cpp:44:12, ../codeBase/fish-shell-master/common.h:196:71> '_Bool' '||'
      (CallExpr 0x92f6e38 <../codeBase/fish-shell-master/parser_keywords.cpp:44:12, col:46> '_Bool'
        (ImplicitCastExpr 0x92f6e28 <col:12> '_Bool (*)(const wcstring &)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92f6dd4 <col:12> '_Bool (const wcstring &)' lvalue Function 0x92f6a70 'parser_keywords_skip_arguments' '_Bool (const wcstring &)'))
        (DeclRefExpr 0x92f6dbc <col:43> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6cd0 'cmd' 'const wcstring &'))
      (CallExpr 0x92f70d8 <../codeBase/fish-shell-master/common.h:196:29, col:71> '_Bool'
        (ImplicitCastExpr 0x92f70c8 <col:29> '_Bool (*)(const wcstring &, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92f70b0 <col:29> '_Bool (const wcstring &, ...)' lvalue Function 0x92f40f0 'contains_internal' '_Bool (const wcstring &, ...)'))
        (DeclRefExpr 0x92f6e90 <../codeBase/fish-shell-master/parser_keywords.cpp:45:21> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f6cd0 'cmd' 'const wcstring &')
        (ImplicitCastExpr 0x92f7120 <line:46:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f6ef0 <col:21> 'const wchar_t [8]' lvalue L"c\000\000\000o\000\000\000m\000\000\000m\000\000\000a\000\000\000n\000\000\000d\000\000\000"))
        (ImplicitCastExpr 0x92f7130 <line:47:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f6f28 <col:21> 'const wchar_t [8]' lvalue L"b\000\000\000u\000\000\000i\000\000\000l\000\000\000t\000\000\000i\000\000\000n\000\000\000"))
        (ImplicitCastExpr 0x92f7140 <line:48:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f6f60 <col:21> 'const wchar_t [6]' lvalue L"w\000\000\000h\000\000\000i\000\000\000l\000\000\000e\000\000\000"))
        (ImplicitCastExpr 0x92f7150 <line:49:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f6f90 <col:21> 'const wchar_t [5]' lvalue L"e\000\000\000x\000\000\000e\000\000\000c\000\000\000"))
        (ImplicitCastExpr 0x92f7160 <line:50:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f6fbc <col:21> 'const wchar_t [3]' lvalue L"i\000\000\000f\000\000\000"))
        (ImplicitCastExpr 0x92f7170 <line:51:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7020 <col:21> 'const wchar_t [4]' lvalue L"a\000\000\000n\000\000\000d\000\000\000"))
        (ImplicitCastExpr 0x92f7180 <line:52:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7048 <col:21> 'const wchar_t [3]' lvalue L"o\000\000\000r\000\000\000"))
        (ImplicitCastExpr 0x92f7190 <line:53:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f706c <col:21> 'const wchar_t [4]' lvalue L"n\000\000\000o\000\000\000t\000\000\000"))
        (IntegerLiteral 0x92f7098 </usr/include/linux/stddef.h:8:14> 'int' 0)))))


bool parser_keywords_is_block(const wcstring &word) (CompoundStmt 0x92f7598 <../codeBase/fish-shell-master/parser_keywords.cpp:58:1, line:66:1>
  (ReturnStmt 0x92f7588 <line:59:5, ../codeBase/fish-shell-master/common.h:196:71>
    (CallExpr 0x92f74e8 <col:29, col:71> '_Bool'
      (ImplicitCastExpr 0x92f74d8 <col:29> '_Bool (*)(const wcstring &, ...)' <FunctionToPointerDecay>
        (DeclRefExpr 0x92f74c0 <col:29> '_Bool (const wcstring &, ...)' lvalue Function 0x92f40f0 'contains_internal' '_Bool (const wcstring &, ...)'))
      (DeclRefExpr 0x92f72e0 <../codeBase/fish-shell-master/parser_keywords.cpp:59:21> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f71f0 'word' 'const wcstring &')
      (ImplicitCastExpr 0x92f7528 <line:60:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f72f8 <col:21> 'const wchar_t [4]' lvalue L"f\000\000\000o\000\000\000r\000\000\000"))
      (ImplicitCastExpr 0x92f7538 <line:61:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f7320 <col:21> 'const wchar_t [6]' lvalue L"w\000\000\000h\000\000\000i\000\000\000l\000\000\000e\000\000\000"))
      (ImplicitCastExpr 0x92f7548 <line:62:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f7350 <col:21> 'const wchar_t [3]' lvalue L"i\000\000\000f\000\000\000"))
      (ImplicitCastExpr 0x92f7558 <line:63:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f73c0 <col:21> 'const wchar_t [9]' lvalue L"f\000\000\000u\000\000\000n\000\000\000c\000\000\000t\000\000\000i\000\000\000o\000\000\000n\000\000\000"))
      (ImplicitCastExpr 0x92f7568 <line:64:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f7440 <col:21> 'const wchar_t [7]' lvalue L"s\000\000\000w\000\000\000i\000\000\000t\000\000\000c\000\000\000h\000\000\000"))
      (ImplicitCastExpr 0x92f7578 <line:65:21> 'const wchar_t *' <ArrayToPointerDecay>
        (StringLiteral 0x92f7474 <col:21> 'const wchar_t [6]' lvalue L"b\000\000\000e\000\000\000g\000\000\000i\000\000\000n\000\000\000"))
      (IntegerLiteral 0x92f74a8 </usr/include/linux/stddef.h:8:14> 'int' 0))))


bool parser_keywords_is_reserved(const wcstring &word) (CompoundStmt 0x92f7a38 <../codeBase/fish-shell-master/parser_keywords.cpp:69:1, line:79:1>
  (ReturnStmt 0x92f7a28 <line:70:5, ../codeBase/fish-shell-master/common.h:196:71>
    (BinaryOperator 0x92f7a10 <../codeBase/fish-shell-master/parser_keywords.cpp:70:12, ../codeBase/fish-shell-master/common.h:196:71> '_Bool' '||'
      (BinaryOperator 0x92f77a8 <../codeBase/fish-shell-master/parser_keywords.cpp:70:12, line:71:46> '_Bool' '||'
        (CallExpr 0x92f76f0 <line:70:12, col:41> '_Bool'
          (ImplicitCastExpr 0x92f76e0 <col:12> '_Bool (*)(const wcstring &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x92f76c4 <col:12> '_Bool (const wcstring &)' lvalue Function 0x92f7240 'parser_keywords_is_block' '_Bool (const wcstring &)'))
          (DeclRefExpr 0x92f76ac <col:37> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f75c0 'word' 'const wcstring &'))
        (CallExpr 0x92f7788 <line:71:12, col:46> '_Bool'
          (ImplicitCastExpr 0x92f7778 <col:12> '_Bool (*)(const wcstring &)' <FunctionToPointerDecay>
            (DeclRefExpr 0x92f775c <col:12> '_Bool (const wcstring &)' lvalue Function 0x92f6d20 'parser_keywords_is_subcommand' '_Bool (const wcstring &)'))
          (DeclRefExpr 0x92f7744 <col:42> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f75c0 'word' 'const wcstring &')))
      (CallExpr 0x92f7970 <../codeBase/fish-shell-master/common.h:196:29, col:71> '_Bool'
        (ImplicitCastExpr 0x92f7960 <col:29> '_Bool (*)(const wcstring &, ...)' <FunctionToPointerDecay>
          (DeclRefExpr 0x92f7948 <col:29> '_Bool (const wcstring &, ...)' lvalue Function 0x92f40f0 'contains_internal' '_Bool (const wcstring &, ...)'))
        (DeclRefExpr 0x92f77f8 <../codeBase/fish-shell-master/parser_keywords.cpp:72:21> 'const wcstring':'const class std::basic_string<wchar_t>' lvalue ParmVar 0x92f75c0 'word' 'const wcstring &')
        (ImplicitCastExpr 0x92f79b0 <line:73:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7810 <col:21> 'const wchar_t [4]' lvalue L"e\000\000\000n\000\000\000d\000\000\000"))
        (ImplicitCastExpr 0x92f79c0 <line:74:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7838 <col:21> 'const wchar_t [5]' lvalue L"c\000\000\000a\000\000\000s\000\000\000e\000\000\000"))
        (ImplicitCastExpr 0x92f79d0 <line:75:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7864 <col:21> 'const wchar_t [5]' lvalue L"e\000\000\000l\000\000\000s\000\000\000e\000\000\000"))
        (ImplicitCastExpr 0x92f79e0 <line:76:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7890 <col:21> 'const wchar_t [7]' lvalue L"r\000\000\000e\000\000\000t\000\000\000u\000\000\000r\000\000\000n\000\000\000"))
        (ImplicitCastExpr 0x92f79f0 <line:77:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f78c4 <col:21> 'const wchar_t [9]' lvalue L"c\000\000\000o\000\000\000n\000\000\000t\000\000\000i\000\000\000n\000\000\000u\000\000\000e\000\000\000"))
        (ImplicitCastExpr 0x92f7a00 <line:78:21> 'const wchar_t *' <ArrayToPointerDecay>
          (StringLiteral 0x92f7900 <col:21> 'const wchar_t [6]' lvalue L"b\000\000\000r\000\000\000e\000\000\000a\000\000\000k\000\000\000"))
        (IntegerLiteral 0x92f7930 </usr/include/linux/stddef.h:8:14> 'int' 0)))))


